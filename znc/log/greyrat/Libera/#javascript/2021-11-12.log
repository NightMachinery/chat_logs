[00:00:01] <silly> renlo, object1.method2(), object1.method2() (uses the...
[00:00:05] <renlo> the diff between `method` and `method1` btw is this: let's say you have 100000000 objects, should you really create a separate function for every single one? using `method`, you will have 1000000000 different functions created. Using `method2` there is only one function and it's shared between the 1000000000 objects
[00:00:06] <silly> renlo, object1.method2(), object2.method2() (uses the...
[00:01:18] <renlo> the 'sharing' part of this is called a 'prototype'
[00:01:26] *** Joins: teut (~teut@223.182.71.245)
[00:01:41] <teut> how to update a npm module by github repo?
[00:01:49] <renlo> src: this probably covers it: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object_prototypes
[00:02:15] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Ping timeout: 250 seconds)
[00:02:40] <ljharb> !eloquent @ src
[00:02:40] <jellobot> src, Eloquent JavaScript is a comprehensive introductory Web-based book with examples and a built-in interpreter. http://eloquentjavascript.net/
[00:02:54] <ljharb> teut: it’s best not to have git deps
[00:03:10] <teut> https://github.com/opensource9ja/danfojs/pull/23
[00:03:18] <teut> I am ffacing this bug
[00:03:32] <src> ljharb, I am going through Eloquent JS and JS - the definitive guide side by side ; first is too steep at places, second has no exercises but is detailed and great for looking stuff up
[00:03:34] <teut> I installed this package yesterday only
[00:03:41] <gehn> src, I can make this simpler for you: the style you see for `method2` is the only one you will and should probably be using most of the time
[00:03:54] <gehn> if you don't know why you might want a static method yet, don't worry about it
[00:04:04] <ljharb> src: I’d suggest sticking with eloquent tbh, even if it’s too steep for you
[00:04:20] <renlo> eloquent is very good, take your time with it, digest it, but it is the best
[00:04:31] <ljharb> teut: that’s released in a bunch of versions already
[00:04:41] <src> I'm sticking with both not abandoning either
[00:04:53] *** Quits: h4b17s (~h4b17s@94.140.9.188) (Quit: WeeChat 3.3)
[00:05:00] <renlo> src we can be your study group :P
[00:05:06] <src> I love the code examples etc in eloquent JS so I like it and JS-TDG is very good explaining
[00:05:09] <teut> still dont know why I m facing that issue
[00:05:14] <src> though I'm obviously still struggling here and there
[00:06:33] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[00:06:39] <ljharb> teut: do you have the latest version installed
[00:06:45] <teut> https://ibb.co/yN8Ztz6
[00:07:04] <src> I guess my main confusion was method and method3 should be the same, but one is literally in the constructor, therefore 'passed' when creating an object, which is different from a static method that is a property of the constructor...
[00:07:17] <teut>   "dependencies": {    "danfojs-node": "^0.3.3"}
[00:07:48] <teut> installed from npm yesterday , should be latest
[00:08:07] <ljharb> src: the constructor constructs the instance, so everything in it is per instance
[00:08:15] <ljharb> teut: then I’d file a new issue
[00:09:03] <teut> ok, I will do that
[00:09:05] <teut> thanks
[00:09:11] <src> I'm an idiot
[00:09:23] <src> of course the name constructor is a keyword and not the prototype name itself right?
[00:09:38] <src> so constructor protoype has nothing to do with the constructor function inside the class basically?
[00:09:41] *** Quits: zeromule (~eric@2601:602:8d80:4e50:808c:5edb:c14c:6907) (Ping timeout: 245 seconds)
[00:09:46] <teut> https://github.com/opensource9ja/danfojs/issues/30#issuecomment-697370695
[00:10:03] <teut> I think their eval needs much more tests
[00:10:10] <src> I guess that clears it up largely
[00:12:34] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[00:19:42] *** Quits: nomic (~nomic@185.192.69.7) (Quit: Leaving)
[00:20:23] *** Joins: yaalon (~yaalon@24.243.76.137)
[00:20:52] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[00:22:00] *** Joins: zeromule (~eric@2601:602:8d80:4e50:713d:6e3:aafe:1b14)
[00:22:14] *** Joins: guideX (~guideX@user/guidex)
[00:22:15] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[00:24:38] *** Quits: yaalon (~yaalon@24.243.76.137) (Ping timeout: 246 seconds)
[00:25:54] *** Quits: AtomicInteger (~primamate@p200300ee170ca500e482c2a05d384488.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[00:26:02] *** Quits: zeromule (~eric@2601:602:8d80:4e50:713d:6e3:aafe:1b14) (Ping timeout: 240 seconds)
[00:26:32] <ljharb> src: the constructor property is different from the constructor function, yes
[00:29:31] <src> I actually knew that... but looking at `c.constructor.method3()` and looking at the class to check what's going on
[00:29:46] <src> My mind just made the association and it stuck and I was confused
[00:30:21] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[00:30:33] *** Joins: nomic (~nomic@185.192.69.7)
[00:31:20] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[00:33:36] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[00:33:53] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 250 seconds)
[00:35:34] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[00:35:57] <ljharb> src: the constructor property on instances isn’t a reliable thing; it’s best to forget it’s there
[00:38:29] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:39:05] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 250 seconds)
[00:43:52] *** Joins: derjanni (~Hans@ip-88-153-100-48.hsi04.unitymediagroup.de)
[00:46:13] <gehn> src, should be the same as what? there's a pretty important difference between the concept of a static method on a class vs, well, one that's not static
[00:46:45] <gehn> I would suggest again that if you don't yet understand what a static method is and why you might want one that you should ignore static for now
[00:46:59] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[00:47:14] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[00:47:35] <gehn> in fact, IMO, there is never a good reason to use a static method in JS. in some other languages there might be a reason, even then I mostly disagree with ever using static methods in any language as a default policy
[00:49:08] <gehn> the fact that angular actively encourages "everything is a public static method" is one of the many horrible things about angular
[00:50:19] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:cc04:cff1:1c63:c26a)
[00:52:00] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:cc04:cff1:1c63:c26a) (Client Quit)
[00:54:44] <ljharb> what? Most things should be static
[00:54:57] *** Joins: zeromule (~eric@2601:602:8d80:4e50:713d:6e3:aafe:1b14)
[00:55:02] <ljharb> the only things that should be instance methods are things that act on only one instance and also use `this`
[00:57:20] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[01:02:10] *** Joins: hanaan (~naan@user/naan)
[01:02:16] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[01:02:47] *** Quits: zeromule (~eric@2601:602:8d80:4e50:713d:6e3:aafe:1b14) (Ping timeout: 264 seconds)
[01:03:27] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[01:06:18] *** Joins: zebrag (~chris@user/zebrag)
[01:07:00] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[01:07:15] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[01:07:18] *** Quits: ThePhilgrim (~thephilgr@151.41.185.44) ()
[01:10:47] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f6e3:7400:d4e2:b355:67fe:933c)
[01:10:55] *** Joins: rustyshackleford (uid236774@helmsley.irccloud.com)
[01:12:52] *** hanaan is now known as Naan
[01:13:02] *** Quits: sheetjs_ (~sheetjs@pool-173-54-145-7.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[01:13:08] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[01:13:30] *** Quits: zer0bitz (~zer0bitz@2001:2003:f6e3:7400:9c57:4715:1ac5:a700) (Ping timeout: 268 seconds)
[01:13:49] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[01:17:48] *** Joins: stenno (~stenno@user/stenno)
[01:18:10] *** Joins: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[01:18:24] <daoudr> I am trying to inherit the play() to the Track class. it is not working. may you pinpoint to me the problem? player.play() works but driverTrack.play() gives an error .title is not defined https://pastebin.com/g5NJ7F2B
[01:18:57] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[01:21:02] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Ping timeout: 240 seconds)
[01:22:05] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[01:23:34] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d)
[01:25:18] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[01:25:42] *** Joins: voltage_ (voltage@user/voltage)
[01:29:54] <guideX> this only works when the objects are visible on the screen https://pastebin.com/raw/A4n2KCDr how do I rerun it on command?
[01:30:28] <guideX> I tried like, putting it in a standard function, and it says "). isotope is not a function
[01:30:44] <earendel> daoudr: player.play(track)
[01:32:36] <daoudr> play() does not have a parameter
[01:33:30] <cthulchu_> you can do .then() on sync functions, can't you?
[01:33:33] <earendel> it could have one if you like to play a certain track, as it seems you do.
[01:33:56] *** Joins: vladoski (~vladoski@2001:b07:add:d406:3c91:4335:8b8a:b120)
[01:35:27] <cthulchu_> so if I have three functions, say a(), b() and c(). And on click I want to run a().then(b). And then I add one more click listener and run c() on it. Can I reliably expect that the order of execution will be a, c, b? All functions are sync.
[01:38:44] *** Joins: kmh (~kmh@2a00:6020:5004:6800:7cf7:8db7:6da0:96f1)
[01:38:57] *** Joins: zeromule (~eric@2601:602:8d80:4e50:713d:6e3:aafe:1b14)
[01:39:51] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f6e3:7400:d4e2:b355:67fe:933c) (Read error: Connection reset by peer)
[01:39:54] *** Quits: teut (~teut@223.182.71.245) (Quit: Client closed)
[01:40:01] *** Joins: sam_1 (~sam_1@87.51.251.118)
[01:40:11] <earendel> as playlist is no actor in your model. play() would start/continue playing the current track. player.play(track) could add the track to the list, make it the current track and play. or whatever. there is no inheritance relationship between player and track, since track is not special form of player. alternatively to inheritence you can have an interface, a list of properties and mehtods which objects /classes have to implement. it would allow
[01:40:11] <earendel> you to create lists of dfferent objects, while guaranteeing you some accessors on all of them.
[01:40:40] *** Quits: bogdaniel (~bogdaniel@89.137.238.168) (Quit: Client closed)
[01:40:54] <poiqwepoiqwe> cthulchu_ https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then#chaining
[01:41:13] <cthulchu_> that's not very useful
[01:41:53] *** Joins: sebastorama_ (~sebastora@190.83.56.68)
[01:41:54] <poiqwepoiqwe> so you're asking if you click for c() and b hasnt resolved will the order be a(), c(), b()
[01:42:12] *** Quits: harpia (~harpia@2804:2aec:205:1400:1a8b:e47a:9188:7f77) (Quit: harpia)
[01:42:15] <ldlework> Anyone handy with NextJS/WASM? I'm trying to create a component that uses a WASM compiled version of graphviz but I'm having trouble getting Next to import the wasm.
[01:42:28] *** Joins: falafel (~falafel@2603-8000-d800-688c-2092-0e6f-020e-f136.res6.spectrum.com)
[01:42:30] <ldlework> The WASM is inside @hpcc/wasm a dependency
[01:42:34] <cthulchu_> poiqwepoiqwe, no, that's not what I'm asking...
[01:42:47] <earendel> however, the methods in oop, are functions which affect inner state (and by principle its only methods, and the inner state is hidden to the outside world).. so its always car.stop() and not person.stop(car)
[01:43:13] *** Quits: eblip (~eb0t@90.209.246.132) (Ping timeout: 250 seconds)
[01:43:42] <earendel> player.play(track) would change the state state of player.. like affecting currentTrack or so.
[01:43:46] <poiqwepoiqwe> really? that's what i'm reading
[01:44:47] <cthulchu_> ok, we have a CTA and two click listeners on it. One runs a().then(b), the other runs c(). All funcitons are sync despite the promise. In which order will they execute.
[01:46:02] *** Quits: sebastorama_ (~sebastora@190.83.56.68) (Ping timeout: 240 seconds)
[01:46:03] <earendel> a, c, b
[01:46:10] <cthulchu_> reliably?
[01:46:18] <cthulchu_> sorry, I mean, reliably having b last
[01:47:13] <cthulchu_> so, like, the Promise will let everyone pass b even though a is not async really and there's still time to fit b there.
[01:47:31] <systemfault> Why are you using a promise if it's not async?
[01:47:46] <cthulchu_> cuz that's how I suspect GTM does it's tag sequencing
[01:47:47] <earendel> then will always start earliest on the next evet loop. while event listeners are dispatched to in the same. unless its a custom eventtarget classs that doesn't just loop through the assigned callbacks invoking them immediately
[01:47:50] <systemfault> Just doing Promise.resolve('foo') is going to queue up a microtask
[01:47:53] <systemfault> Hmm
[01:48:14] <cthulchu_> earendel, oh, you're wonderful. many thanks
[01:48:15] <k4rt0ff31ch33t4h> isn't it a, b, c?
[01:48:23] <k4rt0ff31ch33t4h> i dont think promise does such things
[01:48:49] <cthulchu_> I suspected it did :) and it's cool that it does.
[01:48:49] <k4rt0ff31ch33t4h> promises themselves do not change the order of execution
[01:48:59] <cthulchu_> oh they do :)
[01:49:04] <k4rt0ff31ch33t4h>  (new Promise(()=>{console.log('a')})).then(new Promise(()=>console.log('b')));new Promise(()=>console.log('c'));
[01:49:07] <k4rt0ff31ch33t4h> a,b,c
[01:49:31] <cthulchu_> c is not a promise
[01:49:35] <earendel> wait. it could also be c a b
[01:49:41] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[01:49:46] <cthulchu_> cab is perfectly fine too
[01:49:52] <k4rt0ff31ch33t4h> (new Promise(()=>{console.log('a')})).then(new Promise(()=>console.log('b')));console.log('c');
[01:49:52] <cthulchu_> I just need a confirmation that b is last
[01:50:00] <k4rt0ff31ch33t4h> still a, b, c
[01:50:08] <earendel> because a is a promise too. but only if c is not a promise
[01:50:28] <poiqwepoiqwe> dont make promises you cant keep
[01:50:36] <k4rt0ff31ch33t4h> :)
[01:50:42] <cthulchu_> hehe
[01:50:56] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d) (Quit: Client closed)
[01:51:13] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d)
[01:51:20] *** Quits: vladoski (~vladoski@2001:b07:add:d406:3c91:4335:8b8a:b120) (Quit: Textual IRC Client: www.textualapp.com)
[01:51:54] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Read error: Connection reset by peer)
[01:53:22] <earendel> if there is no race depenency between c and a or b it shouldn't be problem. you can Promise.all([a,b]).then(c) if a and b should process immediately and c should start after a and b complete (in whatever order)
[01:53:48] *** Joins: falafel_ (~falafel@2603-8000-d800-688c-2092-0e6f-020e-f136.res6.spectrum.com)
[01:53:58] <cthulchu_> the problem is that c is not related to them at all
[01:54:15] <cthulchu_> so k4rt0ff31ch33t4h poses a good question there. (new Promise(()=>{console.log('a')})).then(console.log('b'));console.log('c');
[01:54:25] *** Joins: pavonia (~user@user/siracusa)
[01:54:28] <earendel> usually subscribers to events, don't know of each other, and the eventtarget (the dispatcher) has no knowledge of its subscribers.
[01:54:33] <cthulchu_> why is it a b c always
[01:55:17] <earendel> which allows you to add function calls, on time, without manipulating the eventtarget class (adding invoking lines to it)
[01:56:44] *** Joins: jcrooks (~jcrooks@c-73-131-109-248.hsd1.sc.comcast.net)
[01:57:23] *** Quits: falafel (~falafel@2603-8000-d800-688c-2092-0e6f-020e-f136.res6.spectrum.com) (Ping timeout: 264 seconds)
[01:57:29] *** Quits: sfields (~sfields@2605:a601:adea:7a00:a73:feb1:e03c:b9f5) (Quit: Leaving)
[01:59:26] *** Quits: kmh (~kmh@2a00:6020:5004:6800:7cf7:8db7:6da0:96f1) (Read error: Connection reset by peer)
[01:59:38] *** Joins: kmh (~kmh@2a00:6020:5004:6800:7cf7:8db7:6da0:96f1)
[01:59:38] <k4rt0ff31ch33t4h> cthulchu_: sorry I was super tired i just noted that i did not even resolved and just missed a fuxction in the then
[02:00:10] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:00:16] <k4rt0ff31ch33t4h> of cource my promises were executed in order of declaration:)
[02:00:27] <earendel> note that EventTarget is the most rudimentary class in the DOM, means every element, every node inherits from it.
[02:00:27] <cthulchu_> eeeeeeeeeeeeeeeerrrr
[02:00:29] <k4rt0ff31ch33t4h> because then should have received a function
[02:00:53] <cthulchu_> You made a promise in your then. I removed it. But let me try adding it back
[02:01:30] <k4rt0ff31ch33t4h> (new Promise((r)=>{console.log('a');r()})).then(()=>new Promise(()=>{console.log('b')}));console.log('c') // a,c,b
[02:01:45] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[02:02:03] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[02:02:24] <cthulchu_> where did you resolve it?
[02:02:51] <cthulchu_> ok ok
[02:02:56] <cthulchu_> I'm doing this:  (new Promise(()=>{console.log('a')})).then(function(){console.log('b')});console.log('c');
[02:03:05] <cthulchu_> and I'm not getting the b at all
[02:03:12] <ljharb> `new Promise` should only ever be used to wrap a callback-taking API
[02:03:39] <cthulchu_> yeah, we know
[02:03:46] <ljharb> lol ok then why use it here
[02:04:10] <ljharb> scanning the backscroll, promise chains are indeed a dependency graph
[02:04:21] <cthulchu_> cuz I had a question above. which earendel answered exhaustively. And now I'm just trying to fix my test
[02:04:25] <earendel> to understand the eventloop maybe
[02:04:34] <ljharb> lol k
[02:04:51] <cthulchu_> yes, that too
[02:04:53] <ljharb> you can tease out which order those things will happen, but it's bad code to rely on it
[02:05:10] <cthulchu_> yeah, I won't use it.
[02:05:11] <ljharb> if b needs to happen after a and c, then b shouldn't happen until `Promise.all([a, c])` resolves
[02:05:24] <cthulchu_> yeah
[02:05:24] <ljharb> but promises are inappropriate to use for event listeners
[02:05:32] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[02:05:34] <ljharb> because promises are for 0 or 1 future thing; events are for 0 or N future things
[02:06:07] *** Quits: g2anj_ (~v@58.227.244.56) (Ping timeout: 265 seconds)
[02:06:20] <cthulchu_> right
[02:06:23] <cthulchu_> that's a great point
[02:09:04] *** Joins: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au)
[02:10:42] *** Quits: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch) (Quit: Leaving)
[02:12:17] *** Quits: gitesh (uid423739@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:13:18] <k4rt0ff31ch33t4h> i though i try to leave out using promises directly and just using thenables with async/await
[02:13:32] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 240 seconds)
[02:13:33] <k4rt0ff31ch33t4h> (async ()=>{ await ({ then: (r) => {console.log('a');r();} });console.log('b'); })();console.log('c') // cab
[02:13:50] *** Quits: shuvarek (~shuvarek@staticline-31-182-169-28.toya.net.pl) (Ping timeout: 246 seconds)
[02:18:05] *** Quits: k4rt0ff31ch33t4h (~k4rt0ff3l@92-249-237-69.pool.digikabel.hu) (Quit: leaving)
[02:18:55] <gehn> ljharb, I feel I've been misunderstood, I'm saying the default should generally be neither of those two things you just described
[02:19:21] <gehn> static methods are pointless because you could just use modules instead, all you're getting more or less is a worse namespace/module with a static method (and this is true in most langs)
[02:19:48] <gehn> class Foo { someFunc() {} } // <- someFunc is not on only one instance, it's on prototype and thus available to all instances
[02:20:42] <gehn> I'm saying this latter form of `someFunc` is the main thing that should be used
[02:21:07] <gehn> otherwise if everything in a class is static, there's no point in it being a class
[02:21:21] <gehn> it's just a glorified namespace at that point
[02:21:25] *** Joins: alystair (~alystair@user/alystair)
[02:21:34] <earendel> n> a=Promise.resolve(3); b=a.then(x=>x+1);  c=a.then(x=>x-1); Promise.all([b,c])
[02:21:34] <jellobot> (okay) [ 4, 2 ]
[02:23:31] *** Quits: pmercado_ (~pmercado@186.107.48.172) (Ping timeout: 256 seconds)
[02:23:31] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[02:25:07] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[02:26:01] <earendel> n> a=Promise.resolve(3); b=a.then(x=>x+1);  c=a.then(x=>x-1); Promise.all([b,c]).then(console.log); console.log("i'm executed in the same event loop, that's why i'm first");
[02:26:01] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:8cb3:c462:5524:e7b1)
[02:26:01] <jellobot> (okay) i'm executed in the same event loop, that's why i'm first undefined[ 4, 2 ]
[02:27:10] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:8cb3:c462:5524:e7b1) (Client Quit)
[02:28:03] *** Joins: shuvarek (~shuvarek@staticline-31-182-169-28.toya.net.pl)
[02:28:05] <earendel> n> a=Promise.resolve(console.log("i'm first now"), 3); b=a.then(x=>x+1);  c=a.then(x=>x-1); Promise.all([b,c]).then(console.log); console.log("i'm executed in the same event loop, that's why i'm first");
[02:28:06] <jellobot> (okay) i'm first now i'm executed in the same event loop, that's why i'm first undefined[ NaN, NaN ]
[02:28:24] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Remote host closed the connection)
[02:28:46] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[02:29:38] <earendel> wait, why the NaNs ... shouldn't it resolve 3?
[02:29:47] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[02:29:59] <earendel> n>Promise.resolve(1,3)
[02:29:59] <jellobot> (okay) 1
[02:30:02] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:08] <earendel> oh right.
[02:30:18] <earendel> lol. ok. inconsistent!
[02:30:30] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:30:38] <earendel> n> a=Promise.resolve((console.log("i'm first now"), 3)); b=a.then(x=>x+1);  c=a.then(x=>x-1); Promise.all([b,c]).then(console.log); console.log("i'm executed in the same event loop, that's why i'm first");
[02:30:39] <jellobot> (okay) i'm first now i'm executed in the same event loop, that's why i'm first undefined[ 4, 2 ]
[02:31:55] *** Joins: pulse_ (~pulse@user/pulse)
[02:33:32] *** Quits: pizdets (~pizdets@183.182.114.210) (Ping timeout: 240 seconds)
[02:34:11] *** Joins: pizdets (~pizdets@183.182.110.210)
[02:35:25] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[02:38:10] *** Quits: phryk (~totallyno@user/phryk) (Quit: ZNC 1.8.2 - https://znc.in)
[02:40:54] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:41:18] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:42:00] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[02:42:11] *** Quits: mimmy (~mimmy@72.142.88.18) (Quit: WeeChat 3.3)
[02:42:47] *** Joins: z_lehinsun (~lehinsun@188.113.178.220)
[02:42:47] *** Quits: kogepan (~kogepan@user/kogepan) (Ping timeout: 256 seconds)
[02:43:48] *** Joins: Intelo (~Intelo@88.244.91.14)
[02:44:11] *** Quits: falafel_ (~falafel@2603-8000-d800-688c-2092-0e6f-020e-f136.res6.spectrum.com) (Ping timeout: 264 seconds)
[02:44:59] *** Quits: zeromule (~eric@2601:602:8d80:4e50:713d:6e3:aafe:1b14) (Ping timeout: 246 seconds)
[02:46:03] *** Joins: phryk (~totallyno@user/phryk)
[02:47:21] *** Quits: phryk (~totallyno@user/phryk) (Remote host closed the connection)
[02:47:34] <earendel> n> log=a=>(x='')=>console.log(a +") "+ x); setTimeout(log(1), 1); setImmediate(log(2)); process.nextTick(log(3)); Promise.resolve().then(log(4));
[02:47:35] <jellobot> (okay) 4)  undefined3)  2)  1)
[02:48:43] *** Joins: phryk (~totallyno@user/phryk)
[02:51:10] <ljharb> gehn: i 100% agree that if everything in a class is static there's no point in it being one
[02:54:14] *** pulse_ is now known as pulse
[02:56:10] <earendel> technically that's what an object literal represents. yet there is still semantic implications in what a singleton is. (even if often they turn out not to be, in advanced feature creep;)
[02:56:30] *** Quits: src (~src@user/src) (Quit: Leaving)
[02:56:55] <theskillwithin> first time using tailwind, I have a headache now lol
[02:57:06] <earendel> static methods are class oriented, while anything else on each instance of a classs.
[02:58:40] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d) (Quit: Client closed)
[03:01:31] <ljharb> gehn: but i do think that a class as a namespace for static methods is actually better when the functions are tightly coupled to the class anyways
[03:01:58] <earendel> shit i had the same thought ljharb
[03:02:07] <earendel> for the first time in history.
[03:07:26] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[03:12:26] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[03:13:42] *** Joins: sebastorama (~sebastora@190.83.56.68)
[03:18:39] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d)
[03:19:59] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[03:20:39] *** Quits: Koopz (~Koopz@h2950341.stratoserver.net) (Quit: Ping timeout (120 seconds))
[03:20:42] *** Quits: Svitkona (~Svitkona@157.245.38.135) (Quit: Ping timeout (120 seconds))
[03:20:52] *** Joins: Koopz (~Koopz@koopz.rocks)
[03:20:55] *** Joins: Svitkona (~Svitkona@157.245.38.135)
[03:21:13] *** Joins: wille6 (~wille@static.140.85.76.144.clients.your-server.de)
[03:21:39] *** Quits: Benett (~Benett@2a03:4000:1a:7aa::2) (Quit:  )
[03:21:41] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[03:21:41] *** Quits: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[03:21:57] *** Joins: Benett (~Benett@xnetx.de)
[03:22:00] *** Joins: cebor (~cebor@user/cebor)
[03:22:48] *** Quits: wille (~wille@static.140.85.76.144.clients.your-server.de) (Ping timeout: 260 seconds)
[03:22:48] *** wille6 is now known as wille
[03:25:03] *** Joins: zeromule (~eric@2601:602:8d80:4e50:713d:6e3:aafe:1b14)
[03:25:31] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[03:25:37] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:25:38] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:25:38] *** Joins: wroathe (~wroathe@user/wroathe)
[03:26:28] *** Joins: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de)
[03:30:24] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[03:31:37] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[03:34:28] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:24e0:3a49:6ead:1895)
[03:36:11] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:24e0:3a49:6ead:1895) (Client Quit)
[03:38:19] *** Quits: tex (~super@user/dix) (Ping timeout: 256 seconds)
[03:38:22] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d) (Ping timeout: 256 seconds)
[03:41:58] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:42:24] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[03:42:41] *** Joins: sebastorama (~sebastora@190.83.56.68)
[03:46:10] *** Quits: Intelo (~Intelo@88.244.91.14) (Quit: Client closed)
[03:46:43] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 250 seconds)
[03:48:49] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:e5ef:144b:750a:3781) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:52:35] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:53:16] *** Joins: sebastorama (~sebastora@190.83.56.68)
[04:00:00] *** Quits: zeromule (~eric@2601:602:8d80:4e50:713d:6e3:aafe:1b14) (Ping timeout: 268 seconds)
[04:00:33] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[04:01:14] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:01:54] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[04:04:56] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[04:08:33] *** Joins: zeromule (~eric@2601:602:8d80:4e50:3535:ce48:74c5:236b)
[04:09:35] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[04:10:41] *** Joins: sam_1 (~sam_1@87.51.251.118)
[04:15:19] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[04:16:17] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:16:45] *** Joins: ferdna (~ferdna@user/ferdna)
[04:17:07] *** Joins: sebastorama (~sebastora@190.83.56.68)
[04:17:49] <obimod> ljharb: i have a linter rule that throws an error if i have a method on a class that doesn't access this
[04:17:59] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[04:18:16] <obimod> it's actually been pretty helpful
[04:18:28] <obimod> but that's just my preference of course
[04:19:04] <theskillwithin> should name it the can't touch this rule
[04:19:41] <obimod> song now stuck, in head
[04:20:39] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[04:22:58] *** Joins: jazzy (~jaziz@user/jaziz)
[04:25:12] *** Joins: vysn (~vysn@user/vysn)
[04:26:38] *** Joins: jazzy2 (~jaziz@user/jaziz)
[04:27:02] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:27:45] *** Joins: sebastorama (~sebastora@190.83.56.68)
[04:28:59] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[04:29:30] *** Joins: Fault (~Fault@152.70.112.168)
[04:30:20] <obimod> ...it does support static methods though, as long as they specify the fact. "class-methods-use-this"
[04:30:23] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[04:31:23] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[04:31:44] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:34:08] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[04:35:42] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[04:36:01] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[04:37:39] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:38:20] *** Joins: sebastorama (~sebastora@190.83.56.68)
[04:38:36] *** Quits: realies (~realies@user/realies) (Quit: Ping timeout (120 seconds))
[04:38:51] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[04:40:04] *** Joins: realies (~realies@user/realies)
[04:40:42] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[04:41:02] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[04:41:15] *** Quits: nomic (~nomic@185.192.69.7) (Quit: Leaving)
[04:41:23] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[04:41:46] *** Joins: Fault (~Fault@152.70.112.168)
[04:42:24] *** Quits: jdw3000 (~jonathan@c-76-18-136-183.hsd1.tn.comcast.net) (Quit: Leaving)
[04:42:36] *** Quits: zeromule (~eric@2601:602:8d80:4e50:3535:ce48:74c5:236b) (Ping timeout: 245 seconds)
[04:43:45] *** Quits: entropy_ (~ent@user/entropy/x-9891564) (Remote host closed the connection)
[04:45:15] *** Joins: Buoy172 (~Buoy172@95.86.30.136)
[04:45:51] *** Joins: pmercado_ (~pmercado@186.107.48.172)
[04:48:15] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:48:58] *** Joins: sebastorama (~sebastora@190.83.56.68)
[04:52:16] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[04:53:30] *** Joins: zeromule (~eric@2601:602:8d80:4e50:3c90:6049:3cbd:7933)
[04:56:29] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 250 seconds)
[04:57:43] <jaawerth> theskillwithin: eslint-plugin-hammertime
[04:57:54] <theskillwithin> HAHA
[04:58:24] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Quit: The Lounge - https://thelounge.chat)
[04:58:52] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:59:34] *** Joins: sebastorama (~sebastora@190.83.56.68)
[04:59:48] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[05:03:30] *** Quits: faLUKE (~paolo@host-80-117-216-225.retail.telecomitalia.it) (Quit: Konversation terminated!)
[05:05:59] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[05:09:11] <gehn> I'm gonna tight couple with this burrito in a minute here
[05:09:28] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:09:34] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[05:10:11] *** Joins: sebastorama (~sebastora@190.83.56.68)
[05:11:13] <theskillwithin> gehn ?
[05:11:45] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:57b:88de:542:25b9)
[05:12:31] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:57b:88de:542:25b9) (Client Quit)
[05:14:05] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 246 seconds)
[05:16:58] *** Quits: obimod (~obimod@gateway/vpn/pia/obimod) (Ping timeout: 260 seconds)
[05:17:04] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:18:17] <theskillwithin> https://youtu.be/otCpCn0l4Wo?t=15
[05:18:17] <skillbot> YouTube Title: MC Hammer - U Can't Touch This (Official Music Video)
[05:18:21] <theskillwithin> dang that dude can dance
[05:19:39] *** Joins: tatiana (~OhTheCode@14-200-73-17.tpgi.com.au)
[05:20:05] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:20:48] *** Joins: sebastorama (~sebastora@190.83.56.68)
[05:22:56] *** Quits: OhTheCode (~OhTheCode@14-200-73-17.tpgi.com.au) (Ping timeout: 250 seconds)
[05:22:57] <gehn> theskillwithin, I ordered food, I'm hungy
[05:23:14] <gehn> dumb joke from earlier discussion
[05:23:48] <gehn> plot twist, I'll be tight coupling with a pizza, not a burrito
[05:23:55] <theskillwithin> I hope you didn't drive
[05:24:06] <theskillwithin> https://youtu.be/4am8Dsn5eMY
[05:24:06] <skillbot> YouTube Title: I'll Take Your Car
[05:24:13] <gehn> drive, that's a thing inside a computer right?
[05:24:13] <theskillwithin> oh ah
[05:24:14] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 246 seconds)
[05:25:24] <gehn> in mothder russkia, pizza tight couples YOUO
[05:25:28] *** Joins: dre (~dre@2001:8003:c932:c301:3aa0:ae93:dc87:2b3)
[05:25:43] <dre> hey all, is there an "electron" channel?
[05:26:06] <gehn> do I become the pizza, or does the pizza become me? these are the important questions of our time
[05:26:21] <theskillwithin> dre i don't think so
[05:26:24] <dre> I'm looking to patch some shit for the slack desktop app; There's this https://github.com/tintinweb/electron-inject
[05:26:26] <theskillwithin> dre  /msg alis list electron
[05:26:30] <dre> but it's hacky.
[05:26:31] <pizza> i was once a gehn too, you know.
[05:26:34] <dre> yeah good point
[05:26:44] <theskillwithin> dre ya prob best to ask here, it is js afterall
[05:26:44] <gehn> a wild pizza appears
[05:27:38] <dre> theskillwithin, ye :) but also desktop application related, nodejs? anyway I don't know much about it
[05:27:42] <dre> all I know is:
[05:28:01] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[05:28:27] <dre> slack is a "compiled desktop application binary" that uses electron, and I can pass "DEBUG_MODE" to to, and get to the inspector/console, which is super nice and all.
[05:28:45] <theskillwithin> ya #node.js might be better
[05:28:47] *** Quits: zeromule (~eric@2601:602:8d80:4e50:3c90:6049:3cbd:7933) (Ping timeout: 246 seconds)
[05:28:47] <theskillwithin> idk
[05:28:52] <dre> but what I'd really love to do is be able to make a js file, and give that to my co-workers to say "put this in your /usr/lib/slack"
[05:28:59] <dre> ah good point I'll check them out
[05:30:41] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:31:03] *** Joins: obimod (~obimod@gateway/vpn/pia/obimod)
[05:31:12] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[05:31:24] *** Joins: sebastorama (~sebastora@190.83.56.68)
[05:32:47] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 264 seconds)
[05:32:53] *** Quits: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au) (Ping timeout: 250 seconds)
[05:36:23] *** Quits: zsoc (~zsoc@cpe-24-168-59-34.hvc.res.rr.com) (Ping timeout: 264 seconds)
[05:37:01] *** Quits: WishBoy (~WishBoy@user/wishboy) ()
[05:37:45] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[05:39:35] *** Quits: pmercado_ (~pmercado@186.107.48.172) (Ping timeout: 256 seconds)
[05:39:46] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[05:41:18] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:41:42] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Ping timeout: 260 seconds)
[05:42:01] *** Joins: sebastorama (~sebastora@190.83.56.68)
[05:42:37] *** Joins: sheetjs_ (~sheetjs@pool-173-54-145-7.nwrknj.fios.verizon.net)
[05:44:08] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[05:44:37] *** Joins: Fault (~Fault@152.70.112.168)
[05:46:35] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 264 seconds)
[05:46:46] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[05:47:52] <Maxdamantus> Why not just use the web version? Then your hacky code is at least guarded by tde browser sandbox.
[05:47:56] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[05:49:56] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[05:51:02] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 240 seconds)
[05:51:55] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:52:37] *** Joins: sebastorama (~sebastora@190.83.56.68)
[05:52:44] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[05:52:44] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[05:53:05] *** Joins: Fault (~Fault@152.70.112.168)
[05:53:16] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[05:57:13] *** Joins: stenno (~stenno@user/stenno)
[06:02:32] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:03:13] *** Joins: sebastorama (~sebastora@190.83.56.68)
[06:03:50] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[06:06:44] *** Joins: audiobirb (~audio@user/audio)
[06:08:29] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[06:11:34] *** Joins: sam_1 (~sam_1@87.51.251.118)
[06:13:08] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:13:46] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[06:13:51] *** Joins: sebastorama (~sebastora@190.83.56.68)
[06:14:22] *** Quits: N4buc0- (~N4buc0@179.186.178.29.dynamic.adsl.gvt.net.br) (Ping timeout: 260 seconds)
[06:16:13] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[06:16:40] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:536:bef0:d5cf:63a6)
[06:16:49] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[06:16:55] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[06:17:22] <earendel>  o yeah. i accidently disabled it.
[06:18:00] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:536:bef0:d5cf:63a6) (Client Quit)
[06:19:39] <earendel> do you like your tight little sandbox?
[06:21:53] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[06:22:29] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[06:23:44] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:24:27] *** Joins: sebastorama (~sebastora@190.83.56.68)
[06:25:48] <theskillwithin> things to never say in bed, page 1
[06:27:12] <earendel> lol
[06:28:13] <earendel> you're right it was not my intention.
[06:29:01] <earendel> unless you want to threaten me
[06:29:17] <earendel> then feel the power of the great cornholio
[06:29:49] <earendel> im running out of dope/
[06:33:49] <earendel> did we by chance have a chat on facebook about nuclear energy?
[06:34:22] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:34:22] *** Joins: zeromule (~eric@2601:602:8d80:4e50:3c90:6049:3cbd:7933)
[06:34:48] *** Joins: falafel (~falafel@2603-8000-d800-688c-2092-0e6f-020e-f136.res6.spectrum.com)
[06:35:05] *** Joins: sebastorama (~sebastora@190.83.56.68)
[06:36:51] <earendel> maybe we didn't.
[06:37:27] <theskillwithin> i haven't had a facebook for prob 10 years
[06:39:13] <poiqwepoiqwe> you spend how much time on the line and you dont have a facebook? =/
[06:43:26] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[06:44:05] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[06:44:13] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[06:44:48] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[06:44:59] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:45:22] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[06:45:40] *** Joins: sebastorama (~sebastora@190.83.56.68)
[06:46:33] *** Quits: zeromule (~eric@2601:602:8d80:4e50:3c90:6049:3cbd:7933) (Ping timeout: 250 seconds)
[06:47:44] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[06:50:44] *** Joins: Rockwood (~Rocky@user/rocky)
[06:53:54] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 268 seconds)
[06:55:35] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:56:17] *** Joins: sebastorama (~sebastora@190.83.56.68)
[06:57:19] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[06:57:51] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[06:57:56] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[06:59:38] *** Quits: Buoy172 (~Buoy172@95.86.30.136) (Remote host closed the connection)
[07:02:37] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:06:11] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:06:53] *** Joins: sebastorama (~sebastora@190.83.56.68)
[07:08:15] *** Quits: lind{at}yahoo (uid486956@tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:09:06] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:12:33] <Tabmow> On a scale of 1-10, how bad is it that an update-password api accept the new password as a URL parameter? :P
[07:12:52] <phantomotap> ouch.
[07:15:49] <theskillwithin> why would you ever even do that
[07:15:57] <bkool> oh damn. do you even have to pass the old password? not that it even matters. lol
[07:16:30] <theskillwithin> reset pw, usually create token, send to user email,  that token can be used as url param, to reset pw  NOT IN URL PARAM
[07:16:48] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:16:49] <bkool> every time i think i'm not that good of a dev there are examples that make me feel better about myself.
[07:17:11] *** Quits: falafel (~falafel@2603-8000-d800-688c-2092-0e6f-020e-f136.res6.spectrum.com) (Ping timeout: 245 seconds)
[07:17:34] <Tabmow> This is a system where the user can change their own password, and it sends the new password as a url parameter to the backend api to update...
[07:17:35] *** Joins: sebastorama (~sebastora@190.83.56.68)
[07:17:52] <theskillwithin> ahh,  ya don't want url param fo sure
[07:18:16] <Tabmow> You normally pass it as json or something in the body of the request?
[07:18:35] *** Quits: jonifen_ (~jonifen@user/jonifen) (Quit: Leaving)
[07:18:37] <theskillwithin> something like that,  just not as url param
[07:18:57] *** Joins: jonifen (~jonifen@user/jonifen)
[07:20:21] <Rockwood> or you can send otp for reset pw
[07:21:21] *** Joins: knn (~kn@47.200.203.62)
[07:21:30] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:8dcc:e4e5:7d17:eb25)
[07:22:18] <theskillwithin> Rockwood I think this is more of a like.  go to settings.  have a field to confirm your current pw, have a field to set to new pw, type of deal
[07:22:24] <theskillwithin> they asking about
[07:22:46] <Tabmow> Right, but either way when they use the otp and then go to set their new password, it will need to passed somehow from the frontend to the backend to be updated.
[07:23:02] <Rockwood> oh i was thinking about forget pass
[07:23:02] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:8dcc:e4e5:7d17:eb25) (Client Quit)
[07:24:36] *** Quits: knn (~kn@47.200.203.62) (Client Quit)
[07:25:05] *** Joins: teut (~teut@223.182.71.245)
[07:25:26] *** Joins: hemstock (~hemstock@68.71.244.6)
[07:25:38] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[07:26:37] <Tabmow> I wonder if it's really a bad thing to do it this way vs. via a json message in the body if you consider that the comms will always be over https...
[07:27:26] <bkool> Tabmow, a GET request will get written to logs with the full url in many cases.
[07:27:29] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:27:34] *** Joins: chao (~stenno@user/stenno)
[07:28:12] *** Joins: sebastorama (~sebastora@190.83.56.68)
[07:28:14] <bkool> plus a third party (like ISP) may have access to all urls. https doesn't encrype the url.
[07:28:29] <Tabmow> This is a POST... but I do get your point.
[07:28:59] <theskillwithin> Tabmow url params are not encrypted via ssl, as far as i know....   i mean just look at browser history
[07:28:59] <Tabmow> https does encrypt the url... to my knowledge the only thing it wouldn't encrypt is the hostname if using sni
[07:29:32] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[07:31:21] <Tabmow> theskillwithin: browser history is different of course the user would know the url. However this is an xhr call going to the backend api so I don't believe it will be in the history...
[07:32:09] <theskillwithin> url params are an xhr call?
[07:33:14] <theskillwithin> Tabmow why the pushback? do you NEED it to be a url param?
[07:33:14] <bkool> assume any param in the url GET or POST will get logged. that is not secure.
[07:33:22] <Tabmow> Yeah... well it's a param to the api - I.E https://api.blah.com/api/v1/user/password?newPassword=Blah
[07:34:43] <theskillwithin> Tabmow wow.... just...
[07:34:52] <Tabmow> It's easy enough to switch it to a message body... it's more just for my understanding is all. From what I can tell the logging of the URL in logfiles is really the only driver to move it to the body. Although technically that could be logged somewhere too...
[07:35:06] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[07:35:12] <theskillwithin> if your going to ignore everything everyone told you,  why did you ask the question
[07:35:36] *** Joins: Fault (~Fault@152.70.112.168)
[07:35:47] <theskillwithin> https://owasp.org/www-project-top-ten/
[07:36:21] <teut>    https://dpaste.org/cW38           Cannot read property 'PersonCount' of undefined
[07:36:32] <Tabmow> Who said I'm ignoring what I've been told? Just trying to get a better grasp of the reasoning is all.
[07:36:37] <teut> what probably might be giving this error?
[07:37:07] <teut> https://dpaste.org/BgsT
[07:37:17] <teut> code using this class
[07:37:43] <teut> there is no traceback or line number where error occurs is shown
[07:38:05] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:38:14] <teut> https://ibb.co/Snbx47D
[07:38:18] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 268 seconds)
[07:38:47] *** Joins: sebastorama (~sebastora@190.83.56.68)
[07:39:32] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 268 seconds)
[07:39:35] *** Quits: Zauberfisch (~Zauberfis@cm147-42.liwest.at) (Read error: Connection reset by peer)
[07:40:22] <bkool> Tabmow, any application/process/browser can save url. it could end up in the browser cache on a machine.
[07:40:33] *** Joins: Zauberfisch (~Zauberfis@cm147-42.liwest.at)
[07:41:23] *** Joins: pulse (~pulse@user/pulse)
[07:41:52] <Rockwood> PersonCount, Filter } = require('./main.js');
[07:42:03] <Rockwood> teut, its coming from here
[07:42:25] <theskillwithin> prob would end up in google analytics, and debugging tools as well
[07:42:27] <teut> how do you know?
[07:42:32] <teut> you are correct
[07:42:33] <theskillwithin> and would be easily man in the middled on wifi
[07:42:49] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Remote host closed the connection)
[07:42:56] <Rockwood> teut, start debug step by step i think
[07:43:13] <Rockwood> console from start and see
[07:43:31] <teut> oh thats nice
[07:43:34] <teut> https://dpaste.org/6vyE
[07:43:40] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[07:43:54] <teut> that shorthand,   what did it do?
[07:44:18] <Tabmow> I've already logged a bug to fix it... not sure why it was coded this way to begin with.
[07:44:20] <teut> not  "PersonCount": PersonCount   ?
[07:44:36] <teut> PersonCount is that class
[07:45:37] <teut> no this should be correct since  , Filter is also exported like tis and that already worked
[07:46:06] <Rockwood> its outputting at start?
[07:46:38] <theskillwithin> Tabmow I get it, the why is important, should learn info sec and hacking to be a proper dev
[07:46:42] <teut> ?
[07:46:47] <theskillwithin> Tabmow https://owasp.org/www-project-top-ten/
[07:47:06] <Rockwood> teut, hindi mein baatao
[07:47:25] <Rockwood> file se aa raha object sahi se?
[07:47:26] *** Joins: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au)
[07:48:23] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[07:48:42] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:49:23] *** Joins: sebastorama (~sebastora@190.83.56.68)
[07:49:57] *** Joins: d[-_-]b (~stenno@user/stenno)
[07:51:07] *** Joins: noarb (~noarb@user/noarb)
[07:51:35] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 246 seconds)
[07:54:53] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[07:54:53] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[07:54:53] *** Joins: wroathe (~wroathe@user/wroathe)
[07:57:01] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[07:57:28] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:59:18] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:59:21] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[08:00:00] *** Joins: sebastorama (~sebastora@190.83.56.68)
[08:01:15] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[08:02:24] *** Quits: jcrooks (~jcrooks@c-73-131-109-248.hsd1.sc.comcast.net) (Quit: Connection closed)
[08:03:58] *** Quits: thekingofbandit (thekingofb@user/thekingofbandit) (Killed (NickServ (GHOST command used by thekingofbandit5!thekingofb@thunix.net)))
[08:04:32] *** Joins: thekingofbandit (thekingofb@user/thekingofbandit)
[08:06:49] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[08:07:56] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[08:09:55] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:10:41] *** Joins: sebastorama (~sebastora@190.83.56.68)
[08:13:51] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (*.net *.split)
[08:13:51] *** Quits: niko (~niko@libera/staff/niko) (*.net *.split)
[08:13:51] *** Quits: Decker (~d3x0r@user/d3x0r) (*.net *.split)
[08:13:51] *** Quits: ozymandias (~ozymandia@libre.theyareafter.us) (*.net *.split)
[08:13:51] *** Quits: samsch (~samsch@171.ip-192-99-69.net) (*.net *.split)
[08:13:51] *** Quits: Alexendoo (~Alexendoo@macleod.io) (*.net *.split)
[08:13:51] *** Quits: marienz (~marienz@libera/staff/marienz) (*.net *.split)
[08:13:51] *** Quits: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com) (*.net *.split)
[08:13:51] *** Quits: chronon (~chronon@user/chronon) (*.net *.split)
[08:13:51] *** Quits: Inoperable (~PLAYER_1@fancydata.science) (*.net *.split)
[08:13:51] *** Quits: WizJin (~z0rbaznc@78.141.221.79) (*.net *.split)
[08:13:52] *** Quits: luny (~luny@52.178.89.202) (*.net *.split)
[08:14:19] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[08:14:21] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[08:15:03] *** Joins: niko (~niko@libera/staff/niko)
[08:16:32] *** Quits: bobdobbs` (~user@116.251.164.13) (Read error: Connection reset by peer)
[08:16:50] *** Joins: lind{at}yahoo (uid486956@tinside.irccloud.com)
[08:18:25] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[08:18:25] *** Joins: Decker (~d3x0r@user/d3x0r)
[08:18:25] *** Joins: Inoperable (~PLAYER_1@fancydata.science)
[08:18:25] *** Joins: ozymandias (~ozymandia@libre.theyareafter.us)
[08:18:25] *** Joins: samsch (~samsch@171.ip-192-99-69.net)
[08:18:25] *** Joins: Alexendoo (~Alexendoo@macleod.io)
[08:18:25] *** Joins: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com)
[08:18:25] *** Joins: chronon (~chronon@user/chronon)
[08:18:25] *** Joins: marienz (~marienz@libera/staff/marienz)
[08:18:25] *** Joins: WizJin (~z0rbaznc@78.141.221.79)
[08:18:25] *** Joins: luny (~luny@52.178.89.202)
[08:18:49] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 256 seconds)
[08:18:51] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[08:19:17] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d)
[08:19:27] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:19:30] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[08:19:44] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d) (Client Quit)
[08:20:03] *** Joins: Fault (~Fault@152.70.112.168)
[08:20:05] <teut> https://dpaste.org/3DMP#L60    whats wrong with the #applyFilters   function?   Its not getting called
[08:20:36] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:20:51] *** Joins: version (~stenno@user/stenno)
[08:20:52] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[08:21:13] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d)
[08:21:21] *** Joins: sebastorama (~sebastora@190.83.56.68)
[08:22:02] *** Quits: d[-_-]b (~stenno@user/stenno) (Ping timeout: 240 seconds)
[08:22:31] <jaawerth> teut: all of those function declarations are not arrows, so they don't get lexical this, and you aren't invoking them with .call or .apply
[08:22:37] <jaawerth> setTotals etc
[08:22:50] <teut> oh
[08:23:55] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[08:25:03] <teut> https://ibb.co/0XfPkD7
[08:25:06] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:25:10] *** Joins: spronkey (~spronkey@203.86.199.163)
[08:25:33] <teut> like here , thats also a function but inside that function, its able to access the outer attributes
[08:25:39] <teut> how's that?
[08:25:53] *** Quits: version (~stenno@user/stenno) (Ping timeout: 246 seconds)
[08:26:17] *** Quits: spronkey (~spronkey@203.86.199.163) (Client Quit)
[08:26:26] <teut> the "this" inside the function doesnt has firstname, lastname
[08:26:30] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:26:53] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:28:04] *** Joins: version (~stenno@user/stenno)
[08:28:12] <teut> thanks it works
[08:28:34] <teut> I m never able to understand this "this" completely
[08:28:39] *** Quits: mud (~mud@user/kadoban) (Quit: quit)
[08:30:02] *** Quits: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net) (Read error: Connection reset by peer)
[08:30:50] <queue[m]> just remember that this is this and never that, just this
[08:31:15] <teut> -_-
[08:31:15] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:31:28] <teut> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this
[08:31:32] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 240 seconds)
[08:31:36] <teut> too many rules
[08:31:54] <teut> In strict mode, however, if the value of this is not set when entering an execution context, it remains as undefined, as shown in the following example:
[08:31:58] *** Joins: sebastorama (~sebastora@190.83.56.68)
[08:32:08] <jaawerth> I thinkn there are factoids with good summaries
[08:32:09] <teut> whats this execution contetext/?
[08:32:11] <jaawerth> !this @teut
[08:32:11] <jellobot> teut, A function call of the form `a.b()` calls the function with `this` being the value of `a`; in a call of the form `f()`, `this` will be `undefined`, which is turned into the global object if the function wasn't defined in strict mode. Note that arrow functions and functions produced by `Function.prototype.bind` ignore the passed `this` value. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this
[08:32:33] <theskillwithin> dre btw MJCD is banned in here for a reason
[08:32:40] <theskillwithin> not there tho
[08:32:45] <theskillwithin> yet
[08:34:41] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[08:34:45] <teut> so when calling  a "function" function, the this of that scope is passed into that function, is this correct?
[08:35:08] <teut> non strict mode
[08:36:13] <jaawerth> in non-gstrict mode inless you call it as a method on an objject, bind it, or use call/apply, it's the global object. in strict mode, it's undefined
[08:36:21] <jaawerth> but also why in god's name are you not in strict mode
[08:36:33] <teut> I understood the case of when you acess it as an object property
[08:37:22] <teut> I don't know. Is it sensible to write "strict mode"  a hundred times in code at different places?
[08:37:25] <jaawerth> arrow functions get lexical `this`, meaning they inherit it from scope
[08:37:27] <jaawerth> that's the only time
[08:37:31] <jaawerth> "function" functions don't
[08:37:35] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[08:38:53] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[08:40:04] <teut> thanks ,  I ve much better understanding now
[08:40:44] <jaawerth> np
[08:41:39] <dre> theskillwithin, oh, that's good to know, thanks, I thought I was about to get banned for insulting a mod or something
[08:41:47] <dre> I don't mind
[08:41:52] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:42:35] *** Joins: sebastorama (~sebastora@190.83.56.68)
[08:43:40] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[08:44:21] <theskillwithin> jaawerth ya thats good info to know, thats why this in arrow function shoots up to window
[08:44:41] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 245 seconds)
[08:44:47] <theskillwithin> jaawerth except in a module
[08:45:10] *** Joins: falafel (~falafel@cpe-76-168-195-162.socal.res.rr.com)
[08:45:49] <teut> when in a class,
[08:46:27] <teut> its just impossible to thing how many things you binded to the this and called what function using it
[08:46:31] <teut> think*
[08:47:42] <teut> https://bpa.st/A44Q#1L53   like if I look at this line
[08:48:05] *** Joins: matsaman (~matsaman@user/matsaman)
[08:48:20] <teut> to know if this is the this of the constructor or what, i will need to check the full hierarchy of "this"
[08:48:26] <teut> thats too much work
[08:48:45] <teut> why cant they find a better scoping mechanism?
[08:49:25] *** Quits: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com) ()
[08:50:25] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[08:50:32] <jaawerth> because that's how it was from the beginning and you can't ever break backwards compat. also `this` isn't strictly scoping, it's dynamic dispatch
[08:50:37] <jaawerth> if you want it scoped use arrow functions
[08:50:42] <jaawerth> that takes away any ambiguity
[08:51:02] <jaawerth> that's the ES6 workaround to lexial this, since it's new syntax
[08:51:04] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[08:51:24] <jaawerth> also I don't even like classes, lol
[08:51:34] <theskillwithin> same
[08:52:28] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:52:31] *** Joins: stenno (~stenno@user/stenno)
[08:52:54] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[08:53:11] *** Joins: sebastorama (~sebastora@190.83.56.68)
[08:53:58] <teut> ya, I ll stick to arrow functions
[08:54:14] *** Quits: version (~stenno@user/stenno) (Ping timeout: 246 seconds)
[08:54:26] <teut> is there any thing to get Map from list of keys and values?
[08:54:50] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[08:55:14] *** Joins: bobdobbs (~user@2406:5a00:4403:bf00:4878:b890:ef27:6062)
[08:55:42] <jaawerth> well, the Map constructor takes a list of [key, value] pairs
[08:55:48] <teut> Object.fromentries (list1.map((v, i)=>[v, list2[i])
[08:55:55] <teut> this looks ugly
[08:56:01] <jaawerth> (well, any iterable of [key, value] pairs)
[08:56:14] <jaawerth> you sai a Map, did you want an object?
[08:56:24] <jaawerth> oh it's a list of each
[08:56:34] <teut> they should make .fromKeyValues()
[08:56:39] <jaawerth> no, that is how you should do it. if you don't find it readable split it into two lines
[08:56:53] <jaawerth> nah
[08:57:00] <jaawerth> it's not that common a usecase compared to tuples
[08:57:08] <teut> its readable but I think its a common usecase
[08:57:29] <teut> for this small thing I do not want to install lodash
[08:57:43] <jaawerth> yeah but it's a one-liner util function
[08:57:54] <jaawerth> to turn it into  list of tuples
[08:58:20] <theskillwithin> when you say Map with title case, i think you mean like https://gist.github.com/theskillwithin/86139cef9a3dc20abd619c07547179db
[08:58:48] <teut> why cant the language provide a "zip" in short?
[08:58:50] <theskillwithin> but you mean map proptotype method of array
[09:00:03] <jaawerth> that's not zip
[09:00:09] <teut> zip(list1, list2)  can give [ [k1, v1], [k2, v2]...]   from [k1, k2, ...], [v1, v2, v3]
[09:00:42] <jaawerth> oh wait my bad yes it is
[09:00:45] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[09:00:47] <jaawerth> mixed up  zip and interleave
[09:00:49] <teut> then I can use Object.fromEntries
[09:01:32] <jaawerth> anyway, the language builtins on't go full stdlib, most of the helpers are extensible building blocks, ot straightup operations like that. even Object.fromEntries is a recent addition
[09:01:36] <teut> I mean , its a common usecase and it can be good if language provides a declative way to achieve thid
[09:01:39] <teut> this
[09:02:13] <jaawerth> and unlike a language where you just run it with a whole platform you control, JS needs to be somewhat portable/embeddable
[09:02:45] <teut> this should be adding a feature , not removing anything
[09:02:59] <jaawerth> who said anything about removing anything
[09:03:05] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:03:23] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[09:03:24] <teut> how will it destroy portability?
[09:03:47] <jaawerth> tc39 is just slow to ad new general utils if they can be easily implemented in userland
[09:03:48] *** Joins: sebastorama (~sebastora@190.83.56.68)
[09:03:50] *** Joins: Fault (~Fault@152.70.112.168)
[09:04:38] <teut> no idea of it
[09:04:44] <jaawerth> there's a higher barrier to entry due to the need not to impact every platform that implements js
[09:05:08] <jaawerth> and honestl I program a lot of JS an while I do use zip, needing to consume things that way to build an object is IME *way* rarer than doing so from entries
[09:06:06] <teut> ok
[09:06:09] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[09:06:34] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Quit: Client closed)
[09:06:52] <jaawerth> though... there IS a proposal, not for an array but for iterators
[09:06:54] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[09:07:02] <jaawerth> I think it has zip in it. so.. it's being worked on
[09:07:11] <jaawerth> it's only stage 2 though https://github.com/tc39/proposal-iterator-helpers
[09:07:36] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d) (Ping timeout: 256 seconds)
[09:07:43] <jaawerth> with iterators it makes it a lot more extensible because you can use them with/on any iterable
[09:07:54] <teut> Object.prototype.fromKeyValues = (list1, list2) => {   return list1.map((v, i)=>[v, list2[i]]);}
[09:08:02] <teut> I defined this at the top
[09:08:51] <teut> I m yet to use iterators in js, I have although used iterators in python a lot
[09:09:02] <jaawerth> moh wait I was going from table at the the bottom but that's just a prior art overview I think
[09:09:07] <jaawerth> so maybe it doesn't have it
[09:09:39] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[09:09:41] <jaawerth> anyway mutating built-in globals is... a bit of a js faux pas. i'd just stash it in a util module
[09:10:17] <ljharb> that is a really nice way to describe torturing puppies
[09:10:56] <theskillwithin> util ftw
[09:11:29] <jaawerth> lol
[09:12:03] <ljharb> !prototype modify @ teut
[09:12:04] <jellobot> teut, Don't modify objects you don't own, e.g. by extending native prototypes! http://www.nczonline.net/blog/2010/03/02/maintainable-javascript-dont-modify-objects-you-down-own/
[09:12:05] <theskillwithin> ljharb wtf is that a fauci refrence?
[09:12:15] <ljharb> teut: also, Object.fromEntries exists
[09:12:21] <ljharb> theskillwithin: huh? no, not in any wy
[09:12:23] <ljharb> *way
[09:12:53] <teut> thats not what we are talking about ljharb
[09:13:18] <teut> regarding modifying, its just adding a zip
[09:13:22] <ljharb> teut: you modified Object.prototype with a fromKeyValues function
[09:13:31] <ljharb> teut: nothing is "just" adding anything. never ever do it, not even once, no not even then
[09:13:40] <ljharb> teut: never add anything to anything
[09:13:42] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:13:52] <ljharb> teut: if you want a zip function, make one, but you don't get to have it hang off arrays
[09:13:53] <teut> Object.prototype.fromKeysValues = (list1, list2) => {    return Object.fromEntries(list1.map((v, i) => [v, list2[i]]));}
[09:13:57] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[09:14:18] <teut> not arrays, on objects
[09:14:19] <jaawerth> also I'd either assert that the lengths of the two arrays are equal *or* do like `const zip = (keys, values) => Array.from({length: Math.min(keys.length, values.length)}, (_, i) => [keys[i], values[i]]))` so you don't get undefineds when they don't mamtch
[09:14:21] *** Quits: falafel (~falafel@cpe-76-168-195-162.socal.res.rr.com) (Ping timeout: 256 seconds)
[09:14:24] *** Joins: sebastorama (~sebastora@190.83.56.68)
[09:14:33] <ljharb> teut: and that's even worse
[09:14:34] <teut> I dont think you will be having something by this name
[09:14:36] <ljharb> teut: never ever do that, ever
[09:14:38] <ljharb> teut: doesn't matter
[09:14:41] <ljharb> teut: NEVER do that
[09:14:46] <ljharb> teut: it is bad programming and makes you a bad person
[09:14:47] <jaawerth> then just Object.fromEntries(zip(keys, values))
[09:15:15] <ljharb> teut: also putting things on Object.prototype is dumb because it applies to booleans, functions, regexes, etc, and also because it DOESN'T apply to null objects (like `Object.create(null)`
[09:15:18] <jaawerth> ljharb is all Archuer-voice "do you want mootools? because this is how we get mootools"
[09:15:26] <jaawerth> *Archer-voice
[09:15:32] <teut> I need it in different modules and its too common thing that I do not want to import it
[09:15:35] <ljharb> teut: doesn't matter
[09:15:47] <ljharb> teut: your choices are: 1) import it, or 2) fuck off you don't get to have it
[09:15:58] <jaawerth> lol
[09:16:05] <ljharb> teut: doing that is the worst possible thing you could do, both for the wider web and also for your own code's maintainability
[09:16:07] <teut> ok ok, I m making util
[09:16:16] <ljharb> teut: i would instantly fire anyone who did that
[09:16:16] <theskillwithin> util ftw
[09:16:21] <jaawerth> the reason is that doing that makes code a mess to test, debug, and mantain, and it can lead to libraries stepping on other
[09:16:27] <teut> this guy goes hostile on things
[09:16:38] <jaawerth> and if js ever DOES add some a value then it would conflict with your code, which could break in the future
[09:16:47] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d)
[09:16:55] <teut> he;s the modern djikstra
[09:16:57] <jaawerth> he's just trying to express the extent to which mutating builtin globals is a no-no
[09:17:07] <ljharb> teut: lol
[09:17:10] <ljharb> teut: it's really that bad
[09:17:21] <theskillwithin> be nice ljharb !
[09:17:21] <jaawerth> ljharb is a stickler but it really is that frowned upon
[09:17:30] <theskillwithin> but also really you should do what he said
[09:17:34] <ljharb> teut: it's the same maintainability problems as globals, but it's worse because it will break anything that's reflecting on anything
[09:17:49] *** Quits: pluri (~pluri@user/pluri) (Quit: Textual IRC Client: www.textualapp.com)
[09:18:06] <ljharb> teut: imports/requires are good, you should want to use them
[09:18:28] <theskillwithin> makes life easy
[09:19:37] <teut> ya, there is a small probability that it should break anything, but there is some probability definitely that it might break something
[09:20:14] <ljharb> teut: nonzero is too large
[09:21:16] <teut> yes, in code it is
[09:23:02] *** Joins: falafel (~falafel@cpe-76-168-195-162.socal.res.rr.com)
[09:23:05] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[09:23:42] <stagas> ljharb: you'd definitely fire me https://github.com/wavepot/sound/blob/master/sound.js#L328-L400 xD
[09:24:19] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:24:56] <teut> I used jaawerth approach of zip then
[09:25:00] *** Joins: sebastorama (~sebastora@190.83.56.68)
[09:26:36] <teut> https://dpaste.org/KQLd#L70   in class  the rule for private it to first write them above constructors, then initialize it in constructors?
[09:26:54] <teut> this[#totals] is not iterable      I get weird error
[09:27:04] <teut> there is no such this in my code
[09:27:33] <teut> oh   this.totals   == this["#totals"]
[09:27:37] <theskillwithin> https://lodash.com/docs/4.17.15#zip
[09:27:46] *** Quits: falafel (~falafel@cpe-76-168-195-162.socal.res.rr.com) (Ping timeout: 250 seconds)
[09:28:11] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 250 seconds)
[09:28:24] *** Quits: Fault (~Fault@152.70.112.168) (Quit: Quit.)
[09:28:24] <ljharb> stagas: yep, that’s horrific code
[09:28:39] <teut> I said that already, installing lodash for a zip is not a good idea
[09:28:55] <ljharb> stagas: it doesn’t even make sense, you can’t play an array
[09:29:15] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:243a:46f9:c0e0:cbfe)
[09:29:19] <theskillwithin> teut well thats what i'd do,  oh well
[09:29:22] <ljharb> teut: there’s nothing wrong with using lodash for that
[09:29:26] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 260 seconds)
[09:29:27] <ljharb> teut: more deps is better
[09:29:48] <stagas> ljharb: i know that's why i dont have a job but then u can do things like that https://github.com/wavepot/sound/blob/master/examples.js#L76-L77
[09:30:08] <teut> in node too does it only includes zip code to reduce package size?
[09:30:13] <stagas> i dont want to go back and wrap it in an () while i'm typing
[09:30:22] *** Joins: Fault (~Fault@150.230.39.7)
[09:30:27] <theskillwithin> import zip from lodash/zip'
[09:30:28] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:243a:46f9:c0e0:cbfe) (Client Quit)
[09:30:32] <theskillwithin> only imports that part
[09:31:17] <ljharb> stagas: that’s not a good thing tho
[09:31:28] <stagas> also the speed, when everything is global they get really good optimization, i benched that
[09:31:33] <ljharb> stagas: that’s like bragging that despite the heroin, at least the tracks look cool
[09:31:40] <stagas> :D
[09:31:43] <ljharb> doesn’t matter. Speed is the least important consideration.
[09:32:05] <stagas> like 10 orders of magnitude
[09:32:17] <stagas> 5ms vs 100ms or smth
[09:32:27] <teut> theskillwithin  I m using cjs
[09:32:41] <theskillwithin> 10 orders of magnitude for someone to read, and refactor using your code
[09:32:47] *** Quits: sheetjs_ (~sheetjs@pool-173-54-145-7.nwrknj.fios.verizon.net) (Quit: Leaving...)
[09:33:17] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[09:33:18] <theskillwithin> readable code is king
[09:33:55] <teut> no OOP code is king
[09:34:04] <theskillwithin> are you a pre-optimizer?
[09:34:19] <teut> no, in every interview they ask tell OOPs
[09:34:42] <stagas> dsp code is unreadable anyway
[09:34:43] <teut> I know poop about oop
[09:34:55] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:35:37] *** Joins: sebastorama (~sebastora@190.83.56.68)
[09:36:16] <stagas> but no really it's very weird that when something is on global it gets optimized, when it gets even one level up, scope access is just killing the optimizer
[09:36:33] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:36:35] <stagas> it's better to pass everything local to the function than to have it accessing the scope
[09:36:36] *** Joins: falafel (~falafel@2603-8000-d800-688c-34f9-26f3-71b0-5b78.res6.spectrum.com)
[09:37:07] <stagas> the interpreter is like: "oh it's accessing the scope, everything might have changed, let me kill all optimizations and reinterpret it "
[09:37:26] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[09:39:27] <theskillwithin> stagas are you talking about v8?
[09:40:24] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[09:40:40] <stagas> v8 yes
[09:40:45] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[09:41:02] *** Quits: silly (~silly@user/silly) (Ping timeout: 240 seconds)
[09:42:40] <ljharb> stagas: doesn't matter if it's a million, still not worth it
[09:45:32] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:46:14] *** Joins: sebastorama (~sebastora@190.83.56.68)
[09:46:28] <teut> https://dpaste.org/asPk  I console logged something and I got this weird output
[09:46:46] *** Joins: vysn (~vysn@user/vysn)
[09:46:51] <teut> why are some keys  in single quotes while others not?
[09:46:53] <theskillwithin> was listening to elon the other day about rocket engineering,  when they test a rocket,  they might have 10 predictions how it will fail,  but it will end up failing in a different way.   so if they put resources into those 10 predictions would have lost a lot of money
[09:47:17] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[09:47:21] <theskillwithin> pre-optimization is not good
[09:47:53] <ljharb> teut: the only things with quotes are the ones that can't work without them
[09:47:59] <ljharb> teut: mostly spaces
[09:48:23] <teut> oh , so I need to apply trim()
[09:48:29] <teut> trim ,strip whatever
[09:48:33] <teut> thanks
[09:49:07] <teut> nope, convert to snakes or camels
[09:50:13] <stagas> theskillwithin: my case was post optimization, why was my prototype method 10x slower than the function i was testing before? turns out the answer is the function was declared on the global, where the prototype function was accessing the scope. So i end up doing this thing: https://github.com/wavepot/sound/blob/acc77df15b9d24859635f06d6d61f102564134f2/sound.js#L320-L325
[09:50:22] <theskillwithin> also its not inutitive to us humans where the quickest way to optimize is
[09:50:34] <stagas> new Function() registers on the global, it doesn't have access to scope so it gets optimized super good
[09:50:44] <stagas> the code is shit but it's fast
[09:50:46] <stagas> :D
[09:50:49] <teut> that  object  is   this.#totals      ,      for (let [k, _] of this.#totals) {}    //  gives error this[#totals] is not iterable
[09:50:55] <teut> looks iterable to me
[09:51:06] <theskillwithin> stagas its all good until the rocket blows up
[09:51:45] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[09:52:38] <theskillwithin> https://youtu.be/EE1R8FYUJm0
[09:52:38] <skillbot> YouTube Title: Donald Knuth: Programming, Algorithms, Hard Problems & the Game of Life | Lex Fridman Podcast #219
[09:52:43] <stagas> what would be great would be a project that compiles regular readable code to optimized global code, idk if google closure does that or smth
[09:53:35] <theskillwithin> stagas well, I think thats the attempt in some things
[09:53:35] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[09:53:40] <teut> no it would be great if you can generate code from uml diagram
[09:53:45] <stagas> but i'd like to tell it i don't need "correctness" instead give me as much optimizations as possible even if it pollutes all global scopes
[09:53:52] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[09:54:10] <ljharb> stagas: then it wouldn't be javascript
[09:54:18] <ljharb> stagas: if perf is that important to you, use wasm instead of ruining js
[09:54:26] <theskillwithin> ljharb well doesn't v8 do a lot of internal optimizations?
[09:54:28] <ljharb> (google closure compiler is trash)
[09:54:38] <ljharb> theskillwithin: every engine does, but coding for those is always reckless
[09:55:01] <ljharb> v8 changed up its entire engine a year or two ago, so a lot of the code that was super fast in v8 ended up being slow in the new v8
[09:55:11] <ljharb> which is always a risk when you write unidiomatic code for correctness
[09:56:03] *** Quits: hemstock (~hemstock@68.71.244.6) ()
[09:56:08] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:56:36] <stagas> v8 does many passes, so the code will eventually reach a point of being fast but after a few times it's been run and it's not changing
[09:56:44] <stagas> if you need cold start speed then it's not going to work
[09:56:50] *** Joins: sebastorama (~sebastora@190.83.56.68)
[09:57:07] <theskillwithin> like a jet engine
[09:57:18] <stagas> so assemblyscript ftw now
[09:58:54] <theskillwithin> well I still call that internal optimization.  from my perspective as a simple coder
[10:01:08] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[10:01:16] <theskillwithin> CAP seems to have a much higher impact, than optimization of code, in rl
[10:01:34] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[10:01:58] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[10:02:12] <teut> whats CAP/
[10:02:13] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[10:02:13] <teut> ?
[10:02:33] <theskillwithin> https://en.wikipedia.org/wiki/CAP_theorem
[10:02:33] *** Joins: mickey8 (~user@user/mickey)
[10:02:42] <stagas> ljharb: yup for this kind of code i'm using wasm/asssemblyscript now, it's 100% speed and steady, never glitching no gc no hiccups, just raw metal whatever u give it
[10:02:43] <teut> oh this one, i know this
[10:03:04] <theskillwithin> teut ya, fancy words for AWS shit
[10:03:29] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:e126:f727:a440:701d) (Quit: Client closed)
[10:04:32] *** Joins: mexen (uid495612@user/mexen)
[10:05:26] <theskillwithin> stagas wtf does 100% seed mean?
[10:05:30] <theskillwithin> speed
[10:06:26] <theskillwithin> stagas like 8 years ago i was hearing about wasm, all excited,  and its not really penetrated main stream.
[10:06:45] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:06:45] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Ping timeout: 250 seconds)
[10:06:51] <stagas> means it's just as good as writing the same code in C
[10:06:52] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[10:07:21] <stagas> there's nothing else in the code path
[10:07:39] *** Joins: sebastorama (~sebastora@190.83.56.68)
[10:07:56] <theskillwithin> then why not are most npm packages written with wasm now?
[10:08:03] <stagas> no hidden interpreter code inbetween the calls, as good as it can get
[10:08:22] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Remote host closed the connection)
[10:08:28] <sheetjs> wasm is a dead end for a host of reasons
[10:09:10] <Decker> the interop/marshalling between JS and WASM makes it impractical for things like single-function call; really need a good amount of work done externally
[10:09:18] <stagas> idk people don't care about speed, i was looking for benchmark libraries this week there's like a couple and abandoned or solo projects, noone benchmarks their code
[10:09:36] *** Parts: Decker (~d3x0r@user/d3x0r) (Closing Window)
[10:09:44] *** Joins: Decker (~d3x0r@user/d3x0r)
[10:09:59] <stagas> sheetjs: wasm is amazing just doesn't have too much traction atm
[10:10:08] <theskillwithin> first paint on page is really all that matters
[10:10:17] <theskillwithin> above the fold
[10:10:55] <sheetjs> its a dead end just like "asm.js"
[10:11:31] <theskillwithin> also not being a dick and loading large images on phone matters
[10:11:38] <sheetjs> initially it seems like you can define a subset of the language and optimize it, like pypy's "rpy"
[10:11:54] <stagas> the fact that u can write wasm and have the same binary running in literally every platform at raw speed is crazy
[10:12:09] <stagas> even in microcontrollers
[10:13:03] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:13:53] <stagas> and that binary being sandboxed, so phones can run it, anything, i think ppl don't realize how much it liberates, i think it's the association with "web" in "web"assembly that is off putting, when it has nothing to do with web really, just that browsers have wasm compilers running in them
[10:14:40] <theskillwithin> i don't find that off putting at all, the opposite
[10:15:17] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[10:15:50] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[10:16:31] <stagas> even the introspection, that the binary can be decompiled to an almost high level-looking language that you can read and see what's happening immediately is also crazy
[10:17:22] <theskillwithin> crazy good?
[10:17:29] <stagas> yup
[10:17:32] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:18:06] <theskillwithin> well its a dream that never happened
[10:18:08] *** Quits: Tempesta (Tempesta@user/tempesta) (Quit: See ya!)
[10:18:13] *** Joins: sebastorama (~sebastora@190.83.56.68)
[10:18:14] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 246 seconds)
[10:18:57] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[10:18:59] *** Quits: falafel (~falafel@2603-8000-d800-688c-34f9-26f3-71b0-5b78.res6.spectrum.com) (Ping timeout: 264 seconds)
[10:19:30] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[10:19:44] <theskillwithin> i remember being at conference, listening to talk about it,  oh wow! is this going to be in our future! awesome!
[10:19:49] <theskillwithin> nope.
[10:19:59] *** Joins: Samian (~s@user/samian)
[10:20:02] *** Quits: derjanni (~Hans@ip-88-153-100-48.hsi04.unitymediagroup.de) (Ping timeout: 240 seconds)
[10:20:05] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[10:20:56] <stagas> js took 15 years to become mainstream
[10:23:32] <theskillwithin> now its in space
[10:24:16] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 245 seconds)
[10:24:18] *** Joins: derjanni (~Hans@p4ff80526.dip0.t-ipconnect.de)
[10:25:10] <stagas> what's with the space fetish :D it's there and it's black we don't care elon
[10:25:55] <stagas> unless u use wasm in the rockets, then we care
[10:26:00] <stagas> :P
[10:27:20] <stagas> i have to continue my procrastination writing a cli arguments parser because there weren't any already
[10:28:09] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:28:28] *** Quits: derjanni (~Hans@p4ff80526.dip0.t-ipconnect.de) (Quit: Textual IRC Client: www.textualapp.com)
[10:28:51] *** Joins: sebastorama (~sebastora@190.83.56.68)
[10:28:56] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[10:29:51] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Client Quit)
[10:31:27] *** Joins: tex (~super@user/dix)
[10:31:49] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:32:32] *** Quits: quazimodo (~quazimodo@n1-40-235-47.bla1.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[10:33:16] *** Quits: Fusl (fusl@1.0.0.127.in-addr.arpa.li) (Read error: Connection reset by peer)
[10:33:29] *** Parts: mikey__ (~mikey__@user/mikey/x-6463285) (WeeChat 3.3)
[10:36:41] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:f90f:1666:4a4:2836)
[10:37:15] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[10:37:58] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:f90f:1666:4a4:2836) (Client Quit)
[10:38:46] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:39:39] *** Joins: sebastorama (~sebastora@190.83.56.68)
[10:40:06] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[10:44:14] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:45:27] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[10:45:46] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 268 seconds)
[10:47:46] *** Joins: Tempesta (~Tempesta@user/tempesta)
[10:49:33] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:49:45] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[10:50:15] *** Joins: sebastorama (~sebastora@190.83.56.68)
[10:53:22] *** calcmandan_ is now known as calcmandan
[10:54:24] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[10:55:38] *** Joins: D4mned (~Dmnd@212.101.253.146)
[10:57:48] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[11:00:09] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:00:51] *** Joins: sebastorama (~sebastora@190.83.56.68)
[11:01:13] *** Joins: gitesh (uid423739@ilkley.irccloud.com)
[11:04:41] <sheetjs> stagas: use commander or yargs
[11:05:43] *** Joins: alystair2 (~alystair@user/alystair)
[11:07:42] <Fault> Love yargs. Love saying “yargs”.
[11:08:18] <sheetjs> yargs notably supports the repeated args
[11:08:24] <sheetjs> like -vv or -vvv
[11:08:36] <sheetjs> so -yargs and -yarrgs and -yarrrrrrrrrrrrrrrrgs
[11:08:38] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 246 seconds)
[11:09:12] <sheetjs> tried using it for the first time recently and stumbled upon a hilarious bug https://github.com/yargs/yargs/issues/2010
[11:10:09] <Fault> yarrrrrrrrgs 😂🏴‍☠️
[11:10:14] *** Quits: alystair2 (~alystair@user/alystair) (Ping timeout: 260 seconds)
[11:10:46] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:11:17] <sheetjs> plenty of old-school tools used to use -vv or -vvv or -vvvv to mean "more verbose"
[11:11:30] *** Joins: sebastorama (~sebastora@190.83.56.68)
[11:12:40] *** Quits: zettabyte (~zettabyte@user/zettabyte) (Quit: Leaving)
[11:14:08] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:41fb:5c60:6504:346a)
[11:17:36] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[11:19:38] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[11:19:40] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[11:21:24] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:22:12] *** Joins: sebastorama (~sebastora@190.83.56.68)
[11:24:02] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[11:24:29] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[11:28:54] *** Joins: graybeard (~graybeard@user/graybeard)
[11:29:13] *** Quits: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[11:31:00] <The_Blode> Good morning all.
[11:31:04] <The_Blode> Quick n00bie question please if I may.
[11:31:06] <The_Blode> I'm doing a test on some code.
[11:31:08] <The_Blode> Value is being passed in by some PHP page "threshold"
[11:31:12] <The_Blode> And it's being passed in as a string of "-1"
[11:31:16] <The_Blode> And my colleague is trying to do if (time < "-1")
[11:31:20] <The_Blode> It's not executing for me when the condition is met. Is there a datatype issue here with the comparison operator? Does the -1 string need converting to make it work?
[11:31:34] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:32:06] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:32:49] *** Joins: sebastorama (~sebastora@190.83.56.68)
[11:33:02] *** Quits: deltab (~deltab@user/deltab) (Ping timeout: 240 seconds)
[11:35:16] <Fault> The_Blode: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/parseInt
[11:35:17] <D4mned> The_Blode it should work without converting
[11:35:25] <The_Blode> Thank you.
[11:35:47] <The_Blode> I mean, in my tests, I'm forcing time to be -400 but the block isn't running
[11:35:53] <The_Blode> -400 < -1
[11:36:14] <The_Blode> Am I missing some logic here?
[11:36:20] <The_Blode> That condition should be true
[11:37:24] <D4mned> so console.log("-400" < -1)
[11:37:32] <D4mned> should print true
[11:37:33] <Fault> n> -400 < -1
[11:37:34] <jellobot> (okay) true
[11:37:43] <Fault> n> '-400' < '-1'
[11:37:44] <jellobot> (okay) false
[11:38:12] <D4mned> yeah one of them should be a number
[11:38:24] <D4mned> or else u are comparing strings
[11:38:26] <The_Blode> Good spot jellobot
[11:38:52] <The_Blode> I know for sure one of the values (one being passed in via Ajax) is converted to string.
[11:39:04] <The_Blode> Well, anything passed in from another page is considered a string in JavaScript right?
[11:39:29] <D4mned> well just convert them anyway lol
[11:39:55] <The_Blode> Thank you guys for your help. I'll feed this back.
[11:41:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Read error: Connection reset by peer)
[11:41:51] <The_Blode> When I converted them it worked. Thanks for the cross validation guys.
[11:41:57] <The_Blode> I'll feed that back to the senior.
[11:41:58] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[11:42:43] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:43:08] *** Joins: deltab (~deltab@user/deltab)
[11:43:25] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:b131:8da1:40ce:540c)
[11:43:26] *** Joins: sebastorama (~sebastora@190.83.56.68)
[11:44:32] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:b131:8da1:40ce:540c) (Client Quit)
[11:53:21] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:53:28] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[11:54:02] *** Joins: sebastorama (~sebastora@190.83.56.68)
[11:56:59] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 256 seconds)
[11:59:15] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 256 seconds)
[12:03:57] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:04:33] *** Quits: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net) (Quit: Going offline, see ya! (www.adiirc.com))
[12:04:40] *** Joins: sebastorama (~sebastora@190.83.56.68)
[12:07:52] *** Joins: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[12:10:10] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) ()
[12:10:20] *** Joins: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3)
[12:11:41] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:14:34] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:15:15] *** Joins: sebastorama (~sebastora@190.83.56.68)
[12:16:14] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:17:28] *** Quits: kmh (~kmh@2a00:6020:5004:6800:7cf7:8db7:6da0:96f1) (Quit: Leaving)
[12:24:22] *** Joins: N4buc0- (~N4buc0@2804:7f4:3487:cd22:a52:66c1:ba81:4436)
[12:25:08] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:25:10] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:26:04] *** Joins: sebastorama (~sebastora@190.83.56.68)
[12:32:15] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[12:33:40] *** Joins: iomari891 (~iomari891@105.112.138.38)
[12:33:44] *** Quits: iomari891 (~iomari891@105.112.138.38) (Client Quit)
[12:35:01] *** Joins: bilbo (~bilbo@host-37-191-190-173.lynet.no)
[12:35:58] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:36:42] *** Joins: sebastorama (~sebastora@190.83.56.68)
[12:37:41] *** Quits: Pixi_ (~Pixi@user/pixi) (Quit: Leaving)
[12:38:57] *** Joins: jetchisel (jetchisel@user/jetchisel)
[12:39:59] *** Quits: N4buc0- (~N4buc0@2804:7f4:3487:cd22:a52:66c1:ba81:4436) (Remote host closed the connection)
[12:40:22] *** Joins: N4buc0- (~N4buc0@2804:7f4:3487:cd22:a52:66c1:ba81:4436)
[12:41:22] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi)
[12:41:36] *** Joins: nik (~nik777@vpn-users-dip-pool165.dip.cf.ac.uk)
[12:42:42] *** Quits: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:45:23] *** Quits: jazzy2 (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[12:45:32] *** Quits: realies (~realies@user/realies) (Ping timeout: 240 seconds)
[12:46:23] *** Joins: N4buc0 (~N4buc0@179.186.178.29.dynamic.adsl.gvt.net.br)
[12:46:29] *** Quits: N4buc0- (~N4buc0@2804:7f4:3487:cd22:a52:66c1:ba81:4436) (Remote host closed the connection)
[12:46:35] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:46:35] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 264 seconds)
[12:47:10] *** Joins: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3)
[12:47:16] *** Joins: sebastorama (~sebastora@190.83.56.68)
[12:48:02] *** Joins: vysn (~vysn@user/vysn)
[12:48:04] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:ac17:22db:cb5c:a5b7)
[12:48:27] *** Joins: kogepan (~kogepan@user/kogepan)
[12:48:41] *** Joins: Pixi (~Pixi@user/pixi)
[12:49:21] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:ac17:22db:cb5c:a5b7) (Client Quit)
[12:51:37] *** Quits: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3) (Client Quit)
[12:52:35] *** Joins: kakashiAL (~kakashi@ip-37-201-199-21.hsi13.unitymediagroup.de)
[12:53:08] *** Joins: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3)
[12:53:36] *** Joins: realies (~realies@user/realies)
[12:56:27] *** Quits: N4buc0 (~N4buc0@179.186.178.29.dynamic.adsl.gvt.net.br) (Remote host closed the connection)
[12:57:11] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:57:42] <The_Blode> Quick one. They told me when they checked it worked fine. Could there be truth to this?
[12:57:54] *** Joins: sebastorama (~sebastora@190.83.56.68)
[12:57:55] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Ping timeout: 250 seconds)
[12:57:59] <The_Blode> Or are we certain that two strings compared with a numeric comparison operating will always return false.
[12:58:21] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (Ping timeout: 268 seconds)
[12:59:12] *** Quits: beowulf_ (sid116@lymington.irccloud.com) ()
[12:59:55] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[13:00:03] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[13:00:36] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:02:04] *** Quits: iomari891 (~iomari891@105.112.138.38) (Client Quit)
[13:06:42] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[13:07:48] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:08:23] *** Joins: de-facto (~de-facto@user/de-facto)
[13:08:31] *** Joins: sebastorama (~sebastora@190.83.56.68)
[13:09:14] *** Joins: nomic (~nomic@185.192.69.224)
[13:14:07] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[13:15:14] <stenno> The_Blode: who told you what?
[13:15:44] <stenno> also whats a 'numeric comparison operation' ?
[13:15:56] *** Quits: Xavier7 (~O_o@179.6.138.143) (Quit:  IRcap  8.72 )
[13:16:06] *** Quits: realies (~realies@user/realies) (Quit: Ping timeout (120 seconds))
[13:16:21] <The_Blode> Hey stenno
[13:16:35] *** Joins: realies (~realies@user/realies)
[13:17:13] <The_Blode> My colleague. When I told her that her piece of work was not working due to the fact that she converted the hardcoded -1 (integer) to "-1" string...which meant the number comparison operator (< less than) was not able to run as you can use that operator on two strings right
[13:17:23] *** Joins: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[13:17:32] <The_Blode> She told me could she use intval...I told her she could not. It has to be ParseInt
[13:17:34] <stenno> if you use < on strings it does a comparison
[13:17:37] <The_Blode> intval is from PHP.
[13:17:40] <stenno> intval is php
[13:17:42] <stenno> yeah
[13:17:50] <stenno> also parseInt sucks, just use number
[13:17:59] <stenno> n> '344' > '4'
[13:18:00] <jellobot> (okay) false
[13:18:07] <The_Blode> So I told her JavaScript will receive this PHP value and convert to string. Am I on the right lines there?
[13:18:17] <stenno> n> '733' > '4' // true
[13:18:17] <jellobot> (okay) true
[13:18:25] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:18:34] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Ping timeout: 260 seconds)
[13:19:09] *** Joins: sebastorama (~sebastora@190.83.56.68)
[13:19:52] <stenno> if javascript uses '>' and '<' on strings it does a comparison, but not a numeric one
[13:20:31] <The_Blode> Ah interesting
[13:20:35] <The_Blode> What is is comparing?
[13:20:44] <The_Blode> n> "my life" > "your life"
[13:20:44] <jellobot> (okay) false
[13:20:54] <stenno> lexical comparison
[13:20:57] <The_Blode> Well...that is most likely false indeed
[13:21:09] <stenno> n> 'foo' > 'bar'
[13:21:09] <The_Blode> n> "b" > "a"
[13:21:11] <jellobot> (okay) true
[13:21:12] <jellobot> (okay) true
[13:21:30] <The_Blode> I learned something today thanks stenno
[13:21:49] <stenno> so '22' is bigger than '111' but smaller than '3'
[13:22:35] *** Quits: realies (~realies@user/realies) (Quit: Ping timeout (120 seconds))
[13:22:37] <stenno> The_Blode: also check out localeCompare if you want to proper string equality testing
[13:22:48] <stenno> (which you don't here but its good to know)
[13:23:19] <theskillwithin> good for sorts sometimes
[13:24:05] <stenno> n> 3 > '23'
[13:24:06] <jellobot> (okay) false
[13:24:13] <stenno> parse to number
[13:24:47] *** Joins: realies (~realies@user/realies)
[13:24:53] <stenno> coerce*
[13:25:01] <The_Blode> Thanks
[13:25:14] *** Joins: voltage (voltage@user/voltage)
[13:25:38] <stenno> n> '3' > 23
[13:25:39] <jellobot> (okay) false
[13:25:49] <The_Blode> Throwing a spanner in the works
[13:25:56] <The_Blode> n> true > 10
[13:25:56] <jellobot> (okay) false
[13:26:03] <stenno> here true is '1'
[13:26:12] <The_Blode> n> true > 1
[13:26:13] <jellobot> (okay) false
[13:26:20] <The_Blode> n> true > 2
[13:26:20] <jellobot> (okay) false
[13:26:32] <stenno> n> true > 0
[13:26:33] <jellobot> (okay) true
[13:26:37] <The_Blode> Ahh
[13:26:49] <The_Blode> Thought I'd throw the boolean to see what happened
[13:26:55] <The_Blode> n> "true" > 0
[13:26:56] <jellobot> (okay) false
[13:27:09] <The_Blode> n> undefined > 0
[13:27:10] <jellobot> (okay) false
[13:27:17] *** Joins: derjanni (~Hans@p4ff80526.dip0.t-ipconnect.de)
[13:27:51] *** Quits: derjanni (~Hans@p4ff80526.dip0.t-ipconnect.de) (Client Quit)
[13:28:15] <theskillwithin> n> Array(16).join('w00t' -1) + ' Watman!'
[13:28:16] <jellobot> (okay) 'NaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaN Watman!'
[13:28:47] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 256 seconds)
[13:29:02] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:29:12] *** Joins: jazzy (~jaziz@user/jaziz)
[13:29:49] *** Joins: sebastorama (~sebastora@190.83.56.68)
[13:30:41] <The_Blode> lol
[13:31:01] <The_Blode> That's funny
[13:31:28] <The_Blode> Also reminds me to the opening scene of Robocop "nanananananananan"
[13:31:30] *** Joins: jazzy2 (~jaziz@user/jaziz)
[13:32:20] *** Parts: theskillwithin (~theskillw@user/theskillwithin) (Textual IRC Client: www.textualapp.com)
[13:32:35] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[13:32:36] *** Joins: theskillwithin (~theskillw@user/theskillwithin)
[13:33:00] <theskillwithin> theres a talk out there i think called watman but cant find
[13:33:59] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[13:34:31] <theskillwithin> found it
[13:34:32] <theskillwithin> https://www.destroyallsoftware.com/talks/wat
[13:37:47] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[13:38:30] *** Joins: derjanni (~Hans@p4ff80526.dip0.t-ipconnect.de)
[13:39:44] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:40:03] *** Joins: kmh (~kmh@2a00:6020:5004:6800:8c9f:4f4b:44c8:e95)
[13:40:26] *** Joins: sebastorama (~sebastora@190.83.56.68)
[13:41:55] *** Joins: givemeyourpies (~givemeyou@c-66-235-2-202.sea.wa.customer.broadstripe.net)
[13:44:19] *** Quits: kmh (~kmh@2a00:6020:5004:6800:8c9f:4f4b:44c8:e95) (Read error: Connection reset by peer)
[13:44:31] *** Joins: kmh (~kmh@2a00:6020:5004:6800:8c9f:4f4b:44c8:e95)
[13:45:22] *** Quits: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:45:22] *** Quits: D4mned (~Dmnd@212.101.253.146) (Read error: Connection reset by peer)
[13:45:30] <theskillwithin> The_Blode i stole it.
[13:45:57] *** Joins: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3)
[13:46:21] *** Joins: iomari891 (~iomari891@105.112.138.38)
[13:46:32] *** Joins: ThePhilgrim (~thephilgr@151.41.185.44)
[13:46:59] <ThePhilgrim> Hey, anybody who uses Atom with linter-spell & linter-spell-javascript?
[13:47:33] <theskillwithin> The_Blode your not using VSCode yet?
[13:47:36] <theskillwithin> oops
[13:47:40] <theskillwithin> ThePhilgrim *
[13:47:49] <ThePhilgrim> I like Atom
[13:48:01] <ThePhilgrim> Haven't seen a reason to change
[13:48:28] <theskillwithin> I liked Sublime Text,  but then VSCode took over the world
[13:48:32] *** Quits: sickdyd (~sickd@FL1-122-135-172-49.tky.mesh.ad.jp) (Ping timeout: 240 seconds)
[13:48:47] <ThePhilgrim> Yeah, I don't get why everyone are using VSCode tho
[13:48:48] *** Quits: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3) (Client Quit)
[13:48:54] *** Joins: han-solo (~hanish@user/han-solo)
[13:50:21] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:50:31] <poiqwepoiqwe> its a decent editor. so is atom. shell integration in vscode is done well. currently use atom
[13:50:48] <theskillwithin> ThePhilgrim even tho both are electron apps, vscode did some trickery to make faster.  and easier to make plugins
[13:51:03] <ThePhilgrim> poiqwepoiqwe: Do you use js linter in Atom?
[13:51:04] *** Joins: sebastorama (~sebastora@190.83.56.68)
[13:51:19] <poiqwepoiqwe> nope
[13:51:25] <ThePhilgrim> theskillwithin: got it! I don't make plugins :D
[13:51:28] *** Quits: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch) (Quit: Leaving)
[13:51:30] <stenno> vscode is quicker than atom but still FOSS
[13:51:43] *** Quits: nik (~nik777@vpn-users-dip-pool165.dip.cf.ac.uk) (Quit: Leaving)
[13:51:53] <ThePhilgrim> I have never noticed Atom being slow tbh
[13:51:56] <theskillwithin> basically vscode has won the war, if there was a war
[13:52:08] <theskillwithin> i do miss sublime text,  but vscode is where its at
[13:52:08] <stenno> so its preferrable to both atom and sublime if you don't want to spend money
[13:52:21] <stenno> sublime is probably still better than vscode
[13:52:28] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:c089:f29e:6c9a:ae29)
[13:52:37] <The_Blode> I like Notepad++ personally :)
[13:52:42] <The_Blode> I'm content
[13:52:47] <poiqwepoiqwe> still use notepad++
[13:52:49] <theskillwithin> stenno sublime is deff faster
[13:53:09] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:c089:f29e:6c9a:ae29) (Client Quit)
[13:53:48] *** Joins: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3)
[13:54:17] *** Quits: ThePhilgrim (~thephilgr@151.41.185.44) (Remote host closed the connection)
[13:54:37] <theskillwithin> back when i was using sublime,  a lot of people started using atom,  then i had to open a huge log file in atom.  it crashed.  i never went back.  sublime text FTW
[13:54:49] *** Joins: ThePhilgrim (~thephilgr@151.41.185.44)
[13:54:58] <theskillwithin> atom sucks balls
[13:56:13] <theskillwithin> stenno ugh sublime so snappy,  i miss those days
[13:56:28] <theskillwithin> had it configured just how i wanted
[13:56:37] <theskillwithin> but then VSCode took over the world
[13:56:57] <theskillwithin> and i eventually switched to VSCode
[13:57:03] <stenno> you can still just use sublime
[13:57:07] <The_Blode> Does anybody else feel like VSCode is slighty heavy?
[13:57:15] <The_Blode> And not as nimble as say NP++
[13:57:18] <stenno> vscode is electron
[13:57:23] <The_Blode> Well
[13:57:29] <poiqwepoiqwe> less +F is great for logs
[13:57:38] <The_Blode> So you kinda need a decent computer to have a good experience right?
[13:57:45] <theskillwithin> stenno i still pay for sublime license,  i like to keep it around
[13:57:59] *** Quits: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net) (Remote host closed the connection)
[13:58:02] <stenno> The_Blode: you need a normal computer
[13:58:11] *** Joins: Swahili (~Swahili@cpc153693-lewi20-2-0-cust508.2-4.cable.virginm.net)
[13:59:03] *** Joins: AtomicInteger (~primamate@p2e545658.dip0.t-ipconnect.de)
[13:59:36] <theskillwithin> stenno what do you use?
[13:59:38] *** Quits: ThePhilgrim (~thephilgr@151.41.185.44) (Ping timeout: 260 seconds)
[14:00:11] <stenno> vscode
[14:00:58] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:01:03] <theskillwithin> it took over
[14:01:20] *** Quits: derjanni (~Hans@p4ff80526.dip0.t-ipconnect.de) (Quit: Textual IRC Client: www.textualapp.com)
[14:01:40] *** Joins: sebastorama (~sebastora@190.83.56.68)
[14:04:07] <AtomicInteger> Can someone tell me, when I have in package.json set react only in `peerDependencies`, then when I run `npm install` should it appear in node_modules folder? I was expecting that not.
[14:04:20] *** Quits: CiaoSen (~Jura@p200300c95730dd002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[14:04:53] <theskillwithin> react should never be in peer deps
[14:06:58] <AtomicInteger> ok, that's confusing. Do you happen to know some good article I could read, because I am randomly searching SO and some 2016 articles and I feel they seem to be contradicting
[14:07:24] <theskillwithin> AtomicInteger if its a dep, will end up in node_modules
[14:08:05] <theskillwithin> thats how it works
[14:08:31] <theskillwithin> if its inside devDependencies then wont be deployed to server cuz not needed
[14:08:46] <stenno> peer not dev
[14:08:50] *** Joins: thiras (~thiras@user/thiras)
[14:09:49] <theskillwithin> !xy @ AtomicInteger
[14:09:49] <jellobot> AtomicInteger, The XY problem: You want to do X, but don't know how. You think you can solve it using Y, but don't know how to do that either. You ask about Y, which is a strange thing to want to do. Just ask about X. See also: http://xyproblem.info/
[14:09:52] *** Quits: jazzy2 (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[14:11:35] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:12:14] <AtomicInteger> Ok the X is: I want to create separate npm package components implemented in storybook, and I want to use in my main project. And before I can deploy it somewhere I want to test it by linking storybook stuff to main package. Because storybook stuff has react in node_modules and main project has also react in node_modules, I get multi-react error when running the app.
[14:12:16] *** Joins: sebastorama (~sebastora@190.83.56.68)
[14:13:08] *** Quits: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:13:23] <AtomicInteger> I thought when in storybook I define react as peer dep, then the main project will not pick it up, but will use only it's own react.
[14:14:03] <theskillwithin> oof wow
[14:14:16] <theskillwithin> well storybook is usually in the same project
[14:14:42] <stenno> theskillwithin: do you know the difference of peerDeps and devDeps?
[14:14:58] <theskillwithin> stenno srsly?
[14:15:02] <stenno> because AtomicInteger talks about peerdeps and you talk about devdeps
[14:15:52] <theskillwithin> stenno i thought explaining devdeps would be good information to add
[14:16:17] <stenno> why should react not be in peerdependencies?
[14:16:46] <AtomicInteger> I think theskillwithin makes sense, whatever kind of dependency, after running `npm install` it ends in node_modules folder
[14:16:57] <theskillwithin> cuz you never use it as such,  while it might be there sure,  but primarly use it as package in ur project stenno
[14:17:36] <theskillwithin> AtomicInteger example i made a long time ago with react project with storybook https://github.com/theskillwithin/theskillwithin-boilerplate/tree/master/src
[14:17:50] *** Quits: dmanto (~dmanto@181.110.128.50) (Ping timeout: 260 seconds)
[14:18:51] <theskillwithin> i like doing from scratch
[14:19:41] <stenno> AtomicInteger: https://blog.bitsrc.io/understanding-peer-dependencies-in-javascript-dbdb4ab5a7be
[14:19:44] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 246 seconds)
[14:19:56] <AtomicInteger> yes, you have the storybook inside the project. I would like to setup development of project agnostic design system. So to have the components provided by separate NPM package.
[14:20:19] <stenno> (there you can see examples for react being used as peerdep)
[14:20:39] <AtomicInteger> Thanks stenno , I am going to read it now
[14:20:52] <theskillwithin> stenno why every time i help someone, if your around you instead of helping them, question me
[14:21:11] <stenno> theskillwithin: because the statement 'react should never be in peerdeps' is wrong
[14:22:11] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:22:29] <theskillwithin> stenno as a requried dep,  if your using it outside of react then thats a problem
[14:22:53] *** Joins: sebastorama (~sebastora@190.83.56.68)
[14:23:10] *** Quits: mei3 (~mei@user/mei) (Read error: Connection reset by peer)
[14:23:33] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[14:23:55] *** Joins: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3)
[14:24:48] <theskillwithin> stenno i need to get super anal when your online instead of just directing people to solve thier problem i guess
[14:25:04] <stenno> you should be correct
[14:25:10] <stenno> when you support others, yes
[14:25:11] *** Joins: Trieste (T@user/pilgrim)
[14:25:27] <stenno> or rather, you should be ready to be corrected
[14:26:02] <stenno> being corrected is fine and normal, it happens all the time
[14:26:43] <theskillwithin> nah in past happened when not necessary, its a coverup
[14:27:01] <stenno> ...coverup? what?
[14:27:04] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[14:27:49] <stenno> do you see others correcting you as a personal insult or what
[14:28:10] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[14:28:41] <theskillwithin> you srsly thought I didn't know what a user agent stylesheet was the other day
[14:29:05] <theskillwithin> like cmon
[14:29:08] *** Quits: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:29:42] <theskillwithin> maybe i am sensitive for a reason here
[14:30:07] *** Joins: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3)
[14:31:15] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0c0-17.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:32:21] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[14:32:47] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:33:29] *** Joins: sebastorama (~sebastora@190.83.56.68)
[14:33:42] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:35:29] *** Joins: jschaub (~jschaub@pd907fca9.dip0.t-ipconnect.de)
[14:38:03] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[14:38:11] <theskillwithin> mhm thats what i thought
[14:38:58] *** Joins: onizu (uid373383@uxbridge.irccloud.com)
[14:42:44] *** Quits: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:43:24] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:44:06] *** Joins: sebastorama (~sebastora@190.83.56.68)
[14:46:13] <AtomicInteger> If you are interested I have found this article is about my issue: https://penx.medium.com/managing-dependencies-in-a-node-package-so-that-they-are-compatible-with-npm-link-61befa5aaca7
[14:46:52] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[14:48:04] *** Joins: ThePhilgrim (~thephilgr@151.41.185.44)
[14:50:21] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[14:51:05] <stenno> i just claimed that you didn't know that a div is only block because of a browsers UA stylesheet, not because of some initial display property (which is 'inline')
[14:51:20] *** Parts: bilbo (~bilbo@host-37-191-190-173.lynet.no) ()
[14:51:26] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[14:52:19] <stenno> which is different to 'not knowing what a UA stylesheet is'
[14:52:46] <theskillwithin> i was quizzing someone in order to judge their css knowledge to help them better
[14:54:00] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:54:14] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[14:54:37] <theskillwithin> oh wait, ugh i said react should never be in peer deps.   ya that was wrong
[14:54:45] *** Joins: sebastorama (~sebastora@190.83.56.68)
[14:55:30] <theskillwithin> stenno of course i know that tho, thats css 101
[14:55:58] <theskillwithin> learned that over 20 years ago
[14:56:05] *** Joins: chao (~stenno@user/stenno)
[14:56:16] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[14:56:25] *** stenno is now known as Guest5651
[14:56:25] *** Quits: Guest5651 (~stenno@user/stenno) (Killed (osmium.libera.chat (Nickname regained by services)))
[14:56:25] *** chao is now known as stenno
[14:56:54] <stenno> i would just appreciate that you take my input as it is and not twist it into some bizarre absolutes
[14:57:48] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:3dd3:20a8:4dfb:a3d)
[14:58:20] <theskillwithin> stenno that css shit was odd tho, you gotta admit.   sometimes i do socratac method,  but you viewed my way of teaching as a way to attack me
[14:58:34] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:3dd3:20a8:4dfb:a3d) (Client Quit)
[14:59:09] <stenno> no, i critized you because you made an ambigous question in a certain situation
[15:00:07] <stenno> and instead of saying 'stenno, i am talking about css here' you said 'omg how could you think that i don't know what UA stylesheet is'
[15:00:10] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:00:42] <theskillwithin> idk seems like normal response
[15:01:42] *** Joins: DnzAtWrk (~DnzAtWrk@2914.pc.puv.fi)
[15:01:43] <theskillwithin> i like to guide people,  and you misunderstood that, then attacked me for it
[15:02:06] <stenno> this is how you like to interpret it, but it is unrelated to reality
[15:02:50] <jaawerth> fwiw I understand you may expected some benefit of the doubt on knowledge, I think stenno's participation in the channel has earned the benefit of the doubt on good-faith participation in the channel, and a socratic method teaching style does sound like something that could lead to confusion with a third party in an IRC channel so maybe this is a mistunderstanding? like, you say "attacked" but
[15:02:52] <theskillwithin> if you had read above you could have clearly seen i was helping that person
[15:02:52] <jaawerth> was the tone of the correction really that bad?
[15:03:48] <stenno> i am wrong too all the time but i don't see a correction as a personal attack
[15:04:07] <stenno> even if it was created by a misunderstanding
[15:04:37] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:04:38] <theskillwithin> what offended me, was you said I was ignorant, almost dumb by saying i didn't know ua
[15:04:56] <stenno> i did not say you didn't know what UA is.
[15:05:02] <stenno> yet you keep repeating it
[15:05:23] *** Joins: sebastorama (~sebastora@190.83.56.68)
[15:05:51] <stenno> i just said that the initial display property of a div is inline, not block
[15:06:00] *** Joins: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3)
[15:06:17] <stenno> and the fact that its 'block' is set solely by the UA stylesheet which is a whatwg _recommendation_
[15:06:18] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:06:43] <theskillwithin> stenno so you do respect my help and opinions etc or wtver?
[15:07:00] <stenno> i respect all help that is done in good faith
[15:08:18] <theskillwithin> ...
[15:08:58] * poiqwepoiqwe came for the js but stayed for the drama
[15:09:05] <jaawerth> lol
[15:10:11] *** Joins: iomari891 (~iomari891@105.112.138.38)
[15:15:15] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:15:45] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[15:15:57] *** Joins: sebastorama (~sebastora@190.83.56.68)
[15:17:35] <theskillwithin> welp fml
[15:19:46] <ashnur> too much drama
[15:20:06] <theskillwithin> its ok
[15:20:27] <ashnur> everything is ok until it isn't
[15:20:59] <poiqwepoiqwe> theskillwithin is still trying to work out whether or not to be insulted
[15:21:49] *** Joins: DnzAtWrk3 (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[15:21:50] <theskillwithin> tis a mystery
[15:24:30] *** Quits: DnzAtWrk (~DnzAtWrk@2914.pc.puv.fi) (Ping timeout: 268 seconds)
[15:25:51] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:26:32] *** Joins: sebastorama (~sebastora@190.83.56.68)
[15:28:30] *** Quits: kmh (~kmh@2a00:6020:5004:6800:8c9f:4f4b:44c8:e95) (Quit: Leaving)
[15:31:49] *** Joins: recyclehero (~alistar@ec2-3-127-140-208.eu-central-1.compute.amazonaws.com)
[15:32:19] <recyclehero> console.log('hi guys')
[15:33:36] <stenno> n> const { log } = console; log('hi'); // works in node but not in the browser
[15:33:37] <jellobot> (okay) hi
[15:34:19] <tatiana> n> 1 + 1
[15:34:20] <jellobot> (okay) 2
[15:34:23] <tatiana> WHAT?
[15:34:35] <stenno> n> 1.+.1
[15:34:36] <jellobot> (okay) 1.1
[15:35:10] <stenno> n> 1.-.1
[15:35:11] <jellobot> (okay) 0.9
[15:35:18] <tatiana> WHAT?
[15:35:32] <stenno> hehe
[15:35:53] <tatiana> i'm offended
[15:35:57] <stenno> n> 1.+ +.1
[15:35:58] <jellobot> (okay) 1.1
[15:36:22] <Alexendoo> It works in some browsers
[15:36:27] <stenno> Alexendoo: fair
[15:36:27] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:36:27] <Alexendoo> didn't always though
[15:36:35] <stenno> its implementation detail i guess?
[15:37:04] <Alexendoo> They bound it so you could do like addEventListener("..", console.log)
[15:37:09] *** Joins: sebastorama (~sebastora@190.83.56.68)
[15:37:17] <stenno> aah i see
[15:38:02] *** Quits: konrados (~konrados@user-5-173-144-8.play-internet.pl) (Ping timeout: 260 seconds)
[15:39:07] <OnkelBlade> Hi all. moment.toDate() returns Date. In my case it contains "Invalid date". So is it also a date? Then how to check if it's invalid date or just a normal date?
[15:39:32] <OnkelBlade> I don't see any mentions of this value here: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date
[15:40:20] <stenno> yes, its still a date
[15:40:25] <stenno> check the constructor function
[15:40:27] <stenno> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date
[15:40:34] <stenno> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date#return_value
[15:40:34] *** Quits: WillPittenger (~willpitte@2001:470:69fc:105::1bf) (Quit: Bridge terminating on SIGTERM)
[15:40:34] *** Quits: nicoty (~nicoty@user/nicoty) (Quit: Bridge terminating on SIGTERM)
[15:40:34] *** Quits: paulcarroty (~paulcarro@2001:470:69fc:105::216) (Quit: Bridge terminating on SIGTERM)
[15:40:35] *** Quits: saltrocklamp[m] (~elementio@user/hexology) (Quit: Bridge terminating on SIGTERM)
[15:40:35] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Quit: Bridge terminating on SIGTERM)
[15:40:36] *** Quits: tomjwatson[m] (~tomjwatso@2001:470:69fc:105::daf6) (Quit: Bridge terminating on SIGTERM)
[15:40:37] *** Quits: cows[m] (~cowsmatri@2001:470:69fc:105::758c) (Quit: Bridge terminating on SIGTERM)
[15:40:37] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Quit: Bridge terminating on SIGTERM)
[15:40:37] *** Quits: pixel[m] (~pixelspac@2001:470:69fc:105::fd73) (Quit: Bridge terminating on SIGTERM)
[15:40:38] *** Quits: trms[m] (~trmsmatri@2001:470:69fc:105::1:28d2) (Quit: Bridge terminating on SIGTERM)
[15:40:38] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Bridge terminating on SIGTERM)
[15:40:38] *** Quits: volgar1x (~volgar1xm@2001:470:69fc:105::e61d) (Quit: Bridge terminating on SIGTERM)
[15:40:38] *** Quits: queue[m] (~queue-@2001:470:69fc:105::1:1892) (Quit: Bridge terminating on SIGTERM)
[15:40:38] *** Quits: jonnycat[m] (~jonnycatm@2001:470:69fc:105::f575) (Quit: Bridge terminating on SIGTERM)
[15:40:39] *** Quits: ericson2314 (~ericson23@2001:470:69fc:105::70c) (Quit: Bridge terminating on SIGTERM)
[15:40:39] *** Quits: greggerz (~greggerzm@2001:470:69fc:105::da2) (Quit: Bridge terminating on SIGTERM)
[15:40:40] *** Quits: psyxo[m] (~mercvrivs@user/psyxopompos) (Quit: Bridge terminating on SIGTERM)
[15:40:41] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Bridge terminating on SIGTERM)
[15:40:41] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Quit: Bridge terminating on SIGTERM)
[15:40:43] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: Bridge terminating on SIGTERM)
[15:40:43] *** Quits: rickbutton[m] (~rickbutto@2001:470:69fc:105::1:2465) (Quit: Bridge terminating on SIGTERM)
[15:40:43] *** Quits: Deide (~deide@user/deide) (Quit: Bridge terminating on SIGTERM)
[15:40:45] *** Quits: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4) (Quit: Bridge terminating on SIGTERM)
[15:40:45] *** Quits: loke[m] (~loke@2001:470:69fc:105::237) (Quit: Bridge terminating on SIGTERM)
[15:40:45] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (Quit: Bridge terminating on SIGTERM)
[15:40:46] *** Quits: christian[m]1 (~christian@2001:470:69fc:105::f6f1) (Quit: Bridge terminating on SIGTERM)
[15:40:47] <stenno> rip matrix
[15:41:05] <stenno> OnkelBlade: its a Date object but its toString returns 'invalid date'
[15:41:38] <jaawerth> I think a good check would be Number.isNaN(Number(dateValue))
[15:41:40] <OnkelBlade> Ah, so I should call it and compare strings
[15:42:05] <OnkelBlade> jaawerth: dateValue is that date?
[15:42:14] <jaawerth> yeah. or prefix with a ! if you want to check for validity and not invalidity
[15:42:16] <OnkelBlade> Ah, nevermind, it is
[15:42:56] <stenno> n> Number('0invalid date')
[15:42:57] <jellobot> (okay) NaN
[15:42:59] *** Joins: eXistenZ (~biskit@2001:4df4:20b3:400:8d6a:d032:2beb:aa94)
[15:43:12] <jaawerth> n> const isValidDate = (d) => !Number.isNaN(Number(d)); isValidDate(new Date('batman'))
[15:43:13] <jellobot> (okay) false
[15:43:36] <jaawerth> or just "isValidNumerical" I guess since it would also work or like number strings and stuff haha
[15:44:58] <OnkelBlade> Thanks guys
[15:45:32] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 240 seconds)
[15:47:04] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:47:09] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[15:47:49] <theskillwithin> ashnur wise words
[15:47:49] *** Joins: sebastorama (~sebastora@190.83.56.68)
[15:50:24] <ashnur> ikr
[15:50:37] <ashnur> its my upbringing
[15:51:01] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[15:51:21] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[15:53:20] *** Joins: pmercado_ (~pmercado@186.107.36.6)
[15:54:35] *** Joins: sunarch (uid526836@user/sunarch)
[15:56:37] *** Quits: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:57:30] *** Joins: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net)
[15:57:40] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:58:15] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[15:58:17] <theskillwithin> ashnur theres that saying, breaking bread
[15:58:20] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[15:58:20] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[15:58:23] *** Joins: sebastorama (~sebastora@190.83.56.68)
[15:58:24] *** Joins: forza4 (~pa@227.105.117.91.static.reverse-mundo-r.com)
[15:58:33] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[15:58:33] *** Joins: nicoty (~nicoty@user/nicoty)
[15:58:33] *** Joins: jonnycat[m] (~jonnycatm@2001:470:69fc:105::f575)
[15:58:33] *** Joins: Guest9402 (~mercvrivs@2001:470:69fc:105::2ee6)
[15:58:33] *** Joins: kadoban (~kadoban@user/kadoban)
[15:58:33] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[15:58:33] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[15:58:33] *** Joins: Deide (~deide@user/deide)
[15:58:33] *** Joins: volgar1x (~volgar1xm@2001:470:69fc:105::e61d)
[15:58:34] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[15:58:34] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[15:58:46] *** Joins: cows[m] (~cowsmatri@2001:470:69fc:105::758c)
[15:58:47] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[15:58:58] *** Joins: tomjwatson[m] (~tomjwatso@2001:470:69fc:105::daf6)
[15:58:58] *** Joins: ericson2314 (~ericson23@2001:470:69fc:105::70c)
[15:59:12] *** Joins: queue[m] (~queue-@2001:470:69fc:105::1:1892)
[15:59:12] *** Joins: christian[m]1 (~christian@2001:470:69fc:105::f6f1)
[15:59:24] *** Joins: pixel[m] (~pixelspac@2001:470:69fc:105::fd73)
[15:59:37] *** Joins: trms[m] (~trmsmatri@2001:470:69fc:105::1:28d2)
[15:59:37] *** Joins: saltrocklamp[m] (~elementio@2001:470:69fc:105::5065)
[15:59:37] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[15:59:49] *** Joins: rickbutton[m] (~rickbutto@2001:470:69fc:105::1:2465)
[15:59:49] *** Joins: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4)
[16:02:20] *** forza4 is now known as doseo
[16:08:16] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:08:27] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f6e3:7400:d8e7:a6fa:245:fafa)
[16:08:58] *** Joins: sebastorama (~sebastora@190.83.56.68)
[16:10:23] *** Quits: eXistenZ (~biskit@2001:4df4:20b3:400:8d6a:d032:2beb:aa94) (Quit: Leaving)
[16:10:25] *** doseo is now known as forza4
[16:11:14] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 260 seconds)
[16:11:43] *** Quits: DnzAtWrk3 (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:12:03] *** Joins: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3)
[16:12:51] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:13:08] *** Joins: DnzAtWrk3 (~DnzAtWrk@2914.pc.puv.fi)
[16:15:06] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[16:15:51] <theskillwithin> gist has been up in topic for well over a month,  in a bout 1-2 months sending to mother so she can see impact
[16:16:45] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[16:18:52] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 260 seconds)
[16:18:53] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:19:40] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[16:19:41] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 265 seconds)
[16:19:41] *** Quits: DnzAtWrk3 (~DnzAtWrk@2914.pc.puv.fi) (Ping timeout: 265 seconds)
[16:20:00] *** Quits: ericson2314 (~ericson23@2001:470:69fc:105::70c) (Quit: Client limit exceeded: 20000)
[16:20:43] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Client limit exceeded: 20000)
[16:20:43] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: Client limit exceeded: 20000)
[16:20:52] *** Quits: nicoty (~nicoty@user/nicoty) (Quit: Client limit exceeded: 20000)
[16:20:54] *** Quits: loke[m] (~loke@2001:470:69fc:105::237) (Quit: Client limit exceeded: 20000)
[16:20:58] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Quit: Client limit exceeded: 20000)
[16:20:58] *** Quits: paulcarroty (~paulcarro@2001:470:69fc:105::216) (Quit: Client limit exceeded: 20000)
[16:21:10] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Quit: Client limit exceeded: 20000)
[16:21:16] *** Quits: Deide (~deide@user/deide) (Quit: Client limit exceeded: 20000)
[16:21:26] *** Joins: paule32 (~paule32@user/paule32)
[16:21:29] *** Quits: Guest9402 (~mercvrivs@2001:470:69fc:105::2ee6) (Quit: Client limit exceeded: 20000)
[16:21:33] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[16:21:34] *** Joins: nicoty (~nicoty@user/nicoty)
[16:21:34] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[16:21:34] *** Joins: kadoban (~kadoban@user/kadoban)
[16:21:34] *** Quits: saltrocklamp[m] (~elementio@2001:470:69fc:105::5065) (Quit: Client limit exceeded: 20000)
[16:21:36] *** Quits: graybeard (~graybeard@user/graybeard) (Quit: Leaving)
[16:21:40] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[16:21:48] *** Joins: enick_519 (~mercvrivs@2001:470:69fc:105::2ee6)
[16:21:50] *** Joins: Deide (~deide@user/deide)
[16:21:51] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[16:21:51] *** Joins: ericson2314 (~ericson23@2001:470:69fc:105::70c)
[16:22:55] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[16:23:04] *** Joins: graybeard (~graybeard@user/graybeard)
[16:25:13] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[16:25:14] *** Joins: sebastorama (~sebastora@190.83.56.68)
[16:25:26] *** Joins: tlf (~tlf@mobile-166-176-249-40.mycingular.net)
[16:25:35] *** Joins: Slartibart (~user@c-3ee5e655.217486-0-69706f6e6c79.bbcust.telenor.se)
[16:25:54] *** Quits: sebastorama (~sebastora@190.83.56.68) (Client Quit)
[16:25:59] *** Quits: forza4 (~pa@227.105.117.91.static.reverse-mundo-r.com) (Remote host closed the connection)
[16:32:00] *** Quits: vladoski (~vladoski@2001:b07:add:d406:e4ce:3efc:afed:83a3) (Quit: Textual IRC Client: www.textualapp.com)
[16:34:30] *** Joins: sebastorama (~sebastora@190.83.56.68)
[16:34:46] <Slartibart> I'm running a graphql backend in node. When I call it querying for a lotof data I get "Maximum call stack size exceeded" in the browser, but no stack trace or any errors in the backend/node log =[. Is graphql capturing and hiding the error? A stack trace would be really helpful finding the code behind this error.. Anyone knows how to get those traces?
[16:35:13] *** Quits: teut (~teut@223.182.71.245) (Quit: Client closed)
[16:35:22] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:3dd3:20a8:4dfb:a3d)
[16:35:25] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[16:35:25] *** Joins: saltrocklamp[m] (~elementio@2001:470:69fc:105::5065)
[16:36:08] <theskillwithin> Slartibart sometimes useful to use graphql playground
[16:36:20] <theskillwithin> app
[16:36:22] *** Joins: teut (~teut@223.182.71.245)
[16:36:45] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:3dd3:20a8:4dfb:a3d) (Client Quit)
[16:36:53] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[16:37:55] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[16:39:52] <Slartibart> theskillwithin: Good point! Unfortunately - unless I'm missing something - all I get there is the same error(though prettyprinted).
[16:40:47] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[16:41:16] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:42:12] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[16:42:43] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:43:32] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[16:44:09] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[16:45:46] <stenno> Slartibart: wait do you get the exception in the frontend then?
[16:45:58] <stenno> node wouldn't know about that
[16:49:24] *** Joins: kmh (~kmh@2a00:6020:5004:6800:4191:e72a:d647:8372)
[16:51:37] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[16:51:40] <dodobrain> hi all
[16:52:29] *** Joins: TheDcoder[m] (~thedcoder@user/thedcoder)
[16:53:23] <Slartibart> stenno: No, it happens in the backend, I get the same result when querying the backend from the app frontend and the graphql playground. So I think it's node I need to look at. But I get no error output in the shell where I run the backend(other console.log etc show though), the error is just formatted (by graphql?) sent as the graphql call response.
[16:54:04] *** Quits: ThePhilgrim (~thephilgr@151.41.185.44) ()
[16:54:31] <TheDcoder[m]> Hi, can anyone answer my ElectronJS question? https://stackoverflow.com/questions/69943164/how-to-create-a-persistent-on-disk-session-in-electronjs
[16:57:30] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[16:57:31] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:59:36] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:00:50] *** Quits: sagax (~sagax_nb@user/sagax) (Quit: Konversation terminated!)
[17:01:02] *** Joins: DnzAtWrk (~DnzAtWrk@2914.pc.puv.fi)
[17:02:36] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[17:02:39] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[17:03:14] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[17:03:30] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[17:05:40] *** Quits: thiras (~thiras@user/thiras) (Read error: Connection reset by peer)
[17:06:17] *** Quits: voltage (voltage@user/voltage) (Quit: Leaving)
[17:07:01] *** Joins: DnzAtWrk3 (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi)
[17:07:34] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[17:09:13] *** Quits: DnzAtWrk (~DnzAtWrk@2914.pc.puv.fi) (Ping timeout: 256 seconds)
[17:09:13] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 256 seconds)
[17:11:43] *** Joins: jetchisel (jetchisel@user/jetchisel)
[17:15:31] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[17:17:36] *** Joins: summersault (~summersau@179.221.251.16)
[17:18:36] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[17:18:52] *** Joins: summersault (~summersau@179.221.251.16)
[17:19:59] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 256 seconds)
[17:22:16] *** Quits: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[17:24:02] *** Joins: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com)
[17:25:39] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 256 seconds)
[17:26:52] *** Quits: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com) (Client Quit)
[17:27:31] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[17:28:11] *** Joins: pulse (~pulse@user/pulse)
[17:28:36] *** Joins: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com)
[17:29:45] *** Joins: Trieste (~T@user/pilgrim)
[17:30:34] *** Joins: zsoc (~zsoc@cpe-24-168-59-34.hvc.res.rr.com)
[17:31:07] *** Quits: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com) (Client Quit)
[17:33:05] *** Quits: stagas (~stagas@2a02:587:c402:3f9b:6c78:3137:b74d:b353) (Ping timeout: 264 seconds)
[17:35:32] *** Joins: Guest4572 (~Guest45@p200300c8cf21a30025ec2d3de2e74cce.dip0.t-ipconnect.de)
[17:35:47] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 264 seconds)
[17:36:15] *** Quits: kmh (~kmh@2a00:6020:5004:6800:4191:e72a:d647:8372) (Read error: Connection reset by peer)
[17:36:15] *** Joins: stagas (~stagas@athedsl-4427281.home.otenet.gr)
[17:36:26] *** Joins: kmh (~kmh@2a00:6020:5004:6800:4191:e72a:d647:8372)
[17:39:12] *** Joins: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com)
[17:40:25] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[17:40:39] *** Joins: nomic (~nomic@185.192.69.224)
[17:41:10] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:1c3d:d8b5:ffd4:628)
[17:42:13] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:1c3d:d8b5:ffd4:628) (Client Quit)
[17:43:19] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[17:43:21] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[17:43:22] *** Quits: Guest4572 (~Guest45@p200300c8cf21a30025ec2d3de2e74cce.dip0.t-ipconnect.de) (Quit: Client closed)
[17:43:26] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 246 seconds)
[17:43:57] *** Quits: bpr_admin (~bpr_admin@2620:7e:30e0:1:58a2:1679:5be2:ccf4) (Read error: Connection reset by peer)
[17:46:56] *** Quits: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[17:48:40] *** Joins: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com)
[17:49:23] *** Joins: voltage_ (voltage@user/voltage)
[17:49:43] *** Joins: line (~info@li2021-150.members.linode.com)
[17:50:03] *** Joins: CiaoSen (~Jura@p5dcc1a24.dip0.t-ipconnect.de)
[17:50:10] *** Quits: kmh (~kmh@2a00:6020:5004:6800:4191:e72a:d647:8372) (Quit: Leaving)
[17:53:07] *** Joins: earendel (uid498179@user/earendel)
[17:58:22] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[18:00:20] *** Joins: lidenbrock (~lidenbroc@186.192.87.8)
[18:01:21] *** lidenbrock is now known as eron
[18:04:18] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[18:04:41] *** Quits: Flonk (~Flonk@ec2-52-40-29-25.us-west-2.compute.amazonaws.com) (Ping timeout: 245 seconds)
[18:05:17] *** Joins: sfields (~sfields@2605:a601:adea:7a00:66bd:f7af:8a04:1b90)
[18:08:39] *** Joins: mohab (~mohab@41.129.109.197)
[18:09:18] *** Quits: mohab (~mohab@41.129.109.197) (Client Quit)
[18:10:21] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[18:12:18] *** Quits: zer0bitz_ (~zer0bitz@2001:2003:f6e3:7400:d8e7:a6fa:245:fafa) (Read error: Connection reset by peer)
[18:12:51] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[18:13:35] *** Joins: zer0bitz (~zer0bitz@2001:2003:f6e3:7400:d8e7:a6fa:245:fafa)
[18:18:18] *** Joins: sebastorama_ (~sebastora@190.83.56.68)
[18:18:26] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[18:18:39] *** sebastorama_ is now known as sebastorama
[18:19:16] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:19:17] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:19:17] *** Joins: wroathe (~wroathe@user/wroathe)
[18:23:21] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[18:23:27] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 256 seconds)
[18:24:02] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:24:04] *** Quits: eron (~lidenbroc@186.192.87.8) (Ping timeout: 256 seconds)
[18:28:15] *** Joins: zebrag (~chris@user/zebrag)
[18:28:25] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[18:31:37] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[18:34:02] *** Joins: cbleslie (~cbleslie@user/cbleslie)
[18:35:44] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[18:36:18] *** Joins: va5c0 (~vasco.nun@162.154-253-62.static.virginmediabusiness.co.uk)
[18:37:02] *** Quits: comatory (~ondrejsyn@217.11.241.69) (Ping timeout: 240 seconds)
[18:38:02] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 246 seconds)
[18:38:16] *** Quits: CiaoSen (~Jura@p5dcc1a24.dip0.t-ipconnect.de) (Quit: CiaoSen)
[18:39:35] *** Joins: summersault (~summersau@179.221.251.16)
[18:42:33] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:44:25] *** Joins: Guest4564 (~Guest45@p200300c8cf21a30025ec2d3de2e74cce.dip0.t-ipconnect.de)
[18:46:16] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:244a:aeb9:cdbd:4a46)
[18:47:00] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[18:47:11] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[18:47:26] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:244a:aeb9:cdbd:4a46) (Client Quit)
[18:47:43] *** Quits: jschaub (~jschaub@pd907fca9.dip0.t-ipconnect.de) (Quit: Leaving)
[18:48:00] *** Quits: va5c0 (~vasco.nun@162.154-253-62.static.virginmediabusiness.co.uk) (Ping timeout: 268 seconds)
[18:48:17] *** Joins: kogepan_ (~kogepan@user/kogepan)
[18:50:23] *** Joins: va5c0 (~vasco.nun@173.247.63.94.rev.vodafone.pt)
[18:51:47] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 256 seconds)
[18:51:58] *** Quits: teut (~teut@223.182.71.245) (Quit: Client closed)
[18:52:51] *** Joins: comatory (~ondrejsyn@217.11.241.69)
[18:53:23] *** Joins: CryptoDavid (uid14990@uxbridge.irccloud.com)
[18:53:26] *** Quits: kogepan_ (~kogepan@user/kogepan) (Ping timeout: 245 seconds)
[18:57:27] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:58:31] *** Joins: jurjen (~jurjen@188-206-102-198.mobile.kpn.net)
[19:02:18] *** Joins: stenno (~stenno@user/stenno)
[19:04:22] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[19:04:55] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:05:07] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:07:22] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[19:08:26] *** Quits: Guest4564 (~Guest45@p200300c8cf21a30025ec2d3de2e74cce.dip0.t-ipconnect.de) (Quit: Client closed)
[19:09:49] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[19:09:55] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Ping timeout: 256 seconds)
[19:10:12] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 268 seconds)
[19:14:34] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[19:14:35] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[19:14:35] *** Joins: wroathe (~wroathe@user/wroathe)
[19:15:31] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[19:16:59] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 268 seconds)
[19:17:38] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[19:18:07] *** Joins: bobdobbs` (~user@116.251.164.13)
[19:18:41] *** Joins: teut (~teut@223.182.71.245)
[19:18:59] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[19:19:27] *** Quits: bobdobbs (~user@2406:5a00:4403:bf00:4878:b890:ef27:6062) (Ping timeout: 268 seconds)
[19:20:27] *** Joins: mimmy (~mimmy@72.142.88.18)
[19:23:16] *** Joins: Guest4558 (~Guest45@p200300c8cf21a30025ec2d3de2e74cce.dip0.t-ipconnect.de)
[19:23:24] *** Joins: summersault (~summersau@179.221.251.16)
[19:26:46] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 245 seconds)
[19:27:34] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[19:29:08] *** Quits: zsoc (~zsoc@cpe-24-168-59-34.hvc.res.rr.com) (Read error: Connection reset by peer)
[19:29:49] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[19:35:53] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[19:36:05] *** Joins: mimmy (~mimmy@72.142.88.18)
[19:37:57] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[19:38:43] *** Joins: kogepan_ (~kogepan@user/kogepan)
[19:38:45] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[19:39:54] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[19:42:10] *** Joins: pycurious (~Adium@user/pycurious)
[19:42:28] <pycurious> what is a good redux tutorial? https://www.youtube.com/watch?v=poQXNp9ItL4 - any better options for someone who understands react?
[19:42:28] <skillbot> YouTube Title: Redux Tutorial - Learn Redux from Scratch
[19:46:24] *** Joins: Pixi (~Pixi@user/pixi)
[19:47:04] *** Quits: DnzAtWrk3 (~DnzAtWrk@mobile-access-56734f-209.dhcp.inet.fi) (Quit: Leaving)
[19:47:20] <AtomicInteger>  stenno theskillwithin : fyi I found that yarn from version 2 provides something called portal: protocol. So in package.json in dep you can specify path to another local package like "foo": "portal: ../foo" and yarn install will respect foo's config - it will make sure that dev and peer deps are not linked. https://yarnpkg.com/features/protocols
[19:49:08] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:49:15] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[19:50:10] *** Joins: Flonk (~Flonk@ec2-34-221-56-110.us-west-2.compute.amazonaws.com)
[19:50:11] *** Quits: va5c0 (~vasco.nun@173.247.63.94.rev.vodafone.pt) (Ping timeout: 264 seconds)
[19:50:25] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:d43b:28ac:f6e1:5a62)
[19:51:27] *** Joins: Naan (~Naan@user/naan)
[19:51:46] *** Joins: silly (~silly@user/silly)
[19:51:50] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:d43b:28ac:f6e1:5a62) (Client Quit)
[19:52:25] *** Quits: obimod (~obimod@gateway/vpn/pia/obimod) (Ping timeout: 256 seconds)
[19:52:36] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[19:52:45] *** Joins: obimod (~obimod@gateway/vpn/pia/obimod)
[19:53:02] *** Quits: killown (~killown@user/killown) (Ping timeout: 240 seconds)
[19:55:15] *** Quits: kogepan_ (~kogepan@user/kogepan) (Ping timeout: 256 seconds)
[19:55:42] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 260 seconds)
[19:55:59] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:56:31] *** Quits: silly (~silly@user/silly) (Remote host closed the connection)
[19:57:19] *** Joins: iomari891 (~iomari891@105.112.138.38)
[19:57:34] *** Quits: Guest4558 (~Guest45@p200300c8cf21a30025ec2d3de2e74cce.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[19:58:22] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[19:59:47] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 264 seconds)
[20:00:26] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:00:34] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[20:01:12] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[20:01:44] *** Joins: pulse_ (~pulse@user/pulse)
[20:02:03] *** Joins: silly (~silly@user/silly)
[20:02:10] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[20:04:41] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 245 seconds)
[20:04:53] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[20:06:19] *** Quits: silly (~silly@user/silly) (Remote host closed the connection)
[20:06:43] *** Joins: silly (~silly@user/silly)
[20:07:45] *** Joins: kmh (~kmh@2a00:6020:5004:6800:318d:a6b2:88ea:7ac0)
[20:12:02] *** Quits: silly (~silly@user/silly) (Ping timeout: 260 seconds)
[20:12:54] *** Joins: silly (~silly@user/silly)
[20:14:02] *** Quits: nomic (~nomic@185.192.69.224) (Quit: Leaving)
[20:17:19] *** Quits: mishiranu (~mishiranu@78.129.171.229) (Ping timeout: 250 seconds)
[20:17:28] *** Quits: Flonk (~Flonk@ec2-34-221-56-110.us-west-2.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[20:17:38] *** Joins: DrowningElysium (sid190788@user/drowningelysium)
[20:19:24] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:21:02] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[20:22:43] *** Joins: mimmy (~mimmy@72.142.88.18)
[20:23:36] *** Joins: iomari891 (~iomari891@105.112.138.38)
[20:24:23] *** Quits: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net) (Ping timeout: 264 seconds)
[20:24:49] *** Joins: mishiranu (~mishiranu@78.129.171.229)
[20:25:23] *** Joins: summersault (~summersau@179.221.251.16)
[20:28:51] *** Joins: Flonk (~Flonk@ec2-34-221-56-110.us-west-2.compute.amazonaws.com)
[20:30:32] *** Quits: shuvarek (~shuvarek@staticline-31-182-169-28.toya.net.pl) (Ping timeout: 240 seconds)
[20:31:04] *** Quits: Flonk (~Flonk@ec2-34-221-56-110.us-west-2.compute.amazonaws.com) (Client Quit)
[20:31:08] *** Joins: iio7 (~iio7@user/iio7)
[20:32:15] <iio7> I am getting a "TypeError: undefined is not an object", using this way to access the data: https://paste.debian.net/1219313/, what am I doing wrong and how do I get the "name" key from that?
[20:32:39] *** Joins: Flonk (~Flonk@ec2-34-221-56-110.us-west-2.compute.amazonaws.com)
[20:33:25] *** Joins: Guest45 (~Guest45@p200300c8cf21a300007e344cf8f4603f.dip0.t-ipconnect.de)
[20:33:35] <iio7> If it's a multidimensional array and I choose the array manually like this 'userData.data[0].name', then it works. But it's a single object in this case.
[20:35:31] <Decker> .name - there is no array
[20:35:46] <Decker> or rather name isn't in the arrray - the array just has strings and doesn't have a name for the value
[20:37:26] <iio7> "name" is a key that has the value "Bar", isn't it? It looks like this, "name": "Bar".
[20:40:24] *** Quits: obimod (~obimod@gateway/vpn/pia/obimod) (Quit: every day brings new choices)
[20:41:10] *** Joins: va5c0 (~vasco.nun@173.247.63.94.rev.vodafone.pt)
[20:42:20] <Decker> yes but the names in the array are just strings
[20:42:55] <systemfault> iio7: Where is .data?
[20:43:12] <stagas> what do u think is the proper way of handling errors that you want to propagate back to the user, i.e not throw but instead collect. enums/constants? so they can handle them like if error.type === ERR.MISSING_VALUE or smth?
[20:43:24] *** Quits: poiqwepoiqwe (uid525840@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[20:44:00] <systemfault> stagas: I personally tag my errors in typescript to do narrowing, never bothered in JS
[20:44:22] <stagas> systemfault: what do you mean? yeah in TS
[20:44:51] <stagas> but in general i'm thinking what's the common way. or everyone is doing it differently
[20:45:06] *** Joins: Rockwood (~Rocky@user/rocky)
[20:46:05] <systemfault> If you class Class Foo { readonly _type = 'Foo' } Class Bar { readonly _type = 'Bar' } type AllErrors = Foo | Bar; then you can have a AllErrors[] and you'll be able to discriminate between the types using if (err[x]._type === 'Foo') {...
[20:46:10] <systemfault> *If you have
[20:47:03] <systemfault> For JS, you can use instanceof... or .name
[20:47:19] <systemfault> n> (new Error('Foo')).name
[20:47:20] <jellobot> (okay) 'Error'
[20:47:23] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 256 seconds)
[20:47:54] <systemfault> If you do, and make your errors inherit from Error, don't forget to override "name" in each derived class
[20:47:56] <Rockwood> systemfault, chk ur pm
[20:49:38] <iio7> systemfault, I am sorry, I make a mistake in my paste. This is the correct object: https://paste.debian.net/1219315/
[20:49:39] <stagas> i see, but that would need to leak all these classes around. i'm doing a parser and don't want to throw, instead i want to collect them and say here are the errors ater parsing, handle them however u want
[20:50:21] *** Joins: renlo (~Renlo_Ren@pool-108-14-112-182.nycmny.east.verizon.net)
[20:51:05] <stagas> so passing back a 'new MyCustomError()' is good practice u think?
[20:51:46] <iio7> systemfault, data is in that.
[20:51:48] <Rockwood> lol
[20:52:01] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:52:06] <systemfault> stagas Why wouldn't it be? If you have multiple errors then you could take a look at the new AggregateError type
[20:53:13] <stagas> ah cool that's what i needed i think
[20:53:31] <stagas> thx systemfault!
[20:53:54] *** Joins: N4buc0 (~N4buc0@179.186.178.29.dynamic.adsl.gvt.net.br)
[20:54:02] <systemfault> iio7: Look fine, should return "Bar"
[20:54:05] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:f427:1200:4fe4:48e6)
[20:54:07] *** Joins: sebastorama (~sebastora@190.83.56.68)
[20:54:15] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[20:54:19] <systemfault> iio7: My guess is that your problem is "async" related... like with most beginners with the language.
[20:54:28] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[20:54:46] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:f427:1200:4fe4:48e6) (Client Quit)
[20:56:14] <stagas> ecma 2021 top notch! it's in node already though (AggregateError)
[20:57:01] *** Joins: pycurious (~Adium@user/pycurious)
[20:57:47] <stagas> that means i could throw that also with all the errors, this makes everything much cleaner, so if they want to handle errors manually they try catch it
[20:57:48] <iio7> systemfault, it looks like I need something like this: userData.data.Object.name, but I am missing the second object.
[20:57:59] <Rockwood> lol
[20:58:07] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 268 seconds)
[20:58:24] <Rockwood> JS is weaker in every sense :D
[20:58:45] <teut> good talk on async https://www.youtube.com/watch?v=Y4Gt3Xjd7G8
[20:58:46] <skillbot> YouTube Title: Build Your Own Async
[20:58:51] <teut> but in python
[20:59:08] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[20:59:26] *** Quits: AtomicInteger (~primamate@p2e545658.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[20:59:33] *** pulse_ is now known as pulse
[20:59:52] <iio7> systemfault, I got it, I was missing the second object. No async problem.
[20:59:56] *** Quits: Flonk (~Flonk@ec2-34-221-56-110.us-west-2.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[21:00:20] *** Quits: va5c0 (~vasco.nun@173.247.63.94.rev.vodafone.pt) (Quit: WeeChat 3.3)
[21:00:50] <Rockwood> teut, hi
[21:00:59] <teut> dm
[21:01:03] *** Quits: iio7 (~iio7@user/iio7) (Quit: Leaving)
[21:06:21] *** Joins: mimmy (~mimmy@72.142.88.18)
[21:09:27] *** Joins: blei (~blei@2600:100e:b05b:8155:7db5:b205:5168:910a)
[21:09:27] *** ChanServ sets mode: +b *!*@2600:100e:b05b:8155:7db5:b205:5168:910a
[21:09:27] *** blei was kicked by ChanServ (Banned: clearly a troll)
[21:09:27] *** ChanServ sets mode: +o litharge
[21:09:37] *** litharge sets mode: -o litharge
[21:11:12] <qswz> Jackie ChanServ
[21:11:42] <stenno> that autoban
[21:12:09] <qswz> autoban highway
[21:12:44] <qswz> autoban to hell
[21:13:07] <stenno> autoban 66
[21:13:22] <qswz> esteban
[21:13:39] <stenno> ESTEBAN! ESTEBAN
[21:13:47] <stenno> he has got the crazy eyes
[21:14:09] <qswz> I'm done with dates, now I'm going walnuts
[21:14:20] <stenno> nuts are awesome
[21:14:26] <stenno> hazelnut is the best nut
[21:14:49] <qswz> I like the challenges to open walnuts
[21:15:06] <qswz> I spend more calories opening them
[21:15:20] <stenno> i can crack 2 with a single hand
[21:15:30] <stenno> or one of the two at least
[21:15:40] <stenno> no instruments required
[21:15:48] <qswz> ow, you got strong hands
[21:16:01] <stenno> i trained it as a kid to brag lol
[21:16:32] <qswz> I just push with my hand using my whole weight, upside down, until it cracks a bit, then use a knife
[21:17:50] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[21:18:46] <qswz> I passd from 70% sugar to 70% fat
[21:23:16] <qswz> let's work on ciu
[21:24:00] <stenno> can i use?
[21:24:38] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:50d1:715b:3051:a68)
[21:25:21] <qswz> you canyea
[21:26:42] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[21:26:47] *** Quits: jurjen (~jurjen@188-206-102-198.mobile.kpn.net) (Ping timeout: 264 seconds)
[21:26:52] *** Joins: summersault (~summersau@179.221.251.16)
[21:27:41] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[21:28:48] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[21:30:43] *** Quits: hax (~hax@user/hax) (Quit: Leaving)
[21:30:51] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[21:32:26] *** Sven_vB_ is now known as Sven_vB
[21:32:55] <qswz> guys, do you mind the \n in:
[21:33:16] <qswz> n> child_process.execSync('echo 1') + ''
[21:33:17] <jellobot> (okay) '1\n'
[21:33:28] *** Quits: kmh (~kmh@2a00:6020:5004:6800:318d:a6b2:88ea:7ac0) (Read error: Connection reset by peer)
[21:33:39] *** Joins: kmh (~kmh@2a00:6020:5004:6800:318d:a6b2:88ea:7ac0)
[21:33:59] <qswz> we could trim it, but no that's bad, doesn't reflect actual result
[21:34:17] <qswz> n> child_process.execSync('print 1') + ''
[21:34:18] <jellobot> (fail) /bin/sh: 1: print: not found Error: Command failed: print 1 /bin/sh: 1: print: not found
[21:35:20] <qswz> should we have a s> shell bot too instead of current useless s>/m> cmmands
[21:36:39] <ljharb> meh
[21:37:20] <ljharb> if we want that we'd shbot from #bash
[21:37:24] <stenno> n> child_process.execSync('date')
[21:37:25] <jellobot> (okay) <Buffer 46 72 69 20 4e 6f 76 20 31 32 20 31 38 3a 30 37 3a 32 35 20 55 54 43 20 32 30 32 31 0a>
[21:37:30] <ljharb> *we'd pull in
[21:37:32] <stenno> n> child_process.execSync('date') + ''
[21:37:33] <jellobot> (okay) 'Fri Nov 12 18:07:33 UTC 2021\n'
[21:37:33] <qswz> right
[21:38:46] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[21:39:01] <earendel> n> child_process.execSync('date', 'utf8')
[21:39:02] <jellobot> (okay) <Buffer 46 72 69 20 4e 6f 76 20 31 32 20 31 38 3a 30 39 3a 30 32 20 55 54 43 20 32 30 32 31 0a>
[21:39:24] <earendel> n> child_process.execSync('date').toString()
[21:39:25] <jellobot> (okay) 'Fri Nov 12 18:09:24 UTC 2021\n'
[21:39:31] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[21:39:46] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[21:41:21] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[21:53:11] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:1441:e3a1:9c75:8917)
[21:57:10] *** Joins: sam_1 (~sam_1@87.51.251.118)
[21:59:56] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:20d5:c50e:855d:9287)
[22:00:30] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[22:01:00] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:20d5:c50e:855d:9287) (Client Quit)
[22:01:38] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 268 seconds)
[22:01:53] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 265 seconds)
[22:03:07] *** Quits: sebastorama (~sebastora@190.83.56.68) (Read error: Connection reset by peer)
[22:03:25] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[22:04:24] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:06:35] <qswz> we're not supposed to use raw.githubusercontent.com right? if I remember they discourage it as a cdn, but for the bot it's ok?
[22:07:00] <qswz> https://raw.githubusercontent.com/Fyrd/caniuse/master/data.json
[22:07:22] <qswz> we could npm it
[22:07:29] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104) (Quit: Connection closed)
[22:08:11] <qswz> !npm caniuse
[22:08:13] <jellobot> qswz, npm.im/caniuse|0.1.3|2013-01-04|Compatibility validation for support of HTML5, CSS3, SVG and more in desktop and mobile browsers.
[22:08:33] <newton> for the bot it probably doesn't matter
[22:08:41] <qswz> ok
[22:08:52] <qswz> https://github.com/Fyrd/caniuse is not on GH
[22:08:56] <qswz> on npm I mean
[22:09:22] <qswz> I thought of a npm i https://github.com/Fyrd/caniuse.git
[22:10:33] <qswz> but I bet ljharb won't want npn-npm-y dependencies
[22:10:43] <qswz> non-npm-y*
[22:11:01] *** Joins: src (~src@user/src)
[22:11:40] <qswz> let's use the url, will be good nuff, with a bit of cacing maybe
[22:18:10] <qswz> https://www.npmjs.com/package/caniuse-lite
[22:18:39] *** Joins: nomic (~nomic@185.192.69.224)
[22:19:39] <ljharb> i'd prefer not, but not a hard line
[22:20:01] <ljharb> it's totally fine to have a git dep tho if needed
[22:20:18] <ljharb> qswz: http://npmjs.com/caniuse-db is definitely on npm tho
[22:20:31] *** Joins: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com)
[22:22:19] <qswz> ok
[22:23:51] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Read error: Connection reset by peer)
[22:24:15] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[22:25:13] <teut> https://dpaste.org/PWuT#L87,115,116    got a "this" problem again plz help
[22:28:20] <systemfault> It says that you haven't declared #test
[22:28:24] <systemfault> Have you declared it^
[22:28:53] <systemfault> Because I cannot see that variable declared at the top of the class
[22:29:14] <teut> oh , I missed "s"
[22:29:26] *** Joins: node1 (~node1@user/node1)
[22:29:31] <teut> autocomplete is not working great
[22:30:12] <teut> oh totals not tests
[22:34:18] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Remote host closed the connection)
[22:36:01] *** Joins: sam_1 (~sam_1@87.51.251.118)
[22:36:06] *** Joins: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com)
[22:41:07] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 268 seconds)
[22:48:04] *** Joins: summersault (~summersau@179.221.251.16)
[22:48:43] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Quit: Leaving)
[22:48:45] *** Quits: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com) (Quit: *POOF*)
[22:49:22] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[22:49:41] *** Joins: jurjen (~jurjen@31-161-184-96.mobile.kpn.net)
[22:49:51] *** Quits: papa (~papa@user/papa) (Quit: connection reset again by peer.)
[22:51:36] *** Quits: glider (~glider@user/glider) (Quit: ZNC 1.9.x-git-111-f2cdc3db - https://znc.in)
[22:53:11] *** Quits: eldritch (~eldritch@user/eldritch/x-9272577) (Quit: bye)
[22:54:41] *** Quits: cisme__ (~cisme_@user/cisme/x-1186982) (Ping timeout: 245 seconds)
[22:57:22] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[22:58:51] *** Quits: mimmy (~mimmy@72.142.88.18) (Ping timeout: 256 seconds)
[23:00:02] *** Quits: Guest45 (~Guest45@p200300c8cf21a300007e344cf8f4603f.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[23:00:03] *** Joins: mimmy (~mimmy@72.142.88.18)
[23:02:01] *** Joins: glider (~glider@user/glider)
[23:02:24] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[23:03:04] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:b593:7913:2e64:42fc)
[23:04:16] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:b593:7913:2e64:42fc) (Client Quit)
[23:06:47] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 256 seconds)
[23:08:53] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[23:16:07] *** Quits: kogepan (~kogepan@user/kogepan) (Remote host closed the connection)
[23:16:54] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[23:17:42] *** Joins: AtomicInteger (~primamate@p200300ee170ca500e482c2a05d384488.dip0.t-ipconnect.de)
[23:18:17] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[23:19:21] *** Quits: src (~src@user/src) (Quit: Leaving)
[23:19:49] *** Joins: src (~src@user/src)
[23:20:17] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[23:21:04] *** Joins: kogepan_ (~kogepan@user/kogepan)
[23:22:07] *** Quits: tlf (~tlf@mobile-166-176-249-40.mycingular.net) (Ping timeout: 265 seconds)
[23:24:23] *** Quits: jess (~jess@libera/staff/jess) (Quit: I try to be an optimist / but my glass is always bone dry)
[23:24:36] <teut> https://dpaste.org/MOPx  I need to model thiis json into objects, for the    "index"  of Location , it's easy to main, whenever we create a new Location counter would increase
[23:25:26] <teut> but for each location when we add Departments to it, well the user will have to set  .counter = 0 of Departments when doing it for next location
[23:26:04] <teut> what can be done cleanly?
[23:27:17] <teut> one thing is that when Department is added to Location, Location can modify the counter
[23:27:28] <teut> one thing that can be done*
[23:27:34] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[23:27:58] <teut> but that exposes Department's counter to the user since it will have to be made public
[23:28:35] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 264 seconds)
[23:29:59] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[23:36:36] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[23:37:47] *** Joins: summersault (~summersau@179.221.251.16)
[23:39:40] *** Joins: g0zart (~g0zart@gateway/vpn/pia/g0zart)
[23:42:07] *** Joins: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[23:44:09] <daoudr> how to print array's elements with 2 seconds interval between each iteration  utilizing the setInterval functionality?
[23:45:48] *** Joins: mikey__ (~mikey__@user/mikey/x-6463285)
[23:45:49] <systemfault> daoudr: You keep a variable with the current index of the element in the array and then each iteration of setInterval, you print the element at the current index then increase it by 1
[23:46:08] <systemfault> Don't forget to clear the setInterval once you've reached the end.
[23:46:26] <daoudr> can I have a paste bin example
[23:46:42] <systemfault> Is that an homework for school?
[23:46:51] <daoudr> I will try myself
[23:46:53] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[23:47:04] <silly> lol
[23:47:05] <systemfault> (In thee real world, you shouldn't even be using setInterval)
[23:49:56] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[23:50:17] *** Quits: onizu (uid373383@uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[23:51:31] <systemfault> n> const delay = ms => new Promise(r => setTimeout(r, ms)); for (const a of [1,2,3,4,5]) { console.log([a, Date.now()]); await delay(100) }
[23:51:32] <jellobot> (okay) [ 1, 1636748491910 ] [ 2, 1636748492016 ] [ 3, 1636748492118 ] [ 4, 1636748492219 ] [ 5, 1636748492320 ]
[23:51:46] *** Joins: zeromule (~eric@2601:602:8d80:4e50:65c1:e2dc:e985:46c9)
[23:54:06] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[23:56:05] *** Quits: summersault (~summersau@179.221.251.16) (Ping timeout: 256 seconds)
[23:56:26] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[23:57:35] *** kogepan_ is now known as kogepan
