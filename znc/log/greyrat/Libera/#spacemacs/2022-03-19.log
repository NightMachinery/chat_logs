[00:08:29] <FromGitter> <drpastah:matrix.org> How do I get LSP working with C++? I enabled the lsp layers and have (c-c++ :variables c-c++-backend 'lsp-clangd) but i'm not seeing anything different. I do have clangd installed on my machine.
[00:11:20] <FromGitter> <lebensterben> what do you mean by anything different
[00:11:44] <FromGitter> <lebensterben> lsp is the default backend as long as lsp layer is enabled
[00:16:20] <FromGitter> <drpastah:matrix.org> alright well i have no idea how it happened but it kind of just...fixed itself
[00:34:38] *** Quits: TikityTik (~TikityTik@user/TikityTik) (Quit: Leaving)
[05:59:10] *** Joins: ur5us (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d)
[06:01:01] *** Joins: ur5us_ (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d)
[06:01:24] *** Quits: ur5us (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d) (Read error: Connection reset by peer)
[06:27:57] <FromGitter> <bryce-carson> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=623546b4161ffc40d7c0bf94]
[06:29:42] <FromGitter> <bryce-carson> I'm not sure if that's how it should be. :shrug:
[06:30:06] <FromGitter> <lebensterben> you're right
[06:30:21] <FromGitter> <lebensterben> those SPC s commands are not working
[06:30:34] <FromGitter> <lebensterben> because compleseus only supports ripgrep
[06:30:34] <FromGitter> <bryce-carson> I see. It's good they did, I guess, to separate the rolling-release/develop from the fabled 0.3 release.
[06:31:12] <FromGitter> <lebensterben> no worry. I'm gonna remove support for ack ag pt anyway
[06:31:31] <FromGitter> <bryce-carson> In the compleseus layer or overall?
[06:32:03] <FromGitter> <lebensterben> And I've a lost of things to remoge
[06:32:26] <FromGitter> <lebensterben> For example, nyan-mode
[06:32:40] <FromGitter> <bryce-carson> I don't use any of those, but just curious because I'm thinking of creating a software stack diagram for Spacemacs as part of a non-programmer's "review" of `spacemacs/core/*`.
[06:32:44] <FromGitter> <lebensterben> and a few April fools jokes / Easter eggs
[06:33:11] <FromGitter> <bryce-carson> Most of the motivation for that is to familiarize myself with the *workings and operations* of Spacemacs, apart from what I'm already comfortable with.
[06:33:32] <FromGitter> <bryce-carson> Indeed. A lot of that came from the 2016 commit rush.
[06:34:25] <FromGitter> <lebensterben> you should start from init.el
[06:35:05] <FromGitter> <bryce-carson> Not `early-init.el`?
[06:35:35] <FromGitter> <lebensterben> no
[06:35:44] <FromGitter> <bryce-carson> Okay. :)
[06:41:18] <FromGitter> <lebensterben> actually you can also read source code of other Emacs configurations
[06:41:33] <FromGitter> <lebensterben> don't limit yourself to one code base
[06:42:11] <FromGitter> <bryce-carson> I haven't, now. I read through and understood as much as I needed to from Rational Emacs.
[06:43:03] <FromGitter> <lebensterben> I've been limiting myself to use functions only from emacs lisp library
[06:43:40] <FromGitter> <lebensterben> sometimes codes can be much shorter if I use dash instead
[06:43:47] <FromGitter> <bryce-carson> I can see the benefit if it's not a function in a layer.
[06:43:55] <FromGitter> <lebensterben> but dash is slow when the file is not compiled
[06:44:21] <FromGitter> <bryce-carson> I do know that layers can't rely on packages being installed for functionality, because packages can always be explicitly excluded.
[06:44:27] <FromGitter> <lebensterben> writing short code is always one of my objectives
[06:45:04] <FromGitter> <lebensterben> > because packages can always be explicitly excluded ‚èé  ‚èé just use (when (featurep 'foo) ..)
[06:45:19] <FromGitter> <bryce-carson> Mhmm. I did not know about `split-string`, so I wrote many more lines to handle regular expressions.
[06:45:53] <FromGitter> <bryce-carson> Yes, if something is a dependency it should only be available `when` it has that dependency. :)
[06:57:20] <FromGitter> <lebensterben> regular expression should be avoided
[06:57:35] <FromGitter> <lebensterben> it's best to avoid them
[07:35:17] *** Quits: ur5us_ (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d) (Ping timeout: 240 seconds)
[07:56:33] *** Quits: Unicorn_Princess (~Unicorn_P@46-54-248-191.static.kate-wing.si) (Remote host closed the connection)
[08:00:23] <FromGitter> <bryce-carson> Should I make a PR for this commit, @lebensterben? It adds leader keys to the Evil tutor for next and previous lessons. A small change, but there are also documentation changes as well. ‚èé Would you prefer contributions in the future to be single commits, regardless of the number of files changes (they they're all related to the same change). ‚èé https://github.com/bryc
[08:00:23] <FromGitter> ... e-carson/spacemacs/commit/e4db247ed2a5847c4b85e4d9347df8ced0c2cbd5
[08:07:20] <FromGitter> <lebensterben> no don't add new key bindings for evil tutor mode
[08:07:50] <FromGitter> <lebensterben> > Spacemacs is based on Vim modal editing
[08:07:55] <FromGitter> <lebensterben> this is not true
[08:08:58] <FromGitter> <lebensterben> > Key bindings are organized using mnemonic prefixes like b for buffer, p for project, s for search, h for help etc‚Ä¶
[08:09:09] <FromGitter> <lebensterben> evil is actually optional
[08:09:57] <FromGitter> <bryce-carson> Evil is optional, yes. I included that in the Quick Start based off what was already present in `DOCUMENTATION.org`.
[08:11:23] <FromGitter> <bryce-carson> See https://github.com/bryce-carson/spacemacs/blame/e4db247ed2a5847c4b85e4d9347df8ced0c2cbd5/doc/DOCUMENTATION.org#L1884
[08:11:28] <FromGitter> <lebensterben> it's optional so Spacemacs is not based on vim's modal editing
[08:12:22] <FromGitter> <bryce-carson> Indeed.
[08:12:42] <FromGitter> <bryce-carson> Why not add major mode bindings for Evil tutor mode?
[08:12:55] <FromGitter> <bryce-carson> Users are forced to use C-j C-k otherwise.
[08:13:27] <FromGitter> <lebensterben> If you add bindings to evil tutor mode you should also mention it in the text
[08:13:33] <FromGitter> <lebensterben> of evil tutor mode
[08:13:54] <FromGitter> <lebensterben> actually what should be done is to remove bindings not mentioned in the text
[08:14:05] <FromGitter> <lebensterben> evil tutor mode should not be evilified
[08:14:15] <FromGitter> <lebensterben> it must be self-contained
[08:15:02] <FromGitter> <bryce-carson> That makes sense, but what really counts as evilification?
[08:15:23] <FromGitter> <lebensterben> read source code
[08:15:30] <FromGitter> <lebensterben> evil-evilified-state
[08:18:22] <FromGitter> <bryce-carson> ```code paste, see link``` ‚èé  ‚èé This is the change I made in my local copy, but I'm not sure how to contribute it. Or if I should. [https://gitter.im/syl20bnr/spacemacs?at=62356096ddcba117a22ba98b]
[08:20:23] <FromGitter> <bryce-carson> I can see though that: ‚èé  ‚èé 1) `,` may be a Vim thing I'm unaware of. ‚èé 2) `SPC` ... is still available. [https://gitter.im/syl20bnr/spacemacs?at=6235610fe9cb3c52ae221925]
[08:20:46] <FromGitter> <bryce-carson> Which is normal-ish, if you chose the default / recommended Vim style upon first start.
[08:21:16] <FromGitter> <lebensterben> , is not a vim binding
[08:22:01] <FromGitter> <lebensterben> if it's unclear, read its source code
[08:23:40] <FromGitter> <lebensterben> I saw you used "ie"
[08:24:07] <FromGitter> <lebensterben> first "id est" can only be abbreviated as "i.e"
[08:24:26] <FromGitter> <lebensterben> "i.e."
[08:24:28] <FromGitter> <bryce-carson> Bad form, yeah.
[08:24:37] <FromGitter> <lebensterben> second
[08:24:41] <FromGitter> <lebensterben> > Try to avoid using abbreviations such as ‚Äúe.g.‚Äù (for ‚Äúfor example‚Äù), ‚Äúi.e.‚Äù (for ‚Äúthat is‚Äù), ‚Äúno.‚Äù (for ‚Äúnumber‚Äù), ‚Äúc.f.‚Äù (for ‚Äúin contrast to‚Äù) and ‚Äúw.r.t.‚Äù (for ‚Äúwith respect to‚Äù) as much as possible. It is almost always clearer and easier to read the expanded version.
[08:25:12] <FromGitter> <lebensterben> this is mentioned https://www.gnu.org/software/emacs/manual/html_node/elisp/Documentation-Tips.html
[08:25:28] <FromGitter> <bryce-carson> üê± This is why I should become a power-user before I try to contribute more. lmao
[08:33:13] <FromGitter> <lebensterben> > Users are forced to use C-j C-k otherwise
[08:33:21] *** Quits: pagurus (~user@i59F5268D.versanet.de) (Ping timeout: 256 seconds)
[08:33:34] <FromGitter> <lebensterben> these two are idiomatic key bindings
[08:39:29] *** Joins: pagurus (~user@i59F529EA.versanet.de)
[11:41:47] *** Joins: osfe (~lemaire@2a01:e0a:16e:7620::8a96:7343)
[11:58:49] *** Quits: osfe (~lemaire@2a01:e0a:16e:7620::8a96:7343) (Ping timeout: 256 seconds)
[12:17:58] *** Joins: osfe (~lemaire@2a01:e0a:16e:7620::8a96:7343)
[12:41:48] *** Quits: osfe (~lemaire@2a01:e0a:16e:7620::8a96:7343) (Ping timeout: 240 seconds)
[12:53:08] *** Joins: osfe (~lemaire@2a01:e0a:16e:7620::8a96:7343)
[13:05:39] *** Joins: ur5us_ (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d)
[13:10:23] *** Quits: osfe (~lemaire@2a01:e0a:16e:7620::8a96:7343) (Ping timeout: 252 seconds)
[15:13:57] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[15:17:22] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 250 seconds)
[15:20:32] *** Quits: ur5us_ (~ur5us@2406:e002:6845:dc01:c2e6:9f40:66a8:f76d) (Ping timeout: 240 seconds)
[16:48:13] *** Joins: osfe_ (~lemaire@91-165-185-216.subs.proxad.net)
[16:54:17] *** Quits: osfe_ (~lemaire@91-165-185-216.subs.proxad.net) (Ping timeout: 256 seconds)
[17:31:12] *** Joins: osfe (~lemaire@2a01:e0a:16e:7620::8a96:7343)
[18:10:55] *** Quits: osfe (~lemaire@2a01:e0a:16e:7620::8a96:7343) (Ping timeout: 268 seconds)
[18:58:39] *** Joins: osfe_ (~lemaire@2a01:e0a:16e:7620::8a96:7343)
[19:03:17] *** Quits: osfe_ (~lemaire@2a01:e0a:16e:7620::8a96:7343) (Ping timeout: 240 seconds)
[20:02:56] *** Joins: Unicorn_Princess (~Unicorn_P@46-54-248-191.static.kate-wing.si)
