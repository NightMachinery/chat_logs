[00:00:12] <tunixman> oh no that's right, posix will leak.
[00:00:14] <neilthereildeil> bjs: heres what i have: https://bpa.st/GABQ
[00:00:20] <acresearch> people, is there a way to import a while text file into one variable?   instead of looping each line seperatly?
[00:00:38] <bjs> acresearch: `with open("file") as f: content = f.read()`
[00:00:42] <neilthereildeil> tunixman: ok, so posix will leak semaphores if the child is killed before releasing?
[00:00:49] <grym> or pathlib.Path("file").read_text()
[00:01:13] <TML> acresearch: with open(filename) as f: f_contents = f.readlines()
[00:01:16] *** Quits: Joel (~jjshoe@user/joel) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[00:02:11] <acresearch> bjs: TML which is it?  i am confused
[00:02:18] <neilthereildeil> does multiprocessing.pool internally call wait or something? is that why i dont need to call wait if using pool?
[00:02:20] <TML> acresearch: Any of the above
[00:02:32] <acresearch> ok
[00:02:39] <bjs> neilthereildeil: no you need to call wait in the SIGCHLD handler to get the exit status from the zombie process
[00:02:46] <grawity> neilthereildeil: that is indeed mentioned in sem_overview(7)
[00:02:56] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[00:03:05] *** Joins: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net)
[00:03:58] <neilthereildeil> bjs: what happens if i dont trap sigchld and am using a pool (like in my buggy app)? where am i supposed to call wait()?
[00:04:10] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[00:05:29] <bjs> neilthereildeil: you're not
[00:06:24] <neilthereildeil> bjs: ah ok. so then does pool internally call wait for me?
[00:06:33] <bjs> neilthereildeil: no
[00:06:34] <TML> neilthereildeil: I believe that multiprocessing.pool expects that you're using a context manager
[00:06:48] <bjs> neilthereildeil: (well except if you're using Python 3 and the 'forkserver' method, then it should)
[00:07:10] <neilthereildeil> in my python 2.7 application, im not using a ContextManaer
[00:07:13] <neilthereildeil> Manager
[00:07:28] <bjs> actually it probably doesn't at all
[00:07:28] <neilthereildeil> AND im not calling wait()
[00:07:43] <neilthereildeil> so why arent all my children ending up zombied?
[00:07:46] <bjs> neilthereildeil: look,  you're supposed to put a signal handler and a wait() call in it so you can see the children dying and why
[00:07:52] <bjs> and once you know,  you delete the code
[00:08:01] <bjs> neilthereildeil: "zombie" just means "process died but parent hasn't yet"
[00:08:23] *** Joins: JoelJoel (~jjshoe@user/joel)
[00:08:34] <neilthereildeil> bjs: right, but my CURRENT  buggy application doesnt do any of that. why arent all children zombied?
[00:08:53] <bjs> neilthereildeil: well they probably are
[00:09:06] <neilthereildeil> i create many children through a pool, dont trap sigchld and dont call wait
[00:09:40] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Ping timeout: 244 seconds)
[00:09:47] <tunixman> t neilthereildeil the multiprocessing module has a sigchld that it calls wait in so it can reap any dead workers.
[00:09:54] <tunixman> It basically manages all that for you.
[00:10:02] <tunixman> which is why you're probably not seeing zombies.
[00:10:09] <rannnn8888> Maybe you know what the problem the script run good, but after like 1 hour it start work very slow ,like the multi therd not work but the server run good no problem if i stop the script and run again its same very slow,only if i restart the server its work good again, what can be the problem :D  ?
[00:10:13] <rannnn8888> https://dpaste.org/pofH#L28
[00:10:40] <neilthereildeil> ohh bjs said pool DOESNT call wait()
[00:10:42] *** JoelJoel is now known as Joel
[00:11:15] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[00:11:17] <neilthereildeil> ok so if pool indeed DOES call wait(), then that explains why im not seeing everything zombied
[00:11:21] <neilthereildeil> all children
[00:12:05] <tunixman> no, if you register a signal handler and don't call the prior handler, you'll get all the signals instead.
[00:12:47] *** Joins: venmx (~bertie@host86-129-227-84.range86-129.btcentralplus.com)
[00:13:05] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[00:13:25] *** Joins: GinFuyou (~GinFuyou@reya.cloud.tilaa.com)
[00:13:37] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[00:13:56] <neilthereildeil> ok, so if i trap sigchld and DONT call wait or the pool's handler, i should end up with a zombie family?
[00:14:08] <tunixman> yeah, I think so.
[00:14:13] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 246 seconds)
[00:14:32] *** Quits: guntbert (~yesitsme@user/guntbert) (Quit: Reconnecting)
[00:14:47] *** Joins: guntbert (~yesitsme@user/guntbert)
[00:15:00] <GinFuyou> Hello! I have a relative path written in a file, is there a (relatively) safe way to make it a pathlib object valid cross-platform? So path\to\file will work on linux and vice versa
[00:15:06] *** Quits: spjb (~spjb@S0106f0f24985fe23.wp.shawcable.net) (Quit: Leaving)
[00:15:16] <grym> GinFuyou: pathlib is cross platform already
[00:15:27] *** Joins: justinf210 (~justinf21@92.sub-97-44-1.myvzw.com)
[00:15:37] <neilthereildeil> tunixman: hmmm i dont see that...
[00:15:43] <neilthereildeil> i dont see any zombies
[00:15:57] <bjs> neilthereildeil: are the processes all still running?
[00:16:09] <neilthereildeil> https://bpa.st/D6DQ
[00:16:16] <neilthereildeil> i sleep for 10 seconds in the end of the parent
[00:16:21] <neilthereildeil> and look at top for zombies
[00:16:34] <GinFuyou> grym, If I do Path("path\to\file") it considers it a single filename it seems (I'm on linux)
[00:16:42] <bjs> neilthereildeil: i don't see anything that'd cause zombies here
[00:16:52] <grym> GinFuyou: i am unaware of any OS that uses \ to mean path separator
[00:16:54] *** Quits: guntbert (~yesitsme@user/guntbert) (Client Quit)
[00:17:06] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[00:17:09] *** Joins: guntbert (~yesitsme@user/guntbert)
[00:17:15] <GinFuyou> erm, windows does not?
[00:17:16] <tunixman> yeah the parent process would have to exit and then any children that haven't had their statuses reaped will be zombies.
[00:17:19] <DefectrChocolat> https://news.slashdot.org/story/21/06/23/1932237/john-mcafee-found-dead-in-prison-cell-after-spanish-high-court-allows-extradition-according-to-spanish-newspaper-el-mundo
[00:17:24] <neilthereildeil> i dont call wait or the pool sigchld handler from my sigchld handler, and i sleep for 10 seconds in parent, causing all the children to wait for 10 seconds in zombie state
[00:17:35] <tunixman> but if you're running in a job control shell they'll probably be reparented to the group leader anyway.
[00:17:35] <grym> oh, right.
[00:17:44] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[00:17:49] <tunixman> neilthereildeil: that's not the zombie state.
[00:17:56] <tunixman> ait, that is the zombie state.
[00:17:58] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[00:18:13] <neilthereildeil> whats ait?
[00:18:25] <grym> GinFuyou: the easy way is to just always use /; windows knows about that too
[00:18:30] <neilthereildeil> im writing a test program so we can demonstrate this easily between us
[00:18:35] <GinFuyou> I only remember for sure japanese windows used yen symbol (or something like that)
[00:18:37] <tunixman> ait is wait without the w
[00:18:43] <neilthereildeil> oh :)
[00:18:45] <tunixman> hahaha
[00:18:46] <tunixman> sory.
[00:18:53] *** Joins: spjb (~spjb@s0106f0f24985fe23.wp.shawcable.net)
[00:19:03] <neilthereildeil> so the code i pasted WILL cause zombie processes?
[00:19:12] <GinFuyou> grym, user that writes the file may not regrettably ^_^"
[00:19:35] <neilthereildeil> or should i remove the sleep(10) and make the parent exit?
[00:19:35] <tunixman> t neilthereildeil I'm digging into the multiprocessing source now.
[00:19:52] *** Quits: justinf210 (~justinf21@92.sub-97-44-1.myvzw.com) (Ping timeout: 250 seconds)
[00:20:06] *** Quits: snalty (~Shhh@user/snalty) (Read error: Connection reset by peer)
[00:20:08] *** __jmcantrell__ is now known as jmcantrell
[00:20:38] <grym> GinFuyou: you may have to use purewindowspath, then
[00:20:44] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 250 seconds)
[00:20:54] <bjs> neilthereildeil: oh are you thinking that when y ou reach the end of childProcess the proess dies?
[00:20:57] <bjs> that's not how Pool works.
[00:21:01] <grym> GinFuyou: pathlib.PureWindowsPath(r'foo\bar\baz')  returns PureWindowsPath('foo/bar/baz'), which looks right.
[00:21:35] <neilthereildeil> bjs: oops. how am i wrong?
[00:21:44] <bjs> neilthereildeil: because a Pool has a pool of processes it re-uses for tasks
[00:21:49] <bjs> it doesn't spawn a process for each task
[00:21:59] *** Quits: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[00:22:02] <neilthereildeil> but you can see i made maxtasksperchild=1
[00:22:07] *** Joins: snalty (~Shhh@user/snalty)
[00:22:29] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[00:22:52] <GinFuyou> grym, I can convert it to PosixPath? So I can read string as PureWindowsPath and then use it as linux path?
[00:23:03] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[00:23:18] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[00:23:31] <grym> GinFuyou: tag an .as_posix() on the end, yep
[00:23:48] <GinFuyou> Ok, thank you, let me try going that way!
[00:24:05] *** Joins: elena (~elena@202-153-212-80.ca99d4.syd.static.aussiebb.net)
[00:24:15] *** Quits: gloomy (~ldorigo@2a02:a03f:679e:e700:718d:8beb:946b:9ee7) (Ping timeout: 268 seconds)
[00:24:21] <rannnn8888> Maybe you know what the problem the script run good, but after like 1 hour it start work very slow ,like the multi therd not work but the server run good no problem if i stop the script and run again its same very slow,only if i restart the server its work good again, what can be the problem :D  ? https://dpaste.org/pofH#L28
[00:24:52] <grym> rannnn8888: 404
[00:25:38] <rannnn8888> grym this sryhttps://dpaste.org/j9m5
[00:25:46] <rannnn8888> https://dpaste.org/j9m5
[00:26:19] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[00:28:14] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:29:22] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Remote host closed the connection)
[00:31:54] <neilthereildeil> tunixman:  join()¶
[00:31:54] <neilthereildeil> Wait for the worker processes to exit. One must call close() or terminate() before using join().
[00:32:08] <neilthereildeil> maybe the join() call internally calls wait()?
[00:32:50] <tunixman> let me see if the repo is finished cloning. I want to check your specific version...
[00:33:32] <neilthereildeil> Python 2.7.16
[00:33:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:33:59] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 244 seconds)
[00:34:38] *** Joins: gormenghast (~gormengha@2a01:e0a:1fb:3af0:38c4:3bfe:5ff1:7ed5)
[00:35:30] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[00:36:25] <bjs> neilthereildeil: yes but your code also had 5 processes
[00:36:29] *** Joins: akaWolf (~akaWolf@akawolf.org)
[00:36:44] <neilthereildeil> so i should have 5 zombies?
[00:37:03] *** Quits: cruzr (~cruzr@2604:4300:a:16b::6) (Read error: Connection reset by peer)
[00:37:05] <neilthereildeil> https://medium.com/naukri-engineering/creating-troubleshooting-the-zombie-process-in-python-f4d89c46a85a
[00:37:14] <tunixman> there is a _cleanup function that loops through all the child processes and calls poll on them.
[00:37:22] *** Joins: cruzr (~cruzr@2604:4300:a:16b::6)
[00:37:30] <tunixman> and it gets called in a lot of places.
[00:37:46] <neilthereildeil> tunixman: in the pool code?
[00:37:56] <tunixman> In the process code that the pool code uses.
[00:38:25] <tunixman> hm, wait, let me just make sure.
[00:39:04] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 252 seconds)
[00:39:34] *** Quits: guntbert (~yesitsme@user/guntbert) (Quit: Reconnecting)
[00:39:49] *** Joins: guntbert (~yesitsme@user/guntbert)
[00:40:06] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[00:40:07] *** Joins: Praise (~Fat@user/praise)
[00:41:05] <tunixman> ok, it's a different code path, but this one also calls join.
[00:41:19] <tunixman> It doesn't register a signal handler though I don't tihnk.
[00:41:29] <tunixman> It just has a thread that periodically checks.
[00:42:25] <neilthereildeil> ok, so the pool library has a thread that preiodically calls wait on children
[00:42:29] *** Quits: guntbert (~yesitsme@user/guntbert) (Client Quit)
[00:42:35] <neilthereildeil> and this is why i dont see zombies
[00:42:44] *** Joins: guntbert (~yesitsme@user/guntbert)
[00:43:27] <tunixman> yeah, that's right.
[00:44:00] <tunixman> Of course it'll also create new processes for any workers that have exited.
[00:44:26] <neilthereildeil> ok, and that explains why the code here creates zombies: https://medium.com/naukri-engineering/creating-troubleshooting-the-zombie-process-in-python-f4d89c46a85a
[00:44:27] *** Quits: clf59 (~clf59@user/clf59) (Quit: Textual IRC Client: www.textualapp.com)
[00:44:45] <neilthereildeil> because it doesnt use pools
[00:44:50] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[00:44:52] <tunixman> oh yeah he's calling the os functions directly.
[00:45:04] *** Parts: Ashu (~ashwin@45.116.231.3) (WeeChat 3.2)
[00:45:04] *** Quits: Haxxa (~Haxxa@122.199.47.41) (Quit: Haxxa flies away.)
[00:45:04] <tunixman> pool handles a lot of the mechanics.
[00:45:11] <tunixman> for better or worse.
[00:45:20] <neilthereildeil> ok then im not even gonna run the test where i look for zombies after a couple days under load
[00:45:29] *** Joins: dcaro (~dcaro@user/dcaro)
[00:45:47] <neilthereildeil> how else can i debug the semaphore leak then?
[00:46:15] <tunixman> are you sure it's leaking in the first place...
[00:46:25] <neilthereildeil> yes
[00:46:29] <neilthereildeil> i clear the queue
[00:46:33] <neilthereildeil> the work queue
[00:46:37] <neilthereildeil> and then submit 1 job
[00:46:51] <neilthereildeil> and it  tells me the semaphore value is 171 instead of 184 on an otherwise idel system
[00:46:56] <tunixman> do you have a minimal snippet that'll demonstraet it?
[00:47:00] <tunixman> demonstrate
[00:47:01] <neilthereildeil> im leaking like 13 seamphroe slots
[00:47:11] <neilthereildeil> nah, im trynna build that now with the code i shared with u
[00:47:17] <tunixman> does the number go up?
[00:47:28] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[00:47:33] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[00:47:33] <tunixman> or does it hold steady?
[00:47:57] *** Joins: Haxxa (~Haxxa@122.199.47.41)
[00:47:59] *** Joins: c10l (~c10l@89.34.167.207)
[00:48:18] <neilthereildeil> it goes from 184->0 under load. then i clear the work queue and let it drain, and it goes from 0->171 rather than 0->184
[00:48:26] <neilthereildeil> it should go all the way back to 184
[00:48:57] <neilthereildeil> im guessing that since theres no late-attach debugging in python either, i cannot even use a debugger
[00:49:03] *** Joins: Doffi (~doffi@91.132.197.188)
[00:49:05] <neilthereildeil> another question
[00:49:14] *** pr3d4k4t is now known as pr3d4t0r
[00:49:18] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[00:49:19] <neilthereildeil> in that sample i pasted, why dont i always see child died printed 5 times?
[00:49:26] <neilthereildeil> we talked about a race condition
[00:49:45] <neilthereildeil> but pool calls wait so i dont need to call it
[00:50:17] <neilthereildeil> why is parent dying before printing all 5 child deaths?
[00:50:31] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[00:52:20] *** Quits: gormenghast (~gormengha@2a01:e0a:1fb:3af0:38c4:3bfe:5ff1:7ed5) (Quit: Quit)
[00:52:46] <teut> https://pythonhosted.org/pyrser/tutorial1.html#building-an-ast      note 1: We could notice the use of @ignore("null") in the rule number. This directive allow you to change ignore convention.
[00:53:03] <teut> can someone simplify  what they want to say via this?
[00:55:00] *** Joins: arakimo_ (~arakimo@user/arakimo)
[00:55:03] *** Quits: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:1fb:8d7b:dd29:5d2a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:55:05] *** Joins: JanC_ (~janc@user/janc)
[00:55:50] *** Joins: mexen (uid495612@user/mexen)
[00:55:51] *** Quits: JanC (~janc@user/janc) (Killed (NickServ (GHOST command used by JanC_)))
[00:56:07] *** JanC_ is now known as JanC
[00:56:35] *** Joins: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com)
[00:56:53] *** Quits: arakimo (~arakimo@user/arakimo) (Ping timeout: 258 seconds)
[01:01:30] *** Quits: n00b101 (uid448161@id-448161.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[01:01:54] *** arakimo_ is now known as arakimo
[01:02:05] *** Quits: arakimo (~arakimo@user/arakimo) (Quit: Leaving)
[01:02:14] *** Joins: arakimo (~arakimo@user/arakimo)
[01:02:20] <bjs> neilthereildeil: the Pool calls wait during cleanup
[01:02:40] *** Joins: normic (~normic@p4fc3009e.dip0.t-ipconnect.de)
[01:02:41] <bjs> when it cleans up the resources and stops tracking
[01:04:06] *** Quits: Doffi (~doffi@91.132.197.188) (Quit: leaving)
[01:04:24] <SnoopJ> bjs, arenas
[01:04:57] <SnoopJ> https://realpython.com/python-memory-management/#cpythons-memory-management is a nice discussion
[01:05:48] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 250 seconds)
[01:06:43] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Ping timeout: 268 seconds)
[01:06:59] <SnoopJ> and also https://docs.python.org/3/c-api/memory.html
[01:07:04] *** Joins: feriman (~feriman@188.163.113.127)
[01:07:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[01:07:44] <SnoopJ> it's a clever system, but it is prone to fragmentation, so yea, CPython tends to dwell at the high water mark
[01:08:02] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[01:09:50] <davve> 5/14
[01:09:57] *** Joins: heco (~redrum@user/redrum88)
[01:09:58] *** Joins: RBEL (~jigubigul@2001:1c06:19c3:7000:280c:fa03:34a7:44de)
[01:11:36] *** Parts: joakocero (~jochem@190.210.65.46) (WeeChat 3.2)
[01:11:56] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[01:14:05] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[01:14:06] <AhmedAmerican> `df.to_csv()` doesn't like `:` to be within file name ? https://bpa.st/B2VA
[01:14:38] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.94) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:14:40] *** Quits: nre (~nre@55d467f1.access.ecotel.net) (Quit: Leaving.)
[01:15:08] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.94)
[01:15:14] <SnoopJ> AhmedAmerican, ':' isn't allowed in filenames on Windows
[01:15:17] *** Joins: ______GOD______ (~GOD@user/god/x-9778998)
[01:15:28] <SnoopJ> (the OSError tells you that this is originating with the operating system)
[01:15:29] <AhmedAmerican> @SnoopJ ah okay
[01:15:32] *** Joins: derelict (~derelict@user/derelict)
[01:15:37] *** Quits: derelict (~derelict@user/derelict) (Client Quit)
[01:15:47] <AhmedAmerican> Thank you @SnoopJ
[01:16:20] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[01:16:34] *** Joins: mickey (~user@user/mickey)
[01:17:10] *** Joins: camel_case (~iphone@user/iphone)
[01:17:12] *** Quits: Linux77 (~kvirc@186.235.105.168) (Ping timeout: 268 seconds)
[01:17:18] <camel_case> snakes?
[01:17:37] *** Joins: LemurP (~lemurp@cm-84.214.104.84.getinternet.no)
[01:17:41] <matsaman> tired of these sneks
[01:17:57] <camel_case> try booping one of their snoots
[01:21:59] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[01:22:55] <bjs> neilthereildeil: oh i see now,  looking at the pool code it does have a thread that periodically calls waitpid() non-blocking just to see if the process is still alive. if it happens to not be alive at the time it will clean up the zombie worker then
[01:23:31] <bjs> neilthereildeil: It's been a while since I read this code so i'm a bit rusty sorry,  it seems like this would explain why if you had seen processes dying why you couldn't see zombie processes hanging about even before the pool was closed.
[01:23:50] <bjs> (But you should still be able to install SIGCHLD handler and see if it was killed externally)
[01:24:05] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[01:24:40] *** Quits: majorgreys (~majorgrey@ool-4a5afd9e.dyn.optonline.net) (Ping timeout: 246 seconds)
[01:27:17] *** Joins: ssbr_ (~ssbr@2620:15c:10f:203:2ea0:cb8d:5536:3043)
[01:29:06] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.2)
[01:29:34] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:dc25:2b5d:9b33:3d4b) (Quit: Leaving)
[01:33:07] *** Quits: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d) (Quit: WeeChat 3.2)
[01:33:14] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 268 seconds)
[01:34:27] *** Joins: pnoud (~pnoud@user/pnoud)
[01:34:49] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[01:34:52] *** Quits: neilthereildeil (~neilthere@204.115.183.4) (Quit: Client closed)
[01:35:27] *** Quits: feriman (~feriman@188.163.113.127) (Quit: WeeChat 3.2)
[01:36:21] *** Quits: rememberYou (~someone@user/rememberyou) (Remote host closed the connection)
[01:36:34] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[01:37:52] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 246 seconds)
[01:37:57] *** Quits: RBEL (~jigubigul@2001:1c06:19c3:7000:280c:fa03:34a7:44de) (Quit: WeeChat 3.2)
[01:40:04] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[01:40:17] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[01:40:18] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[01:43:04] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 250 seconds)
[01:43:56] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.94) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:44:12] *** Quits: Barones (~Barones@2804:48dc:8500:0:3d0b:6ece:41b6:b602) (Remote host closed the connection)
[01:44:57] *** Joins: salpynx (~salpynx@121.73.84.248)
[01:45:03] *** Joins: slurps-mad-rips (~slurps-ma@135-180-135-85.fiber.dynamic.sonic.net)
[01:46:13] *** Joins: Barones (~Barones@2804:48dc:8500:0:240e:929e:6801:8529)
[01:46:28] *** LightningB is now known as Reinhilde
[01:47:01] *** Quits: cman (~Cody@2603-9000-d104-8465-50c2-cbf3-9f6e-3906.inf6.spectrum.com) (Quit: WeeChat 3.2)
[01:47:58] *** Quits: MikZyth (~MikZyth@188.65.242.79) (Quit: WeeChat 3.1)
[01:48:24] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[01:49:01] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.94)
[01:49:49] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.94) (Client Quit)
[01:50:26] *** Quits: slavfox (~slavfox@93.158.232.111) (Ping timeout: 250 seconds)
[01:50:34] *** Joins: majorgreys (~majorgrey@ool-4a5afd9e.dyn.optonline.net)
[01:51:17] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[01:51:59] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[01:52:36] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.150)
[01:53:24] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.150) (Client Quit)
[01:53:41] *** Quits: \r (jeda@hellomouse/dev/cryb.jeda) (Quit: //System Offline//)
[01:54:15] *** Joins: GadgetNerd (~GadgetNer@user/gadgetnerd)
[01:54:34] *** Quits: slurps-mad-rips (~slurps-ma@135-180-135-85.fiber.dynamic.sonic.net) (Quit: slurps-mad-rips)
[01:55:10] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:55:11] *** Quits: GadgetNerd (~GadgetNer@user/gadgetnerd) (Client Quit)
[01:55:19] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[01:56:54] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[01:57:30] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[01:58:10] *** Joins: GadgetNerd (~GadgetNer@user/gadgetnerd)
[01:58:20] *** Joins: qlixed (~qlixed@152.170.36.244)
[01:59:26] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[01:59:29] *** Joins: ice9 (~ice9@user/ice9)
[01:59:44] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[02:00:09] *** Joins: cman (~Cody@2603-9000-d104-8465-88eb-f01b-8b64-049d.inf6.spectrum.com)
[02:01:11] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[02:01:11] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[02:02:11] *** Quits: cman (~Cody@2603-9000-d104-8465-88eb-f01b-8b64-049d.inf6.spectrum.com) (Client Quit)
[02:02:23] *** Joins: derelict (~derelict@user/derelict)
[02:03:00] *** Quits: LemurP (~lemurp@cm-84.214.104.84.getinternet.no) (Ping timeout: 265 seconds)
[02:03:48] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:05:19] *** Joins: LemurP (~lemurp@195.18.161.2)
[02:05:34] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[02:06:26] *** Quits: mrkz_c (uid503554@user/mrkz-c/x-7247691) (Quit: Connection closed for inactivity)
[02:06:52] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 265 seconds)
[02:06:55] *** Quits: darksun (~darksun@user/darksun) (Remote host closed the connection)
[02:08:29] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:08:37] *** Joins: cman (~Cody@2603-9000-d104-8465-ed6d-438d-e6c7-ffef.inf6.spectrum.com)
[02:09:26] *** Quits: mexen (uid495612@user/mexen) ()
[02:10:14] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[02:11:51] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[02:12:22] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[02:12:29] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[02:12:37] *** Joins: ice9 (~ice9@user/ice9)
[02:12:46] *** Joins: alguien (~alguien@user/alguien)
[02:12:57] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:13:41] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[02:14:17] *** Joins: MrFantastik (~Thunderbi@98.1.50.67)
[02:14:42] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[02:16:43] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Ping timeout: 246 seconds)
[02:17:09] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[02:17:20] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[02:18:24] *** Quits: ______GOD______ (~GOD@user/god/x-9778998) (Quit: Turning off a portion of this simulation.)
[02:19:04] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[02:21:08] *** Joins: Fiji (~Fiji@user/fiji)
[02:21:10] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[02:21:16] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 246 seconds)
[02:21:28] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[02:23:29] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[02:23:44] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[02:25:26] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[02:25:28] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Ping timeout: 246 seconds)
[02:27:16] *** Joins: mrkz_c (uid503554@user/mrkz-c/x-7247691)
[02:27:24] *** Joins: p-i-_ (~Ohmu@1.0.240.128)
[02:27:32] *** Quits: Barones (~Barones@2804:48dc:8500:0:240e:929e:6801:8529) (Remote host closed the connection)
[02:28:23] *** Joins: ice9 (~ice9@user/ice9)
[02:29:39] *** Quits: p-i- (~Ohmu@node-ml1.pool-125-25.dynamic.totinternet.net) (Ping timeout: 258 seconds)
[02:30:19] <NeilRG> does anyone know how to use the new numpy.typing.NDArray annotations?
[02:30:48] <SnoopJ> did 1.21 add more toys?
[02:31:28] <SnoopJ> the stuff added in 1.20 was basically just annotating "this is an array/dtype or convertible to one"
[02:31:30] <NeilRG> SnoopJ, yup
[02:31:44] <NeilRG> SnoopJ, dtype is now annotatable
[02:31:46] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 246 seconds)
[02:31:47] <SnoopJ> neat
[02:31:50] <NeilRG> yeah!
[02:32:11] <NeilRG> not sure if this is right, but here's what I have so far
[02:32:12] <NeilRG> _FC = TypeVar('_FC', bound=Union[np.floating[Any], np.complexfloating[Any, Any]])
[02:32:12] <NeilRG> ComplexArray = npt.NDArray[_FC]
[02:32:26] <NeilRG> npt = numpy.typing
[02:32:57] <NeilRG> not working though
[02:32:58] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Ping timeout: 265 seconds)
[02:33:05] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Quit: leaving)
[02:33:29] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:34:00] *** Quits: goldfish (~goldfish@user/goldfish) (Read error: Connection reset by peer)
[02:34:13] *** Joins: goldfish (~goldfish@user/goldfish)
[02:35:27] <SnoopJ> NeilRG, why the TypeVar?
[02:35:44] <NeilRG> SnoopJ, not sure, can I throw the Union in there?
[02:35:52] <SnoopJ> no clue, but I would think so? DTypeLike is a Union
[02:36:05] <NeilRG> lol
[02:36:06] <SnoopJ> the docs for it aren't very good heh
[02:36:08] *** Quits: coc0nut (~coc0nut@167.99.37.181) (Quit: ZNC 1.8.2 - https://znc.in)
[02:36:09] <NeilRG> apparently I can!
[02:36:12] <NeilRG> thanks
[02:36:44] <SnoopJ> that worked?
[02:37:14] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 250 seconds)
[02:38:32] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 250 seconds)
[02:38:58] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[02:38:59] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (Remote host closed the connection)
[02:39:12] *** Joins: daveo (~user@99.196.145.104)
[02:39:26] *** Joins: anas (~anas@196.224.51.199)
[02:39:28] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 246 seconds)
[02:40:26] *** Quits: brownan (~brownan@136.56.137.143) (Ping timeout: 252 seconds)
[02:40:51] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[02:41:16] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Read error: Connection reset by peer)
[02:41:43] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[02:41:46] *** Joins: coc0nut (~coc0nut@167.99.37.181)
[02:41:58] *** Quits: teut (~teut@182.68.62.72) (Quit: Connection closed)
[02:41:59] *** Joins: diek (~diek@187.36.4.113)
[02:42:29] *** Joins: Gustavo6046_ (~Gustavo60@user/gustavo6046)
[02:43:00] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[02:43:40] *** Quits: LemurP (~lemurp@195.18.161.2) (Ping timeout: 246 seconds)
[02:44:48] *** Gustavo6046_ is now known as Gustavo6046
[02:44:53] <rannnn8888> someone know what the problem its run k and after +- hour start run vry slow the problem if i kill the procsess its same ,only if i restart my server its work again https://dpaste.org/s4nb
[02:44:59] <acresearch> people is there a way to check what a line in a text file starts with without looping through all the lines?
[02:45:07] <rannnn8888> what the be here ? i dont fint what its use
[02:45:21] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[02:45:22] *** Joins: Betal (~Beta@user/betal)
[02:46:42] *** Quits: ulu (~ulu@user/ulu) (Ping timeout: 268 seconds)
[02:46:51] <grym> acresearch: let's go with no, not really
[02:47:03] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[02:47:08] <SnoopJ> acresearch, if you know the offset to the start of that line you could go straight there, but in general you don't and need to iterate past the first N-1. This is typically pretty fast unless your lines are quite long.
[02:48:05] *** Joins: ccldarjun (~arjun@c-67-160-245-135.hsd1.ca.comcast.net)
[02:49:03] *** Joins: ice9 (~ice9@user/ice9)
[02:49:31] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:50:13] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[02:50:52] *** Joins: diek (~diek@187.36.4.113)
[02:53:51] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[02:56:32] <tunixman> acresearch: if you're willing to use mmap and assembly, this might improve execution times (very) slightly, but it's going to be a bit oof a maintenance headache... https://www.strchr.com/strcmp_and_strlen_using_sse_4.2.
[02:56:32] *** Quits: diek (~diek@187.36.4.113) (Read error: Connection reset by peer)
[02:57:12] <tunixman> if the file doesn't change often you can create an index of where the line ends are, and then just refer to that to do a seek().
[02:57:20] <tunixman> (And save the index of course.)
[02:57:36] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:57:38] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:57:46] *** Joins: Overflwn (~Overflwn@2a02:8070:c3b7:5b00::ea80)
[02:58:43] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[02:59:40] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[02:59:50] *** Joins: iauc (~iauc@cm-84.209.101.110.getinternet.no)
[03:00:36] *** Joins: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net)
[03:00:48] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[03:01:21] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[03:02:08] <rannnn8888> hi if my python down when i try run simple script example https://paste.ofcode.org/7S3cJEj9UNNcpTuzSphTPZ
[03:02:12] *** Quits: Celeo (~Celeo@user/celeo) (Read error: Connection reset by peer)
[03:02:21] <rannnn8888> what can be the problem ? in linux ubuntu
[03:03:02] *** Joins: mh3f_ (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[03:03:04] <GinFuyou> rannnn8888, what does happen? error?
[03:03:33] *** Joins: Celeo (~Celeo@user/celeo)
[03:03:33] <matsaman> rannnn8888: how're you trying to run it?
[03:04:13] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:04:20] *** Joins: Psi-Jack (~psi-jack@user/psi-jack)
[03:04:43] <rannnn8888> I was confused by the question mistake I intended to send elsewhere: X
[03:04:52] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 265 seconds)
[03:05:06] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Ping timeout: 264 seconds)
[03:05:22] *** Quits: anas (~anas@196.224.51.199) (Ping timeout: 246 seconds)
[03:05:23] *** Quits: Akuli (~Akuli@82-203-160-144.bb.dnainternet.fi) (Quit: Leaving)
[03:05:38] <rannnn8888> this my problem my script run good like 1 hour +- and after this run very slow , only if i restart the server its back work good https://paste.ofcode.org/MwLWhVPWTVAyKyPkLhykZN
[03:05:45] <rannnn8888> what can be the problem here ?
[03:06:06] *** Quits: mdemo (~mdemo@c-73-40-53-74.hsd1.va.comcast.net) (Quit: Ping timeout (120 seconds))
[03:06:08] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[03:06:34] *** Joins: nyah (~nyah@79-73-56-146.dynamic.dsl.as9105.com)
[03:06:57] <NeilRG> anyone know how to force poetry to rescan pip for new versions?
[03:07:46] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:07:46] *** Joins: diek (~diek@187.36.4.113)
[03:08:05] <SnoopJ> NeilRG, "rescan pip?" `poetry update` is how you ask poetry to update poetry.lock, if that's what you mean
[03:08:32] <NeilRG> yeah, but it says that it can't find a version of a project I just pushed to pypi
[03:08:49] <NeilRG> I tried deleting the env and the cache
[03:08:51] <matsaman> probably can't find it then
[03:09:01] <NeilRG> usually I just wait for like 20 minutes
[03:09:05] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:09:11] <NeilRG> I just thought there might be a way to force to rescan or something
[03:09:39] *** Parts: daveo (~user@99.196.145.104) (ERC (IRC client for Emacs 26.3))
[03:09:52] <matsaman> does pypi even show it yet?
[03:10:04] <NeilRG> yes
[03:11:33] <tunixman> rannnn8888: where is listnwwsy coming from? if it's a global list and you never clean it up it could be taking up a lot of memory.
[03:11:57] <tunixman> The site you're running this against might also be rate limiting...
[03:12:05] <SnoopJ> NeilRG, is the new version compatible with the requirement in your pyproject.toml?
[03:12:07] <tunixman> But restarting the program wouldn't normally help that.
[03:12:23] <NeilRG> SnoopJ, yes, good thinking though
[03:13:06] <nedbat> rannnn8888: it sounds like your memory use is growing and you are starting to page
[03:13:46] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[03:13:46] *** Quits: diek (~diek@187.36.4.113) (Read error: Connection reset by peer)
[03:14:00] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[03:14:27] *** Joins: diek (~diek@187.36.4.113)
[03:14:44] <rannnn8888> tunixman i cut my script example list i for each therd https://paste.ofcode.org/Hh86Z9bayicZYqngsYUQHg
[03:15:42] <rannnn8888> nedbat yes but why if i kill the script and python procsses its a same very slow ? and only when i restart the server its work again good ?
[03:15:55] <rannnn8888> Isn't that weird?
[03:15:56] <nedbat> rannnn8888: oh, i missed that part.  not sure.
[03:16:53] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.2)
[03:16:54] *** Joins: ice9 (~ice9@user/ice9)
[03:16:55] *** Joins: meoww (~woem@user/meoow)
[03:17:47] <rannnn8888> nedbat dont know what its make to the server :X
[03:17:49] *** Parts: meoww (~woem@user/meoow) ()
[03:17:50] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Ping timeout: 252 seconds)
[03:18:28] *** Joins: raxor2k (~raxor2k@7.221.181.62.in-addr.dgcsystems.net)
[03:19:10] *** Joins: justinf210 (~justinf21@201.sub-97-44-1.myvzw.com)
[03:19:15] <raxor2k> maybe it is a stupid question but i have to ask: What is the different between "from .this_file import this" and "from this_file import this"? like what difference does that "." make?
[03:19:42] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 250 seconds)
[03:20:38] *** Parts: dnode (~dnode@user/dnode) (bye)
[03:20:41] *** Quits: cedric (~cedric@2a01:cb11:867:c200:9eb0:38cb:7b14:a55f) (Quit: Konversation terminated!)
[03:21:02] *** Joins: derelict (~derelict@user/derelict)
[03:21:46] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[03:22:39] <camel_case> I think its used if you are importing a python file from a python module. Probably to avoid a namespace collision if this_file is a 3rd party module that the end user has installed
[03:23:54] *** DefectrChocolat is now known as C0nflctrChoclat
[03:24:05] *** Joins: ferros (~ferros@vps-eacaba1b.vps.ovh.net)
[03:24:10] <llua> its a relative import
[03:24:10] *** Quits: Steeve (~steve@user/steeve) (Quit: end)
[03:25:56] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[03:26:19] <rannnn8888> how i deal with "Read timed out. (read timeout=4)" in request ?
[03:26:23] <SnoopJ> raxor2k, as llua says, the former is a relative (to the package it's being run in) import
[03:26:58] *** Quits: qlixed (~qlixed@152.170.36.244) (Quit: That's all folks!!)
[03:26:58] *** Quits: diek (~diek@187.36.4.113) (Read error: Connection reset by peer)
[03:27:10] <SnoopJ> it's specifically saying "in *this* package, there is another package I want you to import." The latter form without the '.' says "go find me a package with this name anywhere on the search path"
[03:28:10] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[03:29:30] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[03:30:08] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[03:30:16] <rannnn8888> how keep this erorr ? i try use "try" but it keep stop my loop https://dpaste.org/Mrzk
[03:30:47] <rannnn8888> if the url dont work here https://paste.ofcode.org/bbRVFiVEyxYYG7KTCSEgaC
[03:32:22] *** Quits: b2xiao (~b2xiao@wikipedia/nneonneo) (Quit: Textual IRC Client: www.textualapp.com)
[03:32:29] *** Quits: Jormungandr (~brad@136.49.61.2) (Quit: Konversation terminated!)
[03:32:30] *** Quits: justinf210 (~justinf21@201.sub-97-44-1.myvzw.com) (Ping timeout: 252 seconds)
[03:32:57] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[03:33:45] *** Joins: cheesemid (~cheesemid@user/cheesemid)
[03:33:49] <nedbat> rannnn8888: can you show us how you used try?
[03:34:00] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 250 seconds)
[03:34:39] *** Joins: b2xiao (~b2xiao@wikipedia/nneonneo)
[03:34:57] *** Quits: Armen (~Armen@armen138.com) (Quit: Ping timeout (120 seconds))
[03:35:23] *** Joins: Armen (~Armen@armen138.com)
[03:35:24] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[03:35:42] *** Quits: hid3 (~arnoldas@78.157.71.116) (Ping timeout: 264 seconds)
[03:36:00] *** Joins: pnoud (~pnoud@user/pnoud)
[03:36:02] *** Quits: magla (~gelignite@55d434ed.access.ecotel.net) (Quit: Stay safe!)
[03:37:46] <rannnn8888> nedbat exampl https://dpaste.org/LLGk
[03:38:01] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3-dev)
[03:38:12] <nedbat> rannnn8888: if that is what you did, then the timeout exception won't stop your loop
[03:38:19] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[03:38:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[03:38:32] <nedbat> but i don't think you should use "except: pass", since it will hide erros
[03:38:43] *** Joins: Wulf4 (~Wulf@user/wulf)
[03:38:52] *** Joins: tims (~tims@193-82-247-42.tpgi.com.au)
[03:40:31] <raxor2k> llua, SnoopJ: thanks
[03:40:31] *** Joins: justinf210 (~justinf21@117.sub-97-44-0.myvzw.com)
[03:40:49] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Remote host closed the connection)
[03:41:07] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[03:41:21] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[03:41:37] *** Quits: nyah (~nyah@79-73-56-146.dynamic.dsl.as9105.com) (Quit: leaving)
[03:42:05] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 265 seconds)
[03:42:05] *** Wulf4 is now known as Wulf
[03:42:12] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[03:42:27] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[03:42:49] *** Quits: rgp (~rgp@user/rgp) (Quit: Ping timeout (120 seconds))
[03:42:56] *** Joins: diek (~diek@187.36.4.113)
[03:43:20] *** Joins: rgp (~rgp@user/rgp)
[03:43:44] *** Quits: reset (~reset@user/reset) (Quit: reset)
[03:44:14] *** Joins: badsektor (~badsektor@user/badsektor)
[03:44:45] *** Joins: Static_Sky (~Static_Sk@2601:18c:4301:e4c0:6082:bbda:74c2:46b5)
[03:44:51] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[03:45:20] *** Quits: greenx (~greenx@pool-173-70-159-250.nwrknj.fios.verizon.net) (Ping timeout: 252 seconds)
[03:45:25] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[03:47:00] *** Quits: justinf210 (~justinf21@117.sub-97-44-0.myvzw.com) (Ping timeout: 250 seconds)
[03:47:00] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 250 seconds)
[03:47:03] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[03:47:08] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[03:47:15] <NeilRG> Is there a nice way in numpy to give "r.conjugate() * r" for a complex array r?
[03:47:19] *** Quits: MrFantastik (~Thunderbi@98.1.50.67) (Quit: MrFantastik)
[03:47:21] *** Quits: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b) (Quit: WeeChat 3.2)
[03:47:28] *** Quits: ponadm (pony@gateway/vpn/protonvpn/ponadm) (Ping timeout: 258 seconds)
[03:49:11] <SnoopJ> NeilRG, `r.conj * r` is a shorter spelling
[03:49:28] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 246 seconds)
[03:49:35] <NeilRG> SnoopJ, yeah, the problem is that the type annotations don't realize that a complex array becomes a real array after that
[03:49:47] <NeilRG> I think I'll prose np.abs_square
[03:49:51] <NeilRG> propose*
[03:49:53] <NeilRG> what do you think?
[03:49:59] <SnoopJ> oh, it's .conj() oops
[03:50:30] <SnoopJ> NeilRG, that doesn't create a real array
[03:50:59] <SnoopJ> although it does create one whose .imag should all be ~0
[03:51:45] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Ping timeout: 265 seconds)
[03:52:10] *** Joins: bigRoo (~user@131.236.54.84)
[03:52:13] <NeilRG> SnoopJ, if it's given a complex array, it definitely creates a real one
[03:52:19] <NeilRG> SnoopJ, are you sure?
[03:52:21] <SnoopJ> no it does not
[03:52:26] <NeilRG> oh I see your point
[03:52:30] <NeilRG> then I definitely need a new function
[03:52:35] <SnoopJ> if you want the magnitude, use abs() or np.abs()
[03:52:41] *** Quits: Ivyy (~Ivyy@2001:a62:41d:fa01:f7e9:40d0:fdd9:49b3) (Ping timeout: 268 seconds)
[03:52:45] <SnoopJ> (i.e. the sqrt of that computation)
[03:52:50] <NeilRG> I need this:     return jnp.square(x.real) + jnp.square(x.imag)
[03:54:51] <SnoopJ> hmm, I don't think there's a helper for that
[03:55:04] <NeilRG> yeah I might propose it
[03:55:22] <NeilRG> I mean they added square
[03:55:40] <SnoopJ> abs_square() would be a good name for it, yea
[03:57:52] *** Quits: raxor2k (~raxor2k@7.221.181.62.in-addr.dgcsystems.net) (Ping timeout: 246 seconds)
[03:57:59] <NeilRG> tx for your help
[03:59:25] *** Quits: HurricaneHarry (~quassel@84-85-122-182.fixed.kpn.net) (Ping timeout: 244 seconds)
[03:59:32] *** Joins: xsperry (~as@user/xsperry)
[03:59:33] *** Quits: xsperry (~as@user/xsperry) (Excess Flood)
[04:01:52] *** Quits: majorgreys (~majorgrey@ool-4a5afd9e.dyn.optonline.net) (Quit: Client closed)
[04:06:05] *** Joins: Jormungandr89 (~brad@136.49.61.2)
[04:07:13] *** Quits: TheRAt (~TheRAt@user/therat) (Read error: Connection reset by peer)
[04:09:14] *** Quits: Overflwn (~Overflwn@2a02:8070:c3b7:5b00::ea80) (Quit: Leaving)
[04:10:53] *** Joins: candy (~tvrtko@93-136-28-15.adsl.net.t-com.hr)
[04:11:25] *** Joins: NineBAR (~NineBAR@cpe-76-95-249-44.socal.res.rr.com)
[04:11:39] *** Joins: TheRAt (~TheRAt@user/therat)
[04:11:44] *** Joins: nomic2 (~nomic@host86-177-4-82.range86-177.btcentralplus.com)
[04:13:13] *** Joins: ice9 (~ice9@user/ice9)
[04:13:24] *** C0nflctrChoclat is now known as SmuggledHugZ
[04:13:34] *** Quits: twobitsprite (~twobitspr@66.115.166.150) (Ping timeout: 252 seconds)
[04:13:56] *** Quits: tvrtko (~tvrtko@93-138-68-64.adsl.net.t-com.hr) (Ping timeout: 252 seconds)
[04:14:18] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Ping timeout: 250 seconds)
[04:14:45] *** Joins: Nact (~l@host-85-27-125-179.dynamic.voo.be)
[04:15:27] *** Joins: twobitsprite (~twobitspr@107.13.51.62)
[04:15:55] *** Quits: neibo (~neibo@104.red-83-39-219.dynamicip.rima-tde.net) (Ping timeout: 265 seconds)
[04:16:24] <salparadise> Anyone know if its possible for python requests to always look at the CA file? My company is getting pretty aggressive about root rotations, on long running services, it does not detect that the root is expired, so we have to restart the service.
[04:16:49] <salparadise> naive testing says `REQUESTS_CA_BUNDLE` and a `requests.Session()` instance only reads the file once.
[04:16:56] *** Joins: Nine_BAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net)
[04:16:56] *** Quits: Nine_BAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net) (Client Quit)
[04:17:02] *** Joins: neibo (~neibo@52.red-88-10-1.dynamicip.rima-tde.net)
[04:17:28] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 246 seconds)
[04:19:17] *** Quits: NineBAR (~NineBAR@cpe-76-95-249-44.socal.res.rr.com) (Ping timeout: 258 seconds)
[04:20:58] *** Quits: venmx (~bertie@host86-129-227-84.range86-129.btcentralplus.com) (Ping timeout: 246 seconds)
[04:23:59] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[04:25:25] *** Quits: nomic2 (~nomic@host86-177-4-82.range86-177.btcentralplus.com) (Quit: Leaving)
[04:26:28] *** Joins: travaldo (~travaldo@159.203.88.148)
[04:26:38] *** Quits: travaldo (~travaldo@159.203.88.148) (Client Quit)
[04:26:57] *** Joins: travaldo (~travaldo@159.203.88.148)
[04:27:35] *** Joins: pyeverything (~mona@c-66-31-107-137.hsd1.ma.comcast.net)
[04:27:38] <pyeverything> do you know how I can fix this so I can run Jupyter locally on my own machine? https://pastebin.com/raw/yTwM5PzM
[04:27:44] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 250 seconds)
[04:30:07] *** Joins: ice9 (~ice9@user/ice9)
[04:31:33] *** Joins: Lando-HoloNet (~Lando@user/lando-spacepimp)
[04:31:34] *** Quits: diek (~diek@187.36.4.113) (Read error: Connection reset by peer)
[04:31:37] *** Joins: MrFantastik (~Thunderbi@2603-7080-ae03-948a-c6c3-075d-a2af-fe90.res6.spectrum.com)
[04:31:38] *** Quits: ssbr_ (~ssbr@2620:15c:10f:203:2ea0:cb8d:5536:3043) (Ping timeout: 250 seconds)
[04:32:27] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[04:33:06] <nedbat> pyeverything: choose a different port
[04:33:16] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[04:34:37] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 246 seconds)
[04:34:48] *** Joins: Abrax (~Abrax@user/abrax)
[04:34:48] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[04:35:40] *** Joins: ionface (~ionface@user/ionface)
[04:35:42] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[04:37:46] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Ping timeout: 246 seconds)
[04:38:07] *** Quits: MrFantastik (~Thunderbi@2603-7080-ae03-948a-c6c3-075d-a2af-fe90.res6.spectrum.com) (Remote host closed the connection)
[04:38:31] <graingert> salparadise: you can use a with requests.Session():
[04:39:16] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[04:39:26] <iflema> atleast do /home
[04:40:22] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 258 seconds)
[04:40:27] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:42:39] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[04:43:02] *** Quits: codl (~codl@user/codl) (Read error: Connection reset by peer)
[04:43:11] *** Joins: ______GOD______ (~GOD@user/god/x-9778998)
[04:43:20] *** Joins: codl (~codl@user/codl)
[04:46:22] *** Joins: jkl (~jkl@2600:1700:2420:6d10::3f1)
[04:46:38] *** Joins: justinf210 (~justinf21@192.sub-97-43-192.myvzw.com)
[04:46:48] *** Quits: entuland (~entuland@user/entuland) (Quit: Leaving)
[04:47:06] *** Quits: Unode (~Unode@194.94.44.220) (Quit: Not that cable)
[04:47:17] *** Joins: Unode (~Unode@194.94.44.220)
[04:47:29] *** Quits: ntdll (~ntdll@user/ntdll) (Ping timeout: 268 seconds)
[04:48:05] *** Joins: venmx (~bertie@host86-129-227-84.range86-129.btcentralplus.com)
[04:49:43] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:50:14] *** Quits: yourfate (~yourfate@cabal.yourfate.org) (Read error: Connection reset by peer)
[04:50:33] *** Joins: yourfate (~yourfate@cabal.yourfate.org)
[04:51:08] *** Quits: justinf210 (~justinf21@192.sub-97-43-192.myvzw.com) (Ping timeout: 250 seconds)
[04:51:14] *** Quits: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1) (Remote host closed the connection)
[04:52:29] *** Joins: DragoonAethis (~quassel@2a01:4f8:c2c:3359::1)
[04:52:47] *** Quits: zeus (~user@user/kamyl) (Ping timeout: 252 seconds)
[04:52:49] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[04:52:49] *** Quits: venmx (~bertie@host86-129-227-84.range86-129.btcentralplus.com) (Ping timeout: 246 seconds)
[04:53:20] *** Quits: jasiek (~jps@kuweta.sanepid.org) (Ping timeout: 252 seconds)
[04:53:20] *** Quits: hexa- (~hexa-@juno.lossy.network) (Ping timeout: 252 seconds)
[04:53:41] *** Joins: zeus (~user@user/kamyl)
[04:53:42] *** Quits: olasd (~olasd@softwareheritage/olasd) (Ping timeout: 264 seconds)
[04:54:18] *** Quits: doko (~doko@2a02:8106:1a:7600:a09a:9a0e:703c:169d) (Ping timeout: 264 seconds)
[04:54:56] *** Joins: jasiek (~jps@kuweta.sanepid.org)
[04:55:14] *** Joins: dalan7 (~dalan@118.102.85.89)
[04:55:36] *** Quits: clawh (~clawh@185.244.214.60) (Read error: Connection reset by peer)
[04:55:38] *** Joins: olasd (~olasd@softwareheritage/olasd)
[04:55:49] *** Joins: hexa- (~hexa-@juno.lossy.network)
[04:55:50] *** Joins: diek (~diek@187.36.4.113)
[04:56:17] *** Joins: clawh (~clawh@185.244.214.60)
[04:57:11] *** Quits: clawh (~clawh@185.244.214.60) (Max SendQ exceeded)
[04:57:12] *** Quits: dalan (~dalan@110-175-186-185.tpgi.com.au) (Ping timeout: 252 seconds)
[04:57:12] *** dalan7 is now known as dalan
[04:57:46] *** Joins: clawh (~clawh@185.244.214.60)
[04:59:00] *** Quits: clawh (~clawh@185.244.214.60) (Remote host closed the connection)
[04:59:41] *** Joins: clawh (~clawh@185.244.214.60)
[05:00:28] *** vinleod is now known as vdamewood
[05:00:30] *** Quits: clawh (~clawh@185.244.214.60) (Remote host closed the connection)
[05:00:54] *** Joins: clawh (~clawh@185.244.214.60)
[05:01:04] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 258 seconds)
[05:01:09] *** Joins: MrFantastik (~Thunderbi@2603-7080-ae03-948a-c6c3-075d-a2af-fe90.res6.spectrum.com)
[05:01:35] *** Joins: zandq (~Thunderbi@112.19.169.147)
[05:03:00] *** Joins: sebastianos (~sebastian@user/sebastianos)
[05:03:27] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[05:04:02] *** Quits: clawh (~clawh@185.244.214.60) (Remote host closed the connection)
[05:04:08] *** Quits: LuxuryMode (uid91005@id-91005.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[05:04:40] *** Joins: clawh (~clawh@185.244.214.60)
[05:05:30] *** Quits: clawh (~clawh@185.244.214.60) (Remote host closed the connection)
[05:05:51] *** Joins: clawh (~clawh@185.244.214.60)
[05:05:52] *** Quits: MrFantastik (~Thunderbi@2603-7080-ae03-948a-c6c3-075d-a2af-fe90.res6.spectrum.com) (Client Quit)
[05:06:26] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[05:06:58] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[05:07:30] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[05:07:59] *** Quits: sebastianos (~sebastian@user/sebastianos) (Quit: ZNC 1.8.2 - https://znc.in)
[05:08:17] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[05:08:59] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[05:09:26] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[05:09:47] *** Quits: ______GOD______ (~GOD@user/god/x-9778998) (Quit: Turning off a portion of this simulation.)
[05:10:32] *** Joins: zaquest (~notzaques@5.128.210.178)
[05:11:22] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Ping timeout: 246 seconds)
[05:12:15] *** Quits: Oddity (Oddity@S01065c76952069d4.no.shawcable.net) (Changing host)
[05:12:15] *** Joins: Oddity (Oddity@user/oddity)
[05:13:00] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[05:14:04] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 252 seconds)
[05:16:27] *** Joins: venmx (~bertie@host86-129-227-84.range86-129.btcentralplus.com)
[05:17:23] *** Joins: jazzy (~jaziz@2600:380:c06b:9daa:c554:5611:1fc9:4321)
[05:19:07] *** Quits: Static_Sky (~Static_Sk@2601:18c:4301:e4c0:6082:bbda:74c2:46b5) (Quit: Leaving)
[05:19:30] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[05:21:02] *** Quits: venmx (~bertie@host86-129-227-84.range86-129.btcentralplus.com) (Ping timeout: 250 seconds)
[05:21:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[05:21:53] *** Joins: dzz007 (~dzz007@ec2-18-214-52-49.compute-1.amazonaws.com)
[05:22:23] *** Joins: wyclif (~wyclif@user/wyclif)
[05:23:09] *** Joins: sebastianos (~sebastian@user/sebastianos)
[05:23:42] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[05:25:10] *** Joins: jazzy2 (~jaziz@2600:380:c06b:9daa:c554:5611:1fc9:4321)
[05:26:37] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[05:26:40] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 250 seconds)
[05:27:19] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[05:28:11] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Client Quit)
[05:28:25] *** Quits: jazzy (~jaziz@2600:380:c06b:9daa:c554:5611:1fc9:4321) (Ping timeout: 250 seconds)
[05:30:24] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:54] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[05:33:45] *** jazzy2 is now known as jazzy
[05:33:55] *** Quits: zandq (~Thunderbi@112.19.169.147) (Quit: zandq)
[05:34:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:34:58] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[05:35:05] *** Joins: vlm (~vlm@user/vlm)
[05:35:22] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[05:35:43] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[05:36:21] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[05:36:50] *** Joins: pnoud (~pnoud@user/pnoud)
[05:38:43] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:39:01] *** Joins: TheFreim (~user@50-81-18-58.client.mchsi.com)
[05:39:04] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[05:39:23] *** Joins: afidegnum (~user@102.176.66.14)
[05:39:30] *** Joins: cinix (~cinix__@c-73-60-53-69.hsd1.nh.comcast.net)
[05:39:52] <afidegnum>  hi, there a channel related to AI/Data SCience, GPT ?
[05:40:09] *** Quits: TheFreim (~user@50-81-18-58.client.mchsi.com) (Remote host closed the connection)
[05:40:18] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:5796:3b40:5569:c90) (Remote host closed the connection)
[05:41:25] *** Quits: Jormungandr89 (~brad@136.49.61.2) (Quit: Konversation terminated!)
[05:41:28] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 246 seconds)
[05:41:46] *** Joins: TheFreim (~user@50-81-18-58.client.mchsi.com)
[05:42:23] <grym> #machinelearning
[05:43:01] *** Quits: TheFreim (~user@50-81-18-58.client.mchsi.com) (Remote host closed the connection)
[05:43:03] <afidegnum> thanks,
[05:43:08] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 250 seconds)
[05:44:58] *** Joins: TheFreim (~user@50-81-18-58.client.mchsi.com)
[05:46:06] *** Quits: TheFreim (~user@50-81-18-58.client.mchsi.com) (Remote host closed the connection)
[05:46:46] *** Joins: TheFreim (~user@50-81-18-58.client.mchsi.com)
[05:46:54] *** Joins: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net)
[05:47:07] *** Joins: itsmemoria (~itsmemori@user/itsmemoria)
[05:47:10] <acresearch> afidegnum: i recommend ##machinelearning-general since some people in #machinelearning may troll you
[05:47:46] *** Quits: afidegnum (~user@102.176.66.14) (Ping timeout: 246 seconds)
[05:47:55] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[05:48:14] <grym> one or the other has a grumpy op and i cannot remember which is which
[05:48:21] <acresearch> people   x += 1 adds 1 to x,    is there a way to say   x + or - 1 randomly?
[05:48:35] *** Quits: TheFreim (~user@50-81-18-58.client.mchsi.com) (Remote host closed the connection)
[05:48:36] *** Quits: GinFuyou (~GinFuyou@reya.cloud.tilaa.com) (Remote host closed the connection)
[05:49:07] <acresearch> grym: its #machinelearning unfortunatly,   that was the reason ##machinelearning-general was established
[05:49:15] *** Joins: TheFreim (~user@50-81-18-58.client.mchsi.com)
[05:49:21] <acresearch> it started in freenode and carried over here
[05:49:32] *** Quits: fluffyballoon (~fluffybal@199.204.58.62) (Quit: Client closed)
[05:50:28] *** Joins: Jormungandr89 (~brad@136.49.61.2)
[05:50:42] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 240 seconds)
[05:51:23] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:51:38] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[05:54:44] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 258 seconds)
[05:55:46] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[05:55:56] <themill> acresearch: np.sign(np.random.random(n)-0.5)
[05:57:39] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[05:58:14] *** Joins: aquijoule__ (~richbridg@213-225-12-210.nat.highway.a1.net)
[05:59:35] <KirkMcDonald> acresearch: x += random.choice([-1, 1])
[06:00:15] <themill> I always want lots of them for monte carlo simulations so my default position is to vectorise it...
[06:00:48] *** Quits: aquijoule_ (~richbridg@089144205017.atnat0014.highway.webapn.at) (Ping timeout: 265 seconds)
[06:02:21] *** Joins: MrFantastik (~Thunderbi@2603-7080-ae03-948a-c6c3-075d-a2af-fe90.res6.spectrum.com)
[06:02:45] <acresearch> themill: i like this approach, but i cant get it to work
[06:03:25] *** Joins: pete443_ (~pete@user/pete443)
[06:03:34] *** Quits: pete443 (~pete@user/pete443) (Ping timeout: 252 seconds)
[06:03:36] *** Joins: Elodin (~weechat@user/elodin)
[06:04:09] <acresearch> this is my setup,,,  x += random.random()     i want to sometimes to add sometimes subtract    so   x = random.random()     y = np.sign(np.random.random(x)-0.5)  ?  that did not work
[06:05:51] *** Quits: cliluw (~cliluw@47.147.80.149) (Ping timeout: 258 seconds)
[06:08:18] *** Joins: w0x12ef_ (~w0x12ef@117.61.31.20)
[06:08:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[06:09:04] *** Quits: ente_ (~ente@p54a445ae.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[06:09:35] <w0x12ef_> what is a generator context manager
[06:10:40] <rannnn8888> when i use sqlite3 after i close the script ,Could it be that he's leaving something active on my server?
[06:10:52] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[06:14:17] *** Quits: stultusv (~Stultus_V@user/stultusv) (Ping timeout: 258 seconds)
[06:14:38] *** Joins: kjjaeger (~kjjaeger@2601:806:4300:b20:7a3:858:a992:db8b)
[06:15:04] <themill> acresearch: the numpy approach is to make many many random numbers at a time. If you just want one value at a time, then KirkMcDonald's approach is better.
[06:15:08] *** Quits: marduk (~marduk@216.243.54.166) (Remote host closed the connection)
[06:15:15] <NeilRG> I wish sum had a version that did reduce(add, ...) isntead
[06:15:16] <acresearch> themill: ok
[06:15:31] <habnabit_> NeilRG, why
[06:16:12] <NeilRG> habnabit_, because I'm using JAX and it will generate more efficient code if you don't tell it to add zero
[06:16:29] <habnabit_> NeilRG, what is jax
[06:16:41] *** Joins: xsperry (~as@user/xsperry)
[06:16:56] <NeilRG> habnabit_, a JIT compiler for numpy-like code
[06:17:02] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[06:17:28] *** Joins: Celeo (~Celeo@user/celeo)
[06:17:52] *** Quits: davidlowryduda (~davidlowr@73.61.8.36) (Ping timeout: 252 seconds)
[06:19:30] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[06:19:33] *** Joins: hendursaga (~weechat@user/hendursaga)
[06:19:37] *** Joins: marduk (~marduk@216.243.54.166)
[06:19:45] *** Joins: davidlowryduda (~davidlowr@2601:197:600:1210:c935:8535:4063:dde3)
[06:20:36] *** Quits: TheFreim (~user@50-81-18-58.client.mchsi.com) (Remote host closed the connection)
[06:21:24] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[06:26:10] *** Quits: heco (~redrum@user/redrum88) (Quit: Going offline, see ya! (www.adiirc.com))
[06:26:44] *** Joins: wei2912 (~wei2912@112.199.250.21)
[06:28:24] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[06:31:37] *** Quits: MrFantastik (~Thunderbi@2603-7080-ae03-948a-c6c3-075d-a2af-fe90.res6.spectrum.com) (Remote host closed the connection)
[06:32:01] *** Joins: MrFantastik (~Thunderbi@2603-7080-ae03-948a-c6c3-075d-a2af-fe90.res6.spectrum.com)
[06:32:36] <Jonno_FTW> how do I turn an iterator into a slightly different iterator? I keep getting "generator raised StopIteration"
[06:34:44] <itsmemoria> StopIteration is by design so we'll have to catch that
[06:34:55] <Jonno_FTW> https://bpa.st/WUTQ
[06:35:00] <Jonno_FTW> seems a bit dirty
[06:35:25] <Jonno_FTW> or maybe I need to use a for
[06:36:53] <Tashtari> An iterator doesn't stop being true-y (and thus continue the while loop) when it's out of things to iterate through.
[06:37:05] <Jonno_FTW> yeah using a for fixed it
[06:37:35] <habnabit_> Jonno_FTW, no reason to avoid using for
[06:37:44] <Jonno_FTW> I wasn't thinking I'm sorry ;__;
[06:38:46] *** Quits: kjjaeger (~kjjaeger@2601:806:4300:b20:7a3:858:a992:db8b) (Quit: Client closed)
[06:40:20] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[06:42:12] *** mh3f_ is now known as mh3f
[06:43:22] <pyeverything> do you know how to fix this error? https://pastebin.com/raw/ujxYmtKj  trying to read a jpg image and show it with matplotlib plt TypeError: Image data of dtype <U15 cannot be converted to float
[06:47:07] *** Joins: bryce (~bryce@ool-457dd6ac.dyn.optonline.net)
[06:48:06] *** Joins: diek (~diek@187.36.4.113)
[06:48:06] <Jonno_FTW> pyeverything: consider changing how you use PIL.Image.open, maybe use one of the options
[06:49:15] <Jonno_FTW> also PIL images have a show() function on them
[06:50:58] <Jonno_FTW> also imshow wants an array of floats, so you have to convert it to an array using numpy before matplotlib will show it
[06:52:03] <Jonno_FTW> pyeverything: or you can use matplotlib.image.mpimg to read the image in a format matplotlib can be used with imshow
[06:52:34] *** Joins: ripdog (~quassel@user/ripdog)
[06:52:44] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Quit: Leaving)
[06:53:10] <OMGOMG> U is unicode
[06:53:19] <OMGOMG> which makes sense, since you're trying to show the filename
[06:53:30] *** Quits: ripdog_ (~quassel@user/ripdog) (Ping timeout: 240 seconds)
[06:53:43] <OMGOMG> try showing the image instead
[06:53:48] <Jonno_FTW> haha
[06:53:53] <Jonno_FTW> plt.imshow(my_img)
[06:56:04] *** Joins: sebastianos (~sebastian@user/sebastianos)
[06:57:35] *** Joins: zbe (~zbe@pleiades.zbe.bz)
[06:58:33] *** Joins: venmx (~bertie@host86-129-227-84.range86-129.btcentralplus.com)
[06:58:42] *** Quits: skeld_ (~skeld@2601:148:200:ac70:b9c7:c76a:3a4f:34f2) (Read error: Connection reset by peer)
[06:59:27] *** Quits: LuKaRo_ (~LuKaRo@p57b154c6.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[07:00:32] *** Joins: LuKaRo (~LuKaRo@p200300dfa7179750b8479f8851bd7c97.dip0.t-ipconnect.de)
[07:01:21] *** Joins: majorgreys (~majorgrey@ool-4a5afd9e.dyn.optonline.net)
[07:02:00] *** Quits: emerent (~quassel@p200300cd5703bb02ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[07:02:01] *** Quits: diek (~diek@187.36.4.113) (Read error: Connection reset by peer)
[07:02:03] *** Joins: emerent_ (~quassel@p200300cd5703bb5dba27ebfffed28a59.dip0.t-ipconnect.de)
[07:02:04] *** emerent_ is now known as emerent
[07:02:48] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[07:03:18] *** Quits: venmx (~bertie@host86-129-227-84.range86-129.btcentralplus.com) (Ping timeout: 250 seconds)
[07:04:01] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:04:01] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (lead.libera.chat (Nickname regained by services)))
[07:04:01] *** finn_elija is now known as FinnElija
[07:04:36] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[07:05:12] *** Quits: travaldo (~travaldo@159.203.88.148) (Read error: Connection reset by peer)
[07:10:52] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (Quit: Textual IRC Client: www.textualapp.com)
[07:11:06] *** Quits: majorgreys (~majorgrey@ool-4a5afd9e.dyn.optonline.net) (Quit: Client closed)
[07:14:04] *** Quits: w0x12ef_ (~w0x12ef@117.61.31.20) (Read error: Connection reset by peer)
[07:14:42] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 252 seconds)
[07:15:56] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[07:19:19] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[07:21:21] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[07:22:53] <pyeverything> thank you all
[07:23:19] <pyeverything> can I show an obj mesh in jupyter notebook?
[07:25:06] *** Joins: BUSY (~BUSY@user/busy)
[07:25:19] <pyeverything> I am using threevis and openmesh
[07:25:50] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Ping timeout: 250 seconds)
[07:27:25] *** Joins: diek (~diek@187.36.4.113)
[07:27:30] *** Quits: dab21 (~dab21@pistis.amyanddavid.net) (Quit: ZNC 1.8.2 - https://znc.in)
[07:27:47] *** Joins: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[07:28:35] *** Joins: dab21 (~dab21@pistis.amyanddavid.net)
[07:29:56] <acresearch> people,, i facing a stange issue, i am unable to bypass a library's assertion error through try/except    is there a way to by pass or forcefully pass the error?  so my loop won't stop
[07:30:11] <mefistofeles> acresearch: code?
[07:30:19] <mefistofeles> and traceback
[07:30:59] <acresearch> i will send yout he code, but you can't replicate it since it uses an unsual libary
[07:31:25] <mefistofeles> acresearch: ok
[07:31:37] <acresearch> let me try and cut the code to high light the position of the error
[07:32:14] <BUSY> hello - is there a more idiomatic way to achieve this without the explicit assignment on the first element? https://bpa.st/6U2Q
[07:32:42] <mefistofeles> BUSY: yeah, a list comprehension
[07:33:18] *** Quits: Lando-HoloNet (~Lando@user/lando-spacepimp) (Read error: Connection reset by peer)
[07:33:18] *** Quits: diek (~diek@187.36.4.113) (Read error: Connection reset by peer)
[07:33:23] <habnabit_> mefistofeles, that's not very amenable to a comprehension
[07:33:32] *** Joins: Lando-HoloNet (~Lando@user/lando-spacepimp)
[07:34:01] <mefistofeles> habnabit_: yeah, I just realized, but you can still do it
[07:34:01] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[07:34:05] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[07:34:46] <habnabit_> BUSY, https://pendulum.eustace.io/docs/#range
[07:35:09] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[07:36:53] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[07:37:40] *** Joins: pnoud (~pnoud@user/pnoud)
[07:39:11] <BUSY> that's some thick documentation :O thank you!
[07:40:25] *** Quits: bigRoo (~user@131.236.54.84) (Remote host closed the connection)
[07:42:25] <acresearch> mefistofeles: i am sorry i cannot replicate the error in a shorter script,   it is strange
[07:42:34] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 246 seconds)
[07:42:36] <acresearch> and i haven't slept in 24 hours
[07:42:40] <acresearch> so very tired
[07:42:53] <mefistofeles> acresearch: hah ok, get some sleep xD
[07:43:20] <SnoopJ> speaking of thick documentation...apparently click.testing.Result's new return_value attribute is quietly set to None when the Command in question is run in standalone_mode (the default)
[07:43:22] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[07:43:33] <SnoopJ> and this is documented on...BaseCommand :/
[07:44:02] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[07:45:08] <acresearch> mefistofeles: is it the last function in my script to by pass files with error, i coded everythiong and tiw orks excpe tofr this last error
[07:45:22] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:47:49] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Ping timeout: 246 seconds)
[07:48:52] *** Joins: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs)
[07:49:51] *** Quits: wei2912 (~wei2912@112.199.250.21) (Quit: Lost terminal)
[07:53:08] *** Quits: MrFantastik (~Thunderbi@2603-7080-ae03-948a-c6c3-075d-a2af-fe90.res6.spectrum.com) (Ping timeout: 250 seconds)
[07:55:39] *** Quits: NeilRG (~NeilRG@192.222.196.111) (Remote host closed the connection)
[07:58:43] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[07:59:16] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[07:59:38] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 250 seconds)
[07:59:51] *** Joins: ionface (~ionface@user/ionface)
[08:00:12] *** Quits: kindablue (znc@irc.tpurist.com) (Quit: System Rebooting..)
[08:00:30] *** Quits: m_tadeu (~quassel@bl14-187-233.dsl.telepac.pt) (Ping timeout: 268 seconds)
[08:01:28] *** Joins: kindablue (znc@irc.tpurist.com)
[08:01:42] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[08:05:16] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:05:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:05:48] *** Joins: jazzy2 (~jaziz@2600:380:c06b:9daa:c554:5611:1fc9:4321)
[08:05:58] *** Quits: cheesemid (~cheesemid@user/cheesemid) (Quit: leaving...)
[08:06:08] *** Quits: jazzy (~jaziz@2600:380:c06b:9daa:c554:5611:1fc9:4321) (Ping timeout: 250 seconds)
[08:08:02] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[08:08:25] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[08:08:36] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[08:09:39] *** Lord_of_Life_ is now known as Lord_of_Life
[08:10:10] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 244 seconds)
[08:10:53] *** Quits: dzz007 (~dzz007@ec2-18-214-52-49.compute-1.amazonaws.com) (Changing host)
[08:10:53] *** Joins: dzz007 (~dzz007@user/dzz007)
[08:11:06] *** Quits: dzz007 (~dzz007@user/dzz007) (Quit: The Lounge - https://thelounge.chat)
[08:11:28] *** Joins: dzz007 (~dzz007@user/dzz007)
[08:12:37] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:12:45] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[08:15:53] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[08:18:41] *** Joins: lint_coder (~lint_code@49.37.190.45)
[08:20:00] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 265 seconds)
[08:25:00] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[08:25:43] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[08:26:39] <pyeverything> how should I solve this? AttributeError: module 'threevis' has no attribute 'display_openmesh'
[08:26:49] *** Joins: pagnol (~user@121.202.111.40)
[08:26:52] <pyeverything> https://pypi.org/project/threevis/
[08:26:55] *** Quits: lint_coder (~lint_code@49.37.190.45) (Quit: Connection closed)
[08:27:14] *** Joins: Fiji (~Fiji@user/fiji)
[08:28:06] <mefistofeles> pyeverything: hmm, sounds like the documentation example is not updated with the actual module structure
[08:28:53] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Quit: leaving)
[08:29:29] *** Quits: the-mask (~the-mask@user/the-mask) (Ping timeout: 268 seconds)
[08:30:09] <pyeverything> mefistofeles: do you know how I should use it though?
[08:31:09] *** Joins: ente_ (~ente@p54a445ae.dip0.t-ipconnect.de)
[08:31:38] <mefistofeles> pyeverything: by quickly inspecting the code, it seems that you might use it as tv.openmesh_utils.display_openmesh
[08:32:04] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[08:33:13] *** Joins: gline_ (~yashi@p508bebbc.dip0.t-ipconnect.de)
[08:34:15] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[08:34:23] <pyeverything> mefistofeles: thanks I will check https://stackoverflow.com/questions/68109487/attributeerror-module-threevis-has-no-attribute-display-openmesh
[08:34:43] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 246 seconds)
[08:34:45] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[08:35:44] *** Quits: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net) (Ping timeout: 258 seconds)
[08:35:44] *** Quits: sokan (~sokan@2a02:587:9e1a:5100:daf0:bb7f:b6c4:2421) (Ping timeout: 268 seconds)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:06] <mefistofeles> pyeverything: try what I suggested
[08:36:40] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:36:55] *** Quits: gline (~yashi@p508be92f.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[08:36:58] *** Joins: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net)
[08:37:47] *** Quits: TranquilEcho (~grom@user/tranquilecho) (Quit: WeeChat 2.8)
[08:38:07] *** Quits: polyrob (~rob@user/polyrob) (Ping timeout: 268 seconds)
[08:39:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[08:41:19] *** Joins: polyrob (~rob@user/polyrob)
[08:42:27] <pyeverything> can this be fixed in CentOS7 and for Python 3? OSError: /lib64/libm.so.6: version `GLIBC_2.27' not found (required by /scratch3/venv/djrn/lib/python3.8/site-packages/pygel3d/libPyGEL.so)
[08:43:21] <mefistofeles> pyeverything: how did you install pygel3d?
[08:45:29] *** Joins: doev (~doev@p549d709f.dip0.t-ipconnect.de)
[08:45:42] <pyeverything> mefistofeles:  following http://www2.compute.dtu.dk/projects/GEL/PyGEL/ I did  !pip install PyGEL3D
[08:46:28] *** Joins: twobitsprite (~twobitspr@107.13.51.62)
[08:46:46] <pyeverything> mefistofeles: full question for better readability https://stackoverflow.com/questions/68109559/oserror-lib64-libm-so-6-version-glibc-2-27-not-found-when-using-pygel3d-in
[08:47:55] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[08:50:00] *** SmuggledHugZ is now known as s0urSt0ff
[08:50:33] *** Joins: jamea (~jamea77@177.239.82.167)
[08:51:19] <jamea> hi all
[08:51:26] <jamea> anyone know math/statistics ?
[08:52:41] *** Joins: djapo (~archangel@99-149-186-203.lightspeed.hstntx.sbcglobal.net)
[08:52:58] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[08:53:12] *** Quits: m1n10n (georgecloo@cpe-76-184-204-251.tx.res.rr.com) ()
[08:53:56] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[08:54:07] <pyeverything> jamea:  there is a #math channel
[08:54:32] *** Quits: djapo (~archangel@99-149-186-203.lightspeed.hstntx.sbcglobal.net) (Quit: leaving)
[08:54:48] *** Joins: djapo (~archangel@99-149-186-203.lightspeed.hstntx.sbcglobal.net)
[08:55:13] <jamea> pyeverything can you read a link? https://www.mrexcel.com/board/threads/solver-or-vba-use-as-much-material-as-possible-and-waste-as-little-as-possible.1174654/
[08:55:21] <jamea> not sure if the final way for solution is programming
[08:55:31] *** Quits: FluffyMask (~FluffyMas@user/fluffymask) (Quit: WeeChat 2.9)
[08:58:31] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 246 seconds)
[08:59:19] *** Joins: venmx (~bertie@host86-129-227-84.range86-129.btcentralplus.com)
[09:02:21] *** Joins: nre (~nre@55d460e8.access.ecotel.net)
[09:02:44] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[09:03:47] <themill> Why would mypy complain that ruamel.yaml: error: «Module has no attribute "safe_load"; maybe "safe_load_all"?»
[09:04:07] *** Quits: venmx (~bertie@host86-129-227-84.range86-129.btcentralplus.com) (Ping timeout: 246 seconds)
[09:04:45] *** Quits: djapo (~archangel@99-149-186-203.lightspeed.hstntx.sbcglobal.net) (Quit: leaving)
[09:05:01] *** Joins: djapo (~archangel@99-149-186-203.lightspeed.hstntx.sbcglobal.net)
[09:07:52] *** Joins: ______GOD______ (~GOD@user/god/x-9778998)
[09:09:05] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[09:09:28] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[09:10:10] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[09:10:20] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[09:11:00] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[09:12:21] *** Quits: itsmemoria (~itsmemori@user/itsmemoria) (Quit: itsmemoria)
[09:14:25] *** jazzy2 is now known as jazzy
[09:15:16] *** Joins: pnoud (~pnoud@user/pnoud)
[09:15:35] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 265 seconds)
[09:15:46] *** Quits: dzz007 (~dzz007@user/dzz007) (Quit: The Lounge - https://thelounge.chat)
[09:16:22] *** Joins: dzz007 (~dzz007@user/dzz007)
[09:16:43] *** Quits: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net) (Ping timeout: 246 seconds)
[09:17:36] *** Quits: djapo (~archangel@99-149-186-203.lightspeed.hstntx.sbcglobal.net) (Quit: leaving)
[09:18:29] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[09:21:15] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[09:23:05] *** Joins: kafka (~kafka@2a01:4f9:c010:b32f::1)
[09:26:11] *** Parts: pyeverything (~mona@c-66-31-107-137.hsd1.ma.comcast.net) ()
[09:27:00] *** Quits: kafka (~kafka@2a01:4f9:c010:b32f::1) (Client Quit)
[09:27:10] *** Joins: kafka (~kafka@2a01:4f9:c010:b32f::1)
[09:29:16] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[09:29:23] *** Joins: zmt01 (~zmt00@user/zmt00)
[09:29:36] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Lost terminal)
[09:31:31] *** Joins: stranac (~stranac@195.29.239.126)
[09:32:16] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[09:33:17] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 252 seconds)
[09:33:37] *** Quits: kafka (~kafka@2a01:4f9:c010:b32f::1) (Changing host)
[09:33:37] *** Joins: kafka (~kafka@user/kafka)
[09:34:12] *** Quits: kafka (~kafka@user/kafka) (Quit: WeeChat 3.2)
[09:34:20] *** Joins: jhulten (jhulten@gateway/vpn/protonvpn/jhulten)
[09:34:21] *** Joins: kafka (~kafka@user/kafka)
[09:34:56] *** Quits: ______GOD______ (~GOD@user/god/x-9778998) (Quit: Turning off a portion of this simulation.)
[09:36:41] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[09:37:34] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 250 seconds)
[09:39:33] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[09:42:49] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[09:43:04] *** Quits: jhulten (jhulten@gateway/vpn/protonvpn/jhulten) (Remote host closed the connection)
[09:43:31] *** Joins: venmx (~bertie@host86-129-227-84.range86-129.btcentralplus.com)
[09:44:14] *** Quits: ionface (~ionface@user/ionface) (Read error: Connection reset by peer)
[09:45:10] *** Joins: ionface (~ionface@user/ionface)
[09:46:37] *** Joins: jhulten (jhulten@gateway/vpn/protonvpn/jhulten)
[09:47:26] *** Joins: jhulten_ (jhulten@gateway/vpn/protonvpn/jhulten)
[09:47:32] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 250 seconds)
[09:48:35] *** Quits: kafka (~kafka@user/kafka) (Quit: WeeChat 3.2)
[09:48:45] *** Joins: kafka (~kafka@user/kafka)
[09:50:22] *** Joins: upsala (~zcb@185.213.155.232)
[09:50:22] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[09:51:15] *** Quits: jhulten (jhulten@gateway/vpn/protonvpn/jhulten) (Ping timeout: 258 seconds)
[09:55:41] *** Quits: salpynx (~salpynx@121.73.84.248) (Quit: Connection closed)
[09:57:23] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[09:57:41] *** Joins: drctrl (~drctrl@user/drctrl)
[09:58:50] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[09:58:59] *** Quits: kafka (~kafka@user/kafka) (Quit: WeeChat 3.2)
[09:59:08] *** Joins: kafka (~kafka@user/kafka)
[09:59:42] *** Quits: Lando-HoloNet (~Lando@user/lando-spacepimp) (Ping timeout: 252 seconds)
[09:59:57] <jamea> how to declare this matrix in python: https://bpa.st/3FFA    ?
[10:01:07] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[10:01:47] *** Joins: dvx (~dvx@185.63.97.64)
[10:01:47] *** Quits: jhulten_ (jhulten@gateway/vpn/protonvpn/jhulten) (Remote host closed the connection)
[10:05:23] <themill> jamea: I assume you're going to do maths on this as the next step, so a numpy array makes sense: https://numpy.org/doc/stable/reference/arrays.ndarray.html
[10:06:49] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 265 seconds)
[10:06:49] *** Joins: ionface_ (~ionface@user/ionface)
[10:07:07] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 246 seconds)
[10:07:34] *** Quits: drctrl (~drctrl@user/drctrl) (Ping timeout: 246 seconds)
[10:09:14] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[10:10:03] <jamea> ok
[10:11:18] <jamea> themill: https://bpa.st/JERA
[10:11:23] <jamea> its ok?
[10:12:51] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[10:13:16] <themill> jamea: looks right (other than the 137 vs 117 typo)
[10:13:38] <themill> and 109 vs 320 ;)
[10:14:57] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:15:04] <jamea> RIGHT
[10:15:20] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[10:15:27] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:18:31] *** Joins: wei2912 (~wei2912@112.199.250.21)
[10:19:23] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[10:19:43] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 246 seconds)
[10:21:20] <jamea> how to loop in the array?
[10:21:27] <jamea> MATERIAL_NEED = np.array([[161, 157.48], [115,109], [60,109], [14,218], [1,195], [1,117]])
[10:22:00] *** Joins: control (guesswho@user/control)
[10:28:24] *** Quits: ionface_ (~ionface@user/ionface) (Quit: ionface_)
[10:28:34] *** Quits: mkellis (~Calibellu@68.235.43.92) (Ping timeout: 265 seconds)
[10:29:25] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[10:31:55] *** Joins: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[10:32:06] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Ping timeout: 264 seconds)
[10:33:25] *** Quits: zbe (~zbe@pleiades.zbe.bz) (Quit: So long..)
[10:33:33] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[10:33:39] *** Joins: mdemo (~mdemo@c-73-40-53-74.hsd1.va.comcast.net)
[10:33:46] *** Joins: zbe (~zbe@pleiades.zbe.bz)
[10:33:53] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[10:35:53] *** Joins: Julian (~tos9@host-87-6-132-212.retail.telecomitalia.it)
[10:36:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:38:19] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Remote host closed the connection)
[10:38:32] *** Joins: jhulten (jhulten@gateway/vpn/protonvpn/jhulten)
[10:39:24] *** Joins: fbiagent (~fbiagent@user/fbiagent)
[10:42:09] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[10:42:46] *** Joins: unyu (~pyon@user/pyon)
[10:43:26] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[10:44:18] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[10:45:25] *** very_sneaky_ is now known as very_sneaky
[10:45:35] *** Quits: DaNeenjah (~jake@adsl-74-230-9-207.hsv.bellsouth.net) (Quit: WeeChat 3.2)
[10:45:52] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[10:46:32] *** Joins: brumla (~brumla@178.77.217.196)
[10:46:41] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:47:19] *** Joins: seednode (~seednode@user/seednode)
[10:47:45] *** Quits: envex (~envex@cpe-173-91-189-33.neo.res.rr.com) ()
[10:48:38] *** Joins: audio (~audio@2603-8081-1800-0062-edd3-118e-4a86-1943.res6.spectrum.com)
[10:48:55] *** Quits: audio (~audio@2603-8081-1800-0062-edd3-118e-4a86-1943.res6.spectrum.com) (Remote host closed the connection)
[10:49:08] *** Joins: audio (~audio@2603-8081-1800-0062-edd3-118e-4a86-1943.res6.spectrum.com)
[10:49:31] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[10:50:30] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[10:50:56] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[10:52:43] *** Joins: gloomy (~ldorigo@2a02:a03f:679e:e700:718d:8beb:946b:9ee7)
[10:54:53] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[10:55:16] *** Quits: jamea (~jamea77@177.239.82.167) (Ping timeout: 258 seconds)
[10:56:01] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6c58-e4ed-b530-9372.res6.spectrum.com)
[10:56:54] *** Joins: kosh (~kosh@user/kosh)
[10:57:07] *** Joins: rendar (~rendar@user/rendar)
[10:57:26] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[10:58:36] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 244 seconds)
[10:59:52] *** Quits: zbr (~zbr@h.sbarnea.com) (Quit: The Lounge - https://thelounge.chat)
[11:01:53] *** Joins: Payam (~Payam@138.106.57.131)
[11:01:55] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[11:02:07] *** Joins: CombatVet (~c4@user/combatvet)
[11:02:17] *** Joins: zbr (~zbr@h.sbarnea.com)
[11:04:19] *** Quits: Payam (~Payam@138.106.57.131) (Client Quit)
[11:04:22] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[11:04:48] *** Quits: jhulten (jhulten@gateway/vpn/protonvpn/jhulten) (Remote host closed the connection)
[11:06:52] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[11:07:19] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 246 seconds)
[11:08:34] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 250 seconds)
[11:08:34] *** Quits: pagnol (~user@121.202.111.40) (Ping timeout: 250 seconds)
[11:09:16] *** Joins: IceMichael (~IceMichae@dynamic-046-114-153-046.46.114.pool.telefonica.de)
[11:09:20] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[11:10:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[11:11:04] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:e65a:97da:9e:dda9)
[11:11:17] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[11:13:54] *** Joins: doc (~doc@user/doc)
[11:14:59] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (Ping timeout: 265 seconds)
[11:15:30] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 250 seconds)
[11:16:29] *** Joins: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi)
[11:16:35] *** Joins: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3)
[11:17:42] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[11:17:58] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[11:18:12] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[11:18:28] *** Joins: pizdets (~pizdets@183.182.114.175)
[11:18:47] *** Joins: gusto (~Augustus@109.255.100.54)
[11:19:41] *** Joins: xormor (pamipetter@clairlair.xyz)
[11:19:50] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 250 seconds)
[11:21:29] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[11:22:46] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[11:23:47] *** Joins: palasso (~palasso@user/palasso)
[11:25:34] *** Quits: icy (~icy@user/icy) (Quit: ZNC 1.8.2 - https://znc.in)
[11:25:49] *** Joins: alguien (~alguien@user/alguien)
[11:26:20] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:26:34] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[11:27:14] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:28:29] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[11:30:26] *** Joins: LemurP (~lemurp@109.74.190.250)
[11:31:32] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 250 seconds)
[11:33:59] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.2)
[11:34:15] *** Joins: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[11:34:17] *** Joins: aniruddha (~aniruddha@103.242.197.215)
[11:37:32] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[11:38:30] *** Joins: K285 (~K285@2401:4900:4453:e0b1:4c5e:6e9a:258f:55c3)
[11:38:38] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[11:40:46] *** Joins: Doffi (~doffi@91.132.197.188)
[11:41:47] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[11:42:07] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[11:42:48] *** Quits: audio (~audio@2603-8081-1800-0062-edd3-118e-4a86-1943.res6.spectrum.com) (Ping timeout: 250 seconds)
[11:42:57] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:101:83e8:3086:926b)
[11:43:11] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[11:44:30] <Zweimer> x.itemClicked.connect(lambda: self.GUI_Actions.onTreeClicked_Tab())  << what is the purpose of the lambda in there? Why couldn't you do just: x.itemClicked.connect(self.GUI_Actions.onTreeClicked_Tab())
[11:44:44] *** Joins: manti7 (~manti7@176.10.104.94)
[11:45:03] *** Joins: gcbirzan (~gcbirzan@user/gcbirzan)
[11:45:27] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[11:46:02] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[11:46:03] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[11:47:37] *** Quits: tbcr (~tbcr@user/tbcr) (Read error: Connection reset by peer)
[11:48:08] *** Quits: knipster (~knipster@user/knipster) (Ping timeout: 268 seconds)
[11:48:32] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[11:50:15] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[11:50:17] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Quit: leaving)
[11:50:22] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 246 seconds)
[11:52:12] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[11:52:20] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 250 seconds)
[11:52:26] *** Quits: mossman93 (~quassel@user/mossman93) (Quit: No Ping reply in 180 seconds.)
[11:53:05] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-6c58-e4ed-b530-9372.res6.spectrum.com) (Read error: Connection reset by peer)
[11:53:44] <jinsun> Zweimer: in the latter you are calling the function right now, the lambda thing is more like x.itemClicked.connect(self.GUI_Actions.onTreeClicked_Tab)
[11:53:52] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 246 seconds)
[11:54:28] *** Joins: pagnol (~user@014198154145.ctinets.com)
[11:54:41] <Zweimer> jinsun, right. Why isn't your syntax used but instead the lambda?
[11:55:44] <jinsun> seems like useless lamda, the fuction could be passed directly instead of creating a lambda that calls the function
[11:56:16] *** Joins: Meteorhead (~Meteorhea@static-qvn-qvs-164225.business.bouyguestelecom.com)
[11:56:36] *** Joins: mossman93 (~quassel@user/mossman93)
[11:56:40] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[11:56:49] <Zweimer> Right. Thanks
[11:57:07] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[11:57:57] <jinsun> pylint even has a warning for it if I remember right
[11:58:15] *** Joins: twobitsprite (~twobitspr@107.13.51.62)
[11:58:56] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[11:59:37] <jinsun> https://pycodequ.al/docs/pylint-messages/w0108-unnecessary-lambda.html
[12:00:50] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[12:03:16] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[12:03:23] *** Joins: rememberYou (~someone@user/rememberyou)
[12:03:30] *** Joins: lbracher (~lbr@94.105.104.226.dyn.edpnet.net)
[12:03:50] *** Quits: kixx (~kixx@user/kixx) (Quit: Leaving)
[12:05:05] *** Quits: fluid (~fluiD@66.186.209.60) (Ping timeout: 252 seconds)
[12:05:25] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[12:05:39] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:06:12] *** Joins: fluiD (~fluiD@66.186.209.60)
[12:09:08] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi)
[12:09:16] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[12:09:52] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[12:09:55] *** Joins: skapata (~Skapata@user/skapata)
[12:10:13] *** Joins: colorado (~fluiD@66.186.209.60)
[12:10:35] *** Quits: fluiD (~fluiD@66.186.209.60) (Read error: Connection reset by peer)
[12:10:53] <Meteorhead> hello python! I'm a noob trying to write a web scraper to check for an array on a website, I'd like to check that my code can "tick" a checkbox whose id is 'condition' and then validate
[12:11:14] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[12:11:20] <Meteorhead> if anyone is brave or bored enough to check this piece of code and tell me if I'm right http://pastebin.fr/92567
[12:11:23] <Meteorhead> thanks a lot
[12:12:22] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:13:56] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 265 seconds)
[12:15:16] *** Joins: pnoud (~pnoud@user/pnoud)
[12:15:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:16:37] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 246 seconds)
[12:20:07] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 246 seconds)
[12:20:10] *** Joins: mexen (uid495612@user/mexen)
[12:20:21] <deniska> Meteorhead: the general advice is to check what kind of request is sent when you do it from a browser, using browser builtin developer tools
[12:20:25] *** Joins: chele (~chele@user/chele)
[12:24:54] <Meteorhead> deniska that's a very nice idea, thanks, I should see that with developer tools from chrome normally
[12:26:53] *** Joins: icy (~icy@user/icy)
[12:26:59] *** Quits: mrkz_c (uid503554@user/mrkz-c/x-7247691) (Quit: Connection closed for inactivity)
[12:27:50] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:30:26] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[12:31:07] *** Joins: securethemews (~securethe@2a00:23c4:1e98:ef00::4)
[12:32:13] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:34:39] *** Joins: Norore (~weechat@2a01:e0a:23a:5600:b9d3:ae19:12de:25b)
[12:34:48] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[12:35:10] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[12:36:00] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[12:36:09] <Meteorhead> deniska you're right, I found this: condition=on&nextButton=Book+a+demande+date so I guess the code is correct :D
[12:36:39] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[12:36:58] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:37:50] *** Joins: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:c010:785d:cf73:42e0)
[12:38:49] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:39:21] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:39:37] <deniska> Meteorhead: you should probably use spaces, not pluses
[12:40:01] <deniska> Meteorhead: urlencoding replaces spaces with pluses, it will also replace pluses with something else entirely
[12:40:15] <deniska> and requests does the url encoding for you
[12:41:18] *** Quits: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi) (Quit: brylie)
[12:42:18] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[12:43:14] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[12:43:53] *** Joins: mcope (~matt@user/mcope)
[12:44:23] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 265 seconds)
[12:45:05] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:45:23] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:46:43] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 246 seconds)
[12:47:25] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[12:48:04] *** Joins: varaindemian (~varaindem@86.124.78.162)
[12:48:10] *** Joins: c10l (~c10l@89.34.167.207)
[12:49:31] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 246 seconds)
[12:50:11] *** Quits: twobitsprite (~twobitspr@107.13.51.62) (Ping timeout: 265 seconds)
[12:50:40] *** Quits: Julian (~tos9@host-87-6-132-212.retail.telecomitalia.it) (Ping timeout: 265 seconds)
[12:50:45] *** Quits: securethemews (~securethe@2a00:23c4:1e98:ef00::4) (Remote host closed the connection)
[12:51:44] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:51:45] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[12:52:29] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:bbfc:1ba1:ffb3:62a)
[12:54:18] *** Quits: ncb (~ncb@user/ncb) (Ping timeout: 264 seconds)
[12:54:19] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[12:55:08] *** Joins: zandq (~Thunderbi@112.19.169.147)
[12:55:25] *** Joins: ncb (~ncb@user/ncb)
[12:56:20] *** Quits: tims (~tims@193-82-247-42.tpgi.com.au) (Quit: WeeChat 3.2)
[12:56:24] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[12:56:26] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 252 seconds)
[12:57:29] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[12:58:24] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:59:19] *** Quits: zandq (~Thunderbi@112.19.169.147) (Ping timeout: 246 seconds)
[13:00:07] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[13:00:34] *** Quits: OPK (~OPK@user/opk) (Read error: Connection reset by peer)
[13:00:36] *** Joins: tims (~tims@193-82-247-42.tpgi.com.au)
[13:02:05] *** Joins: Julian (~tos9@host-87-6-132-212.retail.telecomitalia.it)
[13:02:07] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 246 seconds)
[13:02:15] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[13:02:55] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[13:03:54] *** Joins: drctrl (~drctrl@user/drctrl)
[13:04:55] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[13:04:56] *** Quits: drctrl (~drctrl@user/drctrl) (Client Quit)
[13:05:16] *** Quits: gloomy (~ldorigo@2a02:a03f:679e:e700:718d:8beb:946b:9ee7) (Ping timeout: 246 seconds)
[13:06:04] *** Joins: tpnsvo (~tpnsvo@2a00:1028:8d1d:75ee:18bf:1e8:e372:d421)
[13:06:16] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[13:07:17] <tpnsvo> Hi guys, I need some help installing python from commandline/powersell in windows server. Anybody can help?
[13:08:27] *** Quits: mcglk (~mcglk@131.191.49.120) (Read error: Connection reset by peer)
[13:09:07] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 246 seconds)
[13:10:58] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[13:11:23] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[13:11:40] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[13:14:30] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[13:15:11] *** Quits: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl) (Quit: ZNC 1.8.2 - https://znc.in)
[13:15:32] *** Quits: neibo (~neibo@52.red-88-10-1.dynamicip.rima-tde.net) (Ping timeout: 250 seconds)
[13:15:43] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[13:15:46] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 246 seconds)
[13:16:00] *** Joins: kosh (~kosh@user/kosh)
[13:16:07] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 246 seconds)
[13:16:31] <Meteorhead> deniska
[13:16:41] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[13:16:45] <Meteorhead> thanks a lot for the tip, much appreciated for a noob :D
[13:17:01] *** Joins: slavfox (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[13:19:33] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:20:14] *** Joins: GiLgAmEzH (~gilgamezh@186.19.69.139)
[13:21:19] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 258 seconds)
[13:21:33] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi)
[13:21:50] *** Joins: SparkleKraken (~SparkleKr@97e407ec.skybroadband.com)
[13:22:10] *** Quits: enkrypt (~enkrypt@user/enkrypt) (Quit: WeeChat 2.8)
[13:22:14] *** Joins: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl)
[13:22:40] <flower_> does a function in python needs a return statement?
[13:22:46] *** Quits: wei2912 (~wei2912@112.199.250.21) (Ping timeout: 246 seconds)
[13:22:54] *** Quits: control (guesswho@user/control) (Ping timeout: 250 seconds)
[13:23:18] <Repiphany> A function without a return statement returns None
[13:23:28] <susam> flower_: No, it doesn't. In that case it automatically returns None.
[13:23:46] <flower_> ok
[13:24:01] <flower_> is it a proper thing to do anyway?
[13:24:16] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[13:24:26] <susam> flower_: Depends. Some functions may have side-effects but may not need to return anything. In such cases, it is certainly fine not to return anything.
[13:24:38] <flower_> ok
[13:24:53] *** Quits: sveinse (~sveinse@7.92-221-150.customer.lyse.net) (Quit: Lost terminal)
[13:25:34] <susam> flower_: In fact, you know such a function already. It is the print() function. The print() function has the side effect of printing something on the standard output (default behaviour) but it returns nothing explicitly, so it ends up returning None.
[13:25:48] <susam> flower_: Try this: print(print('hello'))
[13:26:18] <flower_> what is a good follow up book after 'beyond the the basic stuff'?
[13:26:29] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[13:26:36] <susam> Or alternatively, this clearer example: ret = print('hello'); print(ret)
[13:27:05] <flower_> susam, I see
[13:27:06] <susam> flower_: I don't really know. I never studied a Python book. The Python official tutorial and library reference is all I have ever needed.
[13:27:38] <tpnsvo> Hi guys, I need some help installing python from commandline/powersell in windows server. Anybody can help?
[13:28:42] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[13:29:12] *** Joins: OPK (~OPK@user/opk)
[13:29:21] <susam> tpnsvo: I am not a Windows person and since nobody else seems to be responding, let me take a shot. Are CMD prompt and Powershell the only things you have? Do you have a package manager like Chocolatey, NuGet, etc.?
[13:29:33] *** Quits: varaindemian (~varaindem@86.124.78.162) (Quit: Client closed)
[13:29:33] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:30:25] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[13:30:38] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:31:03] *** Joins: mcglk (~mcglk@131.191.49.120)
[13:31:16] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[13:31:22] <susam> tpnsvo: Looks like there is a way to run the Python installer silently. See this section: https://docs.python.org/3/using/windows.html#installing-without-ui
[13:32:15] <tpnsvo> susam: No package manager at this point.
[13:32:36] <tpnsvo> susam: I know about that option. I am running python_installer.exe /passive unnatended.xml
[13:32:45] <enyc> susam: I wonder about cnonverntions around exceptions and when things have to be 'checked' / tested for  etc etc
[13:32:52] <tpnsvo> The problem is the installer returns nearly immediately, no error, no debug... does nothing. :/
[13:33:02] <enyc> susam: that was always a fun matter in Java, I suspect python less strict
[13:34:39] <susam> tpnsvo: Again, can't help much because I don't use Windows these days. But from my old days of Windows usage, I remember many tools including installer write something to the event logs. That is Win + R, eventvwr.msc, and check the various system logs, application logs, etc. to see if any error comes up there when your installer seems to quit without doing much.
[13:34:52] <deniska> enyc: python doesn't have checked exceptions like java
[13:35:22] <enyc> deniska: ok so that fits my model of being less strict
[13:35:22] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 246 seconds)
[13:35:26] <susam> enyc: Yes, it is indeed quite loose in Python. The caller code writer needs to read the docs of what they are calling and see if any exceptions are documented and catch them if required.
[13:35:52] <enyc> susam: and if they don't catch them  .. in what circumstances warninn,g in what circumstances fail/crash/etc ?
[13:36:05] <susam> enyc: I think a lot of it is on an honour basis. We have to hope that the piece of code we are depending on has been written by someone who was careful enough to document the possible exceptions.
[13:36:56] *** Quits: b2xiao (~b2xiao@wikipedia/nneonneo) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:37:25] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[13:37:29] <susam> enyc: If the exceptions are not caught, of course the program is going to crash. Or if it is using multiprocessing, the specific process is going to crash. For long running daemon or daemon-like processes this can be a risk. So what I usually do is wrap the main function or top-level loop or whatever into a catch-call kind of try-except to ensure that the process never crashes.
[13:37:57] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[13:38:34] <supakeen> For me I usually prefer the init system to restart my daemon if it crashes.
[13:39:09] <susam> supakeen: Yes, that too. Depends on the problem, I would say. Sometimes it is okay for the process to just die and let systemctl or whatever init system there is to restart it.
[13:39:26] *** Joins: entuland (~entuland@user/entuland)
[13:40:19] <deniska> susam: I once had a costly experience with "restart if crashed" behavior :)
[13:40:31] <tpnsvo> susam: thanks. :) Not much windows user either. that might help. Thanks.
[13:42:01] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 246 seconds)
[13:42:18] <deniska> The crash was in a sports betting automation code, somewhere between placing a bet, and marking bet as placed in my database: https://i.imgur.com/RyURL8b.png
[13:42:27] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:42:51] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.2)
[13:44:02] <susam> deniska: Haha. Interesting story. Debugging stories are always fun.
[13:44:48] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Ping timeout: 265 seconds)
[13:45:59] <susam> These days I code as defensively as possible for critical systems on which business depends on. Put a try-except wherever there could be an error. Always capture the full stack trace in the logs (helps in debugging later). But I follow the exact opposite approach in my own personal tools created during hobby time. Very little exception handling in them. So what if it crashes? I can open the script or the
[13:46:05] <susam> input to it and fix it myself.
[13:46:06] <enyc> susam: interesing, sueful for when I start to deal with daemons and exteninos to mitmproxy nad otherwise, thankyou
[13:46:12] *** Joins: stdedos (~Guest10@user/stdedos)
[13:46:30] <stdedos> Hello there! Does someone know _why_ I am given the following warning "This search is broken in 1.3 and earlier, and will be fixed in a future version.  If you rely on the current behaviour, change it to './/Article/Journal/Title'" https://stackoverflow.com/a/9489251
[13:46:39] <stdedos> I am at best a yellow-belt xml/xpathist, and I don't get the difference, since source code comments say `Same as getroot().findall(path)`
[13:49:22] <susam> stdedos: Looks like an honest acknowledgement of a bug to me. If it is a bug, it is a bug. Will be fixed later.
[13:50:22] *** Joins: enkrypt (~enkrypt@user/enkrypt)
[13:50:59] *** Joins: filePeter (~filePeter@user/filepeter)
[13:51:09] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[13:52:32] <filePeter> Is there a way to locally install packages with pip? Or is all installed globally? Personally I often use pipenv locally, but apparently I’m on a system where my colleagues have installed packages seemingly “globally” on a ubuntu machine…
[13:52:32] <stdedos> Yes, but, "What is the problem"? 😕 A bug that's active "at least" 9 years ago, does not sound like a bug anymore
[13:54:18] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[13:54:31] <susam> stdedos: Yes, no idea. What I usually do in such cases is dive into the source code, see where the error message is coming from and what the hack is going on there. Especially easy in Python because I can just print(xml.etree.__file__), go to the file and start reading the source.
[13:54:44] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Ping timeout: 252 seconds)
[13:55:11] <susam> filePeter: You can create a virtual Python environment and install packages with pip into your virtual Python environment. Is that what you are looking for?
[13:55:12] <tpnsvo> filePeter: How about using virtual environment? Best to use local, or personalized packages. (including when you need contradicting packages)
[13:55:19] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 246 seconds)
[13:55:21] <stdedos> I have https://lxml.de/api/xml.etree.ElementTree-pysrc.html (or some version of it)
[13:55:37] *** Joins: Hackerpcs (~user@user/hackerpcs)
[13:55:46] <susam> s/hack/heck/ but could as well be interpreted as a pun :)
[13:56:33] *** Quits: enkrypt (~enkrypt@user/enkrypt) (Quit: WeeChat 3.0)
[13:56:48] <filePeter> susam, tpnsvo: Yes Thank you! My question should have been: “Would there have been a way for my colleagues to not mess the whole system up by using a venv in the first place? Or are there athore constraints I do not know of?”
[13:56:53] *** Joins: enkrypt (~enkrypt@user/enkrypt)
[13:57:00] *** Quits: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6) (Quit: WeeChat 3.1)
[13:57:10] *** Quits: iauc (~iauc@cm-84.209.101.110.getinternet.no) (Ping timeout: 246 seconds)
[13:57:14] <filePeter> s/athore/other/g
[13:57:38] <susam> filePeter: As a matter of best practice, I usually never ever install anything to global. I keep the global package paths clean. Off the top of my head: python3 -m venv ~/.venv/newproject; . ~/.venv/newproject/bin/activate; pip3 install stuff
[13:57:40] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[13:57:59] <tpnsvo> filePeter: Venv is so isolated that they can cause no harm when interacting with python. But it can be tricky to do some things. (e.g. let Visual Studio Code run debugging in your venv...)
[13:58:16] <susam> filePeter: Official documentation here: https://docs.python.org/3/tutorial/venv.html but essentially you need those three commands I shared in my previous message.
[13:58:43] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[13:58:45] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[13:59:04] <filePeter> susam: Yes, thank you. I often use pipenv, which is also quite nice. ;-)
[13:59:06] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[13:59:41] <filePeter> I guess my takeaway is, to not let my colleagues install globally. ;-)
[13:59:49] <filePeter> thanks tpnsvo and susam
[13:59:52] *** Joins: Santzes (~Santzes@2400:8901::f03c:92ff:fe49:47a6)
[13:59:59] <susam> filePeter: Saw your updated question. Yes, I think your colleagues might not be caring about tidyness. I agree with your sentiment that global should be kept clean.
[14:00:07] <raek> filePeter: also note that installing packages using pip outside a venv can either install them for all user (--system) or for only the current user (--user). but definitely use venvs if you can
[14:00:19] *** Quits: stdedos (~Guest10@user/stdedos) (Quit: Client closed)
[14:01:58] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 246 seconds)
[14:02:36] <filePeter> raek: I see…
[14:03:56] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[14:05:39] <filePeter> Is there perhaps a way to install the system default module of my distribution rather than the pip one? Maybe distinguish by path or something?
[14:06:52] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 246 seconds)
[14:06:56] <susam> filePeter: Depends on the system, I guess. For example, Debian, Ubuntu, etc. offer a lot of python packages as part of their apt-get repos. You can apt-get install them.
[14:06:56] *** Quits: LemurP (~lemurp@109.74.190.250) (Ping timeout: 258 seconds)
[14:07:36] <susam> filePeter: And yes they go into different paths. The ones you get the from distribution's official repo go into dist-packages. The other ones go into site-packages.
[14:07:43] *** Joins: Ergo^ (~ergo@91.238.59.144)
[14:08:39] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[14:08:44] <filePeter> susam: Ok, nice. So since my colleages have a faulty pandas installd, I have problems importing the pandas from python3-pandas (ubuntu)…
[14:09:39] <rendar> let's say after some calculations, i get 0.9500000000000001, which is not a perfect float (due to precision errors of the float format). Is there a way to clamp that error, and get a float which is nearer the real 0.95 ?
[14:10:25] <susam> filePeter: Yes, this stuff really bothers me. At work, I will work through all these version mismatch and resolve it myself. I am paid to do that. But I also use Python for fun and this stuff really kills the fun. I am getting older and have less time to tinker these days, so it would be nice if things just work and don't quit and crash due to conflicting versions.
[14:10:58] *** Joins: mborus (~mborus@2001:16b8:6f85:b200:cd48:480b:a0f1:6e66)
[14:11:57] <filePeter> susam: Yeah. Yet, I am not very keen on fixing the whole system now.
[14:12:02] <filePeter> Anyway, thanks all.
[14:12:23] <susam> filePeter: You are welcome!
[14:14:42] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[14:15:46] <jinsun> rendar: if it is just for display you can just format it with 2 digits after decimal, f"{x:.2f}", for comparisons it is better to just use math.isclose(0.95, x), and for other calculations just leave it as it is you cannot fix the error
[14:16:07] *** Joins: pnoud (~pnoud@user/pnoud)
[14:16:41] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[14:16:47] *** gline_ is now known as gline
[14:17:12] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[14:17:33] *** Quits: tm007 (uid287041@id-287041.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[14:17:53] <rendar> it's not for display
[14:18:24] *** Joins: iauc (~iauc@2a02:2121:308:c9e3:a6b1:c1ff:fed7:afa)
[14:20:05] *** Quits: venmx (~bertie@host86-129-227-84.range86-129.btcentralplus.com) (Ping timeout: 265 seconds)
[14:20:29] <susam> rendar: I guess the problem is how would we differentiate between when it is indeed an error and when it is not.
[14:21:03] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[14:21:08] *** Joins: gloomy (~ldorigo@2a02:a03f:679e:e700:718d:8beb:946b:9ee7)
[14:21:32] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[14:21:37] *** __jmcantrell__ is now known as jmcantrell
[14:22:46] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi)
[14:23:12] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[14:25:44] <tpnsvo> rendar: I guess this is the closest number to your exact value. There is now way how to code a number closer to your requested. (except using another type, but only numpy could help with that.)
[14:26:14] <tpnsvo> Anyway floats will never have exact precission. Floats still represent discrete numbers with predefined values.
[14:26:34] *** Quits: iauc (~iauc@2a02:2121:308:c9e3:a6b1:c1ff:fed7:afa) (Quit: Client closed)
[14:26:52] *** Quits: Julian (~tos9@host-87-6-132-212.retail.telecomitalia.it) (Ping timeout: 258 seconds)
[14:27:49] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[14:28:03] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:30:57] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[14:31:00] *** Joins: anas (~anas@196.224.51.199)
[14:33:33] *** Joins: m_tadeu (~quassel@bl14-187-233.dsl.telepac.pt)
[14:34:15] *** Quits: pagnol (~user@014198154145.ctinets.com) (Remote host closed the connection)
[14:35:47] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[14:36:10] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[14:37:56] <nedbat> rendar: there isn't another float that is closer to the real 0.95
[14:38:06] <rendar> nedbat: yeah, indeed
[14:38:10] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[14:38:57] <rendar> nedbat: but i noticed that sometimes float errors will accumulate, between various operations, for the graphic things i reset that error accumulation with aligning, e.g. i align to 0.5 pixels which is fine by me
[14:39:08] *** Joins: r3d2 (~r3d2@user/r2d2)
[14:41:00] <nedbat> rendar: yes, you have to be careful.  don't add up lots of floats if there's a better way to get the answer you need
[14:41:38] <rendar> nedbat: yeah.. but sometimes you have big formulas to do, with a lot of operations...
[14:42:11] <nedbat> rendar: you can be clever about how you do the arithmetic to reduce the errors
[14:42:24] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[14:42:37] <nedbat> rendar: for example: https://en.wikipedia.org/wiki/Kahan_summation_algorithm
[14:43:07] *** Joins: Naan (~naan@user/naan)
[14:44:25] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[14:44:36] *** Joins: ponadm (pony@gateway/vpn/protonvpn/ponadm)
[14:46:12] *** Joins: stdedos (~stdedos@user/stdedos)
[14:46:33] *** Joins: vapour (vapour@eris.noname-ev.de)
[14:47:04] <stdedos> Hello there! Is `__doc__ = "a"` assignment at the top of the module "equivalent" to a docstring (i.e. plain `"a"`)?
[14:48:05] <nedbat> stdedos: yes
[14:48:29] <stdedos> Cool, because pylint seems to complain about it
[14:48:38] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[14:48:44] <nedbat> stdedos: why are you making the docstring that way?
[14:48:51] *** Joins: veek (~veek@117.192.21.179)
[14:49:44] <stdedos> It's a useful trick (I think) to be able to easily overload `argparser`s description DRY
[14:50:48] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[14:50:57] <rendar> nedbat: uhm, are you saying that the most troubled thing is multiple summations of floats? e.g. + and - operations?
[14:51:21] <nedbat> rendar: i don't know if that is the most troubled, that's just the algorithm i knew of
[14:51:32] *** Joins: wattux (~wattux@212.51.23.106)
[14:51:33] <rendar> yeah, i heard of that, thanks
[14:52:56] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[14:54:31] <stdedos> I had too old pylint 😕 pip is great, except updates ...
[14:55:22] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[14:55:31] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 246 seconds)
[14:56:42] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:58:04] *** Quits: aniruddha (~aniruddha@103.242.197.215) (Quit: WeeChat 1.9.1)
[14:58:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[14:58:52] *** Quits: tpnsvo (~tpnsvo@2a00:1028:8d1d:75ee:18bf:1e8:e372:d421) (Quit: Leaving)
[14:59:43] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 246 seconds)
[14:59:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:00:32] <The-Compiler> stdedos: I don't follow - can't you just use a normal docstring and access that via __doc__? Why do you need to assign to __doc__ manually for argparse?
[15:00:59] *** Quits: SparkleKraken (~SparkleKr@97e407ec.skybroadband.com) (Quit: Leaving)
[15:01:04] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 268 seconds)
[15:01:19] <stdedos> I don't know (neither have I checked honestly) if I can "normally" define a docstring (i.e. no `__doc__ = `)
[15:01:55] <stdedos> But it looked weird for me: how would I `description=__doc__`, when "`__doc__` has not been defined anywhere"?
[15:02:18] <The-Compiler> stdedos: use an ordinary docstring (usally """Using triple quotes.""") and then use __doc__ to read it
[15:02:39] *** Joins: venmx (~bertie@82-132-228-50.dab.02.net)
[15:02:53] <The-Compiler> stdedos: that's why it has the double underlines at the beginning/end, to signify that it's something built-in and kind of magic - similar to e.g. __file__ or __name__
[15:03:04] *** Joins: varaindemian (~varaindem@86.124.78.162)
[15:03:09] <bjs> stdedos: it has been defined, by the docstring at the top
[15:03:18] <stdedos> I don't know how far that double magic stretches :-D
[15:03:22] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:03:49] <stdedos> I'll try that when I dig that part of code when I devised this little piece of code (or write a new template again)
[15:03:54] <stdedos> Thank you all :-D
[15:04:36] *** Joins: upsala1 (~zcb@193.32.249.132)
[15:04:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 246 seconds)
[15:05:01] *** Joins: noneco (~noneco@dslb-090-186-083-254.090.186.pools.vodafone-ip.de)
[15:05:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:06:47] *** Joins: JimMadge (~jim@host86-141-21-184.range86-141.btcentralplus.com)
[15:07:38] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[15:07:51] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[15:07:56] *** Quits: upsala (~zcb@185.213.155.232) (Ping timeout: 265 seconds)
[15:08:04] *** Quits: stdedos (~stdedos@user/stdedos) (Quit: Client closed)
[15:08:10] *** Joins: Crassus (~Crassus@user/crassus)
[15:08:42] *** s0urSt0ff is now known as PixelStuffer
[15:09:37] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:10:38] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:11:18] <graingert> How do I split a path fragment into path segments?
[15:11:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:12:29] *** Quits: venmx (~bertie@82-132-228-50.dab.02.net) (Read error: Connection reset by peer)
[15:13:24] *** Joins: IHasFinger (~JJ_@2a02:c7f:fc54:ba00:e1bc:35e8:cc1d:c226)
[15:14:38] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[15:14:42] *** Quits: veek (~veek@117.192.21.179) (Ping timeout: 265 seconds)
[15:15:52] <jor> graingert: pathlib? e.g. PurePath('foo/bar').parts
[15:17:06] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:17:18] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:22:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:22:45] <varaindemian> trying to use `subprocess.run("chromium-browser")` but I get `FileNotFoundError: [Errno 2] No such file or directory: 'chromium-browser': 'chromium-browser'`
[15:23:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:23:08] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:23:23] <varaindemian> I am using this command iside a simple Flask app
[15:25:52] *** Joins: vladoski (~vladoski@93-36-221-58.ip62.fastwebnet.it)
[15:28:12] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[15:28:14] *** Joins: a6a45081-2b83 (~aditya@122.163.197.78)
[15:28:42] *** Joins: doko (~doko@2a02:8106:1a:7600:11f2:110c:e9cf:cc2c)
[15:30:16] *** Quits: vladoski (~vladoski@93-36-221-58.ip62.fastwebnet.it) (Client Quit)
[15:31:34] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 246 seconds)
[15:33:04] <tims> varaindemian: You need to supply the full path to the executable, not just the file name
[15:33:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[15:34:23] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:34:56] <rendar> math.modf(1.000000025) is 2.500000007010783e-08 which is not what i expected: 2.5e-08, indeed, if i have 0.000000025instead of 1.000000025 my computation works, otherwise it isn't :( there is a way to fix this? what is the more precise?
[15:35:00] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:36:18] <varaindemian> tims what would be the full path in my case?
[15:36:22] *** Quits: derelict (~derelict@user/derelict) (Ping timeout: 250 seconds)
[15:36:33] <bjs> rendar: all of your questions have basically been "floating points are inaccurate".  Either you have to live with the loss of precision and accuracy due to floats,  or not use floats. The output of modf() there seems pretty much exactly what I expected
[15:37:10] <bjs> (note: there _is no_ float that is exactly 0.000000025, so the modf answer will always have to be approximate for that)
[15:37:18] *** Quits: a6a45081-2b83 (~aditya@122.163.197.78) (Quit: Konversation terminated!)
[15:37:34] <rendar> and 2.500000007010783e-08  is more accurate than 2.5e-08
[15:37:36] *** Quits: upsala1 (~zcb@193.32.249.132) (Quit: WeeChat 3.2)
[15:37:59] *** Joins: LemurP (~lemurp@109.74.190.250)
[15:38:23] *** Joins: upsala (~zcb@193.32.249.132)
[15:38:28] <bjs> rendar: 2.5e-08 is not a float that actually exists.  There may be a float that is closer to the 'actual' mathematicial value of the expression "2.5e-08" but there is no float that is exactly that value
[15:38:33] <tims> varaindemian: what operating system? On linux, Posix `which chromium-browser` would give you the full path
[15:39:03] <varaindemian> tims testing this on linux right now
[15:39:38] <rendar> bjs: yes, that's clear, the problem is that i have to check if those numbers are aligned to a "grid"
[15:39:49] <rendar> and 2.500000007010783e-08 can't be aligned :(
[15:39:50] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[15:39:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[15:40:06] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[15:40:15] <rendar> https://bpa.st/HSBQ this is the function i use
[15:40:18] <nedbat> rendar: where did that float come from?
[15:40:18] <bjs> rendar: well I mean, the answer is no your number is not aligned because it's a float and it's got errors
[15:40:24] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:40:45] <rendar> nedbat: input is "1.000000025"
[15:40:46] <bjs> rendar: do you really need to use floats?  or do you really care if it's _exactly_ aligned to the grid
[15:40:53] <nedbat> rendar: often the answer to these problems is to avoid floats entirely.
[15:40:59] <tims> varaindemian: you can use the shell=True option which will run your command in the current shell (and hence locate the executable via the current PATH). However, this can potentially be a source of command injection so use with care.
[15:41:04] <nedbat> rendar: who is providing that input? What does it mean?
[15:41:19] <rendar> nedbat: i can't unfortunately, because that input i write it manually, but it doesn't come from strings
[15:41:23] <rendar> but from other computations
[15:41:37] <nedbat> rendar: you type that number in?
[15:41:39] <varaindemian> tims not interested about the security risks at this point of development. thanks for letting me know.
[15:41:41] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:41:44] <jmcantrell> I'm trying out mypy and getting an error when using zip, even though the code runs. code: https://paste.rs/nGJ, error: https://paste.rs/POU
[15:41:50] <varaindemian> tims I got `FileNotFoundError: [Errno 2] No such file or directory: '/usr/bin/chromium-browser': '/usr/bin/chromium-browser'`
[15:42:07] <rendar> nedbat: to debug my functions yes, but when i'm done with that, i will use those functions in computations where numbers are computed, and not written manually
[15:42:36] <nedbat> rendar: can you change how they are computed? Perhaps you should use decimal.Decimal's instead of floats.
[15:42:37] *** Joins: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net)
[15:43:04] <tims> varaindemian: the first argument is a list BTW, unless shell=True is set
[15:43:05] <rendar> nedbat: i will check into that, maybe that's the final solution for all of these problems
[15:43:08] <jinsun> jmcantrell: use https://mypy-play.net/ for mypy questions, it is nicer
[15:43:19] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 272 seconds)
[15:43:20] <jmcantrell> jinsun: thanks
[15:43:39] <bjs> jmcantrell: the problem is that the things inside your list have different t ypes
[15:43:51] <bjs> so mypy is inferring List[object]
[15:44:06] <bjs> so zip(*a_List[object]) => zip(an_object, an_object, an_object)  which is invalid
[15:44:33] <jmcantrell> bjs: ah, thanks
[15:44:33] <varaindemian> I am not sure how to use shell=True
[15:44:41] <varaindemian> tims^
[15:44:45] <varaindemian> tims ^
[15:44:59] <varaindemian> tims also running it inside a Docker
[15:45:16] <tims> varaindemian: subprocess.run("/usr/bin/chromium-browser", shell=True)
[15:45:20] *** Joins: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044)
[15:45:28] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:45:29] <varaindemian> tims https://pastebin.com/v34Eunds
[15:45:31] <The-Compiler> tims, varaindemian: No need for shell=True with the full path
[15:45:48] <bjs> jmcantrell: typically with these type checkers they want lists to contain the same type. if you used `stuff = [[1,2],[3,4]]` it should work
[15:46:06] <The-Compiler> tims, varaindemian: And to find the path there's shutil.which, no need for a shell for just that either :)
[15:46:12] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[15:46:27] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:46:31] <bjs> jmcantrell: you can probably go `stuff: List[Union[List[int], List[str]]] = ...` but these kinds of types turn out to be challenging to work with
[15:46:31] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Quit: If dreams are like movies, then memories are films about ghosts.)
[15:46:37] <The-Compiler> varaindemian: is Chromium installed inside your Docker container?
[15:46:47] <jmcantrell> bjs: it's kind of a bummer for what i'm trying to do, but i understand
[15:46:58] *** Quits: rama (~rama@c-24-130-92-222.hsd1.ca.comcast.net) (Ping timeout: 246 seconds)
[15:47:02] <varaindemian> The-Compiler it is not
[15:47:15] <bjs> jmcantrell: it's because lists are mutable so it's generally not safe to pass around lists of multiple types to functions that don't expect exactly what you give it
[15:47:16] <The-Compiler> varaindemian: if it's not installed, you won't be able to run it :) What's your goal?
[15:47:28] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:47:39] <jmcantrell> bjs: yeah, that makes sense
[15:47:46] *** Quits: dx3 (~dx3@bras-base-qubcpq1306w-grc-20-184-145-221-62.dsl.bell.ca) (Ping timeout: 244 seconds)
[15:48:21] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[15:48:36] <rendar> the thing i can't get is: https://bpa.st/GFSQ <- if i manually write 0.000000025, shouldn't python set my variable to the closest value for that? why modf() returns me a "closer" float for that? who is wrong? python assigning that variable or modf()? check the code
[15:49:58] <rendar> nevermind, i got that: math.modf(0.000000025)=2.5e-08 but math.modf(1.000000025)=2.500000007010783e-08
[15:50:04] <rendar> unbelievable!
[15:50:58] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Ping timeout: 252 seconds)
[15:51:18] *** Joins: brickfat (~brickfat@user/brickfat)
[15:51:35] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[15:51:51] <bjs> rendar: yes if you write it manually the float Python produces is the closest float to the value you wrote
[15:52:09] *** Joins: derelict (~derelict@user/derelict)
[15:52:15] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[15:52:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:53:14] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:53:48] <bjs> rendar: it prints False because a%b is not 0, and math.isclose(a%b, b) is False
[15:54:11] <rendar> yes
[15:54:13] <bjs> note a%b where a and b are floats that are very close to each other is likely to be a very meaningless result
[15:54:27] <rendar> well, i guess the solution could also be decimal.Decimal(str(my_float))
[15:54:54] *** Joins: ntdll (~ntdll@user/ntdll)
[15:55:02] <bjs> rendar: I mean that's the same as just having the float
[15:55:15] <nedbat> rendar: you can't make a decimal from a float.
[15:55:19] <Repiphany> You need to define the decimal from the exact string representation
[15:55:22] <nedbat> rendar: or, you can, but it doesn't help
[15:55:39] <rendar> bjs: no! converting floats to strings will reduce noise! i can chose the printing resolution
[15:55:48] <rendar> nedbat: uhm, ok
[15:56:07] <bjs> rendar: I mean when you come to print the floats out you can decide how to print them, you don't need decimal for that
[15:56:13] <nedbat> rendar: Decimal(2.500000007010783e-08) will keep all that fuzz at the end.  Decimal doesn't know what you wanted the float to be
[15:56:15] <bjs> but it won't fix this code
[15:57:04] <rendar> nedbat: yep but if i print 2.500000007010783e-08 into 2.5e-08, like the string library does, and then i pass that "2.5e-08" to decimal, basically i have clamped out error noise.. no?
[15:57:20] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[15:57:34] <nedbat> rendar: yes, but it would be better to do your computations in the way you need instead of guessing like that
[15:57:48] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[15:57:58] *** Quits: palasso (~palasso@user/palasso) (Read error: Connection reset by peer)
[15:58:10] <rendar> ok, good point
[15:58:31] <bjs> rendar: maybe you just want to check if it's close enough to the grid. `return math.isclose(a % b, 0, abs_tol=0.0001) or math.isclose(a % b, a)`
[15:58:36] <rendar> my main problem is that i cannot say if a float is aligned to some grid
[15:58:51] <rendar> bjs: that won't work
[15:58:56] <bjs> rendar: why?
[15:59:02] <rendar> bjs: check this out
[15:59:08] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:59:20] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[15:59:21] <rendar> 1.75%0.025 should return 0.0, instead
[15:59:21] <rendar> 	# it returns 0.02499999... beacuse 0.025 can't be exactly
[15:59:21] <rendar> 	# represented by floats.
[15:59:34] *** Quits: OPK (~OPK@user/opk) (Ping timeout: 246 seconds)
[15:59:38] <rendar> bjs: the result of % won't be closer to 0!
[15:59:47] *** Quits: fflam (~mdt@pool-96-253-99-54.rcmdva.fios.verizon.net) (Quit: WeeChat 3.2)
[16:00:30] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[16:00:51] <bjs> rendar: yes I know, wasn't I the one who explained how that works and why it happens to you?
[16:00:57] <rendar> yep
[16:01:04] <bjs> oops my expression means to say `math.isclose(a % b, b)`
[16:01:09] <bjs> obviously :)
[16:01:11] <rendar> bjs: so that math.isclose() to check if the result is close to zero, is useless
[16:01:16] <bjs> rendar: why?
[16:01:27] <rendar> because 1.75%0.025=0.02499999 !
[16:01:36] <rendar> that's not close to 0.0
[16:01:47] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[16:02:00] <bjs> rendar: yes for these two floats you get very close to the maximum
[16:02:20] <rendar> indeed, math.isclose(1.75 % 0.025, 0, abs_tol=0.0001)==False
[16:02:40] <bjs> rendar: yes but you're confusing the behaviour of _these two floats_ with the more general behaviour
[16:03:06] <bjs> here, a%b happened to be very close to the maximum because a is very slightly smaller than you thought it was
[16:03:12] <bjs> but if a was very slightly bigger ...
[16:03:38] <rendar> :(
[16:03:42] <rendar> what a mess!
[16:03:54] <bjs> or well, same argument for b being very slightly bigger/smaller too, and maybe they cancel out in weird ways
[16:03:58] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[16:04:11] <rendar> bjs: i think solution is math.isclose(1.75 % 0.025, 0, abs_tol=0.0001) or math.isclose(1.75 % 0.025, b, abs_tol=0.0001)
[16:04:15] <rendar> where b=0.025
[16:04:29] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 265 seconds)
[16:04:44] <rendar> bjs: but if you check my code: https://bpa.st/GFSQ --that's already what i do, basically
[16:04:49] <Repiphany> def ugly_float_mod(a, b): return min(abs(a%b), abs(a%-b))
[16:05:01] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:05:18] <rendar> Repiphany: what about beautiful_float_mod()? :)
[16:06:40] <bjs> rendar: no you have `== 0.0` which is definitely wrong. But yeah that expression should give you the right answer for 1.75 and 0.025
[16:06:44] <Repiphany> Beautiful would be using something like decimal or fractions right from the start if you need that kind of precision
[16:06:47] *** Joins: kevr (~kevr@user/kevr)
[16:07:15] <bjs> rendar: I mean these are floats, so if you're not being careful with your calculations the errors can compound. But with floats you can be smart (e.g. see the link nedbat gave earlier) to bound the errors so these checks keep working
[16:07:48] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: Bridge terminating on SIGTERM)
[16:08:17] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[16:08:35] <Repiphany> My expression is only good for trying to check if it's close to zero, it will give you the wrong sign for some things
[16:09:07] *** Asmodee[T] is now known as heldwin
[16:09:36] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[16:09:47] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Client Quit)
[16:09:58] <Repiphany> Fraction('1.75')%Fraction('0.025') == Fraction(0, 1)
[16:10:09] *** Joins: damoreno (~damoreno@redhat/damoreno)
[16:10:11] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[16:10:17] *** Joins: Julian (~tos9@host-87-6-132-212.retail.telecomitalia.it)
[16:10:24] <damoreno> Is there any reason not to use mock.patch on pytest and use monkeypatch instead?
[16:11:11] <graingert> jor: Thanks that's what I was looking for
[16:11:33] *** Joins: xkuru (~xkuru@user/xkuru)
[16:12:09] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:14:19] <varaindemian> The-Compiler: my goal -> to send links and dispaly them in a chromium tab via Flask
[16:15:52] *** Joins: x_kuru (~xkuru@user/xkuru)
[16:16:38] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[16:16:58] *** Joins: pnoud (~pnoud@user/pnoud)
[16:17:42] <tims> varaindemian: If just a browser is required then the webbrowser package with `webbrowser.open` will open the default browser, however can't be from within docker
[16:18:11] *** Joins: brownan (~brownan@136.56.137.143)
[16:18:19] <varaindemian> tims Docker is bye bye
[16:18:23] <varaindemian> from now on :)
[16:18:34] <tims> varaindemian: Docs are here https://docs.python.org/3/library/webbrowser.html
[16:19:00] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:19:05] *** Quits: Julian (~tos9@host-87-6-132-212.retail.telecomitalia.it) (Quit: leaving)
[16:19:49] *** Joins: wondiws (~Jasper@D57C89AA.static.ziggozakelijk.nl)
[16:19:57] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 258 seconds)
[16:20:00] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Ping timeout: 268 seconds)
[16:20:26] *** Quits: ssbr_ (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[16:20:44] <wondiws> Hi, I do "python -m pip install sha3", but it fails to compile with the error "C requires that a struct or union have at least one member"
[16:20:50] *** Joins: w0x12ef_ (~w0x12ef@117.61.21.204)
[16:20:52] <wondiws> does this mean I cannot install the sha3 package at all?
[16:21:01] <w0x12ef_> what is the use of /lib/x86_64-linux-gnu/librt.so
[16:21:10] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[16:21:35] <wondiws> w0x12ef_, real time extensions
[16:21:46] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[16:21:57] <w0x12ef_> what is that btw
[16:22:17] <wondiws> w0x12ef_, real time?
[16:22:25] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[16:22:46] <w0x12ef_> what is the use of  /lib64/ld-linux-x86-64.so
[16:23:42] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 268 seconds)
[16:23:42] *** Joins: jmcantre2 (~weechat@user/jmcantrell)
[16:23:58] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 252 seconds)
[16:24:06] <tims> wondiws: What python version are you using? SHA3 is available in hashlib
[16:24:10] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[16:24:14] <wondiws> tims, 3.8
[16:24:18] <tims> wondiws: (as of Python 3.6)
[16:24:35] <wondiws> w0x12ef_, that is the dynamic linker, but these questions aren't related to python
[16:24:40] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[16:25:21] <w0x12ef_>  dynamic linker is for runtime ?
[16:25:38] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[16:25:41] <wondiws> tims, I cannot install hashlib either; it says "Unknown OS, please update setup.py"
[16:25:45] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 265 seconds)
[16:25:58] <tims> wondiws: it's in the Python standard library, no need to install
[16:26:01] <w0x12ef_> do some glt plt things ?
[16:26:07] <w0x12ef_> got
[16:26:54] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[16:27:26] *** Joins: PdimH (~pdimh@user/pdimh)
[16:28:09] <wondiws> tims, does it have keccak? Because I don't use the sha3 library for the current sha3 standard
[16:28:13] *** Joins: diverdude (~undodre@176-21-102-230-cable.dk.customer.tdc.net)
[16:28:52] <diverdude> How do i read this syntax? def from_string(cls, name: str) -> "Tool":      will the function alway return the string with value "Tool" ?
[16:29:02] <tims> wondiws: keccak is mentioned see: https://docs.python.org/3.8/library/hashlib.html
[16:29:16] <wondiws> tims, I will find out now
[16:29:23] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:29:40] <varaindemian> tims should I install this app using python environments?
[16:29:57] *** Joins: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br)
[16:30:11] <tims> varaindemian: "this app" being your application?
[16:30:19] <varaindemian> tims yes,
[16:30:24] <varaindemian> tims the flask app
[16:30:28] *** Joins: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com)
[16:30:29] *** Quits: jmcantre2 (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[16:31:18] <tims> varaindemian: is entirely to your taste, I usually use virtualenv managed by poetry or pipenv
[16:31:53] <tims> varaindemian: although heard good things about pipx although that would require you to package your application as well
[16:31:55] *** Joins: jmcantre2 (~weechat@user/jmcantrell)
[16:31:59] <bjs> diverdude: it's a type hint, it says it returns an instance of the Tool class
[16:32:11] <varaindemian> tims I'll look into that later
[16:32:35] <diverdude> bjs: ok...but why is it then Tool in ""? Why not just Tool?
[16:32:38] <bjs> diverdude: it's just documentation/a hint.  but some tools like mypy/pytype can read the code and check them, and they understand what that means.
[16:32:44] <bjs> diverdude: probably Tool isn't actually defined there
[16:32:51] <bjs> so it has to be in quotes to stop python complaining
[16:33:06] <diverdude> bjs: Tool is the surrounding class
[16:33:16] *** Quits: doev (~doev@p549d709f.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[16:33:16] <bjs> diverdude: so yes, it's not actually defined yet
[16:33:28] <tims> wondiws: The other option is the cryptography package, it has a wide array of cryptographic and hashing features.
[16:33:31] <diverdude> aha ok i got it
[16:33:38] <diverdude> h
[16:33:41] <diverdude> thx
[16:33:52] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[16:34:31] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 258 seconds)
[16:34:37] *** Joins: Pickchea (~private@user/pickchea)
[16:35:06] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:35:25] *** Quits: boxelephant (~boxelepha@d192-24-108-69.col.wideopenwest.com) (Ping timeout: 265 seconds)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:15] *** Joins: vladoski (~vladoski@93-36-221-58.ip62.fastwebnet.it)
[16:36:38] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:38:02] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[16:38:49] *** Joins: OPK (~OPK@user/opk)
[16:39:30] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[16:39:30] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[16:40:04] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[16:41:08] *** Quits: w0x12ef_ (~w0x12ef@117.61.21.204) (Read error: Connection reset by peer)
[16:43:18] *** Joins: w0x12ef (~w0x12ef@117.61.21.204)
[16:43:22] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:43:22] *** Joins: mickey9 (~user@user/mickey)
[16:44:27] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[16:44:27] *** mickey9 is now known as mickey
[16:44:27] *** Quits: w0x12ef (~w0x12ef@117.61.21.204) (Read error: Connection reset by peer)
[16:44:44] *** Joins: w0x12ef (~w0x12ef@117.61.21.204)
[16:45:22] *** Joins: shad (~shad@user/shad)
[16:45:53] <greyblue9> I wrote a simple program to eval each command-line argument using the C API. would like to know if there's anything I could improve: https://bpa.st/X4HQ
[16:46:42] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[16:47:25] *** Joins: twobitsprite (~twobitspr@107.13.51.62)
[16:47:59] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[16:48:32] *** Quits: yano (~yano@ircpuzzles/staff/yano) (Quit: WeeChat, the better IRC client, https://weechat.org/)
[16:48:55] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:49:40] *** Quits: Elodin (~weechat@user/elodin) (Read error: Connection reset by peer)
[16:49:41] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[16:49:55] *** Joins: tg (~tg@rockylinux/infra/tg)
[16:50:51] *** Joins: yano (~yano@ircpuzzles/staff/yano)
[16:51:01] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Ping timeout: 246 seconds)
[16:51:27] *** Joins: dicajo (~dicajo@072-186-122-186.res.spectrum.com)
[16:51:32] <Yhg1s> greyblue9: well, it's a pretty bad idea to use builtins as the globals, and you basically never want to use a different dict for locals and globals. (It will break when you use nested scopes)
[16:52:03] <Yhg1s> greyblue9: you're also doing unsafe copies into limited-size buffers, which is a plague in C that just won't die. Don't use C.
[16:52:49] <greyblue9>  Yhg1s: oh, what should I pass in there?  I couldn't figure out how to get the globals you'd get via globals() in python
[16:52:56] <Yhg1s> greyblue9: you should also realise that PyErr_Print() will exit your program (by calling exit(3)) if the code raised SystemExit() (which is usually done by calling sys.exit())
[16:53:15] <Yhg1s> greyblue9: you should use the same dict for locals and globals. Just a plain dict, like your existing 'locals'.
[16:53:18] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[16:54:08] <Yhg1s> greyblue9: there's also no point in calling PyGILState_Ensure/Release in your code. Py_Initialize() gives you the GIL, you're not releasing the GIL, and you need to hold the GIL when calling Py_Finalize().
[16:54:21] <greyblue9> oh, I ser
[16:54:52] <varaindemian> should this be enough for my app to run? https://pastebin.com/dLkDmLey
[16:55:00] <varaindemian> on what port and adress can I access it?
[16:55:00] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:55:53] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:56:04] <varaindemian> when I use `python3 myapp.py` I see no output in the terminal
[16:56:59] *** Joins: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk)
[16:57:16] <lesshaste> can anyone explain L=*M,=*S,=[] please
[16:57:19] <lesshaste> what does it do?
[16:57:39] <Yhg1s> varaindemian: yes, your myapp.py doesn't actually *do* anything, it just defines a bunch of things. You need to ask flask to serve it. Any flask tutorial should cover this.
[16:58:34] <greyblue9> Yhg1s: better? https://bpa.st/TJ3A
[16:58:48] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[16:59:47] <Yhg1s> lesshaste: it abuses unpacking assignment, spat-unpacking and chained assignment to create new lists on the fly.
[17:00:09] <tims> varaindemian: Are you intending to open a link from the post in a new browser window?
[17:00:16] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[17:00:20] <varaindemian> tims yes
[17:00:28] <Yhg1s> greyblue9: that seems to fix the issues I saw at first glance, yes.
[17:00:37] <Yhg1s> (it still uses C, of course.)
[17:00:50] <varaindemian> I still don't know what to change to my script
[17:00:56] <varaindemian> without using virtualenv
[17:01:33] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[17:01:56] *** Quits: damoreno (~damoreno@redhat/damoreno) (Quit: leaving)
[17:02:10] *** Quits: jazzy (~jaziz@2600:380:c06b:9daa:c554:5611:1fc9:4321) (Ping timeout: 250 seconds)
[17:05:18] <tims> varaindemian: the webbrowser package will handle most of what you want, just call `webrowser.open("your-URL")`
[17:05:30] <bjs> lesshaste: note that `L = []` and `*M, = []` and `*S, = []` are all valid on their own
[17:06:21] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[17:06:31] <Yhg1s> And '*M, = x' is easier to read as '[*M] = x'
[17:06:35] *** Joins: Elodin (~weechat@user/elodin)
[17:06:35] <tims> varaindemian: to get your flask application running though see the docs https://flask.palletsprojects.com/en/2.0.x/quickstart/ describes what you need to do.
[17:06:39] <Yhg1s> (just like 'x, = y' for that matter)
[17:06:53] *** Quits: Bronto22 (~mennoh@2a02:a46b:4db0:1:5604:a6ff:fe37:3044) (Quit: Konversation terminated!)
[17:07:22] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[17:07:45] <varaindemian> tims thank you about the browser thing! will try it. but I am more interested right now in getting my app running.
[17:08:00] *** Joins: zeden (~zeden@user/zeden)
[17:08:25] *** Joins: treefrob (~robx@p57a969ef.dip0.t-ipconnect.de)
[17:08:44] *** Joins: ulu (~ulu@user/ulu)
[17:08:59] <greyblue9> Yhg1s: what would you suggest instead of C
[17:09:34] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:a874:b712:9670:8351)
[17:10:14] <Helle> Rust ?, but that is offtopic here
[17:10:45] <Yhg1s> greyblue9: for this? definitely Python.
[17:10:54] <varaindemian> tims ` * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)`
[17:11:03] <wondiws> tims, "hashlib" gives me different hashes than "sha3"
[17:11:51] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:12:03] *** Quits: {4144} (~{4144}@46.56.70.183) (Remote host closed the connection)
[17:12:09] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[17:12:47] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[17:13:01] *** Joins: venmx (~bertie@82-132-228-50.dab.02.net)
[17:13:35] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[17:13:49] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[17:14:20] *** Joins: jazzy (~jaziz@2607:fb90:a68e:e270:5855:cc91:a6b5:d5ec)
[17:15:02] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[17:15:14] <greyblue9>  Yhg1s: Helle: thanks for the suggestions
[17:15:41] *** Parts: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) ()
[17:16:02] *** Quits: rememberYou (~someone@user/rememberyou) (Ping timeout: 252 seconds)
[17:16:33] *** Quits: ulu (~ulu@user/ulu) (Remote host closed the connection)
[17:17:04] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[17:17:22] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[17:18:11] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:18:17] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[17:18:50] <wondiws> tims, now I am not looking for the SHA3 algorithm in fact, as I already mentioned. I want to use the Keccak algorithm. The documentation of hashlib however claims that SHA3 and Keccak are the same. This is not true anymore since the standardization of SHA3. So maybe the manual is just wrong. Because when I use hashlib.sha3_512 I should in fact not get what I want even if the manual says it should.
[17:20:06] *** Joins: srhm (~ascii@user/srhm)
[17:22:51] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.2)
[17:22:58] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:25:13] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Quit: Client limit exceeded: 15000)
[17:25:53] *** Quits: Naan (~naan@user/naan) (Read error: Connection reset by peer)
[17:26:54] *** Joins: rigid (~rigid@user/rigid)
[17:27:02] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[17:27:28] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.150)
[17:27:45] *** Joins: zebrag (~chris@user/zebrag)
[17:28:31] *** Joins: node1 (~node1@user/node1)
[17:30:31] *** Quits: r3d2 (~r3d2@user/r2d2) (Ping timeout: 265 seconds)
[17:30:47] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Remote host closed the connection)
[17:30:55] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 246 seconds)
[17:31:56] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[17:32:00] <tims> wondiws: you where talking about installing sha3, either way try searching pypi for keccak, many packages look older. The package you where trying to install was last released in 2016
[17:32:00] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[17:32:19] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[17:32:33] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[17:32:48] <lesshaste> bjs,  what does *M, = [] do?
[17:33:13] <bjs> lesshaste: it's the same as [*M] = [],   *M as a target "unpacks" the values into M
[17:33:14] <wondiws> tims, I did say I used the "sha3" package for the Keccak algorithm, but nevermind that.
[17:33:26] <wondiws> My initial question was about a pip error
[17:33:27] <bjs> lesshaste: so `a, *b, c = 1, 2, 3, 4` gives you `a = 1, b = [2, 3], c = 4`
[17:33:46] <lesshaste> so we have L=[*M]=[*S]=[] ?
[17:33:51] <bjs> lesshaste: yes
[17:34:08] <tims> wondiws: the error you were getting is relating to package compilation.
[17:34:24] <wondiws> tims, exactly
[17:34:30] *** Quits: vladoski (~vladoski@93-36-221-58.ip62.fastwebnet.it) (Quit: Textual IRC Client: www.textualapp.com)
[17:34:59] <lesshaste> bjs, it looks like *b is fitting as many values as possible into b
[17:35:05] <bjs> lesshaste: yes
[17:35:34] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[17:35:40] *** Joins: NeoCore (~neocore@138.199.47.155)
[17:35:53] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[17:36:00] <lesshaste> bjs, but [*M] = [] is still confusing. It looks like *M should unpack as many variables as it can from the contents of [] which of course is nothing
[17:36:24] *** Joins: todda7 (~torstein@2a02:587:3709:c419:1a5e:3e8a:ee7b:40ae)
[17:36:40] <lesshaste> how is  L=[*M]=[*S]=[] different from L = M = S = []? Is it just that M and S won't refer to the *same empty list?
[17:36:51] <tims> wondiws: however the package you where trying to install states "This module implements the SHA-3 standard as defined in FIPS202" eg the same as what is in hashlib
[17:37:35] <wondiws> tims, it does provide a keccak_512() constructor
[17:37:36] <bjs> lesshaste: yes exactly, so M = []
[17:37:53] <wondiws> tims, I use it on linux, where it is in the package manager
[17:37:59] <wondiws> but now I'm on windows
[17:38:02] <tims> Based on it's age, it might need some updates to work with newer python releases
[17:38:11] <bjs> lesshaste: and a *different* [] to L
[17:38:23] <lesshaste> bjs, ok thanks
[17:38:24] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[17:38:38] <Yhg1s> lesshaste: in '[*M] = ...', '*' isn't *unpacking*. It's *packing into* M.
[17:38:44] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[17:38:49] <tims> wondiws: C libraries on windows are not fun.
[17:38:58] *** Quits: kevr (~kevr@user/kevr) (Ping timeout: 246 seconds)
[17:39:11] <wondiws> tims, I suppose not
[17:39:27] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[17:39:32] <lesshaste> Yhg1s,  I can understand it as "Choose an M so that when its contents are put into a list you get the empty list"
[17:39:45] <Yhg1s> lesshaste: it's not choosing an M, no.
[17:39:51] <bjs> lesshaste: it's creating an M
[17:39:54] *** Joins: boxelephant (~boxelepha@209.143.87.130)
[17:40:02] <Yhg1s> it's assembling a list from the leftover items in the assignment (which is all items), and assigning that to M.
[17:40:02] *** Joins: thing (~thing@user/thing)
[17:40:10] *** Joins: bindu (bindu@user/bindu)
[17:40:13] *** Joins: anon16 (~anon16@37.236.110.3)
[17:40:22] <lesshaste> Yhg1s,  sure but for [*M
[17:40:37] <Yhg1s> in this case, because the list being unpacked, the right hand side, is empty, 'all items' means 'no items', so M is an empty list.
[17:40:45] <lesshaste> [*M] = [] that's a confusing way of saying it
[17:40:53] <lesshaste> thanks all
[17:40:55] <bjs> lesshaste: nobody said the line you gave was sensible
[17:41:02] <lesshaste> bjs, my choose was our create :)
[17:41:04] <lesshaste> bjs, :)
[17:41:06] <Yhg1s> yes, it's a very codegolfy way of writing code.
[17:41:12] <bjs> certainly I'd have written `L, M, S = [], [], []`
[17:41:19] <lesshaste> yes you are exactly right
[17:41:27] <tims> wondiws: there is even a bug report from 2018 with your problem.
[17:42:05] <tims> wondiws: the recommendation is to use the package pysha3 instead
[17:42:18] <tims> which includes precompiled binaries for windows
[17:42:27] <wondiws> tims, I will try that
[17:42:34] *** Joins: jamea (~jamea77@187.185.190.209)
[17:42:47] <tims> wondiws: well up to python 3.6
[17:43:32] *** Quits: Masklin_Gurder (~joel@93.182.183.85) (Ping timeout: 252 seconds)
[17:44:03] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 265 seconds)
[17:44:32] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:44:33] *** Joins: doev (~doev@p54a71872.dip0.t-ipconnect.de)
[17:45:07] <jamea> hi https://bpa.st/MADA  i have 2 arrays (matrix) with 2 dimensions, in line 9, i only need multiply the second dimension in the sample data: 157.48*496 how to do that?
[17:45:16] *** Parts: thing (~thing@user/thing) (WeeChat 3.2)
[17:45:49] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[17:46:07] *** Joins: ulu (~ulu@user/ulu)
[17:47:34] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 268 seconds)
[17:47:40] *** Quits: jazzy (~jaziz@2607:fb90:a68e:e270:5855:cc91:a6b5:d5ec) (Ping timeout: 250 seconds)
[17:47:56] *** Joins: jw_ (~njw@58.182.164.99)
[17:48:04] *** Joins: Lando-SpacePimp (~LandoCal@user/lando-spacepimp)
[17:48:07] <lesshaste> what does "return a < b and c or d" do?
[17:48:50] <Yhg1s> lesshaste: return 'c' if 'a<b' and 'c' is true, return 'd' if a>=b or c is false. (It's bad code. don't use it. if you must do this, use if/else instead.)
[17:49:06] <bjs> lesshaste: it's the same as `return ((a < b) and c) or d)`
[17:49:09] *** Joins: emilrwx (~emilrwx@dsl-tkubng12-54f955-62.dhcp.inet.fi)
[17:49:12] <bjs> well it's bad if c and d aren't booleans
[17:49:22] <lesshaste> thanks. My aim is to rewrite with if/then/else
[17:49:26] <Yhg1s> no, it's also bad if they *are* booleans :)
[17:49:29] <lesshaste> bjs, they aren't
[17:49:45] <Yhg1s> they *probably* meant 'c if a<b else d', but that's not what and/or does.
[17:50:01] <lesshaste> c is " cum_profit + fk(smallpart, capacity - cum_weight)"
[17:50:06] <lesshaste> so hardly a boolean
[17:50:35] <bjs> lesshaste: I think Yhg1s is right and they thought it did something different and they wanted the `if`.
[17:50:51] <lesshaste> so.. if a and b then return a ?
[17:50:57] <lesshaste> is that the first part?
[17:51:04] <p-i-_> https://bpa.st/NTKA How come VSCode isn't finding my .venv Python?
[17:51:17] <Yhg1s> lesshaste: 'if a<b: return c;; else: return d'
[17:51:32] <lesshaste> Yhg1s,  ah thanks
[17:52:33] *** Joins: Masklin_Gurder (~joel@93.182.183.85)
[17:53:02] <lesshaste> why does it return c if a< b?
[17:53:21] <lesshaste> I see it as if True and c or d in that case
[17:53:22] <grym> p-i-_: maybe it's not seeing the relative path?
[17:53:23] <Yhg1s> lesshaste: the and/or trick? It doesn't. It only returns c if a<b *and* c is true.
[17:53:32] <lesshaste> oh I see
[17:53:35] <Yhg1s> lesshaste: 'and' and 'or' return one of their operands.
[17:53:47] <p-i-_> ah it's a VSCode fail. Launching a fresh terminal finds it.
[17:53:56] <p-i-_> It just doesn't pick it up on load.
[17:54:10] <lesshaste> 'if a<b and c: return c; else: return d' in that case?
[17:54:19] <p-i-_> VSCode's gitter is hilarious. It's 100% questions.
[17:54:30] <lesshaste> Yhg1s, Your line was  'if a<b: return c;; else: return d'
[17:54:31] <Yhg1s> lesshaste: if you wanted to completely copy the logic of the and/or, which was probably unintentionally buggy, yes.
[17:54:38] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 258 seconds)
[17:54:44] <lesshaste> Yhg1s,  thanks
[17:54:56] <Yhg1s> lesshaste: and/or is a blight, a source of subtle bugs. they almost certainly didn't intend for it to work that way.
[17:55:17] <lesshaste> got you. Crazy codegolfers :)
[17:56:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[17:57:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[17:57:52] *** Quits: todda7 (~torstein@2a02:587:3709:c419:1a5e:3e8a:ee7b:40ae) (Ping timeout: 246 seconds)
[17:58:12] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:58:12] <jamea> Yhg1s any advice?
[17:58:16] *** Joins: TranquilEcho (~grom@user/tranquilecho)
[17:59:08] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[17:59:12] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Quit: Client limit exceeded: 15000)
[17:59:32] <kosh> lesshaste, lines are free, use them to make the code more readable
[17:59:46] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[17:59:52] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[17:59:55] <lesshaste> kosh, yes! I am trying to translate someone else's code into something I understsand
[17:59:59] <lesshaste> understand
[18:00:23] <Yhg1s> jamea: sorry?
[18:00:40] *** Joins: Auron (~Auron956@user/auron)
[18:01:30] *** Quits: abc_ (~abc@user/abc) (Ping timeout: 264 seconds)
[18:01:36] <jamea> themill friend are you there?
[18:02:27] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[18:03:20] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[18:04:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:04:56] *** Quits: wondiws (~Jasper@D57C89AA.static.ziggozakelijk.nl) (Quit: Leaving)
[18:05:16] <bjs> jamea: it's not clear what you're asking for
[18:05:38] *** Joins: cedric_ (~cedric@2a01:cb11:867:c200:d75f:fc18:dd28:1769)
[18:05:58] *** Joins: guymontag (~guymontag@128.106.163.162)
[18:07:13] *** Quits: guymontag (~guymontag@128.106.163.162) (Client Quit)
[18:07:14] *** Quits: cedric_ (~cedric@2a01:cb11:867:c200:d75f:fc18:dd28:1769) (Client Quit)
[18:07:34] *** Joins: cedric_ (~cedric@2a01:cb11:867:c200:d75f:fc18:dd28:1769)
[18:07:44] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 265 seconds)
[18:08:42] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 240 seconds)
[18:08:47] *** Quits: cedric_ (~cedric@2a01:cb11:867:c200:d75f:fc18:dd28:1769) (Client Quit)
[18:09:10] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[18:09:16] *** Joins: cedric_ (~cedric@2a01:cb11:867:c200:d75f:fc18:dd28:1769)
[18:09:36] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[18:09:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[18:09:40] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Quit: leaving)
[18:10:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:10:34] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[18:10:37] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[18:10:41] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[18:11:15] <jamea> hi bjs
[18:11:16] *** Quits: K285 (~K285@2401:4900:4453:e0b1:4c5e:6e9a:258f:55c3) (Ping timeout: 246 seconds)
[18:11:34] *** Quits: Nalt (~Nalt|||@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Read error: Connection reset by peer)
[18:11:45] *** Quits: jw_ (~njw@58.182.164.99) (Quit: jw_)
[18:11:57] <jamea> i have 2 arrays of 2 dimenssions each one right?
[18:12:08] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: the ##end of the abyss)
[18:12:10] <bjs> jamea: yes.
[18:12:15] *** cedric_ is now known as cedric__
[18:12:40] <jamea> in line 9 i need multiply only second position of each array, see this sample: 157.48*496
[18:12:58] <bjs> jamea: well you can't do that on line 9.  Why are you using nditer?
[18:13:33] <bjs> jamea: what do you want the program to actually output?
[18:13:49] *** cedric__ is now known as cedric_
[18:14:06] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[18:14:30] *** Quits: ntdll (~ntdll@user/ntdll) (Ping timeout: 265 seconds)
[18:14:32] *** Joins: MrFantastik (~Thunderbi@98.1.50.67)
[18:15:12] <jamea> bjs: see https://pasteboard.co/K82tLKo.png
[18:15:30] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[18:16:03] <bjs> jamea: what am i supposed to be looking at here
[18:16:08] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[18:16:37] *** Joins: wyclif (~wyclif@user/wyclif)
[18:16:39] <jamea> see d17... here i multiply: b17*b5 and in d18 b18*b5  and in d19 b19*b5     in the first loop b5 its "constant"
[18:17:15] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[18:17:28] <bjs> jamea: d17 has 3.149... which is definitely not 157.48*496
[18:17:48] *** Joins: pnoud (~pnoud@user/pnoud)
[18:17:58] *** Joins: patchie (~sdf@63.79-160-77.customer.lyse.net)
[18:17:59] <bjs> and what's in E and F ?
[18:18:11] <jamea> escuse me not multiply (division)
[18:18:22] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 265 seconds)
[18:18:40] <jamea> E truncate column D and F = D-E
[18:18:47] *** Joins: jw_ (~njw@58.182.164.99)
[18:18:52] <patchie> following code gives me this error message: "python leading zeros in decimal integer literals are not permitted use an 0o prefix for octal integers"
[18:18:53] <patchie> eqtime = 229,18 * (0,000075 + 0,001868 * cos(gamma) - 0,032077 * sin(gamma) - 0,014615 * cos(2 * gamma) - 0,040849 * sin(2 * gamma))
[18:19:01] <patchie> what does it mean?
[18:19:20] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 265 seconds)
[18:19:27] <bjs> jamea: you said the "first" loop?
[18:19:38] *** Quits: sn1tch3r (~sn1tch3r@201-27-147-42.dsl.telesp.net.br) (Quit: Leaving)
[18:19:59] <Yhg1s> patchie: did you mean for 0,000075 to be 0.000075?
[18:20:34] <patchie> in norway, we use comma.
[18:20:37] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Ping timeout: 246 seconds)
[18:20:38] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[18:20:39] <Yhg1s> patchie: Python doens't.
[18:20:42] <bjs> patchie: but in Python you don't :)
[18:20:47] <patchie> ah,...
[18:20:58] <patchie> so its not adjusted for local settings :P
[18:21:03] <bjs> nope
[18:21:04] <Yhg1s> no.
[18:21:11] <patchie> ok, i c...thanks
[18:21:13] *** Joins: sebastianos (~sebastian@user/sebastianos)
[18:21:31] <bjs> patchie: this is good, otherwise you wouldn't be able to run my code and I wouldn't be able to run yours
[18:21:42] *** Joins: kevr (~kevr@user/kevr)
[18:21:43] <jamea> bjs, yes second loop the "constant" in the division would be b6 the third loop the "constant" would be in the division b7 and so on
[18:21:55] <bjs> jamea: so you actually want a bigger table with many columns?
[18:22:00] <patchie> bjs: good point. haha
[18:22:22] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[18:23:12] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[18:23:13] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:25:23] *** Joins: thm (~thomas@fedora/thm)
[18:25:54] *** cedric_ is now known as cedric
[18:25:57] <thm> is there an easier way to get the value of a dict corresponding to the smallest key than d[sorted(d)[0]] ?
[18:26:09] <jamea> yes i want store the result of division in an multidimensional array
[18:26:14] <Yhg1s> thm: d[min(d)]
[18:26:19] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3-dev)
[18:26:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[18:27:23] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[18:27:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:27:45] *** Joins: gmem (~gmem@cpc104194-ipsw4-2-0-cust313.7-4.cable.virginm.net)
[18:28:02] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 265 seconds)
[18:28:02] <bjs> jamea: can you just show me in the excel picture what the final table you want is?
[18:28:23] <bjs> jamea: you showed one column, but then said there should be things other than the "first loop", but didn't explain or show
[18:29:13] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[18:30:13] *** Joins: douglaswinship (~douglaswi@78.40.148.180)
[18:30:17] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[18:30:50] *** Quits: ratelius (ratelius@gateway/vpn/protonvpn/ratelius) (Ping timeout: 252 seconds)
[18:31:11] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.150) (Quit: Textual IRC Client: www.textualapp.com)
[18:31:25] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[18:32:02] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[18:32:13] *** Joins: Elodin (~weechat@user/elodin)
[18:32:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[18:32:44] *** Joins: b2xiao (~b2xiao@wikipedia/nneonneo)
[18:33:07] *** Quits: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at) (Quit: ZNC - https://znc.in)
[18:33:26] *** Joins: ddavis (~user@24.98.77.213)
[18:33:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:35:02] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[18:35:07] *** Joins: aniruddha (~aniruddha@103.242.197.118)
[18:35:15] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[18:35:23] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[18:35:36] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Ping timeout: 252 seconds)
[18:36:31] *** Joins: justinf210 (~justinf21@119.sub-97-43-193.myvzw.com)
[18:36:32] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[18:37:18] *** Joins: diek (~diek@187.36.4.113)
[18:37:19] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[18:38:36] *** Joins: DaNeenjah (~jake@adsl-74-230-9-207.hsv.bellsouth.net)
[18:39:49] *** Quits: xa0s (~xa0s@mab.sdf.org) (Quit: leaving)
[18:40:57] <jiffe> anyone know a python http package that can handle both http and ws ?
[18:41:10] *** Joins: ionface (~ionface@user/ionface)
[18:41:13] *** Quits: justinf210 (~justinf21@119.sub-97-43-193.myvzw.com) (Ping timeout: 268 seconds)
[18:42:19] *** Quits: moto (~moto@user/moto) (Ping timeout: 246 seconds)
[18:42:57] <deniska> jiffe: aiohttp is one
[18:43:13] <deniska> jiffe: I'd expect other async oriented http clients to also handle websockets
[18:43:42] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[18:43:42] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[18:43:44] *** Joins: sbanwart (~sbanwart@cpe-174-100-90-239.neo.res.rr.com)
[18:44:02] <grym> i think httpx does, yeah
[18:44:43] <grym> or maybe not yet
[18:45:01] *** heldwin is now known as Heldwin
[18:45:01] *** Joins: nrg (~NRG@user/nrg)
[18:45:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:45:22] <thm> Yhg1s: thx
[18:47:05] *** Joins: justinf210 (~justinf21@2600:100e:b11c:1ac5:58fc:4678:a243:85fa)
[18:49:20] *** Joins: moto (~moto@user/moto)
[18:50:16] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[18:50:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:51:13] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Remote host closed the connection)
[18:52:02] *** Quits: jw_ (~njw@58.182.164.99) (Quit: jw_)
[18:52:35] <jamea> bjs: https://bpa.st/7HRQ
[18:52:45] *** Parts: chronon (~chronon@user/chronon) ()
[18:52:56] <bjs> jamea: show me in excel the table you want to generate
[18:53:06] <bjs> jamea: you showed me 1 column, but you said there was more with more "constant"s
[18:53:32] <jamea> i generate with python
[18:53:38] *** Joins: jw_ (~njw@58.182.164.99)
[18:53:48] <jamea> by moment i extract from each matrix  the second column
[18:53:51] <bjs> jamea: a minute ago you showed me a picture of something in excel
[18:54:12] <bjs> jamea: but it only contained 1 column for only b5. You said something about "other loops".  Show me in excel what you want to generate in Python
[18:54:27] *** Quits: justinf210 (~justinf21@2600:100e:b11c:1ac5:58fc:4678:a243:85fa) (Remote host closed the connection)
[18:54:43] *** Joins: justinf210 (~justinf21@2600:100e:b11c:1ac5:58fc:4678:a243:85fa)
[18:54:45] <jamea> yes
[18:54:48] *** Joins: ripdog_ (~quassel@user/ripdog)
[18:55:00] <jamea> i try make with python is hard the combinations
[18:55:02] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:55:06] <jamea> ok i generate the other table wait
[18:55:08] <bjs> jamea: I didn't ask you to make it with Python
[18:55:17] <bjs> I said do it in Excel, so at least I know what you're *trying* to make in Python
[18:55:32] *** Quits: bindu (bindu@user/bindu) (Quit: WeeChat 3.2)
[18:55:35] *** Quits: anas (~anas@196.224.51.199) (Ping timeout: 258 seconds)
[18:55:40] *** Joins: Fiji (~Fiji@user/fiji)
[18:55:51] <jamea> see: https://postimg.cc/vDvtdMZV
[18:56:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[18:56:01] *** Quits: jdmark (~jdmark@67.8.137.130) (Ping timeout: 268 seconds)
[18:56:03] <jamea> the second "constant" see?
[18:56:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:56:23] <bjs> jamea: so you want columns D and I, and so on?
[18:56:57] <bjs> jamea: `print(np.divide.outer(INVENTORY[:,1], MATERIAL_NEED[:,1]))`
[18:56:58] *** Quits: diek (~diek@187.36.4.113) (Read error: Connection reset by peer)
[18:57:00] *** Quits: ripdog (~quassel@user/ripdog) (Ping timeout: 250 seconds)
[18:57:14] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[18:57:43] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi)
[18:58:02] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[18:58:05] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[18:58:30] <jamea> yes and so on..
[18:58:31] <bjs> or `for c in INVENTORY[:,1]: print(MATERIAL_NEED[:,1] / c)` to print out each row
[18:58:57] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[18:58:59] *** Joins: anas (~anas@196.224.51.199)
[18:59:03] <bjs> which is roughly what .outer is doing
[18:59:10] *** Quits: justinf210 (~justinf21@2600:100e:b11c:1ac5:58fc:4678:a243:85fa) (Ping timeout: 250 seconds)
[18:59:34] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[18:59:54] <jamea> ooooooooooooo
[19:00:53] *** Joins: jdmark (~jdmark@172.58.175.40)
[19:00:54] *** Quits: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs) (Ping timeout: 265 seconds)
[19:01:08] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[19:01:16] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:02:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[19:02:27] *** Joins: Akuli (~Akuli@212.146.28.44)
[19:02:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:03:46] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[19:04:18] <p-i-_> Is there a clean one-liner for: L = [l.strip() for l in fd.readlines()]; L = [l for l in L if l]
[19:05:06] <bjs> p-i-_: well you can just combine the two: `L = [l for l in [l.strip() for l in fd.readlines()] if l]`
[19:05:28] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[19:05:45] <bjs> p-i-_: you can also use `:=` if you have a new enough version of Python: `[s for l in fd.readlines() if (s := l.strip())]`
[19:06:19] <p-i-_> Nice! Never used that syntax. Yes I upgraded to 3.9.5 yesterday!
[19:06:21] <bjs> p-i-_: `fd` suggests it's a file descriptor of some kind. But if it's not and it's actually just a normal file object (e.g. what open() gives you) then you can just loop over the lines directly: `[s for l in f if (s := l.strip())]`
[19:06:52] *** Quits: entuland (~entuland@user/entuland) (Read error: Connection reset by peer)
[19:06:53] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[19:07:03] <grym> the walrus is rare but very handy when you need it
[19:07:04] <bjs> you'd have to check what the behaviour is for the newlines at the end, I always forget :)
[19:07:16] <p-i-_> Yes, I need to extract 2 lines from a file (containing 2 nonempty lines)
[19:07:26] *** Joins: todda7 (~torstein@2a02:587:3709:c419:1a5e:3e8a:ee7b:40ae)
[19:07:42] *** Quits: venmx (~bertie@82-132-228-50.dab.02.net) (Read error: Connection reset by peer)
[19:07:51] <grym> a tidier `while` and tidier `re` things are the other two natural-feeling fits for walruses
[19:07:51] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 258 seconds)
[19:07:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[19:08:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:08:39] <p-i-_> bjs: How would I 'say' that walrus line in English?
[19:08:39] *** Quits: enyc (~enyc@user/enyc) (Ping timeout: 265 seconds)
[19:09:16] *** Joins: venmx (~bertie@host81-155-236-34.range81-155.btcentralplus.com)
[19:09:50] <grym> "assigned equal to", maybe?
[19:09:52] *** Joins: fofoni_ (~fofoni@user/fofoni)
[19:10:04] <bjs> p-i-_: like the whole thing?
[19:10:28] <p-i-_> Well, everything up to the walrus speaks for itself
[19:10:52] <bjs> p-i-_: "for each stripped line in f, if the stripped line is non-empty"  when saying things in English you don't normally like,  say each syntactic term in sequence
[19:11:49] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[19:11:53] <p-i-_> "list of items s (defined as l.strip) for l in fd"
[19:11:59] <p-i-_> IIUC
[19:12:10] *** Quits: fofoni (~fofoni@user/fofoni) (Ping timeout: 250 seconds)
[19:12:19] <bjs> p-i-_: `(x := y)` is an expression that has the value y, but also tags it with the name "x"
[19:12:40] <p-i-_> I see a lot of tidying of old while loops coming up.
[19:12:42] <bjs> but when "saying" in English what a program does you don't unroll the program as if you were the interpreter. if there's a variable name you just say what the value is
[19:13:12] <jamea> bjs different result: for c in INVENTORY[:,1]: print(MATERIAL_NEED[:,1] / c) and print(np.divide.outer(INVENTORY[:,1], MATERIAL_NEED[:,1]))  like me last
[19:13:21] <p-i-_> I remember this PEP, it brings C-style assignment-returns-value
[19:13:41] <bjs> jamea: oh i got the divison backwards in the loop
[19:13:42] <bjs> see
[19:14:18] *** Joins: venmx_ (~bertie@host81-155-236-34.range81-155.btcentralplus.com)
[19:14:25] <bjs> p-i-_: well it's more like taking Python assignment and making it an expression :)
[19:14:30] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:14:33] <bjs> it's the same semantics as normal Python assignment, and therefore not like C>
[19:14:38] <bjs> C. *
[19:15:02] <p-i-_> jamea: if you make testcases you can abstract the problem/issue from the implementation (more likely ppl will read it)
[19:15:53] *** Quits: tims (~tims@193-82-247-42.tpgi.com.au) (Ping timeout: 265 seconds)
[19:16:22] *** Quits: venmx (~bertie@host81-155-236-34.range81-155.btcentralplus.com) (Ping timeout: 265 seconds)
[19:17:09] *** Quits: dicajo (~dicajo@072-186-122-186.res.spectrum.com) (Read error: Connection reset by peer)
[19:18:56] *** Joins: chwba (chwba@chwba.banana.ircnow.org)
[19:18:58] *** Quits: Lando-SpacePimp (~LandoCal@user/lando-spacepimp) (Ping timeout: 258 seconds)
[19:19:15] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[19:19:21] *** Quits: venmx_ (~bertie@host81-155-236-34.range81-155.btcentralplus.com) (Ping timeout: 258 seconds)
[19:20:29] *** Joins: rememberYou (~someone@user/rememberyou)
[19:21:42] *** Joins: waynew (~wayne@user/waynew)
[19:21:55] *** Joins: mixfix41 (~homefame@user/mixfix41)
[19:22:15] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[19:22:26] <grym> p-i-_: `while x:=thing_whose_truthyness_matters()` is very convenient in the rare occasion i need a while loop, yep
[19:23:40] *** Joins: dob1 (~dob1@user/dob1)
[19:23:56] *** Quits: dob1 (~dob1@user/dob1) (Remote host closed the connection)
[19:23:59] *** Joins: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth)
[19:25:09] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[19:25:11] <hexology> also `if (m := re.search(pattern, text)) is not None:`
[19:26:31] *** Quits: wattux (~wattux@212.51.23.106) (Ping timeout: 246 seconds)
[19:26:51] *** Joins: mike18 (~geri@216.200.232.252)
[19:26:58] *** Joins: wattux (~wattux@212.51.23.106)
[19:27:01] *** Quits: jamea (~jamea77@187.185.190.209) (Ping timeout: 258 seconds)
[19:27:09] *** Joins: dob1 (~dob1@user/dob1)
[19:27:10] *** Joins: lmmx (~louis@host-92-0-187-249.as13285.net)
[19:27:14] <mike18> hi
[19:27:22] <jiffe> there a way to get setuptools to copy over a directory and its contents on install if that directory doesn't include __init__.py ?  This is an assets directory
[19:27:51] <hexology> jiffe: i specify those in the MANFIEST.in file, and use `setup(..., use_package_data=True)`
[19:28:04] <hexology> rather, `include_package_data=True`
[19:28:10] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:28:11] <hexology> (i think; double check the setuptools docs)
[19:28:15] <lmmx> anyone know how/where I can identify all the standard library module names [programmatically]?
[19:28:20] <mike18> hi - is there a way to catch raise ValueError( "a", "b", "c") exception and only extract the first string "a" in the try except ValueError as error: ? str(error) and split by ,?
[19:28:20] <lmmx> (`sys.builtin_module_names` is just a subset of these, and doesn't include e.g. pathlib)
[19:28:23] *** Quits: chwba (chwba@chwba.banana.ircnow.org) (Quit: IRCNow and Forever!)
[19:28:27] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-19fa-19fb-303f-0075.res6.spectrum.com)
[19:28:50] <hexology> mike18: the exception object itself has an `args` attribute, so if you write `except ValueError as exc:` then you can look at `exc.args[0]`
[19:29:10] <hexology> of course, you have to make sure `len(exc.args) > 0` first
[19:29:13] <mike18> ok is it expected to have len 1 of the args?
[19:29:35] <hexology> no, you'll have to avoid the IndexError yourself
[19:29:44] *** Joins: mikeliuk (~mikeliuk@213.205.198.125)
[19:29:52] <mike18> ok and than a string compare to detect a?
[19:30:06] <hexology> well yeah, if "a" is the string "a" there's nothing else you can do
[19:30:16] *** Joins: diek (~diek@187.36.4.113)
[19:31:34] *** Quits: diek (~diek@187.36.4.113) (Remote host closed the connection)
[19:32:13] *** Quits: aniruddha (~aniruddha@103.242.197.118) (Quit: WeeChat 1.9.1)
[19:32:21] *** PixelStuffer is now known as Roey
[19:32:23] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 258 seconds)
[19:34:17] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[19:35:03] <jiffe> hexology: that worked, thanks
[19:35:17] <p-i-_> grym: `while x:=thing_whose_truthyness_matters()` ... if only there were a resource that teaches the whole of Python like this!
[19:35:24] <grym> p-i-_: IRC!
[19:35:29] <p-i-_> haha!
[19:35:32] <p-i-_> trudat
[19:35:34] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: leaving)
[19:36:35] *** Quits: varaindemian (~varaindem@86.124.78.162) (Quit: Client closed)
[19:37:26] *** Joins: justinf210 (~justinf21@240.sub-174-204-0.myvzw.com)
[19:37:36] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[19:38:38] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[19:38:42] *** Quits: b2xiao (~b2xiao@wikipedia/nneonneo) (Quit: Textual IRC Client: www.textualapp.com)
[19:39:17] *** Joins: b2xiao (~b2xiao@wikipedia/nneonneo)
[19:39:34] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: the ##end of the abyss)
[19:40:49] <Yhg1s> lmmx: in Python 3.10, it's sys.stdlib_module_names, but it's still not guaranteed to be accurate (because of optional modules)
[19:40:55] <Yhg1s> lmmx: what are you trying to find out?
[19:41:28] *** Joins: entuland (~entuland@user/entuland)
[19:41:55] *** Joins: jamea (~jamea77@187.185.190.209)
[19:42:23] *** Joins: Lando-SpacePimp (~LandoCal@user/lando-spacepimp)
[19:44:53] <jamea> https://bpa.st/3BTQ  how to truncate the results to integers? in this result: 3.1496063 i need 3    this: 4.55045872    to 4 and the result assign to Matrix2
[19:45:06] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 250 seconds)
[19:45:22] *** Joins: chwba (chwba@chwba.banana.ircnow.org)
[19:45:24] *** Joins: qlixed (~qlixed@181.44.129.13)
[19:45:36] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:47:21] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[19:47:47] *** Quits: JimMadge (~jim@host86-141-21-184.range86-141.btcentralplus.com) (Ping timeout: 265 seconds)
[19:48:40] <ChrisWarrick> jamea: int(3.1496063) == 3
[19:48:46] <tunixman> jamea: Just calling int(3.149) or int(4.55045) etc should give you what you need.
[19:49:04] <ChrisWarrick> jamea: and if you’re doing numpy stuff, .asdtype(int) perhaps
[19:49:08] *** Quits: KeiraT (~unknown@lulzsec.co.uk) (Ping timeout: 268 seconds)
[19:49:10] <ChrisWarrick> astype*
[19:49:35] <jamea> ok thx
[19:49:43] *** Quits: LemurP (~lemurp@109.74.190.250) (Ping timeout: 265 seconds)
[19:49:52] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:50:42] *** Quits: chwba (chwba@chwba.banana.ircnow.org) (Quit: IRCNow and Forever!)
[19:50:46] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[19:51:06] *** Quits: b2xiao (~b2xiao@wikipedia/nneonneo) (Quit: Textual IRC Client: www.textualapp.com)
[19:51:07] *** Joins: KeiraT (~unknown@lulzsec.co.uk)
[19:51:34] *** Joins: b2xiao (~b2xiao@wikipedia/nneonneo)
[19:51:38] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[19:51:49] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[19:52:04] *** Joins: mehwork (~mehwork@98.185.199.35.bc.googleusercontent.com)
[19:52:21] <mehwork> is aws-lambda-router still worth using?
[19:52:26] *** Quits: b2xiao (~b2xiao@wikipedia/nneonneo) (Client Quit)
[19:52:53] <jinsun> is there any way to "decompile" any object I get from pickle.load, I mean to generate some python code that will create the object?
[19:52:54] *** Joins: b2xiao (~b2xiao@wikipedia/nneonneo)
[19:52:54] *** Joins: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at)
[19:52:57] *** Quits: nre (~nre@55d460e8.access.ecotel.net) (Quit: Leaving.)
[19:53:41] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:53:54] *** Quits: b2xiao (~b2xiao@wikipedia/nneonneo) (Client Quit)
[19:54:12] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:54:17] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[19:54:22] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[19:54:41] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[19:54:44] <ChrisWarrick> jinsun: what is the end goal?
[19:54:47] <jinsun> and that python code shouldn't be obj = picke.load(file) :D
[19:55:06] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[19:55:22] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[19:55:25] <ChrisWarrick> jinsun: what are you using pickle for and why do you want to “decompile” pickle files?
[19:55:27] *** Quits: Dotz0cat (~Dotz0cat@h9.242.19.98.static.ip.windstream.net) (Ping timeout: 244 seconds)
[19:55:32] *** Quits: dob1 (~dob1@user/dob1) (Quit: quit)
[19:55:49] *** Joins: {4144} (~{4144}@46.56.70.183)
[19:55:59] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[19:56:27] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 268 seconds)
[19:56:37] *** Joins: dob1 (~dob1@user/dob1)
[19:56:38] *** Joins: y2o (~y2o@pc-128-133-45-190.cm.vtr.net)
[19:56:49] *** Quits: w0x12ef (~w0x12ef@117.61.21.204) (Read error: Connection reset by peer)
[19:56:54] *** Joins: chwba (chwba@chwba.banana.ircnow.org)
[19:56:56] *** Quits: jdmark (~jdmark@172.58.175.40) (Read error: Connection reset by peer)
[19:57:20] *** Joins: w0x12ef (~w0x12ef@117.61.21.204)
[19:57:31] *** Joins: jdmark (~jdmark@67.8.137.130)
[19:57:38] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[19:57:44] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[19:58:31] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[19:58:35] *** Joins: JimMadge (~jim@host86-141-21-184.range86-141.btcentralplus.com)
[19:58:51] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Quit: Konversation terminated!)
[19:58:54] *** Quits: justinf210 (~justinf21@240.sub-174-204-0.myvzw.com) (Ping timeout: 265 seconds)
[19:59:44] *** Quits: shabius (~shabius@2a0e:1c80:2:1021::1005) (Ping timeout: 252 seconds)
[20:00:05] <tunixman> jinsun: this might help https://pypi.org/project/uncompyle6/
[20:00:18] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:00:43] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.110)
[20:00:47] <jinsun> so some of myc coworkers decided that instead of loading data from csv and jsons, they should create some random classes and dump those in pickle files, then load those in the code they submit to git
[20:01:00] <ChrisWarrick> tunixman: pyc ≠ pickle
[20:01:18] <ChrisWarrick> jinsun: your cow-orkers need a stern talking-to
[20:01:30] <TML> jinsun: O_O
[20:01:33] <jinsun> and now I want them to get rid of the pickle files, and they want to avoid doing all that work again
[20:01:53] <TML> jinsun: load it into a repl and then dump it back as JSON?
[20:01:54] <ChrisWarrick> jinsun: can’t you just load the pickles and create a more reasonable format out of that data?
[20:02:17] *** Quits: w0x12ef (~w0x12ef@117.61.21.204) (Ping timeout: 265 seconds)
[20:02:51] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:03:12] *** Quits: jw_ (~njw@58.182.164.99) (Quit: jw_)
[20:03:12] <tunixman> oh yeah fair point.
[20:03:14] *** Quits: JimMadge (~jim@host86-141-21-184.range86-141.btcentralplus.com) (Ping timeout: 252 seconds)
[20:03:41] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 244 seconds)
[20:03:44] *** Quits: jamea (~jamea77@187.185.190.209) (Ping timeout: 265 seconds)
[20:04:06] <gitesh> file.readlines(n) is n useful ?
[20:04:08] <tunixman> jinsun: you'll need the modules installed that they had that created the pickles, and python will usually pull them out. That's the easiest way...
[20:04:19] <gitesh> "If n is provided then n characters are read but n is rounded up so that an entire line is returned."
[20:04:25] <gitesh> rounded up means what?
[20:04:36] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 250 seconds)
[20:04:38] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:04:51] <ChrisWarrick> gitesh: https://en.wikipedia.org/wiki/Rounding
[20:05:10] *** Joins: Blankspace (~abcd@user/blankspace)
[20:05:25] <gitesh> Blankspace: hey
[20:05:27] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (*.net *.split)
[20:05:27] *** Quits: dez (uid92154@user/dez) (*.net *.split)
[20:05:27] *** Quits: Schnouki (~schnouki@user/schnouki) (*.net *.split)
[20:05:27] *** Quits: GregTheHun (~GregTheHu@2601:300:4500:3d41:9d1f:1512:c7da:4108) (*.net *.split)
[20:05:27] *** Quits: skip (~alex@p200300dfaf4f9f004a5b39fffea65afd.dip0.t-ipconnect.de) (*.net *.split)
[20:05:27] *** Quits: the4oo4 (~the4oo4@shenzhou.whatbox.ca) (*.net *.split)
[20:05:27] *** Quits: explodes (~explodes@user/explodes) (*.net *.split)
[20:05:28] *** Quits: r3m (~launch@user/r3m) (*.net *.split)
[20:05:28] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (*.net *.split)
[20:05:28] *** Quits: tardisx (~tardisx@2400:8902::f03c:91ff:fe89:d107) (*.net *.split)
[20:05:28] *** Quits: synbiose (~synbiose@user/synbiose) (*.net *.split)
[20:05:28] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (*.net *.split)
[20:05:28] *** Quits: ColdKeyboard (~ColdKeybo@user/coldkeyboard) (*.net *.split)
[20:05:28] *** Quits: redgloboli (~redglobol@user/redgloboli) (*.net *.split)
[20:05:28] *** Quits: a1paca (~a1paca@user/a1paca) (*.net *.split)
[20:05:28] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (*.net *.split)
[20:05:28] *** Quits: mxp (~mxp@82.98.30.69) (*.net *.split)
[20:05:28] *** Quits: abn (sid376310@id-376310.tinside.irccloud.com) (*.net *.split)
[20:05:28] *** Quits: PotatoGim (sid99505@id-99505.tooting.irccloud.com) (*.net *.split)
[20:05:28] *** Quits: ablegreen (~ablegreen@tsunami.ocf.berkeley.edu) (*.net *.split)
[20:05:28] *** Quits: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net) (*.net *.split)
[20:05:28] *** Quits: ATAD (ATAD@user/atad) (*.net *.split)
[20:05:28] *** Quits: TML (~joey@user/tml) (*.net *.split)
[20:05:28] *** Quits: mspe (~user@tilde.team/user/mspe) (*.net *.split)
[20:05:28] *** Quits: zinc (~zinc@163.ip-51-254-203.eu) (*.net *.split)
[20:05:28] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[20:05:28] *** Quits: mumixam (~m@user/mumixam) (*.net *.split)
[20:05:28] *** Quits: leonardo (~leonardo@user/leonardo) (*.net *.split)
[20:05:28] *** Quits: nepeat (~nepeat@79.110.170.62) (*.net *.split)
[20:05:28] *** Quits: IanWizard (~ianwizard@user/ianwizard) (*.net *.split)
[20:05:28] *** Quits: nickel8448 (~rahulwadh@147.80.76.34.bc.googleusercontent.com) (*.net *.split)
[20:05:28] *** Quits: vince (~vince@75.127.14.76) (*.net *.split)
[20:05:28] *** Quits: Juhaz (juhaz@hilla.kapsi.fi) (*.net *.split)
[20:05:28] *** Quits: etienneme (~etienne@176-149-215-214.abo.bbox.fr) (*.net *.split)
[20:05:28] *** Quits: michaelis (~michaelis@193.183.209.17) (*.net *.split)
[20:05:28] *** Quits: kungp (~kungp@h-46-59-2-200.A230.priv.bahnhof.se) (*.net *.split)
[20:05:28] *** Quits: sivoais (~zaki@199.19.225.239) (*.net *.split)
[20:05:28] *** Quits: visl (sid453966@user/visl) (*.net *.split)
[20:05:28] *** Quits: Freso (sid7914@libera/staff/metabrainz.user.Freso) (*.net *.split)
[20:05:28] *** Quits: Rain (~Rain@li958-238.members.linode.com) (*.net *.split)
[20:05:28] *** Quits: libussa (~libussa@libussa.net) (*.net *.split)
[20:05:28] *** Quits: altendky (sid135382@id-135382.stonehaven.irccloud.com) (*.net *.split)
[20:05:28] *** Quits: notevil (~notevil@user/notevil) (*.net *.split)
[20:05:28] *** Quits: webknjaz (sid330617@ansible/staff/Webknjaz) (*.net *.split)
[20:05:28] *** Quits: graingert (sid128301@id-128301.tinside.irccloud.com) (*.net *.split)
[20:05:28] *** Quits: zerok (~zerok@user/zerok) (*.net *.split)
[20:05:28] *** Quits: treefrob (~robx@p57a969ef.dip0.t-ipconnect.de) (*.net *.split)
[20:05:28] *** Quits: pie_ (~pie_bnc@user/pie/x-2818909) (*.net *.split)
[20:05:28] *** Quits: marienz_ (~marienz@libera/staff/marienz) (*.net *.split)
[20:05:28] *** Quits: Madda (~Madda@208.249.9.51.dyn.plus.net) (*.net *.split)
[20:05:28] *** Quits: foureyes (foureyes@brought.to.you.by.bnc4free.com) (*.net *.split)
[20:05:28] *** Quits: armin (~armin@unix.porn) (*.net *.split)
[20:05:28] *** Quits: Tashtari (~tashtari@user/tashtari) (*.net *.split)
[20:05:28] *** Quits: Ninja3047 (~Ninja3047@3047.ninja) (*.net *.split)
[20:05:28] *** Quits: gbear605 (~gbear605@user/gbear605) (*.net *.split)
[20:05:28] *** Quits: graphitemaster (~graphitem@user/graphitemaster) (*.net *.split)
[20:05:28] *** Quits: josh_h (sid301834@id-301834.brockwell.irccloud.com) (*.net *.split)
[20:05:28] *** Quits: ErgoX (sid219675@id-219675.tinside.irccloud.com) (*.net *.split)
[20:05:28] *** Quits: TadeusTaD (tadeustad@psifactor.pl) (*.net *.split)
[20:05:28] *** Quits: gildarts (16abab341f@user/gildarts) (*.net *.split)
[20:05:28] *** Quits: daniel2 (daniel@user/daniel2) (*.net *.split)
[20:05:28] *** Quits: HenryG (~quassel@2607:5300:201:3000::f63) (*.net *.split)
[20:05:28] *** Quits: jug (~jug@user/jug) (*.net *.split)
[20:05:28] *** Quits: toine42 (~antoine@2001:41d0:e:41f::1) (*.net *.split)
[20:05:28] *** Quits: deniska (~denis@user/deniska) (*.net *.split)
[20:05:28] *** Quits: LogicAside (~LogicAsid@user/logicaside) (*.net *.split)
[20:05:28] *** Quits: poorboy (~poorboy@104.131.46.87) (*.net *.split)
[20:05:28] *** Quits: st3fan (sid43079@id-43079.tooting.irccloud.com) (*.net *.split)
[20:05:28] *** Quits: saorge (~saorge@ns378138.ip-5-196-67.eu) (*.net *.split)
[20:05:28] *** Quits: oisota (~oisota@user/oisota) (*.net *.split)
[20:05:28] *** Quits: dav1d (~dav1d@80-109-93-56.cable.dynamic.surfer.at) (*.net *.split)
[20:05:28] *** Quits: mjh4386 (~mjh4386@165.22.53.231) (*.net *.split)
[20:05:28] *** Quits: tris (emptystrin@irc1.lessbroken.org) (*.net *.split)
[20:05:28] *** Quits: dece (~dece@dece.space) (*.net *.split)
[20:05:28] *** Quits: unary (~unary@ternary.ca) (*.net *.split)
[20:05:28] *** Quits: ouemt (~quassel@user/ouemt) (*.net *.split)
[20:05:28] *** Quits: zoid (~zoid@user/taxationistheft) (*.net *.split)
[20:05:28] *** Quits: mweckbecker (~matthias@weckbecker.name) (*.net *.split)
[20:05:29] *** Quits: carbolymer (~carbolyme@dropacid.net) (*.net *.split)
[20:05:29] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (*.net *.split)
[20:05:29] *** Quits: Marvin (~root@lutolf.vserver.nimag.net) (*.net *.split)
[20:05:29] *** Quits: Leliana (is@the.one.and.only.revthefox.co.uk) (*.net *.split)
[20:05:29] *** Quits: Scotteh (~Scotteh@user/scotteh) (*.net *.split)
[20:05:29] *** Quits: kiska (~kiska@user/kiska) (*.net *.split)
[20:05:29] *** Quits: seds (sid492514@user/seds) (*.net *.split)
[20:05:29] *** Quits: bjs (sid190364@user/bjs) (*.net *.split)
[20:05:29] *** Quits: AhmedAmerican (sid470527@id-470527.charlton.irccloud.com) (*.net *.split)
[20:05:29] *** Quits: energizer (~energizer@user/energizer) (*.net *.split)
[20:05:29] *** Quits: dstufft (~dstufft@shitbird.caremad.io) (*.net *.split)
[20:05:29] *** Quits: cryocaustik (~cryocaust@user/cryocaustik) (*.net *.split)
[20:05:29] *** Quits: kaizen (uid501599@id-501599.brockwell.irccloud.com) (*.net *.split)
[20:05:29] *** Quits: znemo (sid500529@highgate.irccloud.com) (*.net *.split)
[20:05:29] *** Quits: pucko (~pucko@static.244.198.216.95.clients.your-server.de) (*.net *.split)
[20:05:29] *** Quits: nfc (nfc@tilde.institute) (*.net *.split)
[20:05:29] *** Quits: gecko (~gecko@132.100.231.35.bc.googleusercontent.com) (*.net *.split)
[20:05:29] *** Quits: wearpants (sid355580@user/wearpants) (*.net *.split)
[20:05:29] *** Quits: bbear (~znc@21212.s.t4vps.eu) (*.net *.split)
[20:05:29] *** Quits: Alan (~alan@user/alan) (*.net *.split)
[20:05:29] *** Quits: Avaris (~Avaris@avar.is) (*.net *.split)
[20:05:29] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (*.net *.split)
[20:05:29] *** Quits: kline (~freedom0@libera/staff/kline) (*.net *.split)
[20:05:29] *** Quits: Vultyre (~vultyre@user/vultyre) (*.net *.split)
[20:05:29] *** Quits: spirit (~spirit@user/spirit) (*.net *.split)
[20:05:29] *** Quits: xMopx (~xMopx-lib@192.95.23.134) (*.net *.split)
[20:05:29] *** Quits: erhandsome (~erhandsom@user/erhandsome) (*.net *.split)
[20:05:29] *** Quits: kinabalu (~kinabalu@about/java/kinabalu) (*.net *.split)
[20:05:29] *** Quits: mrkajetanp_ (~mrkajetan@88.98.245.28) (*.net *.split)
[20:05:29] *** Quits: buhman (sid411355@user/buhman) (*.net *.split)
[20:05:29] *** Quits: ZeroKnight (zeroknight@dimensionzero.net) (*.net *.split)
[20:05:29] *** Quits: sabet- (~sabet@user/sabet) (*.net *.split)
[20:05:29] *** Quits: Neoon (~Neoon@2607:5300:60:23a5::1111) (*.net *.split)
[20:05:29] *** Quits: willcl_ark (~quassel@user/willcl-ark/x-8282106) (*.net *.split)
[20:05:29] *** Quits: terabit (sid146285@highgate.irccloud.com) (*.net *.split)
[20:05:29] *** Quits: someara (sid19135@id-19135.tinside.irccloud.com) (*.net *.split)
[20:05:29] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Ping timeout: 272 seconds)
[20:05:33] <gitesh> ChrisWarrick: i know that rounding but
[20:05:39] *** Joins: sivoais (~zaki@199.19.225.239)
[20:05:39] *** Joins: redgloboli (~redglobol@user/redgloboli)
[20:05:39] *** Joins: zinc_ (~zinc@163.ip-51-254-203.eu)
[20:05:40] *** Quits: Crassus (~Crassus@user/crassus) (Ping timeout: 265 seconds)
[20:05:40] *** Joins: PotatoGim_ (sid99505@id-99505.tooting.irccloud.com)
[20:05:43] *** Joins: Avaris_ (~Avaris@avar.is)
[20:05:49] *** Joins: daniel2 (daniel@user/daniel2)
[20:05:53] *** Joins: ColdKeyboard (~ColdKeybo@user/coldkeyboard)
[20:05:53] *** Joins: carbolymer_ (~carbolyme@dropacid.net)
[20:05:54] *** Joins: deniska_ (~denis@user/deniska)
[20:05:55] *** Joins: oisota (~oisota@user/oisota)
[20:05:56] *** Joins: dstufft_ (~dstufft@shitbird.caremad.io)
[20:05:56] *** Joins: mxp (~mxp@82.98.30.69)
[20:05:59] *** Joins: ne_ (~notevil@user/notevil)
[20:06:00] *** Joins: abn (sid376310@id-376310.tinside.irccloud.com)
[20:06:08] *** Avaris_ is now known as Avaris
[20:06:08] *** Joins: ouemt (~quassel@user/ouemt)
[20:06:14] *** Joins: tris (emptystrin@irc1.lessbroken.org)
[20:06:19] *** Joins: foureyes- (foureyes@brought.to.you.by.bnc4free.com)
[20:06:19] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[20:06:20] *** Joins: pie_bnc (~pie_bnc@user/pie/x-2818909)
[20:06:20] *** ne_ is now known as notevil
[20:06:21] *** dstufft_ is now known as dstufft
[20:06:23] *** Joins: the4oo4- (~the4oo4@shenzhou.whatbox.ca)
[20:07:04] *** Joins: bjs (sid190364@user/bjs)
[20:07:04] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:07:12] *** Joins: Leliana (is@the.one.and.only.revthefox.co.uk)
[20:07:14] *** Joins: gildarts (16abab341f@user/gildarts)
[20:07:15] <tunixman> jinsun: this also might help, at least reconstructing enough of the modules to see what pickle needs to create objects for the data https://docs.python.org/3/library/pickletools.html
[20:07:15] *** Joins: jug (~jug@user/jug)
[20:07:21] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[20:07:21] *** Joins: libussa (~libussa@libussa.net)
[20:07:23] *** Joins: sabet (~sabet@user/sabet)
[20:07:26] *** Joins: kungp (~kungp@h-46-59-2-200.a230.priv.bahnhof.se)
[20:07:27] *** Quits: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com) (Remote host closed the connection)
[20:07:30] *** Joins: kline (~freedom0@libera/staff/kline)
[20:07:32] *** Joins: ZeroKnight (zeroknight@dimensionzero.net)
[20:07:32] *** Joins: dece (~dece@dece.space)
[20:07:33] *** Joins: leonardo (~leonardo@user/leonardo)
[20:07:34] *** Joins: zerok (~zerok@user/zerok)
[20:07:34] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:07:34] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:07:35] *** Joins: etienneme (~etienne@176-149-215-214.abo.bbox.fr)
[20:07:35] *** Joins: Scotteh (~Scotteh@user/scotteh)
[20:07:35] *** Joins: bbear (~znc@21212.s.t4vps.eu)
[20:07:35] *** Joins: synbiose (~synbiose@user/synbiose)
[20:07:36] <tunixman> pickle is sort of another virtual machine of its own.
[20:07:36] *** Joins: Ninja3047 (~Ninja3047@3047.ninja)
[20:07:39] *** Joins: willcl_ark (~quassel@user/willcl-ark/x-8282106)
[20:07:44] *** deniska_ is now known as deniska
[20:07:45] *** Joins: explodes (~explodes@user/explodes)
[20:07:47] *** Joins: ATAD (~ATAD@user/atad)
[20:07:47] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[20:07:47] *** Joins: HenryG (~quassel@2607:5300:201:3000::f63)
[20:07:48] *** Joins: gbear605 (~gbear605@user/gbear605)
[20:07:49] *** Joins: mjh4386 (~mjh4386@165.22.53.231)
[20:07:50] *** Joins: Vultyre (~vultyre@user/vultyre)
[20:07:51] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[20:07:51] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:07:51] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:07:53] *** Quits: chwba (chwba@chwba.banana.ircnow.org) (Quit: IRCNow and Forever!)
[20:07:58] *** Joins: mrkajetanp (~mrkajetan@2a01:4b00:ea36:6c00:7994:941c:3f5d:2b88)
[20:07:59] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[20:08:01] *** Joins: mh3f (~mhowle@cpe-98-25-217-234.sc.res.rr.com)
[20:08:05] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:08:05] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:08:10] *** Joins: graphitemaster (~graphitem@user/graphitemaster)
[20:08:12] *** foureyes- is now known as foureyes
[20:08:16] *** Joins: IanWizard (~ianwizard@user/ianwizard)
[20:08:19] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:08:19] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:08:22] *** Quits: mike18 (~geri@216.200.232.252) (Ping timeout: 252 seconds)
[20:08:29] *** Joins: Ha-Jo (~Thunderbi@2a01:c22:855e:ea00:1d4e:2f33:f5f1:9617)
[20:08:32] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:08:32] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:08:38] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:08:39] *** Joins: altendky (sid135382@id-135382.stonehaven.irccloud.com)
[20:08:45] *** Joins: guardian (~guardian@planet-d.net)
[20:08:46] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:08:46] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:08:47] <guardian> join #tmux
[20:08:50] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:08:50] *** Joins: zoid (~zoid@user/taxationistheft)
[20:08:51] <guardian> sorry
[20:08:52] *** Joins: kinabalu (~kinabalu@about/java/kinabalu)
[20:08:59] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:08:59] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:09:14] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:09:14] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:09:15] *** Joins: a1paca (~a1paca@user/a1paca)
[20:09:27] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:09:27] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:09:41] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:09:41] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:09:55] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:09:55] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:10:09] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:10:09] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:10:22] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:10:22] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:10:36] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:10:36] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:10:38] *** Joins: armin (~armin@unix.porn)
[20:10:41] *** Joins: michaelis (~michaelis@193.183.209.17)
[20:10:49] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:10:49] <tunixman> guardian: thanks for the channel recommendation :)
[20:10:49] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:11:02] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:11:02] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:11:15] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:11:15] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:11:29] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:11:29] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:11:31] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:11:37] *** Joins: superboot (~agentgasm@user/superboot)
[20:11:38] *** Joins: energizer (~energizer@user/energizer)
[20:11:39] *** Joins: treefrob (~robx@p57a969ef.dip0.t-ipconnect.de)
[20:11:44] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:11:44] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:11:57] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:11:57] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:12:11] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:12:11] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:12:24] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:12:24] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:12:39] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:12:39] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:12:41] *** Joins: b2xiao (~b2xiao@wikipedia/nneonneo)
[20:12:52] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:12:52] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:12:56] <jinsun> ChrisWarrick: yeah that's probably what they'll have to end up doing, I would do it I wrote it, but they don't want to
[20:13:06] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:13:06] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:13:12] <jinsun> tunixman: cool, I'll see if I get anything useful from that
[20:13:16] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:13:19] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:13:19] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:13:32] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:13:32] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:13:37] *** Joins: riposte (~finalripo@2403-5800-3200-5c02--300.ip6.aussiebb.net)
[20:13:38] *** Joins: vicfred (~vicfred@user/vicfred)
[20:13:46] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:13:46] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:13:59] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:13:59] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:14:04] <tunixman> jinsun: no problem! I've had to work through similar issues in the past, and it's definitely a challenge. I'll help where I can of course.
[20:14:13] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:14:13] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:14:25] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[20:14:27] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:14:27] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:14:41] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:14:41] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:14:53] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:14:55] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:14:55] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:15:09] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:15:09] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:15:23] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:15:23] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:15:36] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:15:36] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:15:49] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:15:49] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:16:02] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:16:03] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:16:03] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:16:12] *** Quits: Jigsy (~Jigsy@user/jigsy) (Quit: bbiaf.)
[20:16:17] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:16:17] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:16:30] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:16:30] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:16:45] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:16:45] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:16:58] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:16:58] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:17:12] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:17:12] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:17:15] *** Quits: Nact (~l@host-85-27-125-179.dynamic.voo.be) (Read error: Connection reset by peer)
[20:17:26] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:17:26] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:17:28] *** Quits: b2xiao (~b2xiao@wikipedia/nneonneo) (Client Quit)
[20:17:40] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:17:40] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:17:48] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:17:54] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:17:54] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:18:09] *** Joins: poorboy (~poorboy@104.131.46.87)
[20:18:09] *** Quits: poorboy (~poorboy@104.131.46.87) (Excess Flood)
[20:18:18] <gitesh> Returns a list of strings, each representing a single line of the file. If n is not provided then all lines of the file are returned. If n is provided then n characters are read but n is rounded up so that an entire line is returned. Note Like readline readlines ignores the parameter n in the browser.
[20:18:27] <gitesh> rounded up means what does it do?
[20:18:38] *** Joins: pnoud (~pnoud@user/pnoud)
[20:19:00] <Blankspace> Hey gitesh :)
[20:19:02] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[20:19:41] *** Quits: anon16 (~anon16@37.236.110.3) (Ping timeout: 265 seconds)
[20:19:45] <gitesh> hi Blankspace :)
[20:19:49] *** Quits: fofoni_ (~fofoni@user/fofoni) (Quit: Leaving)
[20:20:17] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:20:50] *** Quits: brumla (~brumla@178.77.217.196) (Ping timeout: 252 seconds)
[20:21:30] *** Joins: Tashtari (~tashtari@user/tashtari)
[20:21:38] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[20:21:54] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[20:22:03] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:22:10] *** carbolymer_ is now known as carbolymer
[20:22:51] *** Joins: heco (~redrum@user/redrum88)
[20:23:31] *** Joins: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net)
[20:23:55] <ChrisWarrick> gitesh: it will read at least n characters, but possibly more, if the line is longer
[20:24:02] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 265 seconds)
[20:24:33] <ChrisWarrick> but then, if the content is shorter, you’ll probably get less than n… so why even bother having a parameter?
[20:24:41] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:24:48] *** Joins: graingert (sid128301@id-128301.tinside.irccloud.com)
[20:24:54] <graingert> can  unicodedata.normalize(form, unistr) ever fail?
[20:25:15] <gitesh> ChrisWarrick: why would it read more characters if I'm giving n in parameter?
[20:25:23] <graingert> specifically, can  unicodedata.normalize("NFKC", unistr) ever fail?
[20:25:24] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[20:25:25] <ChrisWarrick> gitesh: dunno, ask whoever wrote this line
[20:25:39] <gitesh> right
[20:25:50] *** Joins: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net)
[20:25:52] <ChrisWarrick> graingert: There’s only 0x110000 possibilities to check, I’d consider giving that a go ;)
[20:26:20] <graingert> I'll just ship it to the customers and let them find out for me
[20:26:27] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:27:43] <tunixman> t graingert https://stackoverflow.com/a/36338597 apparently only if you give it an invalid decoding spec (like "NFCK").
[20:27:55] <ChrisWarrick> graingert: python -c 'for i in range(0x110000): unicodedata.normalize("NFKC", chr(i))' doesn’t complain
[20:28:09] *** Joins: seds (sid492514@user/seds)
[20:28:51] <graingert> Nice KFC
[20:28:52] *** Joins: chwba (chwba@chwba.banana.ircnow.org)
[20:29:06] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:29:40] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:e885:507e:1ad2:36e8)
[20:29:58] <tunixman> KFC Decoding: 🍗
[20:30:00] *** Joins: greedom (~greedom@2001:16b8:2e8e:4a00:c39d:2e66:a3de:c401)
[20:30:18] *** Quits: padraigd (~Thunderbi@c-73-48-132-102.hsd1.ca.comcast.net) (Remote host closed the connection)
[20:30:22] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Ping timeout: 268 seconds)
[20:30:32] *** Quits: YaknotiS (~YaknotiS@user/yaknotis) (Remote host closed the connection)
[20:30:33] *** Joins: sajran (~Thunderbi@2a02:a317:e438:d900:904d:d2ed:7f33:3fbb)
[20:30:53] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:31:07] <zumba_addict> Good morning. I'm troubleshooting a blackbox that uses twistd. It looks like python is on 2.7. I'd like to know if twistd is reliable. It's because I've heard several complaints about app being problematic and unreachable sometimes.
[20:32:51] *** Joins: YaknotiS (~YaknotiS@user/yaknotis)
[20:33:18] <graingert> zumba_addict: you might like to ask in #twisted
[20:33:26] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:33:32] <zumba_addict> thank you
[20:33:38] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:34:06] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 258 seconds)
[20:34:24] *** Joins: szymon (~ugh@staticline-31-183-187-232.toya.net.pl)
[20:34:40] *** Quits: gloomy (~ldorigo@2a02:a03f:679e:e700:718d:8beb:946b:9ee7) (Ping timeout: 246 seconds)
[20:35:20] *** Joins: gloomy (~ldorigo@2a02:a03f:679e:e700:718d:8beb:946b:9ee7)
[20:35:24] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:36:04] *** Quits: Blankspace (~abcd@user/blankspace) (Quit: why did you ban me)
[20:36:39] *** Quits: supakeen (~user@python/site-packages/supakeen) (Remote host closed the connection)
[20:37:03] *** Joins: supakeen (~user@python/site-packages/supakeen)
[20:37:42] *** Joins: Celeo (~Celeo@user/celeo)
[20:37:55] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:37:59] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[20:38:28] *** Parts: sajran (~Thunderbi@2a02:a317:e438:d900:904d:d2ed:7f33:3fbb) ()
[20:38:33] *** Joins: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr)
[20:38:59] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0bd-162.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:39:00] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[20:39:19] *** Joins: Alan (~alan@user/alan)
[20:39:29] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[20:39:41] *** Joins: sajran (~Thunderbi@2a02:a317:e438:d900:904d:d2ed:7f33:3fbb)
[20:39:41] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:40:16] *** Joins: rajkosto (~rajkosto@cable-178-149-127-189.dynamic.sbb.rs)
[20:40:57] *** Joins: mkellis (~Calibellu@68.235.43.86)
[20:40:58] *** Quits: gloomy (~ldorigo@2a02:a03f:679e:e700:718d:8beb:946b:9ee7) (Ping timeout: 246 seconds)
[20:41:21] *** Joins: CodePoint (~CodePoint@2600:1700:3070:3790::41)
[20:41:40] *** Quits: boB_K7IQ (~boB_K7IQ@c-73-254-117-91.hsd1.wa.comcast.net) (Ping timeout: 246 seconds)
[20:41:46] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 258 seconds)
[20:42:19] *** Roey is now known as HolyBoxOfGlory
[20:42:30] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:44:15] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:44:18] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Ping timeout: 252 seconds)
[20:45:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 258 seconds)
[20:45:48] <bjs> gitesh: probably because it's supposed to return entire lines,  if it stopped exactly after n then maybe you wouldn't have a whole line
[20:46:36] <bjs> gitesh: the person who wrote the function could have decided to do it differently but I guess they thought this was more useful
[20:46:57] <gitesh> okay
[20:46:57] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:47:04] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (Ping timeout: 250 seconds)
[20:47:28] *** Quits: wattux (~wattux@212.51.23.106) (Quit: Client closed)
[20:47:56] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:48:43] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:50:26] <dale> ChrisWarrick: Now do all possible runs of 2--4 of those characters, I think. :)
[20:50:26] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Remote host closed the connection)
[20:51:16] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Ping timeout: 252 seconds)
[20:51:18] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:52:47] *** Quits: zeenk (~zeenk@2a02:2f04:a106:9600:82fb:aed9:ca9:38d3) (Quit: Konversation terminated!)
[20:53:04] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:53:31] *** Quits: greedom (~greedom@2001:16b8:2e8e:4a00:c39d:2e66:a3de:c401) (Remote host closed the connection)
[20:54:19] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:54:48] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[20:55:04] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[20:55:36] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[20:55:56] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 265 seconds)
[20:56:05] *** Joins: badsektor (~badsektor@user/badsektor)
[20:56:15] <zumba_addict> Folks, is this message something that we should be concerned about? https://bpa.st/O5PA
[20:56:23] *** Joins: zaquest (~notzaques@5.128.210.178)
[20:56:30] *** Joins: justinf210 (~justinf21@192-230-160-245.3rivers.net)
[20:56:38] *** Quits: justinf210 (~justinf21@192-230-160-245.3rivers.net) (Read error: Connection reset by peer)
[20:56:54] *** Quits: lbracher (~lbr@94.105.104.226.dyn.edpnet.net) (Ping timeout: 265 seconds)
[20:57:22] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[20:58:08] <grym> zumba_addict: eventually
[20:58:38] <zumba_addict> got it. So most likely it's not the cause for making our api intermittent
[20:59:09] *** Quits: ddavis (~user@24.98.77.213) (Remote host closed the connection)
[20:59:10] *** Joins: justinf210 (~justinf21@154.sub-97-43-192.myvzw.com)
[20:59:51] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:01:27] *** Quits: mcope (~matt@user/mcope) (Quit: Konversation terminated!)
[21:01:35] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[21:04:12] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:04:31] *** Joins: mumixam (~m@user/mumixam)
[21:04:38] <CrtxReavr> I fired up an old PC that I hadnt' powered on in some time.
[21:05:18] *** Joins: akaWolf (~akaWolf@akawolf.org)
[21:05:58] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[21:06:10] *** Joins: drew (~drew@user/drew)
[21:06:18] *** Quits: ponadm (pony@gateway/vpn/protonvpn/ponadm) (Ping timeout: 258 seconds)
[21:06:34] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 265 seconds)
[21:07:25] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[21:08:13] *** Quits: justinf210 (~justinf21@154.sub-97-43-192.myvzw.com) (Ping timeout: 258 seconds)
[21:08:23] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:09:39] *** Joins: justinf210 (~justinf21@65.sub-97-44-0.myvzw.com)
[21:09:40] *** Quits: todda7 (~torstein@2a02:587:3709:c419:1a5e:3e8a:ee7b:40ae) (Ping timeout: 246 seconds)
[21:10:09] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[21:11:11] *** Joins: matsaman (~matsaman@user/matsaman)
[21:12:41] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:12:57] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[21:13:00] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 268 seconds)
[21:13:13] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[21:14:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:14:19] *** Quits: justinf210 (~justinf21@65.sub-97-44-0.myvzw.com) (Ping timeout: 256 seconds)
[21:14:27] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[21:14:32] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[21:15:18] *** Joins: justinf210 (~justinf21@214.sub-97-43-193.myvzw.com)
[21:15:22] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[21:15:53] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 258 seconds)
[21:15:54] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[21:16:04] *** Joins: gloomy (~ldorigo@2a02:a03f:679e:e700:718d:8beb:946b:9ee7)
[21:16:43] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 265 seconds)
[21:16:59] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:17:21] *** Joins: wyclif (~wyclif@user/wyclif)
[21:17:32] *** Joins: i0e (~is0ke3@user/is0ke3)
[21:18:05] *** Quits: PdimH (~pdimh@user/pdimh) (Quit: May we meet again)
[21:18:22] *** Joins: Jigsy (~Jigsy@user/jigsy)
[21:18:45] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[21:19:22] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[21:19:42] *** Heldwin is now known as asmodee
[21:19:59] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[21:20:10] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Ping timeout: 246 seconds)
[21:20:47] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 2.3)
[21:21:20] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[21:21:24] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:21:36] *** Joins: FluffyMask (~FluffyMas@user/fluffymask)
[21:22:16] *** Joins: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net)
[21:22:30] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[21:23:11] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[21:23:45] *** Quits: cdown (~cdown@163.114.131.1) (Remote host closed the connection)
[21:23:59] *** Joins: cdown (~cdown@163.114.131.1)
[21:24:27] *** Quits: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com) (Ping timeout: 265 seconds)
[21:25:46] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:26:45] <dale> And you found two billion dollars in Bitcoin on it.
[21:26:49] *** Joins: mrkz_c (uid503554@user/mrkz-c/x-7247691)
[21:27:32] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[21:28:33] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[21:28:59] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[21:30:02] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:30:05] <ApostleInTriumph> Hello. I've two dict. I'd want a third dict which is an intersection based on keys. Even better if the third one is a defaultdict(list) where the values are of len == 2, consisting of the matching values
[21:30:09] *** Joins: magla (~gelignite@55d4555d.access.ecotel.net)
[21:31:46] <bjs> ApostleInTriumph: {k: (d1[k], d2[k]) for k in d1}
[21:31:49] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[21:31:54] <bjs> ApostleInTriumph: you mention defautldict though,  but not what you want the default to be ...
[21:31:55] <ApostleInTriumph> bjs thank you!
[21:32:06] *** Quits: redgloboli (~redglobol@user/redgloboli) (Read error: Connection reset by peer)
[21:32:22] <bjs> ApostleInTriumph: I missed a `if k in d2` at the end there sorry, `{k: (d1[k], d2[k]) for k in d1 if k in d2}`
[21:32:24] <ApostleInTriumph> I didn't understand the latter part of your second message, bjs
[21:32:27] <The-Compiler> ApostleInTriumph, bjs: What should happen if a key is in d2 but not d1, or vice-versa?
[21:32:41] *** Quits: diverdude (~undodre@176-21-102-230-cable.dk.customer.tdc.net) (Remote host closed the connection)
[21:32:51] <ApostleInTriumph> The-Compiler shouldn't be in the new dict
[21:33:03] <The-Compiler> ah, right, intersection, sorry :)
[21:33:19] *** Joins: redgloboli (~redglobol@user/redgloboli)
[21:33:35] <bjs> ApostleInTriumph: oh nevermind I think I see what you meant now,  you can just pass my dict to defaultdict
[21:33:49] *** Quits: riposte (~finalripo@2403-5800-3200-5c02--300.ip6.aussiebb.net) (Ping timeout: 246 seconds)
[21:34:13] <ApostleInTriumph> bjs yes, tuple or list shouldn't make a difference for my use case ;)
[21:34:18] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:35:52] *** Joins: control (guesswho@user/control)
[21:36:05] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[21:38:11] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[21:38:26] *** Quits: SyntheticClamor (~Synthetic@2a01cb04008a92007da59076e1b0ce8b.ipv6.abo.wanadoo.fr) (Remote host closed the connection)
[21:38:31] *** Joins: ano (~weechat@user/ano)
[21:38:35] *** Quits: Ha-Jo (~Thunderbi@2a01:c22:855e:ea00:1d4e:2f33:f5f1:9617) (Remote host closed the connection)
[21:38:41] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:38:47] *** Joins: Ha-Jo (~Thunderbi@2a01:c22:855e:ea00:208:caff:fe86:5ace)
[21:39:57] *** Joins: tbcr (~tbcr@user/tbcr)
[21:40:27] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[21:42:58] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:42:59] *** Joins: diek (~diek@187.36.4.113)
[21:43:02] <IHasFinger> Hello world, hope we are doing okay. I have an issue with senting a request to telegram using python. The issue is that it is very slow. I am not 100% sure if it python or telegram. this is snippest of my code which does the telegram part https://bpa.st/PZSA
[21:43:10] *** Quits: Meteorhead (~Meteorhea@static-qvn-qvs-164225.business.bouyguestelecom.com) (Quit: Client closed)
[21:44:45] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[21:44:52] *** Joins: mattyonweb (~user@dynamic-adsl-78-14-24-41.clienti.tiscali.it)
[21:45:32] *** Quits: gusto (~Augustus@109.255.100.54) (Ping timeout: 252 seconds)
[21:45:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:47:25] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:48:06] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:a874:b712:9670:8351) (Quit: Leaving)
[21:48:41] *** Quits: justinf210 (~justinf21@214.sub-97-43-193.myvzw.com) (Ping timeout: 268 seconds)
[21:48:42] *** Quits: diek (~diek@187.36.4.113) (Read error: Connection reset by peer)
[21:48:47] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:48:53] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a) (Ping timeout: 256 seconds)
[21:49:12] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[21:49:19] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[21:50:22] *** Quits: shibboleth (~shibbolet@gateway/tor-sasl/shibboleth) (Quit: shibboleth)
[21:51:02] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[21:51:48] *** Quits: rendar (~rendar@user/rendar) ()
[21:51:55] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:52:14] *** Joins: justinf210 (~justinf21@176.sub-97-44-0.myvzw.com)
[21:52:37] *** Joins: pycode (~pycode@2001:b07:5d28:551:12c4:2df1:94d2:d99d)
[21:53:00] *** Quits: justinf210 (~justinf21@176.sub-97-44-0.myvzw.com) (Read error: Connection reset by peer)
[21:53:04] *** Quits: odoood (~odoood@c-73-184-143-53.hsd1.ga.comcast.net) (Ping timeout: 258 seconds)
[21:53:19] *** Joins: justinf210 (~justinf21@176.sub-97-44-0.myvzw.com)
[21:53:23] *** Quits: lmmx (~louis@host-92-0-187-249.as13285.net) (Remote host closed the connection)
[21:53:42] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[21:53:46] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[21:54:14] *** Quits: pycode1 (~pycode@2001:b07:5d28:551:e65a:97da:9e:dda9) (Ping timeout: 250 seconds)
[21:55:27] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:2132:cd52:1e4a:f46a)
[21:56:11] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[21:57:48] *** Quits: justinf210 (~justinf21@176.sub-97-44-0.myvzw.com) (Ping timeout: 265 seconds)
[21:57:55] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[21:58:17] <deniska> IHasFinger: I don't see anything which should be inherently slow in that snippet
[21:58:45] *** Joins: greedom (~greedom@2001:16b8:2e8e:4a00:c39d:2e66:a3de:c401)
[21:59:01] *** Joins: justinf210 (~justinf21@11.sub-97-43-192.myvzw.com)
[21:59:12] *** Quits: CodePoint (~CodePoint@2600:1700:3070:3790::41) (Quit: WeeChat 3.0.1)
[21:59:13] *** Quits: ray (~ray@user/re) (Quit: WeeChat 3.1)
[21:59:25] *** Quits: hendursa1 (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[21:59:47] *** Quits: mikeliuk (~mikeliuk@213.205.198.125) (Quit: Connection closed)
[22:00:06] *** Joins: gusto (~Augustus@109.255.100.54)
[22:00:16] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[22:00:29] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[22:01:08] *** Joins: ice9 (~ice9@user/ice9)
[22:01:25] *** Joins: Fingel (fingel@2600:3c01::f03c:91ff:fee5:4830)
[22:01:48] <The-Compiler> IHasFinger: for starters, try adding a print before/after the requests.post so you can see whether it's just the HTTP request taking so long
[22:02:14] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[22:02:40] <IHasFinger> The-Compiler, it is the http request takes takes between 2-10 minutes which is why I am confused. I spoke to some telegram guys and they said it is nothing to do on their side
[22:03:04] *** Joins: ice99 (~ice9@user/ice9)
[22:03:13] *** Joins: riposte (~finalripo@2403-5800-3200-5c02--300.ip6.aussiebb.net)
[22:03:36] *** Quits: justinf210 (~justinf21@11.sub-97-43-192.myvzw.com) (Ping timeout: 265 seconds)
[22:04:02] <SnoopJ> have you performed a traceroute? Could be something slow in the middle.
[22:04:24] *** Joins: justinf210 (~justinf21@176.sub-97-44-0.myvzw.com)
[22:04:34] <IHasFinger> SnoopJ, i am not getting any error to even look at the traceroute
[22:04:52] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[22:05:14] <The-Compiler> IHasFinger: maybe try reproducing with something like curl too?
[22:05:16] <SnoopJ> beg pardon?
[22:05:34] <SnoopJ> IHasFinger, you don't need to have an error to run a traceroute
[22:05:53] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[22:06:15] <SnoopJ> and understanding the time spent in each leg of the journey may help you identify the slowness if it's not on the ends
[22:06:38] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[22:08:10] *** Quits: qunzhong_luxian (~qunzhong_@68.235.43.110) (Quit: Textual IRC Client: www.textualapp.com)
[22:08:29] <IHasFinger> okay will google around and see how to do those as i am still new to python
[22:08:43] *** Quits: justinf210 (~justinf21@176.sub-97-44-0.myvzw.com) (Ping timeout: 256 seconds)
[22:09:09] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[22:09:33] *** Quits: Lando-SpacePimp (~LandoCal@user/lando-spacepimp) (Ping timeout: 258 seconds)
[22:09:39] <IHasFinger> SnoopJ, something like this? https://stackoverflow.com/questions/10588644/how-can-i-see-the-entire-http-request-thats-being-sent-by-my-python-application/16630836#16630836
[22:10:03] *** Quits: greedom (~greedom@2001:16b8:2e8e:4a00:c39d:2e66:a3de:c401) (Remote host closed the connection)
[22:10:08] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[22:10:49] *** Joins: greedom (~greedom@2001:16b8:2e8e:4a00:c39d:2e66:a3de:c401)
[22:11:13] *** Quits: mborus (~mborus@2001:16b8:6f85:b200:cd48:480b:a0f1:6e66) (Quit: Client closed)
[22:11:50] <SnoopJ> IHasFinger, no. I am talking about time spent on the wire *after* your request leaves your machine. It takes time to get to its destination, and will in general pass through several intermediates
[22:12:03] *** Joins: visl (sid453966@user/visl)
[22:12:49] <raek> IHasFinger: "traceroute" is a network tool that you likely already have on your computer. it is unrelated to python.
[22:13:15] *** Quits: control (guesswho@user/control) (Ping timeout: 256 seconds)
[22:13:41] <raek> (maybe you confused this with a "traceback", which is often displayed when an exception is raised)
[22:14:04] <raek> (which is a completely different and unrelated thing)
[22:14:08] *** Quits: GiLgAmEzH (~gilgamezh@186.19.69.139) (Ping timeout: 252 seconds)
[22:14:21] *** Joins: jamea (~jamea77@10.189-202-213.bestelclientes.com.mx)
[22:14:34] <petemc> you could test the same request with curl -X POST -vvv
[22:14:45] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[22:15:03] <jamea> -vvv is for?
[22:15:19] <petemc> extra verbosity
[22:15:20] *** Joins: dshikoh (~dshikoh@user/dshikoh)
[22:15:20] <SnoopJ> If the chain of connections is A -> ??? -> B, traceroute can tell you that the full route is A -> C -> D -> E -> B and the time spent on each step (the ->s)
[22:16:02] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[22:16:10] <SnoopJ> if node D is poorly configured, for example, it might not matter how fast A->C and E->B are
[22:16:12] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[22:16:39] <SnoopJ> (or if one of those nodes is deliberately deprioritizing your traffic, like an ISP doing "traffic shaping")
[22:17:49] *** Parts: wyclif (~wyclif@user/wyclif) ()
[22:18:31] *** Joins: bomb-on (~bomb-on@213.220.123.166)
[22:19:28] *** Joins: pnoud (~pnoud@user/pnoud)
[22:22:05] *** Joins: drincruz (~drincruz@ec2-18-235-23-153.compute-1.amazonaws.com)
[22:23:13] *** Quits: bomb-on (~bomb-on@213.220.123.166) (Client Quit)
[22:23:26] *** Joins: qunzhong_luxian (~qunzhong_@68.235.43.142)
[22:24:15] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[22:24:23] *** Quits: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch) (Ping timeout: 265 seconds)
[22:24:24] *** Quits: pnoud (~pnoud@user/pnoud) (Ping timeout: 252 seconds)
[22:24:52] *** Quits: drincruz_ (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 265 seconds)
[22:26:12] <anddam> if I have a "foo@ git+ssh://" dependency in setup.py install_requires does it override an already existing "foo" package in environment?
[22:26:36] <anddam> case in point I have a build script calling for setuptools for a library, but I need to provide a local version of one of its dependencies
[22:26:36] *** Joins: bungle (~bungle@77-147-16-94.dyn.cable.fcom.ch)
[22:27:22] *** Joins: goldfish (~goldfish@user/goldfish)
[22:27:22] <anddam> I thought about just installing the local lib before calling "pip install ." on the package thus letting setuptools see the dependency as already satisfied
[22:27:39] <anddam> nedbat: IIRC there's ticket of yours asking for straight file:/// support in setuptools
[22:28:06] <anddam> btw is the official, post-merge name "setuptools" or "distutils"?
[22:28:21] *** Quits: greedom (~greedom@2001:16b8:2e8e:4a00:c39d:2e66:a3de:c401) (Remote host closed the connection)
[22:29:19] *** Joins: greedom (~greedom@2001:16b8:2e8e:4a00:c39d:2e66:a3de:c401)
[22:30:28] *** Joins: nre (~nre@55d460e8.access.ecotel.net)
[22:30:33] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[22:30:51] <gerikson> hi, new to #python, is ##python a thing here and was it a thing on Old Freenode?
[22:31:32] <graingert> gerikson: I think ##python was "invite only" and empty
[22:31:36] <graingert> on freenode
[22:31:41] <graingert> it still exists here
[22:31:42] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[22:31:44] <gerikson> thanks graingert
[22:31:57] <The-Compiler> well it mainly exists because a couple of people joined there, probably accidentally
[22:32:05] <gerikson> I'm idling here and on FN, plan is to do so for a week or two and compare traffic
[22:32:08] <The-Compiler> but this is the official and by far most active python channel
[22:32:20] <The-Compiler> #python (and ##python) on Freenode are pretty dead
[22:32:28] <gerikson> yeah they are
[22:32:32] <graingert> I can't event connect to FN
[22:32:43] <gerikson> IRCcloud?
[22:32:46] <graingert> yep
[22:32:53] * gerikson shakes head
[22:32:55] <graingert> can't/won't/both
[22:33:29] <gerikson> it's pretty amazing that banning IRCloud was just *one* of the escalating number of things Lee/Freenode staff did
[22:33:37] <gerikson> anyway off-topic, thanks for clearing that up
[22:33:48] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[22:34:16] <graingert> #python-offtopic talks about leednode a lot
[22:34:28] <graingert> leenode*
[22:34:58] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 250 seconds)
[22:35:43] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Quit: Hay te huacho!)
[22:35:48] <gerikson> I'm in ##freenode already ;)
[22:36:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:36:08] <gerikson> I'm mainly interested in the sociological aspects
[22:36:50] <bjs> gerikson: python.org/ points to here now, so I suspect most people are here
[22:37:11] *** Joins: fofoni (~fofoni@user/fofoni)
[22:37:19] *** Joins: lidenbrock (~lidenbroc@2804:14c:32:8120:b5ea:17c2:30ba:3c57)
[22:37:38] *** Joins: clawh_ (~clawh@185.244.214.60)
[22:37:39] *** Quits: clawh (~clawh@185.244.214.60) (Quit: Leaving)
[22:38:50] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:39:00] *** Quits: sajran (~Thunderbi@2a02:a317:e438:d900:904d:d2ed:7f33:3fbb) (Read error: Connection reset by peer)
[22:39:12] *** Joins: sajran (~Thunderbi@89-64-34-85.dynamic.chello.pl)
[22:41:13] *** Quits: lidless (~lidless@user/jabberwock) (Read error: Connection reset by peer)
[22:41:27] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[22:41:32] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[22:41:47] *** Joins: lidless (~lidless@user/jabberwock)
[22:42:43] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[22:43:36] *** Quits: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net) (Client Quit)
[22:43:58] *** Joins: Diemuzi (~Diemuzi@ip68-106-203-17.pn.at.cox.net)
[22:44:36] *** Joins: hyperknot (~hyperknot@dynamic-046-114-095-240.46.114.pool.telefonica.de)
[22:46:44] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 258 seconds)
[22:46:53] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[22:46:59] <anddam> I do not understand the proper project specifier for a git dependency at https://setuptools.readthedocs.io/en/latest/userguide/dependency_management.html#id6
[22:47:52] <anddam> first of all that pages only describes dependency_links, while at same time stating support has been dropped in pip 19
[22:48:22] *** Quits: gloomy (~ldorigo@2a02:a03f:679e:e700:718d:8beb:946b:9ee7) (Ping timeout: 246 seconds)
[22:49:10] <anddam> then I see that a simple "git+ssh://git@myrepo/path@my-branck" is not accepted, resuilting in     error in my_project setup command: 'install_requires' must be a string or list of strings containing valid project/version requirement specifiers; Parse error at "'+ssh://g'": Expected stringEnd
[22:50:01] <anddam> but I do have an existing file using "foo@ git+ssh://git@myrepo/path@my-branch"   and that works just fine, setuptool eats that, digests it and install from a clone
[22:50:17] <anddam> but where is that "foo@ " syntax described in docs?
[22:50:20] <hyperknot> Hi, I'm trying to debug why is pytest "eating" my logging. If I put a print line everything works, if I do logging.error() it doesn't show up.
[22:50:22] <anddam> I am not able to find it
[22:50:32] <hyperknot> I use -s / --capture=no
[22:50:37] <anddam> hyperknot: iirc it's supposed to
[22:51:13] *** Quits: pycode (~pycode@2001:b07:5d28:551:12c4:2df1:94d2:d99d) (Ping timeout: 256 seconds)
[22:51:26] <hyperknot> so how can I make it display log lines in console?
[22:51:38] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:e885:507e:1ad2:36e8) (Quit: Client closed)
[22:51:50] *** Joins: hendursaga (~weechat@user/hendursaga)
[22:52:00] <anddam> no my bad, unittest was supposed to, pytest could be persuaded to be more lenient
[22:52:07] *** Quits: Ha-Jo (~Thunderbi@2a01:c22:855e:ea00:208:caff:fe86:5ace) (Quit: Ha-Jo)
[22:52:32] *** Joins: ponadm (pony@gateway/vpn/protonvpn/ponadm)
[22:53:07] <bjs> hyperknot: you should still see the logs for failing assertions
[22:53:12] <bjs> hyperknot: see https://docs.pytest.org/en/6.2.x/logging.html
[22:53:54] *** Quits: lidless (~lidless@user/jabberwock) (Read error: Connection reset by peer)
[22:53:54] *** Joins: glumanda (~manu@194-208-201-025.tele.net)
[22:53:58] *** Joins: pycode (~pycode@2001:b07:5d28:551:4f1d:b3ff:349:2031)
[22:54:02] <hyperknot> bjs: OK I see them with an assert False
[22:54:08] *** Joins: lidless (~lidless@user/jabberwock)
[22:54:22] <hyperknot> it's just that while developing tests, I'd love to see the internal logging commands, just like print lines
[22:54:33] *** Quits: Masklin_Gurder (~joel@93.182.183.85) (Quit: Konversation terminated!)
[22:54:34] *** Joins: Masklin (~joel@93.182.183.85)
[22:54:43] *** Joins: Betal (~Beta@user/betal)
[22:55:09] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[22:56:04] <hyperknot> I think it's this one: log_cli = True
[22:56:56] <bjs> hyperknot: you can, read that page (esp the part about Live Logs)
[22:56:57] <bjs> yes
[22:57:18] <hyperknot> great, thanks!
[22:57:35] *** Joins: Pickchea (~private@user/pickchea)
[22:59:47] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[22:59:53] <douglaswinship> I'm trying to write a setup.py for my project. The trouble is that my project depends on a third party library, one which isn't available on pip. Is there a good way to handle that scenario?
[23:00:05] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[23:00:10] <graingert> douglaswinship: why's it not on pypi.org?
[23:00:13] <grym> douglaswinship: where is it available?
[23:00:17] <douglaswinship> graingert: no idea.
[23:00:24] <graingert> put it on pypi.org
[23:00:51] *** Quits: ice99 (~ice9@user/ice9) (Ping timeout: 256 seconds)
[23:00:57] *** Joins: ray (~ray@user/re)
[23:00:57] <graingert> douglaswinship: can you link to it?
[23:01:14] <habnabit_> douglaswinship, what _is_ it?
[23:01:31] <douglaswinship> The other library is publically available on github, and I've incuded their whole repo as a subfolder inside my repo, as a git submodule. So I can guarantee that the code is available. I'm just not sure if there's a good way to tell setup.py about that.
[23:01:43] <graingert> can you paste the URL here
[23:01:49] <douglaswinship> habnabit_: it's a library for running an RFID reader, from a raspberry pi
[23:02:08] <douglaswinship> graingert: sure. Bear with me, i'll have to dig it out
[23:02:22] *** Quits: pycode (~pycode@2001:b07:5d28:551:4f1d:b3ff:349:2031) (Ping timeout: 246 seconds)
[23:02:25] <tunixman> t douglaswinship If here's an article about installing packages not in pypi with a requirements.txt file https://codeinthehole.com/tips/using-pip-and-requirementstxt-to-install-from-the-head-of-a-github-branch/
[23:02:55] <douglaswinship> https://github.com/pimylifeup/MFRC522-python.git
[23:03:04] *** Joins: pycode (~pycode@2001:b07:5d28:551:88f0:615f:6154:12f)
[23:03:59] *** Joins: ice9 (~ice9@user/ice9)
[23:04:02] <graingert> douglaswinship: its here https://pypi.org/project/mfrc522/
[23:04:15] <douglaswinship> graingert: huh.
[23:04:25] <graingert> douglaswinship: remember it's License: GNU General Public License v3 (GPLv3)
[23:05:44] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[23:05:58] <douglaswinship> graingert: yup. I was going to get some help looking into that, and understanding how to correctly reference it and give attribution so that I comply with the license.
[23:06:03] *** Joins: ice9 (~ice9@user/ice9)
[23:06:34] <douglaswinship> I'm not really planning on disseminating my own code, it's just a practice project. But to whatever extent I do disseminate my code, I'll make sure it complies with the license.
[23:06:54] *** Quits: greedom (~greedom@2001:16b8:2e8e:4a00:c39d:2e66:a3de:c401) (Quit: Konversation terminated!)
[23:07:03] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[23:07:16] <douglaswinship> also: that's weird. I could have sworn i tried "pip3 install mfrc522" and it wasn't recognized. That's why i assumed it wasn't on pypi.
[23:07:19] *** Joins: greedom (~greedom@2001:16b8:2e8e:4a00:c39d:2e66:a3de:c401)
[23:07:54] <graingert> douglaswinship: don't use `pip3`
[23:07:54] *** Quits: ulu (~ulu@user/ulu) (Ping timeout: 250 seconds)
[23:08:10] <graingert> use path/to/your/virtual/environment/bin/python -m pip install
[23:08:19] <graingert> the licence here is LGPL: https://github.com/pimylifeup/MFRC522-python/blob/970e903c994ff4c5f30bc7d5f22dd31ca0b1da91/mfrc522/MFRC522.py#L11
[23:08:24] *** Quits: hyperknot (~hyperknot@dynamic-046-114-095-240.46.114.pool.telefonica.de) (Quit: Textual IRC Client: www.textualapp.com)
[23:08:53] <IHasFinger> anyone know much about linux and python here?
[23:09:28] *** Quits: anas (~anas@196.224.51.199) (Ping timeout: 268 seconds)
[23:09:30] <habnabit_> IHasFinger, let's say yes
[23:09:34] <douglaswinship> IHasFinger: I use python on linux every day, if that counts.
[23:09:57] <douglaswinship> I think a lot of us in here do.
[23:10:16] <IHasFinger> https://bpa.st/6YGQ ufw is allowing request on all port 80, 443. However my post request requests.post(self.telegram_url + '/sendMessage', data=params) is not sending
[23:10:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[23:10:47] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 265 seconds)
[23:10:48] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[23:11:09] <douglaswinship> graingert: re "don't use pip3" I actually do do that. "python3 -m pip...." I'm not sure why I wrote it as 'pip3' here.
[23:11:17] <habnabit_> IHasFinger, these are the firewall rules for the server?
[23:11:48] <IHasFinger> habnabit_, yes i can disable ufw but it still does not get sent
[23:12:10] <habnabit_> IHasFinger, if you disable ufw and still have the problem, what makes you think it's ufw's fault?
[23:12:12] <douglaswinship> IHasFinger: can you show us the traceback for when the request fails?
[23:12:40] *** Quits: pycode (~pycode@2001:b07:5d28:551:88f0:615f:6154:12f) (Ping timeout: 250 seconds)
[23:12:48] *** Joins: Konsgn (~Konsgnx3@66-109-34-138.static.firstlight.net)
[23:12:56] *** Joins: ice9 (~ice9@user/ice9)
[23:13:37] <IHasFinger> douglaswinship, still figuring out how to do that
[23:13:39] <Konsgn> hi all, how can i import a function into a class so that the subfuntion can be called out with Mainclass.subclass(args)
[23:14:22] <habnabit_> Konsgn, why do that instead of import it into the module?
[23:14:43] <grym> Konsgn: @classmethod, but in general, why bother
[23:14:44] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[23:15:07] <catern> type objects should implement __contains__ as isinstance, so I can do "1 in int" instead of "isinstance(1, int)"
[23:15:34] <Konsgn> i want to seperate out the naming so it's clearer, main.util.a() vs main.cal.a()
[23:15:42] <habnabit_> catern, that looks excessively clever
[23:15:56] <habnabit_> Konsgn, namespacing is done in python with modules, not classes
[23:16:10] <graingert> douglaswinship: https://github.com/pimylifeup/MFRC522-python/pull/41
[23:16:28] <Konsgn> but the util class calls out the main class instance.
[23:16:37] *** Quits: drew (~drew@user/drew) (Remote host closed the connection)
[23:16:38] <catern> habnabit_: obviously I disagree
[23:16:42] <IHasFinger> douglaswinship, the internet has too many ways of doing it not sure which one is still valid and i do not have any book which shows this. can you point me to the right article for setting up the traceback
[23:17:43] <habnabit_> IHasFinger, there's nothing to 'set up'. python will output the error message and context information when there's an error. you put that full output into a pastebin
[23:18:21] *** Joins: gloomy (~ldorigo@2a02:a03f:679e:e700:718d:8beb:946b:9ee7)
[23:18:34] *** Quits: rannnn8888 (~rannnn888@bzq-79-182-123-214.red.bezeqint.net) (Ping timeout: 246 seconds)
[23:18:37] <IHasFinger> habnabit_, the traceback is nothing to do with python, its for the ubuntu server he is referring to
[23:18:53] <habnabit_> IHasFinger, then how did you know the http request fails?
[23:18:58] <IHasFinger> p.s. requests.post is not throwing up any error
[23:19:01] *** Joins: currybullen (~curry@h-81-170-128-138.A258.priv.bahnhof.se)
[23:19:03] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[23:19:03] <IHasFinger> which makes it more interesting
[23:19:13] <Konsgn> Bah, so module wise, i need to make a subfolder called util and another called cal?
[23:19:22] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[23:19:26] <IHasFinger> habnabit_, message is not showing on telegram
[23:19:31] <habnabit_> Konsgn, with __init__.py files in each yes
[23:19:32] *** Joins: diek (~diek@187.36.4.113)
[23:19:37] <jamea> ChrisWarrick worked...
[23:19:38] <habnabit_> IHasFinger, is this a telegram bot?
[23:19:46] <Konsgn> damn
[23:19:55] <jamea> now how to loop on MATRIX 3 in first coulmn i want detect the  minimal value: https://bpa.st/NSOA
[23:20:19] <currybullen> is there a "pythonic way" of creating a copy of a frozen dataclass and modifying one or two attributes in the process?
[23:20:23] <IHasFinger> i have a print of what the message should be before it is posted, tail -f output.log is showing the messages okay but it is not sending
[23:20:36] <habnabit_> IHasFinger, how did you start the bot running?
[23:20:38] <IHasFinger> if i run the same code on my local pc which is windows 10. the message gets sent
[23:20:46] <grym> currybullen: dataclasses.replace
[23:21:05] <grym> (what attrs calls .evolve())
[23:21:17] <currybullen> grym: very nice, thank you
[23:21:29] <IHasFinger> habnabit_, https://bpa.st/CFDA
[23:21:51] <habnabit_> IHasFinger, ok, but how do you start that python code running?
[23:22:19] <IHasFinger> I use something called supervisord
[23:22:41] <habnabit_> IHasFinger, ok. and that's what writes output.log?
[23:23:22] <IHasFinger> https://bpa.st/AQOA
[23:23:24] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:23:29] <IHasFinger> command=/usr/bin/python3 -u bot.py
[23:23:38] <IHasFinger> bot.py is https://bpa.st/CFDA
[23:23:47] <habnabit_> IHasFinger, this says telegram.log and error.log. are you looking at the wrong log file?
[23:23:50] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 265 seconds)
[23:24:00] *** Quits: currybullen (~curry@h-81-170-128-138.A258.priv.bahnhof.se) (Quit: WeeChat 3.2)
[23:24:09] *** Parts: mattyonweb (~user@dynamic-adsl-78-14-24-41.clienti.tiscali.it) (ERC (IRC client for Emacs 27.2))
[23:24:15] <douglaswinship> IHasFinger: this is probably a late reply, but when I said traceback, I did indeed mean the Python traceback. I was asking what error message you see in Python.
[23:24:17] *** Joins: currybullen (~curry@h-81-170-128-138.A258.priv.bahnhof.se)
[23:24:40] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[23:24:54] <IHasFinger> habnabit_, the error.log is empty which means no error from supervisor
[23:25:09] <IHasFinger> stdout_logfile=/var/volume-bot/telegram.log
[23:25:23] <IHasFinger> this is where all the print or python errors will go to
[23:25:26] *** Joins: Jigsy (~Jigsy@user/jigsy)
[23:25:50] <IHasFinger> the telegram.log file is showing all my print and pprint but no error
[23:25:56] *** Quits: lidenbrock (~lidenbroc@2804:14c:32:8120:b5ea:17c2:30ba:3c57) (Quit: Client closed)
[23:26:25] *** Joins: jw_ (~njw@58.182.164.99)
[23:26:26] *** Joins: thiras (~thiras@user/thiras)
[23:26:26] <IHasFinger> douglaswinship, already, I am not getting any error from python
[23:26:32] <habnabit_> IHasFinger, you have redirect_stderr=true which puts the errors into the stdout file too
[23:26:41] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[23:26:44] <habnabit_> IHasFinger, so you own both the client and server end here?
[23:27:05] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[23:27:13] <graingert> douglaswinship: I'd say this project is unusable and you shouldn't even look at the source code
[23:27:19] <IHasFinger> habnabit_, yeah
[23:27:20] <jamea> i have this variable: xVal = [0.1496063  0.08502667 0.81305563 0.51498603 0.35585471 0.3495047  0.32499365 0.77165354 0.41605283 0.35255271 0.32715265 0.32499365 0.03505207 0.99060198 0.71755144 0.54610109]
[23:27:24] <jamea> how to iterate?
[23:27:31] <habnabit_> jamea, how about a for loop
[23:28:03] <graingert> jamea: I get SyntaxError: invalid syntax
[23:28:09] <graingert> it looks like you're missing a comma
[23:28:19] <douglaswinship> IHasFinger: something that might be useful: when you run the function "requests.post()" it returns something called a response object. I usually write code like 'response = requests.post(...'. That response object contains information like the http response codes. If you interrogate that object, you can find out more about what happened to the http call.
[23:28:29] <douglaswinship> (One sec, i'll go into a bit more detail)
[23:28:31] <graingert>     xVal = [0.1496063  0.08502667 0.81305563 0.51498603 0.35585471 0.3495047  0.32499365 0.77165354 0.41605283 0.35255271 0.32715265 0.32499365 0.03505207 0.99060198 0.71755144 0.54610109]
[23:28:31] <graingert>             ^^^^^^^^^^^^^^^^^^^^^
[23:28:31] <graingert> SyntaxError: invalid syntax. Perhaps you forgot a comma?
[23:28:48] <jamea> yes
[23:28:51] <graingert> response.history is handy
[23:28:52] <habnabit_> IHasFinger, use tcpdump or wireshark to trace the network traffic on both ends
[23:28:56] <jamea> changed the way for resolve the problem:
[23:28:58] <IHasFinger> hey graingert looking at your git profile picture you look so much like one of my drinking buddy Nathan :)
[23:29:01] *** Joins: anas (~anas@196.224.51.199)
[23:29:11] <graingert> IHasFinger: it's quite an old photo now :p
[23:29:22] *** Quits: dshikoh (~dshikoh@user/dshikoh) (Quit: Konversation terminated!)
[23:29:23] *** Quits: currybullen (~curry@h-81-170-128-138.A258.priv.bahnhof.se) (Quit: WeeChat 3.2)
[23:29:38] <jamea> for xVal in MatrixMP3: print(xVal[1,:], end=' ')   give me too many indices for array: array is 1-dimensional, but 2 were indexed   how to ignore rest of columns i only interested in 1 by moment
[23:29:41] *** Joins: currybullen (~curry@h-81-170-128-138.A258.priv.bahnhof.se)
[23:29:42] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[23:30:04] <douglaswinship> IHasFinger: so for instance, if you got a 404 Error, then python would store information about that 404 error in the response object. As far as python is concerened, there was no error. Python successfully sent an http request, and successfully stored the http response. So Python doesn't raise any kind of exception, even though the http request iteself wasn't successful.
[23:30:33] <habnabit_> jamea, your array doesn't have columns at all
[23:30:40] <habnabit_> jamea, why did you do xval[1,:] ?
[23:31:09] <douglaswinship> IHasFinger: the easiest thing to do with the response object is `response.raise_for_status()`. If there was any sort of http error (like a 404, or an authorization error) then raise_for_status() will raise a Python Exception, and then your Python program will know there's a problem, and start showing the error.
[23:31:12] *** Quits: rememberYou (~someone@user/rememberyou) (Ping timeout: 258 seconds)
[23:31:27] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[23:31:37] <jamea> interested in loop of the first column...
[23:31:46] *** Quits: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch) (Ping timeout: 246 seconds)
[23:31:48] <jamea> i am thinking in traspose the matrix
[23:31:55] <habnabit_> jamea, but there is no 'first column' because your array doesn't have columns
[23:32:00] <habnabit_> jamea, it's 1-dimensional
[23:32:05] *** Joins: control (guesswho@user/control)
[23:32:26] *** Joins: pycode (~pycode@2001:b07:5d28:551:1918:5a1d:f8ce:1754)
[23:32:36] <jamea> https://bpa.st/JOPQ  my array is: 1-6 dimension interested in 1 dimension
[23:32:40] <jamea> how to loop?
[23:32:42] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[23:32:44] *** Quits: szymon (~ugh@staticline-31-183-187-232.toya.net.pl) (Remote host closed the connection)
[23:32:54] *** Quits: ajb (~ajb@cupid.whatbox.ca) (Quit: bye)
[23:33:10] <IHasFinger> douglaswinship, thanks will print out the response and see
[23:33:16] <matsaman> jamea: what value/s do you want, for example
[23:33:17] <habnabit_> jamea, delete the [1,:]
[23:33:18] <jamea> check lines 35 to 50 i am interested in values: 0.1496063, 0.08502667, 0.81305563, 0.51498603 and so on
[23:33:49] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[23:33:59] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 265 seconds)
[23:34:00] <habnabit_> jamea, you've already sliced that out of the data on L7; doing it again on L18 doesn't make sense
[23:34:25] <douglaswinship> graingert: i'm just catching up on the rest of the chat: why did you say the MFRC522 project was unusable? Was it because of the mixed up Licenses? Or a different reason?
[23:34:31] <habnabit_> jamea, the extra dimensions are gone
[23:34:37] <graingert> douglaswinship: mixed up licences
[23:34:44] <IHasFinger> douglaswinship, response.raise_for_status() i put this before the post request or after?
[23:35:23] <graingert> IHasFinger: if you put it before you'll get a NameError
[23:35:24] *** Quits: diek (~diek@187.36.4.113) (Read error: Connection reset by peer)
[23:35:43] *** Joins: Madda (~Madda@208.249.9.51.dyn.plus.net)
[23:35:57] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[23:37:34] <jamea> habnabit_ i want loo on these values: https://postimg.cc/VSxgjqVH  (red rectangle)
[23:37:53] *** Quits: jw_ (~njw@58.182.164.99) (Quit: jw_)
[23:38:08] *** HolyBoxOfGlory is now known as Roey
[23:38:15] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[23:38:17] <jamea> *loop
[23:38:25] *** Quits: nre (~nre@55d460e8.access.ecotel.net) (Quit: Leaving.)
[23:38:59] <habnabit_> jamea, for xVal in MatrixMP3[0,:]: print(xVal)
[23:40:10] *** Quits: LuKaRo (~LuKaRo@p200300dfa7179750b8479f8851bd7c97.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[23:40:24] <jamea> habnabit_ better: for xVal in MatrixMP3.T[0,:]: print(xVal)
[23:40:26] <douglaswinship> IHasFinger: it would have to be after. The response object is created by the 'request.post' function. It's the return value from that function. So you have to capture it first, and assign it to a variable. So you take your line that says `requests.post(....` and you change it to `response = requests.post(...`. Then you call `response.raise_for_status()`. In this example `response` is just a
[23:40:28] <jamea> thanks
[23:40:32] <douglaswinship> variable name, it could be anything. so you could also do `brian = requests.post(...` and then `brian.raise_for_status()`.
[23:40:49] <jamea> exist a way for detect minimal value of these column?
[23:40:54] <IHasFinger> douglaswinship, i did a pprint.pprint on the response and all i got is <Response [400]>
[23:41:06] <habnabit_> jamea, eh? arr.T[0,:] is better written as arr[:,0]
[23:41:22] <IHasFinger> thought it will give me more
[23:41:28] <habnabit_> jamea, you don't need a transpose if you can swap the dimensions like that
[23:42:11] <habnabit_> jamea, but the data you highlighted is arr[0,:], not arr.T[0,:]
[23:42:13] *** Quits: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[23:42:38] *** Joins: tmart (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[23:43:00] *** Joins: LuKaRo (~LuKaRo@p200300dfa71797375776d016cf464e3b.dip0.t-ipconnect.de)
[23:43:07] <jamea> if not use .T print, the first row...
[23:43:27] <douglaswinship> IHasFinger: you're seeing the string representation of a response object. And that's all the information that exists in the string representation. But there's more information in the actual object. Try `pprint.pprint(response.__dict__)` instead. That should access some more of the response attributes.
[23:43:39] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[23:44:00] *** Quits: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net) (Ping timeout: 268 seconds)
[23:44:18] <douglaswinship> IHasFinger: you shouldn't usually use __dict__ in 'propper' code. You're sort of looking at the internal workings. But it's a good way of investigating things and learning about an object, if you don't know what attributes it's supposed to have.
[23:44:25] *** Joins: pneff (~pneff@46-127-136-42.dynamic.hispeed.ch)
[23:44:47] <jamea> habnabit_: https://bpa.st/CTDA
[23:44:50] *** Joins: regeya (~regeya@50.45.24.247)
[23:44:50] <douglaswinship> IHasFinger: incidentally "400" is a html response code that means "Bad Request", so something was wrong with the request that you're sending.
[23:45:04] *** Quits: spithash (~spithash@user/spithash) (Quit: leaving)
[23:45:07] <douglaswinship> Or at least, the server thinks there is.
[23:45:12] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[23:45:12] *** Quits: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57) (Remote host closed the connection)
[23:45:25] *** Joins: diek (~diek@2804:14d:7681:82bd:e84f:20c9:c5ab:ee57)
[23:45:32] <graingert> douglaswinship: http not html
[23:45:50] *** Joins: spithash (~spithash@user/spithash)
[23:45:50] <douglaswinship> graingert: did i say html? damn. Good catch. :)
[23:45:54] <habnabit_> jamea, https://replit.com/@habnabit/LikelyPuzzledCoins
[23:46:03] <IHasFinger> douglaswinship, yeah server things something is wrong with it but code is fine when i run it locally
[23:46:18] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Quit: Leaving)
[23:46:19] <douglaswinship> How do you mean code is fine?
[23:46:23] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[23:46:35] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[23:46:35] *** Quits: regeya (~regeya@50.45.24.247) (Client Quit)
[23:47:00] <habnabit_> IHasFinger, clearly something is different. you can use tcpdump or wireshark to look at the exact request on the wire
[23:47:10] *** Quits: pycode (~pycode@2001:b07:5d28:551:1918:5a1d:f8ce:1754) (Ping timeout: 246 seconds)
[23:47:19] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[23:49:22] *** Joins: ntdll (~ntdll@user/ntdll)
[23:49:54] *** Quits: milosz (~milosz@user/milosz) (Quit: Leaving)
[23:49:55] *** Joins: Lando-SpacePimp (~LandoCal@user/lando-spacepimp)
[23:51:30] <douglaswinship> IHasFinger: have you been able to successfully send the same kind of request to the server in some other way, from the same computer? When I first started experimenting with requests and with http APIs, I used curl to send a request (no python involved). I did that to check that I knew how to send an http request properly, and that the server would reply properly. Then I'd try to send the same
[23:51:36] <douglaswinship> request using python and the requests library. If it worked with curl, and failed in python, then i knew i was doing something wrong in the python code. I never learned how to use tcpdump or wireshark, but it sounds like they would have been really useful. I would have been able to see the difference between what curl sent, and what python sent.
[23:52:01] *** Quits: CrunchyChewie (~CrunchyCh@user/crunchychewie) (Ping timeout: 268 seconds)
[23:52:10] *** Quits: doev (~doev@p54a71872.dip0.t-ipconnect.de) (Ping timeout: 246 seconds)
[23:52:14] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[23:52:21] *** Joins: CrunchyChewie (~CrunchyCh@user/crunchychewie)
[23:52:38] <douglaswinship> habnabit_: incidentally, I might try and look at tcpdump and wireshark some day. Are they hard to learn how to use?
[23:52:45] <habnabit_> douglaswinship, not really
[23:53:30] *** Quits: srhm (~ascii@user/srhm) (Ping timeout: 252 seconds)
[23:53:34] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[23:53:56] <douglaswinship> Good to know
[23:54:16] *** Joins: regeya (~user@50.45.24.247)
[23:55:45] *** Parts: regeya (~user@50.45.24.247) ()
[23:55:51] *** Joins: pycode (~pycode@2001:b07:5d28:551:55a8:758a:ed3c:7d94)
[23:56:45] *** Joins: ______GOD______ (~GOD@user/god/x-9778998)
[23:57:00] *** Joins: ice9 (~ice9@user/ice9)
[23:57:38] *** Joins: Coder_000 (~u0_a117@177.10.203.30)
[23:57:44] *** Joins: tim__ (~tmart@47-220-53-233.gtwncmkt04.res.dyn.suddenlink.net)
[23:57:45] *** Joins: regeya (~user@50.45.24.247)
[23:57:51] <Coder_000> hello
[23:58:33] <regeya> hello
[23:58:42] <IHasFinger> i will install wireshark and see what is up
[23:58:51] <douglaswinship> IHasFinger: good luck!
[23:59:33] *** Joins: dyslexicat (~dyslexica@176.234.11.153)
[23:59:42] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
