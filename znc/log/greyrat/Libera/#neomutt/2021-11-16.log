[00:17:01] *** Quits: krisk (~krisk@user/krisk) (Quit: ZNC 1.8.2 - https://znc.in)
[00:17:21] *** Joins: krisk (~krisk@user/krisk)
[00:22:35] *** Quits: krisk (~krisk@user/krisk) (Quit: ZNC 1.8.2 - https://znc.in)
[00:24:51] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:41:13] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[00:42:59] *** Quits: kzak (~kzak@nat-37.starnet.cz) (Ping timeout: 264 seconds)
[00:50:14] *** Joins: krisk (~krisk@user/krisk)
[00:53:20] *** Quits: crest (~quassel@user/crest) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:55:24] *** Joins: crest (~quassel@user/crest)
[02:00:02] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 268 seconds)
[02:07:51] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:35:14] *** Joins: rgrinberg (~textual@190.113.102.153)
[02:47:27] *** Quits: reset (~reset@user/reset) (Ping timeout: 250 seconds)
[03:00:24] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:17:12] *** Quits: rgrinberg (~textual@190.113.102.153) (Read error: Connection reset by peer)
[03:18:36] *** Joins: rgrinberg (~textual@190.113.102.153)
[03:35:44] *** Quits: sassmann (~sassmann@user/sassmann) (Ping timeout: 265 seconds)
[03:48:29] *** Joins: sassmann (~sassmann@user/sassmann)
[03:54:06] *** Quits: Pali (~pali@user/pali) (Ping timeout: 265 seconds)
[04:30:27] *** Quits: NetSysFire (~NetSysFir@silly/elektra) (Remote host closed the connection)
[04:30:54] *** Joins: NetSysFire (~NetSysFir@silly/elektra)
[04:34:41] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:56:46] *** Joins: rgrinberg (~textual@190.113.102.153)
[05:11:49] *** Joins: sassmann_ (~sassmann@user/sassmann)
[05:12:37] *** Quits: sassmann (~sassmann@user/sassmann) (Ping timeout: 250 seconds)
[05:33:17] *** Quits: maetthew (~maetthew@user/maetthew) (Quit: ZNC 1.8.2 - https://znc.in)
[05:35:52] *** Joins: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se)
[05:35:52] *** Quits: maetthew (~maetthew@c188-150-159-232.bredband.tele2.se) (Changing host)
[05:35:52] *** Joins: maetthew (~maetthew@user/maetthew)
[05:46:25] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 250 seconds)
[05:52:33] *** Joins: keypusher (keypusher@user/keypusher)
[06:03:15] *** Joins: keypushe- (keypusher@user/keypusher)
[06:03:45] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 250 seconds)
[06:06:30] *** keypushe- is now known as keypusher
[06:29:54] *** Joins: lameaf12221 (~dragon@143.55.59.234)
[06:30:44] *** Quits: lameaf12221 (~dragon@143.55.59.234) (Remote host closed the connection)
[07:14:25] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[08:21:46] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 245 seconds)
[08:27:37] *** Joins: polve (~polve@twcitalia/polve)
[09:01:35] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 264 seconds)
[09:13:16] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:31:32] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 256 seconds)
[10:00:21] *** Joins: kzak (~kzak@nat-37.starnet.cz)
[10:22:54] <ckardaris>  good morning
[10:25:36] *** Joins: weirdsmiley (~weirdsmil@43.225.73.12)
[11:22:14] *** Quits: bsd4me (~bsduser@user/bsd4me) (Quit: leaving)
[11:25:27] *** Joins: Guest5449 (~anonymous@024-216-164-051.res.spectrum.com)
[11:25:42] <Guest5449> Hello
[11:26:55] <Guest5449> I have an error with neomutt. I'm getting a segmentation fault when I open a particular email
[11:28:09] *** Guest5449 is now known as neo4358936
[11:33:05] *** Quits: weirdsmiley (~weirdsmil@43.225.73.12) (Ping timeout: 250 seconds)
[11:36:04] <gahr> morning
[11:37:16] <ckardaris> hi gahr
[11:37:35] *** Joins: neo43589367 (~neo435893@193.32.127.240)
[11:39:33] *** Quits: neo4358936 (~anonymous@024-216-164-051.res.spectrum.com) (Ping timeout: 265 seconds)
[11:40:52] <neo43589367> I have tried the log files but they didn't offer any useful information.
[11:52:11] <gahr> hi ckardaris 
[11:52:20] <gahr> neo43589367: do you have a crash dump?
[11:54:53] <neo43589367> It just exits and outputs "segmentation fault" to stdout. That's all I know
[11:55:24] <neo43589367> I don't think the log file from `neomutt -d 5` showed anything related to a crash
[12:23:46] *** Joins: rgrinberg (~textual@190.113.102.153)
[12:28:07] *** Joins: Pali (~pali@user/pali)
[12:41:48] <captainepoch> Morning!
[12:42:15] *** Quits: holgersson (~quassel@user/holgersson) (Quit: “Format C:........[Done]“)
[12:42:32] *** Joins: holgersson (~quassel@user/holgersson)
[12:51:37] <gahr> neo43589367: can you run it in a debugger and see where it crashes?
[12:52:15] <neo43589367> I'm not sure how to open emails from the debugger
[12:54:57] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 265 seconds)
[12:55:13] *** Joins: jstanek (~jstanek@sourcehut/user/khardix)
[12:55:28] <gahr> there's some how-to: https://neomutt.org/dev/build/debug#starting-neomutt-in-a-debugger-
[12:57:09] *** Joins: polve (~polve@twcitalia/polve)
[13:04:48] *** Joins: plastico (~plastico@neomutt/plastico)
[13:07:18] <ckardaris> hello captainepoch 
[13:09:58] *** Joins: vysn (~vysn@user/vysn)
[13:12:27] *** Quits: vysn (~vysn@user/vysn) (Client Quit)
[13:12:44] *** Joins: vysn (~vysn@user/vysn)
[13:17:08] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:53:01] *** Joins: ggouss (~ggouss@gateway/tor-sasl/ggouss)
[13:55:26] *** Joins: va5c0 (~vasco.nun@173.247.63.94.rev.vodafone.pt)
[13:55:48] *** Quits: va5c0 (~vasco.nun@173.247.63.94.rev.vodafone.pt) (Client Quit)
[13:57:34] *** Quits: sbach (~sbach@user/sbach) (Read error: Connection reset by peer)
[13:59:59] *** Joins: sbach (~sbach@user/sbach)
[15:01:58] *** Joins: nyah (~nyah@94.6.71.219)
[15:11:48] *** Quits: ggouss (~ggouss@gateway/tor-sasl/ggouss) (Ping timeout: 276 seconds)
[15:14:12] <flatcap> morning all
[15:14:51] <neo43589367> morning!
[15:16:58] <flatcap> hi neo43589367
[15:19:32] <neo43589367> normally I wouldn't care much about a crash but the fact that it's consistent and caused by opening an email is too concerning to ignore
[15:19:52] <neo43589367> I hope it's not exploitable
[15:22:01] <flatcap> can you test something for for me?
[15:22:20] <neo43589367> sure
[15:22:41] <neo43589367> So far I've determined that PGP is not the issue
[15:22:55] <flatcap> save the email locally  'C' <copy-message>, then test.mbox
[15:23:13] <flatcap> then run neomutt without any config: `neomutt -n -F /dev/null -d6 -f test.mbox`
[15:23:26] <flatcap> see if it's *just* the email that's causing the problem
[15:25:09] <flatcap> btw, which version of NeoMutt do you have?
[15:27:30] <neo43589367> Still segmentation fault
[15:28:19] <neo43589367> 20201127
[15:28:34] <flatcap> ok
[15:29:14] <flatcap> make a copy of the email and replace all the body with a line of plain text
[15:29:32] <flatcap> then see if that crashes neomutt
[15:29:50] <flatcap> (i.e. is it the headers or the body that's the problem)
[15:30:15] *** Joins: ggouss (~ggouss@gateway/tor-sasl/ggouss)
[15:38:19] *** Quits: cnsvc (~cnsvc@li541-179.members.linode.com) (Remote host closed the connection)
[15:38:35] *** Joins: cnsvc (cnsvc@2600:3c01::f03c:92ff:fedc:1df9)
[15:40:28] <neo43589367> Wow this is weird
[15:42:54] <neo43589367> I'm 99% sure it's the body now but let me just confirm
[15:44:05] <flatcap> ok
[15:46:24] <gahr> hi flatcap 
[15:46:31] <neo43589367> Just confirmed it is the body
[15:46:33] <gahr> great analytical skills
[15:46:53] <flatcap> hi gahr
[15:47:03] * gahr wants to see the email :)
[15:47:09] <flatcap> me too
[15:47:17] <flatcap> how private it is?
[15:47:31] <flatcap> how private is it?
[15:47:41] <neo43589367> I think I realize what might've happened...
[15:47:54] <flatcap> hehe, yeah?  go on...
[15:48:48] <ckardaris> hello flatcap
[15:49:34] <neo43589367> My email host has a feature to encrypt my emails with my PGP key server-side: posteo-encryption-milter v1 (Posteo encryption milter for OpenPGP v1)
[15:49:53] <neo43589367> I think it malfunctioned and also encrypted part of the header...
[15:50:08] <flatcap> neo43589367: oh!  that's weird
[15:50:10] <flatcap> hi ckardaris 
[15:50:37] <neo43589367> Maybe I don't know what I'm talking about lol
[15:52:06] <neo43589367> I shall check to see what other emails look like. Perhaps this is normal behavior
[15:52:42] <flatcap> ckardaris: sorry, "rebased, squash" wasn't an instruction to you, rather a comment of what *I'd* done
[15:52:56] <flatcap> (just as a prep to merging)
[15:53:17] * flatcap doesn't fully trust GitHub's squashing
[15:54:56] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[15:55:03] <gahr> we have a hosted instance of github enterprise at $work, we have a ticket ongoing where the button to update an out-of-date branch off the main branch causes a merge onto the main branch :D
[15:55:10] <ckardaris> I missed the part that you had force-pushed yourself
[15:55:17] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[15:55:21] <ckardaris> You are right not to trust GH
[15:55:37] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[15:55:46] <flatcap> urgh
[15:56:12] <flatcap> my worries stem from behaviour I saw years ago.  I think things are better now
[15:56:48] <flatcap> neo43589367: ok, let us know what you find
[15:56:51] <ckardaris> I dont have a lot of experience with git, but it seems that the patch flow is better
[15:57:07] <ckardaris> send your patch, make updates, send another one.
[15:57:32] <ckardaris> No worries with upstream getting more commits and needing to update and all that stuff
[15:59:23] <neo43589367> flatcap when I replace the PGP message with my own in that email, it opens fine. So it must be something inside the encrypted body that's throwing off neomutt
[16:00:12] <flatcap> neo43589367: oh.  I don't know what to suggest next
[16:00:38] <gahr> is the content private?
[16:00:40] <neo43589367> It's not a private email.
[16:00:47] <neo43589367> It's from a public mailing list
[16:01:01] <gahr> can you re encrypt it using a throw away key?
[16:01:07] <gahr> so we can get the private part and test on our end?
[16:01:13] <flatcap> neo43589367: ok, then.  please can you pastebin it
[16:02:11] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 264 seconds)
[16:03:21] <flatcap> ckardaris: (it's said that) github doesn't scale for large projects, but we'll never be one of those :-)
[16:03:55] <flatcap> but for us (imho), github is WAY better than patches on mailing lists
[16:04:48] <neo43589367> If I paste the whole original email including headers does that reveal anything important?
[16:05:12] <flatcap> your name and email address
[16:05:28] <flatcap> if it's a public list, then probably not much more
[16:05:58] <neo43589367> Okay. I'll also send a key so you can decrypt the message contents.
[16:06:13] <flatcap> ok, thanks
[16:15:01] <flatcap> ckardaris: btw, here's my quick analysis of mutt_send_message() https://flatcap.org/mutt/send_message.svg
[16:15:47] <neo43589367> https://go.0xfc.de/t0prt
[16:17:06] <neo43589367> That contains the full email content + headers and the PGP session key needed to decrypt the body. It's an esoteric GPG option but if you just do `gpg --override-session-key <insert key>` it will decrypt the message.
[16:20:06] *** Joins: weirdsmiley (~weirdsmil@43.225.73.72)
[16:24:30] <flatcap> sorry, I have no idea what I'm looking for.  where is the key?
[16:25:03] <gahr> there's an attachment on topo
[16:25:15] <gahr> says the key is "7:46C4CDE79C341C9F1B6A5E19A1C10D80"
[16:30:49] <flatcap> ok that works, but I've still no idea where you got it from
[16:31:07] <gahr> there's a "Download attachment" banner near the top of that webpage
[16:31:14] <gahr> before the email text
[16:31:45] <flatcap> oh!
[16:32:18] <flatcap> I thought that meant the pastebin'd file itself
[16:33:41] <gahr> took me a while too
[16:34:07] <ckardaris> flatcap: cool graph. what tools did you use for that?
[16:34:12] <gahr> can you get pgp_decrypt_command to work?
[16:34:21] <gahr> neo43589367: what's your pgp_decrypt_command?
[16:35:33] <flatcap> no. first attempt failed: set pgp_decode_command = "gpg --override-session-key 7:46C4CDE79C341C9F1B6A5E19A1C10D80 --status-fd=2 %?p?--passphrase-fd 0? --quiet --batch --output - %f"
[16:36:02] <gahr> works here
[16:37:47] <gahr> meaning, I can decrypt from the command line
[16:38:48] <flatcap> yeah, likewise from the command line
[16:39:25] <gahr> [13:09:07]<E> Could not decrypt PGP message                                                                                                                          
[16:39:29] <gahr> [13:09:07]<E> Could not copy message                                                                                                                                 
[16:39:32] <gahr> [13:09:07]<E> /tmp/neomutt-ptrcrt-1001-84502-2267507221346346614: No such file or directory (errno = 2): No such file or directory
[16:39:35] <gahr> but no crash
[16:39:52] <flatcap> ckardaris: I compile with `export EXTRA_CFLAGS='-fdump-rtl-expand'`
[16:39:58] <flatcap> gahr: same here
[16:40:41] <flatcap> ckardaris: the compiler creates a load of *.expand files which represent the call tree
[16:41:20] <flatcap> then I use an old perl program called 'egypt' -- I'll push my modified version to github in a sec
[16:41:40] <flatcap> it turns the *.expand into 'dot' format for the graphviz program
[16:42:08] <flatcap> (with a bit of vim-fu in the middle to filter out the bits I don't want)
[16:45:21] <neo43589367> Thanks btw for this awesome email client. I used thunderbird for a long time before I decided to move to command line
[16:47:19] <flatcap> you're welcome
[16:47:57] * gahr debugging pgp_decrypt_part
[16:48:43] <flatcap> thanks
[16:53:05] <ckardaris> flatcap: Ah yes, I was intending to do that, but could not achieve it and gave up. I had seen some instructions online
[16:53:23] <flatcap> branch [flatcap] -- https://github.com/neomutt/egypt
[16:54:03] <flatcap> I'll write some docs later, but it's generally:  egypt *.expand > file.gv; dot -Tsvg file.gv > file.svg
[16:58:14] <gahr> set pgp_check_gpg_decrypt_status_fd=no
[16:58:33] <gahr> together with set pgp_decrypt_command="gpg --override-session-key 7:46C4CDE79C341C9F1B6A5E19A1C10D80 --decrypt %f"
[16:58:38] <gahr> and crypt_use_gpgme=no
[16:58:39] <gahr> work
[16:59:04] <flatcap> nice one
[16:59:07] * flatcap tries
[17:00:12] <gahr> so possibly I don't have the correct incantation to let gpg dump some OK condition on the status fd
[17:01:38] <gahr> set pgp_decrypt_command="gpg --status-fd 2 --override-session-key 7:46C4CDE79C341C9F1B6A5E19A1C10D80 --decrypt %f"
[17:01:48] <gahr> this one works without pgp_check_gpg_decrypt_status_fd=no
[17:02:40] <flatcap> bingo!
[17:03:08] <gahr> don't ask why your incantation wasn't working
[17:03:17] <gahr> you did haev --status-fd=2 
[17:03:58] <gahr> %?p?--passphrase-fd 0?
[17:04:01] <gahr> this breaks
[17:04:16] <gahr> I take that back
[17:04:21] <flatcap> set pgp_decrypt_command = "gpg --override-session-key 7:46C4CDE79C341C9F1B6A5E19A1C10D80 --status-fd=2 %?p?--passphrase-fd 0? --quiet --batch --output - %f"
[17:04:33] <flatcap> I didn't use your fd=no, in the end
[17:05:12] <gahr> you have it in the middle
[17:05:40] <flatcap> no, your "set pgp_check_gpg_decrypt_status_fd=no" config
[17:05:47] <gahr> I have removed it
[17:05:54] <gahr> now I'm using your command
[17:05:56] <gahr> gpg --override-session-key 7:46C4CDE79C341C9F1B6A5E19A1C10D80 --status-fd=2 %?p?--passphrase-fd 0? --quiet --batch --output - %f
[17:06:47] <gahr> do you have crypt_use_gpgme=no?
[17:08:44] <flatcap> yes, crypt_use_gpgme=no
[17:09:16] <gahr> my full config:
[17:09:17] <gahr> set crypt_use_gpgme=no
[17:09:17] <gahr> set pgp_decrypt_command="gpg --override-session-key 7:46C4CDE79C341C9F1B6A5E19A1C10D80 --status-fd=2 %?p?--passphrase-fd 0? --quiet --batch --output - %f"
[17:09:53] <flatcap> https://gist.githubusercontent.com/flatcap/e4576ff957fe887d5776807ac7a73f6f/raw/f33b7392ef861abf84236a3611790242744c8ce5/p1
[17:11:28] <flatcap> both neomutt-20201127 and master work correctly with `./neomutt -n -F test.rc -f test.mbox`
[17:14:53] <flatcap> and both work correctly with your even-more-minimal config
[17:15:08] <neo43589367> Huh. That works for me as well
[17:16:54] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: talk to you later or tomorrow)
[17:22:11] *** Joins: furrymcgee (~devuan@cgn-89-1-208-64.nc.de)
[17:25:24] <neo43589367> It seg faults if I set usegpgme to yes
[17:25:31] <neo43589367> let me try on my config..
[17:26:19] <neo43589367> yep opens just fine when I set it to no on my normal config
[17:27:10] <flatcap> with `set crypt_use_gpgme=yes` it just fails to open, for me
[17:27:19] <flatcap> (20201127 and master)
[17:28:13] <neo43589367> Is this a gpgme problem then?
[17:28:42] <flatcap> where do *you* put your session key?
[17:29:19] <flatcap> in some gpg config file?
[17:30:32] <neo43589367> I used my real private key to decrypt and it worked with `crypt_use_gpgme=no`
[17:31:04] <neo43589367> my mutt config uses my private key I mean not the session key
[17:31:41] <flatcap> so the list encrypts to each person individually?
[17:32:06] <neo43589367> No. My email host encrypts it with my public key using a filter
[17:32:21] <flatcap> oh
[17:33:47] <flatcap> I think we've reached the limit of our ability to debug
[17:34:10] <flatcap> to go any further, we'd need to see a backtrace from the crash, with all the symbols
[17:38:12] *** Quits: ggouss (~ggouss@gateway/tor-sasl/ggouss) (Remote host closed the connection)
[17:38:23] *** Joins: ggouss (~ggouss@gateway/tor-sasl/ggouss)
[17:40:23] <gahr> sorry was in a meeting, let me catch up
[17:40:49] <gahr> ok, so everything works with gpgme=no and the decrypt_command we figured
[17:41:00] <gahr> gpgme=yes fails to decrypt for me and flatcap , crashes on neo43589367 
[17:41:13] <gahr> but neo43589367 is using his own private key, not a session one
[17:42:54] <flatcap> exactly
[17:45:12] * gahr clueless
[17:45:59] <neo43589367> Okay I figured something out
[17:46:06] <neo43589367> It's something in my gnupg config
[17:46:47] <neo43589367> when I move ~/.gnupg it works
[17:47:04] <gahr> can you figure if it's crashing *inside* libgpgme?
[17:47:21] <neo43589367> It's because I use an esoteric option.
[17:47:37] <neo43589367> faked-system-time 20201231T000000!
[17:47:42] <neo43589367> that's what is causing the crash
[17:47:54] <flatcap> hehe, wtf!?
[17:48:56] *** Quits: nyah (~nyah@94.6.71.219) (Quit: leaving)
[17:49:35] <neo43589367> I use that to enhance privacy for other gpg-related applications
[17:50:18] <flatcap> oh, ok
[17:50:48] <gahr> •͡˘㇁•͡˘
[17:51:15] <neo43589367> :]
[17:53:01] <neo43589367> well thank you all for the help lol
[17:53:20] <flatcap> np, it's been an education :-)
[17:54:08] <neo43589367> Gtg thanks so much lmao
[17:54:14] *** Quits: neo43589367 (~neo435893@193.32.127.240) (Quit: Leaving)
[17:54:27] <flatcap> bye
[17:55:10] <furrymcgee> hello, change-newsgroup fails on news.aioe.org after first connection: "Server closed connection", https://paste.debian.net/1219734
[17:56:05] <flatcap> according to the docs, the '!' means the timestamp is fixed.  I can quite imagine some code comparing timestamps and crashing when the elapsed time is 0
[17:57:36] <gahr> I really want to forget all about this as soon as possible :)
[17:58:08] <flatcap> hehe
[18:05:23] <flatcap> furrymcgee: hmm... I see the same.  however, news://news.gmane.io seems to be ok
[18:05:36] <flatcap> apart from their cert #3123
[18:05:36] <neo-bot> Issue by @julian-klode "[gnutls] not verifying a Lets Encrypt trust path correctly (news.gmane.io)": https://github.com/neomutt/neomutt/issues/3123
[18:13:00] <flatcap> hmm... if I run two neomutts, both connecting to news.aioe.org, then they fail
[18:13:27] <flatcap> perhaps the server is only allowing one connection per IP address
[18:13:57] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 265 seconds)
[18:14:08] <flatcap> the nntp code is very much in need of an overhaul
[18:14:18] *** Joins: vysn (~vysn@user/vysn)
[18:14:48] *** Joins: polve (~polve@twcitalia/polve)
[18:16:12] <flatcap> sorry, I'm not going to have time to work on nntp any time soon
[18:28:56] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[18:44:30] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: bbl)
[18:45:09] <gahr> #3134 - not sure I haven't inserted any bugs
[18:45:10] <neo-bot> PR by @gahr "Overhaul of atoi wrappers": https://github.com/neomutt/neomutt/pull/3134
[18:45:24] <gahr> but it's not totally broken anymore :)
[18:45:51] <gahr> I'll fix the unit tests now
[18:46:49] *** Joins: bsd4me (~bsduser@user/bsd4me)
[18:48:17] <flatcap> great, I'll have a look in a bit
[19:10:20] *** Quits: weirdsmiley (~weirdsmil@43.225.73.72) (Quit: leaving)
[19:10:33] *** Joins: weirdsmiley (~weirdsmil@43.225.73.72)
[19:24:04] *** Joins: rgrinberg (~textual@190.113.102.153)
[19:24:30] *** Quits: kzak (~kzak@nat-37.starnet.cz) (Ping timeout: 260 seconds)
[19:26:28] *** Quits: ggouss (~ggouss@gateway/tor-sasl/ggouss) (Quit: leaving)
[19:27:08] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[19:31:08] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Remote host closed the connection)
[19:43:35] *** Quits: jstanek (~jstanek@sourcehut/user/khardix) (Quit: WeeChat 3.3)
[19:44:03] *** Joins: Arkenoi (~Arkenoi@78.83.26.7)
[19:45:07] <gahr> flatcap: what value?
[19:45:57] <Arkenoi> Hi. Could anyone help me to diagnose office365 setup? mutt_oauth2.py gives me all tests passed and shows the folder list, but when i try to open a folder imaps://outlook.office365.com/Inbox -- or inbox, INBOX or whatever, or arkenoi@mydomain@outlook.. it says it cannot do this
[19:46:00] <flatcap> I guess the whole boolean: `dst && (*dst = res ? l : 0)`
[19:46:19] <gahr> can't it figure it's used to side-effect?
[19:46:51] <Arkenoi> i checked all configuration examples on the net and they all refer to the same url which obviously does not work for me
[19:46:58] <flatcap> clearly not.  the older gcc doesn't care, nor does clang
[19:47:18] <gahr> yeah that was a stupid question :)
[19:47:19] <Arkenoi> I use redirected SSO via godaddy's homepage, but it does not seem to affect token generation and rotation
[19:47:36] <Arkenoi> so I indeed do have a valid token
[19:48:09] *** Joins: neo43589367 (~neo435893@193.32.127.240)
[19:48:57] <Arkenoi> also, is sidebar_spoolfile config var deprecated? after neomutt update my muttrc gives me a warning there
[19:49:29] <neo43589367> I'm back. Is there any interest in figuring out the cause of the bug? It could be neomutt or it could be libgpgme.
[19:49:39] *** Quits: weirdsmiley (~weirdsmil@43.225.73.72) (Ping timeout: 265 seconds)
[19:49:48] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:49:55] <flatcap> Arkenoi: ah, that got renamed to sidebar_spool_file by accident.  the latest neomutt has a workaround
[19:50:30] <flatcap> Arkenoi: I haven't use oauth2 + office365 myself, but I've heard that it can be done
[19:51:07] <Arkenoi> yes
[19:51:07] <Arkenoi> funny thing the exactly same config works flawlessly with a different office365 setup
[19:51:24] <Arkenoi> on another domain which does not involve godaddy management
[19:51:25] <flatcap> oh :-(
[19:52:02] <flatcap> neo43589367: it would be useful to find out where the crash is occurring.  if it's crashing in libgpgme, then I can don't have to worry :-)
[19:53:28] <neo43589367> flatcap: agreed. I'd like to find the root cause because it's either a bug in libgpgme or neomutt either way I found a bug
[19:53:30] <flatcap> Arkenoi: can you see any folders in neomutt's browser?   'c<tab>'  (then <tab> again toggles views)
[19:54:31] <flatcap> neo43589367: you need the core file from the crash.  for distros with systemd, there's coredumpctl
[19:55:16] <flatcap> you'll need the debugging symbols for neomutt, which may be another package neomutt-debug, neomutt-dev (or similar)
[19:55:44] <flatcap> and you'll need gdb to actually get the backtrace
[19:56:00] <flatcap> how technical are you?
[19:56:20] *** Joins: weirdsmiley (~weirdsmil@157.37.163.13)
[19:57:06] <neo43589367> flatcap: not
[19:57:59] <neo43589367> I've systemd
[19:58:54] <flatcap> ok, just a sec...
[20:01:59] <neo43589367> I have gdb already as well
[20:02:55] <flatcap> if you run and crash neomutt, then run `coredumpctl info` there's a stack trace at the end
[20:03:17] <flatcap> that might be enough to work out whose fault it is
[20:04:56] <Arkenoi> ha
[20:04:57] <Arkenoi> a bit of debugging says:
[20:04:57] <Arkenoi> oauthbearer failed because "SASL: no worthy mechs found" whatever it means
[20:04:58] <Arkenoi> and xoauth2 failed because "OAUTH token too big: 2304"
[20:05:07] *** Quits: weirdsmiley (~weirdsmil@157.37.163.13) (Ping timeout: 265 seconds)
[20:05:12] <Arkenoi> how do i fix that further?
[20:05:40] <flatcap> ah!  someone asked to increase the size of some buffers, recently
[20:05:54] * flatcap looks through the commit logs...
[20:06:01] <flatcap> which verions of neomutt do you have?
[20:06:41] <Arkenoi> 20211029, it is from your fedora repo i think
[20:06:44] *** Joins: weirdsmiley (~weirdsmil@43.225.73.62)
[20:06:57] <flatcap> ok, good
[20:08:00] <flatcap> hmm... #2936 -- we didn't do anything about it yet
[20:08:00] <neo-bot> Issue by @ivucica "SASL password field size might need bumping to at least 2048 bytes": https://github.com/neomutt/neomutt/issues/2936
[20:14:23] <neo43589367> The stack trace just has neomutt. The only other interesting line it has is:
[20:14:26] <neo43589367> #21 0x00007f3fbfd3dd0a __libc_start_main (libc.so.6 + 0x26d0a)
[20:14:39] <neo43589367> The last line is neomutt
[20:14:48] <Arkenoi> what is the first error? and what is the difference between oauthbearer and xoauth2 methods?
[20:14:48] <Arkenoi> the first one fails silently (why?) and the second one gives this message
[20:14:58] <flatcap> neo43589367: it's #0 where the crash occurred
[20:15:11] <neo43589367> that's neomutt
[20:15:54] <flatcap> Arkenoi: dunno
[20:18:47] <flatcap> neo43589367: then we need more debugging info.  we need the debug symbols that tell us which line of which source file the crash occurred
[20:19:44] <neo43589367> flatcap: How do I get those? I have the crash opened in gdb right now
[20:20:37] <flatcap> they either need to be installed, or you need to build neomutt from the source
[20:20:41] <flatcap> which distro do you use?
[20:21:32] <flatcap> Arkenoi: I've just pushed a quick hack to branch [devel/oauth2] expanding the size of the buffer.  are you technical?  do you know how to build neomutt?
[20:22:33] <flatcap> or if you're willing to trust a binary off the internet :-), I'll push my built version
[20:24:05] <Arkenoi> i use your built versions anyway so probably yes:)  might be faster than bulinding it myself
[20:25:12] <flatcap> https://flatcap.org/mutt/neomutt-oauth2
[20:25:30] <flatcap> $ sha256sum neomutt-oauth   ->  42eeaf5b859522fef3b9b9c1e9dcca45a98f5c86f1c139336afed8347ddd55f2
[20:26:34] *** Quits: weirdsmiley (~weirdsmil@43.225.73.62) (Ping timeout: 260 seconds)
[20:26:57] <flatcap> hehe, whenever I post a link, there are several automatic downloads from people/bots in this channel
[20:28:13] *** Joins: weirdsmiley (~weirdsmil@157.37.161.160)
[20:28:21] <Arkenoi> apparently need to build it by myself.. I got glibc version mismatch..
[20:28:38] <flatcap> oh.  I'm on F35
[20:28:57] <Arkenoi> i am still on f34, waiting for official qubes template :)
[20:29:18] *** Joins: rgrinberg (~textual@201.192.183.100)
[20:29:29] <Arkenoi> can you mockbuild for f34?
[20:30:32] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[20:31:59] <gahr> flatcap: I pushed the fix for gcc
[20:32:07] <gahr> cu tomorrow
[20:32:30] <flatcap> thanks, bye
[20:32:45] <flatcap> Arkenoi: working on it
[20:33:53] <neo43589367> which configure options should I use when building from source?
[20:34:23] <flatcap> `neomutt -v` shows the configure options for your current build
[20:37:53] <flatcap> Arkenoi: I've uploaded an F34 version, sha256sum: cf6841f4f274d62f4dddad5a7cc909796dcd76b81b3c2bb0a051f82a119766c8
[20:37:56] <neo43589367> will make install mess up my current installation?
[20:37:59] *** Quits: weirdsmiley (~weirdsmil@157.37.161.160) (Ping timeout: 265 seconds)
[20:38:45] <neo43589367> Or do I just run make?
[20:38:58] <flatcap> just run make
[20:39:09] <flatcap> you won't need to install anything to debug
[20:39:32] *** Joins: weirdsmiley (~weirdsmil@43.225.73.24)
[20:42:43] <Arkenoi> perfect, it fixed the issue!
[20:43:04] * flatcap is amazed :-)
[20:43:37] <flatcap> ok, I'll check my work later, create a PR and that'll be in the next release
[20:45:48] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:51:07] <Arkenoi> nice! thanks! did not expect it to be that easy :)
[20:52:25] <flatcap> np, nor I :-)
[20:53:26] *** Joins: rgrinberg (~textual@201.192.183.100)
[20:58:16] <neo43589367> I think make finished successfully
[20:58:36] <flatcap> woo!
[20:58:54] <flatcap> ls neomutt
[20:59:04] <neo43589367> yeah I have it
[20:59:39] <flatcap> well done :-)
[20:59:48] <flatcap> now, time to crash it
[21:00:24] <neo43589367> crash it with the new build?
[21:00:36] <flatcap> yes
[21:00:53] <flatcap> if you run ./neomutt from the source dir
[21:01:28] <flatcap> then you can attach gdb from another window:  gdb --pid $(pidof neomutt)
[21:01:45] <flatcap> c<enter>  to continue in gdb
[21:02:05] <flatcap> when neomutt crashes, bt<enter> in gdb to get a backtrace
[21:03:02] <flatcap> that should list source files, line numbers and some variable values
[21:06:11] <neo43589367> yep
[21:07:07] <neo43589367> wow that's amazing. I had no idea how to do that
[21:08:04] <neo43589367> error is in pgp_gpgme_extract_keys
[21:08:10] <neo43589367> at ncrypt/crypt_gpgme.c:2523
[21:08:15] *** Joins: strajder (~strajder@user/strajder)
[21:08:18] <neo43589367> fprintf(*fp, "pub %5.5s %u/%8s %s %s\n", gpgme_pubkey_algo_name(subkey->pubkey_algo),
[21:08:32] <neo43589367> So I assume this is not a neomutt thing
[21:09:35] <flatcap> excellent
[21:10:09] <flatcap> in gdb, can you:  p subkey
[21:10:16] *** Quits: Arkenoi (~Arkenoi@78.83.26.7) (Ping timeout: 256 seconds)
[21:11:24] <neo43589367> safe to paste in chat?
[21:11:25] <flatcap> p shortid
[21:12:00] <flatcap> it should be one line.  I'm expecting a large hex number (or NULL)
[21:12:36] <neo43589367> It's an 8-char hex number
[21:12:48] <flatcap> yes, I don't think anyone can exploit memory addresses
[21:12:52] <flatcap> ok, that's fine
[21:13:02] <flatcap> what about `p shortid`
[21:13:16] <flatcap> I'm looking for a NULL pointer
[21:13:33] <neo43589367> p shortid is the 8-char hex
[21:14:00] <flatcap> ok uid, then uid->d
[21:14:10] <flatcap> uid->uid rather
[21:14:22] <neo43589367> it's 0x0
[21:14:27] <neo43589367> p uid is 0x0
[21:14:29] <flatcap> oh!
[21:14:33] <neo43589367> null pointer?
[21:14:36] <flatcap> yes
[21:14:51] <flatcap> finally subkey->pubkey_algo
[21:15:02] <neo43589367> lol my settings are so weird I broke gpgme
[21:15:34] <neo43589367> GPGME_PK_EDDSA
[21:15:54] <flatcap> ok
[21:16:25] <flatcap> thanks for you help.  it been really informative
[21:17:00] <flatcap> your* help
[21:17:11] <neo43589367> you did all the work :)
[21:19:46] <flatcap> I've pushed a trivial fix, if you want to try it
[21:21:15] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[21:22:07] <neo43589367> sure. the comment says key is null when not present in user's keyring. I don't have that email's key in my keyring.
[21:23:09] <flatcap> ah, ok
[21:23:11] <flatcap> to get the branch:   git fetch origin; git switch devel/gpg
[21:24:01] <flatcap> then simply `make` to rebuild (it'll be quick as I've only altered one file)
[21:25:10] <neo43589367> It's fixed!!!
[21:25:42] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:25:51] <neo43589367> switch back to master remake and core dump again
[21:26:03] <flatcap> briliant!
[21:26:13] <flatcap> brilliant!
[21:26:19] <neo43589367>  || !uid) ?
[21:26:23] <flatcap> my typing's a bit off today
[21:26:46] <flatcap> if (!uid) meaning if uid is NULL
[21:26:58] <flatcap> then we don't use it
[21:27:38] <neo43589367> so in simple terms what exactly is going on?
[21:27:42] <flatcap> I'll need to have a think about that fix too (tomorrow)
[21:28:04] <neo43589367> it's taking a branch it's not supposed to?
[21:28:05] *** Joins: rgrinberg (~textual@201.192.183.100)
[21:28:06] <flatcap> fprintf() is writing some formatted data to a buffer...
[21:28:40] <flatcap> but in the second part of the `if` we've assumed that uid is set
[21:29:01] <flatcap> if a pointer is NULL, then pointer->something is bad :-)
[21:29:58] *** Quits: rgrinberg (~textual@201.192.183.100) (Client Quit)
[21:30:03] <flatcap> I first had you check the other pointers because fprint() uses %s (which is a string format)
[21:30:32] <flatcap> so if say shortid had been NULL, then fprintf might have crashed
[21:31:36] *** Joins: rgrinberg (~textual@201.192.183.100)
[21:31:42] <flatcap> oh, damn. they're not the same
[21:32:49] <flatcap> hmm... I might need to alter that fix
[21:35:38] <neo43589367> Is there any chance this bug is exploitable? out of curiosity
[21:37:56] <flatcap> I'm not an expert on these things, but I think, "no"
[21:38:40] <flatcap> at that point, I don't think we're using any data from the email
[21:43:45] <flatcap> gotta go, food.  back later
[22:17:06] *** Quits: rgrinberg (~textual@201.192.183.100) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:20:39] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[22:31:41] *** Parts: furrymcgee (~devuan@cgn-89-1-208-64.nc.de) ()
[22:46:27] *** Joins: nyah (~nyah@94.6.71.219)
[22:53:19] *** Quits: earthnative (~nemo@119-18-37-212.771225.bne.static.aussiebb.net) (Ping timeout: 265 seconds)
[22:55:02] *** Joins: earthnative (~nemo@119-18-37-212.771225.bne.static.aussiebb.net)
[23:13:05] *** Joins: ajr (~andrew@47.151.137.150)
[23:17:29] *** Quits: tharkun (tharkun@kvm6.telegraphics.com.au) (Ping timeout: 264 seconds)
[23:33:01] *** Joins: tharkun (tharkun@kvm6.telegraphics.com.au)
[23:35:52] *** Quits: ajr (~andrew@47.151.137.150) (Ping timeout: 256 seconds)
[23:47:40] *** Joins: ajr (~andrew@47.151.137.150)
[23:52:22] *** Quits: ajr (~andrew@47.151.137.150) (Ping timeout: 260 seconds)
[23:55:08] *** Quits: weirdsmiley (~weirdsmil@43.225.73.24) (Ping timeout: 256 seconds)
