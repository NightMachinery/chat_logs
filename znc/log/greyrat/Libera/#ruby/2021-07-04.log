[00:12:44] *** Joins: jhawthorn_ (~jhawthorn@user/jhawthorn)
[00:13:06] *** Quits: jhawthorn (~jhawthorn@user/jhawthorn) (Ping timeout: 240 seconds)
[00:18:39] <rg> there were editor wars then vscode came along and there was lasting peace. 
[00:19:03] *** Joins: crankharder (~crankhard@pool-71-127-147-231.bltmmd.fios.verizon.net)
[00:23:34] *** Joins: chrysanthematic (~chrysanth@user/chrysanthematic)
[00:24:37] *** Quits: crankharder (~crankhard@pool-71-127-147-231.bltmmd.fios.verizon.net) (Ping timeout: 268 seconds)
[00:51:19] <nakilon> false
[01:04:38] <aesthetikx> lmao I can't believe people unironically use vscode
[01:05:41] <aesthetikx> to each their own though.
[01:24:24] *** Quits: _ht (~quassel@82-169-194-8.biz.kpn.net) (Remote host closed the connection)
[01:30:34] *** Quits: chrysanthematic (~chrysanth@user/chrysanthematic) (Quit: chrysanthematic)
[01:37:11] *** Joins: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4)
[01:57:01] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (Quit: My Ex-Girlfriend once told me: I'm not a slut, I'm just popular)
[01:59:42] *** Joins: crankharder (~crankhard@d-138-207-181-243.mdde.cpe.atlanticbb.net)
[02:08:18] *** Quits: crankharder (~crankhard@d-138-207-181-243.mdde.cpe.atlanticbb.net) (Ping timeout: 240 seconds)
[02:10:04] *** Joins: nmollerup (~nmollerup@customer-2a00-7660-1612-0168-b1cc-b9c9-2409-4bf6.ip6.gigabit.dk)
[02:12:22] *** Joins: postmodern (~postmoder@user/postmodern)
[02:13:52] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[03:01:35] *** Joins: BinaryVixen899 (~BinaryVix@75.172.185.107)
[03:32:52] <BinaryVixen899> Hey all, fell in love with Ruby a while ago; currently programming a Discord Bot in it. Are there any good tutorials about threads in Ruby? I'm familiar with basic programming concepts and some thread concepts but; I'm really rather new to making threads myself.
[03:34:01] <weaksauce> BinaryVixen899 are you doing it just to learn more about threads at a low level? 
[03:34:27] <weaksauce> because something like eventmachine or some other higher level gem is what people generally gravitate to 
[03:36:04] <BinaryVixen899> Neah; just getting practical experience with threads because it came up in the code of this and then fell down a rabbit hole.
[03:36:39] <weaksauce> https://github.com/ruby-concurrency/concurrent-ruby
[03:36:48] <weaksauce> https://github.com/eventmachine/eventmachine/
[03:36:58] <weaksauce> generally the big two
[03:37:35] <BinaryVixen899> Oh awesome! Thank you!
[03:37:44] <weaksauce> pretty much any concurrency book/website should be general enough to teach you about deadlocks and the like
[03:38:00] <weaksauce> and that should be something you can translate to ruby
[03:38:19] <weaksauce> https://awesome-ruby.com/#-concurrency-and-parallelism
[03:38:38] <weaksauce> ^ pretty decent list of the major projects that exist for a given subject 
[03:38:45] <weaksauce> major / popular 
[03:39:21] <BinaryVixen899> Oh wow I've never seen that website before, thank you!
[03:39:33] <weaksauce> you're welcome :)
[03:51:47] *** Joins: MalkbabY_ (~MalkbabY@user/malkbaby)
[03:54:42] *** Quits: MalkbabY (~MalkbabY@user/malkbaby) (Ping timeout: 240 seconds)
[04:15:12] *** Quits: relyks (~Thunderbi@ool-45725d43.dyn.optonline.net) (Quit: relyks)
[04:19:30] *** Quits: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4) (Ping timeout: 240 seconds)
[04:28:51] *** Quits: DEac- (~deac@niob.denkn.at) (Ping timeout: 268 seconds)
[04:28:59] *** Joins: DEac- (~deac@niob.denkn.at)
[04:37:54] *** Joins: Jacktar_ (~whiteshad@gateway/tor-sasl/jacktar)
[04:40:56] *** Quits: jacktar (~whiteshad@gateway/tor-sasl/jacktar) (Ping timeout: 244 seconds)
[04:40:57] *** Jacktar_ is now known as jacktar
[04:40:59] <rg> there's concurrent-ruby as well: https://github.com/ruby-concurrency/concurrent-ruby . The EM model is not for everyone, and if you want to use threads safely concurrent-ruby seems good although you could learn thread safe programming as well.
[04:43:40] <rg> there's also of course Ractors now, in ruby3. i still havent used them.
[05:07:44] <weaksauce> yeah concurrent-ruby was the first link ;)
[05:08:12] <weaksauce> EM tends to work well for bots i think
[05:08:59] <havenwood> BinaryVixen899: The Async gem is a good Ruby 3 way to do I/O.
[05:10:03] <havenwood> See async-http for a great HTTP client using Fibers rather than Threads under the hood. https://github.com/socketry/async-http
[05:11:47] <havenwood> Or see the example from the Ruby release notes. https://gist.github.com/havenwood/81e299ee2fddf7f5cf87be4af0c14b9d
[05:12:14] <havenwood> Ractors are for parallel processing. They’re as heavy weight as a Thread and Async is a better choice for I/O.
[05:12:59] <rg> weaksauce: sorry i missed that link
[05:13:05] <havenwood> Async uses a pool of Fibers under the hood and can even suspend Falcon Fibers while they’re out for I/O.
[05:13:52] <havenwood> Typhoeus is a solid HTTP client if you want concurrent I/O and HTTP/2 via more conventional measures (libcurl).
[05:14:19] <havenwood> The async-http gem also supports HTTP/2 and is lower memory overhead if you don’t mind bleeding edge.
[05:15:25] <havenwood> Here’s a spreadsheet I keep roughly up to date showing a number of HTTP client features for the sake of comparison. https://docs.google.com/spreadsheets/d/1vPlk6nMIFa3sI5ISl7zZ5r6lDNpVQX6Jxi3ksXCyVbs/edit?usp=sharing
[05:15:31] <rg> net/http is still my go to.
[05:15:42] <havenwood> Async gives net/http new legs.
[05:15:48] <rg> cool
[05:16:19] <havenwood> Just wrap it in a couple `Async do` blocks and you get Fiber-backed concurrency. Fancy!
[05:16:40] <havenwood> The Ruby 3 Thread Scheduler is also by ioquatix, the author of Falcon and Async.
[05:17:22] <havenwood> And the Fiber assembly implementations, the libio bindings, the Fiber pool, etc, etc.
[05:17:33] <havenwood> Ioquatix is… impressive.
[05:17:45] <rg> cool, tip my hat
[05:21:04] <weaksauce> seems to really like concurrency 
[05:22:38] <rg> and ruby :D
[06:09:31] *** Joins: crankharder (~crankhard@d-138-207-181-243.mdde.cpe.atlanticbb.net)
[06:14:46] *** Quits: crankharder (~crankhard@d-138-207-181-243.mdde.cpe.atlanticbb.net) (Ping timeout: 265 seconds)
[06:18:13] *** Joins: viole (~viole@user/viole)
[06:22:33] <viole> I've been searching for a way to do column name translation in Sequel. I'm dealing with some fugly legaly DB that have unspeakable horrors I want to hide away behind a sanitized library where I serialize content and translate column names. I'm trying to do this with Sequel since I consider it to have the right balance between fancy stuff and control. So far I got serialization working, but I'm still
[06:22:35] <viole> trying to get it to translate column names. Anyone has experience with this? I haven't found such a thing in the docs. Been browsing the gem codebase but still haven't found any plugin to do this 
[06:26:42] *** Joins: crankharder (~crankhard@d-138-207-181-243.mdde.cpe.atlanticbb.net)
[06:32:46] *** Quits: crankharder (~crankhard@d-138-207-181-243.mdde.cpe.atlanticbb.net) (Ping timeout: 268 seconds)
[06:40:46] *** Joins: jetchisel (jetchisel@user/jetchisel)
[06:46:26] *** Joins: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4)
[07:22:53] *** Joins: ur5us_ (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4)
[07:24:17] *** Quits: ur5us (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4) (Read error: Connection reset by peer)
[08:05:54] *** Quits: ur5us_ (~ur5us@2406:e002:6b09:8901:dc29:12ba:98a9:f1d4) (Ping timeout: 240 seconds)
[08:06:10] *** Joins: Nyeogmi (~Nyeogmi@user/nyeogmi)
[09:46:18] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[09:48:54] *** Joins: MalkbabY (~MalkbabY@user/malkbaby)
[09:49:35] *** Joins: Malkbab__ (~MalkbabY@user/malkbaby)
[09:51:54] *** Quits: MalkbabY_ (~MalkbabY@user/malkbaby) (Ping timeout: 240 seconds)
[09:53:06] *** Quits: MalkbabY (~MalkbabY@user/malkbaby) (Ping timeout: 240 seconds)
[09:53:08] *** Joins: jetchisel (jetchisel@user/jetchisel)
[09:54:14] *** Joins: MalkbabY (~MalkbabY@user/malkbaby)
[09:57:54] *** Quits: Malkbab__ (~MalkbabY@user/malkbaby) (Ping timeout: 240 seconds)
[10:00:22] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 258 seconds)
[10:10:57] *** Joins: Garb0 (~Garb0@user/garb0)
[10:14:46] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[10:30:48] *** Quits: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 268 seconds)
[10:31:56] *** Joins: gcd (gd@104-9-69-236.lightspeed.nsvltn.sbcglobal.net)
[10:44:10] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[10:46:25] *** Quits: sdfuiojklqaz (~sdfuiojkl@pool-108-49-187-144.bstnma.fios.verizon.net) (Remote host closed the connection)
[10:59:57] *** Quits: reset (~reset@user/reset) (Quit: reset)
[11:02:52] *** Quits: lad (~lad@user/lad) (Ping timeout: 268 seconds)
[11:54:35] *** Quits: MalkbabY (~MalkbabY@user/malkbaby) (Remote host closed the connection)
[11:55:10] *** Joins: MalkbabY (MalkbabY@user/malkbaby)
[11:58:21] *** Joins: relyks (~Thunderbi@ool-45725d43.dyn.optonline.net)
[12:20:31] *** Joins: crankharder (~crankhard@d-138-207-181-243.mdde.cpe.atlanticbb.net)
[12:28:35] *** Quits: crankharder (~crankhard@d-138-207-181-243.mdde.cpe.atlanticbb.net) (Ping timeout: 256 seconds)
[12:46:53] *** Joins: sdfuiojklqaz (~sdfuiojkl@pool-108-49-187-144.bstnma.fios.verizon.net)
[12:51:20] *** Quits: sdfuiojklqaz (~sdfuiojkl@pool-108-49-187-144.bstnma.fios.verizon.net) (Ping timeout: 258 seconds)
[13:17:39] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[13:19:38] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:22:33] *** Quits: relyks (~Thunderbi@ool-45725d43.dyn.optonline.net) (Quit: relyks)
[13:23:35] *** Joins: ur5us_ (~ur5us@203.86.198.200)
[13:30:21] *** Quits: Nyeogmi (~Nyeogmi@user/nyeogmi) (Ping timeout: 256 seconds)
[13:50:19] *** Joins: _ht (~quassel@82-169-194-8.biz.kpn.net)
[14:12:04] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[14:17:12] *** Quits: ur5us_ (~ur5us@203.86.198.200) (Ping timeout: 252 seconds)
[14:39:46] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:43:06] <keyvan> viole: i read all that and have been doing ruby programming since 2009 but ayyy i dunno what the hell you saying 
[15:03:39] *** Joins: sagax (~sagax@213.138.71.146)
[15:04:03] <sagax> hi all
[15:04:34] <sagax> why this do false?
[15:04:36] <gr33n7007h> o/
[15:04:50] <sagax> >> case String; when String; puts "TRUE"; else; puts "WRONG"; end
[15:05:03] <sagax> do "wrong" way
[15:05:18] <sagax> i know that String === String it's false, but how i can compare String and String with `case`?
[15:15:18] <aesthetikx> sagax I have always wondered this myself
[15:18:15] <aesthetikx> sagax looks like a trick is to do 
[15:18:32] <aesthetikx> case [String]
[15:18:37] <aesthetikx> when [String]
[15:18:47] <aesthetikx> wrapping it in an array tricks ===
[15:19:44] <aesthetikx> or, use case whatever.to_s     when 'String'
[15:24:35] <aesthetikx> viole so are you saying that you want like DB[:cases] to use some horrible table name that is like 'legalDistrictCasesTable'?
[15:45:41] <keyvan> gr33n7007h:  o7
[15:46:05] <keyvan> horruuuble
[15:57:51] <adam12> viole: Might be worth posting to the sequel-talk mailing list.
[15:58:29] *** Quits: MalkbabY (MalkbabY@user/malkbaby) (Remote host closed the connection)
[15:58:47] *** Joins: MalkbabY (MalkbabY@user/malkbaby)
[16:08:26] *** Quits: postmodern (~postmoder@user/postmodern) (Quit: Leaving)
[16:57:42] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 272 seconds)
[17:04:22] *** Joins: Garb0 (~Garb0@user/garb0)
[17:32:00] *** Joins: Na_Klar (~androirc@p54bf08f7.dip0.t-ipconnect.de)
[17:36:46] <Na_Klar> I have a performance issue with my script: I str.each_byte two strings and compare the individual bytes with each others and store the result in a new string. The problem is, the longer the two string are the slower the process gets. Like the first MB runs very fast and with every further MB one MB needs more and more time. I checked the loop and there is no redundancy which could slow down. Everything runs in the memory and the bytesize of t
[17:37:43] *** Quits: viole (~viole@user/viole) (Ping timeout: 265 seconds)
[17:58:21] *** Quits: Na_Klar (~androirc@p54bf08f7.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:01:26] *** Joins: Na_Klar (~androirc@p54bf08f7.dip0.t-ipconnect.de)
[18:16:07] *** Quits: Na_Klar (~androirc@p54bf08f7.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:18:19] *** Joins: Na_Klar (~androirc@p54bf08f7.dip0.t-ipconnect.de)
[18:25:01] *** Quits: Na_Klar (~androirc@p54bf08f7.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:47:04] *** Quits: Garb0 (~Garb0@user/garb0) (Ping timeout: 258 seconds)
[18:53:40] *** Quits: MalkbabY (MalkbabY@user/malkbaby) (Quit: Leaving...)
[18:57:12] *** Joins: sdfuiojklqaz (~sdfuiojkl@pool-108-49-187-144.bstnma.fios.verizon.net)
[19:02:01] *** Quits: sdfuiojklqaz (~sdfuiojkl@pool-108-49-187-144.bstnma.fios.verizon.net) (Ping timeout: 268 seconds)
[19:16:08] *** Joins: sdfuiojklqaz (~sdfuiojkl@pool-108-49-187-144.bstnma.fios.verizon.net)
[20:03:46] *** Joins: RougeR (~rougex250@user/rouger)
[20:15:51] <jidar> aesthetikx: is there any reason you require the use of '===' over, say, '==' for comparing the values?
[20:27:11] *** Joins: Garb0 (~Garb0@user/garb0)
[20:35:29] *** Joins: RougeRR (~rougex250@93.191.206.141)
[20:36:08] *** Quits: RougeR (~rougex250@user/rouger) (Read error: Connection reset by peer)
[22:00:59] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[22:01:22] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[22:03:05] *** Server sets mode: +nt 
[22:13:04] <jidar> I was also thinking Na_Klar could use some computed hash for a set of 1/2 of the str.length
[22:13:20] <jidar> but he'd need to understand data structures to make good use
[22:13:36] *** Quits: skali (~skali@46.191.137.150) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:14:49] *** Quits: sam113101 (~sam@modemcable229.128-202-24.mc.videotron.ca) (Remote host closed the connection)
[22:15:37] *** Joins: sam113101 (~sam@modemcable229.128-202-24.mc.videotron.ca)
[22:58:43] *** Quits: RougeR (~rougex250@user/rouger) (Remote host closed the connection)
[23:01:57] *** Joins: RougeR (~rougex250@user/rouger)
[23:15:08] *** Joins: gearnode (~gearnode@2a01cb000ce2c1008ca2093f6cef466a.ipv6.abo.wanadoo.fr)
[23:27:30] *** Quits: gearnode (~gearnode@2a01cb000ce2c1008ca2093f6cef466a.ipv6.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[23:46:28] *** Joins: xall (~xall@2600:8800:8c02:3600:dd3e:5f7b:c7cc:6e60)
[23:55:29] *** Quits: RougeR (~rougex250@user/rouger) (Remote host closed the connection)
[23:55:42] *** Joins: jetchisel (jetchisel@user/jetchisel)
