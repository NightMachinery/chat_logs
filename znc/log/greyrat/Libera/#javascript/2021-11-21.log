[00:00:12] <CoderGuy> but somehow within the promise function it's able to have setTimeout() and still block until the setTimout() finishes considering your resolve is attached to the setTimeout()
[00:00:17] <EdFletcher> yup that's what i was saying way earlier on... with C# being very similar, you can actually use an IL decompiler and see how the compiler breaks their async syntax into top- and bottom-half functions with callbacks.
[00:00:20] *** Joins: doc (~doc@user/doc)
[00:00:23] <systemfault> function timeout(ms) { return new Promise((resolve, reject) => { setTimeout(() => { resolve() }, ms) } ) } // See how setTimeout just calls the "resolve" callback of the Promise?
[00:00:33] <CoderGuy> yeah I see that
[00:00:41] <CoderGuy> but why is it able to block on the resolve call?
[00:00:47] <CoderGuy> sounds like the answer is event loop?
[00:00:52] <qswz> CoderGuy: see what I wrote
[00:01:01] <qswz> it's just chain of callbacks
[00:01:10] <qswz> forget about await
[00:01:26] <qswz> yea event loop is also the answer
[00:01:30] <CoderGuy> so it works kinda like return?
[00:01:35] <Decker> await is 'return early if there's no result' so it doesn't wait
[00:01:52] <CoderGuy> ohhh
[00:01:59] <CoderGuy> okay so we could do this then hold on
[00:04:07] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[00:05:12] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[00:05:15] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[00:07:23] *** Joins: zerothule (~eric@2601:602:8d80:4e50:e979:20d5:6c7a:57f7)
[00:07:29] <CoderGuy> alright I can't do the thing probably cuz of how it's structured but I think I get it
[00:08:03] <systemfault> CoderGuy: Before async await, people were emulating it using generators (pausable functions) and promises
[00:08:09] *** Quits: mat001_ (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Remote host closed the connection)
[00:08:11] <CoderGuy> so a promise is basically just saying "you want me to return, I will hold on I have to execute this code before I can return" and then resolve gets called returning it I guess
[00:08:23] <systemfault> CoderGuy: This thing https://github.com/tj/co
[00:08:36] <EdFletcher> oh _no_, not `co`
[00:08:43] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[00:08:54] <qswz> co is old
[00:09:01] <systemfault> There's no reason to use that today :)
[00:09:08] <CoderGuy> don't worry I won't
[00:09:12] <CoderGuy> but it's fun to look at
[00:09:18] <qswz> and co is just a few lines
[00:09:24] <EdFletcher> yeah that's a time machine
[00:10:10] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[00:11:29] <systemfault> CoderGuy: In some way, you could say that being able to "pause" functions like await does works like generators.
[00:11:37] <qswz> https://gist.github.com/caub/ccb97961827a82a9b8d267f49389dfee
[00:11:43] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 250 seconds)
[00:11:48] <qswz> co in 5 lines
[00:12:09] <systemfault> And then it works with promises.. so, async/await is more or less a combination of generators and Promises
[00:12:09] <CoderGuy> lol
[00:12:31] <CoderGuy> yeah but i'm not so much focused on what await/async is, as much as why the code would block
[00:12:55] <systemfault> That's the generator part
[00:12:59] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:11f0:11ab:7004:939b)
[00:13:35] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[00:13:56] <CoderGuy> okay what's the main thing causing it to block?
[00:14:06] <CoderGuy> is it the event loop? is it cuz of waiting for a return?
[00:14:16] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[00:14:24] *** Joins: Betal (~Betal@user/betal)
[00:14:25] <qswz> https://www.youtube.com/watch?v=cCOL7MC4Pl0
[00:14:26] <skillbot> YouTube Title: Jake Archibald: In The Loop - JSConf.Asia
[00:14:40] <systemfault> Probably using a state machine internally... but it's done at the interpreter level
[00:14:50] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 260 seconds)
[00:15:44] *** Joins: CoolerX (~CoolerX@user/coolerx)
[00:16:44] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[00:17:29] <CoderGuy> ic, well I guess i'll just use a promise also imma watch that youtube
[00:18:55] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 265 seconds)
[00:19:37] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[00:19:50] *** Joins: de-facto (~de-facto@user/de-facto)
[00:21:25] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 256 seconds)
[00:21:45] *** Joins: _xxoxx (~Junxter@222.94.237.247)
[00:22:19] <CoderGuy> qswz, very good video ty i'm having fun, this guy invented this stuff? amazing
[00:23:14] <qswz> not really himself
[00:23:17] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:23:20] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[00:23:48] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[00:24:08] *** Quits: powftw (uid448161@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[00:24:10] *** Quits: Junxter (~Junxter@114.221.229.197) (Ping timeout: 260 seconds)
[00:25:53] *** Quits: zerothule (~eric@2601:602:8d80:4e50:e979:20d5:6c7a:57f7) (Ping timeout: 268 seconds)
[00:26:31] *** Quits: kogepan (~kogepan@user/kogepan) (Ping timeout: 256 seconds)
[00:27:01] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[00:27:06] *** Joins: baakeydo1 (~baake@2001:41d0:203:b12c::)
[00:27:16] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[00:28:10] *** Quits: baakeydow (~baake@163.172.145.178) (Quit: baakeydow)
[00:28:13] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[00:28:15] *** Quits: baakeydo1 (~baake@2001:41d0:203:b12c::) (Client Quit)
[00:28:35] *** Joins: baakeydow (~baake@2001:41d0:203:b12c::)
[00:30:00] *** Joins: adsc (~adsc@2a02:1206:4524:8a30:9672:ebb0:2225:b157)
[00:32:36] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[00:33:25] <adsc> I have a promise problem. I'm doing a .map on an array, and the mapped function does an async call, so I get an array of promises back...how can I await until they are resolved? Here is some code: https://gist.github.com/adsc/756f5b4fd6eb8c1af64f7031de5e6bd6
[00:33:55] *** Quits: baakeydow (~baake@2001:41d0:203:b12c::) (Quit: baakeydow)
[00:34:15] *** Joins: baakeydow (~baake@2001:41d0:203:b12c::)
[00:34:29] <Alexendoo> adsc: Promise.all
[00:34:31] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 268 seconds)
[00:34:52] <Decker> push them in an array
[00:35:08] <Alexendoo> It's already an array
[00:35:09] <Decker> n/m
[00:36:19] <adsc> thanks, Alexendoo, works perfectly
[00:37:09] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:3cd4:46ae:af88:926b)
[00:37:17] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 256 seconds)
[00:37:17] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[00:37:51] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:3cd4:46ae:af88:926b) (Client Quit)
[00:38:12] *** Joins: pmercado (~pmercado@186.107.37.219)
[00:38:14] *** Joins: EdFletcher (~PKD@user/edfletcher)
[00:38:50] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:11f0:11ab:7004:939b) (Ping timeout: 268 seconds)
[00:39:11] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[00:40:09] *** Joins: X-Scale` (~ARM@83.223.249.106)
[00:40:41] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 268 seconds)
[00:42:41] *** X-Scale` is now known as X-Scale
[00:47:48] *** Joins: sebastorama (~sebastora@190.83.56.68)
[00:50:19] *** Joins: pavonia (~user@user/siracusa)
[00:50:52] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[00:54:08] *** Joins: electrostatic1 (~electrost@2601:600:8600:5a1:7ddd:93b1:eeda:1c87)
[00:55:24] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[00:55:25] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 256 seconds)
[00:55:52] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[00:58:48] *** Quits: qswz (~caub@89-80-20-125.abo.bbox.fr) (Quit: leaving)
[00:59:15] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[00:59:47] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[01:00:22] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[01:01:49] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[01:02:04] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[01:02:54] *** Quits: mei (~mei@user/mei) (Ping timeout: 260 seconds)
[01:05:35] *** Quits: D3mned (~D1mned@212.101.251.151) (Quit: Leaving)
[01:06:23] *** Joins: kakashiAL (~kakashi@ip-37-201-199-28.hsi13.unitymediagroup.de)
[01:07:32] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[01:09:06] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[01:12:23] *** Quits: electrostatic1 (~electrost@2601:600:8600:5a1:7ddd:93b1:eeda:1c87) (Ping timeout: 264 seconds)
[01:12:52] <daoudr> how can I instantiate board class and call the update method from within the Game class? https://pastebin.com/LweqExRJ
[01:13:05] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:14:00] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 268 seconds)
[01:15:04] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[01:17:32] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[01:19:19] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 250 seconds)
[01:23:52] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 268 seconds)
[01:25:24] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[01:25:49] *** Joins: obimod (~obimod@gateway/vpn/pia/obimod)
[01:27:46] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[01:30:01] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 268 seconds)
[01:32:15] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 256 seconds)
[01:33:08] *** Joins: ferdna (~ferdna@user/ferdna)
[01:33:12] <ljharb> daoudr: why would you want classes
[01:33:32] <daoudr> ljharb: I do not want to discuss that
[01:33:41] <daoudr> no time for this
[01:34:05] <ljharb> lol
[01:38:44] *** Joins: summersault (~summersau@179.221.251.16)
[01:39:55] *** Joins: a1eaiactaest (~a1eaiacta@user/a1eaiactaest)
[01:39:57] *** Joins: gambl0re (~gambl0re@216.154.17.240)
[01:42:32] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 240 seconds)
[01:43:32] *** Quits: stenno (~stenno@user/stenno) (Read error: Connection reset by peer)
[01:43:50] *** Joins: stenno (~stenno@user/stenno)
[01:44:45] *** Quits: a1eaiactaest (~a1eaiacta@user/a1eaiactaest) (Client Quit)
[01:44:47] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[01:45:33] *** Joins: CoolerX (~CoolerX@user/coolerx)
[01:45:55] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[01:46:10] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[01:46:13] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:47:00] *** Joins: cisme_ (~cisme_@2600:1700:d980:1a40:69d4:3a6:d1df:51a6)
[01:47:45] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Max SendQ exceeded)
[01:48:14] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:50:47] *** Joins: m_antis_ (~m_antis@ool-44c09a21.dyn.optonline.net)
[01:50:58] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[01:51:17] *** Joins: krish (~krish@70-130-80-203.lightspeed.irvnca.sbcglobal.net)
[01:52:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[01:52:14] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:52:28] *** Joins: federico_it (~textual@151.95.120.179)
[01:52:34] *** Quits: m_antis_ (~m_antis@ool-44c09a21.dyn.optonline.net) (Read error: Connection reset by peer)
[01:53:09] *** Joins: m_antis_ (~m_antis@ool-44c09a21.dyn.optonline.net)
[01:53:11] *** Quits: kakashiAL (~kakashi@ip-37-201-199-28.hsi13.unitymediagroup.de) (Ping timeout: 264 seconds)
[01:54:03] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi) (Read error: Connection reset by peer)
[01:54:41] *** Quits: m_antis (~m_antis@ool-44c09a21.dyn.optonline.net) (Ping timeout: 268 seconds)
[01:56:00] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[01:56:14] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[01:57:12] *** Quits: m_antis_ (~m_antis@ool-44c09a21.dyn.optonline.net) (Client Quit)
[02:00:25] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[02:00:44] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[02:01:15] *** Quits: phryk (~totallyno@user/phryk) (Quit: ZNC 1.8.2 - https://znc.in)
[02:04:18] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[02:04:57] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:05:21] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[02:05:44] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:d960:c213:7b57:d73e)
[02:05:46] *** Joins: m_antis (~m_antis@ool-44c09a21.dyn.optonline.net)
[02:09:29] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 268 seconds)
[02:10:09] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[02:10:58] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:d960:c213:7b57:d73e) (Ping timeout: 260 seconds)
[02:11:00] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[02:11:08] *** Quits: origamisith (~origamisi@c-98-247-49-35.hsd1.wa.comcast.net) (Quit: WeeChat 3.3)
[02:11:54] *** Quits: jonifen (~jonifen@user/jonifen) (Quit: Leaving)
[02:12:30] *** Joins: jonifen (~jonifen@user/jonifen)
[02:12:35] *** Quits: jonifen (~jonifen@user/jonifen) (Remote host closed the connection)
[02:13:08] *** Joins: jonifen (~jonifen@user/jonifen)
[02:13:22] *** Joins: sebastorama (~sebastora@190.83.56.68)
[02:13:40] *** Joins: phryk (~totallyno@user/phryk)
[02:13:59] <ThePendulum> that information is classified, sir, please move on
[02:14:28] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[02:16:08] *** Joins: sillyslux__ (~silly@user/silly)
[02:16:13] *** Joins: origamisith (~origamisi@c-98-247-49-35.hsd1.wa.comcast.net)
[02:16:52] *** Quits: jonifen (~jonifen@user/jonifen) (Client Quit)
[02:18:01] *** Quits: gambl0re (~gambl0re@216.154.17.240) (Quit: WeeChat 3.3)
[02:18:16] *** Quits: origamisith (~origamisi@c-98-247-49-35.hsd1.wa.comcast.net) (Client Quit)
[02:19:17] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 256 seconds)
[02:19:38] *** Joins: kakashiAL (~kakashi@ip-37-201-199-28.hsi13.unitymediagroup.de)
[02:20:37] *** Joins: jonifen (~jonifen@user/jonifen)
[02:21:00] *** Quits: phryk (~totallyno@user/phryk) (Remote host closed the connection)
[02:22:31] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[02:24:30] *** Quits: kakashiAL (~kakashi@ip-37-201-199-28.hsi13.unitymediagroup.de) (Ping timeout: 260 seconds)
[02:26:01] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:27:02] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 240 seconds)
[02:28:55] *** Quits: pmercado (~pmercado@186.107.37.219) (Ping timeout: 256 seconds)
[02:30:02] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:16] *** Quits: m_antis (~m_antis@ool-44c09a21.dyn.optonline.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:30:27] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:30:37] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[02:33:52] *** Joins: pizdets_ (~pizdets@183.182.114.136)
[02:33:59] *** Quits: pizdets (~pizdets@183.182.111.207) (Ping timeout: 264 seconds)
[02:37:09] *** Joins: kakashiAL (~kakashi@ip-37-201-199-28.hsi13.unitymediagroup.de)
[02:37:33] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[02:40:26] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:40:53] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[02:40:56] *** Quits: summersault (~summersau@179.221.251.16) (Remote host closed the connection)
[02:41:33] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 268 seconds)
[02:41:42] *** Joins: rustyshackleford (uid236774@helmsley.irccloud.com)
[02:42:10] *** Quits: kakashiAL (~kakashi@ip-37-201-199-28.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[02:42:55] *** Quits: dalek-caan (~Thunderbi@109.252.124.86) (Quit: dalek-caan)
[02:43:21] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[02:45:21] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 256 seconds)
[02:48:36] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[02:51:15] *** Joins: fernand (~fernand@179.156.35.4)
[02:52:56] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[02:53:08] *** Quits: CoolerX (~CoolerX@user/coolerx) (Remote host closed the connection)
[02:53:11] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[02:53:32] *** Quits: _xxoxx (~Junxter@222.94.237.247) (Ping timeout: 240 seconds)
[02:53:33] *** Joins: CoolerX (~CoolerX@user/coolerx)
[02:55:03] *** Joins: zerothule (~eric@2601:602:8d80:4e50:a466:5c5d:fb70:c1f4)
[02:57:40] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[02:57:46] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[02:57:52] *** Joins: vysn (~vysn@user/vysn)
[02:58:51] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[02:59:07] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[02:59:47] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[03:00:03] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 268 seconds)
[03:00:09] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[03:00:41] *** Joins: mimmy (~mimmy@cpef81d0f857c83-cmf81d0f857c80.cpe.net.cable.rogers.com)
[03:01:23] *** Joins: phryk (~totallyno@user/phryk)
[03:01:56] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Remote host closed the connection)
[03:04:03] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 256 seconds)
[03:04:35] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 264 seconds)
[03:04:56] *** Joins: voltage (voltage@user/voltage)
[03:05:45] *** Quits: mimmy (~mimmy@cpef81d0f857c83-cmf81d0f857c80.cpe.net.cable.rogers.com) (Ping timeout: 256 seconds)
[03:06:15] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[03:07:32] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 240 seconds)
[03:08:48] *** Quits: pulse (~pulse@user/pulse) (Quit: Join our community of creative supermutants at https://indiedevs.net/)
[03:10:20] *** Quits: phryk (~totallyno@user/phryk) (Quit: ZNC 1.8.2 - https://znc.in)
[03:10:21] <CoderGuy> okay after doing a lot of looking I think I get how this works now
[03:10:29] *** voltage is now known as voltage_
[03:11:05] <CoderGuy> here's my theory, because this exists function* thefunction(){ console.log("step 1");yield;console.log("step 2");}
[03:11:35] <CoderGuy> and you can do let myobj = thefunction(); followed by thefunction.next();
[03:11:42] <CoderGuy> or rather myobj.next();
[03:12:11] <CoderGuy> I think Async functions are wrapped up neatly into one of those, & then upon resolving a promise it calls the next line or atleast gets to the yield part
[03:13:54] <CoderGuy> I try'd that & then essentially put all the async code into one of those & used setTimeout with the final step being myobj.next(); and it seemed to work exactly the same
[03:14:23] <CoderGuy> so idk why it's so hard to look at some source code for an explanation to this but this is my guess as to how this all works
[03:15:23] <CoderGuy> anyways considering that, if I wanted my promise code to work properly all I have to do is consider that everything existing inside an async function will finally allow things to block properly granted I use a promise via the await steps
[03:16:07] <CoderGuy> also I learned a lot about blocking & how browsers render things etc, so this was a fun rabbit hole :D
[03:16:19] *** Quits: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[03:16:42] *** Quits: zerothule (~eric@2601:602:8d80:4e50:a466:5c5d:fb70:c1f4) (Ping timeout: 268 seconds)
[03:16:53] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[03:17:21] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[03:17:58] *** Joins: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net)
[03:18:09] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:914a:4abd:20a6:2e03)
[03:18:47] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[03:19:06] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:914a:4abd:20a6:2e03) (Client Quit)
[03:22:16] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 268 seconds)
[03:22:23] *** Quits: re (~user@user/re) (Remote host closed the connection)
[03:27:02] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[03:30:07] *** Quits: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[03:30:38] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[03:30:54] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[03:31:02] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 240 seconds)
[03:31:36] *** Quits: adsc (~adsc@2a02:1206:4524:8a30:9672:ebb0:2225:b157) (Quit: Client closed)
[03:31:53] *** Joins: shokohsc8618 (~shokohsc@161.88.195.77.rev.sfr.net)
[03:34:56] *** Joins: vladoski (~vladoski@2001:b07:add:d406:757f:c492:3802:37d)
[03:35:47] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 264 seconds)
[03:35:55] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[03:37:00] *** Joins: phryk (~totallyno@user/phryk)
[03:37:57] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:39:32] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[03:39:36] <sickdyd> people that automatically subscribe you to their mailing list should be locked in portable toilets and set on fire
[03:40:13] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[03:40:32] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 240 seconds)
[03:43:00] *** Quits: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch) (Quit: Leaving)
[03:51:13] *** stenno is now known as stenno\OK
[03:53:54] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[03:54:02] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[03:56:58] *** Joins: zerothule (~eric@2601:602:8d80:4e50:a466:5c5d:fb70:c1f4)
[03:58:38] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 268 seconds)
[03:59:42] *** Quits: nomic (~nomic@185.217.117.164) (Quit: Leaving)
[04:01:16] *** Quits: krish (~krish@70-130-80-203.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 256 seconds)
[04:03:42] <obimod> lol
[04:05:51] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[04:06:14] *** Quits: zerothule (~eric@2601:602:8d80:4e50:a466:5c5d:fb70:c1f4) (Ping timeout: 260 seconds)
[04:06:17] *** Joins: z_lehinsun (~lehinsun@188.113.178.220)
[04:07:31] <ThePendulum> we tried that but we got an email from a customer saying they thought it's a bit rude
[04:08:04] *** Quits: sakhd__ (~lehinsun@188.113.178.220) (Read error: Connection reset by peer)
[04:09:38] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[04:10:35] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 264 seconds)
[04:12:09] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[04:14:53] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[04:17:08] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 268 seconds)
[04:20:13] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[04:21:03] *** Joins: mimmy (~mimmy@cpef81d0f857c83-cmf81d0f857c80.cpe.net.cable.rogers.com)
[04:22:03] <stenno\OK> i have curried my functions like this: const handleUser = (user) => (cb) => ..., const transformUser = (user) => ...
[04:22:17] <stenno\OK> so all user-related functions take the user as first parameter
[04:22:38] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:347c:2b87:5af4:b850)
[04:22:55] <stenno\OK> how would i now appyly a user to all of them and return them?
[04:23:43] <stenno\OK> would that be like: const userFunctions = (user) => ({ handle: handleUser(user), ... })
[04:23:56] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:347c:2b87:5af4:b850) (Client Quit)
[04:25:02] *** Quits: mimmy (~mimmy@cpef81d0f857c83-cmf81d0f857c80.cpe.net.cable.rogers.com) (Ping timeout: 240 seconds)
[04:25:03] <stenno\OK> const apply = (obj, ...functions) => functions.map(fun => fun(obj);
[04:25:53] <stenno\OK> blep i should just sleep, sorry
[04:27:19] *** Quits: federico_it (~textual@151.95.120.179) (Quit: Textual IRC Client: www.textualapp.com)
[04:28:28] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[04:29:15] *** Quits: src_ (~src@user/src) (Quit: Leaving)
[04:30:25] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[04:34:32] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 240 seconds)
[04:35:38] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 268 seconds)
[04:37:26] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:38:27] *** Quits: Xavier7 (~O_o@179.6.152.229) (Quit:  IRcap  8.72 )
[04:41:11] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 264 seconds)
[04:41:36] *** Joins: sebastorama (~sebastora@190.83.56.68)
[04:46:29] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[04:47:11] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 264 seconds)
[04:48:26] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[04:48:26] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[04:48:26] *** Joins: wroathe (~wroathe@user/wroathe)
[04:48:41] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[04:49:44] *** Quits: vladoski (~vladoski@2001:b07:add:d406:757f:c492:3802:37d) (Quit: Textual IRC Client: www.textualapp.com)
[04:50:02] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:1f:67de:401b:c472)
[04:53:31] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 268 seconds)
[04:55:37] *** Joins: kakashiAL (~kakashi@ip-37-201-199-28.hsi13.unitymediagroup.de)
[04:56:47] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:1f:67de:401b:c472) (Ping timeout: 264 seconds)
[05:00:18] *** Quits: kakashiAL (~kakashi@ip-37-201-199-28.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[05:04:19] *** Joins: austincheney_ (~austinche@2600:1700:1220:76c8:f982:507a:283b:3df9)
[05:06:42] *** Joins: binary01 (~binary01@192.110.171.216)
[05:06:59] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[05:07:31] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[05:08:11] *** Quits: austincheney (~austinche@2600:1700:1220:76c8:7c45:4c33:4d1e:5867) (Ping timeout: 264 seconds)
[05:10:07] *** Quits: CryptoDavid (uid14990@uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[05:12:01] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 268 seconds)
[05:15:36] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:16:05] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[05:17:20] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[05:17:21] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[05:20:30] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[05:24:02] *** Quits: stagas (~stagas@2a02:587:c40e:fc00:44a1:8013:6109:9ea8) (Ping timeout: 240 seconds)
[05:25:01] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[05:25:47] *** Joins: m_antis (~m_antis@ool-44c09a21.dyn.optonline.net)
[05:26:04] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[05:30:24] *** lind{at}yahoo is now known as HeyMonopoly
[05:30:46] *** HeyMonopoly is now known as lind{at}yahoo
[05:31:17] *** Joins: ferdna (~ferdna@user/ferdna)
[05:31:33] *** Quits: wroathe (~wroathe@user/wroathe) (Quit: leaving)
[05:32:11] *** Quits: haniaF_ (~haniaF@83.24.198.7.ipv4.supernova.orange.pl) (Ping timeout: 264 seconds)
[05:32:15] *** Joins: haniaF (~haniaF@83.24.198.7.ipv4.supernova.orange.pl)
[05:32:21] *** lind{at}yahoo is now known as HeyMonopoly
[05:38:20] *** HeyMonopoly is now known as IWillIAvoidWhate
[05:40:42] *** IWillIAvoidWhate is now known as JasonLind
[05:41:40] *** Quits: sebastorama (~sebastora@190.83.56.68) (Quit: Textual IRC Client: www.textualapp.com)
[05:43:58] *** Joins: zerothule (~eric@2601:602:8d80:4e50:484c:983b:3733:84ca)
[05:47:07] *** Joins: Guest67 (~Guest67@r74-193-83-99.parscmta01.parstx.tl.dh.suddenlink.net)
[05:48:03] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:49:23] *** Joins: origamisith (~origamisi@c-98-247-49-35.hsd1.wa.comcast.net)
[05:50:23] *** Joins: tlf (~tlf@mobile-166-170-21-246.mycingular.net)
[05:50:50] *** Quits: Guest67 (~Guest67@r74-193-83-99.parscmta01.parstx.tl.dh.suddenlink.net) (Quit: Client closed)
[05:51:30] *** Quits: CoolerX (~CoolerX@user/coolerx) (Read error: Connection reset by peer)
[05:51:54] *** Joins: CoolerX (~CoolerX@user/coolerx)
[05:53:57] *** Quits: m_antis (~m_antis@ool-44c09a21.dyn.optonline.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:54:17] *** Joins: cyhyraeth (~cyhyraeth@user/cyhyraeth)
[05:55:59] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[05:56:23] *** Quits: cyhyraeth (~cyhyraeth@user/cyhyraeth) (Client Quit)
[06:00:38] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[06:01:35] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 264 seconds)
[06:02:23] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[06:03:43] *** JasonLind is now known as lind{at}yahoo
[06:04:19] *** Joins: Betal (~Betal@user/betal)
[06:06:20] *** Sven_vB_ is now known as Sven_vB
[06:13:44] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:1f:67de:401b:c472)
[06:14:12] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:6c44:8fb3:1c38:d2af)
[06:15:12] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[06:18:37] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:1f:67de:401b:c472) (Ping timeout: 268 seconds)
[06:24:55] *** Joins: silly_ (~silly@user/silly)
[06:28:12] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[06:28:14] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[06:28:34] *** Quits: sillyslux__ (~silly@user/silly) (Ping timeout: 260 seconds)
[06:28:38] *** Quits: origamisith (~origamisi@c-98-247-49-35.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[06:29:18] *** Joins: origamisith (~origamisi@c-98-247-49-35.hsd1.wa.comcast.net)
[06:29:27] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[06:31:26] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[06:32:01] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[06:32:03] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:e556:d159:b2d2:a2ba)
[06:32:05] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Client Quit)
[06:32:33] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:1f:67de:401b:c472)
[06:32:50] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 260 seconds)
[06:33:04] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:e556:d159:b2d2:a2ba) (Client Quit)
[06:34:42] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 260 seconds)
[06:35:39] *** Joins: m_antis (~m_antis@ool-44c09a21.dyn.optonline.net)
[06:37:07] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 256 seconds)
[06:37:08] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:1f:67de:401b:c472) (Ping timeout: 268 seconds)
[06:48:05] *** Joins: jazzy (~jaziz@user/jaziz)
[06:52:26] *** Joins: zebrag (~chris@user/zebrag)
[06:52:50] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 260 seconds)
[06:55:50] *** Joins: stagas (~stagas@2a02:587:c40e:fc00:58a:c3a0:855b:2307)
[06:56:09] *** Quits: fernand (~fernand@179.156.35.4) (Quit: Connection closed)
[06:59:14] *** Joins: electrostatic1 (~electrost@2601:600:8600:5a1:d4ef:4737:30dc:c4c0)
[07:01:10] *** Quits: tlf (~tlf@mobile-166-170-21-246.mycingular.net) (Ping timeout: 268 seconds)
[07:08:30] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[07:08:30] *** Quits: m_antis (~m_antis@ool-44c09a21.dyn.optonline.net) (Read error: Connection reset by peer)
[07:09:03] *** Joins: m_antis (~m_antis@gateway/vpn/pia/mantis/x-18339116)
[07:12:40] *** Joins: pmercado (~pmercado@186.107.37.219)
[07:13:18] *** Joins: EdFletcher (~PKD@user/edfletcher)
[07:16:35] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:16:55] *** Quits: m_antis (~m_antis@gateway/vpn/pia/mantis/x-18339116) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:18:34] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[07:18:42] <sheetjs> is there a clever modern js way of picking only specific keys from a JS object?
[07:19:03] <Decker> {key1,key2}
[07:19:09] <systemfault> Isn't that called "destructuring"?
[07:19:12] <sheetjs> e.g. picker({a:1,b:2,c:3,d:4}, ["b", "a"]) is {b:2, a:1}
[07:19:29] <sheetjs> the keys are in an array
[07:19:57] <systemfault> Isn't that just .map?
[07:20:26] <sheetjs> Object.fromEntries(keys.map(k => ([k, obj[k]]))) works
[07:20:34] <systemfault> There's nothing built-in to do that...
[07:20:38] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:21:13] <sheetjs> no ... combined with [] magic?
[07:21:47] <Decker> keys.reduce( ((acc,k) => acc[k] =obj[k]), {})
[07:22:35] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 264 seconds)
[07:22:49] <Decker> n> const obj={a:1,b:3,c:5,d:8};["a","b"].reduce( ((acc,k) => acc[k] =obj[k],acc), {})
[07:22:51] <jellobot> (fail) ReferenceError: acc is not defined
[07:23:02] *** Quits: zerothule (~eric@2601:602:8d80:4e50:484c:983b:3733:84ca) (Ping timeout: 240 seconds)
[07:23:08] <Decker> n> const obj={a:1,b:3,c:5,d:8};["a","b"].reduce( ((acc,k) => (acc[k] =obj[k],acc)), {})
[07:23:09] <jellobot> (okay) { a: 1, b: 3 }
[07:23:42] <sheetjs> sure, that is effectively the same as the fromEntries thing
[07:24:02] <Decker> except this returns with an object instead of an array
[07:24:06] <sheetjs> except ES5 friendly :)
[07:24:09] <Decker> n/m
[07:24:18] <sheetjs> n> Object.fromEntries([["a", 1], ["b", 2]])
[07:24:19] <jellobot> (okay) { a: 1, b: 2 }
[07:26:30] <sheetjs> Object.fromEntries is ES7 or something
[07:26:51] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:32:16] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[07:35:06] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:c9bb:e46c:7fac:4568)
[07:35:36] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:3441:3124:6785:fc52)
[07:35:54] *** Quits: phryk (~totallyno@user/phryk) (Quit: ZNC 1.8.2 - https://znc.in)
[07:36:13] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:3441:3124:6785:fc52) (Client Quit)
[07:37:18] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[07:38:12] *** Joins: EdFletcher (~PKD@user/edfletcher)
[07:38:57] <stenno\OK> promises are monads right?
[07:39:12] <stenno\OK> sheetjs: can i PM?
[07:39:40] <sheetjs> ofc stenno\OK
[07:39:59] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:c9bb:e46c:7fac:4568) (Ping timeout: 264 seconds)
[07:40:04] *** Joins: lehinsun (~ttytwiste@188.113.176.117)
[07:42:56] *** Joins: sillyslux__ (~silly@user/silly)
[07:44:11] *** Quits: silly_ (~silly@user/silly) (Read error: Connection reset by peer)
[07:44:24] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[07:44:34] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[07:48:07] *** Joins: poiqwepoiqwe (uid525840@hampstead.irccloud.com)
[07:48:12] <poiqwepoiqwe> in terms of tracking a metric in an app that counts the views a particular record has been viewed it's just add view count to model and increment on post to retrieve data or is there a better  way to do this? if that makes sense
[07:48:38] *** Joins: kill (~killown@user/killown)
[07:50:30] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[07:52:03] *** Joins: phryk (~totallyno@user/phryk)
[07:52:35] <poiqwepoiqwe> noones told me im wrong ... must be an accepted solution
[07:52:44] <systemfault> If there was an ES7, it would be ES2016... which had nothing interesting, as far as I can remember.
[07:52:58] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[07:53:09] *** Joins: Rockwood (~Rocky@user/rocky)
[07:53:12] <wez> poiqwepoiqwe: There's a number of libraries that do that for you.
[07:53:31] <systemfault> Promise are not MONADs!!! RRRREEEEEEE!!!!11
[07:53:52] <systemfault> They're extremely unlawful monadz0r
[07:54:14] <wez> haha
[07:57:26] <poiqwepoiqwe> wez: livraries
[07:57:28] <poiqwepoiqwe> ?
[07:57:44] <stenno\OK> why are they not monads? (honest question, not sealioning)
[07:58:11] <stenno\OK> oh something with wrapping
[07:58:12] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[07:58:25] <poiqwepoiqwe> sorry for my mispelling. if you could link me a library?
[07:58:44] <systemfault> stenno\OK: Monads should have .flat()
[07:59:10] <systemfault> And because Promise is automagically flattening, it's unlawful
[07:59:59] <systemfault> This requires to be possible and requires to maintain its structure: Promise.resolve(Promise.resolve(10))
[08:00:25] <stenno\OK> gotcha, thanks
[08:01:04] <systemfault> At least we have Array :p
[08:01:58] * poiqwepoiqwe just adds a field in the model that increments in the function that handles the api request
[08:02:17] <stenno\OK> oh yeah, a constructor, then Array.from, and .map
[08:02:31] <stenno\OK> and it can flatten properlyy
[08:02:32] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 240 seconds)
[08:07:13] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[08:09:58] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:11:24] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[08:11:59] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:18:13] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[08:18:18] <stenno\OK> systemfault: why does Promise behave in that way?
[08:19:53] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[08:21:22] <wez> poiqwepoiqwe: Google Analytics?
[08:25:15] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[08:26:11] <poiqwepoiqwe> its more a metric that is displayed to users ... not your typical traffic analysis
[08:26:13] <systemfault> stenno\OK: The answer is probably a tradeoff to be easier to use...
[08:26:23] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:26:27] <stenno\OK> ok
[08:26:40] <Rockwood> systemfault, stenno\OK o/
[08:26:48] <stenno\OK> hi
[08:27:06] <Rockwood> IT is on boom i think now days
[08:27:09] <systemfault>  Otherwise, we'd see people returning Promise<Promise<Promise<Whatever>>> and they would wonder why it doesn't work
[08:27:43] <systemfault> Yo dawg... you like "await"? What about "await await await someTripleNestedPromise
[08:28:58] *** Joins: CoolerX (~CoolerX@user/coolerx)
[08:29:02] *** Quits: electrostatic1 (~electrost@2601:600:8600:5a1:d4ef:4737:30dc:c4c0) (Ping timeout: 240 seconds)
[08:34:34] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[08:36:08] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[08:36:19] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[08:37:25] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:cc87:cc85:f027:20a)
[08:38:00] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[08:38:34] *** Joins: EdFletcher (~PKD@user/edfletcher)
[08:39:49] <sheetjs> you can also await constants
[08:40:05] <sheetjs> n> (async() => await await await 3)()
[08:40:07] <jellobot> (okay) 3
[08:41:45] <systemfault> We'd be like... "You need to .flat(Infinity) your Promises before awaiting them!"
[08:42:06] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[08:42:22] <systemfault> Monads are just better in a typed language...
[08:42:33] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:cc87:cc85:f027:20a) (Ping timeout: 265 seconds)
[08:43:52] <systemfault> You can still make a monad in JS off a "task"
[08:44:01] *** Joins: D4mned (~D1mned@212.101.251.22)
[08:44:11] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[08:48:06] <wez> sheetjs: correct
[08:48:26] <wez> systemfault: I typed lanmguage like TypeScript or Flow
[08:48:27] <wez> ?
[08:48:36] <systemfault> For sure.
[08:50:47] <stenno\OK> iterators are monadic with iterator helpers
[08:51:34] <wez> :O
[08:53:56] <stenno\OK> unwrapping there works normally which i guess is the reason why yield* exists
[08:56:28] *** Joins: vysn (~vysn@user/vysn)
[08:57:11] <ljharb> stenno\OK: not sure that's entirely true
[08:57:26] <ljharb> anyways yes, monadic Promises would suck
[08:57:29] <stenno\OK> what is (not)?
[08:57:38] <ljharb> that iterators are monadic with iterator helpers.
[08:57:44] <ljharb> (but it sucks that Map and Set aren't Functors)
[08:57:59] *** Joins: kakashiAL (~kakashi@ip-37-201-199-28.hsi13.unitymediagroup.de)
[09:00:52] <wez> When is Map and Set going to be fixzed?
[09:00:54] <wez> fixed*
[09:01:08] <stenno\OK> ljharb: but they'd became functors with iterator helpers
[09:01:37] <stenno\OK> Set/Map that is
[09:02:16] <wez> They don't have native JSON serialisation support, they don't have useful methods either
[09:02:21] <systemfault> wez: Set is definitely missing a few "expected functions"... and it would be great if they both had comparators, but I wouldn't say that they're broken
[09:02:39] <stenno\OK> oh hm actually
[09:02:43] <wez> systemfault: Compared to Python's equivalents they are :)
[09:02:45] *** Quits: kakashiAL (~kakashi@ip-37-201-199-28.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[09:04:09] <ljharb> stenno\OK: no they wouldn't
[09:04:18] <ljharb> stenno\OK: once it's an iterator the map or set is gone
[09:04:32] <ljharb> wez: they will never have native JSON serialization; i championed that proposal and it was rejected
[09:04:44] *** Joins: CoolerX (~CoolerX@user/coolerx)
[09:04:45] <ljharb> wez: there's a few proposals to add a bunch of methods to map and set
[09:04:53] <ljharb> but also, "comparing to python" is what's really broken
[09:05:22] <systemfault> That wouldn't work I think (JSON serialization), how would you serialize DOM nodes? By just executing .toString() on them? Forcing a serializer function?
[09:05:35] *** Joins: zerothule (~eric@2601:602:8d80:4e50:2482:73b6:c42a:6a0c)
[09:05:38] <stenno\OK> i am still not really familiar with those concepts i see, gotta learn more
[09:06:43] <ljharb> systemfault: dom nodes? we're talking about map and set
[09:06:56] <ljharb> systemfault: but yeah basically the proposal for toJSON was to spit out the entries
[09:07:07] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[09:07:12] <ljharb> systemfault: which means, an unserializable object remains so, but if you only use serializable things, then you could serialize the collection
[09:07:24] <ljharb> which is far better than the current state of "you can't serialize the collection at all"
[09:07:34] <ljharb> (without converting to entries yourself, which doesn't work with a nested collection)
[09:09:33] <D4mned> so serializing a function means turning it to string ?
[09:10:00] <D4mned> excuse for bargin in i got curious lol
[09:10:06] <D4mned> excuse me*
[09:10:38] <systemfault> To be honest, I never seen that as an issue... Just convert the map/set to an object/array. As far as JSON is concerned, I'm more concerned about BigInt but I don't think something is ever going to happen with that.
[09:11:52] *** Joins: EdFletcher (~PKD@user/edfletcher)
[09:11:56] <ljharb> D4mned: no, there's no universal way to serialize a function
[09:11:58] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[09:12:13] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:b134:3a4f:8308:cff2)
[09:12:20] <ljharb> systemfault: it's not an issue if the top level thing is a collection
[09:12:38] <ljharb> systemfault: but if you have a deeply nested structure, and the collection is buried within it, it is intensely painful to reach down and serialize that
[09:12:45] <wez> heh
[09:12:46] <ljharb> the same is true of bigint - it's 100% the exact same problem, in fact.
[09:12:49] <systemfault> I totally agree
[09:12:50] *** Quits: zerothule (~eric@2601:602:8d80:4e50:2482:73b6:c42a:6a0c) (Ping timeout: 260 seconds)
[09:13:11] <ljharb> it's just that you're more likely to have a nested bigint than a nested collection.
[09:13:21] <stenno\OK> [Symbol.toJSON] when
[09:13:22] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:b134:3a4f:8308:cff2) (Client Quit)
[09:13:29] <ljharb> stenno\OK: never, because `.toJSON` already exists.
[09:13:38] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[09:13:39] <ljharb> protocols when, is the real question
[09:13:50] <stenno\OK> blep
[09:14:18] <Rockwood> bye cya
[09:14:30] <systemfault> Sometimes before I retire from programming I guess :P
[09:14:44] *** Quits: pizdets_ (~pizdets@183.182.114.136) (Ping timeout: 250 seconds)
[09:15:00] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[09:15:36] *** Joins: pizdets (~pizdets@183.182.111.52)
[09:15:38] <ljharb> systemfault: i mean that's really up to you
[09:15:50] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[09:18:37] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[09:21:42] <systemfault> Just a way to say that it could take a lot of time until we get protocols standardized...
[09:22:29] <systemfault> Still stage 1... so it's not really taken seriously at this point.
[09:22:48] <systemfault> And it's already been 4 years that it's been proposed.
[09:23:11] <ljharb> wow, has it really been that long
[09:23:49] <ljharb> ok, 3 years, but that's still awhile
[09:23:56] <ljharb> since the last presentation anyways
[09:23:58] <systemfault> According to the proposal page, the last time it was talked about was in July 2018
[09:24:01] <systemfault> Yeah
[09:24:12] <ljharb> it'd probably be stage 4 by now, blame the mixin person
[09:24:20] <ljharb> oh wait no, people, there were 2
[09:24:22] * systemfault blames the mixin person
[09:24:44] <systemfault> s/person/duo
[09:26:13] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[09:30:30] <theskillwithin> awkward, I made the mixin duo
[09:30:38] *** Quits: voltage_ (voltage@user/voltage) (Ping timeout: 260 seconds)
[09:30:47] <theskillwithin> Its a competitor to Kitchenaid
[09:31:24] <systemfault> Reminds me that eventually, I have to buy one of those Kitchenaid Artisan stand mixer.
[09:32:01] <theskillwithin> there expensive,  should buy the mixin duo instead
[09:32:45] <theskillwithin> systemfault I hear there on sale at costco
[09:32:54] <systemfault> Never heard of that... the artisan stand mixer has a few adapters you can buy
[09:33:08] <systemfault> (For noodles... to grind meat..etc)
[09:33:22] <theskillwithin> i was over committing to a bit, mixin duo doesn't exist
[09:33:29] <systemfault> Ah.
[09:33:46] <systemfault> I'm not in the US so... I just believed it.
[09:33:51] <theskillwithin> haha
[09:34:37] *** Joins: Junxter (~Junxter@222.94.237.247)
[09:35:56] <theskillwithin> systemfault noodles?!  noods aren't keto
[09:36:18] <systemfault> My wife and daughter don't diet.
[09:36:36] *** Joins: CoolerX (~CoolerX@user/coolerx)
[09:36:40] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:cc87:cc85:f027:20a)
[09:36:58] <systemfault> *don't do the keto diet
[09:37:15] <ljharb> theskillwithin: neither were cavemen
[09:38:25] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[09:39:33] <theskillwithin> ljharb its caveperson now.
[09:40:04] *** Joins: pulse (~pulse@user/pulse)
[09:40:18] <theskillwithin> haha jk
[09:40:41] <stenno\OK> imagine comparing todays dietary requirements to the one 30k yeas ago
[09:40:44] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[09:41:02] <theskillwithin> cavemen, thats like the paleo diet tho,  so ya not keto
[09:41:11] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:cc87:cc85:f027:20a) (Ping timeout: 264 seconds)
[09:41:37] <systemfault> Cavemen probably felt lucky anytime they actually had something to eat...
[09:41:47] <stenno\OK> wait doesn't that even exist already, people who only eat raw meat and shit
[09:41:55] <ljharb> oh yeah my bad
[09:42:01] <ljharb> cavemen weren't paleo either
[09:42:11] <systemfault> I mean, the way it worked... they probably had a ton of food at times... and were nearly starving at other times.
[09:42:20] <ljharb> but right, keto is just forcing your body into distress, repeatedly
[09:42:32] <ljharb> systemfault: i'm not sure that's true
[09:42:50] <theskillwithin> ljharb I don't think cavemen were baking bread
[09:42:53] <ljharb> systemfault: like i'm sure there were occasional extreme weather events, but i think the food supply was likely relatively constant
[09:42:59] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[09:43:13] <ljharb> theskillwithin: they were making beer
[09:43:28] <ljharb> theskillwithin: https://www.huffpost.com/entry/even-cavemen-liked-to-get_n_5316914 as one example
[09:43:43] <systemfault> Beer couldn't have happened before the era of agriculture, no? Like ~15k years ago
[09:43:51] <ljharb> sure it could
[09:44:13] <ljharb> sour beers in germany are made by leaving a vat of stuff in the open air, and random yeasts floating in the air ferment it
[09:44:18] <ljharb> *some sour beers
[09:44:29] *** Joins: zerothule (~eric@2601:602:8d80:4e50:b9d6:c637:d67c:b572)
[09:44:35] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 268 seconds)
[09:44:48] <ljharb> anyways if you like paleo or keto or whatever that's fine ofc, but the nature fallacy is a really dumb reason to do or not do anything, is all
[09:44:51] <systemfault> But if they were nomads and not cultivating grains...
[09:44:59] <stenno\OK> 5k years ago according to wikipedia
[09:45:03] <stenno\OK> i thought it was much more early
[09:45:35] <stenno\OK> 7k years ago apparently
[09:45:39] <theskillwithin> ljharb nature and food are highly intertwined,  in a sense your eating nature
[09:48:03] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:48:25] <ljharb> theskillwithin: oh sure. the nature fallacy is that you can draw some arbitrary line and call one side of the line "natural, and good" and the other side "artificial, and bad"
[09:48:30] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[09:48:54] <ljharb> systemfault: cultivation isn't required if they're wild and foraged, i'd think
[09:48:57] <theskillwithin> ahh ic
[09:49:21] <theskillwithin> and really, how do you define whats natural and whats not,  really everything is natural
[09:49:33] <ljharb> theskillwithin: one of my favorite counters to that is https://jameskennedymonash.files.wordpress.com/2013/12/ingredients-of-all-natural-blueberries-poster.jpeg?w=640
[09:49:36] <ljharb> theskillwithin: yep, exactly.
[09:50:14] <systemfault> It's not that crazy to believe that ketosis is actually our natural state... babies are born into ketosis, early humans were probably eating mostly meat(event rotten meat? leftover from animals?) from hunt... because while prehistoric veggies were not what you see at the supermarket... and most plants/berries are poisonous to us.
[09:50:45] <theskillwithin> idk if paleo people say its more natural,  i think there goal is more to try to follow our evolution for insights into diet
[09:51:06] <systemfault> See what programming did to me... I can't even write "even" without writing "event" instead... :(
[09:51:13] <ljharb> theskillwithin: right but it's not based on actual science or history, it's just someone's ideology
[09:51:22] *** Quits: zerothule (~eric@2601:602:8d80:4e50:b9d6:c637:d67c:b572) (Ping timeout: 268 seconds)
[09:51:52] <ljharb> systemfault: i think early humans figured out early on how to cook meat; that's how our brains grew
[09:52:19] <systemfault> Yeah, being able to master "fire" was probably key in our evolution
[09:52:28] <ljharb> agreed
[09:53:50] <theskillwithin> cooked meat is a more bioavaliable source
[09:53:54] *** Joins: Crash1hd (~Crash1hd@64.56.153.179)
[09:54:47] <systemfault> It's a tradeoff, some nutrients are destroyed by cooking
[09:55:28] <ljharb> so are most lethal organisms
[09:55:44] <Crash1hd> hey everyone, I have this little puzzle I am stuck on. I need to create a function that returns a value based on the following obj obj = {lll: x, ll: x, l: x, h: y, hh: y, hhh: y} so if any of the x or any of the y's are anything other than 0 the 2 closest need to return as x - y any thoughts?
[09:55:54] <ljharb> i love raw meat and fish but i am very glad i am eating them in the last decade or three and not before that
[09:56:20] <ljharb> Crash1hd: what is "2 closest"
[09:56:24] <ljharb> Crash1hd: closest to zero?
[09:56:39] <Crash1hd> no more like l - h
[09:56:42] <Crash1hd> or l - hh
[09:56:48] <ljharb> Crash1hd: object keys are conceptually unordered
[09:56:53] <Crash1hd> ll - h or lll - hh etc...
[09:56:54] <ljharb> Crash1hd: if order matters, and object is the wrong data structure
[09:57:06] <ljharb> Crash1hd: unless you're saying they can be sorted, regardless of their order?
[09:57:14] <Crash1hd> correct
[09:57:24] <ljharb> Crash1hd: in which case, `Object.entries(obj).sort(comparator)` and then you can iterate over that array and find what you need
[09:57:45] <ljharb> eg `.flatMap` on that array, returning `[]` when you want to skip something and `[whatever]` when you want to keep "whatever", will give you an array of the final values
[09:58:24] <Crash1hd> so the x and y's can be anything from -infinity to +infinity
[09:58:50] <Crash1hd> the l's will grow smaller from l to ll to lll and the h's will grow larger from h to hh to hhh
[09:58:54] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[09:58:58] *** Joins: EdFletcher (~PKD@user/edfletcher)
[09:59:11] <ljharb> ok
[09:59:25] <ljharb> i don't think that changes anything except what logic goes in the flatMap function
[09:59:39] <Crash1hd> simple example would be something like obj = {lll: 0, ll: 5, l: 15, h: 25, hh: 100, hhh: 0}
[10:00:01] <Crash1hd> so I would want to know the n value of l to h which is 10
[10:00:30] <Crash1hd> but if the same example did not have l: 15 but rather an l: 0 then it would be the ll to h so 20
[10:00:40] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[10:01:07] <Crash1hd> oh and if all the h's are 0 then its then l to 100
[10:01:32] <Crash1hd> so this time it would be l: 15 to 100 so 85
[10:01:39] <ljharb> lol this is a really confusing set of requirements
[10:01:47] <Crash1hd> tell me about it. haha
[10:02:02] <theskillwithin> is this for school?
[10:02:42] <Crash1hd> no
[10:02:43] <Crash1hd> lol
[10:02:50] <Crash1hd> I wish, I would take the 0 haha
[10:03:22] <ljharb> what's it for
[10:03:23] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 264 seconds)
[10:03:25] <ljharb> and why are the requirements so obscure
[10:03:29] <Crash1hd> Company that I work for.
[10:03:39] <Crash1hd> we have a bar graph that requires the range
[10:04:25] <ljharb> and this is on a server, hopefully? because the backend should always bend over backwards to serve the frontend
[10:04:38] <Crash1hd> bahahaha
[10:04:41] <ljharb> the frontend shouldn't have to organize data like this, it should just get the data and vomit it into a graphing library
[10:04:56] <Crash1hd> no for some reason they always leave the hard stuff to the front end
[10:05:00] <Crash1hd> I agree
[10:05:31] <ljharb> i mean, a good reason for that is that frontend dev is much harder than backend dev, and the backend devs probably aren't competent enough to handle it
[10:05:37] <theskillwithin> don't put up with their shit Crash1hd!
[10:05:39] <ljharb> but a much better choice would be to make the backend do it.
[10:06:04] <Crash1hd> so the range could be -infinity to infinity and that is then converted to a percentage of 0 to 100 which means all the numbers above are in an equation of  ((val - newMin) / (newMax - newMin)) * 100;
[10:06:13] *** Quits: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com) (Ping timeout: 256 seconds)
[10:06:23] <Crash1hd> theskillwithin, well its more of a they give me values and I convert them to percents to update the css
[10:06:36] <Crash1hd> I did not realize this one was so convoluted
[10:06:47] <Crash1hd> and then they get mad at me that there should be an easier way haha
[10:07:16] <Crash1hd> This is my cheatsheat basically
[10:07:18] <Crash1hd> <- hhh -  hh -  h -  n  - l  - ll  - lll ->
[10:07:18] <Crash1hd>  r     o     y       g       y     o     r
[10:07:40] <Crash1hd> where anything greater than hhh is red and anything smaller than lll is also red and well the rest is as you see below
[10:07:40] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:391b:6915:6f86:ad4d)
[10:07:57] <ljharb> the easier way is to put all this stuff in the backend
[10:08:03] <Crash1hd> agreed
[10:08:07] <ljharb> where it can be easily fixed and deployed, and where you control the runtime environment
[10:08:09] <Crash1hd> and i have everything working except for getting the n value
[10:08:12] <ljharb> and also where you control RAM and CPU
[10:08:19] <Crash1hd> Right
[10:09:00] <Crash1hd> So basically I need to be able to return a value for n above where any of the h's and l's can be empty
[10:10:52] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[10:15:51] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:5d30:933f:5bbf:8fe0)
[10:16:18] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:391b:6915:6f86:ad4d) (Ping timeout: 260 seconds)
[10:17:02] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:5d30:933f:5bbf:8fe0) (Client Quit)
[10:20:45] <theskillwithin> should do jsfiddle for a question that complex anyhow,  with detailed comments on expected result vs desired result
[10:21:25] <theskillwithin> on result vs desired result*
[10:22:15] <Crash1hd> theskillwithin, :) I hear ya.
[10:22:43] <Crash1hd> was hoping for hints more than anything haha :)
[10:28:33] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850)
[10:29:56] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[10:31:12] *** Joins: mei (~mei@user/mei)
[10:31:22] <Crash1hd> theskillwithin, https://jsfiddle.net/r7no8hLs/ <-- this allbeight ugly works.
[10:33:43] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850) (Ping timeout: 265 seconds)
[10:37:34] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[10:38:29] *** Quits: niekniek (~niekniek@30-22-146-85.ftth.glasoperator.nl) (Remote host closed the connection)
[10:42:42] *** Joins: i0e (~is0ke3@user/is0ke3)
[10:49:51] *** Quits: origamisith (~origamisi@c-98-247-49-35.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[10:50:15] *** Joins: vats (~vats@103.158.91.169)
[10:58:35] *** Quits: obimod (~obimod@gateway/vpn/pia/obimod) (Ping timeout: 264 seconds)
[10:58:56] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[11:00:55] *** Joins: origamisith (~origamisi@c-98-247-49-35.hsd1.wa.comcast.net)
[11:03:28] *** Joins: x-x (~x@user/x-x)
[11:04:16] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[11:04:35] *** Quits: cow0w (~cow0w@user/cow0w) (Ping timeout: 264 seconds)
[11:10:18] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[11:10:19] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[11:11:07] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Client Quit)
[11:11:11] *** Quits: Crash1hd (~Crash1hd@64.56.153.179) (Ping timeout: 264 seconds)
[11:12:20] *** Joins: Crash1hd (~Crash1hd@64.56.153.179)
[11:12:34] *** Joins: obimod (~obimod@gateway/vpn/pia/obimod)
[11:13:05] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[11:13:58] *** night_wulfe_ is now known as night_wulfe
[11:14:47] *** Quits: vqueiroz (uid340368@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:15:06] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:15:21] *** Quits: pmercado (~pmercado@186.107.37.219) (Ping timeout: 256 seconds)
[11:16:14] *** Joins: CoolerX (~CoolerX@user/coolerx)
[11:16:57] *** Joins: cow0w (~cow0w@bzq-11-168-31-138.red.bezeqint.net)
[11:20:17] *** Joins: cow0w_ (~cow0w@bzq-11-168-31-138.red.bezeqint.net)
[11:21:20] *** Joins: irthewinner (~null@bzq-79-179-176-73.red.bezeqint.net)
[11:21:57] *** Joins: spronkey (~spronkey@203.86.199.163)
[11:22:57] *** Quits: spronkey (~spronkey@203.86.199.163) (Client Quit)
[11:23:15] *** Quits: cow0w (~cow0w@bzq-11-168-31-138.red.bezeqint.net) (Ping timeout: 268 seconds)
[11:25:58] *** Quits: Drgonz0 (~Drgonz0@107-179-254-222.cpe.teksavvy.com) ()
[11:26:05] *** Joins: gitesh (uid423739@ilkley.irccloud.com)
[11:28:23] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[11:30:30] *** Joins: i0e (~is0ke3@user/is0ke3)
[11:31:14] *** Joins: aniruddha (uid340443@ilkley.irccloud.com)
[11:32:09] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Quit: Leaving.)
[11:32:30] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[11:33:09] *** Joins: CoolerX (~CoolerX@user/coolerx)
[11:37:26] *** Quits: cow0w_ (~cow0w@bzq-11-168-31-138.red.bezeqint.net) (Quit: Leaving)
[11:40:04] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850)
[11:45:29] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850) (Ping timeout: 250 seconds)
[11:46:36] *** Joins: nomic (~nomic@185.217.117.164)
[11:50:47] *** Quits: x-x (~x@user/x-x) (Quit: leaving)
[11:53:00] *** Joins: kakashiAL (~kakashi@ip-37-201-199-28.hsi13.unitymediagroup.de)
[11:53:32] *** Joins: binary01 (~binary01@192.110.171.216)
[11:59:33] *** Quits: binary01 (~binary01@192.110.171.216) (Ping timeout: 256 seconds)
[12:06:41] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[12:08:08] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[12:21:01] *** Quits: gustik (~gustik@2a01:c844:240a:de20:3606:7339:bc88:b5f5) (Quit: Leaving)
[12:31:16] *** Joins: dalek-caan (~Thunderbi@109.252.124.86)
[12:31:56] *** Quits: vats (~vats@103.158.91.169) (Read error: Connection reset by peer)
[12:41:06] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[12:51:24] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[12:52:47] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850)
[12:55:39] *** Quits: kakashiAL (~kakashi@ip-37-201-199-28.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[12:56:23] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 268 seconds)
[12:56:51] *** Joins: kogepan (~kogepan@user/kogepan)
[12:57:45] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850) (Ping timeout: 265 seconds)
[12:58:32] *** Joins: zerothule (~eric@2601:602:8d80:4e50:b9d6:c637:d67c:b572)
[12:59:03] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:70c7:f14e:fee8:421a)
[13:00:29] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:70c7:f14e:fee8:421a) (Client Quit)
[13:00:58] *** Quits: CoolerX (~CoolerX@user/coolerx) (Remote host closed the connection)
[13:01:20] *** Joins: CoolerX (~CoolerX@user/coolerx)
[13:02:02] *** Joins: CoolerY (~CoolerX@user/coolerx)
[13:05:00] *** Quits: zerothule (~eric@2601:602:8d80:4e50:b9d6:c637:d67c:b572) (Ping timeout: 265 seconds)
[13:06:05] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 250 seconds)
[13:12:00] *** Quits: v3gajerusalem (~v3ga@2600:1702:ad0:3b90::40) (Ping timeout: 260 seconds)
[13:12:24] *** Joins: v3gajerusalem (~v3ga@99-38-191-33.lightspeed.clmasc.sbcglobal.net)
[13:14:46] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[13:15:30] *** Joins: kakashiAL (~kakashi@ip-37-201-199-28.hsi13.unitymediagroup.de)
[13:16:08] *** Joins: silly_ (~silly@user/silly)
[13:16:50] *** Quits: sillyslux__ (~silly@user/silly) (Read error: Connection reset by peer)
[13:17:46] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[13:17:52] <no_gravity> Good Morning
[13:18:01] <no_gravity> n> [1,2,3].find(2)
[13:18:03] <jellobot> (fail) TypeError: 2 is not a function
[13:18:05] <theskillwithin> o/
[13:18:10] <no_gravity> Does JS have a simple find function?
[13:18:13] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 250 seconds)
[13:18:18] <stenno\OK> includes
[13:18:24] <stenno\OK> for primitives
[13:18:28] <no_gravity> n> [1,2,3].includes(2)
[13:18:29] <jellobot> (okay) true
[13:18:34] <no_gravity> stenno\OK: I mean to find the index.
[13:18:40] <stenno\OK> findIndex
[13:18:46] <no_gravity> n> [1,2,3].findIndex(2)
[13:18:47] <jellobot> (fail) TypeError: 2 is not a function
[13:18:52] <no_gravity> stenno\OK: Not simple :)
[13:18:54] <stenno\OK> ???
[13:19:18] <stenno\OK> do you mean [1,2,3][2] ?
[13:19:25] <stenno\OK> you mean .at ?
[13:19:32] <stenno\OK> n> [1,2,3].at(2)
[13:19:33] <jellobot> (okay) 3
[13:20:00] <stenno\OK> OH you want to find the index of a primitive
[13:20:15] <no_gravity> stenno\OK: I mean the simple "find in array" function that every other language under the sun has.
[13:20:25] *** Quits: kakashiAL (~kakashi@ip-37-201-199-28.hsi13.unitymediagroup.de) (Ping timeout: 268 seconds)
[13:20:32] <stenno\OK> .findIndex
[13:20:36] <stenno\OK> with a callback
[13:20:45] <no_gravity> Yeah, but I mean without callback.
[13:21:11] <theskillwithin> n> [1,2,3].indexOf(2)
[13:21:12] <jellobot> (okay) 1
[13:21:48] <no_gravity> Yay!
[13:22:10] <no_gravity> theskillwithin: Thanks man!
[13:22:19] <theskillwithin> np
[13:23:04] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:6c44:8fb3:1c38:d2af) (Quit: Client closed)
[13:28:58] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[13:30:05] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[13:30:44] *** Joins: justache (~justache@user/justache)
[13:30:54] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[13:31:53] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850)
[13:33:59] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 264 seconds)
[13:35:24] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[13:36:09] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[13:36:25] *** Quits: stenno\OK (~stenno@user/stenno) (Ping timeout: 265 seconds)
[13:36:32] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850) (Ping timeout: 240 seconds)
[13:39:51] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 256 seconds)
[13:39:58] *** Quits: kcrk (~kcrk@user/kcrk) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[13:40:29] *** Joins: kcrk (~kcrk@user/kcrk)
[13:41:00] *** Quits: rustyshackleford (uid236774@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[13:41:32] *** Joins: CoolerZ (~CoolerX@user/coolerx)
[13:42:18] *** Joins: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:5be:28c2:b3af:e641)
[13:52:52] *** Joins: stenno\OK (~stenno@user/stenno)
[13:53:03] *** Joins: electrostatic1 (~electrost@2601:600:8600:5a1:1d03:d6ab:128d:461c)
[13:53:30] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[13:57:59] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 256 seconds)
[13:59:17] *** Joins: jetchisel (jetchisel@user/jetchisel)
[14:03:37] *** Joins: CryptoDavid (uid14990@uxbridge.irccloud.com)
[14:12:55] *** Joins: Assault (~Assault@176-93-249-121.bb.dnainternet.fi)
[14:13:51] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[14:13:57] *** Joins: CoolerY (~CoolerX@user/coolerx)
[14:14:29] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[14:15:52] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:17:47] *** Quits: CoolerZ (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[14:27:10] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[14:31:34] *** ChanServ sets mode: +o theskillwithin
[14:32:11] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[14:34:27] *** theskillwithin sets mode: +b $a:lind{at}yahoo:
[14:35:59] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Ping timeout: 250 seconds)
[14:36:25] *** Joins: AtomicInteger (~primamate@p200300ee170ca500e482c2a05d384488.dip0.t-ipconnect.de)
[14:37:16] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[14:37:43] <sickdyd> I have an npm package v5.4.2 where I just updated a dependency due to vulnerability; what version should be the next? v5.4.3?
[14:38:33] *** ChanServ sets mode: +o theskillwithin
[14:38:39] *** theskillwithin sets mode: +b *!uid486956@tinside.irccloud.com
[14:38:39] *** lind{at}yahoo was kicked by theskillwithin (keeps on parting and joining)
[14:38:57] *** ChanServ sets mode: -o theskillwithin
[14:44:01] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850)
[14:45:35] <silly_> next is me? other channels set redirects to #fix-your-connection
[14:45:39] *** Joins: zerothule (~eric@2601:602:8d80:4e50:45fd:f15e:6e23:edd7)
[14:46:54] <theskillwithin> silly_ huh? wat?
[14:47:49] *** Quits: stenno\OK (~stenno@user/stenno) (Quit: WeeChat 3.2)
[14:47:58] *** Joins: stenno (~stenno@user/stenno)
[14:48:20] <silly_> my internet connection is quite bad too
[14:48:55] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850) (Ping timeout: 265 seconds)
[14:49:02] <silly_> no chance to stay in #httpd, thumbs has banned me several times in the past
[14:50:11] *** Quits: zerothule (~eric@2601:602:8d80:4e50:45fd:f15e:6e23:edd7) (Ping timeout: 264 seconds)
[14:50:14] <Dorward> sickdyd: If you're using semantic versioning, yes. It's a backwards compatible bug fix with no new features. https://semver.org/
[14:50:20] <silly_> lol, there's 3 connection-fix channels
[14:51:00] <stenno> i wonder if libera still has those hidden auto-kline honeytrap channels
[14:51:08] <stenno> that were on the old network
[14:54:46] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Killed (NickServ (GHOST command used by Sven_vB_)))
[14:54:48] *** Joins: Sven_vB_ (~sven@user/sven-vb/x-2094958)
[14:58:03] *** Quits: Assault (~Assault@176-93-249-121.bb.dnainternet.fi) (Ping timeout: 256 seconds)
[15:00:09] *** Quits: duds- (~duds-@gateway/tor-sasl/duds) (Ping timeout: 276 seconds)
[15:03:36] *** Joins: zerothule (~eric@2601:602:8d80:4e50:dc6a:f37f:6671:bba6)
[15:04:49] *** Quits: kogepan (~kogepan@user/kogepan) (Ping timeout: 250 seconds)
[15:05:53] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850)
[15:09:08] *** Joins: kakashiAL (~kakashi@ip-37-201-199-28.hsi13.unitymediagroup.de)
[15:10:20] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:70c7:f14e:fee8:421a)
[15:10:49] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:e15c:d2bc:9fea:d850) (Ping timeout: 268 seconds)
[15:10:56] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:70c7:f14e:fee8:421a) (Client Quit)
[15:11:36] *** Joins: src (~src@user/src)
[15:13:22] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[15:15:18] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[15:19:24] *** Quits: grep_xtrange (~x@ac255238.ppp.asahi-net.or.jp) (Quit: Quitting)
[15:19:46] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[15:21:30] *** Quits: origamisith (~origamisi@c-98-247-49-35.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[15:22:26] *** Joins: cacarju (~cacarju@170.51.152.58)
[15:23:09] *** Quits: zerothule (~eric@2601:602:8d80:4e50:dc6a:f37f:6671:bba6) (Ping timeout: 268 seconds)
[15:25:22] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[15:25:26] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Client Quit)
[15:25:41] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[15:30:58] *** Quits: zer0bitz (~zer0bitz@2001:2003:f6bc:f00:5be:28c2:b3af:e641) (Ping timeout: 265 seconds)
[15:31:22] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi)
[15:32:26] *** Quits: cebor (~cebor@user/cebor) (Quit: bye!)
[15:33:18] *** Joins: cebor (~cebor@user/cebor)
[15:35:28] *** Quits: cacarju (~cacarju@170.51.152.58) (Quit: Saliendo)
[15:36:04] *** Joins: Ducki (~ducki@user/ducki)
[15:37:15] *** Quits: Ducki_ (~ducki@user/ducki) (Ping timeout: 265 seconds)
[15:37:26] *** Quits: aniruddha (uid340443@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[15:37:38] *** Quits: Crash1hd (~Crash1hd@64.56.153.179) (Quit: Leaving)
[15:40:42] *** Quits: D4mned (~D1mned@212.101.251.22) (Read error: Connection reset by peer)
[15:42:16] *** Joins: D4mned (~D1mned@212.101.251.104)
[15:48:37] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[15:48:41] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Client Quit)
[15:48:57] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[15:52:44] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[15:53:30] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Client Quit)
[15:53:47] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[15:57:27] *** Joins: zerothule (~eric@2601:602:8d80:4e50:6581:57ad:562b:d06e)
[15:57:55] *** Joins: hgjgjhj (~hgjgjhj@188.120.119.49)
[15:59:28] *** Joins: han-solo (~han-solo@user/han-solo)
[16:03:50] *** Quits: zerothule (~eric@2601:602:8d80:4e50:6581:57ad:562b:d06e) (Ping timeout: 265 seconds)
[16:08:21] *** Joins: qswz (~caub@89-80-20-125.abo.bbox.fr)
[16:10:11] *** Joins: CoolerY (~CoolerX@user/coolerx)
[16:17:25] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:8ce9:9a4:40aa:9fe2)
[16:18:03] *** Quits: electrostatic1 (~electrost@2601:600:8600:5a1:1d03:d6ab:128d:461c) (Ping timeout: 250 seconds)
[16:22:41] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:8ce9:9a4:40aa:9fe2) (Ping timeout: 265 seconds)
[16:25:58] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[16:26:04] *** Joins: electrostatic1 (~electrost@2601:600:8600:5a1:1d03:d6ab:128d:461c)
[16:27:14] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[16:27:56] <qswz> !ciu x
[16:28:03] *** Quits: nomic (~nomic@185.217.117.164) (Quit: Leaving)
[16:29:41] <qswz> sth broke probly
[16:30:09] <theskillwithin> sth?
[16:33:31] <silly_> smthng
[16:34:03] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 268 seconds)
[16:34:26] <theskillwithin> ah
[16:35:14] <theskillwithin> qswz well fix it then =]
[16:36:54] *** Joins: zerothule (~eric@2601:602:8d80:4e50:6581:57ad:562b:d06e)
[16:38:06] *** Joins: vqueiroz (uid340368@hampstead.irccloud.com)
[16:39:46] <theskillwithin> if you don't know qswz helps jellobot
[16:40:18] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[16:42:02] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[16:44:24] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:b05c:72d8:52bc:d84f)
[16:45:20] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:b05c:72d8:52bc:d84f) (Client Quit)
[16:45:25] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:8ce9:9a4:40aa:9fe2)
[16:46:13] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 250 seconds)
[16:46:30] *** Quits: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com) (Ping timeout: 260 seconds)
[16:47:46] *** Quits: CryptoDavid (uid14990@uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[16:53:22] <dostoyevsky2> My JavaScript SPA needs like 30s to load... time to implement some loading animations I guess
[16:54:24] <theskillwithin> ty qswz
[16:54:28] <qswz> or time to make it faster
[16:54:39] <qswz> code splitting
[16:54:55] <qswz> loaders are like ads, a loss of time
[16:55:02] <theskillwithin> 30 seconds?!?!  wtf
[16:55:15] <qswz> a disrespect to the use
[16:55:17] <qswz> r*
[16:56:16] <qswz> for example the layout like header, shouldn't take time to load
[16:56:31] <qswz> you should show as much as you can
[16:56:34] <theskillwithin> dostoyevsky2 are you doing code splitting?
[16:56:52] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:8ce9:9a4:40aa:9fe2) (Ping timeout: 268 seconds)
[16:57:30] <dostoyevsky2> I can make it start up in 2s... if I only render 100 rows, instead of 4000 rows...  so I plan to do some tiling
[16:57:31] *** Joins: mimmy (~mimmy@2607:fea8:6e0:7f90:45d3:5172:e85f:c128)
[16:57:53] <qswz> yea do so
[16:58:05] <qswz> progressive loading
[16:58:13] <han-solo> yeah, do pagination or something
[16:58:59] <qswz> for example I like how youtube show placeholders for video thumbs and description before it loads
[16:59:21] *** Quits: stagas (~stagas@2a02:587:c40e:fc00:58a:c3a0:855b:2307) (Ping timeout: 268 seconds)
[16:59:22] <qswz> there's no annoying loader
[16:59:29] <dostoyevsky2> I think it's a disgrace that you can't even write a proper Excel UI in a browser these days... if you have a grid with more than hundred rows, performance comes to a halt
[16:59:49] <qswz> dostoyevsky2: you could use css grids
[17:00:06] <dostoyevsky2> Maybe I should just do it the Google Sheets way and render my html myself into a canvas
[17:00:07] <qswz> https://caub.github.io/misc/sheet
[17:00:13] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[17:00:59] *** Quits: electrostatic1 (~electrost@2601:600:8600:5a1:1d03:d6ab:128d:461c) (Ping timeout: 264 seconds)
[17:01:46] <qswz> I ate an unripe avocado, which was on the ground of the tree, not bad, but less tasty
[17:02:48] *** Joins: teut (~teut@122.181.77.157)
[17:02:55] *** Quits: hgjgjhj (~hgjgjhj@188.120.119.49) (Quit: Client closed)
[17:04:52] <theskillwithin> I wish i had avocado tree
[17:04:54] *** Joins: stagas (~stagas@2a02:587:c40e:fc00:d896:7a46:c5:360e)
[17:04:59] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 256 seconds)
[17:06:39] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[17:07:46] <dostoyevsky2> theskillwithin: Sounds like a get-rich-fast-scheme
[17:09:28] *** Joins: gggp (~gggp@60.10.23.162)
[17:09:30] <theskillwithin> what does?
[17:11:17] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[17:12:06] *** Quits: gggp (~gggp@60.10.23.162) (Read error: Connection reset by peer)
[17:12:11] <dostoyevsky2> https://nypost.com/2021/09/16/3m-gold-avocado-toast-meant-to-be-symbol-of-generation/
[17:12:19] *** Joins: gggp (~gggp@li1766-35.members.linode.com)
[17:13:18] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Remote host closed the connection)
[17:13:31] <qswz> I'd rather have a ripe avocado than an indigest gold one
[17:13:32] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 240 seconds)
[17:13:44] *** Joins: Nimzowitsch (~nimzo@user/nimzowitsch)
[17:16:43] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[17:18:41] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[17:21:11] *** Joins: pmercado (~pmercado@186.107.37.219)
[17:22:35] *** Joins: jsmooth (~quassel@068-186-087-058.res.spectrum.com)
[17:22:36] *** Quits: jsmooth (~quassel@068-186-087-058.res.spectrum.com) (Changing host)
[17:22:36] *** Joins: jsmooth (~quassel@user/jsmooth)
[17:23:22] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[17:36:52] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[17:38:19] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:2c71:f3a7:2628:f681)
[17:39:53] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[17:40:23] *** Quits: zerothule (~eric@2601:602:8d80:4e50:6581:57ad:562b:d06e) (Ping timeout: 250 seconds)
[17:41:17] *** Quits: mimmy (~mimmy@2607:fea8:6e0:7f90:45d3:5172:e85f:c128) (Ping timeout: 268 seconds)
[17:41:30] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[17:42:32] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Ping timeout: 240 seconds)
[17:42:55] *** Quits: Sven_vB_ (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[17:42:58] <qswz> https://adventofcode.com/2020 lol the date sorting
[17:43:04] *** Quits: prometh (uid425119@ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[17:43:36] <qswz> funny to see this bug in a coding website
[17:47:26] <deniska> qswz: there's a lore reason to be arranged like that :)
[17:47:54] *** Joins: CoolerY (~CoolerX@user/coolerx)
[17:48:59] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:2c71:f3a7:2628:f681) (Ping timeout: 264 seconds)
[17:49:39] *** Joins: voltage_ (voltage@user/voltage)
[17:49:48] <qswz> oh it's intentional
[17:50:19] <qswz> not sure to see why yet
[17:50:39] *** Joins: m_antis (~m_antis@gateway/vpn/pia/mantis/x-18339116)
[17:54:41] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 250 seconds)
[17:55:04] *** Joins: m_antis_ (~m_antis@ool-44c09a21.dyn.optonline.net)
[17:55:15] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[17:57:07] *** Quits: m_antis (~m_antis@gateway/vpn/pia/mantis/x-18339116) (Ping timeout: 256 seconds)
[17:58:07] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:59:46] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[18:02:11] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[18:06:20] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:2c71:f3a7:2628:f681)
[18:07:16] *** Joins: zerothule (~eric@2601:602:8d80:4e50:6581:57ad:562b:d06e)
[18:08:38] *** Quits: gggp (~gggp@li1766-35.members.linode.com) (Remote host closed the connection)
[18:08:53] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[18:11:09] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:2c71:f3a7:2628:f681) (Ping timeout: 250 seconds)
[18:13:27] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[18:18:05] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 256 seconds)
[18:18:14] *** Joins: ferdna (~ferdna@user/ferdna)
[18:18:32] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[18:19:05] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[18:20:34] *** Quits: D4mned (~D1mned@212.101.251.104) (Quit: Leaving)
[18:21:10] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:23:02] *** Quits: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 240 seconds)
[18:24:17] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[18:25:09] *** Joins: AndreYuhai (~AndreYuha@088156211008.radom.vectranet.pl)
[18:26:31] *** Quits: dalek-caan (~Thunderbi@109.252.124.86) (Quit: dalek-caan)
[18:27:47] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.3)
[18:28:05] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[18:29:24] <AndreYuhai> Hey, I've got this snippet from a chrome extension I am working on, https://dpaste.org/H07d , I am trying to send the response of fetch to my content script from the background script, however the response sent to the content script is always empty JSON.
[18:29:33] *** Joins: Naan (~naan@user/naan)
[18:29:36] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[18:29:44] <AndreYuhai> But when I console.log(response) in my background script I am able to see the Response object
[18:29:47] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 264 seconds)
[18:31:07] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 256 seconds)
[18:32:01] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[18:32:49] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[18:32:55] *** Joins: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[18:34:18] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[18:35:11] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[18:36:23] *** Quits: CoderGuy (~CoderGuy@user/coderguy) (Ping timeout: 264 seconds)
[18:36:59] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 264 seconds)
[18:38:44] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[18:42:30] <qswz> do you see CORS errors?
[18:46:06] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Remote host closed the connection)
[18:46:21] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[18:46:38] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:d116:bf4a:73c2:36f0) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:49:16] <leduyquang753> :q
[18:49:19] <leduyquang753> Oops.
[18:49:32] <leduyquang753> Meant to write /exit.
[18:49:37] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:50:23] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[18:50:25] *** Joins: fdan (~fdan@192.146.154.3)
[18:50:40] <fdan> hi there, is it possible to make my chrome transparent
[18:50:46] <fdan> by using some code in the developer tools
[18:50:54] <fdan> could someone give me a snippet of code
[18:51:45] *** Joins: kogepan (~kogepan@user/kogepan)
[18:52:26] *** Joins: keypusher (keypusher@user/keypusher)
[18:55:18] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[18:59:58] *** Quits: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Quit: dalek-caan)
[19:00:58] *** Joins: gggp (~gggp@li1766-35.members.linode.com)
[19:02:33] <AndreYuhai> qswz, Nope I don't have cors errors because that's working properly
[19:02:33] *** Joins: CoolerY (~CoolerX@user/coolerx)
[19:03:20] <AndreYuhai> The problem is the messaging between content script and the background script. I mean not really a problem I guess, the thing is somehow the response of the fetch is sent as "{}" but if I want to send "response.type" then everything is fine
[19:03:25] <AndreYuhai> I just can't send the whole response
[19:04:23] *** Quits: AndreYuhai (~AndreYuha@088156211008.radom.vectranet.pl) (Remote host closed the connection)
[19:04:30] <qswz> strange, see if it's an extension config issue, or a code issue, add logs
[19:08:34] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[19:12:52] *** Joins: rustyshackleford (uid236774@helmsley.irccloud.com)
[19:13:30] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[19:13:32] *** Quits: zerothule (~eric@2601:602:8d80:4e50:6581:57ad:562b:d06e) (Ping timeout: 240 seconds)
[19:14:08] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:17:18] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[19:17:48] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:2c71:f3a7:2628:f681)
[19:19:25] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[19:21:17] *** Joins: nomic (~nomic@185.217.117.164)
[19:23:32] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:2c71:f3a7:2628:f681) (Ping timeout: 240 seconds)
[19:24:42] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9)
[19:25:10] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[19:25:55] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[19:26:48] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[19:27:10] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[19:28:43] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[19:29:44] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:30:59] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 264 seconds)
[19:31:45] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 256 seconds)
[19:34:35] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[19:35:54] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Ping timeout: 260 seconds)
[19:38:34] <qswz> what do you guys think of napkin.io?
[19:39:21] *** Joins: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[19:41:32] *** Quits: pmercado (~pmercado@186.107.37.219) (Ping timeout: 240 seconds)
[19:43:27] *** Joins: audiobirb (~audio@user/audio)
[19:44:55] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[19:45:38] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:45:41] <ThePendulum> always a bit wary of black box frameworks that do everything until they don't
[19:46:46] <ThePendulum> why do I want the back-end in the browser
[19:49:50] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[19:50:49] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[19:52:40] <qswz> it's useful for developping middlewares
[19:52:49] <qswz> like plugins of your backend
[19:53:02] <qswz> not for frontend features at all
[19:53:21] <qswz> it's like AWS lambda but easier and cheaper
[19:53:38] *** Quits: silly_ (~silly@user/silly) (Ping timeout: 260 seconds)
[19:54:23] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9) (Ping timeout: 265 seconds)
[19:54:59] *** Quits: kogepan (~kogepan@user/kogepan) (Ping timeout: 256 seconds)
[19:57:29] *** Joins: silly (~silly@user/silly)
[19:57:48] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9)
[19:57:59] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[19:58:11] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fabc-15.dhcp.inet.fi) (Ping timeout: 250 seconds)
[19:58:18] *** Quits: gggp (~gggp@li1766-35.members.linode.com) (Ping timeout: 260 seconds)
[20:00:07] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: The Lounge - https://thelounge.chat)
[20:03:12] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[20:03:23] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9) (Ping timeout: 264 seconds)
[20:06:25] *** Joins: voltage (voltage@user/voltage)
[20:06:45] *** Quits: voltage_ (voltage@user/voltage) (Killed (NickServ (GHOST command used by voltage)))
[20:06:49] *** voltage is now known as voltage_
[20:07:27] *** Quits: vqueiroz (uid340368@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[20:07:43] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 250 seconds)
[20:10:24] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[20:13:50] *** Quits: peterhil (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi) (Quit: Leaving)
[20:13:55] *** Joins: peterhil_ (~peterhil@dsl-hkibng32-54fb56-2.dhcp.inet.fi)
[20:21:16] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[20:25:56] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 268 seconds)
[20:26:21] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 250 seconds)
[20:30:09] *** Quits: redrambles (sid319583@tinside.irccloud.com) (Remote host closed the connection)
[20:30:09] *** Quits: victor_ (sid208353@tinside.irccloud.com) (Remote host closed the connection)
[20:30:09] *** Quits: Lewix (sid158496@tinside.irccloud.com) (Remote host closed the connection)
[20:30:10] *** Quits: kraih (sid17075@mojo/destroy-all-humans/kraih) (Remote host closed the connection)
[20:30:10] *** Quits: graingert (sid128301@tinside.irccloud.com) (Remote host closed the connection)
[20:30:10] *** Quits: _0x1d3 (sid43116@tinside.irccloud.com) (Remote host closed the connection)
[20:30:10] *** Quits: owlbynight (sid501016@tinside.irccloud.com) (Remote host closed the connection)
[20:30:45] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9)
[20:31:48] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[20:35:17] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:3ced:e39f:5a62:729f)
[20:36:02] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9) (Ping timeout: 260 seconds)
[20:36:30] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 260 seconds)
[20:37:24] *** Quits: itok_ (sid418430@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: cythrawll (sid384410@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: gitesh (uid423739@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: hughrawlinson_ (sid11243@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:25] *** Quits: patchie (sid504252@ilkley.irccloud.com) (Remote host closed the connection)
[20:37:30] *** Quits: kakashiAL (~kakashi@ip-37-201-199-28.hsi13.unitymediagroup.de) (Ping timeout: 260 seconds)
[20:39:42] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[20:41:51] *** Quits: jwpapi (sid502614@uxbridge.irccloud.com) (Remote host closed the connection)
[20:41:51] *** Quits: SrPx (sid108780@uxbridge.irccloud.com) (Remote host closed the connection)
[20:41:51] *** Quits: systemfault (sid267009@uxbridge.irccloud.com) (Remote host closed the connection)
[20:41:51] *** Quits: andrew9184_ (sid416777@uxbridge.irccloud.com) (Remote host closed the connection)
[20:43:59] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[20:44:33] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[20:44:47] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 264 seconds)
[20:44:50] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[20:45:51] *** Joins: killown (~killown@user/killown)
[20:47:23] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[20:48:10] <no_gravity> Do you guys always put the openin bracket on the same line or are there cases where you put it on its own line?
[20:48:23] *** Quits: jsatk (sid304796@helmsley.irccloud.com) (Ping timeout: 246 seconds)
[20:48:26] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[20:48:40] *** Quits: NiKaN (sid385034@helmsley.irccloud.com) (Ping timeout: 250 seconds)
[20:48:42] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[20:48:44] *** Quits: kill (~killown@user/killown) (Ping timeout: 268 seconds)
[20:48:49] *** Quits: rustyshackleford (uid236774@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[20:48:55] *** Joins: ruzu (~ruzu@107-179-252-71.cpe.teksavvy.com)
[20:49:10] *** Quits: rickbutton (sid410078@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[20:49:26] *** Quits: Ownix (sid11917@helmsley.irccloud.com) (Ping timeout: 246 seconds)
[20:49:47] *** Quits: shurane (sid132556@helmsley.irccloud.com) (Ping timeout: 246 seconds)
[20:49:57] *** Quits: celphi (sid97751@user/celphi) (Ping timeout: 250 seconds)
[20:49:58] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Remote host closed the connection)
[20:50:16] *** Quits: ross (sid305269@user/ross) (Ping timeout: 260 seconds)
[20:50:32] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[20:51:32] *** Quits: merpnderp (sid16744@hampstead.irccloud.com) (Ping timeout: 246 seconds)
[20:51:32] *** Quits: morgabra (sid500580@user/morgabra) (Ping timeout: 246 seconds)
[20:51:40] *** Quits: Argorok (sid195487@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[20:51:49] *** Quits: poiqwepoiqwe (uid525840@hampstead.irccloud.com) (Ping timeout: 268 seconds)
[20:51:58] *** Quits: jakesyl_ (sid56879@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[20:52:08] *** Quits: statico (sid521804@user/statico) (Ping timeout: 260 seconds)
[20:52:13] *** Quits: JayDoubleu_ (sid339529@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[20:52:34] *** Quits: ljharb (sid43720@user/ljharb) (Ping timeout: 250 seconds)
[20:52:35] *** Quits: llinguini (sid257922@hampstead.irccloud.com) (Ping timeout: 246 seconds)
[20:52:35] *** Quits: naeluh__ (sid95128@lymington.irccloud.com) (Ping timeout: 246 seconds)
[20:52:36] *** Quits: DrowningElysium (sid190788@user/drowningelysium) (Ping timeout: 260 seconds)
[20:52:47] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (Ping timeout: 256 seconds)
[20:53:00] *** Quits: gendl (sid100083@hampstead.irccloud.com) (Ping timeout: 250 seconds)
[20:53:00] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 250 seconds)
[20:53:04] *** Quits: snek (sid280155@lymington.irccloud.com) (Ping timeout: 260 seconds)
[20:53:04] *** Quits: Manouchehri (sid384576@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[20:53:22] <tatiana> no_gravity - open bracket for when you declare a function? or when you create an object, I don't like having an opening bracket on a seperate line because it just creates 1 extra line and more scrolling
[20:53:25] *** Quits: themaxdavitt_ (sid433050@hampstead.irccloud.com) (Ping timeout: 250 seconds)
[20:53:25] *** Quits: tcsc (sid145321@lymington.irccloud.com) (Ping timeout: 250 seconds)
[20:53:32] *** Quits: lebster (sid17131@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[20:53:45] <no_gravity> tatiana: When you declare a function.
[20:53:47] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 264 seconds)
[20:53:50] *** Quits: notchris (sid181145@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[20:54:00] <no_gravity> I always put it on its own line as it gives the code more room to breathe.
[20:55:05] <tatiana> i see what u mean. I think it's a personal preference. I just prefer to not create a line with 1 character for less scrolling, even though its one line
[20:55:23] <no_gravity> It seems most coders do it like you do.
[20:56:11] <tatiana> i see what u mean about the spacing
[20:56:28] <gde33> I notice when the code doesn't fit on the screen anymore my workflow changes
[20:56:58] <gde33> its wonderful to just sit back and look at what you have without having to interact with it
[20:57:07] <tatiana> yeah, i like to not have to scroll unnecessarily
[20:57:25] <tatiana> what i hated in Prettier is that every array item and every item in an object have to be on a new line
[20:57:47] <tatiana> i don't use Prettier now, i use Beautify
[20:57:59] <tatiana> it's so opinionated, strong opinions
[20:58:00] <qswz> prettier sucks, no discussion
[20:58:07] <gde33> I do a lot of custom formatting for different things, works much better than generic for me
[20:58:32] <qswz> prettier is butchering code
[20:58:32] *** Quits: reallymemorable (~reallymem@70.107.110.8) (Ping timeout: 246 seconds)
[20:58:35] <tatiana> let arr = [1, 2, 3, 4]   <------ that's 4 or 5 lines of code
[20:59:08] *** Joins: han-solo (~hanish@user/han-solo)
[20:59:14] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[20:59:16] <paulcarroty> still prefer prettier over beautify
[20:59:18] <tatiana> gde33 - i want to but i'm not that good yet
[20:59:27] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9)
[20:59:59] <qswz> prettier and standardjs, 2 tools whose names are the opposite of what they do
[21:00:22] <tatiana> so many are using Prettier, Eric Elliot uses it , the customizing with eslint is so annoying, i just use Beautify, customizing with Eslint takes over a day
[21:00:36] <tatiana> hehehe
[21:00:37] <qswz> I just use eslint
[21:00:51] <qswz> with decent spacing, indent and stuff rules
[21:01:04] <tatiana> yep
[21:01:10] <qswz> and use an editor extension to format on save
[21:01:21] <qswz> to eslint --fix on save
[21:01:23] <tatiana> yep
[21:04:15] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9) (Ping timeout: 250 seconds)
[21:04:40] *** Joins: CoolerY (~CoolerX@user/coolerx)
[21:10:09] *** Joins: zerothule (~eric@2601:602:8d80:4e50:6581:57ad:562b:d06e)
[21:11:54] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[21:12:31] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[21:13:01] <qswz> let's make a list of overestimated / hype tools that you shouldn't use
[21:13:08] *** Joins: Nimzowitsch_ (~nimzo@user/nimzowitsch)
[21:13:15] <qswz> - prettier
[21:13:18] <qswz> - axios
[21:14:28] *** Joins: ljharb__ (~ljharb__@2601:640:8300:14c0:a534:6f3b:18c:d96f)
[21:14:28] <kalen> my problem with prettier is that it interferes with airbnb's own style guide. there's a plugin that basically allows prettier to OVERRIDE airbnb, but i wish there was a plugin that did the opposite and let prettier be the default, but then let airbnb override it
[21:14:39] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[21:14:50] *** Quits: Nimzowitsch (~nimzo@user/nimzowitsch) (Ping timeout: 260 seconds)
[21:15:13] <qswz> just remove prettier imo
[21:15:21] <kalen> that's what i ended up doing
[21:15:33] <kalen> but that removes a ton of formatting that i really liked from prettier
[21:15:47] <qswz> like what?
[21:15:54] *** Quits: ljharb__ (~ljharb__@2601:640:8300:14c0:a534:6f3b:18c:d96f) (Client Quit)
[21:16:07] <kalen> like a lot of wrapping and indentation that airbnb doesn't do
[21:16:08] *** Joins: monkey_ (~user@190.104.116.153)
[21:16:31] <qswz> oh I see, like ternaries
[21:16:52] <qswz> newline for ? and :, but you can do it manually
[21:17:35] <kalen> obviously i can do it manually :) but that's what we're trying to avoid. we want that kind of thing to be automated
[21:19:28] <qswz> sometimes eslint forgets to re-indent properly code, had a case with jsx, with too much indent
[21:22:24] *** Joins: Assault (~Assault@176-93-249-121.bb.dnainternet.fi)
[21:24:48] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:25:42] <tatiana> i like the option to have ternary on seperate lines or the same lines if it's really short. I mean short arrow functions on one line is beatiful, i like to have ternary on one or 2 or 3 , i don't wanna be told
[21:26:09] *** Parts: teut (~teut@122.181.77.157) ()
[21:26:19] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9)
[21:28:23] <qswz> metoo
[21:29:55] <qswz> prettier could have been named nazier
[21:31:20] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9) (Ping timeout: 260 seconds)
[21:31:26] <kalen> tatiana, prettier is smart about stuff like that. it does leave it on a single line if it's short. it's also configurable
[21:32:42] <tatiana> yeah, i think i went through the options but i could never find the option to keep array items on one line or to not have object items on seperate items
[21:33:49] <kalen> you can also use `// prettier-ignore` to have it ignore specific blocks of code
[21:33:51] <tatiana> for those editor tools, prettier etc , the great benefit is that they do it straight away on save - ctrl+S, you know what you're getting immediately. The immediate, instantanious feedback. But I don't want much opinion. Prettier took too long for me to get it how i wanted, i bailed out on it
[21:34:08] <tatiana> i don't want a big learning curve for stuff like that
[21:34:24] <kalen> https://prettier.io/docs/en/ignore.html#javascript
[21:36:02] *** Joins: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net)
[21:36:06] *** Joins: noarb (~noarb@user/noarb)
[21:37:20] <tatiana> kalen - ok, that's ok, i just have so much to learn, frontend is hard, i just decided prettier wasn't worth the effort for me
[21:38:34] *** Quits: xsperry (~xs@cpe-188-129-101-182.dynamic.amis.hr) (Ping timeout: 260 seconds)
[21:44:14] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 260 seconds)
[21:44:21] <lantech19446> tatiana: what kind of stuff did you change and how? It worked pretty well for me out of the box
[21:48:26] *** Quits: PowaBanga (~PowaBanga@user/powabanga) (Ping timeout: 260 seconds)
[21:48:55] <tatiana> i just hated the new lines for each array item and same for objects, there were some other things but i can't remember. Out of the box, if you have an array with 20 items in it, that's 20 lines. That's the default
[21:49:56] *** Joins: PowaBanga (~PowaBanga@user/powabanga)
[21:50:06] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[21:50:20] <lantech19446> hmm ok I could see the arrays being an issue, I like that other objects occupy their own lines though. I can always minify it in production but for ease of reading I like it that way
[21:51:42] *** Quits: phantomotap (~phantomot@c-71-207-252-96.hsd1.al.comcast.net) (Quit: Leaving)
[21:52:17] <tatiana> yeah it's a preference but for prettier there is no preference, it's hitler, no choice
[21:53:50] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[21:55:13] *** Joins: spronkey (~spronkey@2406:e000:68a4:fa01:6017:64e6:c495:e836)
[21:56:13] *** Quits: spronkey (~spronkey@2406:e000:68a4:fa01:6017:64e6:c495:e836) (Client Quit)
[21:56:13] <lantech19446> I thought most of the vscode extensions had some way to change them. I only found out about prettier a week ago though my teacher recommended it
[21:56:15] *** Quits: ThePhilgrim (~ThePhilgr@151.41.185.44) (Ping timeout: 256 seconds)
[21:56:27] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9)
[21:57:20] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:57:23] *** Joins: CoolerY (~CoolerX@user/coolerx)
[21:57:40] <qswz> if you're using vscode, the formatOnSave core setting is already better than prettier
[21:58:30] *** Joins: Rockwood (~Rocky@user/rocky)
[22:01:01] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9) (Ping timeout: 250 seconds)
[22:02:32] <lantech19446> ok
[22:04:53] *** Quits: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net) (Remote host closed the connection)
[22:05:01] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[22:07:20] *** Joins: gopar (~gopar@c-73-189-166-199.hsd1.ca.comcast.net)
[22:07:27] <Rockwood> o/
[22:08:31] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[22:10:50] *** Joins: EdFletcher (~PKD@user/edfletcher)
[22:11:28] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 260 seconds)
[22:12:17] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[22:13:26] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 246 seconds)
[22:14:27] *** Quits: PowaBanga (~PowaBanga@user/powabanga) (Ping timeout: 250 seconds)
[22:18:10] *** Joins: CoolerY (~CoolerX@user/coolerx)
[22:21:12] *** Joins: SrPx (sid108780@id-108780.uxbridge.irccloud.com)
[22:23:06] *** Joins: systemfault (sid267009@id-267009.uxbridge.irccloud.com)
[22:23:07] *** Joins: PowaBanga (~PowaBanga@user/powabanga)
[22:24:56] *** Joins: reallymemorable (~reallymem@70.107.110.8)
[22:26:10] *** Joins: kakashiAL (~kakashi@37.80.38.10)
[22:26:52] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[22:27:05] *** Joins: Ownix (sid11917@id-11917.helmsley.irccloud.com)
[22:27:32] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:38b1:6c00:ef77:bdd5) (Quit: WeeChat 3.3)
[22:27:50] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[22:28:01] *** Joins: celphi (sid97751@user/celphi)
[22:28:02] *** Joins: shurane (sid132556@id-132556.helmsley.irccloud.com)
[22:28:05] *** Joins: cythrawll (sid384410@id-384410.ilkley.irccloud.com)
[22:28:05] *** Quits: nomic (~nomic@185.217.117.164) (Quit: Leaving)
[22:28:39] *** Joins: itok_ (sid418430@id-418430.ilkley.irccloud.com)
[22:28:41] *** Joins: andrew9184_ (sid416777@id-416777.uxbridge.irccloud.com)
[22:28:44] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 260 seconds)
[22:29:15] *** Joins: Rockwood_ (~Rocky@user/rocky)
[22:29:40] *** Joins: hughrawlinson_ (sid11243@id-11243.ilkley.irccloud.com)
[22:30:17] *** Joins: jwpapi (sid502614@id-502614.uxbridge.irccloud.com)
[22:30:26] *** Joins: PowaBanga_ (~PowaBanga@91.86.102.250)
[22:30:42] *** Joins: jsatk (sid304796@id-304796.helmsley.irccloud.com)
[22:30:44] *** Joins: ross (sid305269@user/ross)
[22:30:54] *** Quits: PowaBanga (~PowaBanga@user/powabanga) (Ping timeout: 260 seconds)
[22:31:23] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 256 seconds)
[22:31:38] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 246 seconds)
[22:32:00] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[22:32:07] *** Joins: rickbutton (sid410078@id-410078.helmsley.irccloud.com)
[22:32:18] *** Quits: CoolerY (~CoolerX@user/coolerx) (Ping timeout: 260 seconds)
[22:32:21] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[22:34:05] *** Joins: lebster (sid17131@id-17131.hampstead.irccloud.com)
[22:34:05] *** Joins: merpnderp (sid16744@id-16744.hampstead.irccloud.com)
[22:34:14] *** Joins: patchie (sid504252@id-504252.ilkley.irccloud.com)
[22:34:57] *** Joins: jakesyl_ (sid56879@id-56879.hampstead.irccloud.com)
[22:35:21] *** Joins: daoudr (~daoudr@xdsl-31-164-222-159.adslplus.ch)
[22:35:23] *** Joins: gendl (sid100083@id-100083.hampstead.irccloud.com)
[22:35:33] <daoudr> how to bind the movePaddle method to the Board Class? https://pastebin.com/g7SbB0qv
[22:35:39] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[22:35:47] *** Joins: ljharb (sid43720@user/ljharb)
[22:36:16] <qswz> movePaddle = () => {
[22:36:31] *** Joins: Alex123 (~Adium@cpe-76-89-231-189.socal.res.rr.com)
[22:36:32] *** Joins: naeluh__ (sid95128@id-95128.lymington.irccloud.com)
[22:36:35] *** Joins: notchris (sid181145@id-181145.hampstead.irccloud.com)
[22:36:40] *** Joins: tcsc (sid145321@id-145321.lymington.irccloud.com)
[22:36:46] *** Joins: pycode1 (~pycode@2001:b07:5d28:551:dd01:9de3:5a8:f472)
[22:36:47] *** Joins: Argorok (sid195487@id-195487.hampstead.irccloud.com)
[22:37:09] *** Quits: pycode (~pycode@2001:b07:5d28:551:5f15:11ea:ec70:df1d) (Read error: Connection reset by peer)
[22:37:14] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[22:37:29] *** Joins: llinguini (sid257922@id-257922.hampstead.irccloud.com)
[22:37:37] *** Joins: _0x1d3 (sid43116@id-43116.tinside.irccloud.com)
[22:37:44] *** Joins: snek (sid280155@id-280155.lymington.irccloud.com)
[22:37:54] <Decker> so put it in the class?
[22:37:56] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 246 seconds)
[22:38:34] *** Joins: graingert (sid128301@id-128301.tinside.irccloud.com)
[22:38:38] *** Joins: JayDoubleu_ (sid339529@id-339529.hampstead.irccloud.com)
[22:38:55] *** Joins: Lewix (sid158496@id-158496.tinside.irccloud.com)
[22:39:01] *** Joins: niekniek (~niekniek@30-22-146-85.ftth.glasoperator.nl)
[22:39:06] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[22:39:09] *** Joins: themaxdavitt_ (sid433050@id-433050.hampstead.irccloud.com)
[22:39:51] *** Joins: morgabra (sid500580@user/morgabra)
[22:39:52] *** Joins: victor_ (sid208353@id-208353.tinside.irccloud.com)
[22:40:10] <daoudr> qswz: i want to use the bind(this) instead. how?
[22:40:12] *** Joins: redrambles (sid319583@id-319583.tinside.irccloud.com)
[22:41:13] *** Joins: owlbynight (sid501016@id-501016.tinside.irccloud.com)
[22:41:25] *** Joins: DrowningElysium (sid190788@user/drowningelysium)
[22:41:26] <daoudr> actually it is arrow
[22:41:40] *** Joins: kraih (sid17075@mojo/destroy-all-humans/kraih)
[22:42:02] <EdFletcher> Yeah there’s your problem, arrow functions don’t have their own bindings to ‘this’ and so aren’t suitable as methods
[22:42:22] <EdFletcher> Just make it a proper function and you’ll be set
[22:43:32] *** Joins: origamisith (~origamisi@c-98-247-49-35.hsd1.wa.comcast.net)
[22:43:40] *** Joins: monkey_ (~user@190.104.116.153)
[22:45:05] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[22:45:08] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[22:45:11] <qswz> daoudr: use a class field like I showed
[22:45:11] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[22:45:35] <qswz> just replace `() {` by `= () => {`
[22:45:38] *** Joins: statico (sid521804@user/statico)
[22:45:51] *** Joins: poiqwepoiqwe (uid525840@id-525840.hampstead.irccloud.com)
[22:47:02] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:47:04] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:47:24] <daoudr> I cannot it should movePaddles(){ because it is inside
[22:47:32] <daoudr> a class
[22:47:53] <daoudr> how to bind it after making it a normal function
[22:48:39] <qswz> n> class A { x = 1; movePaddles = () => { console.log(this.x); } } new A().movePaddles()
[22:48:43] <jellobot> (okay) 1
[22:49:08] <qswz> n> class A { x = 1; movePaddles = () => { console.log(this.x); } } let f=new A().movePaddles; f()
[22:49:11] <jellobot> (okay) 1
[22:49:19] <qswz> n> class A { x = 1; movePaddles() { console.log(this.x); } } let f=new A().movePaddles; f()
[22:49:20] <jellobot> (fail) TypeError: Cannot read properties of undefined (reading 'x')
[22:49:44] <qswz> n> class A { x = 1; movePaddles() { console.log(this.x); } } new A().movePaddles()
[22:49:45] <jellobot> (okay) 1
[22:49:52] <daoudr> where there is no constructor in class A
[22:50:02] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[22:50:04] <qswz> add one if you need
[22:50:35] <daoudr> how solution would look like with constructor
[22:50:46] <qswz> I -told it twice already
[22:50:47] <EdFletcher> MDN specifically says arrow functions should not be used as class methods, in fact it's the first point: "Does not have its own bindings to this or super, and should not be used as methods." https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions
[22:50:48] <daoudr> your suggested solution
[22:51:15] <qswz> movePaddles() { → movePaddles = () => {
[22:51:49] <EdFletcher> so why is the suggestion solution here contrary to the reference documentation?
[22:52:04] <qswz> show me the docs?
[22:52:12] <EdFletcher> i just did, with a quote even!
[22:52:45] <qswz> EdFletcher: it has a different behavior as class fields
[22:54:14] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[22:55:01] <EdFletcher> that may be true, but where is the documentation for that?
[22:55:19] <daoudr> this is embaressing.
[22:55:24] <daoudr> I am not able to work it out
[22:55:42] <daoudr> can we just use the bind method
[22:55:44] <qswz> did you try my suggestion?
[22:55:56] <daoudr> qswz: I am not able to apply it correctly
[22:56:06] <qswz> show me what you tried
[22:57:03] *** Joins: federico_it (~textual@151.95.120.179)
[22:57:39] <daoudr> https://pastebin.com/KGy0FFsL
[22:58:09] <qswz> daoudr: you see that line in your first paste:   movePaddles(){
[22:58:25] <qswz> you replace that whole line with:   movePaddles = () => {
[22:58:31] <qswz> I can't make this clearer
[22:59:09] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 256 seconds)
[22:59:14] *** Joins: zeromule (~eric@2601:602:8d80:4e50:30e3:c114:e188:b5e2)
[22:59:22] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[23:00:10] <qswz> EdFletcher: class A { f=()=>{} } is basically the same as class A { constructor(){this.f=this.f.bind(this);} f(){} }
[23:00:14] <daoudr> I did but it is expecting a comma https://pastebin.com/RpvTmVFc
[23:00:20] *** Quits: zerothule (~eric@2601:602:8d80:4e50:6581:57ad:562b:d06e) (Ping timeout: 246 seconds)
[23:00:49] <qswz> daoudr: yea do as a semi-colon at the closing }
[23:01:08] <qswz> movePaddles = () => {
[23:01:11] <qswz>   // ...
[23:01:12] <qswz> };
[23:01:15] <qswz> got it?
[23:01:56] *** Joins: jetchisel (jetchisel@user/jetchisel)
[23:02:26] <niekniek> hey, what if have a page that adds data over time and I want to fetch some data when there is some?
[23:02:44] <EdFletcher> qswz: yeah I'm seeing this now that I'm experimenting with it but I've _never_ read this documented anywhere... WTH!?
[23:02:46] <daoudr> qswz: https://imgur.com/xK72R6T.png
[23:03:03] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[23:03:07] <niekniek> I can't call fetch again, since it'll request the whole url again
[23:03:20] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[23:03:21] <qswz> daoudr: you're missing a ) there
[23:03:25] <niekniek> some kind of socket like connection
[23:03:41] <niekniek> to the url that is generating the data
[23:04:00] <daoudr> there =?
[23:04:16] <daoudr> got it
[23:04:38] *** Joins: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9)
[23:05:00] <EdFletcher> qswz: do you know where this behavior is documented, preferably on MDN? I can't find it anywhere...
[23:05:02] *** Quits: zeromule (~eric@2601:602:8d80:4e50:30e3:c114:e188:b5e2) (Ping timeout: 268 seconds)
[23:05:34] <EdFletcher> niekniek: you can definitely call `fetch` without having the page refresh
[23:05:42] *** Quits: shailangsa (~shailangs@host86-185-98-19.range86-185.btcentralplus.com) (Remote host closed the connection)
[23:05:50] <daoudr> qswz: thank you
[23:05:59] <qswz> https://dpaste.org/zfBc
[23:06:00] *** Joins: CoolerY (~CoolerX@user/coolerx)
[23:06:37] <EdFletcher> qswz: this is _specifically_ with `class` syntax right? building an object "classically" and using arrow functions as methods still suffers the `this` binding problem yeah?
[23:06:55] <EdFletcher> (guess i could just experiment with it, nevermind)
[23:07:17] <niekniek> EdFletcher: yeah, I know that, but I can fetch just once. I mean this page first shows some results and five seconds later more results, I want show both when they are available
[23:07:36] <EdFletcher> i don't understand
[23:07:46] <EdFletcher> show your code
[23:07:59] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 250 seconds)
[23:09:33] <qswz> EdFletcher: I think there: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Public_class_fields#public_instance_fields "When initializing fields this refers to the class instance under construction ...
[23:09:34] *** Quits: mimmy_ (~mimmy@2607:fea8:6e0:7f90:100e:941d:330:91e9) (Ping timeout: 260 seconds)
[23:11:07] <EdFletcher> qswz: YES, this is it!!! thank you so much ❤️
[23:12:38] <Decker> qswz https://dpaste.org/UzzT#L ? somewhere you'd movePaddles( board ) to connect the events to the board
[23:12:40] <qswz> n> class A { a=this; } const a=new A(); a.a===a
[23:12:41] <jellobot> (okay) true
[23:13:23] <qswz> Decker: you don't this to pass this_ as argument
[23:13:40] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: WeeChat 3.3)
[23:14:02] <qswz> that's counter productive, the whole point of a class is to have a this available in each method or field
[23:14:12] <Decker> movePaddles.bind( board )() then  though that's uglier
[23:14:20] <Decker> so put it in the class... but that's just an init
[23:14:25] <qswz> you don't need to bind it either
[23:14:46] <qswz> it's already bound when declared as a field arrow function
[23:15:32] <qswz> n> class A { x = 1; movePaddles = () => { console.log(this.x); } } let f=new A().movePaddles; f() // this shows that movePaddles is bound
[23:15:32] <jellobot> (okay) 1
[23:16:05] <qswz> n> class A { x = 1; movePaddles = function() { console.log(this.x); } } let f=new A().movePaddles; f() // just some testing
[23:16:06] <jellobot> (fail) TypeError: Cannot read properties of undefined (reading 'x')
[23:16:27] <Decker> https://dpaste.org/QPAQ and then board.setupMovePaddles();
[23:16:32] <EdFletcher> yeah see that I don't understand, why doesn't it work with proper functions?
[23:16:45] <EdFletcher> n> class A { x = 1; movePaddles () { console.log(this.x); } } let f=new A().movePaddles; f()
[23:16:46] <jellobot> (fail) TypeError: Cannot read properties of undefined (reading 'x')
[23:16:49] <qswz> because arrow functions don't change this
[23:17:17] <EdFletcher> but functions do? i thought when specified as class methods functions always bound to the classes `this`?
[23:17:23] <qswz> that's really a combination of my mdn link and yours
[23:17:40] <EdFletcher> hahaha yeah i was thinking that, really wish this was all written in _one_ document coherently 😆
[23:18:00] *** Joins: dpuerto (~dpuerto@136-27-83-52.cab.webpass.net)
[23:18:30] <qswz> yea, good point
[23:19:22] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 260 seconds)
[23:21:18] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 260 seconds)
[23:21:26] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[23:21:33] *** Joins: comatory (~ondrejsyn@93.99.127.7)
[23:26:22] *** Quits: comatory (~ondrejsyn@93.99.127.7) (Ping timeout: 260 seconds)
[23:26:24] <qswz> https://developer.mozilla.org/en-US/docs/Web/CSS/place-items TIL
[23:26:39] <qswz> shortcut for align-items / justify-content
[23:27:26] *** Joins: machuga (~machuga@104.236.124.225)
[23:30:21] *** Quits: killown (~killown@user/killown) (Quit: Leaving)
[23:31:46] <qswz> https://news.ycombinator.com/item?id=29295963
[23:33:09] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:35:13] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:36:23] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[23:40:17] *** Joins: kogepan (~kogepan@user/kogepan)
[23:40:23] <qswz> what would be good is a shortcut for display: flex; flex-direction: column
[23:40:31] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[23:41:05] *** Quits: Junxter (~Junxter@222.94.237.247) (Ping timeout: 256 seconds)
[23:42:38] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 268 seconds)
[23:43:14] *** Quits: origamisith (~origamisi@c-98-247-49-35.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[23:47:09] *** Joins: zeromule (~eric@2601:602:8d80:4e50:9462:904f:c2b0:617b)
[23:49:08] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[23:53:33] *** Quits: Assault (~Assault@176-93-249-121.bb.dnainternet.fi) (Quit: Leaving)
[23:53:52] *** Joins: ferdna (~ferdna@user/ferdna)
[23:55:45] <daoudr> qswz: my movepaddle method is not moving my paddles https://pastebin.com/2AnGfKPu
[23:57:26] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[23:57:54] *** Joins: kill (~killown@user/killown)
[23:58:28] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[23:58:40] *** Quits: obimod (~obimod@gateway/vpn/pia/obimod) (Ping timeout: 268 seconds)
[23:59:02] *** Joins: obimod (~obimod@gateway/vpn/pia/obimod)
