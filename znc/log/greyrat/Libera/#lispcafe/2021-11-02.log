[00:10:00] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[00:16:13] *** Joins: bcasiello (~bcasiello@066-189-087-112.biz.spectrum.com)
[01:02:05] *** Joins: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com)
[01:02:24] * hayley made it onto hacker news and got flagged. Hooray!
[01:03:34] *** Quits: shka (~herr@83.175.151.96.piasta.pl) (Ping timeout: 260 seconds)
[01:06:57] *** Quits: bcasiello (~bcasiello@066-189-087-112.biz.spectrum.com) (Ping timeout: 268 seconds)
[01:08:50] <Gnuxie> ðŸŽ‰
[01:09:17] <Gnuxie> I wonder if this means all our future posts will get bias against them 
[01:17:53] *** Quits: dra (~dra@2a04:4540:6415:8400:2de7:98e5:184c:b5e1) (Quit: Leaving)
[01:23:34] *** Joins: dimadima (~user@user/dimadima)
[01:24:08] *** Parts: dimadima (~user@user/dimadima) (good-byte)
[01:29:40] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[01:29:45] <selwyn> link?
[01:30:23] <dave0> maw
[01:31:03] <hayley> https://news.ycombinator.com/item?id=29064867
[01:31:04] -ixelp- Hacker News
[01:31:43] *** Quits: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com) (Remote host closed the connection)
[01:32:11] <hayley> The funny parts are where the commenters get reviewer syndrome and miss parts of the article. "Well, go on and quantify that text and more text is bad." I did - a decision tree with n questions at most has O(2^n) states.
[01:32:28] <selwyn> hayley gpt-3 confirmed
[01:32:43] <hayley> That's rude to GPT-3, it writes better on most days.
[01:33:29] *** Joins: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com)
[01:34:25] <selwyn> https://www.bbc.co.uk/news/uk-england-essex-59069662
[01:34:25] -ixelp- Luton man left shocked as his house is Ã¢Â€Â˜stolenÃ¢Â€Â™ - BBC News
[01:35:11] <selwyn> there are nicer places to steal houses from
[01:38:26] <selwyn> org-mode has forced me to reappraise plain text as a format
[01:38:30] <selwyn> it really makes plain text come alive
[01:45:24] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[01:46:20] <hayley> https://www.youtube.com/watch?v=H-MZD3Kuwkg
[01:46:21] -ixelp- The 1930's Rust - YouTube
[01:46:59] <selwyn> is gemini plain text?
[01:48:36] <hayley> Pretty close.
[01:49:11] <hayley> Plain text + links + headers and code blocks (which are optional).
[01:56:38] *** Joins: lisp123 (~lisp123@5.30.23.247)
[01:58:25] *** Joins: bcasiello (~bcasiello@066-189-087-112.biz.spectrum.com)
[02:01:49] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 268 seconds)
[02:17:15] *** Quits: Inline (~Inline@2a02:908:1252:7a80:86ce:9852:a68c:aeee) (Ping timeout: 268 seconds)
[02:20:15] <semz> code blocks?!
[02:20:51] <hayley> Something of the sort.
[02:22:05] <semz> oh, as in text that's guaranteed to be monospaced?
[02:22:11] <semz> for a second I thought they reinvented JS
[02:22:50] *** Quits: MichaelRaskin (~MichaelRa@ipb21a9944.dynamic.kabel-deutschland.de) (Quit: MichaelRaskin)
[02:25:02] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[02:25:08] <hayley> Yes.
[02:52:49] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Remote host closed the connection)
[02:53:27] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[02:55:34] <gilberth> At times I miss anonymous macros.
[02:57:13] <semz> I tend to use #. for that
[02:58:35] <gilberth> Won't work, when you want to sneak in something expected at the car of a latter s-expression.
[02:59:13] <gilberth> And read time may be not be the right time.
[03:01:54] <semz> fair re: read time, but I'm not sure what you mean with the first remark
[03:03:31] <semz> (#.(a:random-elt '(prin1 princ)) "foo") works fine, or do I misunderstand
[03:03:51] <gilberth> When I am at a place were what I yield turns up as the car of a form, I could happily give a LAMBDA expression, but not an anonymous macro.
[03:05:49] <gilberth> semz: Well, #. does not have access the the "foo" and not to the lexical environment.
[03:07:05] *** Quits: Catie (~user@2603:3023:523:400:82e8:2cff:fed9:cc84) (Quit: going home)
[03:08:14] <gilberth> In my current case, I have a macro which accepts a full parser definition of both the parser itself and the scanner. It doesn't do more than to split the productions into CFG productions and scanner productions. The LALR(1) parser and the scanner are build by other macros.
[03:08:38] <semz> Well, you could wrap the entire form in it but that can become ugly.
[03:08:47] <hayley> https://picrew.me/image_maker/449434 stirner picrew
[03:08:48] -ixelp- Einzige- The Egoist's Picrewï½œPicrew
[03:09:01] <gilberth> semz: It won't work.
[03:11:59] <gilberth> I have say (parse ...) => (funcall (lalr-parser rules...) (scanner rules...)) while both LALR-PARSER and SCANNER are macros defined elsewhere. I want to be able to specify what other macro is to be used, perhaps because I want another scanner generator. So you'd specify (parse (:scanner-macro foo-scanner) ....) and get (parse-1 (lalr-parser ...) (foo-scanner ...)). I'd like to be able to foo-scanner anonymous.
[03:13:31] <semz> I see now
[03:15:00] <gilberth> Another example, which is problematic with both my FFI as well as CCLs. I support a #_... syntax to embed C into Lisp. You'd say e.g. (#_putchar 10). Now 'putchar', what should #_putchar read to? It does need to do type marshaling/unmarshaling and 'putchar' may be a C macro. When #_putchar could yield an anonymous macro which does that, it would be fine.
[03:15:56] <gilberth> CCL gets around this by defining a named macro at read-time on demand and I do too. But this is very wrong.
[03:16:12] <semz> yeah it reeks of workaround
[03:16:50] <gilberth> The former I could live with. I could say (macrolet ((foo-scanner ...)) (parse (:scanner-macro foo-scanner)) ...) and it won't hurt. The latter cannot be solved.
[03:18:22] <gilberth> Also: I miss a VALUE special form to get from function name space to value name space. Like FUNCTION does in the other direction. You'd say ((VALUE f) ...) for (FUNCALL f ...)
[03:19:54] <gilberth> Reader syntax could be #, to complement #'. #, is free since CLtL2.
[03:22:50] <gilberth> Anyhow. For the FFI what I really do is that I read #_getchar into a macro which when applied to an argument X generates a string "getchar(__lisp_1__)" subject it to CCP and parse the result again. This __lisp_1__ is the orginal X argument the parser then knows about.
[03:24:33] <gilberth> And I want that this happens at compile time, not read time.
[03:24:41] *** Joins: X-Scale` (~ARM@46.50.2.72)
[03:26:22] *** Quits: X-Scale (~ARM@92.250.98.212) (Ping timeout: 260 seconds)
[03:26:47] *** X-Scale` is now known as X-Scale
[03:29:01] <gilberth> CL already is pretty good at extending the language, but IMHO lacking at those places. And it would be trivial to implement in the compiler, or macro expander rather.
[03:33:28] <moon-child> gilberth: simpler seems readmacro [f x y] -> (funcall f x y)
[03:34:25] <gilberth> You still don't get the point. I have no access to the whole form, but just got to yield the 'f' only.
[03:36:59] <gilberth> I mean, you say (FUNCTION f) to have 'f' interpreted in function space as a value. Where is the other way around?
[03:37:09] <hayley> Someone has committed a load of shit which involves cryptography I never specified. They want me to write a specification, but don't follow it. sigh
[03:37:34] <hayley> Get a good compiler version: #,blah = (lambda (&rest rest) (apply blah rest))
[03:37:51] <gilberth> hayley: Macros?
[03:38:01] <moon-child> ah, read more scrollback.  Anon macro/macro-as-value is complicated for perf reasons.  Though s7 does it and is not _that_ slow.  I agree it would be more consistent to have than not, but
[03:38:15] <moon-child> (I mean, more consistent to have (value x) than not)
[03:38:21] <gilberth> And it would be trivial to hack a given compiler. But that is no option.
[03:38:24] <moon-child> it seems not super important in practice
[03:39:26] <gilberth> No, but it is a missing piece IMHO. And one that would be trivial to implement as the compiler author.
[03:52:12] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[03:52:49] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 268 seconds)
[03:54:01] <hayley> "And you know all this how? I feel divinity when it shines on my skin and I know it has fueled life and continues to do so. Have you journeyed to it yourself to know if it is merely that?" "That's not divinity, that's a sunburn"
[03:54:21] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.3)
[03:55:14] *** Joins: v3ga (~v3ga@2600:1702:ad0:3b90::40)
[03:57:57] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[03:58:10] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[03:59:05] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[03:59:45] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[04:14:36] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[04:16:34] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[04:24:10] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Quit: WeeChat 3.3)
[04:39:27] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[04:57:50] <hayley> "Unable to locate the Java runtime. Error details: Success"
[05:34:00] <hayley> gilberth: Reading https://tumbleweed.nu/r/lm-3/uv/paper.html, they had a generational GC?
[05:34:16] <hayley> "Areas also give the user a handle to control the garbage collector.  Some areas can be declared to be "static", which means that they change slowly and the garbage collector should not attempt to reclaim any space in them.  This can eliminate a lot of useless copying.  All pointers out of a static area can be collected into an "exit vector", eliminating any need for the garbage collector to look at that area."
[05:34:30] <hayley> An exit vector would probably be called a remembered set these days.
[05:44:18] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[06:16:42] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 260 seconds)
[06:17:07] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[06:37:16] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[07:05:15] <gilberth> hayley: For the CADR? I believe so. Although that static space is literally static and never reclaimed. This is more of a hack where you dump a world and mark all that as static, because you don't expect that to go away.
[07:05:45] <hayley> Well, you only have to start a collection for static space infrequently to have a generational GC.
[07:07:41] <gilberth> Yes, but I am not sure, you can do that. I have not looked at the GC. But I will eventually to figure out what is broken about it. My CADR could halt, when a flip is due with too little space left. And I don't believe Brad Parker's CPU emulation is buggy here.
[07:12:29] *** Joins: lisp123 (~lisp123@5.30.23.247)
[07:13:13] <gilberth> And remember that a GC takes minutes. Like ten or so, when I pace at 200ns/cycle with an infinitely fast disk. But the machine keeps responsive, so no <https://www.youtube.com/watch?v=3vJWVyEBcdE&t=994s>
[07:13:13] -ixelp- Garbage the Video - YouTube
[07:13:34] <gilberth> I should simulate a 20ms or so seek time and see.
[07:16:49] <hayley> Yes, it has the https://www.youtube.com/watch?v=ns-fw7a16Gw GC.
[07:16:49] -ixelp- jean-jacques burnel - Freddie Laker - YouTube
[07:17:50] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 260 seconds)
[07:20:22] <gilberth> Anyhow I wonder why the GC could fail and halt the machine. It does this only when I allocated too much memory. Is this a bug, or the GC being trigger too late. I mean, it's completely off by default.
[07:20:36] <hayley> I'd guess the latter.
[07:22:40] <gilberth> That would make sense, with GC off, allow for both spaces used. However, I should try with conses. Maybe vectors are not accounted for?! This happens, when I load a 3MB file into ZWEI. Or it is too little collecting work done for vector allocation? I'll figure that out.
[07:22:45] <hayley> IIRC the concurrent GCs for Java can still fail and have to do a stop-the-world collection. The alternative is to rate-limit mutators so they don't allocate as fast.
[07:27:08] <hayley> An interesting interpretation.
[07:27:59] * gilberth says (gc-on) (do () (nil) (cons 1 2))
[07:28:02] <hayley> Pity that incremental incrementally [sic] compacting garbage collection came a decade later.
[07:30:13] <gilberth> Nothing happens so far.
[07:31:47] <hayley> So, the authors of incremental^2 compacting garbage collection call the non-moving space "ms-space", probably for "mark sweep space". Odd.
[07:31:54] <gilberth> Though something appears to leak, but this doesn't need to be a GC issue.
[07:32:44] <gilberth> I keep it running, let's see if it crashes eventually.
[07:34:27] <hayley> They also suggest a version with read barriers, but no way to detect the space.
[07:35:50] <gilberth> I could also imagine that ZWEI uses areas. The CADR code is full of this manual memory management.
[07:36:34] <hayley> Well, Baker also just says IF NOT TOSPACE(blah) THEN ... but, with two spaces, you can just divide space in two and do a pointer comparison.
[07:37:53] <hayley> With from-space, to-space and ms-spaces in arbitrary locations, you either "colour" every pointer, and thus do pointless updates on ms-space pointers, or use some other map, such as the page table, and map operations are slow.
[07:38:27] <gilberth> Heh, reminds me of mulisp. It has a compacting GC somehow and puts all conses on one side of the storage and all atoms to the other, for checking whether sth is an atom or not a pointer comparison is used. Clever.
[07:39:30] <hayley> Reminds me of Self, where they put byte vectors on one side of memory, and all other objects with pointers on the other, so that the GC didn't have to check for byte vectors.
[07:40:03] <gilberth> Oh, the CADR just hangs. No halt even.
[07:40:15] <hayley> https://bibliography.selflanguage.org/_static/implementation.pdf p.8 (it says page 64 on the page)
[07:40:35] <gilberth> But that could be me. :(
[07:41:29] <gilberth> Yep, somehow I managed to have a dead lock in the console. Bad, really bad.
[07:43:02] *** Quits: semz (~none@user/semz) (Ping timeout: 260 seconds)
[07:45:22] <gilberth> Now it halted. This definitely is buggy somehow.
[07:50:39] <hayley> Back then they could scan for pointers at 3MB/s. Now I can scan for pointers in a page Bloom filter at some 5.5GB/s or so.
[07:55:26] *** Joins: semz (~none@user/semz)
[07:56:40] <hayley> Oh, for fuck's sake, this guy wrote the Java code to do a different handshake, as well as the 200 LOC of cryptographic boilerplate. He asked for a specification, I wrote one, and he didn't follow it.
[07:59:01] <hayley> So we have Diffie-Hellman to protect the salt for key derivation. You could just intercept DH rather than the salt, and both would get you nowhere.
[07:59:12] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:59:31] <dave0> maw
[07:59:33] <dave0> brb coffee
[08:01:23] *** Joins: domovod (~domovod@176.196.122.197)
[08:05:19] <hayley> Hell, I don't think a rainbow table attack would even work here, as the key is never exposed. You'd need to know the plaintext too.
[08:21:04] *** Quits: domovod (~domovod@176.196.122.197) (Ping timeout: 268 seconds)
[08:21:29] *** Joins: domovod (~domovod@ec2-35-165-86-158.us-west-2.compute.amazonaws.com)
[08:25:17] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[08:31:23] <dave0> try their birthday
[08:33:30] <dave0> https://youtu.be/a6iW-8xPw3k
[08:33:31] -ixelp- Spaceballs 12345 - YouTube
[09:39:12] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[09:39:53] *** Joins: hendursaga (~weechat@user/hendursaga)
[10:03:36] *** Joins: shka (~herr@83.175.151.96.piasta.pl)
[10:18:11] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Quit: Leaving)
[10:20:51] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Ping timeout: 276 seconds)
[10:23:52] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[10:24:02] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Client Quit)
[10:25:20] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[10:44:15] *** Quits: Aurora_v_kosmose (~LispyLigh@user/lispylights) (Ping timeout: 276 seconds)
[11:08:01] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[11:10:26] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[11:19:10] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[11:23:24] *** Joins: lisp123 (~lisp123@5.30.23.247)
[11:28:32] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 268 seconds)
[11:35:19] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:38:51] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:47:09] <selwyn> shka: do you have any ergonomic keyboard recommendations for emacs users
[11:47:13] <selwyn> perhaps from aliexpress
[11:47:23] <shka> dunno, but i like redox 
[11:47:50] <shka> i also don't think that emacs makes that much of a difference 
[11:48:00] <shka> the only problem is the control key
[11:49:19] <pl> selwyn: just don't take opinions from xah lee without a saltmine. or two
[11:49:26] <selwyn> pl: well, that is why i ask
[11:49:31] <selwyn> in part
[11:49:44] <selwyn> because there is a great wealth of opinion there
[11:49:58] <moon-child> selwyn: I like kinesis
[11:50:09] <shka> there is a little bit of ergodox keyboard on ali, but i ordered mine redox from https://falba.tech/
[11:50:10] -ixelp- You are being redirected...
[11:50:11] <ck_> pl: but isn't his domain "ergoemacs", the expertise is practically in the name an so on
[11:50:15] <selwyn> i noticed some strain this week but that is not necessarily due to emacs
[11:50:29] <shka> long wait time, and really questionable keycaps sadly
[11:51:07] <hayley> I don't need ergonomics cause I can't feel any wrist pain due to depression(tm)
[11:51:27] <shka> generally speaking, i really don't think that emacs is all that important 
[11:51:40] <shka> and you can bind ctrl in place of alt
[11:52:15] <shka> or just move keys to you can use both ctrl and alt with your thumb
[11:52:18] <pl> ck_: he wrote a lot
[11:52:28] <pl> ck_: doesn't mean he has actual expertise
[11:52:49] <shka> because really, i am of opinion that the main problem with emacs is the ctrl position
[11:54:22] <shka> well, maybe also escape if you are using the vi mode
[11:54:33] <shka> but that's not really emacs anymore
[11:57:40] <shka> otherwise, what can i say, i like redox
[11:57:49] <shka> and it works well for me
[11:58:01] <selwyn> i just don't want to get injured off of this shit
[11:58:11] <shka> yeah, i feel ya
[12:00:44] <pl> selwyn: if you don't want to re-learn shortcuts, get yourself a keyboard that has mirrored bucky bits (ctrl/meta/super/hyper on both sides) and try using separate hands for modifier and letter
[12:01:23] <pl> also, yes, Emacs shortcuts evolved on system that had, iirc, hyper-super-meta-control <space> control-meta-super-hyper
[12:01:51] <pl> so control would be easiest to hit with one's thumb
[12:03:33] <pl> (well, originally it was just meta and control, super and hyper arrived later with emacs being part of the driving force)
[12:05:12] <pl> super was conventionally for OS shortcuts and Hyper for user own's ones
[12:11:32] <selwyn> i like the look of the kinesis ones
[12:11:55] <selwyn> but i have already managed to change some other application i use a lot
[12:11:58] <selwyn> to be more ergonomic
[12:13:06] <selwyn> so perhaps i can deal with emacs by remapping a small number of keys
[12:19:10] <pl> yeah, it's not like emacs keybinds are sacred (the oldest of them were literally a poll for "what do you guys have configured?" sent by email)
[12:19:26] <selwyn> lol
[12:19:28] <selwyn> til
[12:28:01] * hayley plays demolition derby in gmod
[12:28:18] <hayley> We got blown up by a tank, but we still got one kill. Oh, and we used shotguns and a couch on wheels.
[12:29:19] <shka> pl: yeah, that makes sense
[12:29:27] <shka> i mean, hyper-super-meta-control
[12:30:16] <shka> it certainly feels like it is more natural ordering
[12:30:28] <shka> and you can set that in linux IIRC
[12:30:50] <shka> well, windows-alt-ctrl 
[12:30:57] <shka> not hyper super meta :D
[12:31:05] <pl> selwyn: I'm just wary of xah Lee because if you're talking about UX on given platform, you should take time to learn about use cases of said platform 
[12:31:16] <pl> And I did end up calling him out on having no idea 
[12:31:33] <pl> Which he never corrected 
[12:32:13] <hayley> At least I got the assignment shit sorted out - we're not using RSA, Diffie-Hellman or anything of the sort.
[12:32:23] <shka> yeah, you can alter those keys in linux
[12:32:31] <shka> i also recommend to set capslock to be escape
[12:32:42] <shka> if you use vim
[12:33:07] <shka> because the normal escape position is really unfortunate for vimers 
[12:33:39] <shka> so you don't have to invest into ergo keyboard
[12:34:09] <shka> though the split allows for more comfortable angles 
[12:34:22] <shka> no need to bend your wrist or shoulders
[12:34:44] <selwyn>  well on the road to becoming an emacs weenie by now
[12:35:04] <shka> i am pretty wide guy, so split keyboards is something that i am really fond of 
[12:47:38] <pjb> I don't know if I still do that, but I used to press the keys in the middle of keyboard with either hand. So if you're wide, you could also just use two keyboardsâ€¦
[12:48:27] <pjb> Perhaps some patch would have to be written so that modifiers on one keyboard work for keys typed on the other keyboard, but this should be easy enough.
[12:55:08] <moon-child> 'modifiers on one keyboard..other keyboard' that is the default, on x at least
[12:55:38] <moon-child> (tho it's somewhat buggy)
[13:00:47] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[13:01:43] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[13:05:22] <shka> well, you can actually buy a split keyboard
[13:05:36] <shka> and sure, it is expensive, but it should serve you for decades 
[13:06:44] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[13:18:15] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:36:22] *** Joins: random-nick (~random-ni@87.116.177.136)
[13:39:28] *** Joins: treflip (~user@95.79.32.99)
[13:43:32] *** Quits: treflip (~user@95.79.32.99) (Client Quit)
[14:07:21] <shka> https://9gag.com/gag/aAGY5M9
[14:14:37] <selwyn> i think magsafe is what broke my mac
[14:15:39] <hayley> https://www.reddit.com/r/davidbowiecirclejerk/comments/aaij6m/david_before_making_station_to_station/
[14:15:41] -ixelp- David before making Station to Station : davidbowiecirclejerk
[14:31:11] <hayley> https://www.youtube.com/watch?v=h28xyuM0cTg
[14:31:11] -ixelp- Pink Floyd - Cymbaline (An Hour With Pink Floyd, KQED) - YouTube
[14:46:47] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[14:55:15] <shka> selwyn: i don't think that this is typical for macs
[14:55:45] *** Quits: random-nick (~random-ni@87.116.177.136) (Ping timeout: 268 seconds)
[15:14:11] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[15:16:06] *** Joins: kadir (~kadir@95.7.9.203)
[15:17:05] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 246 seconds)
[15:17:15] *** Parts: kadir (~kadir@95.7.9.203) ()
[15:24:52] * hayley thinks SBCL needs a parallel GC.
[15:25:04] <hayley> Oh, wait, aren't they working on using MPS?
[15:25:17] <hayley> But then it's not parallel, only concurrent.
[15:25:24] * hayley still thinks SBCL needs a parallel GC.
[15:31:32] <shka> hayley: how to get the most of it?
[15:31:58] <shka> real question, you are far more interested in this then i've ever was
[15:32:15] * edgar-rft wants a GC for his parallel universe
[15:35:13] <hayley> shka: I'm not sure what I can get the most out of - either the GC is parallel or not.
[15:35:45] <hayley> Well, you could make it more parallel or less parallel, but if I have to stop the damn world, I want to get it over with quickly.
[15:35:49] <shka> oh, so you don't want to perform parallel garbage collection, but just avoid stopping the world?
[15:36:15] <hayley> No, I would settle for a parallel stop the world GC.
[15:36:48] <hayley> The problem is, that with enough threads, a single threaded concurrent GC simply will not keep up with allocation.
[15:36:50] <shka> do you think that you can accomplish relevant shortening of GC pause real time in this manner?
[15:38:06] <hayley> Put it this way: the GC uses one core, but I have five more spare when the world is stopped. And I have a handbook on my desk with parallel GC algorithms.
[15:38:52] <shka> sure, but GC may easily be limited by memory access then the raw CPU power, no?
[15:39:14] <hayley> I suspect it would reduce pause wall time, sure. Though papers convince me it's not exactly a N-times speedup.
[15:39:17] <shka> *rather then
[15:39:39] <shka> could this lead to increased power consumption?
[15:40:03] <hayley> Depends. The SBCL GC is definitely not running out of bandwidth, as it takes a second to clear out a few GB, though you can play smarter with prefetching (c.f. OCaml).
[15:41:01] <hayley> The general assumption is that atomics are slower than non-atomic instructions, and we might pretend execute the same instructions, but on more cores. Thus probably an increase in power consumption.
[15:41:16] <shka> well, i still personally think that there is a lot of merit in what beach is doing with nurseries 
[15:41:51] <shka> because it really seems to reflect the real software behavior 
[15:42:11] <hayley> I also have a plan for thread local nurseries with a concurrenct and parallel compacting global heap, but SBCL would need precise roots to make it work.
[15:43:29] <hayley> And the compiler would also have to emit safepoints like Go or Java, which is also non-trivial.
[15:44:21] <pl> You could implement precise roots like in CCL 
[15:44:50] <pl> Not sure if Go doesn't do something similar nowadays 
[15:46:03] <hayley> I reference Go as it has safepoints, though IIRC they changed to a precise GC long ago.
[15:46:58] <shka> mmmm
[15:47:02] <hayley> Clozure uses the also unhappy choice of statically partitioning registers into tagged or not, which is a bit annoying. Though IIRC again that SBCL and/or CMUCL do the same on less register starved platforms?
[15:47:47] <shka> i think that this is pretty common actually
[15:47:56] <shka> and would be even more common if not for the x86
[15:48:24] <hayley> In the end, my lock free code tends to allocate a lot, and I would rather not have to implement a manual lock free reclamation scheme, because that shit sucks. So I want a GC with higher throughput.
[15:49:31] <hayley> Maybe I'll ask in #sbcl tommorow. Usually I don't get an answer there, but might as well try.
[15:59:24] <pl> hayley: Clozure doesn't partition statically
[15:59:27] <pl> SBCL/CMUCL do
[16:00:21] <pl> Clozure and Go I think both went for adding per-function/block partition info with compiler deciding at compile time how to allocate
[16:09:26] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 260 seconds)
[16:11:14] *** Joins: aeth (~aeth@user/aeth)
[16:11:41] <gilberth> Good morning #lispcafe!
[16:14:23] <Gnuxie> hi gilberth 
[16:15:17] * gilberth needs to recover from a puzzling dream.
[16:17:13] <shka> https://www.youtube.com/watch?v=pti-PHfDhko
[16:17:13] -ixelp- Iron Maiden - Infinite Dreams *HD* - YouTube
[16:18:25] <gilberth> Nice.
[16:19:40] <gilberth> For some reason I was moving in with my wife. Strange.
[16:20:17] <shka> seventh son of a seventh son best iron maiden album, fight me
[16:20:32] <gilberth> Anyhow, about typing. I hold my arms like this | \ while typing and not parallels. Although I once learned proper touch typing as a child, I never used it for hacking.
[16:21:36] <gilberth> And so I can't do with a split keyboard, but that don't suffer from the usual problems.
[16:21:39] <shka> have more metal https://www.youtube.com/watch?v=by82avbuBOg
[16:21:40] -ixelp- Celtic Frost - Obscured - YouTube
[16:22:23] <shka> gilberth: i think that it is to large extent a matter of physique 
[16:22:49] <shka> i am hairy, wide chested gorilla
[16:22:56] <shka> essentially 
[16:23:09] <gilberth> shka: Ironic. Metal always reminds me of the girl I was together with before I met my wife. ;) Sorry.
[16:23:48] <gilberth> shka: I am pretty narrow or slim. In fact so narrow that I have trouble finding clothes that fit.
[16:24:08] <shka> well, i also have a problem with clothes
[16:24:44] <shka> but the opposite 
[16:24:44] <gilberth> We could share. What is too much cloth for me could be added to yours.
[16:25:02] <shka> oh, and also pants are the worst part
[16:25:17] <shka> because i have really thick legs as well 
[16:25:34] <gilberth> Pants is a problem for me, too.
[16:26:56] * Alfr proposes applying the geometric mean to gilberth and shka. (Doing surgery on all your clothes is much more work.)
[16:27:02] <gilberth> For Jeans, I would need a waist measure of 28".
[16:29:06] <gilberth> Could we have PPRINT for HTML? I should find my olde CMUCL patches to cling into XP proper to get hold of the formatting commands.
[16:31:00] <gilberth> Well for <http://clim.rocks/mcclim/pprint/pprint.lisp> I borrowed the whole thing it seems.
[16:32:13] <gilberth> I wonder if it survived in McCLIM. Also see <http://clim.rocks/mcclim/screenshots/pprint-1.png> and <http://clim.rocks/mcclim/screenshots/pprint-2.png> pprint with proportional fonts and presentations.
[16:34:13] <gilberth> I would like to be able to pprint into some HTML, which with the help of JS, would pprint adjusting to the available size.
[16:35:04] <shka> Alfr: i am working on getting slimmer, but i can't do anything about my bones :P
[16:36:21] <gilberth> Heh, I can't do something about my bones either. And it appears that I also cannot do something about my weight.
[16:38:27] <gilberth> But it's odd when girls tell you that they feel fat around you.
[16:44:23] <shka> gilberth: i told you once, simply embrace your inner goth
[16:45:43] <gilberth> shka: Yep, perhaps that would be the easiest route.
[16:47:34] <shka> do you have a very light skin as well?
[16:47:46] <shka> if so, simply start dressing in black :P
[16:48:29] <gilberth> Hey, I am dressing in black. For like 30 years now.
[16:48:52] <shka> SEE?
[16:49:09] <gilberth> Indeed. *sigh*
[16:51:03] <gilberth> It's not as extreme as I it once was, but during university and while I still had my former company, all you could get me in was black pants and a black turtle-neck, all the same. When I would find some that fit, I'd buy multiple of them.
[16:51:56] <shka> now, start enjoying Bauhaus and you are golden :P
[16:52:44] <gilberth> That's too puristic for me. For living space I tend towards something more baroque.
[16:53:13] <shka> sigh, i meant the band 
[16:53:15] <shka> https://www.youtube.com/watch?v=Qxqq5vahHKk
[16:53:15] -ixelp- Bauhaus - She's In Parties - YouTube
[16:53:16] <shka> :P
[16:53:59] <gilberth> More metal?
[16:54:35] <shka> well, Bauhaus is the quintessential goth rock band but we may find something spicier for ya
[16:54:41] <selwyn> lol
[16:54:54] <gilberth> But turtlenecks also go well with a suit.
[16:55:04] <gilberth> shka: I see.
[16:56:18] <shka> oh, god, now i remember why i fucking hate goth metal
[16:57:07] <gilberth> Would you call, what we are listening to metal?
[16:57:21] <shka> Bauhaus?
[16:57:32] <gilberth> Yep. I don't believe so.
[16:57:48] <shka> nah, it is good old post punk
[16:58:01] <gilberth> Relief.
[16:58:20] <shka> it is kinda stretching it, but perhaps neurosis could be your new favorite band?
[16:58:33] <shka> it is not GOTH, but close enough and actually good :P
[16:59:22] <shka> https://youtu.be/0E6Knq7ZwBQ
[16:59:23] -ixelp- Under the Surface - YouTube
[16:59:36] <shka> this is, BTW, one of my favorite albums
[16:59:58] <gilberth> Well, I am pretty flexible with music, as long as is not Helene Fischer, and have no favorite band.
[17:00:48] * gilberth listens to a cacophony, and pauses the other video to stop it being one.
[17:01:35] <shka> mmmm, he was not ready :-(
[17:02:01] <shka> neurosis is... an acquired taste
[17:02:36] <gilberth> shka: Ok. Certainly nice, but I think I prefer the former music you posted.
[17:03:31] <shka> well, ok
[17:04:56] <gilberth> Does PPRINT work from the inside out?
[17:05:22] * gilberth always has trouble to figure its layout algorithm.
[17:06:49] <gilberth> Yep, it would attempt to layout in one line and start inserting breaks at the deepest level. Which of course is not optimal, but works well.
[17:11:21] <gilberth> Does it? *stratcheshead*
[17:49:07] <gilberth> Working with CSS is no fun at all, you still encounter bugs within minutes.
[17:50:25] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:50:49] *** Joins: hendursaga (~weechat@user/hendursaga)
[17:52:35] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[17:56:03] *** Joins: robin_ (~robin@user/terpri)
[17:57:25] *** Joins: robin__ (~robin@user/terpri)
[17:57:52] *** Quits: robin (~robin@user/terpri) (Killed (NickServ (GHOST command used by robin__)))
[17:57:56] *** robin__ is now known as robin
[18:01:35] *** Quits: robin_ (~robin@user/terpri) (Ping timeout: 264 seconds)
[18:04:38] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Quit: WeeChat 3.3)
[18:25:11] *** Joins: lisp123 (~lisp123@5.30.23.247)
[18:29:44] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 268 seconds)
[18:30:38] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[18:44:32] *** Joins: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se)
[18:55:00] *** Quits: waleee (~waleee@h-98-128-228-119.NA.cust.bahnhof.se) (Ping timeout: 268 seconds)
[18:58:54] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[19:01:29] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:08:35] *** Quits: domovod (~domovod@ec2-35-165-86-158.us-west-2.compute.amazonaws.com) (Ping timeout: 268 seconds)
[19:10:03] *** Joins: domovod (~domovod@176.196.122.197)
[19:10:45] *** Joins: amazigh (~amirouche@user/amirouche)
[19:25:52] <gilberth> For reflow of signatures, I have <http://clim.rocks/gilbert/defun-signature-layout.html> Ok. You could go a long way with a negative text-indent and a left margin of the same size. What do think? Does it work for you?
[19:26:51] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[19:27:52] <gilberth> It could however run even narrower; I'll see if I could do that.
[19:29:19] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[19:49:01] *** Quits: nckx (~nckx@tobias.gr) (Quit: Updating my Guix System <https://guix.gnu.org>)
[19:52:12] <shka> well, finally work day is over
[19:56:05] *** Joins: nckx (~nckx@tobias.gr)
[19:57:23] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 264 seconds)
[19:59:05] *** Joins: aeth (~aeth@user/aeth)
[19:59:45] *** Quits: domovod (~domovod@176.196.122.197) (Ping timeout: 268 seconds)
[20:04:04] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 268 seconds)
[20:04:33] *** Joins: aeth (~aeth@user/aeth)
[20:05:19] *** Quits: susam (~susam@user/susam) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[20:05:30] *** Joins: susam (~susam@user/susam)
[20:06:52] <shka> https://www.reddit.com/r/recruitinghell/comments/qhg5jo/this_resume_got_me_an_interview/?utm_medium=android_app&utm_source=share
[20:09:45] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[20:11:05] <shka> so i have no idea what the hell is wrong with my CV if this one works
[20:12:36] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[20:23:06] *** Joins: Inline (~Inline@2a02:908:1252:7a80:9e2e:d238:6ddc:c88f)
[20:38:24] *** Joins: lisp123 (~lisp123@5.30.23.247)
[20:43:33] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 268 seconds)
[20:51:14] <selwyn> sigh
[20:52:39] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[20:55:05] *** Joins: kadir (~kadir@95.7.9.203)
[20:57:06] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[20:57:45] <Gnuxie> wtf 
[20:58:29] <selwyn> disappointed in the lack of nuclear exchanges in these fishing tensions
[20:58:31] <selwyn> boring
[21:00:37] <edgar-rft> (defun chernobyl (x) (typecase x (atom 'kaboooom)))
[21:01:27] <pjb> shka: are you lacking buzzwords?
[21:01:37] <pjb> shka: the first filter is automatic buzzwords selectionâ€¦
[21:01:51] <shka> i guess i am
[21:06:53] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[21:10:51] *** Joins: pjb (~pjb@user/pjb)
[21:25:54] *** Parts: kadir (~kadir@95.7.9.203) ()
[21:26:30] <pl> shka: that CV is going to fail the second step pretty soundly
[21:26:50] <pl> edgar-rft: coal power plants do equivalent of >4 chernobyl events a year
[21:27:05] <shka> yup
[21:27:10] <shka> coal is radioactive
[21:27:53] <shka> buy a Geiger counter if you don't believe me  
[21:27:57] <edgar-rft> my readio is active, too
[21:28:04] <edgar-rft> *radio
[21:28:35] <shka> well, you don't breath your radio in, do you?
[21:28:41] <shka> :P
[21:29:03] <selwyn> how easy is it to make geiger counters
[21:29:25] <shka> selwyn: not that hard if you don't want to make accurate reading
[21:29:43] <shka> anyway, coal ash is even MORE radioactive then the coal
[21:30:21] <shka> though it depends on when you dig that coal from
[21:30:30] <shka> selwyn: wanna hear something funny?
[21:30:49] <edgar-rft> selwyn: the hard part is getting a reasonably priced geiger tube from somewhere
[21:30:58] <selwyn> shka: go
[21:31:04] <shka> so, thorium is pretty abundant on earth 
[21:31:19] <shka> it is, in fact, the most abundant radioactive element 
[21:31:43] <shka> and it happens that it pollutes the coal
[21:31:44] <ck_> I don't know what the big deal is. Most full orchestras have 30 Geigers.. I counted them for you. HTH.
[21:31:54] <shka> and it obviously is left behind after the coal is burned
[21:32:43] <shka> so it is pretty likely, that you have more nuclear energy in the ashes you have to dispose, then the chemical energy in the coal you've just burned 
[21:32:53] <shka> depending on the source of coal 
[21:33:44] <contrapunctus> ck_: Â«I don't know what the big deal is. Most full orchestras have 30 Geigers.. I counted them for you. HTH.Â» omfg :\
[21:33:47] <shka> think about it ;-)
[21:34:07] <shka> i find this to be pretty ironic
[21:35:01] * contrapunctus shoots ck_
[21:36:51] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[21:41:39] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[21:47:39] <shka> pl: i mean https://preview.redd.it/0uf26k57u4w71.png?width=2184&format=png&auto=webp&s=a7c37adb4a59c4ef4164fb889fb78eafd5bda754
[21:48:37] <pl> shka: they are going through recruiter screen, those f you're unlucky actually run you through shitty pseudo ml 
[21:49:22] <shka> https://preview.redd.it/blxutppbx4w71.png?width=2142&format=png&auto=webp&s=ccae20466b5dae0fd07c9b57fcdc959a214ba9dc
[21:49:24] <shka> ;-)
[22:05:27] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[22:08:25] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[22:27:52] *** Joins: random-nick (~random-ni@87.116.177.136)
[22:35:21] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[22:38:57] *** Quits: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com) (Remote host closed the connection)
[22:39:16] <shka> land tank vs air tank https://www.youtube.com/watch?v=zOWCFGTyJac
[22:39:16] -ixelp- Tiger Tank Shot Down Plane! Eastern Front 1943 - YouTube
[22:40:09] *** Joins: ogamita (~pjb@lfbn-idf2-1-519-48.w86-246.abo.wanadoo.fr)
[22:40:11] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[22:41:04] *** Joins: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com)
[22:48:17] *** Joins: robin_ (~robin@user/terpri)
[22:50:34] *** Quits: robin (~robin@user/terpri) (Ping timeout: 268 seconds)
[23:04:36] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[23:07:42] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[23:14:34] *** Quits: bcasiello (~bcasiello@066-189-087-112.biz.spectrum.com) (Ping timeout: 260 seconds)
[23:23:28] *** Joins: bcasiello (~bcasiello@066-189-087-112.biz.spectrum.com)
[23:24:19] *** Quits: ogamita (~pjb@lfbn-idf2-1-519-48.w86-246.abo.wanadoo.fr) (Quit: Konversation terminated!)
[23:31:54] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[23:36:50] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[23:50:06] *** Joins: Aurora_v_kosmose (~LispyLigh@user/lispylights)
[23:50:40] *** Quits: mfiano (~user@2603-7081-2d02-95bd-0250-b6ff-fef3-da40.res6.spectrum.com) (Read error: Connection reset by peer)
[23:53:49] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:8c42:fdf9:ab6e:cade)
