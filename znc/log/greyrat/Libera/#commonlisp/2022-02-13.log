[00:00:27] <mon_aaraj> alright! thank you very much for your input! i'll use death's library
[00:00:40] <Guest74> mon_aaraj: are you writing an interface or interacting with one?  If the latter, which? dbus seems kinda empty.
[00:02:28] <scymtym> i guess freedesktop notifications is most frequently used one
[00:04:05] <Guest74> yeah, one of the few I noticed.  I dislike notifications so that wasn't encouraging for my efforts.  keep forgetting to check if pipewire has a dbus interface.
[00:04:58] <mon_aaraj> Guest74: I'm using dbus to try to handle tray applications
[00:05:58] <Guest74> ah, i thought the systray spec was x based.
[00:08:20] <Guest74> or you mean interacting with specific tray apps that have a dbus interface? could you provide a link? I'm always interested in desktop stuff.
[00:08:33] *** Quits: Nselm (~Nselm@p200300d56f4b3f232fdd2f2b08ee3842.dip0.t-ipconnect.de) (Quit: Client closed)
[00:08:51] <Guest74> though i guess wayland stuff wouldn't be x based.
[00:08:56] *** Joins: kevingal (~quassel@37.228.202.92)
[00:10:12] <mon_aaraj> sure; here's what i am specifically meaning to interface with: https://www.freedesktop.org/wiki/Specifications/StatusNotifierItem
[00:11:10] <mon_aaraj> here's an example way to use it for trayers: https://github.com/taffybar/status-notifier-item the whole taffybar uses it to handle tray applications, and it looks like a nice way to do it
[00:12:53] <mon_aaraj> another thing that made me want to do it was https://github.com/OlfillasOdikno/trayson, which also does this
[00:14:41] <Guest74> nice.  I guess more specs will switch to something else as wayland gains more prominence.  Please report back on your progress, looks useful.
[00:15:11] <mon_aaraj> i shall! thank you very much for your help once again
[00:15:38] <Guest74> np
[00:33:57] *** Quits: Guest4414 (~Guest44@95.175.104.78) (Ping timeout: 256 seconds)
[00:41:17] *** Joins: karlosz (~karlosz@47.151.136.69)
[01:02:12] *** Quits: lisp123 (~lisp123@5.30.23.247) (Remote host closed the connection)
[01:07:41] *** Joins: nature (~nature@45.32.235.173)
[01:14:37] *** Quits: NotThatRPG (~NotThatRP@162-219-230-90.fttp.usinternet.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:17:41] *** Joins: alvaro121 (~aa@201.230.126.66)
[01:17:49] *** Quits: alvaro121_ (~aa@201.230.126.66) (Ping timeout: 240 seconds)
[01:19:18] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[01:21:08] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:22:27] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[01:27:39] *** Joins: alvaro121_ (~aa@201.230.126.66)
[01:28:55] *** Quits: alvaro121 (~aa@201.230.126.66) (Ping timeout: 256 seconds)
[01:32:23] *** Joins: mrcom_ (~mrcom@2600:1700:c630:a570:cc71:2bab:b2dd:c7b7)
[01:33:57] *** Quits: mrcom (~mrcom@99-73-215-70.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 240 seconds)
[01:35:43] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[01:37:37] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:41:30] *** Quits: nature (~nature@45.32.235.173) (Quit: leaving)
[01:46:15] *** Quits: unyu (~pyon@user/pyon) (Quit: WeeChat 3.4)
[01:50:20] *** Joins: unyu (~pyon@user/pyon)
[02:04:30] *** Joins: lambdart (~lambdart@189.4.76.230)
[02:16:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[02:18:12] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[02:33:13] <aeth> At least distros are starting to include libfixposix
[02:33:18] *** Quits: pve (~pve@37-33-90-31.bb.dnainternet.fi) (Quit: leaving)
[02:33:53] <aeth> Still not a fan of having to use an obscure foreign library just so it'll run on Solaris and OpenBSD or whatever.
[02:35:30] <aeth> (might not be old enough for Solaris)
[02:36:39] <aeth> (it appears to be from July 2010)
[02:39:33] <Guest74> last I checked they only advertised being on 2 distros.
[02:41:55] <dieggsy> does anyone happen to know the history of why it's "makunbound" and not simply "unbind"
[02:42:16] <dieggsy> or make-unbound for that matter
[02:42:41] <moon-child> https://redd.it/slb66k
[02:44:04] <dieggsy> moon-child: ah, cool. thanks. ...i still feel like unbind would have made sense but something about if my grandma had two wheels lol
[02:47:58] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[02:48:39] <Alfr> dieggsy, naming it make-unbound wouldn't meet the usual expectation for functions called make-* .
[02:48:55] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[02:49:29] <dieggsy> right, i see why that one doesn't make sense
[02:51:41] <Guest74> for sequential integers that map to keywords, I wonder at why point does a hashtable become more performant than doing (position :keyword array)?  Anybody ever written any tests for this?
[02:51:53] <Guest74> s/why/what/
[02:52:52] <moon-child> which hashtable?
[02:53:48] <Guest74> I don't understand.  one that uses keywords as keys.
[02:54:19] <moon-child> sure.  But how is the hash table implemented?
[02:54:39] <Guest74> however an implementation implements it.
[02:54:44] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[02:54:49] <moon-child> I can imagine a hash table implementation for which lookups are faster in all cases than (position :keyword array), and one for which lookups are slower in all cases than (position :keyword array)
[02:56:42] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[02:57:19] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Remote host closed the connection)
[02:57:43] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[02:58:23] <aeth> Guest74: The documentation mentions Suse and Debian, but I can confirm that it's on Fedora.
[02:58:38] <aeth> And if it's on Fedora, it's (eventually) on CentOS and RHEL
[02:59:25] <Guest74> I can confirm it's not on ubuntus :)
[02:59:37] *** Quits: cosimone (~user@93-44-184-23.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[03:00:34] *** Joins: lisp123 (~lisp123@5.30.23.247)
[03:05:30] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[03:26:36] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Ping timeout: 272 seconds)
[03:27:13] <Guest74> welp, as long as I'm not doing anything significantly wrong in my testing, eql hashtables with keywords for keys are significantly faster than using position on a simple-vector even with as little keys as 10.  at least on sbcl.
[03:28:08] *** Quits: mrcom_ (~mrcom@2600:1700:c630:a570:cc71:2bab:b2dd:c7b7) (Quit: This computer has gone to sleep)
[03:33:11] <AeroNotix> share code
[03:35:03] *** Joins: mrcom (~mrcom@99-73-215-70.lightspeed.irvnca.sbcglobal.net)
[03:40:52] <Guest74> i think you get the gist from this https://pastebin.com/K1YwNwS5 , randomize, kintern, and time-nogc should be self explanatory.
[03:45:53] *** Joins: s-liao (~s-liao@101.86.96.21)
[03:47:51] *** Quits: kevingal (~quassel@37.228.202.92) (Remote host closed the connection)
[04:00:23] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Ping timeout (120 seconds))
[04:01:00] *** Joins: s-liao (~s-liao@101.86.96.21)
[04:03:58] <White_Flame> yeah, a rule of thumb that I've heard is that 10-15 elements is where hash tables become faster
[04:04:12] <White_Flame> it all of course depends on your implementation, as well as how expensive the hash function is
[04:04:31] <moon-child> I tested a modified version of guest74's code, in which hash tables were faster for just one element
[04:04:35] <White_Flame> hmm, no how expensive the full key comparison function is
[04:05:33] <Guest74> yeah i really wasn't expecting this since I've had trouble with hash tables being really slow in the past.  Not for accessing something but orders of magnitude slower than redoing a colour blend instead of storing it.
[04:06:07] <White_Flame> moon-child: if you only have 1 element, then the last value cache will immediately hit and it doesn't have to do any testing at all
[04:07:06] * moon-child nods
[04:08:16] <White_Flame> EQL is also going to be a bit slower than EQ, and since you're comparing for the same symbol object, EQ is fine
[04:08:29] <Guest74> yeah i stuck in the collects and storing of result so that stuff wouldn't get optimized away.
[04:08:40] <moon-child> well, hmm, now changing some stuff it is slower
[04:09:08] <Guest74> I think sbcl default is eql.  i wonder how much different eq is.
[04:09:18] <White_Flame> you have a timing test ready to try ;)
[04:09:35] <Guest74> already adding it :)
[04:09:59] <White_Flame> EQ is like one instruction.  EQL, if the EQ test fails, then goes into checking & branching on the type of the value
[04:10:55] <Guest74> about 75% of eql
[04:10:56] <White_Flame> so why EQL=>EQUAL=>EQUALP does get progressively slower, EQ (if immediately compiled) can be substantially faster in searches like these
[04:11:07] <White_Flame> *while
[04:12:27] <Guest74> actually, seems rather variable.
[04:12:30] <White_Flame> and that progressively slower generally is just if it does more testing on the given data type.  I don't think more than EQUAL/EQUALP should be any slower than EQL itself if it's an EQL-comparable value
[04:13:46] <moon-child> http://ix.io/3Prf/lisp  (test 10) the array consistently outperforms the hash table for me
[04:13:57] <moon-child> switching to eql closes the gap
[04:14:06] <moon-child> (sbcl)
[04:14:09] <moon-child> (speed 3) seems to make a big difference
[04:14:17] <White_Flame> yep.  the hashing function is called ones, but the key test function is called all the time
[04:14:43] <moon-child> safety 0 improves performance a bit, but do you really want safety 0?
[04:15:22] <White_Flame> you'd have to recompile SBCL's hashtable implementation to really gain that advantage, I'd think
[04:15:42] <AeroNotix> (safety -1)
[04:16:23] <Guest74> huh, i get faster array with the-cost-of-nothing as well
[04:17:08] <moon-child> the-cost-of-nothing isn't the differentiator, it's speed 3
[04:17:48] <Guest74> It'd be so much easier to do some automated testing of where the limit is if any of these times returned an actual time instead of just printing information.
[04:18:38] <Guest74> On mine, taking out any declarations array is slower even with 10 elements.
[04:18:39] <White_Flame> check the docs
[04:18:47] <moon-child> use benchmark instead of bench
[04:19:51] <Guest74> thanks, that's good to know for the future.
[04:19:52] <White_Flame> Guest74: array bounds checking is a big part of declaration-based speed
[04:20:57] * moon-child wonders if sbcl eq does simd
[04:21:00] <moon-child> err
[04:21:03] <moon-child> sbcl position
[04:21:12] <Guest74> I've noticed that in my graphics code.  Though not sure anybody would appreciate that in a library.
[04:21:14] <moon-child> probably not.  That would get you more speedup
[04:21:29] <White_Flame> I seriously doubt it.  Plus, M-. makes it easy to look :-P
[04:21:56] <White_Flame> (hmm, maybe not with the various complation layers that can affect it)
[04:25:44] *** Joins: dre (~dre@2001:8003:c932:c301:65d5:9857:1e2b:4377)
[04:26:45] *** Quits: dre (~dre@2001:8003:c932:c301:65d5:9857:1e2b:4377) (Client Quit)
[04:26:57] <gjvc> breggsit
[04:27:06] <gjvc> misfire
[04:29:43] <Guest74> well at least on my machine, 13 elements is where hashtable outdoes array with speed3. so array will probably not help me with my 780 element array :)
[04:31:13] <mon_aaraj> it seems i am already having issues with death/dbus - this error `; Debugger entered on #<SIMPLE-ERROR "No server addresses left to try to open." {100533EF33}>` always springs up when I am trying out their https://github.com/death/dbus/blob/master/examples/notify.lisp example to run in the sly repl, which i assume is an attempt to send a notification via dbus?
[04:31:15] <Guest74> though I'm guess doing aref on that array will still be faster to get the keyword from an integer than using a hashtable.
[04:32:37] <mon_aaraj> for the record, just using the `notify-send` binary works pretty well, so i don't think it is an issue with my system
[04:32:50] <Guest74> sorry mon_arraj: I've never actually used death's because of the libfixposix requirement.  I just wrote my own.
[04:33:01] <mon_aaraj> ah, i see, that sounds interesting to do
[04:33:27] <mon_aaraj> it was quite simple for me to install libfixposix, so that's not a big barrier for me
[04:33:39] *** Quits: random-nick (~random-ni@87.116.167.125) (Ping timeout: 256 seconds)
[04:34:10] <Guest74> it's probably just the way my brain works, but I find the easiest way to understand a protocol is to implement it.
[04:35:31] <mon_aaraj> it might as well be, haha
[04:44:57] *** Joins: bae (~user@110.54.228.160)
[04:46:08] <bae> Can Emacs Lisp be thught of as a subset of CL?
[04:48:52] <moon-child> you can think of anything any way you like
[04:48:55] <_death> mon_aaraj: you could try using dbus:system-server-addresses instead of dbus:session-server-addresses
[04:49:14] <mon_aaraj> ah, i see, thank you very much!
[04:50:08] <Guest74> bae: no.  something about scope I think.
[04:50:55] <mon_aaraj> huh, it seems to output a new error: `Method error: "The name org.freedesktop.Notifications was not provided by any .service files".`, i assume it isn't detecting any notification daemon or something?
[04:50:58] <moon-child> elisp has lexical scope now
[04:52:25] <bae> Guest74 moon-child: I'm working through a Common Lisp book right now using Elisp. So far no problems.
[04:52:50] <Guest74> meh, what do I know, I don't elisp.
[04:54:15] <_death> mon_aaraj: right, probably need to start a notification daemon
[04:54:46] <bae> Guest74 You should...Emacs is the Shizzle, my Nizzle.
[04:55:47] <Guest74> meh, too busy replacing it with cl.
[04:55:53] <mon_aaraj> well, the thing is.. one does exist already, it's how i've been making sure notify-send works, it was just me guessing what the error meant
[04:56:10] <mon_aaraj> i use one called wired-notify
[04:56:33] <mon_aaraj> should i try with something else?
[04:56:55] <bae> Guest74: No you're not, LOL
[04:57:53] *** Parts: bae (~user@110.54.228.160) (ERC (IRC client for Emacs 27.1))
[04:58:12] <_death> mon_aaraj: well, you could try to send the same message to the same address.. the error you got is from the dbus server
[05:00:32] <mon_aaraj> huh, i see, i am not quite sure how i'd do that
[05:00:51] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[05:01:24] <_death> mon_aaraj: I'm not sure notify-send has to use dbus.. for example archlinux wiki has this section https://wiki.archlinux.org/title/Desktop_notifications#Standalone
[05:02:16] *** Joins: lisp123 (~lisp123@5.30.23.247)
[05:02:35] *** Joins: rgherdt_ (~rgherdt@port-92-195-61-212.dynamic.as20676.net)
[05:04:42] *** Quits: morganw (~user@80.225.24.132) (Remote host closed the connection)
[05:05:16] <mon_aaraj> oh, interesting... so i might need to do more than just launch the daemon for the notification service, ill see what i can do. thank you so very much for your help!
[05:06:31] *** Quits: rgherdt (~rgherdt@port-92-195-61-212.dynamic.as20676.net) (Ping timeout: 256 seconds)
[05:07:05] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[05:14:04] <_death> currently I also get that error btw.. because I use (an old version of) stumpwm without any notification daemon.. back when I wrote that example I used gnome and didn't need to do anything iirc
[05:15:44] <Guest74> do new versions have a notification system?
[05:15:54] <_death> executing notify-send doesn't do anything in my case
[05:16:05] <_death> (and returns 0)
[05:17:23] <_death> Guest74: maybe.. I remember seeing some code that uses my dbus library to set up a notification daemon.. could've been some personal fork
[05:18:42] <mon_aaraj> well i did add the file, made it point to the wired executable. then checked that dbus detects the file and does what its supposed to do, which it does. but the code snippet still seemingly doesn't work - so i think ill have to first reboot to see if it magically fixes anything (hopefully, haha), but it should work after a reboot if the archwiki is correct
[05:19:42] <_death> mon_aaraj: you can try to compile notify-send and do some printf debugging
[05:21:16] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[05:21:36] *** Joins: karlosz (~karlosz@47.151.136.69)
[05:21:45] <mon_aaraj> noted! ill be hoping a reboot just fixes it though
[05:21:50] *** Quits: karlosz (~karlosz@47.151.136.69) (Remote host closed the connection)
[05:22:08] *** Joins: karlosz (~karlosz@47.151.136.69)
[05:23:21] <Guest74> looks like there's a contrib for it that sets up a notification server. might have to take a closer look at it.
[05:23:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Read error: Connection reset by peer)
[05:27:37] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[05:28:53] *** Joins: s-liao (~s-liao@101.86.96.21)
[05:32:57] *** Joins: Bike (~Bike@71.69.170.70)
[05:35:03] <mon_aaraj> well. my hopes were incorrect
[05:36:46] <mon_aaraj> i mean, even firefox works how it it supposed to with notifications, i cant really fathom why it doesn't work with the library
[05:39:52] <_death> looking at notify-send source code, it seems to use the session bus..
[05:51:32] *** Quits: jeosol (~jeosol@user/jeosol) (Quit: Client closed)
[05:52:08] <mon_aaraj> not even using dunst works.. hm.
[05:52:20] <_death> if you don't have a DBUS_SESSION_BUS_ADDRESS environment variable, dbus spec says you can "try to read the address from the X Window System root window property _DBUS_SESSION_BUS_ADDRESS." .. so "xprop -display $DISPLAY -root" might show it
[05:52:56] <_death> but my library just checks the environment
[05:53:41] <mon_aaraj> i indeed do not have the environment variable, nor do i use Xorg
[05:53:48] <mon_aaraj> how would i set it?
[05:54:03] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 250 seconds)
[05:55:00] <_death> well, that depends on your system.. maybe you can check logs to see the address
[05:55:30] <Guest74> i think it defaults to /run/user/1000(if first user)/bus
[05:56:30] <_death> here the environment variable is set to "unix:path=/run/user/1000/bus"
[06:05:43] <mon_aaraj> well, in /run/user/1000, only dbus-1 exists as a folder, and when i set it to that it still doesn't want to work, though there's /run/dbus which has system_bus_socket but im not sure that's what i am looking for
[06:07:02] <_death> it should be a unix domain socket "file"
[06:07:57] <mon_aaraj> yeah, it looks like a socket, after setting the environment variable to that folder, there seems to be no difference
[06:09:47] <_death> maybe you have a file in ~/.dbus/session-bus/ with the details
[06:11:06] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[06:11:12] <_death> I could probably add this method
[06:15:12] <mon_aaraj> oh, i do: https://bpa.st/TZRA
[06:15:43] <_death> well, at least accept a PR.. it's under the X windows section, though, so maybe won't work for you.  I don't remember this stuff being in the spec when I wrote most of the code.. but that's probably because it was written in 2010
[06:16:11] <_death> well, does that address work?
[06:17:59] <mon_aaraj> huh.. nothing, its just the same error, despite that .service file existing in the directory as per the page you showed, and the environment variables all being set from that file
[06:20:59] <mon_aaraj> wait, it works with the old code after setting all of them up, not system-server-addresses
[06:21:23] <mon_aaraj> thank you so much for your help! and i am really sorry for taking so much of your time haha
[06:22:44] <mon_aaraj> so i guess i needed to always export what's in ~/.dbus/?
[06:24:14] <_death> at last :) .. I guess, not up to date with dbus practices
[06:24:57] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 240 seconds)
[06:32:10] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[06:33:37] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[06:40:16] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[06:41:02] *** Quits: rgherdt_ (~rgherdt@port-92-195-61-212.dynamic.as20676.net) (Ping timeout: 272 seconds)
[06:41:59] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[06:53:42] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[06:55:20] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[06:59:25] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[07:02:20] *** Joins: lisp123 (~lisp123@5.30.23.247)
[07:02:56] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[07:04:47] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:06:23] *** Joins: s-liao (~s-liao@101.86.96.21)
[07:06:54] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[07:11:11] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[07:13:18] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[07:25:21] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 245 seconds)
[07:29:54] <dbotton> I received a bug report recently with compile errors on windows using portacle of "error in FORMAT: Unknown directive (character: Return)" I use portacle often and never saw. Has anyone seen such an error before?
[07:30:33] <beach> Good morning everyone!
[07:31:23] *** Quits: AeroNotix (~xeno@185.107.67.252) (Quit: WeeChat 3.4)
[07:38:35] <mfiano> dbotton: I think I have seen this when using the #\Newline directive on SBCL/Windows, which it is broken for, or something along those lines.
[07:39:27] <mfiano> Probably has to do with line endings, or setting up git to use the correct ones.
[07:39:56] <dbotton> Thanks
[07:40:04] <mfiano> I don't know much else, as I do not use Windows, other than I've seen it reported to some projects before.
[07:40:26] <White_Flame> presumably this is a tilde at the end of the line to concatenate the rest of the string?
[07:40:33] <dbotton> Yes
[07:41:09] <dbotton> Advice?
[07:41:11] <White_Flame> so yeah, literal crlf when it's looking for a lf
[07:41:40] <mfiano> I think there's a gitconfig setting to pull code correctly or something
[07:41:55] <White_Flame> well, "correct" for this case would presumably be unix line endings
[07:41:58] <mfiano> |3b| told me about it a while ago as he's a Windows user. Maybe he knows more.
[07:41:59] <mfiano> Right
[07:43:16] <dbotton> Thanks!
[07:43:21] * mfiano imagines all the bytes on the Internet wasted by Windows line endings
[07:47:02] *** Quits: lambdart (~lambdart@189.4.76.230) (Remote host closed the connection)
[07:50:04] <White_Flame> including http and all sorts of other non-windows textual protocols
[07:52:46] <dbotton> It was once worse.
[07:53:31] <dbotton> Windows the only offender now. Mac also had alternative scheme.
[07:54:09] <White_Flame> yeah, but mac was its own little bubble
[07:54:33] <White_Flame> mac-specific formats & protocols didn't have much spread
[07:55:09] <White_Flame> (at least not when compared to http and the like)
[07:57:32] *** Joins: lisp123 (~lisp123@5.30.23.247)
[08:02:06] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 272 seconds)
[08:13:15] *** Joins: semz_ (~semz@user/semz)
[08:15:54] *** Quits: semz (~semz@user/semz) (Ping timeout: 260 seconds)
[08:17:10] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[08:19:10] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:20:10] *** semz_ is now known as semz
[08:29:52] *** Joins: notzmv (~zmv@user/notzmv)
[08:31:12] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[08:49:47] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[08:51:31] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:52:22] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[08:54:54] *** Quits: Bike (~Bike@71.69.170.70) (Quit: and now, sleep)
[09:00:53] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Disconnected: Replaced by new connection)
[09:01:38] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[09:06:53] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[09:26:22] *** Quits: occ (~occ@user/occ) (Ping timeout: 260 seconds)
[09:28:20] *** Joins: karlosz (~karlosz@47.151.136.69)
[09:54:17] *** Joins: lisp123 (~lisp123@5.30.23.247)
[09:56:01] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[09:58:55] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[10:04:51] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[10:14:40] *** Joins: occ (~occ@user/occ)
[10:32:58] *** Quits: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net) (Quit: ~ Trillian - www.trillian.im ~)
[11:22:57] *** Joins: SR-71 (~user@user/SR-71)
[11:37:27] *** Joins: lisp123 (~lisp123@5.30.23.247)
[11:39:09] *** Joins: Guest4496 (~Guest44@95.175.104.78)
[11:42:18] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[11:49:31] *** Joins: cosimone (~user@93-34-133-235.ip49.fastwebnet.it)
[11:51:41] *** Quits: Guest4496 (~Guest44@95.175.104.78) (Ping timeout: 256 seconds)
[11:52:15] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[11:53:54] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:02:53] *** Parts: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1) (Error from remote client)
[12:03:53] *** Joins: pranavats (3fba1d1b34@2a00:c70:1:178:170:40:189:1)
[12:13:07] *** Joins: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr)
[12:15:24] *** Quits: Alfr (~Alfr@user/alfr) (Quit: Leaving)
[12:18:34] *** Joins: pve (~pve@188-67-188-88.bb.dnainternet.fi)
[12:32:54] <|3b|> mfiano, dbotton: git config core.autocrlf input
[12:33:09] <mfiano> Ah yes that was it
[12:33:11] <mfiano> THanks
[12:33:37] <|3b|> will configure a specific git repo to convert crlf to lf on commit, and not change it on checkout (i think)
[12:34:35] <|3b|> git config --global core.autocrlf input  to make that the default for you
[12:38:38] *** Joins: treflip (~user@user/treflip)
[12:40:25] <|3b|> you can also set it to false for no automatic conversion at all. see also core.eol, core.safecrlf configs and the text gitattributes
[12:40:27] *** Joins: s-liao (~s-liao@101.86.96.21)
[12:50:52] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[12:52:56] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[12:57:58] *** Joins: Alfr (~Alfr@user/alfr)
[13:04:40] *** Joins: lisp123 (~lisp123@5.30.23.247)
[13:09:40] <CodeBitCookie[m]> Hello Everyone!
[13:09:50] <jackdaniel> hey
[13:09:54] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 272 seconds)
[13:16:13] *** Joins: pillton (~user@193-116-115-3.tpgi.com.au)
[13:27:00] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[13:28:18] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:35:18] *** Joins: cage (~cage@94-39-220-187.adsl-ull.clienti.tiscali.it)
[13:37:33] *** Joins: wacki (~wacki@87.122.91.151)
[13:51:30] *** Quits: OlCe (~user@amontsouris-156-1-23-81.w92-151.abo.wanadoo.fr) (Remote host closed the connection)
[13:52:47] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[13:56:39] *** Quits: pillton (~user@193-116-115-3.tpgi.com.au) (Quit: ERC (IRC client for Emacs 27.2))
[13:56:57] *** Quits: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt) (Ping timeout: 240 seconds)
[13:57:37] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[14:00:21] *** Joins: s-liao (~s-liao@101.86.96.21)
[14:11:54] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[14:15:34] *** Joins: hineios (~hineios@a95-93-142-124.cpe.netcabo.pt)
[14:22:57] *** Quits: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de) (Quit: Leaving)
[14:33:29] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[14:33:54] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[14:35:08] *** Quits: pve (~pve@188-67-188-88.bb.dnainternet.fi) (Ping timeout: 256 seconds)
[14:36:18] *** Lord_of_Life_ is now known as Lord_of_Life
[14:41:28] *** Joins: Dynom (~niels@80-114-12-206.cable.dynamic.v4.ziggo.nl)
[14:46:29] *** Joins: Inline (~Inline@ip-037-201-241-209.um10.pools.vodafone-ip.de)
[14:47:58] <phoe> hey
[14:54:08] *** Joins: random-nick (~random-ni@87.116.181.150)
[15:07:55] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[15:20:22] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[15:21:41] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:34:04] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[15:36:05] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:40:39] *** Joins: lisp123 (~lisp123@5.30.23.247)
[15:45:58] *** Quits: lisp123 (~lisp123@5.30.23.247) (Ping timeout: 256 seconds)
[15:49:21] <dbotton> |3b|: thanks!
[16:19:43] *** Quits: cosimone (~user@93-34-133-235.ip49.fastwebnet.it) (Remote host closed the connection)
[16:22:18] *** Joins: cosimone (~user@93-34-133-235.ip49.fastwebnet.it)
[16:31:52] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[16:33:46] *** Joins: aeth (~aeth@user/aeth)
[16:37:57] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Quit: WeeChat 3.4)
[16:39:04] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[16:44:24] *** Joins: Bike (~Bike@71.69.170.70)
[16:57:56] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[16:59:54] *** Joins: s-liao (~s-liao@101.86.96.21)
[16:59:57] *** Quits: cross (~cross@spitfire.i.gajendra.net) (Quit: leaving)
[17:00:32] *** Joins: cross (~cross@spitfire.i.gajendra.net)
[17:07:01] *** Joins: pve (~pve@188-67-188-88.bb.dnainternet.fi)
[17:20:04] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[17:24:22] *** Joins: yewscion (~yewscion@72-21-196-66.amazon.com)
[17:31:47] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:37:40] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[17:39:16] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[17:52:08] *** Parts: _73 (~user@pool-96-233-64-53.bstnma.fios.verizon.net) (ERC (IRC client for Emacs 27.2))
[17:56:01] *** Joins: Rue (~rue@2001-b011-1000-1cb7-da1d-fbf4-ac2a-f9f7.dynamic-ip6.hinet.net)
[18:00:23] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[18:08:58] *** Joins: hafat (~hafat@159.146.5.83)
[18:20:25] *** Quits: psf (~pi@206.55.172.18) (Ping timeout: 256 seconds)
[18:22:09] *** Joins: psf (~pi@206.55.172.18)
[18:22:14] *** Joins: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net)
[18:22:28] *** Quits: IPmonger (~IPmonger@c-69-242-83-226.hsd1.pa.comcast.net) (Remote host closed the connection)
[18:34:52] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[18:39:35] *** Quits: hafat (~hafat@159.146.5.83) (Quit: Leaving)
[18:51:15] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[18:52:21] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:56:38] *** Parts: _death (~death@adeht.org) (ERC (IRC client for Emacs 28.0.50))
[18:56:42] *** Joins: _death (~death@adeht.org)
[19:04:54] *** Joins: singsong (~SingSong@221.179.69.238)
[19:05:05] *** singsong is now known as yagami
[19:06:07] *** yagami is now known as yagami^
[19:07:32] *** Parts: yagami^ (~SingSong@221.179.69.238) ()
[19:09:52] *** Joins: yagamisato (~SingSong@120.238.55.229)
[19:13:00] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[19:15:49] <yagamisato> hello everyone
[19:16:46] *** Quits: treflip (~user@user/treflip) (Quit: ERC (IRC client for Emacs 27.2))
[19:21:15] *** Joins: treflip (~user@user/treflip)
[19:21:43] *** Quits: yagamisato (~SingSong@120.238.55.229) (Quit: leaving)
[19:26:30] *** Quits: Rue (~rue@2001-b011-1000-1cb7-da1d-fbf4-ac2a-f9f7.dynamic-ip6.hinet.net) (Quit: WeeChat 3.4)
[19:29:49] *** Joins: Rue (~rue@2001-b011-1000-1cb7-da1d-fbf4-ac2a-f9f7.dynamic-ip6.hinet.net)
[19:33:37] *** Quits: amb007 (~a_bakic@102.215.76.86.rev.sfr.net) (Ping timeout: 240 seconds)
[19:33:49] *** Joins: amb007 (~a_bakic@29.38.22.93.rev.sfr.net)
[19:34:12] *** Joins: shka (~herr@109.231.0.226)
[19:40:36] *** Quits: amb007 (~a_bakic@29.38.22.93.rev.sfr.net) (Read error: Connection reset by peer)
[19:41:13] *** Joins: amb007 (~a_bakic@29.38.22.93.rev.sfr.net)
[19:43:22] *** Joins: lisp123 (~lisp123@5.30.23.247)
[19:45:06] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[19:46:33] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[19:46:42] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:56:30] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 272 seconds)
[20:00:16] <beach> Sometimes it looks like ASDF was made to purposely defeat my attempts at using it for SICL.
[20:00:52] <lisp123> Which part?
[20:01:06] <beach> I wouldn't know.
[20:01:19] <lisp123> I see
[20:01:20] <beach> I tried to call MAKE-PLAN to just get a list of source files in dependency order.
[20:01:43] <beach> But it defeated me because it takes into account whether those files are already loaded.
[20:02:13] <lisp123> Interesting
[20:02:15] *** Joins: Bike (~Bike@71.69.170.70)
[20:02:37] <beach> So then I tried doing what MAKE-PLAN does which is (MAKE-INSTANCE 'SEQUENTIAL-PLAN :FORCING ???)
[20:02:47] <beach> and I tries T for ??? but that is wrong too.
[20:03:06] <beach> I am betting I will eventually need some feature that is not part of the API.
[20:03:53] <lisp123> What would happen if two source files depend on each other?
[20:04:19] <beach> The plan would take that into account and give me the files in dependency order.
[20:04:50] <lisp123> Which one would occur first?
[20:05:12] *** Joins: silasfox (~sbv@p200300cec72d2e00cb324c6b06d6efd2.dip0.t-ipconnect.de)
[20:05:23] <beach> The last one to be processed it looks like.
[20:05:39] <lisp123> Got it
[20:10:26] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[20:12:03] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:14:07] <etimmons> lisp123: If you mean something like ((:file "a" :depends-on ("b")) (:file "b" :depends-on ("a"))), ASDF should signal a circular dependency error
[20:15:03] <lisp123> etimmons: Cheers
[20:15:11] <beach> I give up.
[20:15:54] <beach> I just want a simple list of all the source files in dependency order, no matter whether the system has already been loaded.
[20:15:58] <beach> How hard can it be?
[20:18:29] <lisp123> i had some code lying around before that calculated the dependencies based on 1 package 1 file
[20:19:59] <lisp123> I guess something similar could be done based on each file vs. each package using Eclector
[20:21:07] <beach> I thought (asdf/forcing:make-forcing :force t) would do it, but no.
[20:21:12] *** Quits: amb007 (~a_bakic@29.38.22.93.rev.sfr.net) (Ping timeout: 272 seconds)
[20:21:47] <|3b|> beach: i think you want :all there instead of T
[20:21:53] *** Joins: amb007 (~a_bakic@122.145.204.77.rev.sfr.net)
[20:22:03] <beach> Oh, let me try that.
[20:22:15] <|3b|> though when i tried it, it made asdf thing the thing i planned wasn't loaded anymore, so probably not completely right
[20:22:26] <|3b|> *made asdf think the thing
[20:22:51] <beach> Worked!  Thank you very much!
[20:23:29] <beach> That won't be a problem for me.
[20:28:59] <beach> I will experiment with that tomorrow.  Now it is time to go fix dinner for my (admittedly small) family.
[20:30:07] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[20:34:07] <lisp123> dbotton: Does CLOG text editor have the notion of buffers and buffer manipulation (i.e. access to POINTS and MARKS etc)
[20:43:51] <|3b|> beach: actually, maybe (asdf/plan:required-components system :other-systems t) is what you want?
[20:45:45] *** Quits: amb007 (~a_bakic@122.145.204.77.rev.sfr.net) (Read error: Connection reset by peer)
[20:46:22] *** Joins: amb007 (~a_bakic@102.215.76.86.rev.sfr.net)
[20:50:25] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[20:52:25] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[20:53:43] *** Quits: cosimone (~user@93-34-133-235.ip49.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[20:54:11] <|3b|> maybe (mappend (curry #'asdf:input-files 'asdf:compile-op) (asdf/plan:required-components 'system :other-systems t)) to go directly to pathnames if all the systems compile/load the desired files normally
[21:00:16] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:00:29] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:01:34] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:01:40] *** Quits: lisp123 (~lisp123@5.30.23.247) (Quit: Leaving...)
[21:01:45] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:02:10] *** Joins: cosimone (~user@93-34-133-235.ip49.fastwebnet.it)
[21:02:13] *** Quits: silasfox (~sbv@p200300cec72d2e00cb324c6b06d6efd2.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[21:02:16] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:02:27] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:03:08] <dbotton> lisp123 the one in the demo of a lisp editor does. It is using the ace editor https://ace.c9.io/
[21:04:20] <dbotton> From playing around with SWANK it would be trivial to add most features to a CLOG app and use that is the editing buffer.
[21:04:54] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[21:06:44] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:11:14] *** Quits: yewscion (~yewscion@72-21-196-66.amazon.com) (Ping timeout: 272 seconds)
[21:18:12] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 272 seconds)
[21:19:12] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[21:20:04] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[21:23:49] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[21:31:37] <Guest74> for those who understand c is 1<<8 just (ash 1 8)?
[21:31:54] <Guest74> I've probably asked that before, but I can't remember this c crap.
[21:32:26] <_death> yes
[21:32:35] <Guest74> thanks
[21:33:12] <Guest74> and is OR IOR?
[21:33:56] <_death> | is logior
[21:34:15] <Guest74> ok, thanks again.
[21:35:27] <Guest74> I really need to automate this ioctl conversion stuff so I don't have deal with this again.
[21:36:09] *** Quits: treflip (~user@user/treflip) (Quit: good night)
[21:37:43] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:37:44] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:38:57] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:39:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:39:39] <_death> https://github.com/vsedach/Vacietis/blob/master/compiler/implementation.lisp#L26 ;)
[21:39:52] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:40:04] *** Joins: pingpongball (~pingpongb@43.228.192.115)
[21:40:06] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:40:44] <Guest74> nice!  Thanks a lot.
[21:42:00] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:42:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:43:55] <Guest74> that's an interesting project.
[21:44:06] *** Quits: pingpongball (~pingpongb@43.228.192.115) (Client Quit)
[21:47:01] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:47:07] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:52:06] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:52:18] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[21:53:27] *** Joins: morganw (~user@80.225.24.132)
[21:55:40] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[21:56:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[22:00:32] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[22:02:40] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:03:41] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[22:05:31] *** Joins: aeth (~aeth@user/aeth)
[22:15:35] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[22:16:09] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:17:35] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[22:17:59] *** Quits: Bike (~Bike@71.69.170.70) (Quit: Connection closed)
[22:18:09] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[22:18:49] *** Joins: AeroNotix (~xeno@185.107.67.252)
[22:20:16] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[22:21:33] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[22:26:26] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[22:26:29] *** Joins: parjanya (~esb@2804:14c:1ad:9351:eda3:e794:1704:f373)
[22:27:21] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[22:28:58] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[22:29:27] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[22:30:10] *** Joins: jeosol (~jeosol@user/jeosol)
[22:30:20] <parjanya> why the slot 'text doesn’t get set here? https://plaster.tymoon.eu/view/2943 if it has to do with the :after method, I thought the slots were set before it
[22:31:18] <Xach> parjanya: :after goes before the lambda list, not after it.
[22:31:35] <Xach> what you have now is a pointless evaluation of a keyword as the first form of the method
[22:32:03] <parjanya> Xach:  d'oh, thanks
[22:33:06] <_death> and the method is primary, and doesn't call-next-method, so the next method is suppressed
[22:33:38] <Xach> also, better to use defpackage. your file won't compile as is.
[22:37:58] <parjanya> ah, that was just me trying a quick minimal example
[22:38:37] *** Joins: attila_lendvai (~alendvai@2a02:ab88:3710:7c80:9130:5abf:96b3:dc0c)
[22:39:20] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[22:40:50] <|3b|> equivalent defpackage forms is a few characters shorter anyway, if you are being quick :) (and no longer even if you use #: to avoid interning extra symbols)
[22:42:06] * |3b| doesn't think SXHASH makes any guarantees of uniqueness, if that is important for your IDs
[22:42:27] <parjanya> huahua, oh well, the problem was the cognitive burden of doing this right for once :-$
[22:46:15] *** Quits: Guest74 (~Guest74@modemcable110.164-177-173.mc.videotron.ca) (Quit: Connection closed)
[22:56:13] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[22:56:43] *** Quits: theBlackDragon (~dragon@fvwm/admin) (Ping timeout: 256 seconds)
[22:56:58] *** Joins: theBlackDragon (~dragon@fvwm/admin)
[23:02:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[23:06:29] *** Quits: parjanya (~esb@2804:14c:1ad:9351:eda3:e794:1704:f373) (Ping timeout: 250 seconds)
[23:07:23] *** Joins: Bike (~Bike@71.69.170.70)
[23:08:51] *** Quits: aeth (~aeth@user/aeth) (Ping timeout: 256 seconds)
[23:10:51] *** Joins: aeth (~aeth@user/aeth)
[23:19:06] *** Joins: masinter (~masinter@c-73-158-116-21.hsd1.ca.comcast.net)
[23:23:53] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[23:25:25] *** Joins: spm (~user@201.58.255.162.in-addr.arpa)
[23:30:35] *** Quits: Rue (~rue@2001-b011-1000-1cb7-da1d-fbf4-ac2a-f9f7.dynamic-ip6.hinet.net) (Quit: WeeChat 3.4)
[23:32:11] <theothornhill> I'm struggling with stumpwm installation on debian.  I'm getting a "does not know how to require sb-cltl2" message, which from a cursory glance at google means I need to set SBCL_HOME to /usr/lib/sbcl. Doesn't seem to work though. Anyone knows how to compile itfrom source and make it load on a fairly new debian?
[23:35:25] <spm> Hi all. Probably a very silly question about symbol creation and equality. I've created a hash-table and would like lookups to be able to use uninterned symbols (:foo) as the keys into hash-map.  I have a string value I'm trying to turn into the symbol.  I've tried to (make-symbol "FOO") and (intern "FOO") but no matter what I've tried I can't seem to get the symbol that ends up as the key to match with a directly used key on the
[23:35:25] <spm> lookup. If I iterate over the keys of the hash, I *can* retrieve the values.  I think the crux of my problem is that (eql (make-symbol "FOO") :FOO) => NIL.  I'm sure that makes perfect sense if you understand symbols properly, but it's clear I don't.
[23:36:15] <_death> :foo is a symbol that's interned in the "KEYWORD" package
[23:36:18] <Xach> spm: :FOO is not an uninterned symbol, it's a keyword symbol.
[23:36:34] <Xach> #:FOO is the syntax for apparently uninterned symbols
[23:36:58] <Xach> INTERN is one way to go from a string a symbol - you don't normally need to involve your own table.
[23:39:46] <Xach> MAKE-SYMBOL returns a new object every time. it won't be eq or eql to an existing key in a table.
[23:39:54] <spm> Thank you _death and Xach.  I think the light went on a bit here.  I'm still stuck in the thinking that I need to lookup my function from a set of functions, but that's not true.  I can simply NAME the functions what I was going to use as the lookup and then no-longer need a layer of indirection.  Thanks so much.
[23:40:19] * spm feels very silly now
[23:40:39] <Xach> glad to help. i have a lot of practice with symbols and packages so feel free to ask if you are confused about something.
[23:51:11] *** Quits: mrcom (~mrcom@99-73-215-70.lightspeed.irvnca.sbcglobal.net) (Read error: Connection reset by peer)
[23:52:59] *** Quits: aeth (~aeth@user/aeth) (Quit: Reconnecting)
[23:53:12] *** Joins: aeth (~aeth@user/aeth)
