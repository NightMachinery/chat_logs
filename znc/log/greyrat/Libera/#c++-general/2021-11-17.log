[00:01:53] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 250 seconds)
[00:05:08] <LordKalma> given that you can easily fit lua, python, or JS inside C++, there's really not much incentive to make a runtime compiler
[00:06:48] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Quit: Leaving)
[00:08:31] <Alipha> if we had reflection, compile-time eval would be cool. at least, if it could create types and such
[00:08:44] *** Quits: cm007magnum (~Rheanna@218.78.99.237) (Ping timeout: 256 seconds)
[00:09:29] *** Quits: paul424 (~tom@ip-31-0-125-11.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[00:12:06] <CppCon> Lua
[00:12:08] <CppCon> <3
[00:14:27] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[00:18:22] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:19:36] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:20:00] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[00:21:17] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:22:30] *** Joins: cm007magnum (~Rheanna@218.78.99.237)
[00:22:51] *** Quits: rackj (~rackj@c-73-140-240-136.hsd1.wa.comcast.net) (Quit: Client closed)
[00:24:04] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[00:25:06] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[00:25:36] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Client Quit)
[00:26:10] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[00:29:18] <rpav> Alipha: if we had reflection etc a lot would be cool >:)
[00:30:28] <Alipha> people shun macros... i wonder if reflection would get the same reaction because there's too much magical stuff going on behind the scenes. i'm surprised templates don't get more pushback because of that.
[00:30:42] <rpav> i've been trying to find a good corded/wired screwdriver; it's nearly impossible .. i feel like this is a metaphor for modern technology
[00:30:53] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:b80b:fa5c:c6a4:6438) (Quit: Konversation terminated!)
[00:31:14] <rpav> Alipha: well, #define macros are mostly only bad because they're kinda shit.. macros _can_ be good, though syntax hacking still ought to be a bit of a last resort
[00:31:40] <rpav> e.g. a compile-time API for creating types would be preferable to spitting out tokens
[00:32:19] <imMute> I knew someone who refused to learn templates because they were "too hard".  And that includes very simple ones with like a single type argument and a generic algorithm
[00:32:20] <rpav> lazy parameters would be nicer than many uses of macros for banging syntax into a statement
[00:32:42] <rpav> imMute: to be fair they look pretty complicated and ugly on the outset .. and even later
[00:33:30] <imMute> rpav: sure, but so does a foreign language until you start learning it...  this guy refused to even try to learn them  :/
[00:33:31] <rpav> the weird thing is, they're really easy to read/write when you understand a (surprisingly) few things
[00:34:14] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:34:16] <rpav> imMute: dunno .. depends on how day-to-day applicable it is i guess
[00:34:20] *** Joins: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438)
[00:34:37] <rpav> "user" c++ can avoid writing templates quite a bit
[00:34:54] <imMute> rpav: we used those "simple" templates quite a bit on that project.  his piece probably would have benefitted from using such templates
[00:35:24] <rpav> yeah .. i mean really i think being able to write even a few simple library things will really make a lot of your code nicer
[00:35:58] <InPhase> I find my C++ code improves when I hunt for opportunities to move as much as I can into generic components with templates.
[00:36:21] <rpav> i mostly wait until something annoys me, or looks incredibly annoying to write by hand
[00:36:23] <InPhase> It helps with abstracting my reasoning.
[00:36:32] <rpav> abstraction too early is premature optimization
[00:36:48] <rpav> just optimization of code-writing, not code-running
[00:37:02] <InPhase> It's really not.  Many times the generic version ends up producing simpler logic overall.
[00:37:04] <rpav> but, i mean, sometimes it's obvious
[00:37:11] <rpav> eh
[00:37:21] <rpav> after having dealt with a lot of overly-abstracted code ;P
[00:37:41] <InPhase> Probably "wrongly-abstracted".
[00:37:54] <rpav> it depends
[00:38:05] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:38:11] <rpav> abstraction is an optimization of design
[00:38:12] <InPhase> One should not add abstraction just because one can.  One should use it to break down pieces of a problem into its more generic subpieces.
[00:38:21] <rpav> kinda
[00:38:25] <rpav> i mean you don't always need generic bits
[00:38:41] <rpav> sometimes you write `struct vec2 { float x, y; };` and it's good enough, and then you expand on it later
[00:39:59] <InPhase> I find that typically introduces unneeded dependencies.
[00:40:05] <rpav> e.g. i started with exactly concrete vector types, then later made them generic .. and at the point where i had enough functionality i knew i needed the generic type to be <T,F> for some type T and some float-type F
[00:40:11] <rpav> which wouldn't have been obvious from the start
[00:40:26] <InPhase> By the time it comes to change it, you've introduced the float dependency across 20 files.
[00:40:37] <rpav> not at all
[00:41:05] <rpav> if you think that's the problem, you're definitely suffering from "let's make it all super generic way too early"
[00:41:32] *** Quits: cm007magnum (~Rheanna@218.78.99.237) (Remote host closed the connection)
[00:41:51] <rpav> solve the problem at hand, not the brain-imagined hypothetical down the road
[00:44:02] *** Joins: cm007magnum (~Rheanna@101.91.232.166)
[00:44:18] <InPhase> Generic programming done well is not making more complicated code to handle hypotheticals, it is about making simpler code layers that when combined produce more complicated behavior, rather than spaghettiing out the complex behavior.
[00:46:43] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:46:59] <InPhase> Like rather than make a set of command task types to assemble into an operation, make a general system to store command calls to construct an operation, and then the systems are decoupled.  Once you've tested the command system you never have to touch it again and your reasoning stays up at the higher level.
[00:48:10] <InPhase> The general command system is probably even less code by the time there are a bunch of command calls thrown in.
[00:48:58] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:d9d4:4870:4cd1:2479)
[00:48:58] <rpav> that's less about generic code in the type sense and more about just being composable and modular
[00:49:01] <rpav> and i mean, yeah .. do that
[00:50:12] <InPhase> This is the sort of thing I find templates pretty important for in what was being called user-level code.
[00:54:09] <rond_> Is it possible to inherit from A and "upgrade" a protected method to a public one?
[00:54:14] <rpav> yes
[00:54:24] <rpav> also the reverse
[00:54:38] <rond_> without redeclaring and using std::forward for each of the arguments?
[00:54:52] <rpav> `public: using ...` i think
[00:55:22] <InPhase> rond_: Generally you shouldn't though.
[00:56:13] <rond_> rpav works! My IDE was blind¬† to this solution :O
[00:56:33] <rpav> rond_: `using` of methods is a bit unobvious .. if you haven't, it's also a great way to "inherite" ctors
[00:56:46] <rpav> "inherit" fi i cna tpye
[00:56:47] <rond_> InPhase need to test internals of a class (protected methods).
[00:56:53] *** Quits: pulse (~pulse@user/pulse) (Quit: Join our community of creative supermutants at https://indiedevs.net/)
[00:56:54] <rond_> rpav I was aware about ctors
[00:56:59] <InPhase> rond_: Ah, well testing is a perfectly good reason.  Carry on.  :)
[00:57:15] <rond_> 1glad to hear
[00:57:16] <rpav> rond_: üëç
[00:57:16] <rond_> !
[00:58:46] <InPhase> rond_: Note that you can also declare friends in a class, giving access to private functions as well.
[01:00:24] <rond_> InPhase aware. I don't like spoiling a class with testing-specific code though
[01:01:08] <InPhase> Agreed.
[01:01:38] <InPhase> Some people are just very finicky about what counts as coverage.  :)
[01:06:33] <LordKalma> I'm with the school of though that if the external behaviour is correct then, by definion, the class is correct
[01:06:53] <LordKalma> If you have to test internals, you should have broken it down more
[01:07:10] <rpav> yeah and if you have complex "internal" behaviors that should be tested independently, they probably ought to be actually independent
[01:07:15] <rpav> exactly
[01:07:40] <rpav> though maybe not always doable
[01:07:48] *** Quits: DrMax_ (~DrMax@132.215.96.36) (Remote host closed the connection)
[01:07:55] <LordKalma> Of course nuance applies to every discussion
[01:08:01] <LordKalma> We're not talking black and white here
[01:08:22] <rpav> but probably if you have something like a complex tree structure, and some internal utility that like finds or rearranges nodes, you could probably split that off, then test it on some specific controlled thing
[01:08:25] <rpav> dunno
[01:08:40] <johnny> programming is hard
[01:08:43] <rpav> probably most things can be rearranged like that if you try, but it's also likely annoyingly more work
[01:08:58] <LordKalma> But, even relating to code coverage, if you have to crack the internals to attack all branches, probably you should have broken it down more... But oh well
[01:09:08] <rpav> is designing hardware soft? ü§î
[01:09:32] <johnny> i don't even wana pretend to on that one.. just programming hardware and thinking about that is enough for me
[01:09:46] <rpav> LordKalma: it seems that way .. i think "you can't call private functions" is probably a mistake
[01:09:56] <rpav> a test suite can always #define private public ;)
[01:09:58] <johnny> now i'm tryig to debug windows apis :(
[01:10:04] *** Joins: DrMax_ (~DrMax@132.215.96.36)
[01:10:10] <johnny> well debug usages of them anyways :(
[01:10:21] <rpav> (though that doesn't always work of course .. if you're trying to test for failure, but, in those cases you wouldn't)
[01:10:26] <LordKalma> Hahaha that's very much ub, and I know you don't believe in ub
[01:11:03] <rpav> UB is very much a thing, but i mean what can you do
[01:11:49] <rpav> still pretty sure i didn't find anyplace in the standard which actually allowed you to compile code in general
[01:12:01] <LordKalma> You can cover private functions... By testing the public api... If the public api doesn't trigger the private functions of the what are they doing there anyway? Haha. Again, black box testing is enough. If all the behaviour is correct, then the code is correct. Even if via mutually canceling bugs.
[01:12:26] <rpav> well it can be useful to test internal utility stuff, but i do think that probably this can be designed in a testable way
[01:12:59] <rpav> it would take some special consideration and forethought but .. testing does in general
[01:14:50] <johnny> hmm.. so with classes you can use friend if you absolutely must, but what do you do for unexported module functions?
[01:15:49] <LordKalma> C++ 20, fancy
[01:16:10] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Ping timeout: 268 seconds)
[01:16:42] <johnny> modules aren't properly implemented in my build system yet, so i'm not actually using them yet. it just occured to me
[01:16:52] *** Quits: Simplar__ (~Simplar@188.163.92.225) (Quit: Going offline, see ya! (www.adiirc.com))
[01:17:06] *** Quits: sysctl (~user@88.215.77.255) (Quit: Konversation terminated!)
[01:17:15] <johnny> plus i was hoping for some clarity re: `import std` like the papers mentioned earlier
[01:17:40] <rpav> friend is more generally useful than it used to be
[01:18:14] <rpav> inline free function (usually operator) declaration being a big one
[01:18:33] <rpav> definition rather
[01:18:47] <rpav> (i'm even assuming you can inline define a non-operator free function in a class, i'm not sure i've tried)
[01:19:02] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Quit: varioust)
[01:19:42] <johnny> hmm.. i didn't get any odr violation warning when i was trying to jsut define it in a class . i i think i used inline
[01:20:15] *** Quits: AmR (~AmREiSa@156.199.67.156) (Quit: Konversation terminated!)
[01:20:25] <johnny> i was iterating on my module exporter and playing around with float formatting and trimming trailing zeros. i didn't end up needing it so far
[01:20:57] <johnny> i didn't commit it of course
[01:21:26] <johnny> that's when i was talking about qvariant btw.. and going through to figure out how qlocale worked
[01:21:42] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[01:22:13] <johnny> i even created a build system definition for double-conversion, but i think fmt itself ended up being fine.. i should get back to that and finish it up tho...
[01:22:46] *** Quits: robod34 (Username@79.113.195.239) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:30:38] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[01:31:42] *** Quits: cm007magnum (~Rheanna@101.91.232.166) (Remote host closed the connection)
[01:34:11] *** Joins: cm007magnum (~Rheanna@218.78.105.67)
[01:34:45] *** Quits: proller (~p@2a02:6b8:b081:9::1:20) (Ping timeout: 265 seconds)
[01:37:41] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:38:09] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:38:16] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:38:16] *** ChanServ sets mode: +v npaperbot
[01:41:40] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[01:43:06] <Alipha> just put "private" classes and free functions you want to test into a `detail` namespace :-)
[01:45:11] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Quit: varioust)
[01:47:46] *** Joins: spaceangel_ (~spaceange@ip-62-245-71-160.net.upcbroadband.cz)
[01:51:32] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[01:51:57] *** Quits: spaceangel (~spaceange@ip-62-245-71-160.net.upcbroadband.cz) (Ping timeout: 250 seconds)
[01:56:12] *** Joins: pulse (~pulse@user/pulse)
[01:56:57] *** Joins: rdrg109 (~rdrg109@user/rdrg109)
[01:56:58] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Ping timeout: 256 seconds)
[02:00:06] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[02:05:20] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[02:07:12] *** Quits: jkaye (~jkaye@BELVEDERE-T.ear2.Denver1.Level3.net) (Quit: Leaving)
[02:09:24] *** Joins: spaceangel (~spaceange@ip-62-245-71-160.net.upcbroadband.cz)
[02:10:00] *** Quits: spaceangel_ (~spaceange@ip-62-245-71-160.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[02:11:12] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[02:11:15] *** Joins: spaceangel_ (~spaceange@ip-62-245-71-160.net.upcbroadband.cz)
[02:12:33] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[02:13:37] *** Quits: spaceangel (~spaceange@ip-62-245-71-160.net.upcbroadband.cz) (Ping timeout: 250 seconds)
[02:14:43] *** Quits: cm007magnum (~Rheanna@218.78.105.67) (Remote host closed the connection)
[02:15:17] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[02:17:18] *** Joins: cm007magnum (~Rheanna@218.78.105.67)
[02:17:47] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Remote host closed the connection)
[02:18:58] *** Quits: great_taste (~great_tas@190.32.235.20) (Quit: Client closed)
[02:21:38] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 265 seconds)
[02:21:38] *** Quits: cm007magnum (~Rheanna@218.78.105.67) (Remote host closed the connection)
[02:21:58] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[02:23:05] *** Joins: cm007magnum (~Rheanna@61.171.21.169)
[02:25:44] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[02:35:44] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[02:36:07] *** Quits: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438) (Quit: Client closed)
[02:39:47] *** Joins: spaceangel (~spaceange@ip-62-245-71-160.net.upcbroadband.cz)
[02:40:58] *** Quits: spaceangel_ (~spaceange@ip-62-245-71-160.net.upcbroadband.cz) (Ping timeout: 265 seconds)
[02:42:28] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Quit: varioust)
[02:42:57] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Read error: Connection timed out)
[02:46:12] *** Joins: pulse_ (~pulse@user/pulse)
[02:49:40] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[02:50:19] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[02:50:57] *** Quits: spaceangel (~spaceange@ip-62-245-71-160.net.upcbroadband.cz) (Remote host closed the connection)
[02:51:14] *** Joins: spaceangel (~spaceange@ip-62-245-71-160.net.upcbroadband.cz)
[02:52:57] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[02:57:20] *** Joins: TheGuestMovie (~TheGuestM@173.231.114.74)
[03:00:50] <TheGuestMovie> anyone here using linuxdeployqt? is it smart enough to only bundle the libraries your app needs, or does it just copy everything like CQtDeploy?
[03:01:02] <TheGuestMovie> dont wanna waste any more of my time trying out shitty tools
[03:01:11] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:09:26] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[03:09:39] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Read error: Connection timed out)
[03:11:29] *** Quits: cm007magnum (~Rheanna@61.171.21.169) (Remote host closed the connection)
[03:12:10] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[03:13:26] *** Joins: cm007magnum (~Rheanna@218.78.105.67)
[03:15:04] *** Quits: spaceangel (~spaceange@ip-62-245-71-160.net.upcbroadband.cz) (Remote host closed the connection)
[03:17:38] *** Joins: proller (~p@80.240.216.69)
[03:17:58] <TheGuestMovie> since no one answered, I ended up downloading linutdeployqt and it manages to be more retarded than CQtDeploy: it refuses to run on Ubuntu 20.04 because it's too new. It's a hard-coded check where the dev wants people to build on old systems so the resulting binary works on newer ones. There's no switch to override it, for when you're making a
[03:17:58] <TheGuestMovie> release for a single distro.
[03:18:30] <TheGuestMovie> I know I shouldn't bitch about FOSS, that I didn't pay for it, yada yada...but I just hate software developers so much
[03:20:15] *** Quits: magla (~gelignite@55d42279.access.ecotel.net) (Quit: Stay safe!)
[03:22:45] <Raziel> bitching about dumb decisions is perfectly fine, whether it's in something free and opensource or not
[03:22:55] <Raziel> if no one ever bitched, nothing would ever improve! :p
[03:24:23] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[03:24:43] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[03:30:41] *** Quits: m_tadeu (~quassel@bl5-182-86.dsl.telepac.pt) (Ping timeout: 246 seconds)
[03:31:18] <Raziel> Also, why do we not have any namespace metaprogramming? I am sad that the only good way to do what I apparently want to do is class inheritance >:. Either that or I can't think of a different design that would do this nicely without it.
[03:35:02] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[03:36:34] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[03:40:06] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[03:43:46] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[03:44:14] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Client Quit)
[03:45:31] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[03:46:04] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[03:46:22] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[03:50:03] *** Joins: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net)
[03:50:58] *** Quits: Guest42 (~Guest42@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[03:52:08] *** Joins: ferdna (~ferdna@user/ferdna)
[03:53:26] *** Joins: Colt (~Colt@user/colt)
[03:53:45] *** Joins: proller (~p@2a02:6b8:b081:8813::1:2f)
[03:54:13] <Raziel> perhaps I should shove in Boost.Hana and see if that makes things a bit more manageable. Because my aggregators are not very nice, and they'll get less nice the more things I add v:
[03:55:04] *** Quits: krishnac (~krishnac@c-67-188-37-26.hsd1.ca.comcast.net) (Remote host closed the connection)
[03:59:11] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Quit: So long and thanks for all the fish)
[04:01:28] *** Quits: cm007magnum (~Rheanna@218.78.105.67) (Remote host closed the connection)
[04:02:56] *** Joins: cm007magnum (~Rheanna@218.78.104.50)
[04:04:44] <Raziel> but that won't really help with things across namespaces instead of classes... so I guess the only valid way of doing things is to use classes, even though they'll never be instantiated and will only have static members/functions.
[04:04:59] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[04:05:11] <Raziel> which is dumb. :/
[04:07:37] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:15:23] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 250 seconds)
[04:16:39] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[04:17:29] *** Joins: ravan__ (~ravan@user/ravan)
[04:21:59] *** Quits: ravan_ (~ravan@user/ravan) (Ping timeout: 265 seconds)
[04:25:26] *** Quits: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de) (Remote host closed the connection)
[04:27:28] *** Joins: cahoots (~cahoots@cpe-68-173-58-87.nyc.res.rr.com)
[04:35:15] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[04:36:58] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[04:38:54] *** Quits: proller (~p@2a02:6b8:b081:8813::1:2f) (Ping timeout: 265 seconds)
[04:45:12] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[04:50:18] <johnny> TheGuestMovie, doing it in a container should be easy enough tho right?
[04:51:06] <TheGuestMovie> johnny: I'm already in a container, dont wanna build a separate container just for this step in my CI. I downloaded the 2018 version before this check was forced, now trying to get that to work.
[04:51:26] *** Joins: proller (~p@80.240.216.69)
[04:51:37] *** Quits: cm007magnum (~Rheanna@218.78.104.50) (Remote host closed the connection)
[04:53:56] *** Joins: cm007magnum (~Rheanna@218.78.67.149)
[04:55:55] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:10b0:1262:7a8a:4c1) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[05:09:21] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 265 seconds)
[05:09:43] *** Joins: proller (~p@2a02:6b8:b081:a416::1:3a)
[05:15:10] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[05:19:08] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 268 seconds)
[05:22:23] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[05:38:09] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:38:17] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:38:17] *** ChanServ sets mode: +v npaperbot
[05:41:37] *** Quits: cm007magnum (~Rheanna@218.78.67.149) (Remote host closed the connection)
[05:42:52] *** Joins: cm007magnum (~Rheanna@218.78.53.13)
[05:42:54] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[05:46:23] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 250 seconds)
[05:48:14] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[05:48:23] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Quit: varioust)
[05:50:09] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Read error: Connection reset by peer)
[05:50:22] *** Joins: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[05:51:27] *** Joins: bpalmer (~user@user/bpalmer)
[05:51:48] *** Quits: TheGuestMovie (~TheGuestM@173.231.114.74) (Quit: Client closed)
[06:13:57] *** Joins: rackj (~rackj@c-73-140-240-136.hsd1.wa.comcast.net)
[06:17:53] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[06:18:17] *** Joins: teepee (~teepee@openscad/teepee)
[06:21:44] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[06:21:52] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[06:31:31] *** Quits: cm007magnum (~Rheanna@218.78.53.13) (Remote host closed the connection)
[06:32:48] *** Joins: cm007magnum (~Rheanna@101.91.232.166)
[06:36:51] *** Quits: Brewster (~Brewster@user/brewster) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[06:38:03] *** Joins: jkaye (~jkaye@2601:281:8300:7530:c291:7247:e8a1:1137)
[06:55:57] *** Joins: Brewster (~Brewster@104.145.226.5)
[07:04:35] *** Quits: asen (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Quit: Leaving)
[07:15:06] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[07:16:08] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[07:19:45] *** Joins: Jupp_S (~quassel@ip-88-153-154-129.hsi04.unitymediagroup.de)
[07:21:35] *** Quits: cm007magnum (~Rheanna@101.91.232.166) (Remote host closed the connection)
[07:22:54] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[07:23:20] *** Joins: Colt (~Colt@user/colt)
[07:32:25] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 265 seconds)
[07:35:22] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:a4ef:f059:ad4c:b8a4)
[07:35:22] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:a4ef:f059:ad4c:b8a4) (Changing host)
[07:35:22] *** Joins: skapata (~Skapata@user/skapata)
[07:39:33] *** Joins: great_taste (~great_tas@190.32.235.20)
[07:39:58] *** Quits: pulse_ (~pulse@user/pulse) (Quit: Join a community of creative supermutants on https://indiedevs.net/)
[07:42:31] *** Quits: jkaye (~jkaye@2601:281:8300:7530:c291:7247:e8a1:1137) (Ping timeout: 250 seconds)
[07:43:03] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Ping timeout: 265 seconds)
[07:43:19] *** Joins: varioust_ (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[07:43:39] *** varioust_ is now known as varioust
[07:45:50] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Client Quit)
[07:46:30] *** Joins: cm007magnum (~Rheanna@218.78.67.149)
[07:51:20] *** Joins: TheGuestMovie (~TheGuestM@173.231.114.74)
[07:58:21] *** Quits: TheGuestMovie (~TheGuestM@173.231.114.74) (Quit: Client closed)
[07:58:58] *** Joins: ravan_ (~ravan@user/ravan)
[08:01:56] *** Quits: ravan__ (~ravan@user/ravan) (Ping timeout: 268 seconds)
[08:04:58] *** Joins: Guest80 (~Guest80@pd9ed7c7f.dip0.t-ipconnect.de)
[08:06:24] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[08:11:29] *** Quits: cm007magnum (~Rheanna@218.78.67.149) (Remote host closed the connection)
[08:13:46] *** Joins: cm007magnum (~Rheanna@61.171.21.169)
[08:17:26] *** Joins: Jaydayal (~Jaydayal@user/jaydayal)
[08:18:21] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Quit: varioust)
[08:19:10] *** Joins: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com)
[08:26:01] *** Parts: Jaydayal (~Jaydayal@user/jaydayal) (Leaving)
[08:27:51] *** ravan_ is now known as ravan
[08:28:16] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[08:31:56] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[08:35:11] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[08:41:32] *** Quits: varioust (~varioust@cpe-108-167-11-88.neb.res.rr.com) (Ping timeout: 265 seconds)
[08:43:34] *** Joins: chozorho (~chozorho@2601:146:300:c30::2f70)
[08:59:59] <yolo_> `void x(int& y) { y = y+1;}; int a = 10; x(a);` -- a newbie question: a is not a reference why I can call it that way(i.e. x(a)), which is identical to `int &a1 = a; x(a1);`, reference actually confuses me more than pointers
[09:01:29] *** Quits: cm007magnum (~Rheanna@61.171.21.169) (Remote host closed the connection)
[09:02:15] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[09:03:41] *** Joins: cm007magnum (~Rheanna@218.78.53.13)
[09:07:52] <RandomReader> yeah C++ references are a concept that's commonly confusing
[09:08:29] <RandomReader> a reference isn't a "thing", it's just that declaring a reference (so the "int& y" part) makes that name become an alias for an existing object, it attaches the name to it
[09:08:53] <RandomReader> afterward, that name acts just like any other name, such as "a" in that example
[09:09:27] <RandomReader> using the name "y" isn't special, it's not a thing to be manipulated or that acts differently, it's simply another name for "a"
[09:09:54] <RandomReader> and since the function is the one attaching the name, the caller doesn't need to do anything special
[09:11:37] <RandomReader> so reading a function declaration becomes a bit of a communication pattern for programmers: if a parameter is a reference, it means the function is going to use the same object you pass it (observe only if it's const, change if not); otherwise, it will get its own independent object (typically a copy)
[09:12:23] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[09:12:55] <RandomReader> a pointer on the other hand is an object like any other .. it's just that the value it contains is a location, an address of some other object
[09:13:19] <RandomReader> the * is syntactic noise, it could just as well be called ptr<int> or something
[09:14:19] <RandomReader> so that means a pointer is a thing to be worked on, can be copied or modified on its own, and you use an operator "*" to get to the other object that resides at the location value stored in the pointer object
[09:15:41] <RandomReader> so in C++, you use a reference just to attach a name to an existing object, which is common in function parameters because that lets you truly talk about the same object in different places
[09:15:58] <RandomReader> and you use a pointer when you need to know or store the *location* of an object
[09:16:24] <RandomReader> it's more common to have a pointer be a persistent variable, like a member in a class, because you can always change it to hold the location of a different object later
[09:16:58] <RandomReader> (can't do that with a reference, because a reference isn't a thing that exists)
[09:17:17] <RandomReader> (so you can't get to "it" to change it)
[09:23:32] *** Quits: Guest80 (~Guest80@pd9ed7c7f.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[09:30:45] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[09:31:05] <InPhase> Semantically, of course.  Practically member references are "things that exist" which need to be accounted for when book-keeping.
[09:31:13] <InPhase> << sizeof(S); struct S { int& a; int& b; int& c; int& d; };
[09:31:13] <geordi> 32
[09:32:01] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[09:36:07] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[09:36:44] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[09:38:10] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:38:17] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:38:17] *** ChanServ sets mode: +v npaperbot
[09:41:15] *** Joins: ambasta (~ambasta@89.46.62.147)
[09:41:24] *** Joins: frost (~frost@user/frost)
[09:42:05] <ambasta> How do I create a concept for a class C, which has a member M acceping an input_range of some type C::T?
[09:42:45] *** Quits: frost (~frost@user/frost) (Client Quit)
[09:43:05] <ambasta> concept C = requires(C c) { typename C::T, { c.M(input_range<typename C::T>{}) } -> same_as<void> };
[09:44:06] <ambasta> Issue is, here input_range is also a concept, so can't directly declare it this way
[09:44:41] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 245 seconds)
[09:44:44] *** Quits: great_taste (~great_tas@190.32.235.20) (Quit: Client closed)
[09:45:35] <RandomReader> M is a function template, so not something you'd be able to query directly
[09:45:56] <RandomReader> perhaps require C::T be an input_range, and then separately call c.M with a T object
[09:46:55] <ambasta> RandomReader, does it look like a valid design in the first place?
[09:48:00] <ambasta> Basically, writing a decoder, which can accept an arbitrary range of Decoder::type and returns decoded output
[09:49:25] *** Quits: rackj (~rackj@c-73-140-240-136.hsd1.wa.comcast.net) (Quit: Client closed)
[09:54:02] <RandomReader> that sounds fine
[09:54:41] <RandomReader> been a long day for me though so I'm not necessarily firing on all cylinders at the moment
[10:00:48] *** Joins: frost (~frost@user/frost)
[10:08:42] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Remote host closed the connection)
[10:09:19] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[10:11:10] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[10:19:27] *** Quits: Argorok (sid195487@hampstead.irccloud.com) (Ping timeout: 268 seconds)
[10:20:09] *** Joins: Argorok (sid195487@hampstead.irccloud.com)
[10:22:14] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[10:26:24] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[10:26:49] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[10:38:51] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[10:41:42] *** Quits: cm007magnum (~Rheanna@218.78.53.13) (Remote host closed the connection)
[10:42:39] *** Joins: cm007magnum (~Rheanna@61.171.21.169)
[10:53:55] *** Joins: Guest80 (~Guest80@pd9ed7c7f.dip0.t-ipconnect.de)
[11:02:58] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[11:03:01] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[11:07:34] <LordKalma> morning
[11:07:35] <LordKalma> !rq
[11:07:35] <nolyc> LordKalma: <PJBoy> Guest53, does anyone treat linux as a first class citizen?
[11:07:40] <LordKalma> hahahah
[11:08:45] *** Joins: meator (~meator@user/meator)
[11:17:48] *** Joins: JohnMS_WORK (~kvirc@185.73.229.242)
[11:21:09] *** Joins: PJBoy (~PJBoy@user/pjboy)
[11:21:42] *** Joins: radu242407 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[11:21:43] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[11:24:33] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:d9d4:4870:4cd1:2479) (Quit: Quit)
[11:26:07] *** Quits: z9z0b3t1c (z9z0b3t1c@gateway/vpn/protonvpn/z9z0b3t1c) (Ping timeout: 250 seconds)
[11:29:40] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:39d9:13a4:f605:2a6b)
[11:30:40] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[11:32:02] *** Quits: cm007magnum (~Rheanna@61.171.21.169) (Remote host closed the connection)
[11:40:05] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[11:41:47] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[11:43:48] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[11:44:00] *** Joins: EdFletcher (~PKD@user/edfletcher)
[11:44:37] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[11:46:31] *** Joins: Simplar (~quassel@188.163.92.225)
[11:46:34] *** Quits: Simplar (~quassel@188.163.92.225) (Client Quit)
[11:47:37] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[11:49:22] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[11:52:35] *** Joins: cm007magnum (~Rheanna@218.78.109.69)
[11:54:52] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 265 seconds)
[11:57:54] *** Joins: Simplar (~quassel@188.163.92.225)
[11:59:25] *** Joins: ashafq_ (~ashafq@103.60.175.13)
[12:00:03] <ashafq_> What does this mean from clang tidy? "warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead"
[12:00:32] <ashafq_> This is the line clang-tidy is complaining about: assert(a <= n && b <= n && "Index out of bounds");
[12:00:53] *** Joins: nojhan (uid443807@lymington.irccloud.com)
[12:01:11] <ashafq_> My intuition says the `const char *`
[12:04:22] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[12:05:51] <LordKalma> n && "Index out of bounds" would use decltype(n) and char* (not char[]) but "index..." is a char[]
[12:06:41] <LordKalma> a better way to include the message would probably be comma operator, as per the example i n cppref
[12:06:48] <LordKalma> assert(("There are five lights", 2 + 2 == 5));
[12:08:00] <LordKalma> either way, you can use these: https://clang.llvm.org/extra/clang-tidy/#suppressing-undesired-diagnostics
[12:11:50] <ashafq_> LordKalma: Thanks a lot!
[12:12:09] <ashafq_> LordKalma: I should use the comma operator :)
[12:12:13] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:16:00] <LordKalma> honestly, it's assert that should have had a second argument to begin with
[12:16:03] <LordKalma> but what you gonna do
[12:19:08] *** Joins: TheSchaf (~TheSchaf@pd95f12cf.dip0.t-ipconnect.de)
[12:21:35] *** Quits: cm007magnum (~Rheanna@218.78.109.69) (Remote host closed the connection)
[12:22:35] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Quit: Leaving)
[12:23:25] <ashafq_> LordKalma: I have been looking for a good resource for learning like basics of graph theory.
[12:23:41] *** Joins: cm007magnum (~Rheanna@218.78.105.67)
[12:23:59] <ashafq_> Like I just learned to implement DFS and BFS yesterday.
[12:24:26] <ashafq_> Any pointers will be really helpful
[12:24:56] <LordKalma> irc etiquette: ask your questions to everybody :) I know nothing about those subjects
[12:25:00] <LordKalma> I'm not even a programmer
[12:27:27] <ambasta> ashafq_, try reading through BGL
[12:27:40] <ashafq_> ambasta: BGL?
[12:27:46] <ambasta> Boost graph library
[12:27:57] <ashafq_> ambasta: Oh I see
[12:28:19] <ashafq_> I was reading about graphviz file parsing with Boost
[12:28:20] <very_sneaky> LordKalma: you're more a programmer than most programmers i know :P
[12:28:42] <ashafq_> LordKalma: If you're not a programmer then I don't know what I am doing
[12:31:46] <very_sneaky> ashafq_: if you're interested in algorithms generally, i enjoyed "introduction to the design and analysis of algorithms", 3rd ed, Anany Levitin (2017)
[12:32:36] <ashafq_> That seems nice
[12:33:17] *** Quits: artok (~azo@mobile-access-bcee73-206.dhcp.inet.fi) (Ping timeout: 250 seconds)
[12:33:27] <ambasta> very_sneaky, how's that compared to CLRS?
[12:35:04] <very_sneaky> ambasta: I haven't read it. A quick look over it indicates to me that there's a large amount of overlap
[12:36:00] <very_sneaky> my recommendation was from a uni course that I did - I read the book instead of the course notes, found it was presented in a way that made it easy to understand
[12:36:21] <ashafq_> ambasta: CLRS is definitely hard to read.
[12:37:08] *** Joins: robod34 (Username@79.113.195.239)
[12:37:44] <ashafq_> ambasta: I have been struggling with CLRS
[12:38:21] <ambasta> very_sneaky, thanks will try.. we followed CLRS instead and what I recommend to most freshers who join us, but if "Introduction to design and.." is simpler, might switch recommendations
[12:40:18] <very_sneaky> ambasta: give it a read for yourself and see what you think
[12:40:27] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:e576:4804:a44a:8e32)
[12:43:54] <ashafq_> Another question: are there tools to draw dot files in the terminal as ascii art?
[12:44:04] <ashafq_> or visualize a graph?
[12:45:10] *** Quits: Colt (~Colt@user/colt) (Quit: Leaving)
[12:45:28] *** Joins: Colt (~Colt@user/colt)
[12:53:03] <ville> i am sure you can get there if you pipe a couple tools together and don't have too high expectations
[12:54:29] <ville> a perl progam alled graph-easy could be an option
[12:56:00] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Ping timeout: 256 seconds)
[12:56:27] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[12:56:44] <ville> or you could graphviz to an image file and then convert that to ascii
[12:57:44] <mort> converting an image with small text to ascii sounds problematic unless the ascii converter is extremely clever
[12:58:59] <ville> https://github.com/TheZoraiz/ascii-image-converter is such a tool that can deal with various image formats
[13:01:04] <ville> but suppose you tried to use -Tascii with dot?
[13:01:46] <ville> err sorry -Tplain
[13:01:58] <ashafq_> ville: I did nott know that existed! Let me try that now.
[13:02:04] <ville> or plain-text
[13:02:08] <ville> or plain-ext
[13:02:09] <mort> but how does it deal with the text in the image
[13:02:33] <mort> because the text is a pretty important part of graphviz images
[13:02:41] <ville> "it"?
[13:02:47] <mort> ascii-image-converter
[13:03:00] <ashafq_> ville: that just dumps some text
[13:08:32] <mort> https://dot-to-ascii.ggerganov.com/ this looks interesting
[13:09:13] <mort> wait, shit
[13:09:32] <mort> I thought it was some cool C program or python program or something, with a web UI around it
[13:09:54] <mort> but... it looks like it's written in PHP with the intention that you use his API over HTTP
[13:10:23] <mort> wait
[13:10:43] <mort> dot-to-ascii seems like it just shells out to Graph-Easy: https://github.com/ironcamel/Graph-Easy
[13:11:18] *** Quits: ashafq_ (~ashafq@103.60.175.13) (Remote host closed the connection)
[13:11:42] *** Quits: cm007magnum (~Rheanna@218.78.105.67) (Remote host closed the connection)
[13:14:02] *** Joins: cm007magnum (~Rheanna@218.78.67.149)
[13:18:36] *** Joins: ashafq_ (~ashafq@103.60.175.13)
[13:21:30] *** Joins: DSpider (DSpider@2a02:2f00:1ff:ffff::646c:686e)
[13:21:40] *** Quits: DSpider (DSpider@2a02:2f00:1ff:ffff::646c:686e) (Remote host closed the connection)
[13:28:56] *** Joins: gggp (~gggp@li2010-23.members.linode.com)
[13:28:56] *** Quits: gggp (~gggp@li2010-23.members.linode.com) (Client Quit)
[13:30:36] *** Quits: ashafq_ (~ashafq@103.60.175.13) (Remote host closed the connection)
[13:32:24] *** Joins: artok (~azo@mobile-access-bcee73-206.dhcp.inet.fi)
[13:34:33] *** Joins: ashafq_ (~ashafq@103.60.175.13)
[13:34:53] *** Quits: ashafq_ (~ashafq@103.60.175.13) (Client Quit)
[13:38:10] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:38:18] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:38:18] *** ChanServ sets mode: +v npaperbot
[13:39:56] *** Joins: paul424 (~tom@ip-37-248-153-215.multi.internet.cyfrowypolsat.pl)
[13:47:27] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Read error: Connection reset by peer)
[13:47:47] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[13:48:42] *** Quits: znemo (sid500529@uxbridge.irccloud.com) (Ping timeout: 256 seconds)
[13:48:42] *** Quits: ullbeking (sid5364@user/ullbeking) (Ping timeout: 256 seconds)
[13:48:42] *** Quits: bjs (sid190364@user/bjs) (Ping timeout: 256 seconds)
[13:49:38] *** Joins: bjs (sid190364@user/bjs)
[13:49:39] *** Joins: znemo (sid500529@uxbridge.irccloud.com)
[13:49:49] *** Joins: ullbeking (sid5364@user/ullbeking)
[13:52:05] *** Joins: AmR (~AmREiSa@156.199.67.156)
[13:56:29] *** Joins: spaceangel (~spaceange@ip-62-245-71-160.net.upcbroadband.cz)
[14:01:50] *** Quits: cm007magnum (~Rheanna@218.78.67.149) (Remote host closed the connection)
[14:01:55] *** Joins: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438)
[14:02:04] *** Quits: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438) (Client Quit)
[14:02:12] *** Joins: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438)
[14:09:04] *** Quits: ambasta (~ambasta@89.46.62.147) (Remote host closed the connection)
[14:11:22] *** Quits: Simplar (~quassel@188.163.92.225) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[14:22:17] *** Quits: proller (~p@2a02:6b8:b081:a416::1:3a) (Ping timeout: 265 seconds)
[14:35:06] *** Joins: cart_man (~rynot@host-78-144-121-1.as13285.net)
[14:42:52] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:46:12] <rond_> I have a class A. I want to create a named tuple inside A for the sake of readability (to return this named tuple instead of just a tuple or std::pair). However, if I define a struct inside A, then I do not have access to A's fields. IS there a clear way to achieve this without passing the reference to the object?
[14:52:45] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:e576:4804:a44a:8e32) (Quit: Quit)
[14:56:20] *** Quits: lhtseng (sid15322@helmsley.irccloud.com) (Ping timeout: 268 seconds)
[14:56:20] *** Quits: buhman (sid411355@user/buhman) (Ping timeout: 268 seconds)
[14:57:43] *** Quits: paul424 (~tom@ip-37-248-153-215.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[14:58:03] *** Joins: buhman (sid411355@user/buhman)
[14:58:24] *** Joins: lhtseng (sid15322@helmsley.irccloud.com)
[15:00:53] *** Joins: cm007magnum (~Rheanna@218.78.105.67)
[15:01:32] *** Joins: nafen (~nafen@gateway/tor-sasl/nafen)
[15:06:54] *** Quits: NiKaN (sid385034@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[15:08:03] *** Quits: leonardus (sid358597@tinside.irccloud.com) (Ping timeout: 268 seconds)
[15:09:13] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[15:09:22] *** Joins: leonardus (sid358597@tinside.irccloud.com)
[15:09:22] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:2c29:7076:9399:3f2e)
[15:09:49] *** Joins: NiKaN (sid385034@helmsley.irccloud.com)
[15:10:36] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[15:13:02] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:e14a:d90e:46d2:87c4) (Ping timeout: 265 seconds)
[15:16:10] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[15:23:47] *** Joins: pulse (~pulse@user/pulse)
[15:35:54] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[15:41:28] *** Quits: cm007magnum (~Rheanna@218.78.105.67) (Remote host closed the connection)
[15:43:37] *** Joins: cm007magnum (~Rheanna@218.78.109.69)
[15:44:23] *** Quits: meator (~meator@user/meator) (Ping timeout: 250 seconds)
[15:44:39] <mort> rond_: if an objects wants to access the members of another object, it's gonna need a reference to the other object
[15:45:29] *** Joins: magla (~gelignite@55d4d6da.access.ecotel.net)
[15:46:15] *** Joins: Ivii (~Ivyy@2001:a61:13ad:1c01:a7c8:db20:a5d0:f061)
[15:49:49] <robod34> hello people
[15:50:01] <robod34>  I am getting another weird error...
[15:50:11] <robod34> I am trying to use WIC [ windows imaging component ], i included wincodec.h in my .cpp
[15:50:19] <robod34> but when i compile, i get ¬´unable to resolve symbol¬ª IID_IWICBitmapSource
[15:54:21] *** Quits: emerent (~quassel@p200300cd574309a5ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[16:01:39] *** Joins: proller (~p@2a02:6b8:0:408:eef4:bbff:fe62:69c8)
[16:10:08] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[16:10:22] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[16:12:39] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[16:12:44] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[16:12:59] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 250 seconds)
[16:13:12] *** Quits: X-Scale (~ARM@46.50.0.92) (Ping timeout: 256 seconds)
[16:18:02] *** Joins: X-Scale (~ARM@83.223.235.65)
[16:18:11] *** Quits: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 250 seconds)
[16:18:35] *** Joins: Simplar (~Simplar@188.163.92.225)
[16:19:07] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[16:29:16] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:30:04] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[16:30:19] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 250 seconds)
[16:31:12] *** Joins: jehelset (~jeh@ti0005q162-7332.bb.online.no)
[16:31:29] *** Quits: cm007magnum (~Rheanna@218.78.109.69) (Remote host closed the connection)
[16:34:28] *** Joins: cm007magnum (~Rheanna@101.89.150.168)
[16:35:33] *** Joins: frost (~frost@user/frost)
[16:44:46] <Haohmaru> robod34 check your link libraries then
[16:45:20] <robod34> thanks a lot
[16:54:35] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 250 seconds)
[16:55:48] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[17:02:48] *** Joins: meator (~meator@user/meator)
[17:07:03] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[17:08:44] <thad_the_man> I can't find the let me duckduckgo that for you site. Anyone know it's URL?
[17:09:19] <mort> https://lmddgtfy.net/
[17:09:23] <mort> brought to you by google
[17:11:13] <Haohmaru> blasphemy
[17:14:19] *** Joins: mtor (~meator@user/meator)
[17:15:00] *** Quits: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438) (Quit: Client closed)
[17:15:23] *** Quits: meator (~meator@user/meator) (Ping timeout: 264 seconds)
[17:18:37] <yolo_> RandomReader: Thanks!!
[17:20:44] *** Quits: mtor (~meator@user/meator) (Quit: Leaving)
[17:20:54] *** Joins: meator (~meator@user/meator)
[17:21:40] *** Quits: cm007magnum (~Rheanna@101.89.150.168) (Remote host closed the connection)
[17:23:23] *** Joins: cm007magnum (~Rheanna@218.78.109.69)
[17:23:33] <ville> robod34: did you read nolyc's message. it explicitly states includes do not solve the problem
[17:23:57] <ville> oh holy shit you're double posting. fuck off
[17:25:30] <robod34> ville; someone said on #c++ i ask the question here; apologies
[17:25:41] <robod34> it was not intentional
[17:25:58] <ville> then it's fine
[17:26:00] <robod34> so, i find your take too dramatic
[17:26:56] <robod34> the suggestion from Haohmaru helped; i fixed the error
[17:32:39] <vdamewood> Can I rant about how MSDN doesn't list the .lib and .dll files needed by WinAPI and related functions and classes?
[17:33:03] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:35:15] <Hello71> it does. sometimes. mostly for older functions
[17:37:01] <mort> I could have a similar rant about how man pages don't list what so you have to link with or what headers you have to include
[17:37:03] <mort> docs suck
[17:38:11] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:38:18] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:38:18] *** ChanServ sets mode: +v npaperbot
[17:38:36] <vdamewood> mort: It really sucks when the man page doesn't note that you need libm for math.h functions, but they seem to work just fine without libm in *some* cases, and it turns out you were using compile-time values so the compiler was just substituting the function call with an immediate value.
[17:38:47] <vdamewood> (If that seems very specific, it is.)
[17:39:34] <vdamewood> Oh, this programmer wants to use sqrt(2)? Let's just give them 1.414... and so on instead.
[17:40:07] <vdamewood> The programmer wants sqrt(n) now? LINKER ERROR!!!
[17:40:18] *** Joins: jkaye (~jkaye@2601:281:8300:7530:3845:93d:d6fd:67fb)
[17:47:42] *** Quits: AmR (~AmREiSa@156.199.67.156) (Ping timeout: 265 seconds)
[17:47:43] *** Joins: JohnMS_AWAY (~kvirc@185.73.229.242)
[17:50:03] *** Quits: JohnMS_WORK (~kvirc@185.73.229.242) (Ping timeout: 250 seconds)
[17:53:17] <rpav> isn't that more "use std::sqrt"
[17:53:46] *** Joins: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438)
[17:55:46] *** Quits: meator (~meator@user/meator) (Ping timeout: 256 seconds)
[17:56:33] *** Quits: ville (~ville@178-75-128-81.bb.dnainternet.fi) (Ping timeout: 250 seconds)
[17:58:16] *** Joins: ville (~ville@178-75-128-81.bb.dnainternet.fi)
[18:03:33] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[18:03:42] *** Quits: X-Scale (~ARM@83.223.235.65) (Ping timeout: 256 seconds)
[18:12:11] *** Quits: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438) (Quit: Client closed)
[18:12:11] *** Quits: cm007magnum (~Rheanna@218.78.109.69) (Remote host closed the connection)
[18:14:03] *** Joins: cm007magnum (~Rheanna@61.171.38.68)
[18:18:09] *** Joins: X-Scale (~ARM@83.223.235.65)
[18:28:08] <vdamewood> rpav: How so?
[18:28:35] <vdamewood> rpav: Also, now that I think of it, that never comes up with C++ frontends because they pass libm to the linker anyway.
[18:30:26] <malinus> vdamewood: same thing with atomic and such
[18:30:58] <malinus> I find it super confusing, now you don't need any lib, it's part of libc++. BUT NOW YOU DO!
[18:32:15] <rpav> vdamewood: like, are you guaranteed ::sqrt exists or just std::sqrt
[18:32:37] <rpav> i'm not actually sure
[18:32:52] <vdamewood> rpav: My rant was a C rant anyway.
[18:33:04] <vdamewood> Well, the libm example was, anyway.
[18:34:07] *** Joins: AmR (~AmREiSa@41.36.24.35)
[18:35:04] <rpav> not really topical then? :P libm is mostly a glibc thing anyway isn't it
[18:35:25] <rpav> like do you have to manually link libm in C++ to get std::sqrt? also not sure
[18:35:47] <rpav> (if so cmake has always taken care of it, though that's not really an excuse)
[18:36:40] <vdamewood> Actually, CMake doesn't take care of libm, but the g++ and clang++ frontends do.
[18:38:23] <vdamewood> g++ and clang++ will add the needed linker flags when frontending for ld to link against libc, libm, the appropriate C++ standard library, and an appropriate _start implementation to start things up run main().
[18:38:46] <vdamewood> s/up run/up and run/
[18:41:28] <yolo_> wish c++ has its full manpage
[18:41:38] <yolo_> cppman is good, not enough
[18:41:58] <yolo_> cppman std::vector::size showed nothing, for example
[18:42:01] <TinoDidriksen> There are downloadable versions of https://cppreference.com/
[18:42:36] <yolo_> wait, it does show something, weird
[18:43:30] <yolo_> export MANPAGER="sh -c 'col -bx | bat -l man -p'" -- this gives bat syntax for your manpage, really nice
[18:43:58] <yolo_> i used some TERMCAP hack in the past, now 'bat' is essential. the above MANPAGER does not work for cppman
[18:47:04] <rpav> vdamewood: ah well that would be proper behavior then
[18:48:24] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[18:49:25] <yolo_> i see, cppman gave more syntax highlight with cplusplus.com than cppreference.com, no wonder i got inconsitent output
[18:52:20] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[18:54:53] *** Quits: proller (~p@2a02:6b8:0:408:eef4:bbff:fe62:69c8) (Ping timeout: 265 seconds)
[18:59:37] *** Joins: spaceangel_ (~spaceange@ip-62-245-71-160.net.upcbroadband.cz)
[19:00:44] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[19:01:33] *** Quits: cm007magnum (~Rheanna@61.171.38.68) (Remote host closed the connection)
[19:02:04] *** Quits: spaceangel (~spaceange@ip-62-245-71-160.net.upcbroadband.cz) (Ping timeout: 256 seconds)
[19:02:38] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Ping timeout: 256 seconds)
[19:04:25] *** Joins: cm007magnum (~Rheanna@218.78.109.69)
[19:09:30] <mort> when ifstream::fail() returns true, is there a way to get the actual error?
[19:10:26] <mort> like how you'd use errno after stdio operations
[19:11:16] <TinoDidriksen> Yes, use errno
[19:11:19] *** Joins: proller (~p@2a02:6b8:b081:8018::1:4)
[19:11:33] *** Joins: xkuru (~xkuru@user/xkuru)
[19:11:45] <TinoDidriksen> Standard C++ streams are guaranteed to set errno as-if they called C I/O functions.
[19:13:11] *** Joins: nafen_ (~nafen@gateway/tor-sasl/nafen)
[19:14:07] *** Quits: nafen (~nafen@gateway/tor-sasl/nafen) (Remote host closed the connection)
[19:17:53] <mort> I see
[19:18:41] *** Quits: Guest80 (~Guest80@pd9ed7c7f.dip0.t-ipconnect.de) (Quit: Client closed)
[19:19:21] *** Joins: Guest80 (~Guest80@pd9ed7c7f.dip0.t-ipconnect.de)
[19:20:34] *** Quits: artok (~azo@mobile-access-bcee73-206.dhcp.inet.fi) (Quit: faa)
[19:22:56] *** Joins: artok (~azo@mobile-access-bcee73-206.dhcp.inet.fi)
[19:24:05] *** Joins: artok_ (~azo@mobile-access-bcee73-206.dhcp.inet.fi)
[19:26:47] *** Quits: proller (~p@2a02:6b8:b081:8018::1:4) (Ping timeout: 265 seconds)
[19:27:53] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[19:29:33] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:40a5:a81e:f992:bb69)
[19:29:33] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:40a5:a81e:f992:bb69) (Changing host)
[19:29:33] *** Joins: skapata (~Skapata@user/skapata)
[19:30:06] *** Joins: PJBoy (~PJBoy@user/pjboy)
[19:30:11] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Client Quit)
[19:30:17] *** Joins: JohnMS_WORK (~kvirc@213.134.183.29)
[19:31:34] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[19:33:33] *** Quits: JohnMS_AWAY (~kvirc@185.73.229.242) (Ping timeout: 265 seconds)
[19:34:31] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Client Quit)
[19:35:25] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[19:37:59] *** Joins: proller (~p@2a02:6b8:0:408:eef4:bbff:fe62:69c8)
[19:39:54] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Client Quit)
[19:40:50] <PJBoy> ngl this vs code + clangd workflow is pretty sparkly
[19:41:02] <PJBoy> getting warning while you're writing code
[19:41:04] <PJBoy> in real time
[19:41:09] <PJBoy> that's great
[19:41:16] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[19:43:16] *** Quits: cahoots (~cahoots@cpe-68-173-58-87.nyc.res.rr.com) (Quit: leaving)
[19:44:10] <Haohmaru> PJBoy "Warning: it smells like UB from somewhere"
[19:51:46] *** Quits: cm007magnum (~Rheanna@218.78.109.69) (Remote host closed the connection)
[19:52:44] *** Joins: cm007magnum (~Rheanna@218.78.53.13)
[19:57:17] <rpav> PJBoy: yeah if you weren't before, modern clangd-based dev stuff is a lot nicer, and (with the exception of stuff clang doesn't understand?) entirely accurate
[19:57:47] <rpav> occasionally something will crash clang(d) or it won't have some c++20 thing ubt
[19:59:34] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:00:40] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Quit: varioust)
[20:01:41] *** Joins: peepsalot (~peepsalot@openscad/peepsalot)
[20:01:42] <mort> why can't the posix_spawn man page just document which arguments can and can't be null
[20:03:31] *** Quits: peeps[zen] (~peepsalot@openscad/peepsalot) (Ping timeout: 265 seconds)
[20:04:20] <cq-work> Herm... if a database is updated from an external source, aside from your normal pub/sub, what are common methods on keeping the client up to date with that change?
[20:05:57] *** Quits: artok_ (~azo@mobile-access-bcee73-206.dhcp.inet.fi) (Quit: leaving)
[20:11:04] *** Joins: paul424 (~tom@ip-37-248-153-177.multi.internet.cyfrowypolsat.pl)
[20:12:01] *** Quits: Simplar (~Simplar@188.163.92.225) (Quit: Going offline, see ya! (www.adiirc.com))
[20:16:01] <artok> cq-work: depends on database. on some cases you can have trigger that writes timestamps to each table, then you can poll that timestamp table and if it matches one in application memory, do nothing, and if not, request new data
[20:16:31] *** Quits: JohnMS_WORK (~kvirc@213.134.183.29) (Ping timeout: 250 seconds)
[20:18:21] *** Joins: The_Jag (~The_Jag@host-87-9-29-108.retail.telecomitalia.it)
[20:26:22] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:32:55] *** Joins: madan (~madan@192.52.38.231)
[20:39:06] *** Quits: kapil (~kapil@o-k.website) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:39:35] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[20:39:38] *** Joins: kapil (~kapil@o-k.website)
[20:41:26] *** Quits: cm007magnum (~Rheanna@218.78.53.13) (Remote host closed the connection)
[20:44:29] *** Joins: cm007magnum (~Rheanna@61.171.38.68)
[20:46:26] *** Joins: pulse (~pulse@user/pulse)
[20:49:51] *** Quits: madan (~madan@192.52.38.231) (Quit: Client closed)
[20:50:07] *** Joins: adeliktas (~adeliktas@200116b822ca030058f9170d07ad9b82.dip.versatel-1u1.de)
[20:55:27] *** Quits: kapil (~kapil@o-k.website) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[20:55:44] <rpav> it all comes down to poll or block doesn't it
[20:56:00] *** Joins: kapil (~kapil@o-k.website)
[20:56:09] <bpalmer> Another approach is something like postgres's non-standard NOTIFY channel; functionality
[20:56:34] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:58:31] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[20:58:39] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:59:34] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 268 seconds)
[21:00:32] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Quit: varioust)
[21:05:28] *** Quits: cart_man (~rynot@host-78-144-121-1.as13285.net) (Quit: Konversation terminated!)
[21:12:07] *** Joins: great_taste (~great_tas@190.32.235.20)
[21:13:31] *** Quits: jehelset (~jeh@ti0005q162-7332.bb.online.no) (Remote host closed the connection)
[21:21:50] *** Joins: jehelset (~jeh@ti0005q162-7332.bb.online.no)
[21:23:56] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[21:24:23] *** Joins: spaceangel (~spaceange@ip-62-245-71-160.net.upcbroadband.cz)
[21:24:33] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 250 seconds)
[21:26:11] *** Quits: spaceangel_ (~spaceange@ip-62-245-71-160.net.upcbroadband.cz) (Ping timeout: 264 seconds)
[21:27:23] *** Quits: jkaye (~jkaye@2601:281:8300:7530:3845:93d:d6fd:67fb) (Ping timeout: 264 seconds)
[21:28:12] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:e576:4804:a44a:8e32)
[21:30:16] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[21:31:29] *** Quits: cm007magnum (~Rheanna@61.171.38.68) (Remote host closed the connection)
[21:32:53] *** Joins: cm007magnum (~Rheanna@101.91.232.166)
[21:34:52] *** Quits: proller (~p@2a02:6b8:0:408:eef4:bbff:fe62:69c8) (Ping timeout: 265 seconds)
[21:38:11] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:38:18] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:38:18] *** ChanServ sets mode: +v npaperbot
[21:41:14] *** Joins: m_tadeu (~quassel@bl5-182-86.dsl.telepac.pt)
[21:42:00] *** Joins: meator (~meator@user/meator)
[21:43:38] *** Quits: adeliktas (~adeliktas@200116b822ca030058f9170d07ad9b82.dip.versatel-1u1.de) (Quit: Client closed)
[21:44:41] *** Joins: jkaye (~jkaye@2601:281:8300:7530:75fb:eacf:8ea0:5f8)
[21:54:42] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:58:19] *** Quits: great_taste (~great_tas@190.32.235.20) (Quit: Client closed)
[21:59:27] *** Joins: great_taste (~great_tas@190.32.235.20)
[22:04:10] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:39d9:13a4:f605:2a6b) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[22:05:53] *** Quits: Guest80 (~Guest80@pd9ed7c7f.dip0.t-ipconnect.de) (Quit: Client closed)
[22:06:36] *** Joins: Guest80 (~Guest80@pd9ed7c7f.dip0.t-ipconnect.de)
[22:08:48] *** Joins: pepperoni (~pepperoni@gateway/vpn/pia/pepperoni)
[22:09:31] <pepperoni> anyone know how to create this shared_ptr using a template parameter? ... https://coliru.stacked-crooked.com/a/9de6a4b68737c792
[22:13:24] <cbreak> pepperoni: is the error unclear?
[22:13:33] <cbreak> you can't call a shared_ptr
[22:13:39] <cbreak> it doesn't have operator()
[22:14:07] <cbreak> pepperoni: also, assigning to a value parameter makes no sense
[22:14:14] <cbreak> if you want to return the thread, return it
[22:14:36] <pepperoni> oh, wait, darn, I left out the overload. Let me fix that.
[22:14:55] <cbreak> you still can't call a shared pointer
[22:15:39] <pepperoni> Ok, I was thinking there was a correct way to call operator()() of ObjA.
[22:15:49] <cbreak> there is, if it had one
[22:15:55] <cbreak> it does not involve shared_ptr
[22:16:10] <pepperoni> ok, let me put that overload in then.
[22:17:34] <pepperoni> ugh, this will take a bit, brb.
[22:19:35] *** Quits: meator (~meator@user/meator) (Ping timeout: 250 seconds)
[22:21:26] *** Quits: cm007magnum (~Rheanna@101.91.232.166) (Remote host closed the connection)
[22:23:11] <pepperoni> I think this is more correct for what I'm after ... https://coliru.stacked-crooked.com/a/d31eebaee424fbff
[22:23:20] *** Joins: Guest17 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[22:24:14] *** Joins: cm007magnum (~Rheanna@218.78.105.67)
[22:24:24] <pepperoni> Or this ... https://coliru.stacked-crooked.com/a/bf95ddf045f392df
[22:33:31] *** Joins: TheGuestMovie (~TheGuestM@173.231.114.74)
[22:33:45] *** Joins: meator (~meator@user/meator)
[22:34:01] *** Joins: adeliktas (~adeliktas@200116b822ca030058f9170d07ad9b82.dip.versatel-1u1.de)
[22:38:08] *** Quits: meator (~meator@user/meator) (Remote host closed the connection)
[22:38:23] *** Joins: meator (~meator@user/meator)
[22:38:34] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:39:55] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:40:18] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:41:38] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:43:16] *** Quits: Guest80 (~Guest80@pd9ed7c7f.dip0.t-ipconnect.de) (Quit: Client closed)
[22:49:27] *** Joins: paule32 (~paule32@user/paule32)
[22:53:52] *** Quits: Raziel (~Raziel@user/raziel) (Read error: Connection reset by peer)
[22:54:57] *** Quits: cm007magnum (~Rheanna@218.78.105.67) (Remote host closed the connection)
[22:57:57] *** Joins: cm007magnum (~Rheanna@218.78.105.67)
[23:03:04] *** Joins: proller (~p@2a02:6b8:b081:7209::1:1e)
[23:03:17] *** Joins: cart_man (~rynot@host-78-144-121-1.as13285.net)
[23:11:26] *** Quits: cm007magnum (~Rheanna@218.78.105.67) (Remote host closed the connection)
[23:13:56] *** Joins: plastico (~plastico@neomutt/plastico)
[23:14:24] *** Joins: cm007magnum (~Rheanna@218.78.99.237)
[23:17:46] *** Quits: TheSchaf (~TheSchaf@pd95f12cf.dip0.t-ipconnect.de) ()
[23:20:52] *** Joins: kenanmarasli_ (~kenanmara@user/kenanmarasli)
[23:21:11] *** Joins: Raziel (~Raziel@user/raziel)
[23:21:27] *** Joins: evocatus (~evocatus@84.51.113.13)
[23:21:46] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksteri)
[23:24:08] *** Quits: paul424 (~tom@ip-37-248-153-177.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[23:24:35] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Ping timeout: 250 seconds)
[23:24:41] *** kenanmarasli_ is now known as kenanmarasli
[23:31:24] *** Joins: QuaternionsRock (~Quaternio@76.191.39.82)
[23:31:31] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 250 seconds)
[23:31:39] <great_taste> every time I try to do something with Conan everything goes wrong
[23:35:44] <rpav> barbaric
[23:36:22] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[23:37:35] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 250 seconds)
[23:37:44] <great_taste> it's one of those cases where you do what the documentation says and you don't get the expected results
[23:38:52] *** Joins: gareppa (~gareppa@user/gareppa)
[23:43:05] *** Quits: nafen_ (~nafen@gateway/tor-sasl/nafen) (Quit: Leaving)
[23:51:00] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[23:54:20] *** Quits: cart_man (~rynot@host-78-144-121-1.as13285.net) (Quit: Konversation terminated!)
[23:55:52] *** Joins: zoraj (~zoraj@209.126.81.159)
[23:57:58] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[23:59:38] *** Joins: badone (~badone@209.132.189.152)
[23:59:42] *** Quits: TheGuestMovie (~TheGuestM@173.231.114.74) (Quit: Client closed)
