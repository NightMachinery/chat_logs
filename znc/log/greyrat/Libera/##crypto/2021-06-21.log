[00:02:20] *** Joins: MrFantastik (~Thunderbi@2603-7080-ae03-948a-ef7e-e678-9163-65b2.res6.spectrum.com)
[00:07:19] *** Joins: decompyler (~decompyle@99-100-60-210.lightspeed.irvnca.sbcglobal.net)
[00:11:57] <MacGyver> riv: I'm not sure that's wise.
[00:12:36] <MacGyver> riv: I don't know Hash, hadn't heard of them before all this drama, but the discussions we had about this before heavily implied nobody likes dealing with them.
[00:14:09] <MacGyver> Either way, we still need to register as a community anyway so there's no rush.
[00:14:25] <riv> ok
[00:15:20] <wasamasa> yeah, just wait some more
[00:15:28] <Hash> ...
[00:15:30] <wasamasa> #crypto is already marked as placeholder channel
[00:15:40] <Hash> IRC is not my addiction, right?
[00:15:42] <Hash> It's yours.
[00:15:52] <Hash> Feel free to satisfy your needs however you feel.
[00:16:20] <Hash> lc   â€¡ | ChanServ (ChanServ@services.libera.chat): The channel #crypto has been dropped.
[00:16:28] <riv> uhh
[00:16:29] <Hash> Trust me. IRC is not my addiction. It is yours.
[00:16:29] <riv> dont drop it
[00:16:38] <Hash> Then don't fucking sit there and slander me.
[00:16:40] <Hash> ...
[00:16:48] <Hash> I'm a vile, crude, and brutal beast of a man.
[00:17:16] <riv> Hash, now we can't make a redirect
[00:17:41] <wasamasa> because nobody can become chanop?
[00:17:48] <Hash> You want to sit and gossip about the very people you need a favor from.
[00:18:00] <Hash> Your psychology is broken.
[00:18:06] <Hash> I'm hard to deal with becuase I'm forthcoming and honest.
[00:18:19] <Hash> Next time, don't do petty nonsense, yeah?
[00:18:21] <MacGyver> Hash: It wasn't my intention to slander you, but unfortunately you do seem to have somewhat of a reputation.
[00:18:36] <riv> https://bpa.st/BEZA  this is my PM with hash
[00:18:38] <Hash> Ok
[00:18:46] <Hash> Then whatever is the repuation, I shall live up to it.
[00:19:09] <Hash> Had I joined and you said, hey hash is a cool dude, he'll help us.
[00:19:21] <Hash> I would have lived up that image.
[00:19:24] <Hash> You did this. Not me.
[00:19:31] <riv> can someone ban this retard?
[00:19:51] <Hash> Right, I'm the retard because you sit and gossip about people like little girls. and are worreid about who owns channels.
[00:19:56] <Hash> Petty. But you know. I'm the retard.
[00:19:58] <Hash> *shrug*
[00:20:32] <antto> dafuq's going on here?
[00:20:36] <riv> MacGyver, youre an op!
[00:20:41] <riv> can you please do the honours
[00:20:44] <MacGyver> Me, too stupid to check for join-messages.
[00:20:47] <Hash> Kids being schooled in how to be an adult.
[00:20:56] <Hash> But they're kids so that's how they'll behave.
[00:21:03] <MacGyver> riv: That was uncalled for.
[00:21:08] <Hash> Even now, instead of realizing he we were kinda of cunty... 
[00:21:14] <Hash> They're like, nah. He's the retard.
[00:21:28] <riv> MacGyver: You literally caused this
[00:21:29] <Hash> Look. The nasty stuff that goes on in your mind, even about me, has nothing to do with me.
[00:21:33] <Hash> Right?
[00:21:36] <riv> MacGyver: it was going fine til you slandered him
[00:21:42] <MacGyver> riv: Yes, I did, and I'm *trying* to defuse it without kicking the person who didn't.
[00:21:55] <riv> MacGyver: I postde my PM he was mid process of helping set up a redirect before you decided to say tall aht
[00:22:06] <Hash> Well. At least he admits he was at fault.
[00:22:10] <Hash> I shall retract my reaction.
[00:22:14] <Hash> Carry on.
[00:22:33] <wasamasa> sure, react appropriately to registering all kinds of placeholder channels on a network you're not even invested in :D
[00:22:36] <MacGyver> riv: So if you could refrain from calling people retards, and thanks for taking the direct route?
[00:22:44] <riv> no
[00:23:36] <Hash> MacGyver: next time, when you hear rumors about someone, talk to the person directly and determine for yourself.
[00:23:42] <riv> ^
[00:24:13] <riv> Hash, ironically yuou proved all the rumors correct by being a complete asshole
[00:24:22] <Hash> I am, sir.
[00:24:31] <Hash> I make no secret of that. I am a vile, crude, and brutal man.
[00:24:43] <Hash> I am also a good natured, good hearted, and kind man.
[00:24:45] <Hash> \o/
[00:24:46] <yawkat> riv: can you at least keep it civil
[00:25:18] <Hash> A person comes to a channel upon your request to help you out... and first thing he sees is himself being slandered.
[00:25:25] <Hash> Process that psychological movement for me
[00:25:33] <Hash> Go on. Then see who the real asshole is.
[00:25:34] <Hash> *afk*
[00:26:19] <antto> <MacGyver> riv: I don't know Hash, hadn't heard of them before all this drama, but the discussions we had about this before heavily implied nobody likes dealing with them.
[00:26:27] <antto> is this the "problematic" message?
[00:26:46] <antto> coz i don't see anything else
[00:30:26] <Hash> That was a good dab. I'm very high. Here, you want to know my reputation? https://imgur.com/a/liLRZKA
[00:30:38] <Hash> That's a tiny sample of my reputation. Very very tiny sample.
[00:30:52] <Hash> Douchebags of IRC can talk whatever shit about me. I don't mind.
[00:31:04] <Hash> *afk again*
[00:31:53] <riv> Hash, pls stick around you are awesome, sorry for all the bullshit nonsense earlier
[00:36:24] <Hash> No apologies required or necessary. Thank you. You're alright.
[00:42:47] <Hash> Furthremove, I had #regex, #seo, #crypto, and lots of other channels which I secured during the move and all those channels were promptly transferred to their repsctive owners as soon as they joined. Verifiable in logs. Your assertion is categorically inaccurate because of your own negative mentality and assumptions, that this is why people 'hoarde' channels or whatever you think. Go ask their
[00:42:49] <Hash> respective owners and you'll see. Try to biuld a positive env. within the community and try to reduce negativity. The mind can only work to its full potential when it is secure in a positive env. That's where it thrives.
[00:42:51] <Hash> *afk*
[00:46:17] <bbear> hi here
[00:46:33] <bbear> I know we don't talk about cryptocurrencies, but here i'm talking about cryptocurrency protocol
[00:46:51] <bbear> I was looking for some sort of python library to derive public address from an extended public key.
[00:46:59] <bbear> for various crypto
[00:47:12] <Wulf> bbear: Hello. What is an "extended public key"?
[00:48:34] <bbear> it's basically a public key that is associated with your private key but derived from it.
[00:49:35] <Wulf> bbear: isn't that true for... all public keys?
[00:49:49] <wasamasa> yeah, it's a rather meaningless term
[00:49:53] <bbear> yes
[00:50:24] <bbear> basically the xpub can derive all the addresses of a bitcoin wallet, each address has money on it and that's it.
[00:50:34] <wasamasa> expect to study the source code of whatever it is you're doing this for
[00:50:37] <bbear> The derivation scheme is part of a protocol
[00:51:06] <bbear> yes indeed if you derive a wrong address, then oops
[00:51:19] <wasamasa> because for some reason everything except the most popular thing is light on the technical details for some reason
[00:51:34] <riv> #bitcoin is likely to know
[00:51:36] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[00:51:38] <riv> or #bitcoin-dev
[00:53:39] *** Quits: F00dMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 258 seconds)
[00:58:06] <bbear> thank you
[01:05:01] *** Joins: onelegend (onelegend@wireguard/tunneler/onelegend)
[01:07:27] *** Quits: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 258 seconds)
[01:08:01] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[01:09:02] *** Quits: kulak (~kulak@user/kulak) (Read error: Connection reset by peer)
[01:09:46] *** Joins: kulak (~kulak@user/kulak)
[01:10:48] *** Quits: SomeWeirdAnon (~shwn@2a02:8109:abf:ffb4:6906:756f:b2f4:2084) ()
[01:11:14] *** Quits: t1000X (~t1000X@cpe-174-102-106-83.columbus.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:15:58] <antto> Hash, maybe you need to relax
[01:17:32] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 265 seconds)
[01:18:32] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[01:21:43] <Hash> antto: maybe you should learn to let sleeping dogs sleep.
[01:22:49] <antto> i don't like dogs
[01:25:28] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 258 seconds)
[01:26:39] <antto> i mean.. <Hash> Douchebags of IRC can talk whatever shit about me. I don't mind.
[01:26:53] <riv> antto, i think we sorted everything out
[01:26:54] <Hash> Feel free to msg me.
[01:27:22] <antto> no, thanks ;]
[01:27:39] <Hash> No more drivel here from you, then. Thanks.
[01:28:00] <MacGyver> antto: Please just drop it, nothing can be gained from hashing out who said what in what context when.
[01:29:33] <antto> i already stopped, i did not finish my sentence above ^
[01:29:37] <wasamasa> hashing out you say
[01:29:51] <MacGyver> wasamasa: >.<
[01:29:58] * antto XORs a hash with a salt
[01:29:58] <MacGyver> It's a normal expression!
[01:30:16] <Hash> A properly Peppered and Salted Hash is important.
[01:30:21] <MacGyver> I'll deny any and all allegations of my subconsciousness messing with my phrasing.
[01:31:15] <Hash> I run psychedelicsdaily.com and xdmt.org and I teach yoga/meditation/breathwork etc. at the International Church of Cannabis and have a fairly large following. 
[01:31:19] <Hash> In short, I'm a fungi.
[01:31:23] <Hash> I'm a very fun gi.
[01:31:29] <Hash> Talk about fun stuff. You'll see.
[01:32:24] <Hash> https://www.youtube.com/watch?v=C0kmLd3R8_g Watch this video. Very slowly.
[01:32:25] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[01:32:42] <Hash> Currently working on launching psysocia.net but that was stupid I need a better name.
[01:32:54] <Hash> psysocial.net
[01:33:07] <Hash> Encrypted social network, where server is totally blind to any communication you post.
[01:33:17] <Hash> all is enrypted /derypted based on your key pair
[01:33:26] <Hash> Social network for psychedelic people
[01:33:37] <Hash> The only one I saw was PHPFox deployed on dmtsocial.net
[01:33:52] <Hash> But they are using ioncube to encrypt their codebase. 
[01:34:10] <Hash> I have a diff model. FOSS, and privte coding/suport for various functinality modules/addons
[01:34:12] <wasamasa> oh, that
[01:34:17] <wasamasa> I think I read about ioncube on habr
[01:34:24] <Hash> What do you make of it?
[01:34:26] <wasamasa> some guy shared how to break their obfuscation
[01:34:29] <Hash> Oh?
[01:34:32] <wasamasa> it's a cute trick
[01:34:43] <Hash> Hmm got a link for dude man homie brow, digty daw man dude 
[01:34:44] <wasamasa> I'd have to check again though
[01:34:44] <Hash> Sir.
[01:34:48] <Hash> Ok
[01:34:51] <wasamasa> it's a russian blog, lol
[01:34:54] <wasamasa> and they all use windows
[01:34:55] <Hash> Oh drn
[01:35:00] <Hash> yup
[01:35:09] <wasamasa> luckily, I do understand russian, why else would I read it)
[01:35:11] <antto> vindovs
[01:35:17] <Hash> I make diablo 2 mods and right now the biggest d2 modding world is russian modders
[01:35:41] <MacGyver> wasamasa: s/why/how/?
[01:35:52] <MacGyver> Oh wait I guess Google Translate has come far enough.
[01:35:58] <wasamasa> the blog post in question: https://habr.com/ru/company/ruvds/blog/506890/
[01:36:19] <wasamasa> nah, not with google translate
[01:36:41] <antto> i remember diablo2 in the 2000 or 1999, <mouse_clicking_intensifies.wav>
[01:36:41] <wasamasa> I read it slowly and occasionally look up funny words
[01:36:43] <MacGyver> Yeah not you, but I mean, *how* else would you read it if you didn't understand Russian.
[01:36:56] <wasamasa> I used to understand it a lot better
[01:37:01] <MacGyver> But Google Translate is actually viable for non-English languages nowadays.
[01:37:13] <MacGyver> Although it still amuses me we used to be able to do a Dutch -> Russian -> English translation of "friend" -> "drinking buddy".
[01:37:25] <antto> hahaha
[01:38:00] <wasamasa> I prefer deepl actually
[01:38:50] <Hash> https://gitlab.com/hashborgir/d2-ironman D2 Ironman gameplay mod.
[01:39:09] <Hash> https://gitlab.com/hashborgir/d2tweaks-hash C++ d2 dll library by me to add new features into D2
[01:39:12] <MacGyver> wasamasa: Last I checked deepl didn't do full-page translation by URL though?
[01:39:24] <wasamasa> no, it's rather useful for small snippets
[01:40:27] <Hash> https://gitlab.com/hashborgir/d2tools Diablo 2 modding tool for modders
[01:40:48] *** Quits: x88x88x (~x88x88x@188.214.106.69) (Ping timeout: 258 seconds)
[01:40:55] <Hash> https://i.imgur.com/8FE4iSZ.png
[01:41:05] <Hash> I coded the entire D2 engine for item display in php
[01:41:09] <Hash> Uniue item creator/browser
[01:41:19] <Hash> load any d2 mod in my tool and start hacking away /modding/
[01:41:27] <Hash> The most indepth d2 modding tool created to date.
[01:41:37] <Hash> If your'e interested.
[01:41:39] <riv> woah 
[01:41:46] <riv> thats cool
[01:42:11] <Hash> Also auto mod doc generator
[01:42:25] <Hash> load any d2 mod that has txt files, and my tool will generate html documentaiton for that mod in detail for any website
[01:42:31] <Hash> items, gems, monster,s levels, everything.
[01:42:33] <Hash> :)
[01:42:44] <Hash> You don't have to manually made a site for your mod.
[01:43:04] <Hash> I'll made a video one day
[01:43:06] <Hash> make*
[01:43:20] <Hash> https://i.imgur.com/hacIXkw.png d3 gems in d2, all of them.
[01:43:33] <int-e> wtf has any of this to do with cryptography
[01:43:42] <Hash> No clue. Just talking.
[01:43:50] <Hash> If you have crypto stuff to talk, talk it.
[01:44:23] <Hash> It's like, hey, we're crypto commnity people, lets get to know each other.
[01:44:23] <MacGyver> The encrypted social network sounded interesting; not sure if I fully understand the attacker model though.
[01:44:53] <antto> how will you know each other if it's all cryptic ;P~
[01:45:01] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 258 seconds)
[01:45:10] <antto> plaintext social network ftw
[01:45:17] <Hash> https://gitlab.com/hashborgir/social/-/blob/master/application/models/Encryption_model.php
[01:45:21] <Hash> Old encryption model.
[01:45:29] <Hash> I'm trying to figure out the issue
[01:45:31] <Hash> Where to store keys?
[01:45:42] <Hash> I mean, I can't store priv key on server for any user. that defeats the purpose.
[01:45:50] <Hash> So local storage?
[01:45:58] <Hash> \o/
[01:46:05] <wasamasa> nonono
[01:46:17] <danieldg> browser local storage is no more secure than storing it on the server
[01:46:22] <Hash> See
[01:46:25] <Hash> That's what I mean
[01:46:30] <Hash> Hence the issue. :(
[01:46:38] <Hash> <- sad panda
[01:47:55] <MacGyver> I'd think it's marginally better? Sure the server can steal your key when you run code doing so, but surely that's an improvement over the server having a database with the keys already present?
[01:48:00] <wasamasa> you'd at least protect them with a password-derived key
[01:48:04] <Hash> https://gitlab.com/hashborgir/social/-/blob/master/application/models/Message_model.php
[01:48:22] <Hash> As you can see, right now, I've not called the Encryption class into my messaing or posting on wall models yet
[01:48:31] <Hash> I can' figure out where to put the priv key.
[01:48:42] <Hash> pub goes on server, but priv key. No idea where to put it.
[01:49:17] <Hash> Soon as I figure this out, secure solution, I can run my other models through the encryption model.
[01:49:28] <Hash> Then everythign stored on server/db will be encrypted.
[01:49:36] <Hash> Unless you can think of another solution
[01:49:43] <Hash> Maybe my design is broken?
[01:51:11] <Hash> And the problem is, if they lose their priv key, their goes their entire account/history/everything.
[01:51:20] <Hash> So...
[01:51:30] <Hash> Then the issue is also, how to prevent people form wanting to trade drugs
[01:51:39] <Hash> I don't want to go to jail like silk road guy
[01:51:55] <Hash> I'm just trying to make a social network for psychedelic peple away from the big giants 
[01:52:06] <Hash> So anyone can use my software and start their own community
[01:52:09] <Hash> decentrilization
[01:52:21] <Hash> Not controlled by one entity that dicts what you can advertise
[01:52:23] <Hash> or talk about
[01:52:36] <Hash> And only the people you give your pub key to, can view you prfile or accoutn and send you messages
[01:52:40] *** Quits: Narrat (~omnius@p200300df5f10627006ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:52:42] <Hash> I dunno. Is that bad desing too
[01:52:46] *** Joins: akaWolf (~akaWolf@akawolf.org)
[01:52:55] <Hash> I have no idea. I'm just a person doing stuff by himself.
[01:53:08] <Hash> And alone you can only go so far
[01:55:03] <Hash> So on account sign up, your key pair is generated using your email and stord on server with email/pubkey which you will use to sign in.
[01:55:33] <onelegend> Hash: are you one of the freenode staff?
[01:55:36] <Hash> Sounds reasonable enough. Dunno where to securely store the key for user. Or just have users generate their key manually nd sign up using a pub key and email
[01:55:42] <ms7821> no, just a squatter
[01:55:44] <Hash> I was. I resigned.
[01:56:02] <onelegend> welcome to libera!
[01:56:07] <Hash> I asked them to terminated my contrat yesterday.
[01:56:11] <Hash> Thank you.
[01:56:15] <wasamasa> I've run into a few PHP things requiring you to upload a pub key
[01:56:21] <wasamasa> so it's not unthinkable
[01:57:18] <Hash> Your keys are your responsibility. You generate and keep them safe. Sign up using a pubkey. Add up to X number of pubkeys in your account as backups.
[01:57:32] <Hash> Maybe?
[01:58:09] <Hash> Look here's the thing.
[01:58:13] <Hash> You are the company you keep.
[01:58:30] <Hash> I was requested by multiple parties to join staff and help out.
[01:58:42] <Hash> Then I saw things and as an honest man of integrity I had to resign.
[01:58:53] <Hash> You are the company you keep.
[01:59:01] <Hash> I dont' want that company to rub off on me in any way at all.
[01:59:45] <Hash> I've nothing bad to say about anyone. I don't splash mud at others. But I just didn't like what I saw and I didn't want that to be part of my life.
[01:59:48] <Hash> *shrug*
[02:03:05] *** Joins: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[02:11:51] *** Quits: Guest62 (~Guest62@69-230-153-205.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 258 seconds)
[02:29:04] *** Quits: riv (~river@tilde.team/user/river) (Quit: Leaving)
[02:45:14] *** Joins: chronon (~chronon@user/chronon)
[02:50:39] *** Quits: wolfshappen_ (~waff@irc.furworks.de) (Ping timeout: 268 seconds)
[02:51:10] *** Joins: Guest62 (~Guest62@69-230-153-205.lightspeed.irvnca.sbcglobal.net)
[02:53:54] <MacGyver> And thus ends another day of exam grading
[02:54:15] <MacGyver> I wish my students understood the meaning of the words "explain" and "describe".
[02:56:10] <Hash> I'm doing my second bachelors right now in science, cybersecurity. First was in comp. sci
[02:57:00] <MacGyver> I teach a couple of courses in a security-specialization compsci bachelor's programme here.
[02:57:03] <Hash> MacGyver: you could maybe say scribe and describe.
[02:57:13] <Hash> Either scribe in detail, or DE sribe in brevity.
[02:57:45] <Hash> Oh cool. 
[02:58:09] <MacGyver> Yeah the misunderstanding is clearly common enough that the phrasing of this question needs work.
[02:58:17] <MacGyver> It's weird though, that wasn't the case in previous years.
[02:58:35] <Hash> People ... are a lot more on cultural linguistic auto pilots imho
[02:58:42] *** Parts: Zipheir (~wcm@98.4.178.27) ()
[02:58:49] <Hash> Than ever before.
[02:58:59] <MacGyver> Probably adding a simple "Describe *in detail*" would do the trick.
[02:59:05] <Hash> I think it's due to the consumption of culturally engineered crap 
[02:59:11] <MacGyver> Somehow most of them now interpreted "describe" as "name one".
[02:59:25] <Hash> Oh. They went way too brevityish
[02:59:27] <Hash> heh.
[03:00:11] <MacGyver> Also one of my students wants to perform a brutal force attack.
[03:00:16] <MacGyver> Good name for a metal band right there.
[03:00:29] <Hash> You like metal?
[03:00:51] <MacGyver> I don't particularly dislike it -- my taste in music is broad, I mostly just hate one or two things.
[03:01:01] <Hash> https://www.youtube.com/watch?v=CDS9gmdHtB8 The Algorithm - Brute Force
[03:01:24] <Hash> Boot is nice. Pointers. Trojans.
[03:01:42] <Hash> https://www.youtube.com/watch?v=uCBI6uJx_jY The Algorithm - Compiler Optimization Techniques
[03:02:00] <Hash> I like Suuperscaler and Sentinal Node algorithm
[03:02:11] <MacGyver> Is that... 8-bit metal?
[03:02:14] <Hash> No
[03:02:34] <Hash> Drums, guiar, keyboards, synths, etc.
[03:02:35] <MacGyver> I should probably not listen to this through crappy laptop speakers, hang on.
[03:02:44] <Hash> French comopser
[03:03:12] <MacGyver> Yeah 8-bit probably isn't exactly the right word for what I mean.
[03:03:44] <Hash> Electronic and Metal fusion. Like I've never heard before. And I am a nerd in both genres.
[03:03:50] <Hash> And all their subgrenres.
[03:04:18] <Hash> This ... man. 99.99% of any genre is garbage, right? Same cookie cutter monotnous nonsense. Copies of ever cheaper copies.
[03:04:29] <Hash> But this... every now and again you get stuff that is novel. This is it.
[03:07:34] <MacGyver> Boot -- I like, mostly. I do notice I find the sudden quarternote silences actually jarring though.
[03:08:43] <MacGyver> Okay this is something I might just put on tomorrow in its entirety, thanks :)
[03:08:54] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[03:14:42] <Hash> I love the abrupt tempo shifts, meter switches, unexpected rests (what you call silence)
[03:15:04] <Hash> Np! :)
[03:15:19] <MacGyver> I felt like "rest" didn't quite catch what I meant.
[03:15:48] <MacGyver> Because it has the opposite effect for me :P
[03:15:59] <Hash> https://en.wikipedia.org/wiki/Rest_(music)
[03:16:05] <Hash> Oh. I see what you mean. 
[03:16:07] <MacGyver> I'm aware, I play the piano myself.
[03:16:18] <MacGyver> Just, any instrument at any time might have a rest, right;
[03:16:35] <MacGyver> But here it's *all* of them at the same time creating quite a sudden... I dunno how to describe it.
[03:16:56] <MacGyver> "feeling"~~~
[03:17:04] <MacGyver> Whatever, you know what I meant :)
[03:18:24] <Hash> I'd rather listen to the barking of dogs, or the braying of donkeys, or the meowing of cats. There is life there. Life is moving there. You see? But music... all music is a dead acivity, a product of 'thought culture', reiterative mechanism of repetition, and thought-induced. How's this for a slice of deep fried gold? :)
[03:24:28] *** Joins: ericonr (~ericonr@voidlinux/docs/ericonr)
[03:28:56] *** Quits: Guest62 (~Guest62@69-230-153-205.lightspeed.irvnca.sbcglobal.net) (Quit: Connection closed)
[03:41:25] *** Joins: Wulf4 (~Wulf@user/wulf)
[03:44:32] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[03:44:32] *** Wulf4 is now known as Wulf
[03:59:56] *** Joins: nevivurn (~nevivurn@user/nevivurn)
[04:00:46] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[04:00:55] *** Joins: wolfshappen (~waff@irc.furworks.de)
[04:14:09] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[04:14:29] *** Joins: wolfshappen (~waff@irc.furworks.de)
[04:22:32] *** Parts: MrFantastik (~Thunderbi@2603-7080-ae03-948a-ef7e-e678-9163-65b2.res6.spectrum.com) ()
[04:22:48] *** Joins: MrFantastik (~Thunderbi@2603-7080-ae03-948a-ef7e-e678-9163-65b2.res6.spectrum.com)
[04:25:09] *** Quits: MrFantastik (~Thunderbi@2603-7080-ae03-948a-ef7e-e678-9163-65b2.res6.spectrum.com) (Quit: MrFantastik)
[04:25:30] *** Joins: MrFantastik (~Thunderbi@2603-7080-ae03-948a-ef7e-e678-9163-65b2.res6.spectrum.com)
[04:26:38] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 244 seconds)
[04:26:54] *** Joins: Lyn (~Lyn@user/law)
[04:31:06] *** Joins: mikail (~mikail@2a02:c7f:bc9c:3100:ae93:93fc:603f:ceaf)
[04:34:02] *** Quits: MrFantastik (~Thunderbi@2603-7080-ae03-948a-ef7e-e678-9163-65b2.res6.spectrum.com) (Quit: MrFantastik)
[04:34:38] *** Joins: MrFantastik (~Thunderbi@2603-7080-ae03-948a-ef7e-e678-9163-65b2.res6.spectrum.com)
[04:53:33] **[05:11:00] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:3573:4e54:4d99:437f) (Remote host closed the connection)
[05:15:25] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[05:16:51] *** Quits: F00dMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Read error: Connection reset by peer)
[05:18:58] *** Parts: mikail (~mikail@2a02:c7f:bc9c:3100:ae93:93fc:603f:ceaf) (Leaving)
[05:19:20] *** Quits: IrateNinja (~IrateNinj@user/irateninja) (Quit: Textual IRC Client: www.textualapp.com)
[05:38:55] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[05:39:28] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Remote host closed the connection)
[05:40:33] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[05:46:08] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 258 seconds)
[06:06:13] *** Joins: pete443 (~pete@user/pete443)
[06:06:50] *** Quits: pete443_ (~pete@user/pete443) (Ping timeout: 258 seconds)
[06:09:26] *** Quits: Lyn (~Lyn@user/law) (Ping timeout: 265 seconds)
[06:13:14] *** Joins: aquijoule__ (~richbridg@213-225-32-247.nat.highway.a1.net)
[06:15:36] *** Quits: aquijoule_ (~richbridg@213-225-10-42.nat.highway.a1.net) (Ping timeout: 252 seconds)
[06:17:39] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[06:33:59] *** Joins: RickSanchez (~RickSanch@2607:fb90:8934:9f13:6403:4075:2d0a:27d6)
[06:46:32] *** Quits: Disconsented (~quassel@107.170.227.20) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[07:03:57] *** Quits: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 258 seconds)
[07:07:11] *** Joins: Disconsented (~quassel@107.170.227.20)
[07:11:08] <onelegend> bro I hate AES
[07:15:04] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 258 seconds)
[07:15:25] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[07:27:52] <Alipha> O
[07:28:09] <Alipha> onelegend: use xchacha20-poly1305
[07:29:23] *** Quits: MrFantastik (~Thunderbi@2603-7080-ae03-948a-ef7e-e678-9163-65b2.res6.spectrum.com) (Quit: MrFantastik)
[07:31:05] *** Joins: MrFantastik (~Thunderbi@2603-7080-ae03-948a-ef7e-e678-9163-65b2.res6.spectrum.com)
[07:31:14] *** Quits: RickSanchez (~RickSanch@2607:fb90:8934:9f13:6403:4075:2d0a:27d6) (Remote host closed the connection)
[07:40:49] *** Joins: RickSanchez (~RickSanch@2607:fb90:8934:9f13:6403:4075:2d0a:27d6)
[07:41:01] *** Quits: RickSanchez (~RickSanch@2607:fb90:8934:9f13:6403:4075:2d0a:27d6) (Read error: Connection reset by peer)
[07:55:00] <shachaf> So what's with the thing where stream ciphers are great, but not really suitable for disk encryption?
[07:55:07] <shachaf> If I don't like block ciphers, what should I do?
[08:01:35] <rozbb> Looks like macOS, Windows, and Linux use AES-XTS https://en.wikipedia.org/wiki/Disk_encryption_theory
[08:05:36] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[08:06:49] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 258 seconds)
[08:06:50] *** Lord_of_Life_ is now known as Lord_of_Life
[08:08:25] *** Joins: x88x88x (~x88x88x@188.214.106.89)
[08:13:44] <shachaf> Yes, but that needs a block cipher.
[08:13:53] <shachaf> Which is way more complicated than a stream cipher.
[08:23:08] *** Quits: MrFantastik (~Thunderbi@2603-7080-ae03-948a-ef7e-e678-9163-65b2.res6.spectrum.com) (Quit: MrFantastik)
[08:23:29] *** Joins: MrFantastik (~Thunderbi@2603-7080-ae03-948a-ef7e-e678-9163-65b2.res6.spectrum.com)
[08:31:28] *** Joins: betelgeuse7 (~john2gb@94-225-47-8.access.telenet.be)
[08:32:15] *** Joins: lazzurs3 (~lazzurs@user/lazzurs)
[08:33:27] *** Joins: s8n0 (~s8n@user/s8n)
[08:33:56] *** Joins: reedrichards (~Thunderbi@98.1.50.67)
[08:34:27] *** Joins: Wulf4 (~Wulf@user/wulf)
[08:34:44] *** Joins: nevivurn` (~nevivurn@user/nevivurn)
[08:35:01] *** Joins: chronon_ (~chronon@user/chronon)
[08:36:55] *** Joins: RemiYuko (~licht@user/akechishiro)
[08:39:06] *** Joins: akaWolf1 (~akaWolf@akawolf.org)
[08:39:36] *** Quits: MrFantastik (~Thunderbi@2603-7080-ae03-948a-ef7e-e678-9163-65b2.res6.spectrum.com) (*.net *.split)
[08:39:36] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (*.net *.split)
[08:39:36] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (*.net *.split)
[08:39:36] *** Quits: nevivurn (~nevivurn@user/nevivurn) (*.net *.split)
[08:39:36] *** Quits: Wulf (~Wulf@user/wulf) (*.net *.split)
[08:39:36] *** Quits: akaWolf (~akaWolf@akawolf.org) (*.net *.split)
[08:39:36] *** Quits: chronon (~chronon@user/chronon) (*.net *.split)
[08:39:36] *** Quits: s8n (~s8n@user/s8n) (*.net *.split)
[08:39:36] *** Quits: EmmyNoether (~EmmyNoeth@oasys.ch0wn.org) (*.net *.split)
[08:39:36] *** Quits: lazzurs (~lazzurs@user/lazzurs) (*.net *.split)
[08:39:37] *** Quits: AkechiShiro (~licht@user/akechishiro) (*.net *.split)
[08:39:37] *** reedrichards is now known as MrFantastik
[08:39:37] *** Wulf4 is now known as Wulf
[08:39:37] *** s8n0 is now known as s8n
[08:39:37] *** lazzurs3 is now known as lazzurs
[08:40:18] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[08:40:25] *** Joins: EmmyNoether (~EmmyNoeth@oasys.ch0wn.org)
[08:43:39] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 265 seconds)
[08:45:16] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[08:56:54] *** Joins: warai_otoko (~warai_oto@185.156.174.147)
[08:58:50] <lizzie> I don't know what to do with a phrase like "if I don't like block ciphers."  Do you at least understand why a block cipher gives you something useful that a stream cipher does not, for disk encryption purposes?
[08:59:12] <lizzie> You might be interested in the top response to this stackexchange question: https://crypto.stackexchange.com/questions/712/converting-a-stream-cipher-into-a-block-cipher
[08:59:39] <lizzie> it links a paper which discusses how to construct a block cipher from a stream cipher and a hash.
[09:00:11] <lizzie> shachaf: If you have a stream cipher and a hash that you trust, but don't trust *existing* block ciphers, this might be your answer.  If you somehow fundamentally dislike the concept of a block cipher, then I dunno what to tell you.
[09:02:59] *** Quits: x88x88x (~x88x88x@188.214.106.89) (Ping timeout: 265 seconds)
[09:03:15] *** Quits: rozbb (~ksundar@pool-96-239-34-154.nycmny.fios.verizon.net) (Quit: Leaving)
[09:04:12] *** Joins: byteskep1ical (~amnesia@user/byteskeptical)
[09:07:20] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 265 seconds)
[09:09:33] *** Joins: kish` (~aqua@user/aqua)
[09:22:47] <shachaf> lizzie: I understand why it doesn't -- that's why I'm asking!
[09:23:15] <shachaf> Constructing a block cipher from a stream cipher isn't the worst. Maybe I'd rather construct both of them from a fixed permutation instead, or something.
[09:24:03] <shachaf> But it's more, the idea of a stream cipher is so simple. You just generate a pseudorandom stream and xor. And it's applicable in a lot of situations, so a place like this where it isn't applicable is kind of frustrating, because I'd like something this simple to work everywhere.
[09:25:34] <lizzie> well to me it would seem that the best way to make something simple and make it work everywhere is to use well-analyzed primitives that already have implementations on many platforms :P
[09:26:19] <shachaf> So, for example, the fact we can turn a stream cipher into a block cipher is a good start. It means we can start with a big random stream and use it for this. That's something.
[09:26:38] <shachaf> But maybe there's a way to use the "generate a big random stream" primitive more directly, rather than go through this primitive we don't really care about.
[09:28:12] <shachaf> "just stick to things that already exist" isn't a very satisfying answer. I'm not going to go implement disk encryption tomorrow based on this, I just want to explore the space a bit.
[09:29:24] <lizzie> well, I'm not going to tell you that you shouldn't do original crypto research, but you should be prepared for a long timespan between putting it out there for people to analyze, and expecting people to trust its security.
[09:29:52] <lizzie> Sticking to things that already exist is the *practical* safest answer for someone who builds something *now* and wants to make sure it isn't broken easily
[09:30:18] <shachaf> A while ago my impression is that people were all into weirdo block cipher modes like CBC.
[09:30:35] <shachaf> Now everyone uses CTR mode which is way nicer.
[09:30:37] <lizzie> If that's not your intention, then by all means, try things out...  I will say, whatever you end up building that is optimized for disk encryption, is going to have a lot of things in common with these "block ciphers" you seem to dislike
[09:30:51] *** Quits: decompyler (~decompyle@99-100-60-210.lightspeed.irvnca.sbcglobal.net) (Quit: Konversation terminated!)
[09:31:03] <lizzie> so I think asking yourself *why* you dislike block ciphers would be interesting, because if you have a specific answer, you might find existing block cipher designs that are more to your tastes
[09:31:23] <shachaf> Good! If you have a theorem of the form "anything you use for disk encryption must satisfy properties X and Y that are shared with block ciphers", that would be a great answer.
[09:31:48] *** Joins: DonutMan (~DonutMan@2a01:e34:ec57:fbd0:c179:4b00:8d60:e6b8)
[09:32:28] <shachaf> I don't even know offhand exactly what people do and don't want for disk encryption. The property that if you take two snapshots of the disk you can xor them together to get the differences seems pretty bad. Malleability seems pretty bad. Many disk encryption modes solve this partially but not completely.
[09:32:53] <lizzie> Yeah, basically, that.  One of the hardest things about good disk encryption security is that, ideally, you want it to be as resistant as possible to repeated examinations of the same drive revealing information about the usage patterns
[09:33:22] <shachaf> Well, no problem: Just add an IV, and it's instantly perfectly proof against those things.
[09:33:27] <lizzie> which is antithetical to the operating system's goal of minimizing i/o cost and not moving data around more than needed, as well as in most cases, an SSD's goal of not wearing out and dying
[09:33:32] <shachaf> The other constraint is that you don't want to add any extra storage.
[09:34:11] <lizzie> but with a stream cipher in particular, you have no security against that...  if you ever change anything, they can get the xor of your old data and your new data
[09:34:29] <lizzie> "they" meaning an attacker who has gotten snapshots of your drive at different times.
[09:34:42] <shachaf> Storage and I/O operations, I should say.
[09:35:04] <lizzie> Also, yes, what you just said.  All disk encryption formats I've seen seem extremely hesitant to use even a slightest percentage of the storage on crypto metadata.
[09:35:08] *** Joins: x88x88x (~x88x88x@188.214.106.84)
[09:35:42] <lizzie> My personal opinion is that it would be worth it to use disk encryption that authenticates data.  There are other things you can do, like use a filesystem like zfs that authenticates data.
[09:35:56] <shachaf> Yes, I know these things, which is why I brought them up. That's what makes disk encryption such an unusual environment.
[09:36:35] <shachaf> There are some other things you might do, if you're really going for disk encryption specifically: For example, maybe a typical block cipher's block size is way too small, and you really care about a disk's block size instead.
[09:36:37] <lizzie> But basically, chunking the data into clusters that are small enough to not hurt i/o performance "too much" when doing many small writes (and yes, that's a nebulous concept and depends on workload, and this will always have an i/o cost) ends up being the natural solution
[09:36:58] <lizzie> to avoiding the most severe data disclosure risks from repeated peeks at the same encrypted drive
[09:37:53] <lizzie> Now that I think about it...  if you were happy to write metadata, you could have a crypto filesystem that writes arbitrary-sized data segments using a stream cipher, as long as you use independent keys for each segment
[09:38:15] <lizzie> you should be able to use your stream cipher without issues, as long as you are not reusing its keys and you also authenticate all data
[09:38:19] <shachaf> Independent keys or just IVs.
[09:38:46] <lizzie> whatever is still widely believed to be safe for the stream cipher you're using.
[09:38:47] <shachaf> But then you need to rewrite the entire segment when you change any part of it, or something.
[09:39:34] <lizzie> there are certain types of filesystems, like log-structured filesystems, that lend themselves well to write-only data segments that are thrown out wholesale and replaced rather than rewritten in place
[09:40:27] <shachaf> Yes, this is also a thing I was talking to my friend about. If you're OK with only supporting write and append, then you can do this kind of thing.
[09:40:53] <shachaf> Or even if your filesystem is directly encrypted, rather than indirectly going through an old-fashioned block interface.
[09:41:38] <shachaf> It's especially silly these days -- you go through a flash translation layer that already secretly deals with things this way, then you have a gratuitous block interface on top, and a file system on top of that.
[09:42:17] <shachaf> So maybe it'd be best for block devices to just go away in many cases.
[09:42:45] <shachaf> But that's a different question.
[09:42:47] <lizzie> do you mean having the OS directly manage the flash memory?
[09:44:15] <shachaf> Sure, or the flash drive exposing a more modern interface.
[09:44:42] *** Quits: warai_otoko (~warai_oto@185.156.174.147) (Remote host closed the connection)
[09:45:06] <lizzie> It would be nice to have the linux kernel deal with flash memory at the same time as crypto, for many performance and security reasons...  I would feel much less comfortable trusting buggy proprietary firmwares from various manufacturers to do all that
[09:46:32] <lizzie> for the same reason I already don't use the drive encryption that comes standard on most newish drives
[09:49:47] <lizzie> well apparently linux already ships several log-structured filesystems and most of them actually seem to be designed for their wear-leveling effect on raw flash media
[09:52:17] *** Quits: MrFantastik (~Thunderbi@98.1.50.67) (Ping timeout: 265 seconds)
[09:57:42] <Alipha> shachaf: you'd be interested in Google's novel Adiantum encryption algorithm: https://security.googleblog.com/2019/02/introducing-adiantum-encryption-for.html?m=1
[09:58:11] <shachaf> I think someone (maybe you?) posted about that before when I asked a similar sort of question.
[09:58:18] <Alipha> Lol
[09:58:42] <shachaf> But that was just as I was leaving and I never ended up looking into it.
[09:59:47] <Alipha> shachaf: it has the behavior of a block cipher of an arbitrary size (in the case of hdd encryption, you'd naturally make it encrypt in sector-sized blocks)
[10:02:10] <Alipha> What I mean by that is that any change to the sector produces completely different ciphertext. Which means any modification to the ciphertext will result in the plaintext being complete garbage. And so, while Adiantum is not authenticated nor uses IVs, it doesn't really need them
[10:03:23] <shachaf> That sounds pretty good.
[10:03:42] <Alipha> And the bulk of the encryption is done with a stream cipher ;-)
[10:03:43] <shachaf> What degree of "doesn't really need them"? Presumably you still want to use them in most cases where you use them now?
[10:04:24] <yawkat> "doesn't need authentication" is maybe a bit much. But it's about as good as it gets with zero size overhead
[10:05:04] <Alipha> Well, Adiantum is for where the ciphertext must be the same size as the plaintext. If the ciphertext can be larger, then sure, add an IV and MAC
[10:05:04] <int-e> the best an attacker can hope achieve is to replace meaningful data by garbage
[10:05:39] <int-e> this is much better than 'xor the right bit with 1 to change a "0" into a "1"' from a stream cipher.
[10:07:28] <int-e> s/xor with 1/flip/
[10:07:49] <Alipha> An IV would prevent an attacker from observing that a sector's data changed back to a previous plaintext. And a MAC would catch alterations to the ciphertext, whereas without a MAC, you wouldn't know if the random gibberish plaintext was actually what's supposed to be there or not
[10:08:47] <Alipha> Neither of which seem like big security concerns
[10:11:29] *** Joins: frost (~frost@59.71.242.236)
[10:17:56] <shachaf> This seems pretty OK.
[10:18:22] <shachaf> Why don't more people use this sort of construction?
[10:20:13] *** Joins: archenoth (~archenoth@S0106889e6827f474.cg.shawcable.net)
[10:23:40] *** Quits: x88x88x (~x88x88x@188.214.106.84) (Ping timeout: 258 seconds)
[10:42:03] *** akaWolf1 is now known as akaWolf
[10:45:07] *** Joins: toretto_ (~0xe3b7@ca1-1.azirevpn.net)
[10:47:18] *** Quits: toretto (~0xe3b7@45.15.16.60) (Ping timeout: 252 seconds)
[11:07:25] <wasamasa> I recalls recent LUKS supporting nonces, but it's all beta
[11:08:14] <wasamasa> on the XTS topic: https://sockpuppet.org/blog/2014/04/30/you-dont-want-xts/
[11:09:07] <wasamasa> > You canâ€™t authenticate the data. Authenticating every sector is too expensive. Try to (painfully) authenticate the whole disk and any disk error trashes the disk. Maybe your users enjoy exciting games of chance? Authenticate arbitrary groups of sectors and you can play Russian Roulette with your files.
[11:09:23] <wasamasa> that might be why it's in beta, with the obligatory backup advice
[11:11:43] *** Quits: frost (~frost@59.71.242.236) (Quit: Connection closed)
[11:13:21] *** Joins: Guyver2 (Guyver@guyver2.xs4all.nl)
[11:23:43] *** Joins: andreasbuhr (~quassel@p549db56c.dip0.t-ipconnect.de)
[11:24:26] *** Joins: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:24:45] *** Quits: andreasbuhr (~quassel@p549db56c.dip0.t-ipconnect.de) (Client Quit)
[11:24:55] *** Quits: chronon_ (~chronon@user/chronon) (Quit: leaving)
[11:25:59] *** Joins: andreasbuhr (~quassel@p549db56c.dip0.t-ipconnect.de)
[11:27:56] *** Quits: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 268 seconds)
[11:34:18] *** Joins: chomwitt (~Pitsikoko@2a02:587:dc0b:ff00:c813:70d9:31b2:b1b9)
[11:35:02] *** Joins: frost (~frost@59.71.242.236)
[11:41:20] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[11:43:10] *** Joins: CrashTestDummy2 (~CrashTest@ool-ad02813b.dyn.optonline.net)
[11:46:05] *** Quits: CrashTestDummy3 (~CrashTest@ool-ad02813b.dyn.optonline.net) (Ping timeout: 258 seconds)
[11:47:19] *** Quits: byteskep1ical (~amnesia@user/byteskeptical) (Ping timeout: 265 seconds)
[12:00:02] *** Joins: F0odMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net)
[12:05:41] *** Joins: okozina (~okozina@nat-pool-brq-t.redhat.com)
[12:06:19] *** Quits: okozina (~okozina@nat-pool-brq-t.redhat.com) (Client Quit)
[12:11:03] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:36:24] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Ping timeout: 244 seconds)
[12:42:02] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[12:44:03] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:7fb:5bd8:2599:2fdb)
[12:49:13] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:7fb:5bd8:2599:2fdb) (Remote host closed the connection)
[12:49:29] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:2a76:42b9:78db:d162)
[12:54:40] *** Joins: vernaz (~vernaz@2001:818:d8da:9b00:69dd:f767:86e6:8fa9)
[13:23:40] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:2a76:42b9:78db:d162) (Remote host closed the connection)
[13:27:24] *** Quits: zegalch (~zegalch@178.128.75.133) (Remote host closed the connection)
[13:27:41] *** Joins: zegalch (~zegalch@178.128.75.133)
[13:35:39] *** Joins: x88x88x (~x88x88x@188.214.106.74)
[13:39:59] *** Quits: chomwitt (~Pitsikoko@2a02:587:dc0b:ff00:c813:70d9:31b2:b1b9) (Ping timeout: 244 seconds)
[13:42:56] *** Joins: SomeWeirdAnon (~shwn@2a02:8109:abf:ffb4:6906:756f:b2f4:2084)
[13:44:27] *** Quits: SomeWeirdAnon (~shwn@2a02:8109:abf:ffb4:6906:756f:b2f4:2084) (Client Quit)
[13:44:44] *** Joins: SomeWeirdAnon (~shwn@2a02:8109:abf:ffb4:6906:756f:b2f4:2084)
[13:57:10] *** Quits: JollyRoger (~JollyRoge@user/thejollyroger) (Remote host closed the connection)
[13:57:10] *** Quits: drathir_tor (~drathi