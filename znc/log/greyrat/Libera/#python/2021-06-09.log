[00:00:00] <axisys> I could not find a #panda channel.. so apologize if it is offtopic here
[00:00:27] *** Joins: BlessJah_ (~BlessJah@user/blessjah)
[00:00:54] *** Quits: egon (~egon@user/egon) (Ping timeout: 245 seconds)
[00:01:46] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[00:01:52] *** Joins: qxt (~onryo@user/onryo)
[00:02:28] <rjwiii> SnoopJ: Yes. I have an "ARE YOU SURE" prompt, then the shell script gets executed in an "if" statement ...
[00:02:31] <d3vyL> Hello guys, how can I round up a number by nearest 10th 100th 1000th? For example if I have 35 => 40 | or if I have 771 => 800 | or if I have 11293 => 11300 etc etc...?
[00:02:35] <SnoopJ> rjwiii, I would probably use os.execl() then
[00:02:51] <d3vyL> I'm getting mad for something which seems easy for me but my brain is exploding ^^
[00:03:04] *** Quits: mesaboogie (mesaboogie@user/mesaboogie) (Ping timeout: 258 seconds)
[00:03:20] *** Joins: ente__ (~ente@dynamic-046-114-152-251.46.114.pool.telefonica.de)
[00:03:41] <rjwiii> SnoopJ: I'll look that up ...
[00:04:12] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 272 seconds)
[00:04:19] <qxt> Anyway to format the output to only give 3 numbers after the decimal?     ae = 2.585 * len(r);   print('WARNING: Input is only %f bits of entropy\n' % ae)
[00:04:35] <SnoopJ> rjwiii, https://docs.python.org/3/library/os.html#os.execl  note that you pass argument 0 to the new process, so you do something like: `os.execl(executable, executable, "arg1", "arg2", ...)`
[00:04:54] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[00:05:07] <qxt> I'm using a float
[00:05:26] *** Quits: Payam (~Payam@138.106.57.131) (Ping timeout: 250 seconds)
[00:05:37] <qxt> %f but would like it to cut off after 3 decimal numbers
[00:07:36] <mike18> hi is there a online compiler where i can use deepdiff package or install it?
[00:07:44] <grym> qxt: print(f'WARNING: Input is only {ae:0.3f} bits of entropy')
[00:07:57] <qxt> thank you!!
[00:08:18] *** Quits: adder` (~adder@user/adder) (Quit: Leaving)
[00:08:18] <samian> each of these variables is a list of 4 items. I want to do a loop where I get index 0 of all the variables, next loop I get index 1 of all the variables, so forth. Is there a way to do that without indexing?
[00:08:29] <samian> https://bpa.st/YASQ
[00:08:44] *** Joins: mrkz_c (uid503554@user/mrkz-c/x-7247691)
[00:09:03] <SnoopJ> samian, "without indexing?"
[00:09:03] <grym> samian: for all_the_firsts in zip(P,S,E,...)
[00:09:41] <grym> or `for this_p, this_s, this_e in zip(P,S,E,...)
[00:09:46] <grym> if you prefer to unpack there instead
[00:10:06] *** Quits: crs (~f@91.212.33.50) (Changing host)
[00:10:06] *** Joins: crs (~f@user/crs)
[00:10:23] <samian> thanks grym
[00:11:38] <mike18> hi is there a online python compiler where i can use deepdiff package and post a snippet?
[00:12:04] *** Quits: kiwichap (~brainz3sl@4.182.132.164.lunanode-rdns.com) (Quit: Leaving)
[00:13:08] <SnoopJ> mike18, repl.it supports everything on PyPI IIRC
[00:13:15] <mike18> oh nice
[00:13:25] <SnoopJ> that's probably everything*
[00:13:40] <rjwiii> SnoopJ: will os.excel let me put the shell script in the background? It runs for like 20 minutes ...
[00:13:40] <mike18> sign up?
[00:13:41] <mike18> hm
[00:14:14] <samian> for MB,P,S,E,M,D,Nb,Lb,Nt,Lt,I in zip(MB,P,S,E,M,D,Nb,Lb,Nt,Lt,I):
[00:14:19] <samian> how does that look?
[00:14:26] <grym> samian: bad
[00:14:34] <grym> don't clobber the names
[00:14:38] <grym> otherwise, fine
[00:14:40] <SnoopJ> rjwiii, os.exec*() are very thin wrappers around the POSIX system calls of the same name. All of them replace the current process (i.e. there is nothing to background, because the new thing *replaces* the Python process)
[00:15:43] *** Joins: Auron (~Auron956@user/auron)
[00:16:04] <samian> yeah I notice it's valid for the item name to be the same as the list name
[00:16:11] <SoF> hi, I'm trying to use subprocess.Popen to interact with a subprocess (read from stdout, write to stdin, read again, write again etc) but I don't see any stdout before I close the stdin channel
[00:16:16] <rjwiii> SnoopJ: thank you for that information. Will I get the CLI prompt back so I can continue working while the script runs in the background?
[00:16:17] *** Joins: mesaboogie (~mesaboogi@user/mesaboogie)
[00:16:17] <samian> yet no one does it even though it's valid
[00:16:21] <mike18> SnoopJ: how to let the timestamp ignore? https://ideone.com/qZXpFw
[00:16:22] <samian> grym,  why is it bad?
[00:16:56] <SnoopJ> rjwiii, here's an example: https://bpa.st/FFOQ
[00:17:05] *** Joins: h4k1m0u (~h4k1m0u@2a01:e0a:98:ddf0:c02d:9f9a:6a89:97ab)
[00:17:19] <SnoopJ> mike18, I don't understand the question
[00:18:34] <odoood> d3vyL: sounds difficult unless you know when you want to round up to the next multiple of 10 vs 100 vs 1000...
[00:18:59] <odoood> e.g. 771 -> 800 rather than 780
[00:19:07] <grym> samian: you're changing the values that all those names point to
[00:19:28] <h4k1m0u> Hi, does subwin in curses require that the window be one character larger (# of column)? I'm asking because this example (https://bpa.st/JC4Q) returns an error unless I increase the # of columns in `subwin`
[00:19:33] <grym> samian: consider instead something like `for mb, p, s, e, ... in zip(MB, P, S, E, ...)`
[00:20:19] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 258 seconds)
[00:21:14] *** Joins: adder` (~adder@user/adder)
[00:22:49] <habnabit_> SoF, subprocess isn't very good for interactive IO.. only oneshot IO. have you looked at pexpect?
[00:24:03] *** Quits: Siecje (~Siecje@157.52.13.86) (Quit: Leaving...)
[00:24:20] *** Joins: salpynx (~salpynx@121.73.84.248)
[00:24:31] *** Quits: dkmueller (~dkmueller@2a01:c22:6e63:5d00:b16c:35bc:dfd6:881) (Ping timeout: 272 seconds)
[00:24:42] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[00:25:15] *** Joins: dkmueller (~dkmueller@2a01:c22:6e63:5d00:b16c:35bc:dfd6:881)
[00:26:27] <d3vyL> @odoood I suppose the round(x, -2) is what I'm looking for
[00:26:27] <odoood> d3vyL (I'm currently away: I'm busy)
[00:27:07] <d3vyL> just need to check if my actual number is lower than 100 like if I have round(2,-2) will return 0 but in that case I can use an IF condition to test it out
[00:27:29] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[00:27:30] <d3vyL> but thanks anyway for your help mate
[00:29:23] <AlwaysInTime> Or if not pandas, is there a way to do it with a regexp while iterating through a list?
[00:29:50] *** Quits: samian (~sami@174.27.107.153) (Read error: No route to host)
[00:30:00] *** Quits: ente__ (~ente@dynamic-046-114-152-251.46.114.pool.telefonica.de) (Read error: Connection reset by peer)
[00:31:11] <odoood> d3vyL: i see - you can also use '%' to programmatically check for the order of magnitude
[00:31:28] *** Joins: ponadm_ (pony@gateway/vpn/protonvpn/ponadm)
[00:31:31] *** Quits: ponadm (pony@gateway/vpn/protonvpn/ponadm) (Ping timeout: 264 seconds)
[00:31:32] <odoood> d3vyL: sorry, math.log10 not %
[00:33:17] *** Quits: Thanatos (~Thanatos@102.89.0.164) (Read error: Connection reset by peer)
[00:33:23] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[00:33:42] *** Joins: Thanatos (~Thanatos@102.89.0.110)
[00:34:02] <SoF> habnabit_: I wasn't able to find anything on how to readline, only 'expect()' - but I don't necessarily know the output
[00:34:34] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[00:34:36] <habnabit_> SoF, what's the IO you want to do?
[00:34:39] *** Joins: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it)
[00:34:40] *** Joins: justm3 (~Username@86-91-250-105.opennet.kpn.net)
[00:34:55] <d3vyL> what you mean odood?
[00:35:00] <d3vyL> math.log10(x) ?
[00:35:14] <d3vyL> where x can be 123,1234,12345 (sorry for the numbers is just to test it out)
[00:35:25] <SoF> habnabit_: read its stdout and write to its stdin repeatedly (i.e. no popen.communicate)
[00:35:49] *** Joins: dme86 (~dan@user/dan86)
[00:36:27] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Client Quit)
[00:36:57] <habnabit_> SoF, https://github.com/pexpect/pexpect/blob/master/examples/monitor.py
[00:37:25] <habnabit_> SoF, presumably there's an end to the output, right? like, the next prompt for the next input?
[00:37:25] <odoood> d3vyL: yea, like if you wanna know the closest 10^... for your x
[00:37:27] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[00:37:39] <SnoopJ> AlwaysInTime, have a look at this: https://bpa.st/RDIA
[00:41:58] <AlwaysInTime> Thanks SnoopJ! Actually I'd like to do two operations if that was not clear. Remove all strings that contain numbers except those that have 365 at the end or beginning. Does that make sense? Maybe i misinterpreted your solution and you can use it for that too.
[00:42:36] <SnoopJ> AlwaysInTime, you would look for .startswith("365") or .endswith("365") when building the index.
[00:43:10] <axisys> is there a better way to check this? if foo == '': print 'is empty'
[00:43:25] <SnoopJ> axisys, you can just do `if foo:` if you're sure it's going to be a string
[00:43:43] <axisys> SnoopJ: its a key to a dictionary
[00:43:45] <SnoopJ> bool('') -> False
[00:44:02] *** Quits: mesaboogie (~mesaboogi@user/mesaboogie) (Ping timeout: 250 seconds)
[00:44:09] <d3vyL> oh well nevermind I didn't get the order of magnitude but I suppose the round(x,-2) work good for me...Only problem could be something similar to round(249,-2) which ofcourse will return 200 so I would pick the 300 just to round UP instead of round DOWN
[00:44:16] <d3vyL> but i suppose this is a "mathematical" problem
[00:44:17] <axisys> data is not clean.. one key shows as ''
[00:44:36] <d3vyL> but thanks anyway odood for your suggestion, I didn't get very well but I will give a look
[00:44:54] <AlwaysInTime> SnoopJ, not sure if I understand. how would I remove a value like Hel2o365 since it contains digit?
[00:45:07] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[00:45:08] <axisys> SnoopJ: that worked. thanks
[00:45:16] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[00:46:21] <AlwaysInTime> I.e. Hello365 is ok. 365Hello is ok Hel[digit]lo365 is not ok.
[00:46:23] <SnoopJ> AlwaysInTime, that value ends with 365 and would be included in the operation you have been describing. If it should be excluded, you'll need to explain why.
[00:46:24] *** Quits: waynew (~wayne@user/waynew) (Read error: Connection reset by peer)
[00:46:44] *** Joins: waynew (~wayne@user/waynew)
[00:47:11] <AlwaysInTime> SnoopJ, sorry I was not clear.
[00:47:14] <SnoopJ> AlwaysInTime, that does sound more like a job for regex. What should happen with "365Hello365" ?
[00:47:29] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[00:47:34] <SnoopJ> and what about "3650Hello" ?
[00:47:37] <AlwaysInTime> 365Hello365 is okay
[00:47:42] <AlwaysInTime> 3650 hello is not kay
[00:47:46] <AlwaysInTime> is not okay
[00:47:59] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[00:48:10] <mike18> SnoopJ: im using this library called DeepDiff to compare 2 json dicts. is there a way to set the precession for values which are float values for the compare?
[00:48:26] <SnoopJ> mike18, not familiar with the library, sorry
[00:48:46] <AlwaysInTime> The only number a string can contain is 365 AND it can only contain it at either the end or the beginning of the string. It cannot contain any other number
[00:48:46] <mike18> but would it make sense to set something like that?
[00:48:54] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[00:48:54] <mike18> float compare is not that streight forward
[00:49:18] *** Joins: jinsun (~quassel@182.77.87.72)
[00:49:41] *** Quits: jinsun (~quassel@182.77.87.72) (Client Quit)
[00:51:17] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[00:51:24] *** Joins: samian (~sami@174.27.107.153)
[00:51:25] <samian> can someone show me how to invoke another python program by calling subprocess.run ?  I want to run "python progname --mini-batch-size=2"
[00:52:30] <samian> if subprocess doesn't work with running a string containing the full command, should I use os.system( ) instead?
[00:52:41] <grym> samian: subprocess takes a list
[00:53:05] <grym> subprocess.run(['python','progname','--mini-batch-size=2'])  probably
[00:53:20] <grym> not sure about the option
[00:53:37] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[00:54:09] <SnoopJ> AlwaysInTime, https://bpa.st/JOOQ
[00:54:46] <SnoopJ> it sounds like your data are already str so you won't have to worry about the astype() stuff I did in the other paste
[00:55:05] <SnoopJ> (I thought you were asking about numbers like 365000 and 123365)
[00:55:21] *** Joins: cul8r (~cul8r@2601:8c3:4000:b0d0::f323)
[00:56:01] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[00:56:09] <axisys> is it possible to convert a nested loop that populates a dictionary into something like list comprehension?
[00:56:13] <axisys> example: https://dpaste.org/LT58/slim
[00:57:26] <axisys> I tried [ {y:1} for x in df for y in x.split(';') if f ] and that did not quite work..
[00:57:40] *** Joins: mesaboogie (~mesaboogi@user/mesaboogie)
[00:57:49] *** Quits: k4rt0ff3lch33t4h (~k4rt0ff3l@178-164-189-247.pool.digikabel.hu) (Quit: leaving)
[00:58:06] <samian> shouldn't this work as a list?
[00:58:08] <samian> https://bpa.st/AIMA
[00:59:00] <samian> aha I got it!!
[00:59:10] <samian> cmd = f"python dlrm_s_pytorch.py --arch-sparse-feature-size={E} --arch-mlp-bot=\"{arch_mlp_bot}\" --arch-mlp-top=\"{arch_mlp_top}\" --arch-embedding-size=\"{arch_embedding_size}\" --data-generation=synthetic --loss-function=bce --round-targets=True --learning-rate=0.1 --mini-batch-size={MB} --print-freq=10240 --print-time --num-indices-per-lookup-fixed=1 --num-indices-per-lookup={P} --inference-only --quantize-mlp-with-bit=16 --quantize-emb-with-bit=4"
[00:59:16] <samian> and then I do cmd.split()
[00:59:32] <grym> samian: if you're going to do _that_, then use shlex.split over str.split
[00:59:42] <SnoopJ> yeesh
[01:00:08] <grym> shlex tries and does a pretty solid job at not clobbering quotes
[01:00:12] <SnoopJ> axisys, you could make it into a generator function: https://bpa.st/QG7Q
[01:00:14] <grym> but if you can do it clean, do it clean
[01:00:57] *** Quits: qxt (~onryo@user/onryo) (Ping timeout: 258 seconds)
[01:01:01] *** Quits: insidesouces (~meta@user/insidesources) (Quit: leaving)
[01:01:39] <axisys> SnoopJ: ok, thanks
[01:02:15] *** Joins: onryo (~onryo@user/onryo)
[01:02:38] *** Joins: vrt3 (~vrt3@d54c5733d.access.telenet.be)
[01:04:05] <ali1234> https://docs.python.org/3/library/typing.html <- in the "type aliases" section it gives the example "Vector = list[float]"
[01:04:27] <ali1234> when i try to run that code it says: 'type' object is not subscriptable
[01:04:44] <ali1234> which makes perfect sense, why would a type object be subscriptable?
[01:04:53] <ali1234> so what's the deal with the example?
[01:05:01] <grym> ali1234: what python version are you running
[01:05:07] <ali1234> 3.8.5
[01:05:23] <emerent> ali1234: it's a new feature in 3.9
[01:05:27] <grym> yep
[01:05:27] <ali1234> i see
[01:06:49] *** Quits: anddam (~anddam@user/anddam) (Ping timeout: 268 seconds)
[01:07:29] <SnoopJ> yea, builtins became generic in 3.9 because it's so convenient
[01:07:39] *** Parts: skyrael (~default@212.102.37.182) ()
[01:08:14] *** Joins: jazzy (~jaziz@2600:380:874b:26da:54d2:cacb:af5c:6b6c)
[01:08:38] <habnabit_> you can write `x: list[y] = z` in 3.7-3.8 if you use `from __future__ import annotations`
[01:08:55] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:08:56] <habnabit_> it doesn't require 3.9
[01:09:10] <dale> I've got one process that needs to be processing incoming data quickly, so I'd like to have it appending log messages to a text file on the local disk as it processes the incoming data.  Meanwhile I want another process to be simultaneously tailing that text file, firing those log messages off to a remote store, and just changing the first character of every log message from 0 to 1 in the text file
[01:09:12] <dale> as each log message is ACKed by the remote store.
[01:09:24] <dale> This seems too easy.  Could this actually work?
[01:09:50] *** Quits: h4k1m0u (~h4k1m0u@2a01:e0a:98:ddf0:c02d:9f9a:6a89:97ab) (Quit: Client closed)
[01:10:11] *** Joins: cedric (~cedric@2a01:cb11:867:c200:3864:a685:cd02:8300)
[01:10:29] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[01:11:16] *** Quits: d0htem (uid502043@user/d0htem) (Quit: Connection closed for inactivity)
[01:11:29] *** Joins: cliluw (~cliluw@47.147.80.149)
[01:11:37] <ChrisWarrick> dale: Why not use some existing message queue system for this?
[01:11:59] <dale> ChrisWarrick: I'm buffering the messages locally in case the message queue is down or unreachable. :)
[01:11:59] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Client Quit)
[01:12:24] <ChrisWarrick> dale: Is this an important consideration for your system?
[01:12:33] *** Quits: aw1 (~aw1@203.171.246.186) (Remote host closed the connection)
[01:13:04] *** Quits: agumonke` (~user@88.160.31.174) (Ping timeout: 250 seconds)
[01:13:14] <dale> ChrisWarrick: Indeed I'm not actually sure that this is necessary, but it was suggested to me and I was asked to investigate it.
[01:13:35] <dale> And I'm just trying to avoid having to spin up a local Redis instance or something for this.
[01:14:24] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:14:28] *** Joins: dme86 (~dan@user/dan86)
[01:14:50] <ChrisWarrick> dale: How remote is the remote store?
[01:14:53] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[01:15:43] *** Joins: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net)
[01:15:49] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[01:15:55] *** Joins: agumonke` (~user@88.160.31.174)
[01:16:12] <dale> ChrisWarrick: What are my options here?  It's definitely on another machine, I don't know exactly where, probably same AWS data center or something.
[01:16:57] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (Ping timeout: 252 seconds)
[01:17:25] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[01:17:52] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Client Quit)
[01:17:56] <ChrisWarrick> dale: Two processes writing to the same text file aren’t necessarily a great idea, they might end up overwriting stuff
[01:18:13] *** Joins: xa0s (~xa0s@mab.sdf.org)
[01:18:16] <dale> ChrisWarrick: If one is always appending, and the other is never writing to the end, how does that happen?
[01:18:50] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[01:19:05] *** Joins: anddam (~anddam@user/anddam)
[01:19:44] <ChrisWarrick> dale: I fear some weird caching and buffering scenarios
[01:20:00] *** Quits: ponadm_ (pony@gateway/vpn/protonvpn/ponadm) (Ping timeout: 250 seconds)
[01:21:57] *** Joins: decimuscorvinus (~jimmy@136.37.105.112)
[01:22:08] <dale> The complexity++ option is to share an SQLite DB.
[01:23:53] <AlwaysInTime> SnoopJ thanks! You are the best :)
[01:24:27] <ChrisWarrick> dale: And sharing a SQLite DB is problematic…
[01:25:45] <dale> ChrisWarrick: SQLite docs seem to say it's OK if you avoid network FSes, what's the problem there?
[01:25:47] <ChrisWarrick> dale: I’d prefer to make the Remote Store thing as resilient as possible, store stuff there directly, log all messages to a file, and in the event of a catastrophic failure, have a way to manually/semi-automatically add things from the log file after recovery
[01:26:09] <Northwoods> Any tejinder singh here
[01:26:14] <Northwoods> from India
[01:26:34] <ChrisWarrick> dale: “Multiple processes can have the same database open at the same time. Multiple processes can be doing a SELECT at the same time. But only one process can be making changes to the database at any moment in time, however.”
[01:27:41] <dale> ChrisWarrick: I think I can manage the contention.
[01:28:25] *** Joins: disi (~disi@107-131-127-0.lightspeed.sntcca.sbcglobal.net)
[01:28:35] <dale> ChrisWarrick: "When any process wants to write, it must  lock the entire database file for the duration of its update.  But that  normally only takes a few milliseconds.  Other processes just wait on  the writer to finish then continue about their business."
[01:29:14] <dale> ChrisWarrick: Actually, I think I like your idea.
[01:29:34] <dale> ChrisWarrick: Write the file but don't expect to use it.
[01:31:08] <disi> I'm working on some Sphinx docs. I have an index with a numbered toc, and it includes foo/index. The problem is: h1's in foo/index are getting their own (top-level) numbers. If I make them h2's, that seems to work a little better, but this implies that i have to use smaller and smaller headings the more i nest sections/chapters, which is not
[01:31:09] <disi> desirable. is there a way around that?
[01:31:11] <disi> (I'm using myst-parser fwiw)
[01:32:04] *** Quits: teut (~teut@182.69.85.39) (Quit: Connection closed)
[01:32:34] *** Joins: pointless (~pointless@075-141-241-204.res.spectrum.com)
[01:32:39] *** Quits: m4r35n357 (~ian@host-92-13-130-45.as13285.net) (Quit: Ex-Chat)
[01:33:04] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[01:33:15] <dale> I still wrote a kind of outline of what I was thinking with two processes writing to a text file: https://bpa.st/ONSQ
[01:33:24] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[01:34:29] *** Quits: flower_ (~debian@217-123-218-6.cable.dynamic.v4.ziggo.nl) (Remote host closed the connection)
[01:34:50] *** Joins: sana (~san@115.114.90.35)
[01:34:51] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289) (Quit: WeeChat 2.8)
[01:34:58] <sana> kind of a dumb question. in foo directory I have scripts bar1.py and bar2.py. bar1.py has the statement import foo.bar2 as bar2. This fails with "ModuleNotFoundError: No module named foo.bar2; foo is not a package
[01:35:25] <sana> and my __init__.py in foo is empty
[01:36:11] *** BlessJah_ is now known as BlessJah
[01:36:13] <dale> As at least an academic question I'd be interested to hear how that system would fail. :)
[01:36:36] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[01:36:43] <disi> sana: how are you invoking bar1.py?
[01:36:57] <sana> python3 bar.py --args .....
[01:37:07] <sana> bar1.py
[01:37:08] *** Quits: vrt3 (~vrt3@d54c5733d.access.telenet.be) (Quit: Leaving)
[01:37:26] <disi> sana: don't invoke package modules directly like that, use `python -m foo.bar1 --args ...` instead
[01:37:45] <sana> ok
[01:38:37] *** Joins: FunkyBob (~curtis@vhost3.tinbrain.net)
[01:39:00] <dale> ChrisWarrick: I *think* caching/buffering shouldn't be an issue at least WRT reliability of the data read/written, since one process is only ever appending, and the other process is only ever overwriting bytes written by the first process.
[01:39:08] <dale> Performance could be a problem.
[01:39:20] <sana> disi, same result
[01:39:55] *** Quits: duso (~duso@pa49-197-12-252.pa.qld.optusnet.com.au) (Ping timeout: 264 seconds)
[01:39:59] *** Quits: xsperry (~as@user/xsperry) (Remote host closed the connection)
[01:40:19] *** Joins: MikZyth (~MikZyth@188.65.243.35)
[01:40:30] <dale> Maybe an fsync or something is needed in there to emphasise "no really write this out to disk".
[01:40:38] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[01:41:06] *** Joins: dudek (~dudek@185.150.236.112)
[01:41:15] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[01:42:32] <disi> sana: https://gist.github.com/tucked/0d351069f8a018c8889c0a323e0e5e10
[01:43:08] *** Joins: entuland_ (~entuland@user/entuland)
[01:43:14] <disi> sana: is `foo` importable?
[01:43:24] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 250 seconds)
[01:43:28] <dale> ChrisWarrick: Thanks for that suggestion of using logs only after a failure.
[01:44:26] <sana> disi, uh okay i got it now
[01:44:40] <sana> has to be run from parent of foo
[01:45:05] <disi> yes (or after installing foo -- somewhere foo is importable)
[01:45:38] *** Quits: ffledgling (~textual@2620:10d:c090:400::5:e083) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:45:51] <SnoopJ> AlwaysInTime, sure thing :)
[01:47:47] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[01:48:24] *** Arc is now known as Strom
[01:49:03] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[01:49:43] *** Quits: Strom (strom@fedora/strom) ()
[01:50:09] *** Joins: ffledgling (~textual@2620:10d:c090:400::5:e083)
[01:51:50] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[01:52:18] *** Joins: Strom (strom@fedora/strom)
[01:52:26] *** Quits: cedric (~cedric@2a01:cb11:867:c200:3864:a685:cd02:8300) (Quit: Konversation terminated!)
[01:53:24] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 245 seconds)
[01:54:26] *** Quits: AlwaysInTime (~AlwaysInT@c83-248-142-40.bredband.tele2.se) (Quit: Leaving)
[01:54:54] *** Quits: nattiestnate (~nate@180.242.128.159) (Ping timeout: 252 seconds)
[01:56:07] *** Quits: mexen (uid495612@user/mexen) (Quit: Connection closed for inactivity)
[01:56:46] *** Joins: nattiestnate (~nate@36.70.194.182)
[01:57:39] *** Quits: ominionx (~ominionx@38.135.235.14) (Ping timeout: 252 seconds)
[01:58:45] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Ping timeout: 252 seconds)
[02:00:38] *** Joins: ominionx (~ominionx@38.135.235.14)
[02:01:08] *** Joins: ponadm_ (pony@gateway/vpn/protonvpn/ponadm)
[02:01:58] *** entuland_ is now known as entuland
[02:02:22] *** Quits: ente_ (~ente@p200300dc5f4037016fbea028d47fea8e.dip0.t-ipconnect.de) (Ping timeout: 244 seconds)
[02:02:56] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[02:03:14] <Skyz> I accidently didn't end up making myself career viable with python :\
[02:03:20] <Skyz> What do?
[02:03:44] <Skyz> Something with ML
[02:03:47] <waynew> You mean you haven't found someone who will pay you to write Python?
[02:03:54] <Skyz> Yeah basically
[02:04:04] <waynew> Find someone to pay you to write other code
[02:04:05] * SnoopJ isn't entirely clear on what the question is
[02:04:15] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[02:04:39] <Skyz> I'm trying to do ports to an OS
[02:04:43] <Skyz> (now)
[02:04:48] <waynew> while Python *is* the best, it's not the only thing out there
[02:06:37] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[02:08:34] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:09:27] *** Joins: roro (~roro@user/roro)
[02:10:54] *** Joins: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[02:11:17] <ffledgling> I have a bit of a dumb question - does asyncio.gather() on futures return an async iterator? I don't see anything in the function docs for asyncio.gather, but I'm running into an AttributeError: 'StopAsyncIteration' object has no attribute 'wrapped_op' when I loop over the returned value from asyncio.gather. I can only conclude it is because the for loop is somehow async
[02:12:38] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 258 seconds)
[02:13:30] *** Quits: ffledgling (~textual@2620:10d:c090:400::5:e083) (Quit: Textual IRC Client: www.textualapp.com)
[02:16:16] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[02:17:58] *** dTal is now known as Guest37
[02:18:05] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[02:18:09] *** Guest37 is now known as dTal
[02:18:23] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[02:21:38] *** Quits: ali1234 (~al@user/ali1234) (Quit: Leaving.)
[02:21:39] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Client Quit)
[02:22:16] *** Quits: Crys (~Tiran@python/psf/tiran) (Ping timeout: 272 seconds)
[02:22:57] *** Joins: wyclif (~wyclif@user/wyclif)
[02:25:31] *** Quits: dkmueller (~dkmueller@2a01:c22:6e63:5d00:b16c:35bc:dfd6:881) (Quit: WeeChat 3.1)
[02:26:43] *** Quits: p-i- (~Ohmu@node-5vi.pool-1-1.dynamic.totinternet.net) (Read error: Connection reset by peer)
[02:26:58] *** Parts: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it) ()
[02:27:21] *** Quits: rannnn8888 (~rannnn888@bzq-79-176-155-8.red.bezeqint.net) (Quit: Client closed)
[02:27:55] *** Quits: sana (~san@115.114.90.35) (Ping timeout: 264 seconds)
[02:28:20] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[02:28:43] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 244 seconds)
[02:30:47] *** Joins: duso (~duso@pa49-197-12-252.pa.qld.optusnet.com.au)
[02:31:30] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 250 seconds)
[02:31:40] <NoImNotNineVolt> suddenly all my git diffs are showing ^M at the end of every line i add. i changed nothing. what gives :\
[02:31:55] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[02:33:01] <grym> NoImNotNineVolt: _someone_ did a whoopsie with line endings, huh
[02:33:30] <grym> core.autocrlf might be wonky
[02:33:32] *** Quits: mossman93 (~quassel@user/mossman93) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[02:33:50] <waynew> NoImNotNineVolt: someone on Windows on your team?
[02:34:20] *** Quits: magla (~gelignite@55d41093.access.ecotel.net) (Quit: Stay safe!)
[02:35:06] *** Joins: mossman93 (~quassel@user/mossman93)
[02:35:36] *** Parts: wallbroken (wallbroken@user/wallbroken) ()
[02:35:57] <NoImNotNineVolt> waynew: yup.
[02:36:18] <NoImNotNineVolt> well, we're all on windows, but we should all be using ubuntu-for-windows and unix-style line endings.
[02:37:03] *** Quits: dudek (~dudek@185.150.236.112) (Quit: Leaving)
[02:37:09] <NoImNotNineVolt> i see, yea, when i open in nano, i see (Converted from DOS format)
[02:37:14] <NoImNotNineVolt> nm, not a python problem :P
[02:38:26] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 250 seconds)
[02:39:16] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[02:39:20] *** Quits: disi (~disi@107-131-127-0.lightspeed.sntcca.sbcglobal.net) (Quit: Client closed)
[02:40:29] <waynew> Check git history ;)
[02:40:50] <grym> NoImNotNineVolt: annoy your team, amaze your friends, invoke server-side git commit hooks today!
[02:40:53] <SnoopJ> smudge filter time :D
[02:40:58] <grym> for the low low price of 99 99 99
[02:41:48] *** Quits: roro (~roro@user/roro) (Quit: roro)
[02:43:22] <emerent> just git blame, the name will be on almost every line
[02:43:23] *** Joins: Fiji (~Fiji@user/fiji)
[02:43:49] <Skyz> Still not sure how to overcome this @grym
[02:43:51] *** Joins: Fluxx (~Fluxx@user/fluxx)
[02:44:13] <grym> Skyz: i haven't been paying attention to your issue
[02:45:13] *** Quits: Fiji (~Fiji@user/fiji) (Client Quit)
[02:47:19] *** Quits: Gaffel (~gaffel@h-178-174-170-170.A1405.priv.bahnhof.se) (Ping timeout: 265 seconds)
[02:48:21] *** Quits: doko (~doko@2a02:8106:1a:7600:6e96:c938:447f:c673) (Ping timeout: 244 seconds)
[02:49:04] *** Joins: Gaffel (~gaffel@h-178-174-170-170.A1405.priv.bahnhof.se)
[02:51:54] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[02:52:51] *** Quits: Codaraxis (~Codaraxis@89.45.7.142) (Read error: Connection reset by peer)
[02:53:03] *** Joins: Codaraxis (~Codaraxis@89.45.7.142)
[02:55:46] *** Joins: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net)
[02:56:38] *** Quits: agumonke` (~user@88.160.31.174) (Read error: Connection reset by peer)
[02:57:24] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[02:57:26] *** Joins: darksun (~darksun@user/darksun)
[02:57:49] *** Joins: xkuru (~xkuru@user/xkuru)
[02:57:51] *** Joins: jim87 (~gfurlan@2001:b07:5d37:f91e:bbde:5043:a034:b725)
[02:58:40] *** Joins: agumonke` (~user@88.160.31.174)
[02:58:50] *** Joins: arthem (~rehmat@user/arthem)
[02:59:21] *** Joins: female_student_4 (~female_st@82-132-212-109.dab.02.net)
[03:00:52] <jim87> Hello! I'd like to redirect the logging data from the logging package to a streamio, and from there add lines to a QT widget. I've got two questions: (1) if I get the root logger and add a handler there, will it attach to all the other loggers? (2) is there a way to get a StringIO listener, so that every time I write in it I get the data to be processed (something like pipes, I imagine). Thanks :)
[03:01:13] *** Joins: xsperry (~as@user/xsperry)
[03:01:57] <waynew> jim87: yeah, you can add a handler to the root logger. As long as nothing else marks it handled
[03:02:09] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130) (Ping timeout: 245 seconds)
[03:02:13] *** Joins: ali1234 (~al@user/ali1234)
[03:02:28] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 258 seconds)
[03:02:38] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[03:02:44] *** Quits: female_student_4 (~female_st@82-132-212-109.dab.02.net) (Client Quit)
[03:03:28] <jim87> waynew: I've attached a handler which writes into a StringIO. Is there a way to listen to the StringIO, or a better stream for handling "changes" to the stream itself?
[03:06:00] *** Quits: Gaffel (~gaffel@h-178-174-170-170.A1405.priv.bahnhof.se) (Quit: What's that?)
[03:06:19] *** Quits: cellofellow (~user@166.70.50.58) (Remote host closed the connection)
[03:09:14] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 245 seconds)
[03:09:43] *** Joins: Gaffel (~gaffel@h-178-174-170-170.A1405.priv.bahnhof.se)
[03:10:30] *** Quits: Akuli (~Akuli@82-203-166-32.bb.dnainternet.fi) (Quit: Leaving)
[03:11:02] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 272 seconds)
[03:12:41] *** Quits: arthem (~rehmat@user/arthem) (Quit: Konversation terminated!)
[03:13:21] <waynew> jim87: If you want to add it to a QT widget you'll probably want to give your handler access to the widget or some other variable - I don't remember if QT has a stringvar
[03:15:12] *** Quits: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[03:15:16] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:15:45] *** Joins: darksun (~darksun@user/darksun)
[03:16:24] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[03:16:40] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[03:17:24] *** Joins: ionface_ (~ionface@user/ionface)
[03:18:14] *** Parts: ravage (~ravage@user/ravage) (Leaving)
[03:18:16] *** Quits: ionface (~ionface@user/ionface) (Read error: Connection reset by peer)
[03:20:42] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[03:21:48] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[03:21:57] *** Quits: waynew (~wayne@user/waynew) (Quit: lynx gopher://gopher.waynewerner.com)
[03:22:34] *** Joins: viktorivan (~ivan@187.223.103.108)
[03:26:44] <graingert> jim87: you can add additional log handlers
[03:27:22] <graingert> jim87: you probably want to use a qtrio Channel
[03:28:03] *** Joins: c4017w (~c4017@209.52.68.8)
[03:28:04] <jim87> graingert: I'm writing my own handler right now, overwriting emit and setting the widget in the init
[03:28:20] <graingert> jim87: right but log messages can be written from any thread
[03:28:53] <c4017w> What's the most succinct way to create a key deep in a dict where the higher levels may not exist?
[03:28:58] <graingert> jim87: you should pass a Channel into the widget then subscribe from the Channel in a task in your qt app
[03:29:01] <graingert> c4017w: glom
[03:29:11] <jim87> graingert: good point
[03:29:40] <c4017w> graingert, any built in way?
[03:30:09] <c4017w> Other than manually checking and creating each level
[03:32:46] <graingert> no just use glom
[03:33:26] <c4017w> ok. I'll just do it manually since I only have to add a single key. Not worth pulling in a whole library for that
[03:34:05] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[03:37:34] *** Joins: female_student_4 (~female_st@82-132-212-109.dab.02.net)
[03:39:32] *** Quits: agumonke` (~user@88.160.31.174) (Ping timeout: 250 seconds)
[03:39:37] *** Joins: Wulf4 (~Wulf@user/wulf)
[03:40:58] *** Joins: drincruz (~drincruz@ool-44c748be.dyn.optonline.net)
[03:43:20] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 272 seconds)
[03:43:20] *** Wulf4 is now known as Wulf
[03:44:14] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 245 seconds)
[03:45:47] *** Quits: drincruz (~drincruz@ool-44c748be.dyn.optonline.net) (Ping timeout: 258 seconds)
[03:46:49] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2-rc1)
[03:47:33] *** Joins: blackleitus (~blackleit@189.195.192.244)
[03:47:42] <blackleitus> How do I start coding my first big platform? (MVP ai) I have already my homework whitepapers, related work, and more, but how do I start it from scratch? to choose the database, stack tech , language, and also the features to code first than others
[03:48:35] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:49:05] <arahael> blackleitus: i don't think anybody really knows ;)
[03:49:49] <blackleitus> well stack yeah it can be tricky, but the last part?
[03:49:56] <blackleitus> +arahael,
[03:50:29] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[03:50:50] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-8c0a-00e4-95e5-c567.res6.spectrum.com) (Read error: Connection reset by peer)
[03:51:18] <arahael> blackleitus: broadly, you can do top-down (start with the ui), or bottoms-up (start with the backend).  again, there's nothing definitive.
[03:52:30] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (Ping timeout: 264 seconds)
[03:52:32] *** Quits: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 250 seconds)
[03:53:42] <blackleitus> I prefer going to backend since it's the full logic , but how do I know which features to code first than others?
[03:55:33] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-1509-6b3d-343f-7851.res6.spectrum.com) (Quit: jarthur)
[03:57:39] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[03:57:59] *** Quits: cul8r (~cul8r@2601:8c3:4000:b0d0::f323) (Ping timeout: 245 seconds)
[03:59:48] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[03:59:49] *** Quits: Ivyy (~Ivyy@2001:a61:13f0:c401:aaad:8747:f950:e29) (Remote host closed the connection)
[04:01:16] *** Parts: sm[m] (~sm@plaintextaccounting/sm) ()
[04:02:32] *** Joins: dsl (~dsl@ppp59-167-120-76.static.internode.on.net)
[04:02:33] *** Joins: bigRoo (~user@130.56.27.178)
[04:03:38] *** Joins: ssbr (~ssbr@2620:15c:10f:203:bb1d:1113:47e5:83b3)
[04:04:23] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[04:06:00] *** Quits: rcm888 (~u1@93.190.204.253) (Quit: Leaving)
[04:08:04] *** Quits: qpdb (~qpdb@user/qpdb) (Quit: WeeChat 3.1)
[04:10:53] <cryocaustik> can anyone suggest any tools/docs on stress testing webrtc video meetings?
[04:10:56] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[04:12:54] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 250 seconds)
[04:15:41] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 258 seconds)
[04:17:59] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (Ping timeout: 258 seconds)
[04:19:31] *** Joins: xkuru (~xkuru@user/xkuru)
[04:24:42] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.1)
[04:26:57] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[04:29:35] *** Joins: leduyquang753 (~leduyquan@27.73.61.122)
[04:29:46] *** Quits: wyclif (~wyclif@user/wyclif) (Remote host closed the connection)
[04:30:18] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[04:30:33] *** Quits: derelict (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com) (Quit: WeeChat 3.1)
[04:30:38] *** Quits: cthulchu (~Cthulchu@195.66.198.226) (Ping timeout: 258 seconds)
[04:31:53] <sm_> blackleitus: think about your goals with this project (and write them down). That'll help
[04:32:02] *** sm_ is now known as sm
[04:32:58] *** Joins: metah4ck3r (~meta@154.6.21.42)
[04:33:31] *** Quits: metah4ck3r (~meta@154.6.21.42) (Changing host)
[04:33:31] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[04:33:47] <sm> do you want to serve certain users - which ones, what are their most urgent needs (that you could deliver first ?) or do you want to explore technologies, practice your craft - what are the fun parts, the educational parts, etc ?
[04:34:01] *** Quits: FluffyMask (~FluffyMas@user/fluffymask) (Quit: WeeChat 2.9)
[04:34:13] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 252 seconds)
[04:34:27] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Client Quit)
[04:35:11] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[04:36:42] *** Joins: CombatVet (~c4@user/combatvet)
[04:38:05] *** Quits: frostschutz (~frostschu@2a01:c22:d487:c600:a7c9:233d:6768:290b) (Remote host closed the connection)
[04:38:25] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:40:02] *** Quits: Pleiades (~admin@193.254.47.212) (Quit: WeeChat 3.0)
[04:41:24] *** Joins: agumonke` (~user@88.163.231.79)
[04:44:03] *** Joins: leo_song (~leo_song@1.156.61.81)
[04:44:06] *** Joins: vimart (~vimart@148.252.129.124)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:48:37] *** Quits: agumonke` (~user@88.163.231.79) (Read error: Connection reset by peer)
[04:48:39] *** Parts: gh0s1 (~gh0s1@user/gh0s1) (WeeChat 3.1)
[04:48:56] *** Joins: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[04:51:05] *** Joins: agumonke` (~user@88.163.231.79)
[04:52:49] *** Quits: zeenk (~zeenk@2a02:2f04:a310:b600:b098:bf18:df4d:4c41) (Quit: Konversation terminated!)
[04:53:39] *** Quits: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 252 seconds)
[04:57:54] *** Quits: female_student_4 (~female_st@82-132-212-109.dab.02.net) (Quit: Client closed)
[04:59:35] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[04:59:41] *** Joins: derelict (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com)
[05:00:06] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[05:01:17] *** Quits: jim87 (~gfurlan@2001:b07:5d37:f91e:bbde:5043:a034:b725) (Ping timeout: 272 seconds)
[05:01:43] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[05:06:05] <sybariten> This is maybe nearly impossible to answer, but i'll give it a shot as a question: if i've downloaded a script (a Flask app actually) from a web site which is presented as finished, so we know it was working at some point in time, but the script contains the line 'print "hello there"' (so, a print without parenthesis) .... does that tell me something specific?
[05:06:23] *** Quits: _till_ (~till@user/till/x-8616149) (Ping timeout: 252 seconds)
[05:06:24] <sybariten> the print statement (among many other things maybe) does ofcourse cause my python to cough
[05:07:17] <nedbat> sybariten: that says that it's a Python 2 program
[05:07:33] *** Joins: nbao (~nbao@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09)
[05:08:29] *** nepeat_ is now known as nepeat
[05:08:58] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 258 seconds)
[05:09:32] *** Joins: wyclif (~wyclif@user/wyclif)
[05:10:13] <sybariten> nedbat: a-ha! I almost suspected something like that. I'm on Ubuntu 18, with python 3.6 . Do you think i can also run python 2 ? Can venv help me with these things?
[05:10:47] <nedbat> sybariten: you can install python2 on ubuntu18
[05:11:02] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[05:11:26] <sybariten> nedbat: okay i'll try. Thank you!
[05:11:40] *** Joins: xkuru (~xkuru@user/xkuru)
[05:11:42] <sybariten> Very generally speaing, is it a hassle to migrate scripts like this from py2 to py3 ?
[05:12:06] <nedbat> sybariten: it might not be hard. it depends what it's doing
[05:12:51] <sybariten> Gotcha
[05:13:15] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[05:15:29] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 258 seconds)
[05:15:52] *** Quits: onryo (~onryo@user/onryo) (Ping timeout: 258 seconds)
[05:16:29] *** Joins: onryo (~onryo@user/onryo)
[05:16:45] *** Joins: darksun (~darksun@user/darksun)
[05:17:15] *** Joins: heco (~redrum@user/redrum88)
[05:19:42] *** Quits: vimart (~vimart@148.252.129.124) (Ping timeout: 258 seconds)
[05:21:12] *** Joins: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[05:21:48] *** Joins: RoyK (~roy@user/royk)
[05:22:15] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[05:22:52] *** Quits: bigRoo (~user@130.56.27.178) (Remote host closed the connection)
[05:23:03] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Quit: fjmorazan)
[05:23:45] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[05:24:25] *** Joins: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net)
[05:26:23] *** Joins: qxt (~onryo@user/onryo)
[05:26:39] *** Quits: onryo (~onryo@user/onryo) (Ping timeout: 252 seconds)
[05:26:39] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 252 seconds)
[05:26:40] *** Joins: mambang (~mambang@user/mambang)
[05:28:08] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[05:28:50] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[05:30:23] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:31:04] *** Quits: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea) (Quit: WeeChat 3.1)
[05:31:16] *** Joins: raxor2k (~raxor2k@7.221.181.62.in-addr.dgcsystems.net)
[05:31:22] *** Quits: MikZyth (~MikZyth@188.65.243.35) (Quit: WeeChat 3.1)
[05:31:31] <graingert> sybariten: modernize and pyupgrade help
[05:32:31] <raxor2k> I added a function to my python script to write lines to csv. Now the issue is that my docker container refreshes/uploads itself automatically when there are changes in file. So when new lines are added to csv, the docker container stops and refreshes. How can i add this csv file outside the container? i tried adding "../" before the name of file
[05:32:39] *** Joins: gr33n7001 (~gr33n7007@user/gr33n7007h)
[05:32:42] *** Quits: ponadm_ (pony@gateway/vpn/protonvpn/ponadm) (Ping timeout: 252 seconds)
[05:33:29] <grym> raxor2k: `docker run -v /some/host/full/path:/some/internal/path:rw ...`
[05:33:40] *** Joins: darksun (~darksun@user/darksun)
[05:33:49] <grym> then write to /some/internal/path/foo.csv
[05:34:39] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 258 seconds)
[05:34:48] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Quit: Bye)
[05:34:54] *** Joins: vlm (~vlm@user/vlm)
[05:35:29] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.1)
[05:35:45] <raxor2k> grym: but the writing itself happens from inside the python script.?
[05:35:46] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[05:35:52] <raxor2k> so why do i need that command?
[05:36:39] <grym> raxor2k: so that you write it outside the container, and thus don't perturb the layer?
[05:36:51] <grym> presumably you're writing it because you want that data later
[05:37:03] <grym> you could also make a volume
[05:37:11] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[05:37:23] <raxor2k> grym: but i still want to be able to refresh the docker container everytime i update a new python file :)
[05:37:35] <grym> ok
[05:37:38] <raxor2k> grym: here is how my docker command run looks like: https://bpa.st/F74Q
[05:38:12] *** Quits: xkuru (~xkuru@user/xkuru) (Ping timeout: 252 seconds)
[05:38:29] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 258 seconds)
[05:38:42] <grym> raxor2k: and what do you want to do with this csv
[05:39:14] <raxor2k> inside the project a "test.csv" file is created
[05:39:20] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[05:39:24] <raxor2k> and i want one of the python scripts inside the folder to write to this csv
[05:39:38] <raxor2k> without...refreshing..the..container
[05:39:51] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 252 seconds)
[05:40:06] <raxor2k> if that means i need to move the csv file outside the container than fine, but i need to know how
[05:40:12] <grym> i just told you how
[05:40:18] <grym> two ways, even
[05:40:23] <grym> use a bind mount, or make a volume
[05:41:30] *** Quits: duso (~duso@pa49-197-12-252.pa.qld.optusnet.com.au) (Ping timeout: 252 seconds)
[05:42:47] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Client Quit)
[05:44:30] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[05:44:47] <raxor2k> I am already using volume, aint i?
[05:45:04] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[05:46:14] <grym> use another one
[05:46:21] <grym> you can use any number of them you like
[05:46:32] *** Quits: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:48:23] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:48:51] *** Quits: cloudeng (~cloudeng@136.56.42.219) (Read error: Connection reset by peer)
[05:49:17] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[05:52:01] *** Joins: KindOne (kindone@user/kindone)
[05:52:30] <raxor2k> grym: ok bos
[05:54:01] *** Quits: Betal (~Beta@user/betal) (Quit: WeeChat 3.1)
[05:58:59] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Quit: Bye)
[06:00:58] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[06:02:40] *** Quits: abraxas (~abraxas@2600:8805:c880:3:c7fe:fc8e:f2cc:8056) (Quit: abraxas)
[06:03:05] <raxor2k> grym : can i do something like this? https://bpa.st/KMPA
[06:03:09] <raxor2k> since u said i can create multiple ones
[06:03:51] *** Joins: Betal (~Beta@user/betal)
[06:03:55] <grym> raxor2k: i don't think you can do that
[06:04:12] <grym> i don't think you can -v /foo:/bar -v /foo:/baz
[06:04:31] *** Quits: nyah (~nyah@90.221.186.180) (Ping timeout: 264 seconds)
[06:04:39] <grym> i have no idea if this is sane or not but i usually use /opt/data or something inside a container
[06:07:19] <raxor2k> grym : but you said some minutes ago i can create multiple volumes ?
[06:08:44] <grym> yes
[06:08:48] <grym> that's certainly true
[06:09:07] <grym> but you usually -v /foo:/bar -v /otherfoo:/baz
[06:09:32] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[06:09:34] <grym> (it might work! i'm not sure, and i don't have the docs open)
[06:11:00] *** Joins: duso (~duso@130.102.13.110)
[06:12:18] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[06:13:43] *** Joins: gvsa123 (~gvsa123@d23-17-234-3.abhsia.telus.net)
[06:14:01] *** Joins: _till_ (~till@user/till/x-8616149)
[06:14:29] *** Joins: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net)
[06:14:37] <raxor2k> hmm.. im getting the exception : "this is missing: [Errno 2] No such file or directory: '/i_want_my_CSV_inside_here/sensor_data_excel.csv'"
[06:14:48] *** Quits: gvsa123 (~gvsa123@d23-17-234-3.abhsia.telus.net) (Quit: Leaving)
[06:16:06] *** Quits: ssbr (~ssbr@2620:15c:10f:203:bb1d:1113:47e5:83b3) (Remote host closed the connection)
[06:16:31] *** Joins: ssbr (~ssbr@2620:15c:10f:203:919a:fe81:9711:d358)
[06:16:41] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[06:17:58] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 258 seconds)
[06:21:19] *** Quits: ssbr (~ssbr@2620:15c:10f:203:919a:fe81:9711:d358) (Ping timeout: 245 seconds)
[06:23:50] *** Joins: gvsa123 (~gvsa123@d23-17-234-3.abhsia.telus.net)
[06:26:59] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[06:27:57] *** Quits: gvsa123 (~gvsa123@d23-17-234-3.abhsia.telus.net) (Client Quit)
[06:28:52] *** Joins: ashwinvis (~avmo@user/ashwinvis)
[06:29:36] *** Joins: gvsa123 (~gvsa123@d23-17-234-3.abhsia.telus.net)
[06:30:20] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Quit: leaving)
[06:30:32] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[06:30:59] *** Joins: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net)
[06:32:44] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[06:35:34] *** Joins: unyu (~pyon@user/pyon)
[06:35:59] *** Quits: raxor2k (~raxor2k@7.221.181.62.in-addr.dgcsystems.net) (Ping timeout: 258 seconds)
[06:36:24] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:36:24] *** FinnElija is now known as Guest2126
[06:36:24] *** finn_elija is now known as FinnElija
[06:37:09] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Quit: leaving)
[06:37:19] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[06:39:09] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Client Quit)
[06:39:26] *** Quits: Guest2126 (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 258 seconds)
[06:39:36] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[06:39:39] *** Quits: Northwoods (~Northwood@223.130.30.189) (Ping timeout: 245 seconds)
[06:41:15] *** Quits: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[06:41:59] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Client Quit)
[06:42:18] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[06:44:19] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (Quit: WeeChat 3.1)
[06:45:30] *** Joins: cul8r (~cul8r@2601:8c3:4000:b0d0::8c90)
[06:48:28] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[06:49:08] *** Joins: fcjsx (~fcjsx@2800:a4:83a:a900:d611:4cb2:8adf:7c6e)
[06:49:21] *** Quits: fcjsx (~fcjsx@2800:a4:83a:a900:d611:4cb2:8adf:7c6e) (Remote host closed the connection)
[06:57:02] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Quit: leaving)
[06:57:19] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[06:57:31] *** Joins: wei2912 (~wei2912@112.199.250.21)
[06:59:18] *** Quits: Thanatos (~Thanatos@102.89.0.110) (Ping timeout: 250 seconds)
[07:00:27] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[07:01:51] *** Quits: nattiestnate (~nate@36.70.194.182) (Quit: WeeChat 3.1)
[07:11:07] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 264 seconds)
[07:12:40] *** Quits: dalan (~dalan@110-175-186-185.tpgi.com.au) (Quit: dalan)
[07:13:47] *** Joins: Mrokii_ (~mrokii@p2e572db4.dip0.t-ipconnect.de)
[07:15:30] *** Joins: a6a45081-2b83 (~aditya@223.226.227.160)
[07:15:46] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 250 seconds)
[07:16:37] *** Quits: Mrokii (~mrokii@p2e5723b5.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[07:24:11] *** Joins: dalan (~dalan@110-175-186-185.tpgi.com.au)
[07:24:29] *** Quits: dalan (~dalan@110-175-186-185.tpgi.com.au) (Client Quit)
[07:25:06] *** Joins: dalan (~dalan@110-175-186-185.tpgi.com.au)
[07:27:28] *** Quits: a6a45081-2b83 (~aditya@223.226.227.160) (Quit: Konversation terminated!)
[07:27:30] <samian> Say you have a program. You have a debug boolean that when on saves stuff to text files you can look at for debug purpose.  How would you handle the save path?   Relative to current working directly?  Relative to the directory of "__main__"? Relative to the directory of the source code file? Any other way?
[07:27:48] <samian> Isn't hardcoding paths considered unprofessional?
[07:30:22] *** Quits: binarymutt (~binarymut@c-98-194-153-108.hsd1.tx.comcast.net) (Quit: Quitted)
[07:31:08] *** Quits: pavelow (~pavelow@opticalchimp.com) (Quit: No Ping reply in 180 seconds.)
[07:32:00] *** Quits: adder` (~adder@user/adder) (Remote host closed the connection)
[07:32:26] *** Joins: adder` (~adder@user/adder)
[07:33:10] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Quit: leaving)
[07:33:20] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[07:33:22] <ablegreen> i'm confused...why is In [6]: np.argsort([3,1,2])
[07:33:31] <ablegreen> giving me array([1, 2, 0])?
[07:34:02] <ablegreen> shouldn't it be [2,0,1]?
[07:34:24] *** Joins: darksun (~darksun@user/darksun)
[07:35:42] <ablegreen> nevermind, i get it
[07:36:50] *** Quits: ewdwasright (~ewdwasrig@108.210.81.181) (Quit: Leaving)
[07:36:52] <cul8r> samian: i would use pathlib to manage the path. You can get users home dir or absolute path of cwd and parents etc.
[07:37:41] *** Joins: axum (~axum@136.33.230.34)
[07:39:18] <cul8r> It just depends on where you want to put the file ultimately. I wouldnt put it relative to __main__ though, I think its better to not pollute(?) code directory. Just my 2 cents.
[07:40:02] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 250 seconds)
[07:44:41] *** Quits: Codaraxis (~Codaraxis@89.45.7.142) (Remote host closed the connection)
[07:44:59] *** Joins: Codaraxis (~Codaraxis@89.45.7.142)
[07:45:36] *** Quits: ratelius (ratelius@gateway/vpn/protonvpn/ratelius) (Remote host closed the connection)
[07:46:00] *** Joins: ratelius (ratelius@gateway/vpn/protonvpn/ratelius)
[07:48:24] *** Joins: fflam_ (~mdt@ip70-179-20-127.sd.sd.cox.net)
[07:49:10] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[07:52:49] *** Joins: Midnite (~human@user/midnightlantern)
[07:52:59] *** Quits: heco (~redrum@user/redrum88) (Ping timeout: 245 seconds)
[07:54:51] *** Joins: nathanjell (~nathanjel@node-1w7jra246e16cl17bbe5uwzop.ipv6.telus.net)
[07:56:34] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[07:58:36] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Quit: leaving)
[07:58:47] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[07:59:23] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[08:00:24] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[08:00:37] *** Lord_of_Life_ is now known as Lord_of_Life
[08:00:40] *** Quits: DaNeenjah (~jake@adsl-74-230-10-210.hsv.bellsouth.net) (Quit: WeeChat 3.1)
[08:02:15] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[08:02:15] *** Quits: nathanjell (~nathanjel@node-1w7jra246e16cl17bbe5uwzop.ipv6.telus.net) (Read error: Connection reset by peer)
[08:02:24] *** Quits: qxt (~onryo@user/onryo) (Quit: Leaving)
[08:02:53] *** Joins: nathanjell (~nathanjel@node-1w7jra246e16cl17bbe5uwzop.ipv6.telus.net)
[08:03:08] *** Quits: nathanjell (~nathanjel@node-1w7jra246e16cl17bbe5uwzop.ipv6.telus.net) (Client Quit)
[08:03:24] *** Joins: nathanjell (~nathanjel@node-1w7jra246e16cl17bbe5uwzop.ipv6.telus.net)
[08:03:38] *** Joins: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net)
[08:03:41] *** Quits: axum (~axum@136.33.230.34) (Quit: Microsoft Linux has crashed and would like to close.)
[08:03:53] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Quit: leaving)
[08:04:03] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[08:04:50] *** Quits: nathanjell (~nathanjel@node-1w7jra246e16cl17bbe5uwzop.ipv6.telus.net) (Client Quit)
[08:05:36] *** Quits: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 250 seconds)
[08:07:45] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:08:10] *** Quits: BillyZane2 (~BillyZane@193.160.245.86) (Remote host closed the connection)
[08:08:36] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: puadxtub)
[08:08:40] *** Joins: BillyZane2 (~BillyZane@193.160.245.86)
[08:14:48] *** Joins: bigRoo (~user@131.236.54.84)
[08:16:00] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Ping timeout: 250 seconds)
[08:17:46] *** Quits: ashwinvis (~avmo@user/ashwinvis) (Quit: Konversation terminated!)
[08:18:33] *** Joins: SebastianM (~seba@user/sebastianm)
[08:19:58] <sed> Hi can someone help me convert what looks like javascript code to python? https://webxtutor.com/counterfeit-currency-ext-Jss74taRM8LwhlePGdCF
[08:23:13] *** Quits: gvsa123 (~gvsa123@d23-17-234-3.abhsia.telus.net) (Quit: Leaving)
[08:24:12] *** Joins: mikkel (~mike@208.110.120.167)
[08:24:29] <samian> cul8r, not pulluting the code repo! Super great point!!!!
[08:25:16] <samian> I want to ask around. I'm curious what people's take on this is
[08:25:34] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[08:26:04] *** Quits: duso (~duso@130.102.13.110) (Quit: leaving)
[08:27:41] <Midnite> can someone please help me find the error in the following expression:
[08:27:45] <Midnite> ((number % (10 ^ digit)) - (number % (10 ^ (digit - 1)))) / 10 ^ (digit - 1)
[08:28:41] *** Joins: pbryan (~pbryan@S010600306d111fac.vf.shawcable.net)
[08:30:12] <leduyquang753> ^ is bitwise XOR. You probably want **.
[08:31:04] *** Joins: ente_ (~ente@p200300dc5f4037016fbea028d47fea8e.dip0.t-ipconnect.de)
[08:31:14] <Midnite> >_>
[08:31:19] <Midnite> >__________>
[08:31:25] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[08:31:32] <Midnite> thanks. it's been a long day.
[08:32:33] *** Quits: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.1)
[08:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:00] *** Quits: radu242 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[08:37:30] *** Quits: adder` (~adder@user/adder) (Ping timeout: 258 seconds)
[08:39:28] *** Quits: Midnite (~human@user/midnightlantern) (Quit: switching clients)
[08:39:56] *** Joins: radu242 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net)
[08:40:12] *** Quits: qlixed (~qlixed@2800:810:471:2f8::1b7) (Ping timeout: 244 seconds)
[08:42:50] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[08:42:52] *** Quits: theterg (~theterg@pool-141-155-7-155.nycmny.fios.verizon.net) (Ping timeout: 258 seconds)
[08:44:00] *** Joins: ericlee (~ericlee@2601:647:4681:3420::1)
[08:44:02] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:44:20] <ericlee> Hi, when I use aiohttp to do get and if I don't await the response body and just print response status, where does the response body go?
[08:46:11] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[08:49:43] *** Joins: adder` (~adder@user/adder)
[08:53:18] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:1883:e705:a966:125a) (Read error: Connection reset by peer)
[08:53:39] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[08:54:20] *** Joins: xcm_ (~xcm@user/xcm)
[08:54:44] *** Joins: withere__ (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[08:54:58] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[08:55:20] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Killed (NickServ (GHOST command used by dodobrain_!~dodobrain@exchange.mipac.com.au)))
[08:55:38] *** Joins: Geronimo2 (~Geronimo@user/geronimo)
[08:55:57] *** Joins: rnm (~mambang@user/mambang)
[08:56:03] *** Joins: radu2428 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net)
[08:56:35] *** Joins: philipp64|work_ (~philipp64@174.27.8.12)
[08:56:40] *** Joins: drew` (~drew@user/drew)
[08:56:45] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[08:56:45] *** Joins: gbear605_ (~gbear605@user/gbear605)
[08:57:11] *** Joins: riz (~BillyZane@193.160.245.86)
[08:57:13] *** Joins: decimuscorvinus_ (~jimmy@136.37.105.112)
[08:57:25] *** Joins: adder`` (~adder@user/adder)
[08:58:03] *** Joins: doc|home (~doc@user/doc)
[08:58:03] *** Joins: ionface (~ionface@user/ionface)
[08:58:12] *** Joins: cheater1__ (~Username@user/cheater)
[08:58:59] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[08:59:06] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[08:59:06] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (strontium.libera.chat (Nickname regained by services)))
[08:59:06] *** finn_elija is now known as FinnElija
[08:59:12] *** Joins: f8e4_ (~user@159.89.21.45)
[08:59:12] *** Joins: tg_ (~tg@rockylinux/infra/tg)
[08:59:15] *** Joins: Beta (~Beta@user/betal)
[08:59:27] *** Joins: blackop_ (~ocloud@user/blackop)
[08:59:33] *** Joins: andrewSC_ (~andrewSC@95.179.141.168)
[08:59:36] *** Joins: txtsd1 (~txtsd@user/txtsd)
[09:00:06] *** Quits: samian (~sami@174.27.107.153) (Killed (NickServ (GHOST command used by sami_)))
[09:00:24] *** Joins: Samian (~sami@174.27.107.153)
[09:00:41] *** Quits: derelict (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com) (Ping timeout: 272 seconds)
[09:01:39] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Remote host closed the connection)
[09:01:48] *** Quits: rnm (~mambang@user/mambang) (Read error: Connection reset by peer)
[09:01:48] *** Joins: Tas-sos (~Tas-sos@ppp079167199000.access.hol.gr)
[09:02:07] *** Joins: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[09:02:19] *** Joins: pathos_ (~pathos@169-1-247-122.ip.afrihost.co.za)
[09:02:42] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[09:03:58] *** Quits: adder` (~adder@user/adder) (*.net *.split)
[09:03:58] *** Quits: radu242 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net) (*.net *.split)
[09:03:58] *** Quits: BillyZane2 (~BillyZane@193.160.245.86) (*.net *.split)
[09:03:58] *** Quits: Mrokii_ (~mrokii@p2e572db4.dip0.t-ipconnect.de) (*.net *.split)
[09:03:58] *** Quits: Betal (~Beta@user/betal) (*.net *.split)
[09:03:58] *** Quits: gr33n7001 (~gr33n7007@user/gr33n7007h) (*.net *.split)
[09:03:58] *** Quits: mambang (~mambang@user/mambang) (*.net *.split)
[09:03:58] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (*.net *.split)
[09:03:58] *** Quits: leduyquang753 (~leduyquan@27.73.61.122) (*.net *.split)
[09:03:58] *** Quits: blackleitus (~blackleit@189.195.192.244) (*.net *.split)
[09:03:58] *** Quits: c4017w (~c4017@209.52.68.8) (*.net *.split)
[09:03:58] *** Quits: viktorivan (~ivan@187.223.103.108) (*.net *.split)
[09:03:58] *** Quits: ionface_ (~ionface@user/ionface) (*.net *.split)
[09:03:58] *** Quits: xsperry (~as@user/xsperry) (*.net *.split)
[09:03:58] *** Quits: jeho (~jehoshaph@user/jehoshaphat) (*.net *.split)
[09:03:58] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (*.net *.split)
[09:03:58] *** Quits: mesaboogie (~mesaboogi@user/mesaboogie) (*.net *.split)
[09:03:58] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (*.net *.split)
[09:03:58] *** Quits: salpynx (~salpynx@121.73.84.248) (*.net *.split)
[09:03:58] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (*.net *.split)
[09:03:58] *** Quits: xheimlich (~xheimlich@179.218.1.150) (*.net *.split)
[09:03:58] *** Quits: InPhase (~InPhase@openscad/inphase) (*.net *.split)
[09:03:58] *** Quits: drew (~drew@user/drew) (*.net *.split)
[09:03:58] *** Quits: xcm (~xcm@user/xcm) (*.net *.split)
[09:03:58] *** Quits: doc (~doc@user/doc) (*.net *.split)
[09:03:58] *** Quits: gbear605 (~gbear605@user/gbear605) (*.net *.split)
[09:03:58] *** Quits: andrewSC (~andrewSC@95.179.141.168) (*.net *.split)
[09:03:58] *** Quits: nanonyme (~nanonyme@kapsi.fi) (*.net *.split)
[09:03:58] *** Quits: habnabit_ (~habnabit@python/site-packages/habnabit) (*.net *.split)
[09:03:58] *** Quits: fuz (~fuz@user/fuz) (*.net *.split)
[09:03:58] *** Quits: RoyK (~roy@user/royk) (*.net *.split)
[09:03:58] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (*.net *.split)
[09:03:58] *** Quits: Vision (~Vision@047-034-097-066.res.spectrum.com) (*.net *.split)
[09:03:58] *** Quits: cheater (~Username@user/cheater) (*.net *.split)
[09:03:58] *** Quits: Geronimo (~Geronimo@user/geronimo) (*.net *.split)
[09:03:58] *** Quits: kickingvegas (~cchoi@c-24-130-175-68.hsd1.ca.comcast.net) (*.net *.split)
[09:03:58] *** Quits: tg (~tg@rockylinux/infra/tg) (*.net *.split)
[09:03:58] *** Quits: mike18 (~geri@71-220-52-187.mpls.qwest.net) (*.net *.split)
[09:03:58] *** Quits: txtsd (~txtsd@user/txtsd) (*.net *.split)
[09:03:58] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[09:03:58] *** Quits: iomari891 (~iomari891@105.112.138.38) (*.net *.split)
[09:03:58] *** Quits: blackop (~ocloud@user/blackop) (*.net *.split)
[09:03:58] *** Quits: somlis (~somlis@user/somlis) (*.net *.split)
[09:03:58] *** Quits: nigelb (~nigel@zeus.nigelb.me) (*.net *.split)
[09:03:58] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (*.net *.split)
[09:03:58] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (*.net *.split)
[09:03:58] *** Quits: philipp64|work (~philipp64@174.27.8.12) (*.net *.split)
[09:03:58] *** Quits: f8e4 (~user@159.89.21.45) (*.net *.split)
[09:03:58] *** drew` is now known as drew
[09:03:58] *** philipp64|work_ is now known as philipp64|work
[09:03:59] *** radu2428 is now known as radu242
[09:03:59] *** Geronimo2 is now known as Geronimo
[09:04:02] *** cheater1__ is now known as cheater
[09:04:09] *** Joins: nigelb (~nigel@zeus.nigelb.me)
[09:04:32] *** Joins: InPhase (~InPhase@openscad/inphase)
[09:04:56] *** Joins: euouae (~user@user/euouae)
[09:04:59] <euouae> Hello
[09:05:00] *** Joins: leduyquang753 (~leduyquan@27.73.61.122)
[09:05:18] <euouae> If I have a class with an attribute Dict[str, (str, str)] how can I document this (either in documentation or with types in code) better?
[09:05:38] <euouae> I want the 'key' to be called foo, the first value bar and the second value baz, for example
[09:05:50] *** Joins: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net)
[09:05:58] <euouae> So far the only thing I've thought is to use a named tuple for the tuple
[09:06:10] *** Parts: leduyquang753 (~leduyquan@27.73.61.122) ()
[09:06:45] *** Quits: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 244 seconds)
[09:06:53] *** Joins: leduyquang753 (~leduyquan@27.73.61.122)
[09:06:55] <euouae> Another question is this: I have a Foo and a Bar classes in foo.py. Foo uses Bar, but the users only need Foo. How should I structure the files so that users don't get access to Bar?
[09:08:30] *** Quits: leduyquang753 (~leduyquan@27.73.61.122) (Changing host)
[09:08:30] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[09:10:15] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[09:10:24] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[09:11:09] *** Joins: mesaboogie (~mesaboogi@user/mesaboogie)
[09:11:19] *** Joins: viktorivan (~ivan@187.223.103.108)
[09:11:21] *** Quits: mesaboogie (~mesaboogi@user/mesaboogie) (Client Quit)
[09:12:04] *** Joins: Mrokii_ (~mrokii@p2e572db4.dip0.t-ipconnect.de)
[09:12:09] *** Joins: nanonyme (nanonyme@kapsi.fi)
[09:14:52] *** Joins: mesaboogie (mesaboogie@user/mesaboogie)
[09:17:24] *** tg_ is now known as tg
[09:19:30] *** Quits: dude-x (~textual@pool-100-1-65-112.nwrknj.fios.verizon.net) (Ping timeout: 264 seconds)
[09:19:41] *** Quits: JavaBean (~JavaBean@user/javabean) (Read error: Connection timed out)
[09:26:28] *** Quits: cul8r (~cul8r@2601:8c3:4000:b0d0::8c90) (Quit: abducted by aliens)
[09:27:53] *** Joins: maxking (~maxking@54.11.83.34.bc.googleusercontent.com)
[09:30:05] <Tashtari> euouae: You could name the Bar class _Bar; that won't prevent others from using it, but by convention it'll mark it as private and signal that users shouldn't use it.
[09:30:06] *** Joins: stranac (~stranac@195.29.239.126)
[09:30:10] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[09:30:49] <euouae> Tashtari: is it also possible to move Bar into a separate module that is not visible to the user in the documentation?
[09:31:21] <euouae> Tashtari: i.e. have foo.py import bar, whereas users are expected to import foo?
[09:31:48] <Tashtari> You could do that, but they'd still be able to access Bar at foo.bar.Bar
[09:33:23] <euouae> Oh, I wasn't aware of that, thanks
[09:35:52] *** Joins: darksun (~darksun@user/darksun)
[09:38:47] *** Quits: fflam_ (~mdt@ip70-179-20-127.sd.sd.cox.net) (Ping timeout: 244 seconds)
[09:38:59] *** Quits: SebastianM (~seba@user/sebastianm) (Quit: Bye)
[09:40:07] *** Joins: derelict (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com)
[09:41:44] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 264 seconds)
[09:43:05] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[09:43:49] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (Ping timeout: 245 seconds)
[09:46:35] *** Quits: bigRoo (~user@131.236.54.84) (Remote host closed the connection)
[09:48:00] *** Quits: Geronimo (~Geronimo@user/geronimo) (Quit: Ping timeout (120 seconds))
[09:48:13] *** Joins: Geronimo (~Geronimo@user/geronimo)
[09:50:50] <euouae> How do you import multiple classes from a module?
[09:50:53] <euouae> from foo import Bar, Baz?
[09:50:54] *** Quits: viktorivan (~ivan@187.223.103.108) (Ping timeout: 245 seconds)
[09:52:24] *** Quits: Tas-sos (~Tas-sos@ppp079167199000.access.hol.gr) (Quit: leaving)
[09:56:18] *** Joins: viktorivan (~ivan@187.223.103.108)
[09:57:00] *** Quits: redgloboli (~redglobol@user/redgloboli) (Ping timeout: 265 seconds)
[09:57:15] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[09:58:42] *** Quits: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net) (Ping timeout: 250 seconds)
[09:59:28] *** Joins: redgloboli (~redglobol@user/redgloboli)
[10:01:14] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[10:02:21] <KirkMcDonald> euouae: This works, yes. Though generally I prefer `import foo` and then just referring to `foo.Bar` and `foo.Baz`.
[10:02:59] *** Joins: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[10:03:01] <euouae> KirkMcDonald: yeah but I like to do it in the unit tests
[10:03:09] <euouae> Maybe sloppy?
[10:03:25] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:d0f5:61cd:a702:9e08)
[10:03:57] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[10:04:13] *** Joins: salpynx (~salpynx@121.73.84.248)
[10:04:46] *** Quits: redgloboli (~redglobol@user/redgloboli) (Ping timeout: 250 seconds)
[10:05:12] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 250 seconds)
[10:05:13] <euouae> I'll keep it like that for now, I think it's OK
[10:07:03] *** Joins: dvx (~dvx@185.63.97.64)
[10:07:09] *** Quits: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 245 seconds)
[10:08:14] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 250 seconds)
[10:10:38] *** Joins: wyclif (~wyclif@user/wyclif)
[10:11:02] *** Joins: ssbr (~ssbr@c-174-61-157-141.hsd1.wa.comcast.net)
[10:12:39] *** Joins: mkv (~znc@ubuntu/member/m4v)
[10:14:55] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 245 seconds)
[10:14:56] *** mkv is now known as m4v
[10:15:14] *** Quits: fflam (~mdt@ip70-179-20-127.sd.sd.cox.net) (Quit: WeeChat 3.1)
[10:15:42] <ksynwa> I have an async/awaitable function that returns a list: `def get_repos(only_forks=False)`. I want to call it twice: `all_repos = get_repos(); forks = get_repos(only_forks=True)`.
[10:16:16] <ksynwa> How do I do this asynchronously? I think if I do `await all_repos...; await forks...;` it won't work.
[10:16:45] <ksynwa> I can see examples for calling functions asynchronously using async.gather() but I don't know how I would store return values in variables for this.
[10:17:31] <euouae> in asyncio?
[10:17:39] <ksynwa> Yes
[10:18:24] <euouae> So the question is about running f() and g() asynchronously and waiting for both of them to finish?
[10:19:46] <ksynwa> Yes
[10:19:48] <euouae> you can do (all_repos, forks) = await asyncio.gather(f(), g())
[10:19:59] <ksynwa> Ok thanks very much euouae
[10:20:02] <ksynwa> That makes sense
[10:20:32] *** Quits: zmt01 (~zmt00@user/zmt00) (Quit: Gone.)
[10:20:54] <euouae> ksynwa: np, this page may help https://docs.python.org/3/library/asyncio-api-index.html
[10:21:19] *** Quits: whaley (~whaley@066-169-090-170.res.spectrum.com) (Read error: Connection reset by peer)
[10:23:54] *** Joins: whaley (~whaley@066-169-090-170.res.spectrum.com)
[10:26:58] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[10:27:11] *** Joins: Lando-HoloNet (~Lando@user/lando-spacepimp)
[10:27:20] *** Quits: Codaraxis (~Codaraxis@89.45.7.142) (Read error: Connection reset by peer)
[10:27:32] *** Quits: Fluxx (~Fluxx@user/fluxx) (Read error: Connection reset by peer)
[10:27:51] *** Joins: Fluxx (~Fluxx@user/fluxx)
[10:28:15] *** Quits: digilink (~digilink@user/digilink) (Ping timeout: 245 seconds)
[10:29:04] *** Joins: Julian (~tos9@151.66.53.132)
[10:29:42] *** Quits: justm3 (~Username@86-91-250-105.opennet.kpn.net) (Ping timeout: 252 seconds)
[10:30:15] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 252 seconds)
[10:30:15] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Ping timeout: 252 seconds)
[10:30:16] *** Quits: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[10:30:16] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 252 seconds)
[10:30:34] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 272 seconds)
[10:32:31] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[10:32:44] *** Quits: dcaro (~dcaro@user/dcaro) (Remote host closed the connection)
[10:33:15] *** Quits: cisme_ (~cisme_@user/cisme/x-1186982) (Ping timeout: 265 seconds)
[10:34:35] *** Quits: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[10:34:39] *** Quits: sed (~sed@pool-100-7-53-231.rcmdva.fios.verizon.net) (Ping timeout: 245 seconds)
[10:35:09] *** Joins: dcaro (~dcaro@user/dcaro)
[10:35:21] *** Joins: digilink (~digilink@user/digilink)
[10:35:30] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:ea6f:38ff:fed4:3289)
[10:38:45] *** Joins: emerent_ (~quassel@p200300cd5703bb7fba27ebfffed28a59.dip0.t-ipconnect.de)
[10:38:45] *** Quits: emerent (~quassel@p200300cd5703bb3cba27ebfffed28a59.dip0.t-ipconnect.de) (Killed (zirconium.libera.chat (Nickname regained by services)))
[10:38:45] *** emerent_ is now known as emerent
[10:40:49] *** Joins: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net)
[10:41:55] *** Joins: Vonter (~Vonter@user/vonter)
[10:43:09] *** Joins: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net)
[10:44:50] *** Joins: bigRoo (~user@131.236.54.84)
[10:45:15] *** Joins: especial (~especial@cm-84.214.207.74.getinternet.no)
[10:46:18] *** Joins: jazzy2 (~jaziz@172.58.38.134)
[10:46:26] *** Joins: Crys (~Tiran@python/psf/tiran)
[10:48:43] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Ping timeout: 265 seconds)
[10:48:49] *** Quits: jazzy (~jaziz@2600:380:874b:26da:54d2:cacb:af5c:6b6c) (Ping timeout: 245 seconds)
[10:49:18] *** Joins: jazzy3 (~jaziz@2600:380:4547:d128:a1e2:2a56:7617:ad7e)
[10:49:19] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 252 seconds)
[10:49:49] *** Joins: CombatVet (~c4@user/combatvet)
[10:50:11] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:50:33] *** Joins: gusto (~Augustus@109.255.100.54)
[10:50:40] *** Joins: fflam_ (~mdt@ip70-179-20-127.sd.sd.cox.net)
[10:50:54] *** Joins: seednode (~seednode@user/seednode)
[10:52:21] <Jimmy2027> hi, the PIL package is polluting my log file with DEBUG level logs as descirbed here: https://github.com/camptocamp/pytest-odoo/issues/15 I tried to add warnings.filterwarnings(action='ignore', module='PIL') but the logs still appear in my logfile, does someone know why and how I can filter them out?
[10:52:35] <cvmn> is sys.* = os.sys.*?  e.g. if i import os, there is no need to import sys?
[10:53:18] *** Quits: jazzy2 (~jaziz@172.58.38.134) (Ping timeout: 250 seconds)
[10:53:53] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[10:55:15] *** Joins: manti7 (~manti7@176.10.104.94)
[10:56:03] *** Quits: Omega037 (~Omega037@047-024-168-024.res.spectrum.com) ()
[10:56:08] *** Joins: nichlas (nichlas@gateway/vpn/protonvpn/nichlas)
[10:56:22] <Crys> cvmn: yes, but don't do this. os.sys is not part of os' API.
[10:56:26] <Jimmy2027> or can I set the PIL logger to a level that is not written to the logfile?
[10:56:27] <raek> Jimmy2027: to me it seems like "warnings" and "logging" are unrelated builtin libraries. have you tried the setLevel on the logger object as suggesed in the issue?
[10:56:58] <cvmn> Crys: any reason it is included?
[10:57:05] <Crys> cvmn: modules are cached. Importing a module has almost zero cost when it is already imported.
[10:57:07] <Jimmy2027> raek: hmm yeah probably you are right, is there another level than DEBUG and INFO? both levels are written to my logfile
[10:57:09] <raek> if you use pytest, then you should be able to add the logging.getLogger('PIL').setLevel(logging.WARNING) line to a file called "conftest.py" to make it apply to all tests
[10:57:35] <Crys> cvmn: the os module does "import sys"
[10:57:50] <raek> Jimmy2027: yes, here's the levels: https://docs.python.org/3/howto/logging.html#logging-basic-tutorial
[10:58:01] <cvmn> Crys: because os internally needs sys.*?
[10:58:02] <raek> DEBUG, INFO, WARNING, ERROR, CRITICAL
[10:58:07] <Crys> cvmn: yes
[10:58:12] <cvmn> i see, thanks!
[10:58:19] <Jimmy2027> raek: ah great, thanks!
[10:58:23] *** Joins: pyeverything (~mona@c-66-31-107-137.hsd1.ma.comcast.net)
[10:58:27] <raek> Jimmy2027: so maybe try WARNING? (assuming it spams both DEBUG and INFO)
[10:58:51] *** Quits: fflam_ (~mdt@ip70-179-20-127.sd.sd.cox.net) (Ping timeout: 252 seconds)
[10:58:52] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[10:58:55] <pyeverything> hi, do you know what 759172  is in 2021-06-09 02:27:50.759172 in Tensorflow output? current time is 2:27
[10:59:16] <raek> pyeverything: decimals of seconds?
[10:59:20] <Crys> pyeverything: microseconds
[10:59:28] *** Quits: rama (~rama@2601:641:400:423:cc11:a08f:1c20:f2eb) (Remote host closed the connection)
[10:59:37] <pyeverything> Crys:  raek thanks interesting
[11:00:25] <pyeverything> also by any chance do you think my guess is correct that the code is stuck in some sort of IO reading from a file? since whenever i press CTL+C I see this https://github.com/tensorflow/tensorflow/issues/50139#issuecomment-857419021
[11:00:46] <pyeverything> also, does anyone know how to use Tensorflow profiler?
[11:01:06] <pyeverything> I really don't know how to fix the low GPU utilization problem in tensorflow
[11:01:07] <Jimmy2027> raek: yup, setting it to WARNING worked :)
[11:01:25] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 252 seconds)
[11:02:32] *** Joins: CombatVet (~c4@user/combatvet)
[11:03:24] *** Joins: kosh (~kosh@user/kosh)
[11:03:41] *** Joins: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[11:04:19] *** Joins: chele (~chele@user/chele)
[11:06:22] *** Joins: pagnol (~user@014198154145.ctinets.com)
[11:06:39] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[11:07:27] *** Quits: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[11:07:33] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Client Quit)
[11:08:10] *** Quits: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 244 seconds)
[11:08:11] *** Joins: dkmueller (~dkmueller@dynamic-095-115-042-075.95.115.pool.telefonica.de)
[11:08:24] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Ping timeout: 245 seconds)
[11:08:55] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[11:09:12] *** Quits: derelict (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com) (Ping timeout: 244 seconds)
[11:10:51] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[11:12:19] *** Joins: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net)
[11:12:49] *** Quits: nbao (~nbao@2804:14c:5bb8:9720:ae9e:17ff:fedf:3e09) (Quit: WeeChat 3.1)
[11:12:49] *** Quits: rbtEngrDude (~textual@wsip-66-210-249-144.ph.ph.cox.net) (Client Quit)
[11:15:21] *** Quits: Julian (~tos9@151.66.53.132) (Ping timeout: 252 seconds)
[11:18:03] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[11:20:56] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[11:21:22] *** Joins: Julian (~tos9@151.66.53.132)
[11:23:45] *** Joins: dme86 (~dan@user/dan86)
[11:27:13] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[11:27:31] *** Joins: fredrikhl (~fhl@myrsnipa.uio.no)
[11:29:44] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Ping timeout: 264 seconds)
[11:29:54] *** Joins: Meteorhead (~Meteorhea@165.225.205.20)
[11:31:25] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[11:32:08] *** Quits: Julian (~tos9@151.66.53.132) (Ping timeout: 264 seconds)
[11:33:16] *** Joins: kickingvegas (~cchoi@c-24-130-175-68.hsd1.ca.comcast.net)
[11:33:16] *** Joins: Julian (~tos9@151.66.53.132)
[11:34:03] *** Quits: kickingvegas (~cchoi@c-24-130-175-68.hsd1.ca.comcast.net) (Client Quit)
[11:34:57] *** Quits: pyeverything (~mona@c-66-31-107-137.hsd1.ma.comcast.net) (Quit: Leaving.)
[11:37:12] *** Quits: alissa (~ryan@hashbang/bdfl) (Excess Flood)
[11:37:42] *** Joins: darksun (~darksun@user/darksun)
[11:38:08] *** Quits: Julian (~tos9@151.66.53.132) (Ping timeout: 264 seconds)
[11:38:17] *** Joins: mexen (uid495612@user/mexen)
[11:38:21] *** Joins: alissa (~ryan@hashbang/bdfl)
[11:38:22] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[11:38:45] *** Quits: kmh (~kmh@p200300df5f2f6b008df4c6dd9f18a0d7.dip0.t-ipconnect.de) (Quit: Leaving)
[11:39:04] *** Quits: salpynx (~salpynx@121.73.84.248) (Quit: Connection closed)
[11:40:45] *** Quits: sale (~sale@ypocit.initech.link) (Ping timeout: 268 seconds)
[11:40:49] *** Quits: dtux (~dtux@107-131-127-0.lightspeed.sntcca.sbcglobal.net) (Quit: dtux)
[11:42:51] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[11:42:52] *** o is now known as niko
[11:44:48] *** Joins: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:a00f:8f9a:9ba9:ea00)
[11:45:29] *** Quits: viktorivan (~ivan@187.223.103.108) (Remote host closed the connection)
[11:45:35] *** Quits: bigRoo (~user@131.236.54.84) (Remote host closed the connection)
[11:47:10] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[11:48:01] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[11:49:49] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 252 seconds)
[11:50:36] *** Joins: dtux (~dtux@2600:1700:22f0:37bf:4b09:8b56:3c1e:c2e6)
[11:51:54] *** Joins: rendar (~rendar@user/rendar)
[11:52:45] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Ping timeout: 252 seconds)
[11:53:07] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[11:53:32] *** Quits: agumonke` (~user@88.163.231.79) (Ping timeout: 250 seconds)
[11:54:18] *** Quits: neibo (~neibo@54.red-83-61-64.dynamicip.rima-tde.net) (Quit: Lost terminal)
[11:56:00] *** Quits: shantaram (shan@user/shan) (Quit: https://shantaram.xyz)
[11:57:53] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.1)
[11:59:06] *** Joins: neibo (~neibo@54.red-83-61-64.dynamicip.rima-tde.net)
[11:59:32] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[12:01:23] *** Quits: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net) (Ping timeout: 272 seconds)
[12:02:40] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:04:38] *** Joins: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[12:04:44] *** Joins: shan (shan@user/shan)
[12:04:58] *** Joins: slav0nic (slav0nic@python.su)
[12:05:31] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 244 seconds)
[12:05:57] *** Joins: ILM (~ILM@2.53.130.119)
[12:08:49] *** Joins: saorge (~saorge@ns378138.ip-5-196-67.eu)
[12:09:17] *** Joins: biozz (~biozz@178.57.22.163)
[12:09:20] *** Quits: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 264 seconds)
[12:10:05] *** Quits: ILM (~ILM@2.53.130.119) (Read error: Connection reset by peer)
[12:10:10] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 244 seconds)
[12:12:43] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Quit: node-irc says goodbye)
[12:12:58] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[12:13:42] *** Quits: pagnol (~user@014198154145.ctinets.com) (Remote host closed the connection)
[12:14:05] *** Joins: someguy123 (~someguy@user/someguy123)
[12:16:28] *** Joins: n0cto (~n0cto@70.39.116.228)
[12:17:08] *** Joins: dme86 (~dan@user/dan86)
[12:19:11] *** Joins: foozle (~foozle@2001-b011-c001-560d-96a6-242f-dadb-2210.dynamic-ip6.hinet.net)
[12:20:29] *** Quits: foozle (~foozle@2001-b011-c001-560d-96a6-242f-dadb-2210.dynamic-ip6.hinet.net) (Remote host closed the connection)
[12:20:48] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[12:22:58] *** Joins: sodimel (~co@29.172.125.78.rev.sfr.net)
[12:25:11] *** Joins: kilitary (~kilitary@kilitary.ru)
[12:25:38] *** Joins: rajgopal (~rajgopal@2402:8100:2569:99cb:2284:ee29:6a60:cf92)
[12:26:41] *** Joins: zeenk (~zeenk@2a02:2f04:a310:b600:b098:bf18:df4d:4c41)
[12:26:51] *** Joins: sale (~sale@ypocit.initech.link)
[12:27:00] *** Joins: wedof (~wedof@2a02:810c:c0:3b98:aaa1:59ff:fe1e:4d38)
[12:28:52] *** Joins: jinsun (~quassel@182.77.87.72)
[12:29:04] *** Joins: i0e (~is0ke3@user/is0ke3)
[12:34:27] *** Quits: ratelius (ratelius@gateway/vpn/protonvpn/ratelius) (Ping timeout: 244 seconds)
[12:36:19] *** Joins: ratelius (ratelius@gateway/vpn/protonvpn/ratelius)
[12:37:42] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:40:58] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[12:41:02] *** tvm_ is now known as tvm
[12:42:11] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[12:45:30] *** Quits: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:a00f:8f9a:9ba9:ea00) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:46:51] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 244 seconds)
[12:47:31] *** Quits: Beta (~Beta@user/betal) (Quit: WeeChat 3.1)
[12:48:19] *** Joins: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:28cf:ea8b:98a9:ee3)
[12:48:28] *** Joins: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net)
[12:49:24] *** Joins: bikeshedder (~bikeshedd@2001:a62:1427:a701:f0b1:cb4d:3994:6966)
[12:49:37] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi)
[12:50:07] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[12:50:12] *** Joins: hendursaga (~weechat@user/hendursaga)
[12:50:49] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:51:20] *** Joins: thedieselspacesh (~thediesel@95.164.41.247)
[12:54:36] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 244 seconds)
[12:55:22] *** Quits: Cleverness (~clevernes@pool-100-2-45-18.nycmny.fios.verizon.net) (Ping timeout: 268 seconds)
[12:55:41] *** Joins: wattux (~wattux@212.51.23.106)
[12:58:22] <thedieselspacesh> hi, everyone. Is it correct from programming perspective to change function behavior depending on the argument type?
[12:58:24] *** Joins: RougeR (~rougex250@user/rouger)
[12:58:54] <thedieselspacesh> for example: http://ix.io/3pjA is this correct?
[12:59:38] *** Joins: batbaby (~batbaby@user/babybat)
[13:00:02] <euouae> thedieselspacesh: https://en.wikipedia.org/wiki/Polymorphism_(computer_science)
[13:01:38] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-8c0a-00e4-95e5-c567.res6.spectrum.com)
[13:01:57] <deniska> thedieselspacesh: there're valid cases for doing that, but a function like that can be rather confusing
[13:02:40] <bjs> as always, it depends.  You can do it in a confusing way,  or you can do it in a sensible way
[13:02:44] <thedieselspacesh> deniska, so should I split it in two functions?
[13:03:15] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130)
[13:03:16] <thedieselspacesh> bjs, I would like to avoid confusing way
[13:03:16] <deniska> thedieselspacesh: well, for the example you provided, you probably should
[13:03:38] *** Joins: xsperry (~as@user/xsperry)
[13:03:50] <deniska> I typically use checks like that to disambiguate between lists and dicts in functions which traverse a datastructure recursively
[13:04:04] <bjs> thedieselspacesh: well your example is a little bit weird because it's a bit of a toy
[13:04:09] <deniska> (petition to add .keys(), .values(), and .items() to list :D )
[13:04:15] <bjs> thedieselspacesh: but imagine a function that accepted _either_ an open file, _or_ a string (with a path)
[13:04:59] *** Joins: varaindemian43 (~varaindem@86.121.85.200)
[13:05:07] <bjs> that kind of thing is relatively common and the function is not confusing
[13:05:20] *** Quits: codemouse92__ (~codemouse@user/codemouse92) (Read error: Connection reset by peer)
[13:05:20] *** Quits: ali1234[m] (~ali1234@user/ali1234) (Read error: Connection reset by peer)
[13:05:20] *** Quits: artemon (~artemon@2001:470:69fc:105::87c) (Read error: Connection reset by peer)
[13:05:20] *** Quits: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27) (Read error: Connection reset by peer)
[13:05:20] *** Quits: novasharper (~novasharp@2001:470:69fc:105::b4a) (Read error: Connection reset by peer)
[13:05:20] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Read error: Connection reset by peer)
[13:05:20] *** Quits: meain (~meain@2001:470:69fc:105::2db) (Read error: Connection reset by peer)
[13:05:20] *** Quits: ubh (~ubh@2001:470:69fc:105::852) (Read error: Connection reset by peer)
[13:05:20] *** Quits: archwizard (~archwizar@2001:470:69fc:105::929) (Read error: Connection reset by peer)
[13:05:20] *** Quits: diegov (~diegov@2001:470:69fc:105::103f) (Read error: Connection reset by peer)
[13:05:20] *** Quits: PantelicGR2 (~pantelicg@user/pantelicgr) (Read error: Connection reset by peer)
[13:05:20] *** Quits: bgardner (~bgardner@2001:470:69fc:105::8a8) (Read error: Connection reset by peer)
[13:05:20] *** Joins: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[13:05:41] *** Joins: xYm (~ILM@2.53.130.119)
[13:05:52] <thedieselspacesh> bjs, I would like to see an example :)
[13:06:08] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[13:06:10] <bjs> thedieselspacesh: I just gave an example,  there are lots of functions that accept files or paths
[13:06:11] *** Joins: ali1234[m] (~ali1234@user/ali1234)
[13:06:25] *** Joins: artemon (~artemon@2001:470:69fc:105::87c)
[13:06:25] *** Joins: ubh (~ubh@2001:470:69fc:105::852)
[13:06:26] *** Joins: bgardner (~bgardner@2001:470:69fc:105::8a8)
[13:06:38] *** Joins: codemouse92__ (~codemouse@user/codemouse92)
[13:06:38] *** Joins: archwizard (~archwizar@2001:470:69fc:105::929)
[13:06:38] *** Joins: meain (~meain@2001:470:69fc:105::2db)
[13:06:52] *** Joins: dontwannatell[m] (~dontwanna@2001:470:69fc:105::c27)
[13:06:56] *** Joins: MoosieRachel (~Moosadee@136.32.155.193)
[13:07:08] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:07:13] <bjs> I'm sure there are other examples too,  I guess the point is that the types (or at least the behaviours) are usually related in some obvious way
[13:07:18] *** Joins: novasharper (~novasharp@2001:470:69fc:105::b4a)
[13:07:18] *** Joins: diegov (~diegov@2001:470:69fc:105::103f)
[13:07:18] *** Joins: PantelicGR2 (~pantelicg@user/pantelicgr)
[13:07:33] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 252 seconds)
[13:08:38] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Quit: Ping timeout (120 seconds))
[13:09:11] <varaindemian43> I want to share my screen to some displays in my office. I'd like to open VNC locally with a random password, send it to a sever (displays) and the server will be able to connect from a browser.
[13:09:19] <varaindemian43> My questions is: How can I accomplish this?
[13:09:35] *** Quits: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 244 seconds)
[13:09:35] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 244 seconds)
[13:09:43] <euouae> This is a python channel varaindemian43, do you mean to ask this here?
[13:09:47] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[13:10:15] <varaindemian43> absolutely
[13:11:11] <kosh> not sure how it is related to python
[13:11:14] <kosh> also now idea how to do that
[13:11:49] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Remote host closed the connection)
[13:12:13] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[13:13:17] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:14:48] *** Joins: manti7 (~manti7@176.10.104.94)
[13:15:24] <varaindemian43> kosh: https://github.com/di/screenshare
[13:15:26] <varaindemian43> we have thins
[13:17:28] <kosh> I don't really know much about web stuff
[13:18:19] <varaindemian43> pillow==4.2.0
[13:18:19] <varaindemian43> pyscreenshot==0.4.2
[13:18:20] <varaindemian43> flask==0.12.2
[13:18:25] <varaindemian43> Installed this with pip3
[13:18:31] <varaindemian43> how can I update them?
[13:19:29] <euouae> python3 -m pip install --upgrade pillow pyscreenshot flask
[13:20:26] <varaindemian43> thank you!
[13:21:11] <rubin55>  /statusbar window add -after lag -priority 10 act
[13:21:36] <euouae> How can I have a literal code block in the napoleon style of documentation in sphinx?
[13:21:54] <euouae> Hmm, using ::. Nevermind
[13:21:56] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[13:24:47] *** Joins: iflema_ (~ian@user/iflema)
[13:25:19] *** Joins: Naan (~Naan@user/naan)
[13:25:24] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 250 seconds)
[13:29:27] <varaindemian43> from subprocess import run
[13:29:27] <varaindemian43> ImportError: cannot import name run
[13:29:56] <bjs> varaindemian43: what version of Python are you on?
[13:29:59] *** Joins: neibo_ (~neibo@143.red-88-5-146.dynamicip.rima-tde.net)
[13:30:15] *** Quits: neibo (~neibo@54.red-83-61-64.dynamicip.rima-tde.net) (Ping timeout: 244 seconds)
[13:30:21] *** Joins: darksun (~darksun@user/darksun)
[13:30:41] *** Joins: frostschutz (~frostschu@2a01:c22:d419:d300:60c7:cd2:113f:a5c9)
[13:32:19] *** Quits: RougeR (~rougex250@user/rouger) (Quit: Leaving)
[13:33:07] <varaindemian43> bjs indeed it was due to not using python3
[13:33:52] <varaindemian43> from flask import Flask, send_file, send_from_directory, render_template
[13:33:53] <varaindemian43> ModuleNotFoundError: No module named 'flask'
[13:34:15] *** Joins: negatron (~negatron@host-95-234-74-215.retail.telecomitalia.it)
[13:34:16] <varaindemian43> During handling of the above exception, another exception occurred:
[13:34:17] <varaindemian43> Traceback (most recent call last):
[13:34:17] <varaindemian43>   File "/home/oct/Desktop/Untitled-1.py", line 35, in <module>
[13:34:18] <varaindemian43>     restart()
[13:34:18] <varaindemian43>   File "/home/oct/Desktop/Untitled-1.py", line 19, in restart
[13:34:19] <varaindemian43>     execv(__file__, sys.argv)
[13:34:19] <varaindemian43> PermissionError: [Errno 13] Permission denied
[13:34:32] <bjs> varaindemian43: please dont paste so much here, if there's multiple lines use some kind of pastebin service
[13:34:44] <varaindemian43> sorry bjs
[13:35:25] <varaindemian43> I thought the client I am using issomehow handling multiple lines
[13:35:40] <bjs> varaindemian43: it sounds like you haven't installed flask properly for the version of Python you're running
[13:36:20] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[13:36:39] *** Parts: negatron (~negatron@host-95-234-74-215.retail.telecomitalia.it) (WeeChat 3.1)
[13:41:26] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 250 seconds)
[13:41:37] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130) (Ping timeout: 244 seconds)
[13:43:08] *** Joins: doko (~doko@2a02:8106:1a:7600:6e96:c938:447f:c673)
[13:43:10] *** Joins: fuz (~fuz@user/fuz)
[13:50:51] *** Joins: vladoski (~vladoski@2001:b07:add:d406:2113:7341:3bad:8a0d)
[13:51:06] <vladoski> what is the best way to bind a parameter to a sa.text query in sqlalchemy
[13:52:53] *** Quits: Naan (~Naan@user/naan) (Remote host closed the connection)
[13:53:12] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[13:53:22] <euouae> vladoski: .bindparams()?
[13:53:27] *** Joins: Naan (~Naan@user/naan)
[13:53:30] *** Quits: Lando-HoloNet (~Lando@user/lando-spacepimp) (Ping timeout: 244 seconds)
[13:54:01] <euouae> vladoski: https://docs.sqlalchemy.org/en/14/tutorial/dbapi_transactions.html#bundling-parameters-with-a-statement
[13:54:40] *** Quits: nac (~nac@user/nac) (Quit: nac)
[13:54:41] *** Joins: pagnol (~user@014198154145.ctinets.com)
[13:55:08] *** Quits: wedof (~wedof@2a02:810c:c0:3b98:aaa1:59ff:fe1e:4d38) (Remote host closed the connection)
[13:55:24] *** Joins: Naan` (~Naan@user/naan)
[13:55:32] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:58:59] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 272 seconds)
[14:00:33] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:00:45] *** Quits: nepeat (~nepeat@79.110.170.62) (Ping timeout: 245 seconds)
[14:01:15] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[14:01:27] *** Quits: id (~hi@hellomouse/dev/cryb.jeda) (Quit: //System Offline//)
[14:01:33] *** Quits: chowmeined (~chowmeine@user/chowmeined) (Read error: Connection reset by peer)
[14:01:41] *** Joins: id (hi@hellomouse/dev/cryb.jeda)
[14:04:22] *** Quits: wattux (~wattux@212.51.23.106) (Ping timeout: 250 seconds)
[14:05:07] *** Quits: rajgopal (~rajgopal@2402:8100:2569:99cb:2284:ee29:6a60:cf92) (Quit: Leaving.)
[14:05:29] *** Joins: somlis (~somlis@user/somlis)
[14:05:32] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[14:06:04] *** Joins: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[14:08:53] *** Joins: Lando-HoloNet (~Lando@user/lando-spacepimp)
[14:09:39] *** Quits: Mulugruntz (~Mulugrunt@2400:4152:2063:3100:28cf:ea8b:98a9:ee3) (Ping timeout: 245 seconds)
[14:10:17] *** Joins: Lando-SpaceIzzle (~Lando@user/lando-spacepimp)
[14:10:28] *** Quits: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Ping timeout: 250 seconds)
[14:10:48] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi)
[14:11:38] *** Joins: meatballs (~owentanti@2001:470:69fc:105::633)
[14:13:56] *** Quits: Lando-HoloNet (~Lando@user/lando-spacepimp) (Ping timeout: 250 seconds)
[14:13:56] *** Quits: xYm (~ILM@2.53.130.119) (Read error: Connection reset by peer)
[14:16:52] *** Parts: meatballs (~owentanti@2001:470:69fc:105::633) ()
[14:17:50] *** Quits: pbryan (~pbryan@S010600306d111fac.vf.shawcable.net) (Ping timeout: 250 seconds)
[14:17:59] <Crys> SnoopJ: FYI https://twitter.com/hynek/status/1402561592731049989
[14:18:24] *** Quits: janemba (~janemba@185.107.80.152) (Ping timeout: 245 seconds)
[14:19:37] *** Joins: pbryan (~pbryan@S010600306d111fac.vf.shawcable.net)
[14:20:13] *** Joins: dambuster (~dambuster@185.193.170.225)
[14:20:23] *** Joins: Luyin (~daisy@user/luyin)
[14:20:50] *** Joins: janemba (~janemba@185.107.80.152)
[14:20:55] <Crys> SnoopJ: Ubuntu 20.04 LTS got a backport of Python 3.9, which broke systems that were using deadsnakes' Python 3.9 and its working ensurepip module.
[14:21:44] <Luyin> hi, I was recently here with questions regarding pyenv and pyenv-virtualenv. I've got just one question left: can I somehow identify whether I run the virtualenv version of a package I installed via pip? so if my system's python is 3.9.5, and my virtualenv's version is 3.9.0, and I install tox via pip _in_ the virtualenv, can I test whether it's the right one and not the system one?
[14:21:56] *** Joins: fleabag (~sirpengi@li587-65.members.linode.com)
[14:22:12] <Crys> Luyin: check sys.executable
[14:22:21] *** Quits: czr (~czr@user/czr) (Ping timeout: 265 seconds)
[14:22:52] <Luyin> Crys: this will just give me the python version used, but not e.g. tox?
[14:23:09] <Crys> $ . /tmp/venv/bin/activate
[14:23:14] <Crys> $ python -c "import sys; print(sys.executable)"
[14:23:22] <Crys>  /tmp/venv/bin/python
[14:23:57] <Crys> Luyin: sys.executable will give you the path to your Python executable. There is also sys.version_info if you want to check the version
[14:25:52] <Luyin> Crys: thanks, but I'm still not looking for my python version. I know how to find that. I want to ensure that when I run tox in the virtualenv I run the version installed into the venv, not the system one.
[14:26:00] <Luyin> (or any other python-related package)
[14:26:01] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[14:26:45] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Ping timeout: 252 seconds)
[14:27:18] <Crys> Luyin: aah, you are talking about package versions, not Python versions.
[14:27:39] <Luyin> yupp
[14:27:56] <Crys> Luyin: by default tox creates isolated virtual envs. The virtual envs do not have access to global site-packages.
[14:28:16] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:28:17] <Luyin> huh.
[14:28:23] <Crys> Luyin: you only get Python's stdlib, pip, and setuptools. Everything else is "hidden" and not accessible.
[14:28:40] <Luyin> hmm what about another package then? e.g. I could have system-wide spacy installed and a more recent one in a venv.
[14:29:10] <Crys> Luyin: https://tox.readthedocs.io/en/latest/config.html#conf-sitepackages
[14:29:38] <Crys> Luyin: virtual envs don't contain any global packages by default. they are isolated.
[14:30:18] <Crys> Luyin: python3 -m venv --help
[14:30:21] <Luyin> so I could try to install a package globally, _not_ install it in a venv and try and execute it in the venv. if it fails, I know that the venv is isolated?
[14:30:25] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[14:30:30] <Crys> --system-site-packages  Give the virtual environment access to the system site-packages dir.
[14:30:36] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 252 seconds)
[14:30:40] <Luyin> I'm trying to figure out whether I've set my pyenv-virtualenv up properly because I'm not sure of this.
[14:31:06] <Crys> Luyin: yes. you can also check __file__ attribute of your package.
[14:31:11] <Luyin> ok thank you!
[14:31:35] <Crys> Luyin: or use pkg_resources to check the metadata of your package
[14:32:13] <Luyin> ok I tried it. ranger is installed globally but importing it in a venv does not work. so it seems everything is fine now. thank you! :)
[14:32:55] <Crys> >>> pkg_resources.require("lxml")
[14:32:55] <Crys> [lxml 4.6.3 (/usr/lib64/python3.9/site-packages)]
[14:33:24] *** Quits: markcerv (~markcerv3@52-119-125-204.PUBLIC.monkeybrains.net) (Ping timeout: 245 seconds)
[14:35:44] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 264 seconds)
[14:36:00] *** Quits: batbaby (~batbaby@user/babybat) (Remote host closed the connection)
[14:37:03] *** Joins: dme86 (~dan@user/dan86)
[14:37:17] *** Joins: abraham (~abraham@173.239.198.148)
[14:38:08] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 264 seconds)
[14:39:36] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:40:33] *** Joins: spuz (~spuz@95.148.1.244)
[14:41:50] <spuz> When working on a module and a client for that module, how do I set up my project such that I can iterate quickly on both? It is sometimes difficult to remember to "pip install" the module and then I'm wondering why my code isn't working as expected
[14:42:29] <spuz> I would prefer if I didn't have to do any steps after modifying the module in order to actually be able to use it. Are there any tools that allow you to automtically install the module on every change?
[14:42:39] <rendar> i have `yield (x,y)` in an object called PointArray, then i have `yield from self.point_array` in an object called Polygon which holds one PointArray, but i don't get 2 objets to unpack, but 1 -- how?
[14:43:44] <euouae> spuz: you can use setuptools for example
[14:44:01] <Crys> spuz: pip install -e /path/to/project/root
[14:44:03] <euouae> spuz: and with the right setup.py and setup.cfg you can just write `python3 -m pip install -e .`
[14:44:21] <Crys> spuz: -e is editable installation
[14:45:14] <spuz> ooh interesting thanks
[14:46:56] *** Quits: abraham (~abraham@173.239.198.148) (Quit: Textual IRC Client: www.textualapp.com)
[14:47:22] <Yhg1s> rendar: you would have to show us the actual code, not just the yield expressions.
[14:47:26] <vladoski> having a "business orm object" in sqlalchemy, what does .create do?
[14:47:45] <Yhg1s> vladoski: it usually creates the object and the row in the database.
[14:47:47] <vladoski> I don't know if i'm stupid or my googlefu skills have decreased but I can't find the .create( on the docs
[14:47:49] <rendar> Yhg1s: i found the bug: i was iterating from zip(polygon) instead of polygon
[14:48:04] *** Quits: Jigsy (~Jigsy@user/jigsy) (Killed (NickServ (GHOST command used by Jigsy`)))
[14:48:10] *** Joins: Jigsy` (~Jigsy@user/jigsy)
[14:48:37] <vladoski> Yhg1s, where can I find the docs for this?
[14:48:42] *** Joins: xYm (~xYm@2.53.130.119)
[14:49:09] *** Joins: agumonke` (~user@88.160.31.174)
[14:50:04] *** Jigsy` is now known as Jigsy
[14:50:15] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[14:50:55] *** Joins: cthulchu (~Cthulchu@195.66.198.226)
[14:51:11] *** Quits: xYm (~xYm@2.53.130.119) (Read error: Connection reset by peer)
[14:51:22] *** Quits: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 244 seconds)
[14:51:26] <Yhg1s> vladoski: what are you calling 'create' on? There are a number of different 'create' methods.
[14:51:32] *** Joins: Naan` (~Naan@user/naan)
[14:51:48] <vladoski> Yhg1s, on an orm object that I've mapped
[14:52:21] <Yhg1s> vladoski: *what kind* of object? Can you show the actual code?
[14:53:15] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[14:53:27] *** Joins: entuland (~entuland@user/entuland)
[14:53:41] *** Joins: Jigsy (~Jigsy@user/jigsy)
[14:56:55] *** Joins: Northwoods (~Northwood@223.130.30.189)
[14:56:55] *** Quits: Northwoods (~Northwood@223.130.30.189) (Client Quit)
[14:57:01] <vladoski> Yhg1s, https://bpa.st/XXWQ
[14:57:04] <vladoski> something like this
[14:57:40] <Yhg1s> vladoski: https://docs.sqlalchemy.org/en/14/core/metadata.html?highlight=create#sqlalchemy.schema.Table.create
[14:58:15] <vladoski> thanks, why is it "Table" though?
[14:58:49] <Yhg1s> vladoski: because you map Issuer to the Table defined on line 17.
[14:59:47] <vladoski> Yhg1s, okay so the mapper injects Table properties to my orm object?
[15:00:05] *** Parts: novasharper (~novasharp@2001:470:69fc:105::b4a) ()
[15:00:18] <vladoski> so now I can use orm and core apis in the same object?
[15:01:03] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[15:01:11] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (Ping timeout: 244 seconds)
[15:01:13] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[15:01:24] *** Quits: agumonke` (~user@88.160.31.174) (Ping timeout: 252 seconds)
[15:01:54] *** Joins: biozz (~biozz@178.57.22.163)
[15:02:14] <Yhg1s> vladoski: I didn't think you could, no, but if this works, then obviously you can. (I'm assuming you're showing us working code.)
[15:04:00] *** blackop_ is now known as blackop
[15:04:13] <vladoski> Yhg1s, yes it works
[15:04:26] <vladoski> it's not written by me though It's a big legacy codebase
[15:04:53] <vladoski> also can I ask you when does sqlalchemy run the orm mapper
[15:05:17] <vladoski> like here I have another python file where the mappings are present
[15:05:39] <vladoski> when does the interpreter run this so that I can use the injected methods?
[15:06:17] <Yhg1s> vladoski: I'm not sure how to answer that. The mapper runs when you call the mapper.
[15:06:20] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 264 seconds)
[15:06:23] *** Joins: cedric (~cedric@2a01:cb11:867:c200:88f1:2015:24fb:ba99)
[15:06:50] <Yhg1s> vladoski: modules are executed when they are first imported. functions are executed when they are called.
[15:06:51] *** Joins: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[15:06:52] *** Joins: biozz (~biozz@178.57.22.163)
[15:08:24] *** Joins: ponadm_ (pony@gateway/vpn/protonvpn/ponadm)
[15:08:33] <vladoski> Yhg1s, okay that answers my question thanks
[15:10:04] *** Quits: niko (~niko@libera/staff/niko) (Remote host closed the connection)
[15:10:36] *** Joins: niko (~niko@libera/staff/niko)
[15:11:08] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[15:11:32] *** Quits: spuz (~spuz@95.148.1.244) (Ping timeout: 250 seconds)
[15:13:24] *** Quits: audiocat (~audio@2603-8081-1800-00af-6b30-32e7-252a-a3fd.res6.spectrum.com) (Ping timeout: 245 seconds)
[15:14:35] <rany> is there a way i could condense something like "x is not None and y is not None"?
[15:14:54] <Yhg1s> rany: for just 'x' and 'y'? not really.
[15:15:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[15:15:21] <Yhg1s> for more, there is 'all(item is not None for item in ...)'
[15:15:41] <rany> thanks
[15:15:50] *** Joins: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130)
[15:16:11] *** txtsd1 is now known as txtsd
[15:16:17] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[15:20:06] <mgedmin> bad example incoming: x is not None is not y
[15:20:19] <mgedmin> but this only works for two things and is basically unreadable
[15:22:11] <DnzAtWrk> all(v is None for v in [x, y])
[15:22:29] <DnzAtWrk> all(v is not None for v in [x, y])
[15:22:32] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:22:49] <supakeen> not any(v is not None for v in [x, y])?
[15:22:54] <supakeen> Don't know what we're doing :)
[15:23:04] <DnzAtWrk> double negative
[15:23:07] <DnzAtWrk> now it's getting confusing
[15:24:04] <rany> yeah those are less readable but i'd use them if i was checking more than 2 variables
[15:24:31] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[15:24:35] <rany> does all() stop iterating the moment something fails?
[15:24:44] <DnzAtWrk> it would logically do that
[15:24:52] <DnzAtWrk> just like javascript's some
[15:24:57] <DnzAtWrk> and every
[15:26:11] <rany> another question, is there a way i could trim an integer so only the first x values show?
[15:26:11] <rany> something like 29281[:3] = 292
[15:26:38] <DnzAtWrk> https://stackoverflow.com/questions/14730046/is-the-shortcircuit-behaviour-of-pythons-any-all-explicit
[15:27:47] <DnzAtWrk> to string
[15:27:48] <DnzAtWrk> trim
[15:27:50] <DnzAtWrk> then back
[15:27:51] <rany> i did it by converting the integer to str and then back to int
[15:28:00] <rany> oh ok, i thought i could do it in a cleaner way
[15:28:14] <DnzAtWrk> you could theoretically round it
[15:28:16] <DnzAtWrk> but it would uglier
[15:28:30] <rany> i'll stick with str then
[15:29:13] <euouae> rany: you can divide by 100 and then floor
[15:29:27] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[15:30:10] <rany> euouae, nice thanks
[15:30:17] <euouae> rany: For example math.floor(29281 / 100)
[15:30:30] <euouae> xb
[15:30:31] <rany> i'm already using math.floor so it's acceptable for me
[15:30:32] <DnzAtWrk> isn't it the same as just // 100?
[15:31:00] <euouae> I don't know of //, but if so... nice! :)
[15:31:13] <rany> oh nevermind
[15:31:20] <rany> i can't do that
[15:31:33] <rany> if the value is <100 then i'm in trouble
[15:32:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 244 seconds)
[15:32:44] <DnzAtWrk> int(str(i)[:3]) if i > 99 else whatever
[15:33:00] *** Joins: YaknotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[15:33:24] *** Joins: entuland_ (~entuland@user/entuland)
[15:33:51] *** Quits: entuland (~entuland@user/entuland) (Read error: Connection reset by peer)
[15:35:04] *** Quits: sunyibo (~alex@78.61.107.92.dynamic.wline.res.cust.swisscom.ch) (Ping timeout: 245 seconds)
[15:35:12] *** Joins: hendursa1 (~weechat@user/hendursaga)
[15:35:19] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 252 seconds)
[15:35:40] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:36:19] *** Quits: neceve (~quassel@2a02:c7f:607e:d600:a95a:ecd2:e57a:3130) (Ping timeout: 268 seconds)
[15:36:26] *** entuland_ is now known as entuland
[15:36:51] *** Quits: iflema_ (~ian@user/iflema) (Quit: iflema_)
[15:36:52] *** Joins: agumonke` (~user@88.160.31.174)
[15:37:42] *** Quits: Fluxx (~Fluxx@user/fluxx) (Ping timeout: 252 seconds)
[15:38:43] *** Quits: pathos_ (~pathos@169-1-247-122.ip.afrihost.co.za) (Quit: leaving)
[15:39:00] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[15:41:09] *** Quits: tree (sid500598@user/psb) ()
[15:42:00] *** Quits: bionade24 (~bionade24@server2.oscloud.info) (Ping timeout: 245 seconds)
[15:42:11] *** Joins: tree (~psb@user/psb)
[15:42:29] *** Joins: bionade24 (~bionade24@server2.oscloud.info)
[15:43:23] *** Joins: habnabit (habnabit@python/site-packages/habnabit)
[15:44:08] *** Joins: thiras (~thiras@user/thiras)
[15:44:56] *** Joins: wyclif (~wyclif@user/wyclif)
[15:49:08] *** jazzy3 is now known as jaziz
[15:49:14] *** jaziz is now known as jazzy
[15:49:56] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[15:51:49] *** Quits: alexbk (~alexbk@c-73-157-41-15.hsd1.wa.comcast.net) (Ping timeout: 244 seconds)
[15:55:47] *** Joins: wattux (~wattux@212.51.23.106)
[15:56:54] *** Joins: ente__ (~ente@ip-176-199-31-201.hsi06.unitymediagroup.de)
[15:57:19] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[15:58:07] *** Joins: iflema (~ian@user/iflema)
[15:59:18] *** Parts: Luyin (~daisy@user/luyin) (bye bye)
[15:59:51] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Client Quit)
[16:00:47] *** Joins: wyclif (~wyclif@user/wyclif)
[16:01:04] <rendar> i call my lambda as `new_label = pie_label_modifier("EE")` but i get: TypeError: <lambda>() takes 1 positional argument but 2 were given -- how is thispossible since i call the lambda with only 1 argument?
[16:01:29] <Yhg1s> rendar: you'd have to show us more of the code and the traceback.
[16:02:19] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[16:03:18] <rendar> Yhg1s https://bpa.st/UAFA
[16:03:52] <Yhg1s> rendar: functions that are attributes of a class, like LABEL_DEFAULT_PERCT_MODIFIER, become methods.
[16:04:03] <Yhg1s> it doesn't matter if the function is defined with 'def' or with 'lambda'.
[16:04:19] <rendar> damn
[16:04:34] <Yhg1s> rendar: also, there's no point in using 'lambda' on line 41. Just use 'def LABEL_DEFAULT_PERCT_MODIFIER(...)'
[16:04:35] <rendar> why is that?
[16:04:40] <Yhg1s> rendar: it's how methods work.
[16:04:45] <rendar> i see
[16:05:12] <rendar> do you think that in this case i should use an internal method instead of a lambda?
[16:05:30] <mgedmin> you can wrap the lambda in a staticmethod()
[16:05:39] <Yhg1s> you should never use lambda, but using lambda isn't the problem here. the problem is that you're defining a method.
[16:05:42] <bjs> rendar: a `def` and a `lambda` both return the same thing
[16:05:45] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[16:05:50] <mgedmin> to avoid the implicit 'self' argument
[16:06:00] <bjs> rendar: a function defined in a class (either with a `def` or with a `lambda` is a method).
[16:06:10] <bjs> rendar: you can use staticmethod() to avoid self being passed, or you can just not make it part of the class.
[16:07:09] <rendar> ok
[16:08:07] <rendar> now it's clear, thanks
[16:08:38] <rendar> class A: X=lambda x:x+2      then a=A(); a.X(10)   will print 12?!
[16:09:03] <rendar> no, it will be error, i'd have: `class A: X=lambda s, x:x+2`
[16:09:05] <rendar> right?
[16:09:06] <bjs> rendar: no, that'll fail
[16:09:12] <mgedmin> it'll fail with a TypeError because a.X(10) == A.X(a, 10)
[16:09:16] <rendar> right
[16:09:20] <rendar> now it's clear
[16:10:13] <mgedmin> if you wanna get technical, a.X translates to A.X.__get__(a), and a function object's fn.__get__(obj) is more-or-less equivalent to functools.partial(fn, obj)
[16:10:31] <bjs> let's not get technical because attribute lookup in Python is "complicated" :)
[16:10:42] <mgedmin> ao a.X(10) == A.X.__get__(a)(10) == functools.partial(A.X, a)(10) == A.X(a, 10)
[16:10:46] <mgedmin> and it should be clear as mud now :D
[16:11:02] *** Quits: tree (~psb@user/psb) (Quit: tree)
[16:11:09] <mgedmin> now if you do class A: X=staticmethod(lambda x:x+2), then A().X(10) will give you 12
[16:11:21] <mgedmin> because staticmethod.__get__ doesn't do the partial baking of the self argument
[16:11:23] <Yhg1s> but no really, stop using lambda.
[16:12:18] *** Joins: naan (~Naan@user/naan)
[16:12:29] <bjs> rendar: the important thing here is that `lambda` and `def` are both different syntaxes for the same thing. They both produce a "function" object, that behaves the same.
[16:13:58] *** Quits: agumonke` (~user@88.160.31.174) (Ping timeout: 250 seconds)
[16:14:08] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 264 seconds)
[16:14:12] *** Joins: hexeme (~hexeme@ec2-54-188-57-39.us-west-2.compute.amazonaws.com)
[16:15:34] *** Joins: tg (~tg@rockylinux/infra/tg)
[16:15:40] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[16:16:24] *** Quits: Naan` (~Naan@user/naan) (Ping timeout: 268 seconds)
[16:17:11] *** Joins: wyclif (~wyclif@user/wyclif)
[16:18:26] *** Joins: OliverUK (~opashley@70.138.105.34.bc.googleusercontent.com)
[16:18:41] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[16:19:40] *** Joins: nepeat (~nepeat@79.110.170.62)
[16:19:52] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 252 seconds)
[16:20:38] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[16:22:12] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[16:22:57] *** Joins: CombatVet (~c4@user/combatvet)
[16:23:30] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 250 seconds)
[16:24:01] *** Joins: Allegretto (~allegrett@84-236-53-138.pool.digikabel.hu)
[16:26:32] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:27:13] <jor> hmm... ever since reading the blog post about black formatter and the 'sad face' I can't _unsee_ it anymore :(
[16:27:40] <jor> now I really want a py4 where parentheses are flipped around, so I get happy faces in my code ;p
[16:27:47] *** Quits: Helenah (~helenah@user/helenah) (Ping timeout: 244 seconds)
[16:27:54] *** Quits: rud01f (rud0lf@user/rud0lf) (Ping timeout: 264 seconds)
[16:28:45] *** Joins: redgloboli (~redglobol@user/redgloboli)
[16:29:57] *** Quits: bikeshedder (~bikeshedd@2001:a62:1427:a701:f0b1:cb4d:3994:6966) (Quit: Leaving)
[16:30:20] *** Joins: abraxas (~abraxas@2600:8805:c880:3:c7fe:fc8e:f2cc:8056)
[16:31:18] *** Quits: pagnol (~user@014198154145.ctinets.com) (Ping timeout: 250 seconds)
[16:32:06] *** Joins: Thanatos (~Thanatos@102.89.2.5)
[16:32:44] *** Quits: ente__ (~ente@ip-176-199-31-201.hsi06.unitymediagroup.de) (Ping timeout: 264 seconds)
[16:32:51] *** Quits: naan (~Naan@user/naan) (Ping timeout: 245 seconds)
[16:33:43] *** Joins: wyclif (~wyclif@user/wyclif)
[16:34:47] *** Joins: rud01f (rud0lf@user/rud0lf)
[16:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.1)
[16:36:37] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:38:07] *** Joins: dme86 (~dan@user/dan86)
[16:40:48] *** Joins: naan (~Naan@user/naan)
[16:42:05] <iflema> i wonder if it roots back to one setting you can flip and then watch it explode
[16:42:22] <graingert> def foo(
[16:42:22] <graingert> :)
[16:42:32] <graingert> just add a type annotations
[16:42:40] <graingert> def foo(
[16:42:40] <graingert> ) -> None:
[16:43:01] *** Joins: Helenah (~helenah@user/helenah)
[16:43:24] <Crys> ) -> happy:
[16:43:26] *** Quits: cthulchu (~Cthulchu@195.66.198.226) (Ping timeout: 250 seconds)
[16:45:07] <iflema> def foo(selfhappy:
[16:45:53] <iflema> whoops   def foo(selfhappy::
[16:47:40] *** Quits: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Quit: WeeChat 3.1)
[16:47:56] *** Joins: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[16:48:31] <bancroft> is there a python way to get a duid ?
[16:50:11] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[16:50:34] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 272 seconds)
[16:51:12] <Wulf> bancroft: what's that?
[16:51:59] <bancroft> Wulf: DHCP unique identifier
[16:53:59] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 272 seconds)
[16:54:09] *** Quits: Lando-SpaceIzzle (~Lando@user/lando-spacepimp) (Ping timeout: 252 seconds)
[16:56:15] *** Quits: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Quit: WeeChat 3.1)
[16:56:31] *** Joins: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[16:56:47] *** Quits: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (Client Quit)
[16:56:49] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[16:57:04] *** Joins: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[16:57:21] *** Joins: Jigsy (~Jigsy@user/jigsy)
[16:57:27] *** Quits: manti7 (~manti7@176.10.104.94) (Ping timeout: 252 seconds)
[16:57:46] *** Joins: JavaBean (~JavaBean@user/javabean)
[16:57:51] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 245 seconds)
[16:59:54] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:01:06] *** Joins: wyclif (~wyclif@user/wyclif)
[17:02:08] *** Joins: manti7 (~manti7@176.10.104.94)
[17:03:04] *** Quits: MrMango (~mrmango@88.98.254.131) (Quit: Leaving)
[17:03:18] *** Quits: kixx (~kixx@user/kixx) (Ping timeout: 264 seconds)
[17:03:25] *** Joins: Elodin (~weechat@user/elodin)
[17:03:52] *** Parts: euouae (~user@user/euouae) (ERC (IRC client for Emacs 26.3))
[17:03:55] *** Joins: zebrag (~chris@user/zebrag)
[17:04:09] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:05:28] <graingert> bancroft: https://vmware.github.io/photon/assets/files/html/1.0-2.0/netmgr.python.html ?
[17:05:58] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[17:06:17] *** Quits: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net) (Quit: Leaving)
[17:06:24] <bancroft> graingert: awesome! I think that will work, thank you!
[17:06:33] <graingert> oh sorry that's a vmware specific api
[17:06:44] <graingert> Network Manager API to me means redhat networkmanager
[17:07:09] *** Quits: jazzy (~jaziz@2600:380:4547:d128:a1e2:2a56:7617:ad7e) (Ping timeout: 245 seconds)
[17:07:35] <bancroft> ahh, well it still might. I thought photonos was a python package lol
[17:07:58] *** Joins: theterg (~theterg@pool-141-155-7-155.nycmny.fios.verizon.net)
[17:08:50] <graingert> https://pythonhosted.org/python-networkmanager/ ?
[17:08:56] *** Quits: especial (~especial@cm-84.214.207.74.getinternet.no) (Remote host closed the connection)
[17:08:58] <graingert> looks easier to talk to nmcli lol
[17:09:05] <graingert> it's all glibs and mainloops
[17:09:22] *** Quits: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 252 seconds)
[17:09:43] *** Joins: plastico (~plastico@2001:8a0:de6b:1a00:9d14:766e:70a8:dcea)
[17:12:48] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[17:12:51] *** Joins: puadxtub (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[17:14:02] <Crys> Use d-bus
[17:15:12] *** Joins: ente__ (~ente@ip-176-199-31-201.hsi06.unitymediagroup.de)
[17:15:55] <bancroft> Crys: what ?
[17:16:10] *** Quits: nichlas (nichlas@gateway/vpn/protonvpn/nichlas) (Quit: WeeChat 3.1)
[17:16:29] <Crys> bancroft: You can control and query NM with D-Bus API
[17:16:56] *** Joins: Pleiades (~admin@193.254.47.212)
[17:16:56] <graingert> that's this right? NetworkManager.NMDbusInterface
[17:17:00] *** Joins: wyclif (~wyclif@user/wyclif)
[17:17:03] <sybariten> soooo.... anyone wanting to help me analyze a very specific setup including python, hardware, and flask?   :-)
[17:17:03] *** Joins: tree (~psb@user/psb)
[17:17:17] <sybariten> Of which you will never be able to reproduce, even
[17:17:47] <graingert> bancroft: I think https://pypi.org/project/jeepney/ is a bit nicer than python-dbus btw
[17:17:48] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[17:17:55] <sybariten> So i'm sitting on a thermal printer and someone made a little package including a flask app and html, for making a machine print to the thermal printer from python, when you send text to a form
[17:17:58] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:18:38] <sybariten> I have finally managed to get the page up and working inside the lan, on python 2.7 . But it's possible that this setup is tailored for raspberry pi and i'm on ubuntu 18
[17:18:58] *** Joins: nyah (~nyah@90.221.186.180)
[17:19:13] <sybariten> So the error message i'm getting right now is SystemExit: ERROR: Serial port not found at: /dev/ttyAMA0  , that comes from flask as soon as i try to print. So im guessing this is an RPi specific name or something
[17:19:13] <graingert> bancroft: https://github.com/mattboyer/piasync/blob/8d4b2fa845ecac7a2ea5c24d8fd4818a699fa4c2/piasync/pia.py#L196
[17:19:47] <graingert> Crys: wow dbus is complex
[17:20:33] <Crys> It's not that terrible.
[17:21:04] <Crys> You get around quickly once you understand its basic concepts.
[17:21:23] <bancroft> ^^^ I thought I understood the basic concepts lol I guess not
[17:21:35] *** Quits: ente__ (~ente@ip-176-199-31-201.hsi06.unitymediagroup.de) (Ping timeout: 245 seconds)
[17:22:00] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:22:01] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 245 seconds)
[17:22:02] <bancroft> this is going to take some reading that I don't have time for during my breakfast hahaha will revisit this weekend when I have more time :)
[17:22:03] <Crys> I recommend to use a dbus monitor and see how CLIs like nmcli are querying the API.
[17:22:40] <mgedmin> do you need any valid DUID, or specifically the one your networkmanager uses?
[17:23:24] <bancroft> mgedmin: the one my networkmanager uses
[17:25:10] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi)
[17:26:42] *** Joins: Rum (~Rum@user/rum)
[17:26:55] *** Joins: zmt00 (~zmt00@user/zmt00)
[17:27:58] *** Quits: wattux (~wattux@212.51.23.106) (Quit: Client closed)
[17:29:56] *** Joins: foozle (~foozle@2001-b011-c001-1b0a-0826-d3c6-744a-aaf5.dynamic-ip6.hinet.net)
[17:31:29] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[17:31:59] *** Quits: Rum (~Rum@user/rum) (Quit: Leaving)
[17:32:57] *** naan is now known as Naan
[17:33:01] *** Joins: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net)
[17:33:59] *** Joins: wyclif (~wyclif@user/wyclif)
[17:34:56] *** Quits: foozle (~foozle@2001-b011-c001-1b0a-0826-d3c6-744a-aaf5.dynamic-ip6.hinet.net) (Quit: Leaving)
[17:37:09] <sybariten> Hello, does this sound like python to you, or is it very python-library-specific?  SerialException: Could not configure port: (25, 'Inappropriate ioctl for device')
[17:37:13] <sybariten> or HW specific for that case
[17:37:19] *** Joins: f1se4 (~f1se4@213.195.98.55)
[17:37:29] <tpr> that's coming frfom the kernel
[17:37:32] <Helle> sybariten: it's OS specific
[17:37:45] <Helle> that is the kernel giving that ioctl error
[17:37:56] <sybariten> Helle: ok thanks
[17:38:04] <graingert> bancroft: seems like you want jeepny
[17:39:15] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[17:39:59] *** Quits: darksun (~darksun@user/darksun) (Read error: Connection reset by peer)
[17:40:01] *** Joins: zeden (~zeden@user/zeden)
[17:40:10] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[17:40:47] *** Joins: biozz (~biozz@178.57.22.163)
[17:40:51] *** Joins: darksun (~darksun@user/darksun)
[17:41:03] <SnoopJ> Crys, at least there's interest in backporting recent versions, but...argh!
[17:42:15] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[17:42:33] *** Joins: dme86 (~dan@user/dan86)
[17:42:45] *** Joins: biozz (~biozz@178.57.22.163)
[17:45:49] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[17:46:25] *** Joins: biozz (~biozz@178.57.22.163)
[17:47:32] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:50:16] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[17:50:19] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[17:50:45] *** Quits: biozz (~biozz@178.57.22.163) (Ping timeout: 245 seconds)
[17:51:04] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[17:51:13] *** Joins: wyclif (~wyclif@user/wyclif)
[17:52:30] *** Joins: biozz (~biozz@178.57.22.163)
[17:52:58] *** Joins: CatKiller (~CatKiller@51.37.221.22)
[17:53:09] *** Joins: kixx (~kixx@user/kixx)
[17:53:28] *** Joins: magla (~gelignite@55d44a14.access.ecotel.net)
[17:53:55] *** Quits: CatKiller (~CatKiller@51.37.221.22) (Client Quit)
[17:54:09] *** Joins: CatKiller (~CatKiller@51.37.221.22)
[17:56:18] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[18:00:21] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[18:02:01] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[18:05:12] *** Joins: heco (~redrum@user/redrum88)
[18:06:56] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[18:08:21] *** Joins: wyclif (~wyclif@user/wyclif)
[18:08:48] *** Joins: Sadale_ (~Sadale@user/sadale)
[18:10:01] *** Joins: hendursaga (~weechat@user/hendursaga)
[18:10:22] *** Quits: Sadale (~Sadale@user/sadale) (Ping timeout: 272 seconds)
[18:10:25] *** Sadale_ is now known as Sadale
[18:11:05] *** Joins: heco_ (~redrum@user/redrum88)
[18:11:08] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[18:11:55] *** Joins: Cata (~Cata@user/cata)
[18:12:20] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 264 seconds)
[18:12:22] *** Joins: biozz (~biozz@178.57.22.163)
[18:13:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[18:14:26] *** Quits: heco (~redrum@user/redrum88) (Ping timeout: 250 seconds)
[18:16:09] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[18:16:10] *** Quits: heco_ (~redrum@user/redrum88) (Ping timeout: 250 seconds)
[18:16:24] <raek> sybariten: you might want to ask about that in a raspberry pi chat (or some embedded linux place)
[18:17:21] <sybariten> raek: am doing that now! Its all a bit stupid, i'm trying to use an RPi software while not using RPi machine actually ... just a similar printer as the guy making the software
[18:18:15] <raek> the python code seems to use pyserial to access the printer
[18:18:26] *** Joins: ente__ (~ente@ip-176-199-31-201.hsi06.unitymediagroup.de)
[18:18:37] <raek> (judging from my expectations and the exception type)
[18:19:11] *** Joins: etienneme (~etienne@176-149-215-214.abo.bbox.fr)
[18:20:07] <raek> the inappropriate ioctl thing could be due to opening the wrong device. /dev/ttyAMA0 is the hardware serial port on the raspberry pi GPIO header. (this is fun, but probably off topic in this channel)
[18:20:25] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[18:21:44] *** Joins: timkofu (~timkofu@user/timkofu)
[18:21:48] *** Joins: cthulchu (~Cthulchu@195.66.198.226)
[18:22:50] <sybariten> raek: yeah thats definitely the wrong deice for me right now
[18:22:57] <sybariten> will be back with questions later :)
[18:24:15] <raek> sybariten: I can send you some pointers in private
[18:25:09] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[18:26:13] <sybariten> raek: i'll be back in one or two hours to discuss this but that would be very kind
[18:26:46] *** Joins: wyclif (~wyclif@user/wyclif)
[18:27:50] *** Joins: death916 (~death916@user/death916)
[18:28:48] *** Joins: srhm (~ascii@user/srhm)
[18:29:30] *** Quits: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net) (Quit: Leaving)
[18:31:46] *** Joins: DnzAtWrkV2 (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi)
[18:31:46] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[18:31:47] *** Joins: cthulchu_ (~Cthulchu@195.66.198.226)
[18:31:48] *** Joins: pyfisch9 (thelounge@user/pyfisch)
[18:31:49] *** Quits: DnzAtWrkV2 (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:31:59] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Remote host closed the connection)
[18:32:08] *** Joins: thiras_ (~thiras@user/thiras)
[18:32:39] *** Joins: yitz_ (~nick@exercism/yitz)
[18:33:06] *** Joins: wyclif (~wyclif@user/wyclif)
[18:33:15] *** Joins: veegee_ (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[18:33:33] *** Joins: rany4 (~rany@user/rany)
[18:33:45] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:33:51] *** Joins: mbrndtgn8 (~mbrndtgn@undecidable.de)
[18:33:54] *** Joins: az_7 (~az0@user/az0)
[18:33:57] *** Joins: waxfire2 (~waxfire@65.119.2.240)
[18:34:07] *** Joins: dob1_ (~dob1@user/dob1)
[18:34:07] *** Joins: kenoba2 (~kenoba@ip68-0-248-40.ri.ri.cox.net)
[18:34:25] *** Joins: llua` (~llua@zsh/developer/llua)
[18:34:31] *** Joins: noord_ (~noord@user/noord)
[18:34:36] *** Joins: richrd4 (~wavi@thelounge/maintainer/wavi)
[18:34:39] *** Joins: dhellman_ (~dhellmann@097-081-099-073.res.spectrum.com)
[18:34:41] *** Joins: snalty_ (~Shhh@user/snalty)
[18:34:46] *** Joins: KevinX_ (~KevinX@73.156.244.126)
[18:34:53] *** Joins: Ox4 (~int@0x4.cx)
[18:34:55] *** Joins: kevr_ (~kevr@user/kevr)
[18:34:57] *** Joins: BytesAndCoffee|a (~libera@bytes.coffee)
[18:34:58] *** Joins: Trashlord__ (~trash@user/trashlord)
[18:34:59] *** Joins: mikebald_ (~mikebald@159.203.185.106)
[18:35:00] *** Joins: fofoni (~fofoni@user/fofoni)
[18:35:01] *** Joins: Stx (stx@libera/staff/stx)
[18:35:04] *** Quits: dsl (~dsl@ppp59-167-120-76.static.internode.on.net) (Ping timeout: 272 seconds)
[18:35:26] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 252 seconds)
[18:35:28] *** Joins: plasticu1roject (~plasticup@user/plasticuproject)
[18:35:34] *** Joins: byzandula1 (~byzandula@beerbq.net)
[18:35:35] *** Joins: rexbinary_ (~rexbinary@user/rexbinary)
[18:35:35] *** Joins: enrh_ (~irc@user/enrh)
[18:35:41] *** Quits: i0e (~is0ke3@user/is0ke3) (Remote host closed the connection)
[18:36:12] *** Joins: gabe_ (~gabe@user/gabe)
[18:36:18] <merijn> hmm, so given a virtualenv, what's the easiest way to load a python interpreter within that environment without the user having to know the virtualenv exists? Initially I just created a differently named symlink to interpreter in the virtualenv, but that doesn't seem to work (although starting the interpreter directly does...)
[18:36:31] *** Joins: kantlive- (~kantlivel@cpe-67-250-125-43.hvc.res.rr.com)
[18:36:39] *** Joins: m42e_de (~m42e@pb42.de)
[18:36:57] *** Joins: a1paca_ (~a1paca@user/a1paca)
[18:37:15] *** Quits: shailangsa (~shailangs@host86-186-177-181.range86-186.btcentralplus.com) (Killed (NickServ (GHOST command used by Shailangsa_)))
[18:37:24] *** Joins: NineBAR (~NineBAR@c-68-56-180-29.hsd1.mi.comcast.net)
[18:37:37] *** Joins: DnzAtWrkV2 (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi)
[18:37:58] *** Joins: thm_ (~thomas@fedora/thm)
[18:38:07] *** Joins: xavierdarkness_ (~xavierdar@user/xavierdarkness)
[18:38:19] <raek> merijn: is using a wrapping shell script an option? if so then you could make that script source the bin/activate file and then run the python command
[18:38:20] *** Joins: hexeme_ (~hexeme@ec2-54-188-57-39.us-west-2.compute.amazonaws.com)
[18:38:29] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 272 seconds)
[18:40:02] <merijn> Ah, actually it seems the symlink is what gets the interpreter confused, since it looks for stuff relative to the interpreter. Simply replacing the symlink with a shell script that execs the interpreter in the virtualenv seems to work properly
[18:40:04] *** Joins: HaMsTeRs (~HaMsTeRs@210.3.201.132)
[18:40:14] *** Joins: rmm2 (~rob@103.226.107.218)
[18:40:23] <SnoopJ> sybariten, raek I would answer the question-as-asked with "neither," that's an OSError (it's a wrapper of ENOTTY, "not a typewriter"). The operating system is telling you that the requested IO control isn't valid for the device. It would probably help to see the full error report, but this is neither python-specific nor library-specific (but it may indicate a bug in the library)
[18:40:34] *** Quits: cthulchu (~Cthulchu@195.66.198.226) (*.net *.split)
[18:40:34] *** Quits: CatKiller (~CatKiller@51.37.221.22) (*.net *.split)
[18:40:34] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi) (*.net *.split)
[18:40:34] *** Quits: tg (~tg@rockylinux/infra/tg) (*.net *.split)
[18:40:34] *** Quits: hexeme (~hexeme@ec2-54-188-57-39.us-west-2.compute.amazonaws.com) (*.net *.split)
[18:40:34] *** Quits: thiras (~thiras@user/thiras) (*.net *.split)
[18:40:34] *** Quits: bionade24 (~bionade24@server2.oscloud.info) (*.net *.split)
[18:40:34] *** Quits: niko (~niko@libera/staff/niko) (*.net *.split)
[18:40:34] *** Quits: janemba (~janemba@185.107.80.152) (*.net *.split)
[18:40:34] *** Quits: int (~int@0x4.cx) (*.net *.split)
[18:40:34] *** Quits: qwedfg (~qwedfg@user/qwedfg) (*.net *.split)
[18:40:34] *** Quits: brizz (~brizz@74.208.85.67) (*.net *.split)
[18:40:34] *** Quits: snalty (~Shhh@user/snalty) (*.net *.split)
[18:40:34] *** Quits: m42e (~m42e@pb42.de) (*.net *.split)
[18:40:34] *** Quits: rany (~rany@user/rany) (*.net *.split)
[18:40:34] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (*.net *.split)
[18:40:34] *** Quits: chemsmith (~chemsmith@user/chemsmith) (*.net *.split)
[18:40:34] *** Quits: enrh (~irc@user/enrh) (*.net *.split)
[18:40:34] *** Quits: jim (~jim@about/linux/jim) (*.net *.split)
[18:40:34] *** Quits: dober (~dober@sourcehut/user/dober) (*.net *.split)
[18:40:34] *** Quits: Trashlord (~trash@user/trashlord) (*.net *.split)
[18:40:34] *** Quits: libussa (~libussa@libussa.net) (*.net *.split)
[18:40:34] *** Quits: richrd (~wavi@thelounge/maintainer/wavi) (*.net *.split)
[18:40:34] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (*.net *.split)
[18:40:34] *** Quits: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com) (*.net *.split)
[18:40:34] *** Quits: kantlivelong (~kantlivel@cpe-67-250-125-43.hvc.res.rr.com) (*.net *.split)
[18:40:34] *** Quits: dh (dh@bsd.ee) (*.net *.split)
[18:40:34] *** Quits: rexbinary (~rexbinary@user/rexbinary) (*.net *.split)
[18:40:34] *** Quits: waxfire (~waxfire@65.119.2.240) (*.net *.split)
[18:40:34] *** Quits: kevr (~kevr@user/kevr) (*.net *.split)
[18:40:34] *** Quits: pyfisch (thelounge@user/pyfisch) (*.net *.split)
[18:40:34] *** Quits: Xavierdarkness (~xavierdar@user/xavierdarkness) (*.net *.split)
[18:40:34] *** Quits: kenoba (~kenoba@ip68-0-248-40.ri.ri.cox.net) (*.net *.split)
[18:40:34] *** Quits: byzandula (~byzandula@beerbq.net) (*.net *.split)
[18:40:34] *** Quits: thm (~thomas@fedora/thm) (*.net *.split)
[18:40:34] *** Quits: mikebald (~mikebald@159.203.185.106) (*.net *.split)
[18:40:34] *** Quits: BytesAndCoffee (~libera@bytes.coffee) (*.net *.split)
[18:40:34] *** Quits: yitz (~nick@exercism/yitz) (*.net *.split)
[18:40:34] *** Quits: plasticuproject (~plasticup@user/plasticuproject) (*.net *.split)
[18:40:34] *** Quits: yemel (~yemel@user/yemel) (*.net *.split)
[18:40:34] *** Quits: n1000 (~n1000@user/n1000) (*.net *.split)
[18:40:34] *** Quits: az_ (~az0@user/az0) (*.net *.split)
[18:40:34] *** Quits: a1paca (~a1paca@user/a1paca) (*.net *.split)
[18:40:34] *** Quits: dob1 (~dob1@user/dob1) (*.net *.split)
[18:40:34] *** Quits: llua (~llua@zsh/developer/llua) (*.net *.split)
[18:40:34] *** Quits: noord (~noord@user/noord) (*.net *.split)
[18:40:34] *** Quits: mbrndtgn (~mbrndtgn@undecidable.de) (*.net *.split)
[18:40:34] *** Quits: rmm (~rob@103.226.107.218) (*.net *.split)
[18:40:34] *** Quits: jamesmartinez (~keinbock@37.44.247.165) (*.net *.split)
[18:40:34] *** Quits: mrgz (~mrgz@187.38.5.6) (*.net *.split)
[18:40:34] *** Quits: Batzy (~Batzy12@user/batzy) (*.net *.split)
[18:40:35] *** Quits: librenaut (~librenaut@user/librenaut) (*.net *.split)
[18:40:35] *** Quits: lucerne (~thelounge@ip202.ip-51-178-215.eu) (*.net *.split)
[18:40:35] *** Quits: lavadonut (~lavadonut@user/lavadonut) (*.net *.split)
[18:40:35] *** Quits: zopsi (~zopsi@irc.dir.ac) (*.net *.split)
[18:40:35] *** Quits: gabe (~gabe@user/gabe) (*.net *.split)
[18:40:35] *** Quits: noarb (~jayjo@user/noarb) (*.net *.split)
[18:40:35] *** kenoba2 is now known as kenoba
[18:40:35] *** rany4 is now known as rany
[18:40:35] *** pyfisch9 is now known as pyfisch
[18:40:35] *** rexbinary_ is now known as rexbinary
[18:40:35] *** xavierdarkness_ is now known as xavierdarkness
[18:40:35] *** waxfire2 is now known as waxfire
[18:40:35] *** mbrndtgn8 is now known as mbrndtgn
[18:40:36] *** kantlive- is now known as kantlivelong
[18:40:36] *** richrd4 is now known as richrd
[18:40:36] *** az_7 is now known as az_
[18:40:54] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[18:40:56] *** Joins: bionade24 (~bionade24@server2.oscloud.info)
[18:41:08] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[18:41:21] *** Joins: tg (~tg@rockylinux/infra/tg)
[18:41:33] *** Joins: dsl (~dsl@ppp59-167-120-76.static.internode.on.net)
[18:41:41] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[18:42:17] *** Joins: i0e (~is0ke3@user/is0ke3)
[18:43:33] *** Joins: neilthereildeil (~neilthere@204.115.183.4)
[18:43:37] *** Joins: mrgz (~mrgz@187.38.5.6)
[18:45:11] *** Joins: shailangsa (~shailangs@host86-186-177-181.range86-186.btcentralplus.com)
[18:45:29] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[18:46:15] *** Joins: jim (~jim@about/linux/jim)
[18:47:48] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:49:18] *** Joins: janemba (~janemba@185.107.80.152)
[18:49:27] *** Joins: wyclif (~wyclif@user/wyclif)
[18:49:48] *** Joins: Figueiredo (~leonardo@2804:14c:8586:9233:8eda:ed94:c65a:581d)
[18:50:27] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[18:50:33] *** Joins: niko (~niko@libera/staff/niko)
[18:50:44] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[18:51:02] *** Joins: derelict (~winter@2603-6011-f901-9e5b-78b5-8b2f-cdb2-4171.res6.spectrum.com)
[18:51:03] *** Joins: libussa (~libussa@libussa.net)
[18:51:24] *** Joins: teut (~teut@182.69.85.39)
[18:52:14] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[18:55:26] <CuriousErnestBro> hello merijn
[18:55:38] <CuriousErnestBro> why'd you leave ##programming?:)
[18:55:44] <graingert> merijn: you might like pipx
[18:55:57] <graingert> merijn: it basically does that when you do `pipx install whatever`
[18:56:38] <merijn> CuriousErnestBro: Something went wrong in the migration of my config from freenode and I've been to lazy to fix it :p
[18:56:55] <merijn> graingert: Not really, tbh. I'm trying to reduce the number of moving parts, not add more :p
[18:57:20] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 264 seconds)
[18:57:23] <graingert> merijn: I mean you might want to look at the pipx code to see what it does
[18:57:29] <graingert> merijn: there's also shiv
[18:57:32] <SnoopJ> merijn, can you describe what "gets the interpreter confused" means?
[18:57:38] <Yhg1s> or realise that it removes more moving parts than it adds.
[18:58:00] *** Quits: JavaBean (~JavaBean@user/javabean) (Read error: Connection timed out)
[18:58:09] <SnoopJ> (making a symlink to a venv-symlinking-the-host seems to be fine for me)
[18:59:02] <graingert> SnoopJ: hmm I use the shell exec trick because symlinking python to /opt/company/project/venv/bin/python didn't work
[18:59:13] *** Joins: vivek (~vivek@user/vivek)
[18:59:22] <graingert> symlinking to /opt/company/project/venv/bin/entry-point might work
[18:59:25] <SnoopJ> graingert, I'm guessing the site isn't quite right
[18:59:26] <graingert> because that sets a #!
[18:59:49] *** Joins: Gerula_ (~Gerula@user/gerula)
[18:59:49] *** Quits: Gerula (~Gerula@user/gerula) (Killed (tungsten.libera.chat (Nickname regained by services)))
[18:59:49] *** Gerula_ is now known as Gerula
[18:59:52] <graingert> uh?
[19:01:04] *** Joins: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[19:01:09] <SnoopJ> isn't quite what is expected* is perhaps a less confusing way to say it
[19:01:26] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 244 seconds)
[19:01:50] *** Quits: tree (~psb@user/psb) (Quit: tree)
[19:02:04] <graingert> !?
[19:02:06] *** Joins: librenaut (~librenaut@user/librenaut)
[19:02:25] *** Joins: qlixed (~qlixed@2800:810:471:2f8::1b7)
[19:02:29] *** Quits: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca) (Quit: Client closed)
[19:02:50] <merijn> SnoopJ: It looks for pth files relative to the symlink and not the actual interpreter
[19:03:01] <merijn> SnoopJ: And that's why the virtualenv was borked
[19:03:04] *** Joins: wyclif (~wyclif@user/wyclif)
[19:03:34] *** Quits: wyclif (~wyclif@user/wyclif) (Client Quit)
[19:03:41] <merijn> By having a shell script that executes the interpreter instead, it correctly looks relative to the interpreter (at least, that's my blind guess why it works one way, but not the other)
[19:03:55] *** Joins: pagnol (~user@014198154145.ctinets.com)
[19:04:47] *** Joins: xakan (~xakan@ns354170.ip-91-121-101.eu)
[19:04:50] *** Joins: n1000 (~n1000@user/n1000)
[19:05:26] *** Joins: tm007 (uid287041@id-287041.highgate.irccloud.com)
[19:05:42] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[19:05:44] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[19:06:31] *** Joins: wakeup (~wakeup@user/wakeup)
[19:07:04] *** Quits: pointless (~pointless@075-141-241-204.res.spectrum.com) (Quit: Client closed)
[19:08:00] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:08:15] *** Quits: KevinX_ (~KevinX@73.156.244.126) (Ping timeout: 272 seconds)
[19:08:32] <wakeup> let's say you have a list of strings ls=[a, b, ...] and a formatted string of the form x = "hello {}, good morning {}", where currently I have only one {} in x, but I want this to be applicable to any formatted string. Now, what I want to do is find all strings in ls that match x, then extract the parts {}
[19:08:42] <wakeup> Any idea on how to do this easily?
[19:09:03] <habnabit> wakeup, can you give an example?
[19:09:41] *** Quits: ente__ (~ente@ip-176-199-31-201.hsi06.unitymediagroup.de) (Ping timeout: 268 seconds)
[19:09:42] <wakeup> ls = ["hello Bert, good morning sir", "hello Bert", "nice"]
[19:10:04] *** Joins: Akuli (~Akuli@82-203-167-236.bb.dnainternet.fi)
[19:10:15] *** Joins: justm3 (~Username@86-91-250-105.opennet.kpn.net)
[19:10:15] <wakeup> ls = ["hello Bert, good morning sir", "hello Bert", "nice", "hello dude, good morning"]
[19:10:27] <wakeup> so, in this case, we should be able to extract a new list that contains
[19:10:50] <wakeup> ls = [(Bert, sir), ("dude")]
[19:10:51] <SnoopJ> merijn, having a little difficulty picturing the specifics but I think I grok it, the search path isn't what it ought'er be :)
[19:12:12] *** Joins: jpodivin (~jpodivin@118.108.broadband14.iol.cz)
[19:12:23] <wakeup> to find all strings in a list that are consistent with a formatted list and then extract the concrete parts from those realizations of the formatted string
[19:12:25] *** Quits: wallace_mu200 (~wallace_m@pool-173-66-6-41.washdc.fios.verizon.net) (Quit: Client closed)
[19:12:33] <wakeup> *basically I want
[19:12:36] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Read error: Connection reset by peer)
[19:12:39] *** Joins: wallace_mu200 (~wallace_m@pool-173-66-6-41.washdc.fios.verizon.net)
[19:12:43] <wakeup> *with a formatted string
[19:12:52] <wakeup> not sure whether "formatted string" is the right name here
[19:12:55] *** Joins: cthulchu_ (~Cthulchu@195.66.198.226)
[19:12:57] <wakeup> for something like "hello{}"
[19:13:00] <odoood> wakeup: regex with groups
[19:13:16] *** Joins: Omega037 (~Omega037@047-024-168-024.res.spectrum.com)
[19:13:16] <wakeup> well, yes, of course, I thought of regex
[19:13:17] <SnoopJ> agreed, this sounds like a job for a regex with a capture group
[19:13:26] <wakeup> but how should I do it
[19:13:30] <wakeup> that's my question
[19:13:43] <odoood> you mean the actual pattern?
[19:13:48] <wakeup> yea
[19:14:15] *** noord_ is now known as noord
[19:14:22] <SnoopJ> oh, the group isn't repeated
[19:14:54] *** Quits: srhm (~ascii@user/srhm) (Quit: Konversation terminated!)
[19:15:03] <wakeup> well, for now, you can assume that my pattern is something like this "hello{}"
[19:15:11] <wakeup> so only one 1 {}
[19:15:25] <wakeup> but if it can be more generally applicable would be better
[19:15:35] *** Joins: srhm (~ascii@user/srhm)
[19:15:36] <wakeup> but for now it's fine to assume the pattern is something of the form "hello{}"
[19:16:05] <grym> wakeup: i tend to go to regex101.com and put in some example strings and start writing a regex there
[19:16:08] <odoood> something like 'hello (\w+) .+'
[19:16:24] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 250 seconds)
[19:16:34] <odoood> depends on what can constitute the name
[19:16:46] <bjs> wakeup: I think you want the pattern to be a regex pattern rather than a str.format pattern
[19:16:55] <Yhg1s> wakeup: https://pypi.org/project/parse/
[19:17:16] <bjs> the problem is kind of backwards for str.format()
[19:17:17] <bjs> Yhg1s: neat
[19:17:25] <SnoopJ> mm, a parser approach might make sense (and yes, very neat!)
[19:17:36] <bjs> but I know how complicated format() so I'm immediately suspicious of its limitations
[19:18:39] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[19:19:13] <Exa> Hi, when user-installing packages with executables with pip, it creates files in ~/.local/bin, which is the same directory for any Python version.  When I upgrade Python (e.g. 3.8 to 3.9), I have to reinstall the packages I need, but I still have many broken files in ~/.local/bin that are built for a previous version of Python (usually, just the dependent packages are missing).  Would it be possible to have a different prefix for each Python version, so that it doesn't
[19:19:21] <Exa> use the same "bin" directory?  Thanks.
[19:19:27] <habnabit> Exa, pipx solves this problem
[19:19:28] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[19:19:38] <SnoopJ> wakeup, this is an illustration of how you might do it with `re` https://bpa.st/LBKA
[19:19:50] <SnoopJ> there are a lot of edge cases in a problem like this, though, so it's probably not exact
[19:20:04] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[19:20:18] <odoood> mhm
[19:20:27] <Exa> habnabit: a virtualenv is not a solution, I need my mercurial installation to pick up packages I install for example
[19:20:41] <Yhg1s> Exa: a virtualenv is really the only solution.
[19:20:46] <habnabit> Exa, yes, this is why pipx has an 'inject' command
[19:20:50] <Exa> using virtualenvs would just be too hard
[19:20:55] <habnabit> Exa, they've already thought of this :)
[19:21:36] <Yhg1s> Exa: not using virtualenvs is a lot harder, because it's a _lot_ easier to break.
[19:21:36] <grym> inject <3
[19:22:39] *** Quits: wakeup (~wakeup@user/wakeup) (Quit: Client closed)
[19:24:46] *** Joins: white_shadow (~brey@59.91.240.255)
[19:25:25] *** Joins: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[19:25:58] <Exa> ok I might give a shot to pipx.  if I'd upgrade python from 3.8 to 3.9 (for example), what would happen to the installations made with pipx?  I would no longer have a "python3.8" executable
[19:26:25] <habnabit> Exa, pipx reinstall will, well, reinstall anything you had present
[19:26:55] <Exa> ok that makes sense
[19:27:02] <grym> if you never remove 3.8, nothing happens either
[19:27:20] <grym> and, if you need to for compat reasons or w/e, install takes a -p /path/to/old/python
[19:27:32] <rany> do python printf formatted strings change based on locale? For example %.f using commas rather than decimal point on French locale?
[19:28:17] <Exa> with this, I feel like I would need to stop using python executables shipped by my distro's package manager.  for example, making a virtualenv for mercurial and its extensions
[19:28:32] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 250 seconds)
[19:28:32] <Exa> am I right?
[19:28:45] *** Joins: kosh (~kosh@user/kosh)
[19:28:55] <habnabit> Exa, the story for installing plugins to distro-shipped python apps is .. fraught
[19:28:57] <SnoopJ> rany, I don't think `f` does but I think `n` will do what you want: https://docs.python.org/3/library/string.html#format-specification-mini-language
[19:29:09] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Quit: ZNC - https://znc.in)
[19:29:12] <habnabit> Exa, there isn't a consistent solution unfortunately
[19:29:16] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:29:20] <Exa> that's what I thought
[19:29:25] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 268 seconds)
[19:29:39] <habnabit> Exa, pipx is the closest there is, by ignoring distro-shipped apps entirely
[19:29:46] *** Joins: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca)
[19:29:49] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[19:29:51] <grym> Exa: i have more or less completely binned using my distro to install or manage python things
[19:30:05] <Crys> Exa: it depends on your distro. Some distros ship multiple Python versions and don't uninstall Python on distro upgrade.
[19:30:08] *** yitz_ is now known as yitz
[19:30:09] *** Joins: guntbert_ (~yesitsme@user/guntbert)
[19:30:23] <habnabit> Exa, but yes, it's not uncommon to ignore distro-installed python apps/libraries
[19:30:24] <grym> so my ~/.local/bin is full of symlinks to {ipython, litecli, youtube-dl, ...} and all of those things are things ubuntu had nothing to do with
[19:30:44] <Crys> Exa: others require 3rd party extensions like deadsnakes or pyenv.
[19:30:46] <grym> and now that pipx list --json is in, it's almost versionable :)
[19:31:16] *** Quits: guntbert (~yesitsme@user/guntbert) (Ping timeout: 268 seconds)
[19:31:29] *** Quits: frostschutz (~frostschu@2a01:c22:d419:d300:60c7:cd2:113f:a5c9) (Ping timeout: 272 seconds)
[19:31:52] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[19:31:54] <habnabit> grym, oh, can you restore from a `pipx list --json`?
[19:32:12] <grym> habnabit: not yet, but it's next up
[19:32:33] <habnabit> grym, i am very iterested
[19:32:46] <grym> habnabit: https://github.com/pypa/pipx/issues/687  this is where it's being tracked
[19:32:53] <Exa> I see that pipx got an "upgrade-all" argument, so I would need to learn the habit of running it (too bad there isn't a command to simply list upgrades afaik)
[19:33:18] <rany> SnoopJ, thanks
[19:36:49] <Exa> grym: the json output can be used for reinstalling everything?
[19:36:56] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 264 seconds)
[19:37:12] *** Quits: dsl (~dsl@ppp59-167-120-76.static.internode.on.net) (Ping timeout: 250 seconds)
[19:37:17] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[19:37:55] <grym> Exa: not until 687 is done
[19:37:58] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Ping timeout: 265 seconds)
[19:38:02] <Exa> (not a big deal do to some shell scripting with jq tho)
[19:38:05] <grym> Exa: but it's absolutely on the radar
[19:38:09] <Exa> thanks
[19:38:11] <grym> haha yeah that was proposed in the ticket :P
[19:38:36] *** Quits: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca) (Quit: Client closed)
[19:38:39] *** Joins: i0e (~is0ke3@user/is0ke3)
[19:39:18] <grym> ooo, neat, runpip
[19:39:23] *** Joins: KevinX__ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[19:39:27] *** Quits: KevinX_ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Read error: Connection reset by peer)
[19:39:30] <grym> i had previously been doing really ugly shell hacks to get that one
[19:40:57] <Exa> time to clean the .local prefixes on my computers, I don't have only python-related things :/
[19:41:09] *** Joins: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net)
[19:41:11] *** Joins: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca)
[19:42:10] *** Quits: jpodivin (~jpodivin@118.108.broadband14.iol.cz) (Quit: Leaving)
[19:42:12] <grym> my .local/bin is ... busy
[19:42:21] <grym> let's go with "busy", that's a nice charitable word
[19:42:22] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 268 seconds)
[19:42:28] *** Joins: frostschutz (~frostschu@2a01:c23:7c67:7e00:25:9d6a:f99d:5668)
[19:43:10] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[19:43:19] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[19:43:30] *** Joins: chele_ (~chele@user/chele)
[19:43:30] *** Joins: Lando-HoloNet (~Lando@user/lando-spacepimp)
[19:43:31] *** Joins: BillyZane2 (~BillyZane@193.160.245.86)
[19:43:45] *** Joins: bancroft_ (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca)
[19:43:57] *** Joins: tg_ (~tg@rockylinux/infra/tg)
[19:44:01] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:44:12] *** Quits: magla (~gelignite@55d44a14.access.ecotel.net) (Read error: Connection reset by peer)
[19:44:17] *** Joins: dsl (~dsl@ppp59-167-120-76.static.internode.on.net)
[19:44:20] *** Quits: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net) (Read error: Connection reset by peer)
[19:44:26] *** Joins: hiptobecubic (~john@c-73-55-99-95.hsd1.fl.comcast.net)
[19:44:32] *** Joins: pwnd_sfw (~pwnd_sfw@ool-18b88100.dyn.optonline.net)
[19:44:32] *** Quits: wallace_mu200 (~wallace_m@pool-173-66-6-41.washdc.fios.verizon.net) (Quit: Client closed)
[19:45:32] *** Quits: chele (~chele@user/chele) (Killed (lithium.libera.chat (Nickname regained by services)))
[19:45:32] *** chele_ is now known as chele
[19:45:46] *** Joins: dalan1 (~dalan@110-175-186-185.tpgi.com.au)
[19:45:48] *** Joins: ThanatosJ (~Thanatos@102.89.2.141)
[19:45:50] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[19:45:56] *** Joins: xcm (~xcm@user/xcm)
[19:46:28] *** Joins: dhellmann (~dhellmann@097-081-099-073.res.spectrum.com)
[19:47:06] *** Joins: BigShip2 (~BigShip@user/bigship)
[19:47:14] *** Joins: radu2422 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net)
[19:47:25] *** Joins: comerijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:47:50] *** Joins: MJ94_ (mj94@user/mj94)
[19:47:50] *** Joins: pizzaiolo (~pizzaiolo@user/pizzaiolo)
[19:47:52] *** Joins: libussa_ (~libussa@libussa.net)
[19:47:55] *** Joins: SpydarOO7 (~spydar007@user/spydar007)
[19:47:56] *** Joins: slavfox_ (~slavfox@ipv4-93-158-232-111.net.internetunion.pl)
[19:47:56] *** Joins: N3X15_ (~nexis@mail.nexisonline.net)
[19:48:20] *** Joins: hirish_ (~hirish@ip85.ip-137-74-20.eu)
[19:48:23] *** Joins: adder` (~adder@user/adder)
[19:48:44] *** Joins: doc|work (~doc@user/doc)
[19:48:46] *** Joins: CatKiller (~CatKiller@51.37.221.22)
[19:48:56] *** Joins: fjmorazan_ (~quassel@user/fjmorazan)
[19:49:01] *** Joins: simone1 (~nya@user/sx)
[19:49:02] *** Joins: dostoyev1ky2 (~sck@user/dostoyevsky2)
[19:49:02] *** Quits: neilthereildeil (~neilthere@204.115.183.4) (Quit: Client closed)
[19:49:18] *** Joins: lukka5_ (~lukka5@246-60-231-201.fibertel.com.ar)
[19:49:24] *** Joins: dme86_ (~dan@user/dan86)
[19:49:32] *** Quits: tbcr (~tbcr@user/tbcr) (Killed (NickServ (GHOST command used by tbcr_!~tbcr@75.183.195.9)))
[19:49:37] *** Quits: lukka5_ (~lukka5@246-60-231-201.fibertel.com.ar) (Client Quit)
[19:49:38] *** Joins: Wulf4 (~Wulf@user/wulf)
[19:49:47] *** Joins: mossman93_ (~quassel@user/mossman93)
[19:49:49] *** Joins: neibo (~neibo@143.red-88-5-146.dynamicip.rima-tde.net)
[19:49:49] *** Joins: lukka5_ (~lukka5@246-60-231-201.fibertel.com.ar)
[19:49:52] *** Joins: gaken_ (~gaken@user/galen)
[19:49:55] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[19:49:55] *** Joins: redgloboli_ (~redglobol@user/redgloboli)
[19:50:12] *** Joins: ionface_ (~ionface@user/ionface)
[19:50:15] *** Joins: OMGOMG_ (~bobrobert@poppy.ifi.uio.no)
[19:50:17] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[19:50:19] *** Joins: slowButP1esent (~slowButPr@user/slowbutpresent)
[19:50:23] *** Joins: wei2912_ (~wei2912@112.199.250.21)
[19:50:28] *** Joins: srji_ (~srji@static.43.141.203.116.clients.your-server.de)
[19:50:35] *** Joins: Xaldafax_ (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:50:36] *** Joins: blackop_ (~ocloud@user/blackop)
[19:50:39] *** Joins: ideopath_ (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net)
[19:50:47] *** Joins: digilink_ (~digilink@user/digilink)
[19:50:53] *** Joins: Crassus (~Crassus@user/crassus)
[19:50:58] *** Joins: JTL1 (~irc@user/jtl)
[19:51:02] *** Quits: pizza (~pizzaiolo@user/pizzaiolo) (Killed (NickServ (GHOST command used by pizzaiolo)))
[19:51:04] *** pizzaiolo is now known as pizza
[19:51:13] *** Joins: metah4ck1 (~meta@user/metah4ck3r)
[19:51:41] *** Joins: KeiraT (~unknown@lulzsec.co.uk)
[19:51:44] *** Joins: BlessJah_ (~BlessJah@user/blessjah)
[19:51:47] *** Quits: foobaz212 (~foobaz212@cpc84737-aztw28-2-0-cust8.18-1.cable.virginm.net) (Quit: Client closed)
[19:51:58] *** Joins: pieguy128_ (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca)
[19:52:34] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:53:49] *** Joins: s6d7XSaB_ (~{HD}@102.165.16.232)
[19:53:58] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[19:54:10] *** Joins: amosbird (~amosbird@13.75.119.182)
[19:54:23] *** Joins: wallace_mu200 (~wallace_m@pool-173-66-6-41.washdc.fios.verizon.net)
[19:54:24] *** Quits: dme86_ (~dan@user/dan86) (Ping timeout: 266 seconds)
[19:54:24] *** Quits: Lando-HoloNet (~Lando@user/lando-spacepimp) (Ping timeout: 266 seconds)
[19:54:25] <amosbird> Hello! Is it possible to get the context string of the json parsing error :  json.decoder.JSONDecodeError: Invalid \escape: line 1 column 575073 (char 575072)
[19:54:44] <amosbird> like the previous 20 characters and the latter 20
[19:54:51] <amosbird> next*
[19:55:00] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (*.net *.split)
[19:55:00] *** Quits: srhm (~ascii@user/srhm) (*.net *.split)
[19:55:02] *** Quits: pagnol (~user@014198154145.ctinets.com) (*.net *.split)
[19:55:02] *** Quits: dude-x (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net) (*.net *.split)
[19:55:03] *** Quits: libussa (~libussa@libussa.net) (*.net *.split)
[19:55:04] *** Quits: janemba (~janemba@185.107.80.152) (*.net *.split)
[19:55:05] *** Quits: tg (~tg@rockylinux/infra/tg) (*.net *.split)
[19:55:05] *** Quits: dhellman_ (~dhellmann@097-081-099-073.res.spectrum.com) (*.net *.split)
[19:55:06] *** Quits: death916 (~death916@user/death916) (*.net *.split)
[19:55:06] *** Quits: deviantfero (~deviantfe@190.150.27.58) (*.net *.split)
[19:55:07] *** Quits: timkofu (~timkofu@user/timkofu) (*.net *.split)
[19:55:07] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (*.net *.split)
[19:55:07] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (*.net *.split)
[19:55:08] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (*.net *.split)
[19:55:08] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (*.net *.split)
[19:55:08] *** Quits: dme86 (~dan@user/dan86) (*.net *.split)
[19:55:09] *** Quits: darksun (~darksun@user/darksun) (*.net *.split)
[19:55:09] *** Quits: zeden (~zeden@user/zeden) (*.net *.split)
[19:55:09] *** Quits: bancroft (~bancroft@bras-base-mtrlpq3015w-grc-11-70-55-136-62.dsl.bell.ca) (*.net *.split)
[19:55:09] *** Quits: Thanatos (~Thanatos@102.89.2.5) (*.net *.split)
[19:55:09] *** Quits: redgloboli (~redglobol@user/redgloboli) (*.net *.split)
[19:55:10] *** Quits: pathos (~pathos@169-1-247-122.ip.afrihost.co.za) (*.net *.split)
[19:55:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (*.net *.split)
[19:55:12] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (*.net *.split)
[19:55:12] *** Quits: pbryan (~pbryan@S010600306d111fac.vf.shawcable.net) (*.net *.split)
[19:55:12] *** Quits: dambuster (~dambuster@185.193.170.225) (*.net *.split)
[19:55:13] *** Quits: neibo_ (~neibo@143.red-88-5-146.dynamicip.rima-tde.net) (*.net *.split)
[19:55:14] *** Quits: MoosieRachel (~Moosadee@136.32.155.193) (*.net *.split)
[19:55:14] *** Quits: kilitary (~kilitary@kilitary.ru) (*.net *.split)
[19:55:15] *** Quits: digilink (~digilink@user/digilink) (*.net *.split)
[19:55:16] *** Quits: blackop (~ocloud@user/blackop) (*.net *.split)
[19:55:16] *** Quits: doc|home (~doc@user/doc) (*.net *.split)
[19:55:16] *** Quits: ionface (~ionface@user/ionface) (*.net *.split)
[19:55:17] *** Quits: adder`` (~adder@user/adder) (*.net *.split)
[19:55:18] *** Quits: riz (~BillyZane@193.160.245.86) (*.net *.split)
[19:55:18] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (*.net *.split)
[19:55:20] *** Quits: radu242 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net) (*.net *.split)
[19:55:21] *** Quits: withere__ (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (*.net *.split)
[19:55:21] *** Quits: xcm_ (~xcm@user/xcm) (*.net *.split)
[19:55:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (*.net *.split)
[19:55:23] *** Quits: dalan (~dalan@110-175-186-185.tpgi.com.au) (*.net *.split)
[19:55:23] *** Quits: metah4ck3r (~meta@user/metah4ck3r) (*.net *.split)
[19:55:23] *** Quits: wei2912 (~wei2912@112.199.250.21) (*.net *.split)
[19:55:24] *** Quits: fjmorazan (~quassel@user/fjmorazan) (*.net *.split)
[19:55:24] *** Quits: mingdao (~mingdao@wireguard/tunneler/mingdao) (*.net *.split)
[19:55:24] *** Quits: predmijat (~predmijat@mail.strogopro.com) (*.net *.split)
[19:55:24] *** Quits: leo_song (~leo_song@1.156.61.81) (*.net *.split)
[19:55:24] *** Quits: Wulf (~Wulf@user/wulf) (*.net *.split)
[19:55:25] *** Quits: Gaffel (~gaffel@h-178-174-170-170.A1405.priv.bahnhof.se) (*.net *.split)
[19:55:25] *** Quits: mossman93 (~quassel@user/mossman93) (*.net *.split)
[19:55:25] *** Quits: ominionx (~ominionx@38.135.235.14) (*.net *.split)
[19:55:25] *** Quits: Stx (stx@libera/staff/stx) (*.net *.split)
[19:55:25] *** Quits: anddam (~anddam@user/anddam) (*.net *.split)
[19:55:25] *** Quits: xa0s (~xa0s@mab.sdf.org) (*.net *.split)
[19:55:26] *** Quits: cliluw (~cliluw@47.147.80.149) (*.net *.split)
[19:55:26] *** Quits: BlessJah (~BlessJah@user/blessjah) (*.net *.split)
[19:55:26] *** Quits: OMGOMG (~bobrobert@poppy.ifi.uio.no) (*.net *.split)
[19:55:26] *** Quits: Leonarbro (~Leonet@user/leonarbro) (*.net *.split)
[19:55:26] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca) (*.net *.split)
[19:55:26] *** Quits: JTL (~irc@user/jtl) (*.net *.split)
[19:55:26] *** Quits: hirish (~hirish@ip85.ip-137-74-20.eu) (*.net *.split)
[19:55:26] *** Quits: MJ94 (mj94@user/mj94) (*.net *.split)
[19:55:26] *** Quits: asd (~noname@user/asd) (*.net *.split)
[19:55:26] *** Quits: fleabag (~sirpengi@li587-65.members.linode.com) (*.net *.split)
[19:55:29] *** Quits: srji (~srji@static.43.141.203.116.clients.your-server.de) (*.net *.split)
[19:55:29] *** Quits: stormbytes (~textual@ool-18e4a56c.dyn.optonline.net) (*.net *.split)
[19:55:29] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (*.net *.split)
[19:55:30] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (*.net *.split)
[19:55:30] *** Quits: slavfox (~slavfox@93.158.232.111) (*.net *.split)
[19:55:30] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (*.net *.split)
[19:55:33] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[19:55:33] *** Quits: simone (~nya@user/sx) (*.net *.split)
[19:55:33] *** Quits: ideopathic (~ideopathi@99-6-12-70.lightspeed.irvnca.sbcglobal.net) (*.net *.split)
[19:55:33] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (*.net *.split)
[19:55:33] *** Quits: Keira (~unknown@lulzsec.co.uk) (*.net *.split)
[19:55:33] *** Quits: MrFixIt (~samurai_@c-73-246-215-75.hsd1.il.comcast.net) (*.net *.split)
[19:55:33] *** Quits: {HD} (~{HD}@102.165.16.232) (*.net *.split)
[19:55:33] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (*.net *.split)
[19:55:33] *** Quits: BigShip (~BigShip@user/bigship) (*.net *.split)
[19:55:33] *** Quits: galen (~gaken@user/galen) (*.net *.split)
[19:55:33] *** Quits: syrius (syrius@titan.stormtek.net) (*.net *.split)
[19:55:33] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (*.net *.split)
[19:55:33] *** Wulf4 is now known as Wulf
[19:55:33] *** N3X15_ is now known as N3X15
[19:55:33] *** simone1 is now known as simone
[19:55:33] *** radu2422 is now known as radu242
[19:55:33] *** BigShip2 is now known as BigShip
[19:55:33] *** dalan1 is now known as dalan
[19:55:33] *** Lord_of_Life_ is now known as Lord_of_Life
[19:55:33] *** MJ94_ is now known as MJ94
[19:55:33] *** slavfox_ is now known as slavfox
[19:55:33] *** s6d7XSaB_ is now known as {HD}
[19:55:33] *** SpydarOO7 is now known as Spydar007
[19:55:33] <grym> amosbird: sure, if you have that string
[19:55:33] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: leaving)
[19:55:33] *** Joins: cliluw (~cliluw@47.147.80.149)
[19:55:33] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[19:55:33] *** Joins: asd (~noname@user/asd)
[19:55:33] *** Joins: ExeciN (~ExeciN@user/nicexe)
[19:55:50] <SnoopJ> amosbird, .doc on the exception is the document
[19:55:58] <SnoopJ> https://docs.python.org/3/library/json.html#json.JSONDecodeError
[19:56:40] *** Joins: kickingvegas (~cchoi@c-24-130-175-68.hsd1.ca.comcast.net)
[19:56:51] <grym> oh, nice! TIL
[19:57:03] <SnoopJ> samesies
[19:57:31] *** Joins: GeniusMusing (~geniusmus@199.91.225.59)
[19:57:47] *** Quits: comerijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[19:58:40] *** Joins: mingdao (~mingdao@wireguard/tunneler/mingdao)
[19:59:05] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[19:59:13] *** Joins: dude-x_ (~textual@pool-100-1-141-108.nwrknj.fios.verizon.net)
[19:59:29] *** Quits: BlessJah_ (~BlessJah@user/blessjah) (Quit: leaving)
[19:59:44] *** Joins: BlessJah (~BlessJah@user/blessjah)
[19:59:54] *** Joins: Gaffel (~gaffel@h-178-174-170-170.A1405.priv.bahnhof.se)
[20:00:35] *** Joins: ominionx (~ominionx@38.135.235.14)
[20:01:02] *** Quits: varaindemian43 (~varaindem@86.121.85.200) (Quit: Client closed)
[20:01:30] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[20:01:50] *** Joins: zeden (~zeden@user/zeden)
[20:01:53] *** llua` is now known as llua
[20:01:59] *** Joins: janemba (~janemba@185.107.80.152)
[20:02:26] *** Joins: Stx (stx@libera/staff/stx)
[20:02:30] *** Joins: anddam (~anddam@user/anddam)
[20:02:33] *** Quits: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com) (Quit: Haxxa flies away.)
[20:02:57] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[20:03:17] *** Trashlord__ is now known as Trashlord
[20:03:28] *** Joins: MrFixIt (~samurai_@c-73-246-215-75.hsd1.il.comcast.net)
[20:04:08] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[20:04:20] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[20:06:36] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[20:06:54] *** Quits: ExeciN (~ExeciN@user/nicexe) (Quit: Client closed)
[20:07:23] *** Joins: ExeciN (~ExeciN@user/nicexe)
[20:08:06] *** Quits: DnzAtWrkV2 (~DnzAtWrk@mobile-access-6df0a1-135.dhcp.inet.fi) (Read error: Connection reset by peer)
[20:08:38] *** Joins: agumonke` (~user@88.160.31.174)
[20:13:46] *** Joins: Batzy (~Batzy12@user/batzy)
[20:14:48] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[20:15:14] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[20:16:20] *** Quits: m42e_de (~m42e@pb42.de) (Quit: WeeChat 3.1)
[20:16:36] *** Joins: m42e (~m42e@pb42.de)
[20:16:52] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:16:56] *** Joins: FluffyMask (~FluffyMas@user/fluffymask)
[20:18:35] *** Quits: Crassus (~Crassus@user/crassus) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:18:35] <Exa> Is there a shorthand to run an executable (not a python executable) in a virtualenv created with pipx?
[20:18:35] *** Joins: dme86 (~dan@user/dan86)
[20:18:51] <grym> Exa: i'm not sure what that means
[20:18:58] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:19:38] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[20:19:55] *** Joins: cthulchu_ (~Cthulchu@195.66.198.226)
[20:21:00] <Exa> grym: in fact, what I wanted doesn't work in my usecase anyway.  the idea was to run a subshell, source the activate script and run the executable given in argument
[20:21:21] *** Quits: wei2912_ (~wei2912@112.199.250.21) (Quit: Lost terminal)
[20:21:31] <grym> Exa: oh, to make not-python thing believe that $(which python) is your venvs?
[20:21:34] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[20:21:55] <Exa> the executable doesn't work like I thought, so it doesn't matter
[20:22:34] *** Joins: viktorivan (~ivan@187.223.103.108)
[20:22:54] *** Quits: vladoski (~vladoski@2001:b07:add:d406:2113:7341:3bad:8a0d) (Remote host closed the connection)
[20:24:54] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[20:25:33] *** Joins: Thanattt (~Thanatos@102.89.3.214)
[20:28:07] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[20:28:32] *** Quits: ThanatosJ (~Thanatos@102.89.2.141) (Ping timeout: 264 seconds)
[20:29:45] *** Quits: Trashlord (~trash@user/trashlord) (Ping timeout: 252 seconds)
[20:30:23] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[20:30:51] *** Joins: Trashlord (~trash@user/trashlord)
[20:31:20] *** Quits: Mrokii_ (~mrokii@p2e572db4.dip0.t-ipconnect.de) (Ping timeout: 244 seconds)
[20:32:21] *** dob1_ is now known as dob1
[20:32:22] *** Joins: neilthereildeil (~neilthere@204.115.183.4)
[20:32:24] *** Quits: white_shadow (~brey@59.91.240.255) (Quit: Leaving)
[20:33:12] *** Joins: Mrokii_ (mrokii@gateway/vpn/airvpn/mrokii)
[20:34:47] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Ping timeout: 268 seconds)
[20:35:09] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[20:35:49] *** Quits: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca) (Quit: Client closed)
[20:36:56] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[20:37:48] *** guntbert_ is now known as guntbert
[20:37:49] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[20:38:52] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:41:15] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[20:42:50] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[20:43:02] *** slowButP1esent is now known as slowButPresent
[20:43:03] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[20:43:41] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:44:54] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[20:44:59] *** Joins: rsrx (~rsrx@175.158.49.149)
[20:46:11] *** Quits: jess (~jess@libera/staff/jess) ()
[20:48:21] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[20:48:58] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[20:50:14] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[20:50:37] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:52:10] *** blackop_ is now known as blackop
[20:52:27] *** Quits: HaMsTeRs (~HaMsTeRs@210.3.201.132) (Quit: Leaving)
[20:53:11] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 272 seconds)
[20:54:47] <neilthereildeil> hey all
[20:55:00] <neilthereildeil> i've late-attached to a python instance with GDB
[20:55:09] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:55:12] <neilthereildeil> and am using the python plugin to debug the runtime
[20:55:24] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[20:55:36] *** Quits: Meteorhead (~Meteorhea@165.225.205.20) (Quit: Client closed)
[20:55:45] <neilthereildeil> how can i print a variable that was declared outside of any class or function?
[20:56:18] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[20:58:01] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:58:10] *** Joins: darksun (~darksun@user/darksun)
[20:58:17] *** Joins: pathos (~pathos@169-1-247-122.ip.afrihost.co.za)
[20:58:21] *** Quits: Pleiades (~admin@193.254.47.212) (Ping timeout: 252 seconds)
[20:59:19] *** Joins: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi)
[20:59:48] *** Quits: wallace_mu200 (~wallace_m@pool-173-66-6-41.washdc.fios.verizon.net) (Quit: Client closed)
[21:00:03] <neilthereildeil> im actually debugging a semphore leak
[21:00:24] <neilthereildeil> so "py-print max_machines_semaphore" works
[21:00:32] <neilthereildeil> and prints out the semaphore object
[21:00:50] <neilthereildeil> but im actually after the value returned by "max_machines_semaphore.get_value()"
[21:00:58] <neilthereildeil> can i call that function from the gdb python plugin?
[21:01:18] <neilthereildeil> or directly get at the variable that would be returned as a member of the function call?
[21:01:23] *** Quits: Juan (~Juan@user/juan) (Quit: Juan)
[21:01:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:01:37] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[21:01:43] <neilthereildeil> *or directly get at the attribute that would be returned as a result of the function call?
[21:01:52] <neilthereildeil> or otherwise get that value in any other way?
[21:03:40] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:03:53] *** Quits: f1se4 (~f1se4@213.195.98.55) (Quit: WeeChat 2.8)
[21:04:30] *** Joins: magla (~gelignite@55d44a14.access.ecotel.net)
[21:05:20] *** Joins: nomn (nomn@user/nomn)
[21:08:26] *** Quits: dkmueller (~dkmueller@dynamic-095-115-042-075.95.115.pool.telefonica.de) (Quit: WeeChat 3.1)
[21:08:53] *** Joins: KevinX (~KevinX@73.156.246.178)
[21:09:00] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[21:11:13] *** Quits: sodimel (~co@29.172.125.78.rev.sfr.net) (Quit: Konversation terminated!)
[21:11:25] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[21:11:42] *** Quits: KevinX__ (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 264 seconds)
[21:13:02] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[21:14:08] *** Quits: dvx (~dvx@185.63.97.64) (Quit: dvx)
[21:14:15] *** Joins: tbcr (~tbcr@user/tbcr)
[21:14:45] *** Joins: node1 (~node1@user/node1)
[21:16:07] *** Quits: adder` (~adder@user/adder) (Remote host closed the connection)
[21:16:13] *** Quits: adder (~adder@user/adder) (Remote host closed the connection)
[21:17:10] *** dude-x_ is now known as dude-x
[21:17:17] *** Joins: yemel (~yemel@user/yemel)
[21:19:16] *** Joins: cthulchu_ (~Cthulchu@195.66.198.226)
[21:19:54] *** Joins: Kraus (~quassel@075-141-246-250.res.spectrum.com)
[21:20:09] <Kraus> Greetings! I have a small problem. On Ubuntu 20.04 (Mint 20.1) Was trying to run a script that seems to be well-maintained, but "request" module apparently wasn't installed? Even though it says it was? Maybe python was getting confused between 2 and 3? Anyways, I attempted to fix through various solutions I found on askubuntu threads, but I seem to have gotten myself in a bigger mess by doing so. It gives me a warning I'm using a
[21:20:09] <Kraus> deprecated version for 2.7, and the script I was attempting to run is getting further down the code but still having problems. So, I figure instead of digging myself a deeper hole, I should just undo the get-pip.py script I ran, but I don't know how.
[21:21:54] *** Quits: rsrx (~rsrx@175.158.49.149) (Ping timeout: 264 seconds)
[21:22:09] <odoood> what's that script doing?
[21:22:11] <nomn> Can importing a module/library automatically declare an object variable? there's an undeclared `websocket` in some code that works.
[21:22:38] <deniska> Kraus: did you run it as root?
[21:22:47] <teut> python3 -m pip install x  to run anything on python3  Kraus
[21:23:13] <Kraus> deniska: I did not, so, does it default to usr/local/ ?
[21:23:41] <Kraus> teut: Yes, that's the odd thing. While it says request is there, when the script runs it says it can't find it.
[21:23:50] <deniska> Kraus: Well, I mean, it's easier to fix the mess if you didn't run `sudo pip` or similar
[21:23:57] <teut> well see pip list
[21:24:01] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[21:24:04] <Kraus> deniska:  Definitely didn't run it as root no :)
[21:24:11] <deniska> Kraus: do you run the script using the same python version you ran pip from?
[21:24:23] *** Joins: lavadonut (~lavadonut@user/lavadonut)
[21:24:29] <teut> i too faced these problems on linux therefore I discarded  it
[21:24:41] <Kraus> deniska: That's the part I'm not too familiar. Since 2.7 is deprecated I do believe python3 is what it defaults to.
[21:24:48] <teut> I tried python3  , python37 , python38  one of them worked
[21:25:05] <deniska> Kraus: on many linux distros `python` points to python2.7 for compatibility reasons
[21:25:18] <Kraus> pip list returns a bunch of stuff... "requests" is in there, version 2.22.0
[21:25:18] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[21:25:44] <teut> are you able to get the repl by python3 ?
[21:25:45] <Kraus> deniska: Yeah that's what I found too. I think it bootstraps? I'm not sure. :)
[21:25:54] *** Joins: markcerv (~markcerv3@52-119-125-204.PUBLIC.monkeybrains.net)
[21:25:55] <Kraus> repl?
[21:26:01] <deniska> Kraus: also use `python3 -m pip` instead of just `pip` because who knows what is `pip` on your specific setup
[21:26:20] <deniska> (especially after running get-pip using whatever python version :) )
[21:26:24] *** Quits: cthulchu_ (~Cthulchu@195.66.198.226) (Ping timeout: 252 seconds)
[21:26:55] <Kraus> Just for info, here's the instructions I followed: https://packaging.python.org/tutorials/installing-packages/#ensure-you-can-run-python-from-the-command-line
[21:28:07] <Kraus> I followed the part that says "If that still doesn’t allow you to run python -m pip:" and securely dled get-pip.py, and when I did that it said I needed to run the 2.7 bootstrapped version. So I dled that one, followed that, and it installed, but that's when the deprecation warning began returning.
[21:29:31] <Kraus> So I THINK what is happening is it overrode the python3 pip with the older version, and I'm thinking... okaaayy how do I undo that to return to my original pip?
[21:30:08] <Kraus> At one point I tried uninstalling python3 using apt, but it warned me doing so could irrevocably harm my system so I aborted.
[21:30:16] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[21:30:21] <Kraus> Then I tried running a reinstall and nothing changed.
[21:32:31] <Kraus> I also tried running `python3 -m pip install --upgrade pip` and it's saying it's already satisfied.
[21:32:45] <deniska> Kraus: (on ubuntu you could just install python3-requests package, if a script only depends on it, it probably would be a simpler solution)
[21:32:48] <teut> try "python 36"
[21:32:54] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[21:32:56] <teut> python36 *
[21:33:01] <Kraus> Oh! deniska I tried that too, but it couldn't locate that package.
[21:33:14] <deniska> Kraus: how are you launching the script in question?
[21:33:25] <Kraus> deniska: python36 not found
[21:33:33] <teut> python37?
[21:33:45] *** Quits: rendar (~rendar@user/rendar) ()
[21:33:50] <teut> on latest linux python39 was there on 2020
[21:33:54] <Kraus> deniska: I go to the git downloaded dir and run ./scriptname [options]
[21:34:04] <teut> in*
[21:34:24] <deniska> Kraus: what is the first line of the script, which specifies the interpreter?
[21:34:27] *** Quits: dyslexicat (~dyslexica@212.253.59.190) (Quit: leaving)
[21:34:27] <Kraus> I tried doing python3 ./scriptname [options] as well
[21:34:39] <teut> python3 -m
[21:34:50] <odoood> Kraus: `whereis python` may help
[21:35:19] <Kraus> deniska: First line of the script is #!/usr/bin/env python, but further down it mentions `PY3 = sys.version_info[0] == 3` so.. I'm thinking that's calling python3?
[21:35:24] <deniska> Kraus: what is the error when you are trying python3 ./scriptname?
[21:36:52] <Kraus> deniska: Okay.. I'll tell you the error, but I should mention this error only began once I started using the deprecated pip version. Before, the error was `ImportError: No module named 'requests'` ... but now it's `selenium.common.exceptions.WebDriverException: Message: 'geckodriver' executable needs to be in PATH. `
[21:36:57] *** Joins: dkmueller (~dkmueller@2a01:c23:bc05:2b00:56bd:7c0e:bee9:7bb4)
[21:37:06] <Kraus> And that error is coming from system.py
[21:37:23] <Kraus> /home/user/.local/lib/python3.8/site-packages/selenium/webdriver/common/service.py to be exact
[21:38:14] <Kraus> teut: whereis returns: python: /usr/bin/python3.8 /usr/bin/python3.8-config /usr/bin/python /usr/bin/python2.7 /usr/lib/python3.8 /usr/lib/python2.7 /usr/lib/python3.9 /etc/python3.8 /etc/python2.7 /usr/local/lib/python3.8 /usr/local/lib/python2.7 /usr/include/python3.8 /usr/include/python2.7 /usr/share/python
[21:38:49] <teut> you have got 3 pythons
[21:38:55] <Kraus> I'm wondering if this might be an overall path problem.. I'm wondering if perhaps some stuff is pointing to .local, and some is pointing to /usr/bin
[21:39:12] <Kraus> teut: AHh, I can see how that can cause issues. XD
[21:39:34] <Kraus> So, I think what I should do is try to rid of the unused/unwanted ones
[21:39:41] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Ping timeout: 252 seconds)
[21:39:48] *** Quits: teut (~teut@182.69.85.39) (Quit: Connection closed)
[21:40:03] <Kraus> But.... HOW? ~dundundunnnn..~
[21:40:17] *** Joins: teut (~teut@182.69.85.39)
[21:40:25] <Kraus> HMmm.. https://stackoverflow.com/questions/33033747/remove-all-previous-versions-of-python#33034184
[21:40:39] <teut> no you dont need to do that Kraus
[21:40:47] <Kraus> Okay.
[21:40:53] *** Joins: n00b101 (uid448161@id-448161.tooting.irccloud.com)
[21:40:55] <teut> python38    and python39 should work I thing
[21:40:56] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[21:41:05] <teut> python38 -m pip install x
[21:41:14] <teut> and similarly for 39
[21:41:34] *** Quits: markcerv (~markcerv3@52-119-125-204.PUBLIC.monkeybrains.net) (*.net *.split)
[21:41:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (*.net *.split)
[21:41:43] <Kraus> Neither python 38 or 39 are found.
[21:42:37] <teut> usr.bin/python3.8 -m pip install x
[21:42:41] <teut> enter the path
[21:43:35] <Kraus> /usr/bin/python3.8 -m pip install requests says it's already satisfied. /usr/bin/python3.9 -m pip install requests returns No such file or directory.
[21:44:35] <teut> so first thing is your paths arent set up
[21:44:45] <Kraus> Okay....
[21:44:47] <teut> python3  worked for you right?
[21:45:13] <Kraus> python3 works, in general, yeah
[21:45:23] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[21:45:27] <teut> so that means it represents the path of 3.8 then
[21:45:31] *** Quits: powerjungle (~powerjung@h081217087223.dyn.cm.kabsi.at) (Quit: ZNC - https://znc.in)
[21:45:33] *** Joins: seachdamh (~seachdamh@user/seachdamh)
[21:45:52] <Kraus> Are paths something I need to (re)configure each time I run a script or..?
[21:45:56] *** Quits: lukka5_ (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 264 seconds)
[21:46:06] *** Joins: Betal (~Beta@user/betal)
[21:46:37] <teut> python3  your/path/to/script.py      can  you share the error logs for this?
[21:46:58] <deniska> Kraus: I mean… do you have a geckodriver executable in your path?
[21:47:21] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[21:47:27] <deniska> Kraus: you probably need to install firefox-geckodriver
[21:47:28] <teut> are you using selenium?
[21:47:28] *** Joins: Skyz (~Skyz@ool-43538427.dyn.optonline.net)
[21:47:36] <deniska> (through apt, not through pip)
[21:48:23] <Kraus> deniska: Well, the .py file trying to find geckodriver is system.py, would I have to locate and open system.py to discover what path it's attempting to locate it in?
[21:48:30] <seachdamh> Is any "pritty" way to make relative small, compact binary distribution of python project (with heavy use of scipy libriaries)?
[21:49:01] <Kraus> teut: The script I'm running has a -f option to toggle firefox instead of chrome, which I'm using when I run it.
[21:49:03] <seachdamh> posibble win7-win10 friendly
[21:49:28] <teut> pyinstaller seachdamh
[21:50:19] <teut> i dont know where did firefox or chrome came in the picture Kraus?
[21:50:22] <Kraus> deniska: Trying that now
[21:50:34] <SnoopJ> seachdamh, are you targeting systems that already have Python installed?
[21:50:43] <seachdamh> teut: thx. I will look at it.
[21:50:49] <Kraus> deniska: That worked. It's properly running the script now. :)
[21:51:17] <seachdamh> SnoopJ: no, I have to assume system don't have any python runtime
[21:51:32] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Remote host closed the connection)
[21:51:38] <SnoopJ> seachdamh, PyInstaller is probably your best bet, then
[21:51:43] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[21:51:54] *** petaflot is now known as exhausteddev
[21:52:08] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[21:52:32] <teut> or use  go and link your python code somehow
[21:52:40] <SnoopJ> If you had Python at the target side, there's `shiv`, but that produces a "zipapp" (an interpreter-runnable archive) which needs a runtime.
[21:52:56] <SnoopJ> teut, "link python code" is basically agrammatical
[21:53:56] <teut> well, ok you are right, I should first try that myself
[21:55:21] <seachdamh> I will check first @pyinstaller, mayby if will be time I look @shiv to. But safest for me look like use pyinstaller.
[21:55:22] *** Joins: syrius (syrius@titan.stormtek.net)
[21:55:27] *** Joins: cthulchu_ (~Cthulchu@195.66.198.226)
[21:55:27] <teut> btw can you remind me of that  Language interface , also related to Ironpython thing that you told me yesterday SnoopJ?
[21:55:38] <SnoopJ> teut, not sure what you mean
[21:55:45] <seachdamh> thx.
[21:56:08] <SnoopJ> seachdamh, shiv won't do what you want, because it *needs* a Python interpreter installed separately. So yea, look at PyInstaller.
[21:57:01] <teut> foreign function interfaces, fortunately I could remind myself "foreign" and i had bookmarked it
[21:57:16] <SnoopJ> teut, FFI is more a concept than a specific thing
[21:57:25] *** Quits: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com) (Ping timeout: 268 seconds)
[21:58:21] <teut> well its an agreement between designer of 2 programming languages
[21:58:27] <teut> designers*
[21:58:49] <SnoopJ> ctypes and CFFI are the more notable FFI realizations in Python contexts (although arguably the C-API itself is an FFI)
[21:58:51] *** Quits: metah4ck1 (~meta@user/metah4ck3r) (Quit: WeeChat 3.1)
[21:59:08] *** Joins: metah4ck3r (~meta@user/metah4ck3r)
[21:59:37] <teut> ctypes is ffi or language bindings?
[21:59:50] <SnoopJ> those mean almost the same thing
[22:00:24] *** Joins: GeorgeK (~GeorgeK@cpe-70-92-5-228.wi.res.rr.com)
[22:00:25] <SnoopJ> I would definitely not call ctypes anything like bindings
[22:01:10] <deniska> Kraus: not always, but quite often errors say what the problem is :)
[22:01:58] <Kraus> deniska: downloading the firefox-geckodriver fixed the problem, thanks :)
[22:02:48] <teut> is it just that c functions are run under the hood  instead of bytecode conversion and feeding to the interpreter?
[22:04:06] <SnoopJ> teut, I don't know what "it" you are asking about, but it is correct to say that C is not (usually) interpreted
[22:06:00] <teut> i m saying that the ffi,  in that  after parsing python code , you just run some c functions
[22:06:34] *** Joins: nac (~nac@user/nac)
[22:06:38] <teut> you dont convert that code to bytecode
[22:12:47] *** Joins: baltazar (~baltazar@94-21-242-21.pool.digikabel.hu)
[22:13:59] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[22:14:34] *** Quits: douglaswinship (~douglaswi@78.40.148.180) (Ping timeout: 265 seconds)
[22:14:42] *** Quits: Thanattt (~Thanatos@102.89.3.214) (Ping timeout: 264 seconds)
[22:14:43] <baltazar> Is it possible to index a string as if it were utf-16? I came up with `text.encode('utf-16')[offset*2].decode('utf-16')`, but this kinda sucks. is there any better way to achieve this?
[22:15:57] <grawity> odd request, but that actually sounds like the most straightforward and sensible way to implement something so specific
[22:15:58] <baltazar> (obviously I'm only encoding once if I have to index into it multiple times, but still, this probably isn't the fastest code...)
[22:16:12] <grawity> is there any specific reason you need to do this at all?
[22:17:11] <baltazar> grawity: yea... pretty stupid that I have to do this, but tl;dr, facebook messenger sucks. I want to create a fix for mautrix-facebook, a matrix<->facebook bridge. Here's the issue I created: https://github.com/tulir/mautrix-facebook/issues/163
[22:17:13] *** Joins: waynew (~wayne@user/waynew)
[22:18:05] <grawity> oh, they actually ask you to account for surrogate pairs etc.?
[22:18:29] *** Joins: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59)
[22:18:44] *** Quits: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar) (Ping timeout: 252 seconds)
[22:19:01] *** Quits: Skyz (~Skyz@ool-43538427.dyn.optonline.net) (Quit: Client closed)
[22:19:19] <baltazar> well, even the web and android clients don't agree how to deal with them. They store mentions as offset+length pairs, but the web interface seems to calculate in "actual characters" (glyphs?) while the android and ios clients in utf-16 code units
[22:19:23] <baltazar> at least that's my best guess
[22:19:42] <grawity> tbh, if you need to handle it as if it were utf-16, then *actually* encoding that string to utf-16 seems like the cleanest way
[22:20:00] *** Quits: dkmueller (~dkmueller@2a01:c23:bc05:2b00:56bd:7c0e:bee9:7bb4) (Quit: WeeChat 3.1)
[22:20:05] <dale> python-language-server seems kind of buggy.  Is the grass any greener in Pyright?
[22:20:05] <grawity> since at least then you don't have to worry whether your "alternative algorithm" gives the same results an utf-16 encoder would
[22:20:16] <baltazar> still, it's pretty annoying that I have to calculate with 2*offset and 2*length
[22:20:19] <grawity> and in general, converting utf-8 to utf-16 is not exactly a CPU-intensive task
[22:20:20] <SnoopJ> teut, "run [other language] code" is basically what FFI means, yes.
[22:20:26] <baltazar> but fair enough
[22:20:39] <grawity> if you want code units, maybe struct.unpack it into an array of shorts
[22:20:46] <grawity> (after encoding to utf-16 of course)
[22:20:54] <SnoopJ> dale, I haven't used it, but people seem to like it well enough to at least sample it
[22:20:59] <teut> you got any book on that?
[22:21:09] <baltazar> whatever, probably not worht the cpu time, I'm just slicing it into a couple parts anyways.
[22:21:09] <SnoopJ> teut, on FFI?
[22:21:12] <teut> yes
[22:21:19] <SnoopJ> I don't know of any books about it, no
[22:21:34] <teut> https://www.oreilly.com/library/view/mastering-java-9/9781786468734/52d67251-8185-4a72-8ad2-b45f5e15e419.xhtml  I got this what its just information
[22:21:39] <teut> but*
[22:21:55] <teut> I need something more visual like code
[22:22:02] *** Joins: dkmueller (~dkmueller@2a01:c23:bc05:2b00:56bd:7c0e:bee9:7bb4)
[22:23:06] *** Quits: dostoyev1ky2 (~sck@user/dostoyevsky2) (Quit: leaving)
[22:23:09] <baltazar> on that note, is there some nice pythonic way to split a string into three parts about an two indexes?
[22:23:24] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[22:23:32] <baltazar> like, can I do better than this: `before, mention, after = b[:offset].decode('utf-16'), b[offset:offset + length].decode('utf-16'), b[offset + length:].decode('utf-16')`
[22:23:36] <teut> I have ran python code via c# in the past and used print statements in python, that print output was somehow received by python
[22:23:36] <KirkMcDonald> baltazar: You are probably going to want to use either 'utf-16le' or 'utf-16be' explicitly, rather than 'utf-16', because the latter will insert a BOM, which you may not want.
[22:23:39] <teut> by c#
[22:23:50] <teut> was it a subprocess or   ffi?
[22:24:17] <teut> I have ran python code via c# in the past and used print statements in python, that print output was somehow received by c# *
[22:24:32] <baltazar> KirkMcDonald: does that matter if I encode it back right afterwards anyways?
[22:24:45] <SnoopJ> teut, the answer could be either of those, or a third option. I couldn't tell you about your own past.
[22:25:03] <Yhg1s> baltazar: it matters because the indices will be different.
[22:25:04] <baltazar> I still want to end up with a string, just inserting some other string in the middle of it at the appropriate index
[22:25:13] <KirkMcDonald> baltazar: It matters if you're indexing it while encoded.
[22:25:17] <teut> ok
[22:25:30] <teut> whats the third option?
[22:25:54] <baltazar> Yhg1s, KirkMcDonald: I see... I guess no harm in doing it, although it does seem to work the way I'm doing it right now
[22:27:41] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[22:27:49] <Yhg1s> baltazar: well, if you're getting the correct substrings now, with the BOM, it probably does matter :)
[22:27:54] *** Joins: srilyk (~wayne@user/waynew)
[22:27:58] <KirkMcDonald> baltazar: It's always possible that this protocol is in fact using a BOM.
[22:28:03] <teut> I said that  the print statements output in python  was intercepted by c#  and c# could just get the strings, and then I could parse the string(it was json) in c# and that was it
[22:28:11] <KirkMcDonald> baltazar: In which case 'utf-16' will be correct.
[22:28:17] <baltazar> ah. fair enough
[22:28:19] <SnoopJ> teut, a third option would be an embedded interpreter
[22:28:21] <baltazar> thanks
[22:28:33] <SnoopJ> although I guess embedding is still FFI of a sort
[22:28:41] <teut> oh right , yes that was it
[22:28:50] <teut> I used python embedded
[22:29:00] <KirkMcDonald> In fact, given all the different platforms involved, native endianness is going to vary, so using a BOM seems logical.
[22:29:23] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:29:23] <teut> but that is no different than subprocess
[22:29:30] <SnoopJ> that is not correct
[22:29:43] <SnoopJ> it is *very* different
[22:29:46] <teut> how come it is not?
[22:29:52] <SnoopJ> a subprocess makes a whole new process!
[22:30:08] *** Joins: brickfat (~brickfat@user/brickfat)
[22:30:14] <SnoopJ> it's a brand new thing the operating system is tracking, new virtual memory, etc.
[22:30:22] *** Joins: baldr333 (~baldr333@modemcable034.69-70-69.static.videotron.ca)
[22:30:24] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[22:30:51] <teut> in a subprocess.run(["python" , "myscript.py"]    )    or   subprocess.run(["path/to/embedded/python" , "myscript.py"]    )
[22:30:57] <teut> see no difference
[22:31:07] <SnoopJ> "path/to/embedded/python" is nonsense
[22:31:12] *** Quits: waynew (~wayne@user/waynew) (Ping timeout: 244 seconds)
[22:31:13] <grawity> ...I don't think that's what they meant by "python embedded" at all
[22:31:21] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:31:40] <SnoopJ> teut, when I talk about an "embedded" Python, I mean that the program in the other language (let's say C#) has a copy of the Python interpreter *inside* of it.
[22:31:44] <KirkMcDonald> Hmph. I feel like I knew this already, but Python has no UCS2 codec. I can't trick it into decoding UTF-16 "incorrectly."
[22:31:48] <teut> Uploaded file: https://uploads.kiwiirc.com/files/c3783d5d29cd1bce2607294b7787a0b0/image.png
[22:31:55] <KirkMcDonald> Other than, you know, doing it manually.
[22:31:58] <SnoopJ> (it might not actually be *inside* because you can dynamically link to libpython, but I think it's pretty common to statically link it?)
[22:31:59] *** Joins: Wombat140 (~ab@dsl-217-155-207-119.zen.co.uk)
[22:32:26] <teut> oh ok then it s a subprocess just
[22:32:37] <SnoopJ> oh I see what you mean
[22:33:39] <teut> thats a zip file, you just unzip it,  pip install some packages and just give it to someone, the user without installing python can run python files
[22:33:45] <grawity> in C# terms, I think P/Invoke would be "FFI", and calling libpython via P/Invoke would be "embedding"
[22:34:07] <teut> when I faced problems with pyinstaller I gave code to users via this and bat files
[22:34:09] *** xavierdarkness is now known as Xavierdarkness
[22:34:19] <baltazar> KirkMcDonald: yea, I've tried ucs-2 as well, but sadly there's no such thing
[22:34:48] <grawity> I guess you still have the option of codecs.register()'ing your own ucs-2 decoder class?
[22:35:16] <SnoopJ> teut, at any rate, creating a brand new process is not usually what we mean by FFI, because it does not "call" the foreign code in the sense of handing over the flow control (just like calling a function), it creates a brand new control flow.
[22:35:23] <baltazar> I really don't think it's worth the effort at this point, this utf-16 dance should just work
[22:35:24] <ammar2> what's the easiest way to turn a byte-offset into a utf-8 string into a character-offset
[22:35:35] <SnoopJ> but like I said, FFI is a concept anyway, so there is some grey area here
[22:35:58] <teut> ok SnoopJ , if its Ironpython that means , its deep , I cannot develop that at this stage
[22:35:58] <ammar2> e.g with the string "Ĥe" and a byte offset of 2, I'd want a character offset of 1 corresponding to the 'e'
[22:36:29] <SnoopJ> teut, I have idea what you're talking about
[22:36:32] <SnoopJ> have no idea*
[22:36:41] *** Joins: thebearbox (~thebearbo@37.157.32.194)
[22:37:08] <KirkMcDonald> ammar2: I think you get to iterate over the bytes yourself.
[22:37:30] <grawity> do you want the character offset specifically, or just the character itself?
[22:37:49] <ammar2> offset
[22:37:54] <grawity> "Ĥe".encode("utf-8")[:2].decode("utf-8")
[22:38:00] *** Quits: Wombat140 (~ab@dsl-217-155-207-119.zen.co.uk) (Quit: Leaving)
[22:38:06] <grawity> er, well, len() thereof
[22:38:26] <KirkMcDonald> Ah, there is that.
[22:38:34] *** Quits: thedieselspacesh (~thediesel@95.164.41.247) (Quit: Client closed)
[22:38:53] <KirkMcDonald> If it's a one-off, that seems fine. If you plan on indexing this string multiple times, you may want to make an index.
[22:38:58] *** Quits: thebearbox (~thebearbo@37.157.32.194) (Client Quit)
[22:39:34] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[22:40:16] <baltazar> also, not sure what would happen if you happened to chop a character in half... will it throw an error?
[22:40:27] <grawity> the .decode() would throw an exception
[22:40:47] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[22:41:26] *** Joins: biozz (~biozz@178.57.22.163)
[22:41:26] <grawity> hmm is there a nice way to make a byte->character offset index though
[22:41:35] <grawity> the reverse seems easy but
[22:42:53] <KirkMcDonald> One sec.
[22:43:28] <ammar2> yeah I think the iterative approach would probably be better for me since I have to do multiple indices but I can't think of a concise way to express it
[22:43:29] <grawity> oh, I guess {len(s[:x].encode("utf-8")): x for x in range(len(s))} might work?
[22:43:40] <grawity> but that seems messy
[22:43:53] <grawity> due to calling .encode() for every single position
[22:43:58] *** Joins: Naan (~Naan@user/naan)
[22:44:30] <habnabit> the real issue is that you're trying to do this in a single line
[22:44:57] *** hexeme_ is now known as hexeme
[22:45:22] *** Joins: _0x5fc3 (~0x5fc3@static.203.75.21.65.clients.your-server.de)
[22:45:24] <grawity> it almost feels like you'd want to .encode() once and then go through each byte, counting those with the high bit cleared
[22:45:26] <KirkMcDonald> Some nonsense: https://dpaste.org/PJtP
[22:46:38] *** Quits: biozz (~biozz@178.57.22.163) (Remote host closed the connection)
[22:46:52] *** Joins: biozz (~biozz@178.57.22.163)
[22:49:00] *** Quits: brickfat (~brickfat@user/brickfat) (Quit: Leaving)
[22:49:22] *** Joins: kaizen (uid501599@id-501599.brockwell.irccloud.com)
[22:49:40] *** Joins: waynew (~wayne@user/waynew)
[22:50:15] <grawity> I was thinking more like https://paste.rs/Qne because you want to index byte->char, not the other way around
[22:50:36] *** Joins: kosh (~kosh@user/kosh)
[22:50:49] <KirkMcDonald> But that is what mine gives.
[22:51:21] <grawity> oh right d'oh
[22:51:23] <grawity> I read it wrong
[22:53:23] *** Quits: srilyk (~wayne@user/waynew) (Ping timeout: 252 seconds)
[22:55:02] *** Joins: lukka5 (~lukka5@246-60-231-201.fibertel.com.ar)
[22:56:36] *** Quits: Lando-SpacePimp (~Lando@user/lando-spacepimp) (Ping timeout: 252 seconds)
[22:57:01] <rockSTONE> is there a decent python project for asyncio-based gz or xz compression ?
[22:57:15] *** Quits: vivek (~vivek@user/vivek) (Quit: leaving)
[22:57:22] *** Quits: deviantfero (~deviantfe@190.150.27.58) (Quit: WeeChat 3.1)
[22:58:21] *** Joins: hackerman (~hackerman@cpe-174-109-34-83.nc.res.rr.com)
[22:58:26] <Wulf> rockSTONE: what would be async about it?
[22:58:33] <hackerman> Is there a way with argparse to create an argument that is applied globally? to the main parser and all subparsers added?
[22:58:37] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[22:59:57] <Akuli> hackerman, you won't like this answer but for loop over subparsers?
[23:00:03] <rockSTONE> Wulf: well the standard way of using the gzip stuff is to open a gzip file object and use write() which i guess is half compression and half I/O work ... so i suppose i could simply use the gzip lib to compress a chunk and then async write it
[23:00:25] <grawity> spawn /bin/gzip as a subprocess :D
[23:00:33] <hackerman> Akuli that's what I'm doing now, but wasn't sure if there was a better way. Is there a method to get all subparsers from a parser or should I just store them and loop over?
[23:00:58] *** Joins: Lando-SpacePimp (~Lando@user/lando-spacepimp)
[23:01:46] <Akuli> there's a _subparsers attribute and nothing to access it
[23:01:55] <Akuli> so no, there's nothing documented and supported
[23:02:12] <Akuli> (if i interpret the code correctly)
[23:02:22] <hackerman> Thanks
[23:02:24] <SnoopJ> hackerman, I would consider switching to click
[23:02:28] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[23:02:38] <hackerman> Thanks, I'll check it out
[23:02:44] <SnoopJ> argparse starts to get painful fast when you want to do things that don't fall right out of the docs
[23:03:28] *** Joins: negatron (~negatron@host-95-234-74-215.retail.telecomitalia.it)
[23:03:47] *** Quits: Zer0xFF (~Zer0xFF@matrix.michaelsasser.org) (Remote host closed the connection)
[23:04:52] <habnabit> hackerman, click is indeed waaaay easier to use
[23:05:17] *** Parts: negatron (~negatron@host-95-234-74-215.retail.telecomitalia.it) ()
[23:05:18] *** Quits: dkmueller (~dkmueller@2a01:c23:bc05:2b00:56bd:7c0e:bee9:7bb4) (Ping timeout: 244 seconds)
[23:05:32] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[23:05:42] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 264 seconds)
[23:06:34] <SnoopJ> I think what you want is free-ish with the way it does groups, but it's been a while since I looked at that (I don't often use subcommands)
[23:07:16] *** Joins: dkmueller (~dkmueller@dynamic-095-115-042-075.95.115.pool.telefonica.de)
[23:08:19] *** Joins: wedof (~wedof@2a02:810c:c0:3b98:aaa1:59ff:fe1e:4d38)
[23:08:48] <teut> how can I move  to c code and observe the parsing and bytecode generation with the debugger?
[23:08:53] <teut> I use vscode
[23:09:06] <SnoopJ> teut, you want to watch the Python interpreter running?
[23:09:16] <teut> yes line by line
[23:09:26] *** Quits: brylie (~Thunderbi@88-114-218-116.elisa-laajakaista.fi) (Quit: brylie)
[23:09:32] *** exhausteddev is now known as marvin
[23:10:32] *** Joins: jphaynes66 (~TerraFirm@31.171.154.68)
[23:10:34] <teut> print("Hello World")    <-   I want to walk with the compiler
[23:10:48] *** Joins: dyslexicat (~dyslexica@212.253.59.190)
[23:11:22] <SnoopJ> You can run Python with your debugger of choice (I use gdb but lldb is well-liked) and set breakpoints in the appropriate locations (the parser is in Parser/parser.c and the other files in that directory, and the compiler lives in Python/compile.c)
[23:11:34] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[23:11:41] <SnoopJ> (it's best to do this with a CPython that was built with the --with-pydebug flag)
[23:11:55] *** Joins: Deknos (~someone@user/menace)
[23:12:05] *** Joins: deviantfero (~deviantfe@190.150.27.58)
[23:13:39] *** Joins: pgib (~textual@173.38.117.92)
[23:14:22] <teut> after downloading cpython github, which file takes the arg as the python script name?
[23:14:32] <teut> cpython from github*
[23:14:34] <ammar2> you can also see a lot of the internal representations of the compiler which give a pretty good idea without having to manually step through every line
[23:14:43] <ammar2> python -m tokenize/ast/dis file.py
[23:15:10] <SnoopJ> yea, the tokenize module is helpful if you're interested in how source is lexed
[23:15:22] <ammar2> teut: you're gonna wanna do `./configure --with-pydebug` and then `make`
[23:15:27] <teut> ya I have seen the output of dis but walking with the c interpreter is another experience
[23:15:29] <ammar2> that should produce a ./python which you can use as normal
[23:15:53] *** Joins: cellofellow (~user@166.70.50.58)
[23:16:07] <SnoopJ> teut, "the C interpreter" is nonsense. What you want to do here is compile a Python interpreter that includes debug symbols (that's the main thing --with-pydebug does). Follow ammar2's instructions to compile it.
[23:16:30] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-c864-9e4b-fcd2-85ec.res6.spectrum.com)
[23:18:18] <teut> the c compiler*
[23:18:55] <teut> https://dpaste.org/TwjJ
[23:18:56] *** marvin is now known as Marvin
[23:19:11] <teut> well that gives error  ammar2  , did you mean something else?
[23:19:15] *** Joins: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it)
[23:19:15] <SnoopJ> teut, configure is not a python script
[23:19:26] <teut> what is it?
[23:19:28] <SnoopJ> it's a shell script
[23:19:49] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (Remote host closed the connection)
[23:20:24] <SnoopJ> it works differently on Windows anyway though
[23:20:26] <ammar2> oh you're on windows
[23:20:46] <SnoopJ> teut, there is a guide to getting started with compiling your own CPython here: https://devguide.python.org/#quick-reference
[23:20:48] <teut> I was thinking this only, its a linux command
[23:20:52] <SnoopJ> Follow the instructions for Windows
[23:21:00] <ammar2> which debugger were you planning on using? vs studio?
[23:21:36] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[23:21:39] *** Quits: nomic (~nomic@2a00:23c6:9910:1201:cdae:ea4b:93a4:1c59) (Quit: Leaving)
[23:22:06] *** Joins: dme86 (~dan@user/dan86)
[23:23:28] <teut> vscode, is it good enough?
[23:24:31] <SnoopJ> VSCode does not have its own debugger
[23:24:58] <SnoopJ> looks like on Windows the best choices are Visual Studio or GDB. I would go with Visual Studio personally
[23:25:03] <teut> it uses some language server, so that provides the debugger?
[23:25:13] <grym> no, lsp is not dap
[23:25:13] <SnoopJ> I doubt it uses a language server for that
[23:25:22] <grym> (they're real close though)
[23:25:24] <MacGyver> Doesn't pycharm have debugger integration?
[23:25:31] <teut> it does, you can watch the video by eric gamma on youtube
[23:25:38] <SnoopJ> MacGyver, it has a Python debugger, but what's being debugged here is the interpreter itself
[23:25:43] <MacGyver> Oh wait, right.
[23:25:43] <teut> ok I ll use v studio
[23:25:50] *** Quits: blackout69 (~blackout6@net-109-117-245-193.cust.vodafonedsl.it) (Remote host closed the connection)
[23:26:04] <MacGyver> I recall using a standalone debugger on windows, by microsoft.
[23:26:12] <SnoopJ> Visual Studio is 'the' canonical one
[23:26:17] <MacGyver> WinDbg?
[23:26:38] <MacGyver> That's probably what VS also hooks into.
[23:26:46] <SnoopJ> you could probably use WinDbg here, yea
[23:26:51] *** Quits: dme86 (~dan@user/dan86) (Ping timeout: 252 seconds)
[23:27:01] *** Quits: zeenk (~zeenk@2a02:2f04:a310:b600:b098:bf18:df4d:4c41) (Quit: Konversation terminated!)
[23:27:22] <SnoopJ> AFAIK they're separate but it's always so hard to tell in their ecosystems
[23:27:25] *** Quits: Zer0xFF (michael@matrix.michaelsasser.org) (Remote host closed the connection)
[23:27:42] <teut> C:\Users\Dell\OneDrive\Desktop\New folder (3)>PCbuild\build.bat -e -d
[23:27:42] <teut> The system cannot find the path specified.
[23:28:02] <SnoopJ> That means the system cannot find the file.
[23:28:06] <ammar2> what the heck is New Folder (3)
[23:28:08] <teut> PCbuild  , I dont thing its anything in windows like that
[23:28:13] <ammar2> is it where you cloned CPython into?
[23:28:17] <SnoopJ> teut, PCbuild is a folder in the CPython repository.
[23:28:22] <teut> yes ammar2
[23:28:27] <teut> oh ok
[23:28:38] <SnoopJ> (really, you should read the devguide *first*)
[23:29:39] <teut> yes , it said a `cd `
[23:29:50] *** Joins: Zer0xFF (michael@matrix.michaelsasser.org)
[23:30:45] <teut> \cpython\PCbuild\) was unexpected at this time.
[23:30:57] <nedbat> teut: this is not going to be simple.
[23:31:09] <nedbat> teut: you have been here long enough to know how to get help.
[23:31:17] <nedbat> teut: what are we going to ask you for?
[23:31:21] *** Joins: ckpro (~ckpro@103.106.181.67)
[23:31:27] <teut> ok ok , I will get a linux
[23:31:37] <teut> half pain gone
[23:31:44] <nedbat> teut: why do you want to step through the C code?
[23:32:16] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:32:35] <ckpro> which linux distro you guys recommend?
[23:32:35] <teut> to know whats happening under the hood, that helps understand and implement things better
[23:32:38] *** Joins: Sofi (~Sofi@92.246.1.121)
[23:32:58] <nedbat> teut: you could read this book as a start: https://realpython.com/products/cpython-internals-book/
[23:33:17] <SnoopJ> +1, it's a very good book
[23:33:42] <yitz> ckpro: depends what you want out of it
[23:33:50] <SnoopJ> if you want a sneak peak of what's in it, this article is what came before the book: https://realpython.com/cpython-source-code-guide/
[23:33:59] <grym> ckpro: possibly better answered at ##python-offtopic
[23:34:31] <SnoopJ> that's #python-offtopic, just the one #
[23:34:36] <teut> book can just tell me what is happening but it gives no xp
[23:34:51] <SnoopJ> teut, the book includes step-by-step instructions
[23:34:51] <grym> teut: be an active reader!
[23:35:02] <teut> while reading the book even threading seems so easy
[23:35:13] <SnoopJ> The exercises in it are quite good, over the course of it you modify the Python language to add a new keyword, a new binary operator, etc.
[23:35:15] <teut> problem comes and thinking develops only writing it
[23:35:43] <grym> teut: that's not even a sentence
[23:36:22] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:36:29] <teut> I want to create a  programming language , thats the goal for fun
[23:37:25] <baltazar> sorry I'm still at my original issue, just making sure... is there a way to do this backwards without encoding substrings for all mentions?
[23:37:44] <baltazar> it works, I just feel bad running this dozens of times: `len(text[:mention.offset].encode('utf-16')) // 2 - 1`
[23:38:12] *** Joins: dme86 (~dan@user/dan86)
[23:38:42] <grym> teut: that's what racket's for :)
[23:38:49] <teut> racket?
[23:38:55] <baltazar> it might just be that I'm not used to programming in python, and I always assume speed is key... but with python I'm not sure how much this matters, it's slow either way
[23:38:59] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[23:39:10] <grym> teut: the language that makes languages!
[23:42:14] *** Quits: kindablue (znc@irc.tpurist.com) (Quit: System Rebooting..)
[23:43:07] *** Joins: kindablue (znc@irc.tpurist.com)
[23:44:19] <teut> what does guido means that he gained ideas while working on the language ABC?
[23:45:02] <bjs> teut: it means Guido worked on a language called ABC,  which gave him lots of ideas
[23:45:16] <teut> but I dont have that think
[23:45:21] <teut> thing you see*
[23:45:29] <teut> so I need alternatives
[23:45:51] <bjs> teut: have you learned about parsers?
[23:45:54] *** Quits: vodkra (~vodkra@user/vodkra) (Remote host closed the connection)
[23:45:54] <teut> so I m following martin fowler's approach
[23:45:54] *** Joins: Ivyy (~Ivyy@2001:a61:13f0:c401:aaad:8747:f950:e29)
[23:46:27] <teut> what else m I asking this  traversing through the c thing for?
[23:46:32] <teut> parsers only
[23:46:57] <teut> Uploaded file: https://uploads.kiwiirc.com/files/f7dd66deaefebf95e44c69eaf1a0a828/pasted.txt
[23:47:05] <bjs> teut: can you try make complete sentences? It's hard to understand what your questions are when you don't try
[23:47:28] <teut> this is a small code that I found over the internet to make a scheme kind of language
[23:47:30] <bjs> teut: you didn't write this?
[23:47:35] <bjs> yes
[23:47:39] <teut> I just copied it
[23:47:54] <teut> I mean I wrote it by copying and understand it
[23:48:07] <supakeen> I'm just about done with the teut-show for today again, please take a break and stop hogging all the volunteers teut.
[23:48:21] *** Leonarbro_ is now known as Leonarbro
[23:48:37] <bjs> teut: go write a little recursive-descent-parser (google it) for your own little made-up grammar,  reading CPython source isn't going to help you.
[23:48:57] <ammar2> yeah, my suggested area to start would be to write a simple expression calculator
[23:49:13] <teut> this is that only ammar2
[23:49:14] <bjs> a recursive-descent parser for a little arithmetic language was where I started when I first learned about parsing and compiling
[23:49:25] <ammar2> i.e something you can give strings like "1 + 2 * (9 - 3)" and it gives you the result
[23:49:28] <SnoopJ> calculator +1
[23:49:49] <ammar2> do it from scratch, carefully learn about each piece
[23:49:52] <teut> Uploaded file: https://uploads.kiwiirc.com/files/d0f1ef7bf6548b833da42b8659745dc2/pasted.txt
[23:50:00] <teut> these are the operations it does
[23:50:24] <teut> but how do I parse blocks? or parse a class or a function?
[23:50:27] <bjs> teut: forget that code,  go write a recursive-descent-parser for a little language which does some math and use it to make a calculator
[23:50:41] <ammar2> either way this is not related to python
[23:51:08] <teut> bjs thats what I gave you just
[23:51:10] <bjs> teut: well if you do what I say, and you go read up on recursive-descent-parsers and grammars you'll see how they all work,  and you can ask questions about it in -offtopic so as not to clutter this channel
[23:51:13] <KirkMcDonald> I will say that this general subject can be a substantial portion of a computer science education.
[23:51:17] <bjs> teut: you didn't,  someone else wrote that.
[23:51:35] *** Joins: vodkra (~vodkra@user/vodkra)
[23:51:41] <bjs> KirkMcDonald: yes,  it's fairly fundamental stuff
[23:51:53] <teut> yes but I understood this code bit by bit
[23:52:08] <teut> its Peter Norvig's code
[23:52:33] *** Quits: ckpro (~ckpro@103.106.181.67) (Read error: Connection reset by peer)
[23:52:38] <ammar2> understanding someone elses code is vastly different from making something from scratch
[23:52:49] <ammar2> I'll be blunt: the way you talk about this stuff makes me think you don't really understand it
[23:53:19] <bjs> teut: this is very fundamental CS stuff, it's like algebra.  You don't learn to do algebra by reading someone else's working out
[23:53:20] <ammar2> but yeah, #python-offtopic for general parser/compiler talk
[23:53:22] <bjs> you have to do it yourself :)
[23:54:04] <bjs> teut: #python-offtopic if you want to keep talking about this,  i think it's not on-topic for here
[23:54:12] *** Joins: ponadm (pony@gateway/vpn/protonvpn/ponadm)
[23:54:21] *** Quits: ponadm_ (pony@gateway/vpn/protonvpn/ponadm) (Ping timeout: 252 seconds)
[23:54:40] <teut> that wont help either but ok offtopic
[23:56:00] *** Joins: heco (~redrum@user/redrum88)
