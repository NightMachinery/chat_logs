[00:01:13] *** Joins: ecloud (~quassel@192.89.120.58)
[00:21:37] *** Quits: ecloud (~quassel@192.89.120.58) (Ping timeout: 256 seconds)
[00:28:16] *** Joins: ecloud (~quassel@192.89.120.58)
[01:02:47] *** Quits: ecloud (~quassel@192.89.120.58) (Ping timeout: 264 seconds)
[01:15:07] *** Joins: klovett (~klovett@c-73-231-102-38.hsd1.ca.comcast.net)
[01:20:17] *** Joins: ecloud (~quassel@192.89.120.58)
[01:33:30] <Bunny351> for those interested in programming languages and concurrency: http://www.call-with-current-continuation.org/articles/the-joy-of-concurrent-logic-programming.txt
[01:46:39] <Irvise> Thank you for the link. I have bookmarked it for a later read.
[02:11:33] *** Quits: klovett (~klovett@c-73-231-102-38.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[03:33:47] *** Joins: monkey_ (~user@190.104.116.153)
[04:27:34] *** Quits: andyjpb (~andyjpb@user/andyjpb) (Ping timeout: 268 seconds)
[04:38:44] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[05:02:34] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:5:5375:e160:e4a4) (Remote host closed the connection)
[05:26:43] *** Joins: klovett (~klovett@c-73-231-102-38.hsd1.ca.comcast.net)
[05:36:03] *** Quits: klovett (~klovett@c-73-231-102-38.hsd1.ca.comcast.net) (Quit: ZZZzzz…)
[06:14:39] *** Joins: s-liao (~s-liao@101.86.103.113)
[07:02:52] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[07:05:56] *** Joins: s-liao (~s-liao@101.86.103.113)
[07:21:34] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[08:36:01] *** Joins: s-liao (~s-liao@101.86.103.113)
[08:52:14] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[09:25:18] *** Quits: skapata (~Skapata@user/skapata) (Quit: Ĝis.)
[09:47:18] *** Joins: s-liao (~s-liao@101.86.103.113)
[09:56:14] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 260 seconds)
[09:58:21] *** Joins: johnjay (~pi@192.142.100.50)
[10:05:38] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 260 seconds)
[10:07:57] *** Joins: johnjay (~pi@192.142.100.50)
[11:36:00] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[11:46:55] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:5:5375:e160:e4a4)
[12:30:33] <wasamasa> call-with-current-logic
[12:30:58] <wasamasa> I mean
[12:31:02] <wasamasa> call-with-concurrent-logic
[12:40:19] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:5:5375:e160:e4a4) (Remote host closed the connection)
[13:12:17] *** Quits: rmrfchik (~rmrfchik@linuxhacker.ru) (Ping timeout: 256 seconds)
[14:24:31] *** Joins: s-liao (~s-liao@101.86.103.113)
[14:35:00] *** Joins: tzar_bomba (~tzar_bomb@user/tzar-bomba/x-5218718)
[14:41:32] *** Joins: tzar_bomba21 (~tzar_bomb@user/tzar-bomba/x-5218718)
[14:45:16] *** Quits: tzar_bomba (~tzar_bomb@user/tzar-bomba/x-5218718) (Ping timeout: 256 seconds)
[15:30:37] <megane> and if you want to call the other side names? maybe neophobe, technophobe, neo-luddite?
[15:38:54] <megane> Bunny351: that was an interesting read, thanks
[15:40:10] <megane> this sounds more like a solution to make construction of concurrent programs easier. i don't think this is a solution for making better use of cpu resources
[15:44:52] <megane> i would compare this to STM, datalog or perhaps structured concurrency
[15:49:08] <megane> and you mentioned the most obvious, the actor model or erlang
[15:52:47] <megane> structured concurrency is the "handle failures sanely" idea lifted from erlang
[15:55:14] <Bunny351> well, it's construction of correct programs that's hard. of course the hand-tuned low-level threads/locks approach can be more efficient, but it is inredibly hard to nearly imposible to prove correct.
[15:55:48] <Bunny351> the problem I see is that our programming models are insufficient, just figuring out how to parellelize exceeds our capabilities
[15:57:20] <Bunny351> basic fundamental paradigm shifts don't happen anymore, that requires long-term planning and may lead to costly dead-ends. so we are stuck with a suboptimal approach.
[15:59:40] <Bunny351> also, the nature of concurrency changes, modern SoCs are an undocumented, haphazard mess of cores, OSses and firmware, CPUs, DPUs, FPGAs. there seems to be no systematic attempt to give structure to that.
[16:00:23] <Bunny351> this is quite good: https://www.youtube.com/watch?v=36myc8wQhLo
[16:03:01] <Bunny351> what I find fascinating is how totally forgotten those concurrent logic languages are, as if it never happened, all due to "AI" fatigue...
[16:26:00] *** Joins: Guest6 (~Guest6@2a00:cc47:227b:b600:bc21:d07f:a1a8:20f1)
[16:26:17] <Guest6> hi guys
[16:26:26] <Guest6> how are u doin?
[16:27:48] <Guest6> I'm occurring a problem connected to test egg
[16:28:16] <Guest6> test version is 1.2
[16:30:07] <Guest6> when I try to import test library, it says cannot import from undefined module
[16:30:13] <Guest6> can u help me with this?
[16:30:36] <wasamasa> so you finally managed to install it?
[16:32:29] <Guest6> yesss, finally :D
[16:32:45] <Guest6> but it really took me a while
[16:33:25] <Guest6> please, update the manual for linux ubuntu
[16:34:00] <s-liao> What is the reason for that?
[16:34:19] <Guest6> we managed to install by looking the manual for debian linux
[16:34:41] <Guest6> for 5.2.0 version of chicken for ubuntu
[16:35:34] <Guest6> the reason is that starters like me do not waste their time on such a small problem
[16:36:42] *** Joins: rmrfchik (~rmrfchik@linuxhacker.ru)
[16:38:06] <wasamasa> update what?
[16:40:24] <wasamasa> you need to be a bit more precise when describing what you actually did
[16:41:05] <wasamasa> like saying "I executed `csi`, entered (import test) into the REPL and it gave me the following error: ..."
[16:41:32] <vandusen> "freee" pasted "freeeee" http://paste.call-cc.org/paste?id=90292e939eeccb43da5fcab26688f7d095adeb37
[16:41:32] <judybot> vandusen: spam 90292e939eeccb43da5fcab26688f7d095adeb37
[16:41:34] <vandusen> judybot: I have deleted 1 paste(s) with hash 90292e939eeccb43da5fcab26688f7d095adeb37 successfully.
[16:43:55] <Guest6> ok, so this is my code:
[16:43:55] <Guest6> (import tests)
[16:43:56] <Guest6> (test 4 (+ 2 2))
[16:43:56] <Guest6> (test-exit)
[16:43:57] <Guest6> I interpreted this into csi and then the error message was "cannot import from undefined module: test"
[16:44:05] <wasamasa> (import test)
[16:44:13] <wasamasa> not (import tests)
[16:44:26] <Guest6> yes yes, it was test
[16:44:54] <Guest6> I wrote here incorrectly
[16:45:43] <wasamasa> if it installed, there should be PREFIX/lib/chicken/11/test.*
[16:46:08] <Guest6> I even checked the version with chicken-status
[16:46:15] <Guest6> the version was 1.2
[16:48:29] <Guest6> guys, if I tell you, you won't believe it :D
[16:49:08] <Guest6> after I changed my code and added (test-exit), I did not save the .scm file, and the reason of the error was that
[16:49:58] <Guest6> thanks a lot for trying to help me <3
[16:54:19] <vandusen> "freeee" pasted "freee" http://paste.call-cc.org/paste?id=673cdf45cb5bbb4c62045d36359e2b5fe0ebf98a
[16:54:19] <judybot> vandusen: spam 673cdf45cb5bbb4c62045d36359e2b5fe0ebf98a
[16:54:20] <vandusen> judybot: I have deleted 1 paste(s) with hash 673cdf45cb5bbb4c62045d36359e2b5fe0ebf98a successfully.
[17:00:37] *** Quits: Guest6 (~Guest6@2a00:cc47:227b:b600:bc21:d07f:a1a8:20f1) (Quit: Client closed)
[17:38:06] *** Quits: s-liao (~s-liao@101.86.103.113) (Ping timeout: 256 seconds)
[17:57:41] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:5:5375:e160:e4a4)
[18:02:39] *** Parts: rogersm (~rogersm@90.166.177.48) (Leaving...)
[18:14:11] *** Joins: alexshendi (~alexshend@2a02:8070:8796:7600:f4b7:9b3e:ef9:2ad3)
[18:14:28] <alexshendi> G'Day
[18:14:38] <alexshendi> How are you?
[18:24:25] *** Quits: alexshendi (~alexshend@2a02:8070:8796:7600:f4b7:9b3e:ef9:2ad3) (Quit: Leaving)
[18:55:13] *** Joins: klovett (~klovett@c-73-231-102-38.hsd1.ca.comcast.net)
[18:57:09] *** Joins: ublx (~ublx@user/ublx)
[18:59:58] *** Quits: klovett (~klovett@c-73-231-102-38.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[19:24:17] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:48e0:406d:e67c:af6)
[19:24:17] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:48e0:406d:e67c:af6) (Changing host)
[19:24:17] *** Joins: skapata (~Skapata@user/skapata)
[20:07:33] *** Joins: ublix (~ublx@user/ublx)
[20:08:13] *** Quits: ublx (~ublx@user/ublx) (Ping timeout: 256 seconds)
[20:32:32] *** Joins: mononote (~mononote@user/mononote)
[20:54:46] <mario-goulart> Bunny351: https://news.ycombinator.com/item?id=29139437
[20:55:47] <mario-goulart> Of course, the discussions are on how you cannot read plain text on phones.
[21:19:52] <Bunny351> :-)
[21:20:17] <Bunny351> yeah, HN is a funny place...
[21:21:06] <Bunny351> Not the location to get direct, reasonable technically minded feedback.
[21:22:00] <Bunny351> mostly a place to spawn or join heated arguments about superficial things unconnected to the subject
[21:22:47] <mario-goulart> That's my feeling about it as well.
[21:23:50] <mario-goulart> Nice text, BTW.  Thanks for sharing.  I can't say I understand it fully, but I've enjoyed reading it.
[21:25:08] <Bunny351> only the notation is unfamiliar, the concepts are quite clear, but I find it hard to explain. thanks for reading it
[21:25:24] <Bunny351> it sounds more complicated than it is.
[21:25:41] <Bunny351> meanwhile I port FLENG to z80 (sic) under CP/M (sic)
[21:25:50] <Bunny351> vandusen: REAL PROGRAMMING!
[21:25:52] <vandusen> Bunny351: YOU ARE LITERATE 
[21:25:53] <mario-goulart> Really?
[21:26:03] <Bunny351> yes? that is no joke
[21:26:38] <mario-goulart> Cool!
[21:26:50] <Bunny351> a friend of mine has an XMOS transputer board and is willing to borrow it to me. I would love to port FLENG to it, but each core has only 64k of RAM.
[21:27:01] <mario-goulart> I started "programming" on z80.
[21:27:49] <Bunny351> so I try to port a (very restricted) version to z80/CPM, which is probably the simplest 64k system that you can target, since z80 at least has 16 bit registers
[21:28:01] <Bunny351> yeah, those were the days!
[21:28:39] <Bunny351> if I can get medium programs to run on z80, then XMOS should be possible, since the CPU has a much morte powerful ISA
[21:29:33] <Bunny351> but I'm afraid I will fail just getting an appropriate toolchain to run. as is modern now, embedded dev kits are often  super fucked up Eclipse plugins.
[21:29:56] *** Joins: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at)
[21:30:14] <Bunny351> quickly thrown together, totally opaque, produce hello-world on pressing a button but get in the waay when doing anything more complicated.
[21:30:54] <Bunny351> I might not even get a toolchain. XMOS, the producer doesn't care for non-commercial users
[21:32:48] <wasamasa> transputer you say
[21:33:01] <wasamasa> does it have transpilers?
[21:36:03] <Bunny351> EEK
[21:36:25] <mario-goulart> I used http://parenteses.org/mario/misc/z80.pdf as "toolchain".
[21:36:44] <Bunny351> yep!
[21:36:50] <Bunny351> vandusen: REAL PROGRAMMERS!
[21:36:52] <vandusen> Bunny351: Totally spooky, dudes!
[21:42:17] <Zipheir> Sheesh.
[21:44:39] <Zipheir> It's turtles all the way down.  I'm not sure when they start being "real" turtles.
[21:45:06] <Bunny351> mario-goulart: what kind of computer?
[21:46:58] *** Quits: megane (~megane@chicken/developer/megane) (Ping timeout: 260 seconds)
[21:48:09] <mario-goulart> Bunny351: it was a didactic z80 kit.  It only had a keyboard with hex digits for input and a seven-segment display and a bus as output (where we mostly connected LEDs to).  It was used to teach how processors worked.  We'd write programs in assembly and type the hex code in that little keyboard.  Here's an example: http://parenteses.org/mario/misc/z80-sequencial-com-leds.pdf
[21:48:29] *** Joins: megane (~megane@chicken/developer/megane)
[21:49:24] <mario-goulart> The hand-written annotations was the "compilation" of assembly to opcodes (users were the assemblers).  We typed that as input for the computer.
[21:50:07] <mario-goulart> s/was/were/
[21:51:49] <mario-goulart> Very primitive.
[21:56:03] <Bunny351> "sequential com leds"
[21:56:05] <Bunny351> cool
[21:59:14] <vandusen> [eggs repo (r40835, by Zipheir)] Clarify description of platform-oriented identifier classes.
[22:00:29] <mario-goulart> I find it both fascinating and horrifying how we went from THAT to what we have today.
[22:02:16] <Bunny351> yeah...
[22:02:52] <Bunny351> 20% progress, 80% bullshit
[22:03:20] <Bunny351> well, more equal, I guess, but the bullshit is all on the top
[22:03:33] <Bunny351> it floats, so to speak.
[22:13:57] <mario-goulart> Pretty crazy.  Such a short period of time.  I find it pretty much impossible to keep up with what is happening. OTOH, not being able to keep up in practice means not being productive these days.  No wonder people are going insane.
[22:24:17] *** Quits: tzar_bomba21 (~tzar_bomb@user/tzar-bomba/x-5218718) (Quit: Client closed)
[23:05:25] <Bunny351> Hm, I can't confirm that.
[23:06:05] <Bunny351> you can always be productive, I'd say
[23:11:37] <Bunny351> but in a professional situation that can be the case of course. I dread the moment when this project I'm currently working on finishes. The thought of doing clojure(script) stuff for bevuta makes my blood curdle...
[23:12:44] <Bunny351> all the insane tooling, even with clojure, it's such a clusterfuck and I know that everybody else won't even understand why I think this way
[23:12:58] <Bunny351> but we'll see.
[23:22:36] <mario-goulart> Yeah, I mean productive in a professional situation, where usually products target end users.
[23:30:42] <Bunny351> only because one is pressured to use unstable tools.
[23:32:03] <Bunny351> that the tools and frameworks change so fast keeps the pressure. Since nobody really is interested in reliable and maintainable software this has been firmly embedded into the programming culture.
[23:32:26] <Bunny351> stability is boring and creates stubborn employees
[23:39:42] <mario-goulart> #t
[23:45:06] *** Joins: klovett (~klovett@c-73-231-102-38.hsd1.ca.comcast.net)
[23:58:44] *** Quits: klovett (~klovett@c-73-231-102-38.hsd1.ca.comcast.net) (Quit: ZZZzzz…)
