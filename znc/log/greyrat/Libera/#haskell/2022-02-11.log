[00:00:20] <monochrom> You probably haven't truly embraced the fact that, for example, if the type is [Int], then the value can be [] without even having any relevance to Int.
[00:00:51] *** Quits: tiferrei (~tiferrei@user/tiferrei) (Ping timeout: 276 seconds)
[00:00:52] *** Joins: tiferrei2000 (~tiferrei@user/tiferrei)
[00:01:13] <ski> for lists, a good starting point is to have the empty list as a base case .. unless you already know that you want another base case (or more base cases, in addition)
[00:01:29] <anon66200164> sumPairs ((a, b) : xs) = fst x + snd x would this work?
[00:01:44] <monochrom> What about the numbers in xs?
[00:01:49] <ski> what is `x' ?
[00:01:53] <anon66200164> I still need to deal with that 
[00:02:03] <anon66200164> ski: it's the pair (a, b)
[00:02:09] <ski> no, it isn't
[00:02:14] <anon66200164> f 
[00:02:18] <anon66200164> ok umm 
[00:02:19] <ski> you have to say so, if you want it to be that
[00:02:26] <ski>   sumPairs (x : xs) = fst x + snd x
[00:02:28] <ski> or
[00:02:33] <ski>   sumPairs (x@(a,b) : xs) = fst x + snd x
[00:02:53] <anon66200164> I haven't seen the second version are those equivalent?
[00:02:57] <ski> (the latter both names the pair `x', as well as naming the two components `a' and `b')
[00:03:31] *** Quits: dhouthoo_ (~dhouthoo@178-117-36-167.access.telenet.be) (Quit: WeeChat 3.4)
[00:03:32] <ski> (occasionally, it's useful to both give a name to something, as well as to some of its parts)
[00:03:34] <anon66200164> monochrom: what did you mean the type being [Int]?
[00:03:57] <monochrom> [Int] is a type. You know that?
[00:04:03] <anon66200164> Yeah 
[00:04:09] <ski> monochrom's is talking about the empty list `[]', that it can be of any list type `[T]', for any type `T'
[00:04:21] <anon66200164> but I already said sumPairs has type sumPairs :: [(Integer , Integer )] -> Integer
[00:04:27] <anon66200164> ohh
[00:04:29] <ski> in case it's the empty list, it contains no element of type `T' at all
[00:05:26] <monochrom> So [] is a value of type [(Integer , Integer )]  without any relevance to Integer or (Foo,Bar) business.
[00:05:48] <monochrom> The empty list doesn't need to contain an "empty tuple" for emptiness.
[00:06:57] <anon66200164> https://paste.tomsmeding.com/OPmiA8gn
[00:07:15] <monochrom> Yes like that.
[00:07:22] <monochrom> Now you understand recursion.
[00:07:38] *** Joins: lavaman (~lavaman@98.38.249.169)
[00:07:46] <anon66200164> monochrom: I'm getting there, I need to solve 7 more practise exercises and then do a mock test before 9am tomorrow 
[00:08:02] <ski> anon66200164 : now do it, using `(a,b)' in place of `x'
[00:08:15] <ski> (then compare the two solutions)
[00:08:23] <monochrom> If you like "sumPairs ((a,b) : xs) = ..." then it's "a + b + sumPairs xs"
[00:09:05] <monochrom> "sumPairs ((a, b) : xs) = fst x + snd x" was not making up your mind whether you want to use patterns or fst and snd.
[00:09:11] <anon66200164> ski: ok
[00:09:59] <anon66200164> I get an error 
[00:10:57] <anon66200164> nvm it works also 
[00:11:08] * ski . o O ( "We get signal." )
[00:11:37] <ski> anon66200164 : which of the two is the clearer one, in your mind ? or are they about the same ?
[00:11:48] <monochrom> "sigma > 4.999999...."
[00:12:31] <anon66200164> sumPairs (x : xs) = fst x + snd x + sumPairs xs becuase I have used this pattern before to solve a Length of list problem using recursion 
[00:12:47] <ski> ok
[00:12:54] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 268 seconds)
[00:13:22] <anon66200164> I didn't think it was actually possible to do it using sumPairs ((a,b) : xs) = (a + b) + sumPairs xs becuase I didn't think it would evaluate (a+b) like it did 
[00:13:41] <ski> it's good to have options
[00:13:46] <anon66200164> yh
[00:14:02] <ski> (those brackets around the addition are not necessary, btw)
[00:14:38] <anon66200164> I thought it just made it clearer ¯\_(ツ)_/¯
[00:14:53] <anon66200164> good stuff 
[00:15:18] *** Quits: Ariakenom_ (~Ariakenom@h-82-196-111-63.NA.cust.bahnhof.se) (Quit: Leaving)
[00:18:16] *** Quits: wavemode (~wavemode@2601:241:0:fc90:2892:d0:a7ec:bc11) (Quit: Client closed)
[00:18:29] <EvanR> emptyTuple = fix (\(x,y) -> (y,x))
[00:18:57] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480::41) (Ping timeout: 240 seconds)
[00:19:31] *** Joins: Inst (~delicacie@2601:6c4:4080:3f80:f0fd:e448:c8d2:7c01)
[00:21:35] *** Joins: wavemode (~wavemode@2601:241:0:fc90:12bc:6a75:8601:ea04)
[00:25:02] <anon66200164> https://paste.tomsmeding.com/bfPNgz7f 
[00:25:25] <monochrom> Yeah.
[00:25:40] <ski> s/theSum/total/ ?
[00:25:57] <monochrom> Oh haha.
[00:26:07] <anon66200164> theSum of all the items in the list 
[00:26:21] <anon66200164> if the elements are Integers
[00:26:32] <monochrom> But what name does the teacher wants you to use?
[00:26:53] <anon66200164> oh lol 
[00:27:07] <EvanR> cache invalidation and naming stuff
[00:27:38] <monochrom> "invalidation" is so negative.
[00:27:48] <EvanR> cache unparsing
[00:27:59] <monochrom> People should talk more about "cache validation". >:)
[00:28:00] <anon66200164> tbf these are not marked, it's just personal exercises
[00:28:21] <ski> @where pdv
[00:28:21] <lambdabot> "Parse, don't validate" by lexi-lambda in 2019-11-05 at <https://lexi-lambda.github.io/blog/2019/11/05/parse-don-t-validate/>
[00:28:22] <anon66200164> extra questions to practice for the real thing 
[00:31:41] *** Quits: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net) (Remote host closed the connection)
[00:31:48] *** Joins: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293)
[00:31:48] <EvanR> cache effectiveness. 0 is "as if no cache exists". positive means cache works and provides a benefit. negative (the typical case) means performance was worse and or results are just wrong because caching scheme is broken
[00:31:51] <anon66200164> this is incorrect, I need to put each doubles value back into its position in the list https://paste.tomsmeding.com/JRRD3HwU
[00:32:04] *** Joins: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net)
[00:32:06] <EvanR> in which case zero is almost positive by comparison 
[00:32:10] *** Joins: Pickchea (~private@user/pickchea)
[00:32:54] <ski> > 3*2 : [4,2,0]  -- anon66200164
[00:32:55] <lambdabot>  [6,4,2,0]
[00:34:03] <anon66200164> cons
[00:35:00] <EvanR> cons is also negative, why can't we build list out of pros
[00:35:11] * ski . o O ( "CONS Should Not CONS Its Arguments, Part II: Cheney on the M.T.A." by Henry G. Baker in 1994 at <https://plover.com/~mjd/misc/hbaker-archive/CheneyMTA.html> )
[00:35:36] <ski> would pros build lists of negative length ?
[00:36:18] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[00:37:05] <anon66200164> doubles (x : xs) = x*2 : [] + doubles xs
[00:37:36] <anon66200164> but it will reverse the list 
[00:38:02] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[00:38:48] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 268 seconds)
[00:40:17] *** Quits: ravella (~ravella@user/ryanavella) (Ping timeout: 240 seconds)
[00:40:34] <anon66200164> should I use tail 
[00:40:47] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[00:41:39] <wavemode> `[] ++ doubles xs` is equivalent to `doubles xs`
[00:42:05] *** Quits: nebu (~user@user/wavion) (Ping timeout: 256 seconds)
[00:43:31] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[00:43:45] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[00:44:37] *** Quits: anon66200164 (~anon66200@host-92-19-99-147.as13285.net) (Remote host closed the connection)
[00:44:54] *** Joins: anon66200164 (~anon66200@host-92-19-99-147.as13285.net)
[00:47:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[00:48:02] *** Quits: slac67097 (~slack1256@191.126.227.64) (Remote host closed the connection)
[00:48:53] <anon66200164> "Do not use any functions in the standard library (Prelude) other than arithmetic and boolean operations." does this mean I can't use fst?
[00:49:01] *** Quits: cynomys (~cynomys@user/cynomys) (Quit: Lost terminal)
[00:49:33] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[00:49:34] <geekosaur> in most cases you want pattern matching instead
[00:50:29] *** Quits: anon66200164 (~anon66200@host-92-19-99-147.as13285.net) (Remote host closed the connection)
[00:50:45] *** Joins: anon66200164 (~anon66200@host-92-19-99-147.as13285.net)
[00:50:57] <anon66200164> geekosaur: ok
[00:51:42] <janus> anon66200164: it also means you can't use the list constructor (:) or the concatenator (++)
[00:52:02] <wavemode> yeah I assume by functions they mean functions that aren't data constructors lol
[00:52:07] <anon66200164> that's quite odd since we used them in lectures 
[01:02:12] <EvanR> "do not use any odd functions in the standard library, i.e. f(x) = -f(x)
[01:02:33] <EvanR> ... doh
[01:12:10] *** Joins: jgeerds_ (~jgeerds@55d4a547.access.ecotel.net)
[01:14:00] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[01:15:14] *** Joins: stef204 (~stef204@user/stef204)
[01:15:28] *** Joins: dsrt^ (~dsrt@128-092-160-106.biz.spectrum.com)
[01:17:22] <ephemient> isn't an odd function one that satisfies f(-x) = -f(x)?
[01:17:55] *** Quits: jackson99 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[01:19:12] *** Quits: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net) (Quit: WeeChat 2.2-dev)
[01:19:28] <EvanR> yeah
[01:22:58] *** Quits: stef204 (~stef204@user/stef204) (Quit: WeeChat 3.4)
[01:26:36] <monochrom> Hence "doh" :)
[01:27:09] <monochrom> Theorem: If f(x) = -f(x), then f is both even and odd. >:)
[01:27:12] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[01:30:36] *** Quits: zincy (~zincy@2a00:23c8:970c:4801:68f0:cbbd:5b77:19e4) (Remote host closed the connection)
[01:31:51] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi) (Quit: Leaving.)
[01:32:38] *** Quits: sammelweis (~quassel@2601:401:8200:2d4c:bd9:d04c:7f69:eb10) (Ping timeout: 250 seconds)
[01:33:04] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 268 seconds)
[01:33:12] <EvanR> > -(minBound :: Int)
[01:33:13] <lambdabot>  -9223372036854775808
[01:34:36] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[01:34:39] <Inst> do you know anything about the haskell doc.pdf thing?
[01:34:45] <Inst> the one the berkeley philo prof made?
[01:35:31] *** Joins: cynomys (~cynomys@user/cynomys)
[01:35:44] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[01:37:14] <ephemient> > -minBound == minBound
[01:37:16] <lambdabot>  error:
[01:37:16] <lambdabot>      • Ambiguous type variable ‘a0’ arising from a use of syntactic negation
[01:37:16] <lambdabot>        prevents the constraint ‘(Num a0)’ from being solved.
[01:37:18] *** Quits: anon66200164 (~anon66200@host-92-19-99-147.as13285.net) (Remote host closed the connection)
[01:37:34] *** Joins: anon66200164 (~anon66200@host-92-19-99-147.as13285.net)
[01:37:53] <ephemient> > -minBound == (minBound :: Int)
[01:37:55] <lambdabot>  True
[01:38:27] *** Joins: zincy (~zincy@2a00:23c8:970c:4801:68f0:cbbd:5b77:19e4)
[01:38:37] <ephemient> leading to the very fun
[01:38:37] <ephemient> > abs (minBound :: Int) < 0
[01:38:38] <lambdabot>  True
[01:39:01] *** Quits: alp (~alp@user/alp) (Ping timeout: 240 seconds)
[01:39:43] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Remote host closed the connection)
[01:39:52] *** Joins: qrpnxz (~qrpnxz@user/qrpnxz)
[01:40:00] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[01:41:56] *** Joins: foul_owl (~kerry@174-21-76-71.tukw.qwest.net)
[01:42:58] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[01:43:14] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[01:45:17] *** Quits: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee) (Ping timeout: 240 seconds)
[01:45:30] *** Joins: pooryorick (~pooryoric@87-119-174-173.tll.elisa.ee)
[01:45:46] *** Joins: jackson99 (~bc8147f2@83.167.180.121)
[01:45:55] <byorgey> Inst: I assume you're talking about https://pandoc.org/ ?
[01:47:51] <Inst> pandoc, yes, can it convert an excel spreadsheet to a txt or something i can simply parse to check for duplicates
[01:48:09] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[01:48:28] <ski> anon66200164 : "but it will reverse the list" -- no
[01:52:20] *** Joins: sektor|2 (~kvirc@87.227.175.182)
[01:53:51] *** Quits: wavemode (~wavemode@2601:241:0:fc90:12bc:6a75:8601:ea04) (Quit: Client closed)
[01:55:17] *** Quits: sektor|3 (~kvirc@94.155.193.66) (Ping timeout: 252 seconds)
[01:55:19] *** Joins: wavemode (~wavemode@2601:241:0:fc90:12bc:6a75:8601:ea04)
[01:56:06] <byorgey> Inst: no, pandoc cannot convert excel spreadsheets to text.  Fortunately, excel can do that.
[01:56:44] *** Quits: mc47 (~mc47@xmonad/TheMC47) (Remote host closed the connection)
[01:58:02] *** Quits: takuan (~takuan@178-116-218-225.access.telenet.be) (Remote host closed the connection)
[01:59:53] *** Quits: jackson99 (~bc8147f2@83.167.180.121) (Quit: CGI:IRC)
[02:02:23] *** Quits: zincy (~zincy@2a00:23c8:970c:4801:68f0:cbbd:5b77:19e4) (Remote host closed the connection)
[02:02:26] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[02:02:44] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[02:03:42] *** Joins: jackson99 (~bc8147f2@cerf.good1.com)
[02:05:19] <EvanR> so a pair of Storables isn't Storable by default, so here I am noodling about how to implement Storable for two Word8s...
[02:05:43] <EvanR> ok that's a Word16 but still
[02:06:32] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: closed)
[02:07:05] *** Quits: anon66200164 (~anon66200@host-92-19-99-147.as13285.net) (Ping timeout: 256 seconds)
[02:08:36] *** Joins: anon66200164 (~anon66200@host-92-19-99-147.as13285.net)
[02:09:30] *** Joins: abhixec (~abhinav@c-67-169-139-16.hsd1.ca.comcast.net)
[02:09:42] <anon66200164> ski: I don't understand how it would work
[02:09:55] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[02:10:41] <monochrom> Oh, heh. Here:
[02:11:00] *** Quits: max22- (~maxime@2a01cb088335980064335dca1fbb49a4.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[02:11:16] <monochrom> doubles (x : y : []) = x*2 : doubles (y : []) = x*2 : y*2 : doubles [] = ... you get the point.
[02:11:40] *** Joins: sammelweis (~quassel@2601:401:8200:2d4c:bd9:d04c:7f69:eb10)
[02:12:43] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Quit: Leaving)
[02:12:59] <anon66200164> but https://paste.tomsmeding.com/o0AjqHhe
[02:13:24] <monochrom> Clearly, doubles [] = []
[02:15:59] *** Quits: wavemode (~wavemode@2601:241:0:fc90:12bc:6a75:8601:ea04) (Quit: Client closed)
[02:16:22] *** Quits: abhixec (~abhinav@c-67-169-139-16.hsd1.ca.comcast.net) (Remote host closed the connection)
[02:16:40] <anon66200164> monochrom: sorry, could you explain why?
[02:17:05] <EvanR> 200% of nothing is still nothing:tm:
[02:17:43] <monochrom> There are many ways of understanding it, but none is "intuitive". This is the limitation of "intuition".
[02:18:16] <monochrom> 1. You have to produce a list. But you have no good numbers to put in that list. May as well leave it empty.
[02:19:21] <monochrom> 2. Someone asks me to double every number in a list. Oh but there is no number in the input list. So there is no number in the output list either. IOW output length = input length, oh but input length = 0.
[02:20:08] <ephemient> 3. you want doubles [x] = [x*2]; the only way to make that work is with doubles [] = []
[02:20:17] <monochrom> 3. doubles [] = [] is the only correct base case that can make the induction case work.
[02:20:30] <monochrom> Yeah, that. :)
[02:22:00] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[02:22:33] <jackson99> anon66200164 because doubles returns a list of Integer, not Integer
[02:23:12] <anon66200164> thank you all for your help
[02:23:31] <EvanR> haskell, where your questions are answered in astounding dolby 5.1
[02:23:49] *** Quits: deadmarshal (~deadmarsh@95.38.117.25) (Ping timeout: 240 seconds)
[02:24:55] <jackson99> > map (*2) [1..10)
[02:24:56] <lambdabot>  <hint>:1:16: error: parse error on input ‘)’
[02:25:02] <jackson99> > map (*2) [1..]
[02:25:04] <lambdabot>  [2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46,48,50,52,5...
[02:25:14] *** Joins: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net)
[02:25:36] <jackson99> that's your function, doubles = map (*2)
[02:25:53] <jackson99> it is usually nicer to use combinators than manual recursion
[02:26:07] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[02:26:15] <EvanR> the exercise was to not use "standard library functions"
[02:26:22] <monochrom> jackson99, this one is a homework where the student learns writing manual recursion.
[02:26:22] <anon66200164> yh
[02:26:44] <anon66200164> I think I'm screwed for tomorrow but we shall see 
[02:26:54] <anon66200164> gn all
[02:27:41] <monochrom> And probably at a level not ready for higher-order functions either, so not even writing one's own mymap.
[02:29:04] <jackson99> those excercises seem questionable. I've seen two or three of them, requiring user to implement map from scratch every time
[02:29:17] *** Quits: Inst (~delicacie@2601:6c4:4080:3f80:f0fd:e448:c8d2:7c01) (Ping timeout: 240 seconds)
[02:29:52] <EvanR> also known as javascript before a certain date
[02:30:42] <EvanR> also, it builds character
[02:30:59] *** Joins: wavemode (~wavemode@2601:241:0:fc90:12bc:6a75:8601:ea04)
[02:31:06] <monochrom> I know that feeling.
[02:32:03] <monochrom> When I was a young math enthusiasist, I questioned the tradition math curriculum order of <natural numbers, integers, rationals, reals, complex, rings and fields, universal algebra> too.
[02:32:29] <monochrom> I opined that it should be reversed. Kindergarten should start with universal algebra and maybe rings and fields.
[02:32:45] <monochrom> You must be thankful that back then I hadn't herad of category theory yet.
[02:32:55] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[02:32:58] <monochrom> Either that, or thankful that no one listened to me.
[02:33:53] <monochrom> Except that someone did listen to someone else about New Math and did a bit of that. They tried to do set theory in kindergarten or something.
[02:34:22] <dolio> Yeah, they'd alreaday tried your idea.
[02:34:51] *** Quits: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net) (Ping timeout: 256 seconds)
[02:35:23] <Franciman> bourbaki
[02:36:04] <dolio> Teaching universal algebra is probably a better idea than set theory, though.
[02:36:12] <monochrom> haha
[02:36:17] *** Joins: ravella (~ravella@user/ryanavella)
[02:36:45] <Franciman> do they still teach ZF axiomatic set theory?
[02:40:22] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[02:42:16] <dolio> I don't think it was ZF, per se. It was a lot less formal than that.
[02:42:31] <dolio> Apparently abstract algebra was in the list of topics.
[02:43:08] *** Joins: jao (~jao@211.68.17.95.dynamic.jazztel.es)
[02:43:12] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[02:43:12] <monochrom> Näive set theory that only covers finite sets and doesn't bring up the tough questions so it's OK.
[02:43:37] *** Joins: nunggu (~q@user/nunggu)
[02:43:46] <monochrom> In fact, only at the level of what most programmers think of as "containers".
[02:44:02] *** Quits: jackson99 (~bc8147f2@cerf.good1.com) (Quit: quit)
[02:44:18] *** Quits: anon66200164 (~anon66200@host-92-19-99-147.as13285.net) (Remote host closed the connection)
[02:44:23] *** Joins: jackson99 (~bc8147f2@cerf.good1.com)
[02:44:34] *** Joins: anon66200164 (~anon66200@host-92-19-99-147.as13285.net)
[02:45:57] <EvanR> we were forced to answer the question "what is a line (or circle)" with "a set of points"
[02:46:13] <monochrom> Oh, damn.
[02:46:36] <EvanR> now i see that's a crazy intersection of ideas
[02:47:01] *** Quits: FragByte (~christian@user/fragbyte) (Ping timeout: 245 seconds)
[02:47:21] * geekosaur now wonders how much insanity he managed to miss
[02:47:23] *** Joins: FragByte (~christian@user/fragbyte)
[02:47:37] *** Joins: zebrag (~chris@user/zebrag)
[02:49:01] *** Quits: anon66200164 (~anon66200@host-92-19-99-147.as13285.net) (Ping timeout: 256 seconds)
[02:50:19] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[02:51:35] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:51:59] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[02:52:12] *** Joins: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net)
[02:54:06] <dolio> Yeah, see, that kind of answer is exactly the kind of reason the set theory part would be useless.
[02:55:34] *** Quits: cynomys (~cynomys@user/cynomys) (Quit: leaving)
[02:55:46] *** Joins: cynomys (~cynomys@user/cynomys)
[02:55:57] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[02:57:01] *** Quits: jao (~jao@211.68.17.95.dynamic.jazztel.es) (Ping timeout: 245 seconds)
[02:57:10] <dolio> 'All mathematical objects are built out of sets,' isn't an idea that actually makes understanding the objects any easier.
[02:59:14] *** Joins: jao (~jao@static-68-235-44-40.cust.tzulo.com)
[03:01:44] <EvanR> today they probably have to do homotopy type theory and say sets are made out of shapes
[03:03:45] *** Quits: Inst (~delicacie@c-98-208-218-119.hsd1.fl.comcast.net) (Ping timeout: 256 seconds)
[03:03:48] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[03:03:54] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 260 seconds)
[03:04:55] *** Quits: jao (~jao@static-68-235-44-40.cust.tzulo.com) (Ping timeout: 250 seconds)
[03:07:08] *** Joins: jao (~jao@68.235.43.85)
[03:13:37] <janus> what would be a neat name for `flip foldMap`. my coworker suggested `summarize`. and monoids are, according to cdsmith 'composable list summarizers'
[03:14:20] <janus> maybe that is too 'smart'. but mapMconcat makes it looks like mapM, which it is not
[03:14:33] <janus> mconcatMap? seems bulky
[03:14:55] *** Joins: vysn (~vysn@user/vysn)
[03:14:58] <EvanR> flippedFoldMap = flip foldMap
[03:15:09] <janus> ;)
[03:15:36] <EvanR> should clear up any confusion
[03:16:10] <monochrom> @type flip foldMap
[03:16:11] <lambdabot> (Foldable t, Monoid c) => t a -> (a -> c) -> c
[03:16:21] <monochrom> reduceBy
[03:16:30] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Ping timeout: 276 seconds)
[03:16:50] <monochrom> Example: [1,23] `reduceBy` Sum  >:)
[03:17:13] <jackdk> janus: `paMdolf`
[03:17:28] <janus> haha :D
[03:17:45] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[03:17:51] <janus> pamDolf... it has a certain ring to it..
[03:17:58] <ephemient> (<&>/)
[03:18:02] <jackdk> > (`foldMap` [1, 2, 3]) Sum
[03:18:03] <lambdabot>  Sum {getSum = 6}
[03:18:05] <monochrom> This is strange, flip foldMap feels like the wrong order of arguments.
[03:18:25] <monochrom> or s/wrong/very unusual/
[03:18:27] *** dysfigured is now known as dfg
[03:18:33] *** Quits: dfg (~dfg@dfg.rocks) (Changing host)
[03:18:33] *** Joins: dfg (~dfg@user/dfg)
[03:18:38] <janus> monochrom: it's just like for is flipped traverse
[03:18:45] *** Quits: briandaed (~root@109.95.143.81.r.toneticgroup.pl) (Remote host closed the connection)
[03:19:01] *** alMalsam1 is now known as alMalsamo
[03:19:03] <jackdk> monochrom: I think it's because imperative programmers tend not to use it, whereas `for_ = flip traverse_` and `for = flip traverse`map onto ad-hoc for-each-style constructs in other languages
[03:19:24] <Axman6> :t \f xs = getDual (foldMap (Dual . f) xs)
[03:19:25] <lambdabot> error: parse error on input ‘=’
[03:19:26] <jackdk> it's like a gap in the conceptual toolbox that you didn't know you had until you see foldMap
[03:19:31] <Axman6> :t \f xs -> getDual (foldMap (Dual . f) xs)
[03:19:32] <lambdabot> (Foldable t, Monoid a1) => (a2 -> a1) -> t a2 -> a1
[03:19:36] <janus> monochrom: often when you have a maybe, the function will be way larger than the Maybe. this is where i'd use for/pamDolf
[03:20:18] <jackdk> % :set -XBlockArguments
[03:20:18] <yahb> jackdk: 
[03:20:21] <Axman6> > (\f xs -> getDual (foldMap (Dual . f) xs)) show [1..10]
[03:20:23] <lambdabot>  "10987654321"
[03:20:53] *** Joins: FragByte_ (~christian@user/fragbyte)
[03:21:01] <jackdk> % Just 3 & foldMap \m -> Sum (m + 1)
[03:21:02] <yahb> jackdk: Sum {getSum = 4}
[03:21:02] <monochrom> The for-loop analogy may inspire very good names. forFold? foldFor?
[03:21:11] *** Quits: FragByte (~christian@user/fragbyte) (Ping timeout: 245 seconds)
[03:21:21] *** FragByte_ is now known as FragByte
[03:21:21] <jackdk> I tend not to use blockarguments but find it compelling here
[03:21:24] <monochrom> forReduce?
[03:21:49] *** Quits: cynomys (~cynomys@user/cynomys) (Ping timeout: 250 seconds)
[03:21:59] <jackdk> % :set -XNoBlockArguments
[03:21:59] <yahb> jackdk: 
[03:22:17] <Axman6> BlockArguments is one of the other extensions turned on by default in DAML that makes it feel just a little less cumbersome to write, and I should probably use it more in Haskell
[03:22:53] <janus> chris smith just posted some suggestions at https://github.com/ndmitchell/extra/issues/87#issuecomment-1035645114
[03:23:14] <monochrom> Lately I took a look at Koka and found a syntax sugar even better than BlockArguments.
[03:24:38] <monochrom> Suppose you have "f :: Foo -> Bar -> (() -> X) -> X", and you would normally use it like "f foo bar \() -> xxx"
[03:25:03] <monochrom> The Koka syntax sugar is "with f foo bar { xxx }". So you even omit the lambda.
[03:25:32] <monochrom> (Why is ()->X a useful type in Koka? Because that X is usually an effectful type, e.g., IO Y)
[03:26:06] <monochrom> (And Koka is call-by-value like SML and Scheme so you do want a \()-> wrapper.)
[03:27:55] <Axman6> what do you do if you have f :: Foo -> Bar -> (() -> Y) -> (() -> X) -> X?
[03:28:24] <monochrom> Ah, no nicer syntax sugar for that.
[03:28:30] *** Joins: alp (~alp@user/alp)
[03:29:46] <monochrom> But types like the type of f are way more pervasive in Koka because it presents its effect system and library in terms of those types.
[03:29:51] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:30:02] *** Joins: yauhsien_ (~yauhsien@61-231-45-223.dynamic-ip.hinet.net)
[03:30:05] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:30:13] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:30:15] *** Joins: bontaq (~user@ool-45779fe5.dyn.optonline.net)
[03:30:27] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:30:34] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:30:44] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[03:30:48] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:30:56] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:31:10] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:31:18] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:31:31] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:31:39] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:31:54] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:32:01] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:32:15] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:32:22] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:32:38] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:32:43] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:32:46] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:33:03] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:33:11] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:33:26] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:33:32] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:33:49] *** Joins: lavaman (~lavaman@98.38.249.169)
[03:33:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[03:34:13] *** Quits: yauhsien_ (~yauhsien@61-231-45-223.dynamic-ip.hinet.net) (Ping timeout: 240 seconds)
[03:38:05] *** Joins: Inst (~delicacie@2603:3017:80:0:e0f0:ede7:d35a:3a22)
[03:38:41] *** Quits: mvk (~mvk@2607:fea8:5cdc:bf00::f276) (Ping timeout: 245 seconds)
[03:39:41] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Quit: Leaving)
[03:40:33] *** Quits: HotblackDesiato (~HotblackD@gateway/tor-sasl/hotblackdesiato) (Ping timeout: 276 seconds)
[03:40:53] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[03:41:38] *** Joins: HotblackDesiato (~HotblackD@gateway/tor-sasl/hotblackdesiato)
[03:41:55] *** Quits: nunggu (~q@user/nunggu) (Remote host closed the connection)
[03:42:19] *** Joins: nunggu (~q@user/nunggu)
[03:49:16] <Unicorn_Princess> has anyone had any luck setting up spacemacs for haskell using lsp?
[03:49:32] *** Joins: deadmarshal (~deadmarsh@95.38.117.65)
[03:54:18] *** Quits: deadmarshal (~deadmarsh@95.38.117.65) (Ping timeout: 260 seconds)
[03:57:45] <geekosaur> I thought it came pre-setup
[03:58:29] <Unicorn_Princess> alas
[03:58:37] *** Quits: Inst (~delicacie@2603:3017:80:0:e0f0:ede7:d35a:3a22) (Ping timeout: 240 seconds)
[04:01:38] <Unicorn_Princess> there is a 'haskell' layer, and a 'lsp' layer, and you can tell the haskell layer to use lsp as the completion back-end (i guess it doesn't use it as default? what about other, non-completion tasks?).. and there's also the auto-completion layer, which the haskell layer installation instructions claim is necessary for completion, but i in c++ where i have lsp working i didn't need auto-completion layer, and anyway after 
[04:01:38] <Unicorn_Princess> installing hls with ghcup, something is still not working, and describe-lsp-session gives blank output
[04:01:50] <Unicorn_Princess> in general things are a mess :)
[04:02:30] <Unicorn_Princess> (and i am not remotely sure i am doing the right thing)
[04:03:58] *** Joins: Inst (~delicacie@2603:3017:80:0:5cf3:2e04:7922:1ae5)
[04:04:57] *** Joins: machinedgod (~machinedg@24.105.81.50)
[04:05:53] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:06:10] *** Joins: cynomys (~cynomys@user/cynomys)
[04:06:15] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[04:07:33] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:07:33] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:07:33] *** Joins: wroathe (~wroathe@user/wroathe)
[04:07:54] *** Joins: ellie (~ellie@user/ellie)
[04:08:21] <shapr> Does cabal support an hpc stanza or something? How do I automate running tests with included hpc output?
[04:08:35] <shapr> cdsmith: How do you handle hpc with HMock?
[04:11:55] *** Joins: yauhsien_ (~yauhsien@61-231-45-223.dynamic-ip.hinet.net)
[04:19:10] *** Joins: benin (~benin@183.82.31.24)
[04:20:21] <mjrosenb> I have an object that I derived Show and Binary instances for.  Is it reasonable that show foo produces a 500 megabyte string, but encodeFile "bar" foo produces a 5.3 gigabyte file?
[04:24:49] *** Quits: Katarushisu (~Katarushi@cpc147334-finc20-2-0-cust27.4-2.cable.virginm.net) (Quit: Ping timeout (120 seconds))
[04:25:11] *** Joins: Katarushisu (~Katarushi@cpc147334-finc20-2-0-cust27.4-2.cable.virginm.net)
[04:25:21] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[04:25:42] *** Quits: FragByte (~christian@user/fragbyte) (Quit: Quit)
[04:25:51] *** Joins: FragByte (~christian@user/fragbyte)
[04:27:03] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[04:27:07] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[04:27:15] *** Joins: cheater (~Username@user/cheater)
[04:34:33] *** Joins: lavaman (~lavaman@98.38.249.169)
[04:35:12] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Read error: Connection reset by peer)
[04:35:28] <monochrom> Depends on the type but I can see how to design a type that causes derived Binary to be huge.
[04:36:10] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[04:36:37] <monochrom> Consider the fact that if you have so much as "data X = C1 Int | C2 Int" then first of all every value incurs some bytes that derived Binary needs to tell itself whether the tag is C1 or C2.
[04:37:49] *** Quits: jgeerds_ (~jgeerds@55d4a547.access.ecotel.net) (Ping timeout: 240 seconds)
[04:38:02] <monochrom> Next thing IIRC is that even the Int part is not simply the bytes of Int. For some reason of being general, more bytes are devoted for "the length of the next field".
[04:38:37] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[04:40:16] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[04:40:22] *** Quits: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8) (Remote host closed the connection)
[04:41:30] *** Joins: meer (~delicacie@2603:3017:80:0:16b:f1cd:e4c0:5b40)
[04:41:35] <monochrom> Ah nevermind but it always uses 8 bytes for Int.
[04:41:37] *** Quits: emf (~emf@2620:10d:c090:400::5:21fc) (Ping timeout: 240 seconds)
[04:43:03] *** Quits: Inst (~delicacie@2603:3017:80:0:5cf3:2e04:7922:1ae5) (Ping timeout: 250 seconds)
[04:43:08] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.4)
[04:46:20] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 250 seconds)
[04:46:29] *** Joins: albet70 (~xxx@2400:8902::f03c:92ff:fe60:98d8)
[04:46:52] <mjrosenb> it looks like it doesn't always use 8 bytes for Word16 or Word8 :-)
[04:47:14] <mjrosenb> that being said, it is still 1.3 gigabytes, and I don't think I'm doing anythign all that bad
[04:47:46] <mjrosenb> unless it also uses a header for newtype
[04:49:00] *** Quits: cynomys (~cynomys@user/cynomys) (Quit: Lost terminal)
[04:50:09] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[04:50:37] *** Quits: ubert (~Thunderbi@p200300ecdf0994184cc217ea87d4c264.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[04:50:37] *** Joins: emf_ (~emf@2620:10d:c090:400::5:83f2)
[04:50:55] *** Joins: ubert (~Thunderbi@p200300ecdf0994102c357846a3b3453e.dip0.t-ipconnect.de)
[04:52:13] *** Joins: deer (~delicacie@2603:3017:80:0:9cf2:41b7:8929:babb)
[04:52:33] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 256 seconds)
[04:52:59] <neverwas> Unicorn_Princess: hls appears to have made significant progress since that README.org was last updated, or at least those portions characterizing it as rough around the edges and more difficult to get going (August 2020)
[04:55:26] *** Quits: meer (~delicacie@2603:3017:80:0:16b:f1cd:e4c0:5b40) (Ping timeout: 260 seconds)
[04:56:44] *** Quits: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net) (Ping timeout: 250 seconds)
[04:57:39] *** Joins: abhinav (~abhinav@c-67-169-139-16.hsd1.ca.comcast.net)
[05:01:32] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:04:29] <Unicorn_Princess> neverwas, unfortunately i can't get it to work at all
[05:05:07] <Unicorn_Princess> but i have no idea which instructions to follow, so, maybe there's an easy way and i'm doing something stupid
[05:06:13] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[05:08:03] *** Quits: abhinav (~abhinav@c-67-169-139-16.hsd1.ca.comcast.net) (Quit: leaving)
[05:09:14] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[05:09:57] *** Joins: lavaman (~lavaman@98.38.249.169)
[05:10:53] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[05:11:01] *** Quits: yauhsien_ (~yauhsien@61-231-45-223.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[05:12:19] <Unicorn_Princess> the more i try to fix it the more broken it gets. now it doesn't even recognize the file as haskell anymore ; ;
[05:14:39] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[05:16:21] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[05:16:51] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 250 seconds)
[05:21:11] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Quit: jsdsk)
[05:21:13] *** Joins: emf (~emf@2620:10d:c090:400::5:322c)
[05:22:03] *** Joins: dajoer (~david@user/gvx)
[05:22:12] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[05:22:19] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:22:19] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:22:19] *** Joins: wroathe (~wroathe@user/wroathe)
[05:23:17] *** Quits: emf_ (~emf@2620:10d:c090:400::5:83f2) (Ping timeout: 240 seconds)
[05:29:14] *** Quits: deer (~delicacie@2603:3017:80:0:9cf2:41b7:8929:babb) (Ping timeout: 250 seconds)
[05:30:53] <Unicorn_Princess> i'll try and enable it in plain emacs tomorrow, no spacemacs. wish me luck.
[05:31:59] *** Quits: alp (~alp@user/alp) (Ping timeout: 256 seconds)
[05:32:57] *** Joins: deer (~delicacie@2603:3017:80:0:fc91:e6a2:3374:ab63)
[05:33:38] *** Joins: meer (~delicacie@2603:3017:80:0:15a1:1fe2:f71:35ed)
[05:33:55] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 256 seconds)
[05:34:11] *** Quits: jackson99 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Ping timeout))
[05:34:38] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[05:35:49] *** Quits: emf (~emf@2620:10d:c090:400::5:322c) (Quit: emf)
[05:35:57] *** Quits: xsperry (~xs@user/xsperry) (Remote host closed the connection)
[05:37:27] *** Quits: deer (~delicacie@2603:3017:80:0:fc91:e6a2:3374:ab63) (Ping timeout: 250 seconds)
[05:38:03] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:dcda:1699:43fc:8977)
[05:39:17] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[05:39:17] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[05:41:56] *** Joins: califax- (~califax@user/califx)
[05:44:01] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[05:46:39] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[05:46:39] *** califax- is now known as califax
[05:47:23] *** Joins: zincy (~tom@host86-160-236-152.range86-160.btcentralplus.com)
[05:47:46] *** Joins: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b)
[05:49:06] *** Quits: tom__ (~tom@2a00:23c8:970c:4801:5b6a:e81b:79dc:f684) (Ping timeout: 260 seconds)
[05:49:36] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 268 seconds)
[05:50:02] *** Joins: mbuf (~Shakthi@117.96.201.174)
[05:50:25] *** Joins: emf (~emf@2620:10d:c090:400::5:322c)
[05:50:48] *** Joins: deer (~delicacie@2603:3017:80:0:457c:8cd6:204e:2f76)
[05:51:19] *** Quits: meer (~delicacie@2603:3017:80:0:15a1:1fe2:f71:35ed) (Ping timeout: 250 seconds)
[05:51:51] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[05:52:11] *** Quits: zincy_ (~zincy@2a00:23c8:970c:4801:39f9:90f7:922:e73b) (Ping timeout: 250 seconds)
[05:53:39] *** Quits: emf (~emf@2620:10d:c090:400::5:322c) (Client Quit)
[05:55:00] *** Joins: emf (~emf@2620:10d:c090:400::5:322c)
[05:59:37] *** Quits: deer (~delicacie@2603:3017:80:0:457c:8cd6:204e:2f76) (Ping timeout: 240 seconds)
[06:01:08] *** Quits: justGhost (~justache@user/justache) (Remote host closed the connection)
[06:02:03] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:95db:50d7:7eec:328d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:02:07] *** Joins: justGhost (~justache@user/justache)
[06:10:23] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 250 seconds)
[06:11:06] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Remote host closed the connection)
[06:16:21] *** Joins: notzmv (~zmv@user/notzmv)
[06:18:18] *** Quits: meinside (uid24933@id-24933.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[06:25:45] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[06:27:57] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[06:28:17] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:28:17] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:28:17] *** Joins: wroathe (~wroathe@user/wroathe)
[06:30:16] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[06:30:57] *** Quits: xff0x (~xff0x@2001:1a81:53bc:500:d58f:5284:91ba:f00d) (Ping timeout: 240 seconds)
[06:33:06] *** Joins: xff0x (~xff0x@2001:1a81:5217:8700:69e5:685a:dbaf:e7b2)
[06:33:22] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[06:35:12] *** Joins: deer (~delicacie@2601:6c4:4080:3f80:6c49:b76a:f28e:200e)
[06:35:17] *** Quits: shriekingnoise (~shrieking@201.231.16.156) (Quit: Quit)
[06:35:37] *** Joins: shriekingnoise (~shrieking@201.231.16.156)
[06:36:59] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[06:38:55] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[06:38:55] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[06:38:55] *** Joins: wroathe (~wroathe@user/wroathe)
[06:43:37] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[06:43:58] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:44:38] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[06:46:48] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[06:47:27] *** Quits: nattiestnate (~nate@2001:448a:4063:1cc8:3706:7ea7:62f5:aeaf) (Quit: WeeChat 3.4)
[06:57:29] *** Joins: sooch_ (sid533113@id-533113.hampstead.irccloud.com)
[07:01:57] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[07:04:08] *** Quits: td_ (~td@94.134.91.3) (Ping timeout: 250 seconds)
[07:05:32] *** Joins: meer (~delicacie@2601:6c4:4080:3f80:3413:a7ad:76c8:d9ab)
[07:05:52] *** Quits: deer (~delicacie@2601:6c4:4080:3f80:6c49:b76a:f28e:200e) (Ping timeout: 250 seconds)
[07:06:00] *** Joins: td_ (~td@94.134.91.17)
[07:06:05] *** Joins: deer (~delicacie@2601:6c4:4080:3f80:d8e8:7c5f:fc87:41f6)
[07:06:11] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[07:09:01] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:09:01] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:09:01] *** finn_elija is now known as FinnElija
[07:09:57] *** Quits: meer (~delicacie@2601:6c4:4080:3f80:3413:a7ad:76c8:d9ab) (Ping timeout: 240 seconds)
[07:10:49] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[07:12:37] *** Quits: deer (~delicacie@2601:6c4:4080:3f80:d8e8:7c5f:fc87:41f6) (Ping timeout: 240 seconds)
[07:13:04] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[07:13:10] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[07:13:46] *** Joins: wroathe (~wroathe@user/wroathe)
[07:14:18] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[07:22:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[07:31:51] *** Quits: burnsidesLlama (~burnsides@dhcp168-022.wadham.ox.ac.uk) (Remote host closed the connection)
[07:35:47] *** Joins: lavaman (~lavaman@98.38.249.169)
[07:37:26] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:37:26] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:37:26] *** Joins: wroathe (~wroathe@user/wroathe)
[07:40:17] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[07:41:57] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[07:48:16] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:48:16] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:48:16] *** Joins: wroathe (~wroathe@user/wroathe)
[07:53:19] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:59:01] *** Joins: nattiestnate (~nate@2001:448a:4063:1cc8:3706:7ea7:62f5:aeaf)
[08:02:16] *** Joins: lavaman (~lavaman@98.38.249.169)
[08:10:19] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[08:12:14] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[08:20:57] *** Quits: jao (~jao@68.235.43.85) (Ping timeout: 240 seconds)
[08:29:38] *** Joins: pavonia (~user@user/siracusa)
[08:31:37] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[08:39:23] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[08:49:59] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Ping timeout: 256 seconds)
[08:50:28] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[09:01:47] *** Joins: deadmarshal (~deadmarsh@95.38.117.65)
[09:02:47] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:04:29] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[09:05:51] *** Joins: k8yun (~k8yun@user/k8yun)
[09:06:09] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[09:08:23] *** Quits: little_mac (~little_ma@2601:410:4300:3ce0:dcda:1699:43fc:8977) (Remote host closed the connection)
[09:09:24] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:4826:55d6:e8be:a672)
[09:12:27] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[09:17:57] *** Joins: dschrempf (~dominik@mobiledyn-62-240-134-71.mrsn.at)
[09:18:51] *** Joins: yauhsien (~yauhsien@61-231-32-103.dynamic-ip.hinet.net)
[09:21:09] *** Quits: mbuf (~Shakthi@117.96.201.174) (Ping timeout: 256 seconds)
[09:21:17] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[09:29:44] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[09:31:02] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[09:34:38] *** Joins: jinsun (~quassel@user/jinsun)
[09:35:18] *** Joins: mbuf (~Shakthi@122.173.240.119)
[09:35:57] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[09:36:13] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:41:26] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[09:41:27] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[09:44:12] *** Quits: dschrempf (~dominik@mobiledyn-62-240-134-71.mrsn.at) (Quit: WeeChat 3.3)
[09:45:36] *** Quits: nattiestnate (~nate@2001:448a:4063:1cc8:3706:7ea7:62f5:aeaf) (Quit: WeeChat 3.4)
[09:46:45] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Remote host closed the connection)
[09:47:43] *** Joins: zaquest (~notzaques@5.130.79.72)
[09:48:55] *** Quits: tomku (~tomku@user/tomku) (Ping timeout: 256 seconds)
[09:49:02] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:49:02] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:49:02] *** Joins: wroathe (~wroathe@user/wroathe)
[09:49:16] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[09:50:57] *** Quits: bontaq (~user@ool-45779fe5.dyn.optonline.net) (Ping timeout: 256 seconds)
[09:51:46] *** Joins: Jing (~hedgehog@240e:390:7c53:a7e1:91b:49f7:fde:97e3)
[09:54:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:55:36] *** Joins: tomku (~tomku@user/tomku)
[10:02:04] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[10:11:25] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[10:13:05] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[10:17:03] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 276 seconds)
[10:19:17] *** Quits: Erutuon (~Erutuon@user/erutuon) (Ping timeout: 240 seconds)
[10:21:56] *** Joins: michalz (~michalz@185.246.204.65)
[10:29:41] *** Joins: lavaman (~lavaman@98.38.249.169)
[10:31:25] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[10:33:29] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[10:36:51] *** Joins: pmk (~user@2a02:587:9408:ec24:4207:d482:fa11:d902)
[10:41:57] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Ping timeout: 256 seconds)
[10:44:12] *** Quits: little_mac (~little_ma@2601:410:4300:3ce0:4826:55d6:e8be:a672) (Remote host closed the connection)
[10:46:25] *** Joins: xsperry (~xs@user/xsperry)
[10:50:15] *** Quits: drdo (~drdo@roach0.drdo.eu) (Quit: Ping timeout (120 seconds))
[10:52:30] *** Joins: anon66200164 (~anon66200@host-92-19-99-147.as13285.net)
[10:53:50] *** Parts: anon66200164 (~anon66200@host-92-19-99-147.as13285.net) ()
[10:59:36] *** Joins: thevishy (~Nishant@2405:201:f005:c007:742b:aca7:e311:68b4)
[11:01:53] *** Joins: dhouthoo (~dhouthoo@178-117-36-167.access.telenet.be)
[11:02:31] *** Joins: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com)
[11:02:39] *** Quits: zincy_ (~zincy@host86-160-236-152.range86-160.btcentralplus.com) (Remote host closed the connection)
[11:03:49] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[11:06:54] *** Quits: lechner (~lechner@debian/lechner) (Ping timeout: 260 seconds)
[11:07:34] *** Quits: pmk (~user@2a02:587:9408:ec24:4207:d482:fa11:d902) (Remote host closed the connection)
[11:11:39] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[11:13:18] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[11:15:48] *** Joins: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5)
[11:16:20] *** Quits: xff0x (~xff0x@2001:1a81:5217:8700:69e5:685a:dbaf:e7b2) (Ping timeout: 250 seconds)
[11:18:40] *** Joins: Ariakenom (~Ariakenom@2001:9b1:efe:9d00:dcfc:c5fc:22b3:cc92)
[11:19:10] *** Joins: machinedgod (~machinedg@24.105.81.50)
[11:25:24] *** Joins: Ariakenom_ (~Ariakenom@h-82-196-111-63.NA.cust.bahnhof.se)
[11:27:19] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Read error: Connection reset by peer)
[11:27:37] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[11:28:04] *** Joins: geekosaur (~geekosaur@xmonad/geekosaur)
[11:29:09] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:29:20] *** Quits: Ariakenom (~Ariakenom@2001:9b1:efe:9d00:dcfc:c5fc:22b3:cc92) (Ping timeout: 250 seconds)
[11:31:19] *** Joins: xff0x (~xff0x@2001:1a81:5217:8700:69e5:685a:dbaf:e7b2)
[11:32:54] *** Joins: CHUD (~CHUD@edu791B.kent.ac.uk)
[11:33:07] *** Quits: benin (~benin@183.82.31.24) (Quit: The Lounge - https://thelounge.chat)
[11:34:57] *** Quits: phma (~phma@host-67-44-208-245.hnremote.net) (Read error: Connection reset by peer)
[11:37:43] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[11:38:12] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[11:38:14] *** Joins: phma (~phma@2600:1004:b105:1903:6c5c:ec4b:e61f:6154)
[11:38:57] *** Joins: alp (~alp@user/alp)
[11:39:21] *** Quits: Jing (~hedgehog@240e:390:7c53:a7e1:91b:49f7:fde:97e3) (Quit: Textual IRC Client: www.textualapp.com)
[11:39:37] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:4e4d:3167:781a:2a42)
[11:39:43] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[11:40:52] *** Joins: dschrempf (~dominik@mobiledyn-62-240-134-71.mrsn.at)
[11:43:57] *** Joins: fef (~thedawn@user/thedawn)
[11:48:52] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[11:52:27] *** Quits: CHUD (~CHUD@edu791B.kent.ac.uk) (Ping timeout: 256 seconds)
[11:56:25] *** Quits: dschrempf (~dominik@mobiledyn-62-240-134-71.mrsn.at) (Ping timeout: 256 seconds)
[11:56:57] *** Joins: CHUD (~CHUD@edu791B.kent.ac.uk)
[11:56:59] *** Joins: polyphem_ (~rod@2a02:810d:840:8754:a99c:f444:1e7c:25d1)
[11:59:01] *** Quits: polyphem (~rod@2a02:810d:840:8754:f9b2:95ef:efe9:3c0f) (Ping timeout: 256 seconds)
[12:01:58] *** Quits: shriekingnoise (~shrieking@201.231.16.156) (Quit: Quit)
[12:03:37] *** Quits: phma (~phma@2600:1004:b105:1903:6c5c:ec4b:e61f:6154) (Ping timeout: 240 seconds)
[12:03:42] *** Joins: phma_ (phma@2001:5b0:211b:9208:8d1f:a4f2:ccb:6f41)
[12:04:21] *** Joins: AlexisTP (~AlexisTP@92.57.44.63)
[12:05:16] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Remote host closed the connection)
[12:05:30] *** Joins: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[12:08:19] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 250 seconds)
[12:09:45] *** Joins: vpan (~0@212.117.1.172)
[12:13:50] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:14:03] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[12:17:13] *** Joins: max22- (~maxime@2a01cb08833598006e0cb925e84f6514.ipv6.abo.wanadoo.fr)
[12:17:13] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:17:25] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[12:18:25] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:18:57] *** Joins: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e)
[12:19:15] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:30cc:b923:a3cb:c39c) (Remote host closed the connection)
[12:22:02] *** Quits: CHUD (~CHUD@edu791B.kent.ac.uk) (Remote host closed the connection)
[12:22:13] *** Joins: CHUD (~CHUD@edu791B.kent.ac.uk)
[12:28:26] *** Quits: CHUD (~CHUD@edu791B.kent.ac.uk) (Remote host closed the connection)
[12:28:42] *** Joins: CHUD (~CHUD@edu791B.kent.ac.uk)
[12:30:06] *** Quits: ParsaAlizadeh[m] (~lizadehma@2001:470:69fc:105::1:65a4) (Quit: You have been kicked for being idle)
[12:35:31] *** Quits: Benzi-Junior (~BenziJuni@dsl-149-66-61.hive.is) (Ping timeout: 256 seconds)
[12:35:38] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[12:46:35] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net) (Quit: zzz)
[12:50:19] *** Quits: nunggu (~q@user/nunggu) (Quit: nunggu)
[12:54:07] *** Quits: AlexisTP (~AlexisTP@92.57.44.63) (Remote host closed the connection)
[13:00:45] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[13:02:53] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:02:57] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[13:03:04] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[13:08:08] <dminuoso> Mmm, strange we dont have `altMap :: (Foldable t, Alternative f) => t a -> (a -> f b) -> f b` in base
[13:08:26] <dminuoso> asum feels awkward to use for the same reason sequence does
[13:10:20] <dminuoso> % :t getAlt . foldMap Alt
[13:10:20] <yahb> dminuoso: forall {k} {t :: * -> *} {f :: k -> *} {a :: k}. (Foldable t, Monoid (Alt f a)) => t (f a) -> f a
[13:10:29] *** Joins: `2jt (~jtomas@130.red-88-22-46.staticip.rima-tde.net)
[13:10:46] <dminuoso> % :set -XNoPolyKinds
[13:10:47] <yahb> dminuoso: 
[13:10:48] <dminuoso> % :t getAlt . foldMap Alt
[13:10:48] <yahb> dminuoso: (Foldable t, Alternative f) => t (f a) -> f a
[13:10:51] <dminuoso> Guess this works
[13:11:36] *** Joins: caimeo (uid540603@id-540603.lymington.irccloud.com)
[13:12:11] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[13:12:37] *** Quits: dsrt^ (~dsrt@128-092-160-106.biz.spectrum.com) (Ping timeout: 240 seconds)
[13:12:40] <reactormonk[m]> % :t ala Alt foldMap
[13:12:41] <yahb> reactormonk[m]: (Foldable t, Alternative g) => t (g b) -> g b
[13:13:28] <reactormonk[m]> dminuoso: ^
[13:13:31] *** Quits: Vajb (~Vajb@2001:999:274:c862:3b86:e1e1:5bff:355e) (Ping timeout: 250 seconds)
[13:13:34] *** Joins: nunggu (~q@user/nunggu)
[13:13:38] <reactormonk[m]> Basically the same, but "fancy"
[13:13:47] <dminuoso> Yeah, its just I dont like depending on coercible-utils for this
[13:14:04] <reactormonk[m]> Understandable
[13:14:06] <dminuoso> `... altMap ... where altMap = getAlt . foldMap Alt` seems more sensible than fancy ala. :)
[13:14:30] <dminuoso> Plus it saves me from explaining yet-another fancy trick to my coworkers when they look at this
[13:15:29] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[13:17:12] <dminuoso> Ah hold on, getAlt . foldMap is not quite the same
[13:17:35] <dminuoso> % altMap f = getAlt . foldMap (Alt . f)
[13:17:35] <yahb> dminuoso: 
[13:17:38] <dminuoso> Here we go
[13:18:07] <dminuoso> reactormonk[m]: I think coercible-utils has something for this too, right?
[13:18:41] <dminuoso> % :t ala' Alt foldMap
[13:18:41] <yahb> dminuoso: ; <interactive>:1:1: error:; * Variable not in scope: ala' :: (f0 a0 -> Alt f0 a0) -> ((a1 -> m0) -> t0 a1 -> m0) -> t; * Perhaps you meant one of these: `ala' (imported from Control.Lens), `alaf' (imported from Control.Lens)
[13:19:03] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 276 seconds)
[13:19:06] <dminuoso> % :t alaf Alt foldMap
[13:19:06] <yahb> dminuoso: (Foldable t, Alternative g) => (a -> g b) -> t a -> g b
[13:19:10] <dminuoso> Yeah that
[13:19:33] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[13:19:45] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:ad86:5044:3d0e:26e7)
[13:19:46] *** Quits: max22- (~maxime@2a01cb08833598006e0cb925e84f6514.ipv6.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[13:20:17] *** Quits: juhp (~juhp@128.106.188.82) (Ping timeout: 256 seconds)
[13:20:51] *** Quits: CHUD (~CHUD@edu791B.kent.ac.uk) (Ping timeout: 256 seconds)
[13:20:53] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[13:23:57] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:ad86:5044:3d0e:26e7) (Ping timeout: 240 seconds)
[13:30:12] *** Joins: Graham31415 (~Graham314@130.226.236.6)
[13:31:35] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[13:33:18] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:34:36] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:4e4d:3167:781a:2a42) (Quit: WeeChat 2.8)
[13:38:26] <Graham31415> To what extent should I be worried about things in base being marked as "experimental"? Right now I'm looking at Control.Concurrency. Also, what does it mean to be "non-portable"? OS portability? Hardware platform portability? Compiler portability?
[13:39:11] *** Quits: FragByte (~christian@user/fragbyte) (Quit: Quit)
[13:39:39] *** Joins: ardell (~ardell@user/ardell)
[13:39:46] <Graham31415> Looking at the ghc git repo, https://gitlab.haskell.org/ghc/ghc/-/blob/master/libraries/base/Control/Concurrent.hs hasn't been modified in 4 years.
[13:40:13] *** Joins: drdo (~drdo@roach0.drdo.eu)
[13:41:12] *** Joins: FragByte (~christian@user/fragbyte)
[13:45:00] <dminuoso> Graham31415: Not at all
[13:45:49] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[13:46:38] <Franciman> Graham31415: non portable usually means that it only works with GHC
[13:46:44] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:46:56] <dminuoso> Graham31415: So some guidance can be found if you dig around hierarchial haskell libraries https://web.archive.org/web/20070629214525/http://www.haskell.org/hierarchical-modules/libraries/reference-libraries.html
[13:46:59] *** Joins: cynomys (~cynomys@user/cynomys)
[13:47:10] <dminuoso> Which outlines the original intent of these wordings.
[13:47:34] <dminuoso> Note that `experimental`, even if adhering to that original intent, does not mean it *will* break, but merely that it will not make any promises.
[13:47:43] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[13:48:05] <Franciman> so you should take into account that it can break
[13:48:21] <Franciman> but in my experience, this happens extremely rarely
[13:48:26] <Franciman> for core libraries
[13:48:34] <dminuoso> The reality of the stability field is, its relatively meaningless
[13:48:51] <Graham31415> Ok, thanks. I'm guess that there's fairly little choice if one wants comparable functionality with a "stable" gaurantee?
[13:48:57] <dminuoso> There's a lot of libraries that promise PVP (our equivalent of SemVer), but put "stability experimental" into the cabal packages
[13:49:19] <dminuoso> Graham31415: Well, these fields are poorly managed - if at all.
[13:49:46] *** Joins: max22- (~maxime@2a01cb08833598003ad46ecd074981ca.ipv6.abo.wanadoo.fr)
[13:50:03] <Graham31415> Yeah, I'm getting that impression. Like the dead links all over haskell.org wiki.
[13:50:08] *** Quits: yauhsien (~yauhsien@61-231-32-103.dynamic-ip.hinet.net) (Remote host closed the connection)
[13:50:47] <dminuoso> Graham31415: But if its in base libraries, they are likely meaningful
[13:50:49] <dminuoso> The thing is
[13:51:11] <dminuoso> base is a complicated package, so per-module guarantees are probably more sensible anyway
[13:51:45] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[13:51:47] <dminuoso> And like we pointed out, experimental does not mean "its notoriously unstable", but merely that a base version update of any kind *can* induce breaking changes
[13:51:57] <dminuoso> But that's unrelated to how likely that is
[13:54:52] <Graham31415> Cool, I think I have a better intuition about this now. I see from https://packdeps.haskellers.com/reverse/base that most packages depend on base < 5.
[13:55:01] <Graham31415> I'll read the PVP...
[13:55:02] *** Joins: CHUD (~CHUD@dhcp636F.kent.ac.uk)
[13:56:17] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[14:02:15] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[14:02:15] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[14:02:15] *** Joins: wroathe (~wroathe@user/wroathe)
[14:07:30] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[14:09:24] *** Quits: drdo (~drdo@roach0.drdo.eu) (Quit: Ping timeout (120 seconds))
[14:11:03] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 256 seconds)
[14:11:25] *** Joins: drdo (~drdo@roach0.drdo.eu)
[14:11:32] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[14:12:15] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Ping timeout: 250 seconds)
[14:12:30] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[14:13:14] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[14:14:07] *** Joins: ubert1 (~Thunderbi@p200300ecdf099410dad98e969e0c4f9b.dip0.t-ipconnect.de)
[14:14:44] *** Joins: boxscape_ (~boxscape_@vpn-44-161.hq.eso.org)
[14:16:11] *** Joins: cosimone (~user@93-47-230-95.ip115.fastwebnet.it)
[14:16:11] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[14:16:56] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[14:20:15] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[14:23:31] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[14:23:38] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[14:24:17] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[14:30:43] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[14:31:36] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[14:32:51] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:38:38] *** Joins: Benzi-Junior (~BenziJuni@dsl-149-66-61.hive.is)
[14:44:14] *** Joins: xkuru (~xkuru@user/xkuru)
[14:44:25] *** Joins: dsrt^ (~dsrt@128-092-160-106.biz.spectrum.com)
[14:47:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[14:48:41] *** Quits: xff0x (~xff0x@2001:1a81:5217:8700:69e5:685a:dbaf:e7b2) (Ping timeout: 245 seconds)
[14:49:45] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[14:49:45] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[14:49:47] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[14:50:53] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[14:53:42] *** Joins: jalil (~jalil@2a01:e0a:277:4100:6436:dad4:61ec:3c98)
[14:54:36] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Read error: Connection reset by peer)
[14:57:15] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[14:57:22] *** Joins: jgeerds_ (~jgeerds@55d4a547.access.ecotel.net)
[14:57:51] *** Joins: Midjak2 (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[14:57:56] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 252 seconds)
[15:01:22] *** Joins: lavaman (~lavaman@98.38.249.169)
[15:01:37] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[15:04:33] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[15:05:00] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 276 seconds)
[15:05:01] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[15:05:04] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[15:05:37] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 240 seconds)
[15:06:18] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[15:06:54] *** Quits: CHUD (~CHUD@dhcp636F.kent.ac.uk) (Remote host closed the connection)
[15:10:45] *** Quits: cosimone (~user@93-47-230-95.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[15:10:54] *** Joins: xff0x (~xff0x@2001:1a81:5217:8700:69e5:685a:dbaf:e7b2)
[15:12:02] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[15:14:40] *** Quits: boxscape_ (~boxscape_@vpn-44-161.hq.eso.org) (Ping timeout: 250 seconds)
[15:14:44] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[15:14:56] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[15:17:16] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[15:17:39] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[15:18:11] *** Quits: ardell (~ardell@user/ardell) (Quit: Konversation terminated!)
[15:18:15] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[15:20:44] *** Quits: Midjak2 (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: Leaving)
[15:21:16] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[15:21:33] *** Joins: mmhat (~mmh@55d4c207.access.ecotel.net)
[15:22:27] *** Joins: lortabac (~lortabac@2a01:e0a:541:b8f0:a93b:29e3:e4c0:d09f)
[15:24:57] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[15:25:15] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[15:29:29] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[15:29:37] *** Joins: alx741 (~alx741@157.100.197.240)
[15:30:23] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[15:32:37] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[15:32:59] <ProfSimm> Are all Haskell functions technically single expression that returns (i.e. is substitued in the call)
[15:33:07] *** Joins: cosimone (~user@93-47-230-95.ip115.fastwebnet.it)
[15:33:26] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[15:33:40] <dminuoso> ProfSimm: The question is phrased a bit weirdly, let me rephrase what I understood 
[15:34:04] <dminuoso> Are you asking whether `calling a function` merely constitutes `substituting with its definition`?
[15:34:05] <[exa]> "referential transparency" maybe?
[15:34:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[15:34:46] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[15:36:15] <dminuoso> If you apply a function to its arguments, the semantics of that is the same as if you had replaced the function with its definition (modulo some desugaring for pattern matching or multiple function definitions)
[15:36:35] <dminuoso> Which makes it easy to understand what any code does. Just substitute in any order you like
[15:36:42] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[15:36:55] <dminuoso> And in fact, in principle we dont impose any order in which that substitution even happens
[15:36:59] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 252 seconds)
[15:37:12] <dminuoso> (In the absence of certain vodoo primitives that we shall ignore for the purpose of this discussion)
[15:37:15] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[15:38:37] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[15:39:02] *** Joins: lavaman (~lavaman@98.38.249.169)
[15:40:50] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[15:41:04] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[15:42:31] *** Quits: wavemode (~wavemode@2601:241:0:fc90:12bc:6a75:8601:ea04) (Ping timeout: 256 seconds)
[15:42:42] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[15:42:51] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[15:42:57] *** Quits: tdammers (~tdammers@77.109.72.177.res.static.edpnet.net) (Ping timeout: 240 seconds)
[15:43:39] *** Quits: cynomys (~cynomys@user/cynomys) (Ping timeout: 256 seconds)
[15:44:16] <dminuoso> So if we have `f x = <body>`, then an expression `f 1` can be substituted with <body>, with any occurence of a free-variable `x` replaced with 1.
[15:44:17] *** Quits: alp (~alp@user/alp) (Ping timeout: 240 seconds)
[15:55:46] *** Quits: mstksg (~jle`@cpe-23-240-75-236.socal.res.rr.com) (Ping timeout: 245 seconds)
[15:56:14] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 252 seconds)
[15:56:48] <iphy> https://hackage.haskell.org/package/timers-0.2.0.4 seems dead (it's not in stackage), is there any similar package I can use?
[15:57:11] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[15:58:06] *** Joins: mstksg (~jle`@cpe-23-240-75-236.socal.res.rr.com)
[15:59:37] <geekosaur> "notin stackage" may simply mean nobody'srequested it yet
[15:59:50] <geekosaur> it's not like stackage actively searches out packages to include
[16:00:59] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:95db:50d7:7eec:328d)
[16:01:09] *** Joins: tdammers (~tdammers@77.109.72.177.res.static.edpnet.net)
[16:02:26] <iphy> I see
[16:03:49] *** polyphem_ is now known as polyphem
[16:06:15] *** Joins: kfj_ (~kfj@94.198.43.75)
[16:06:17] <iphy> I'll do extra-deps then
[16:07:22] *** Quits: kfj_ (~kfj@94.198.43.75) (Client Quit)
[16:07:23] *** Quits: dsrt^ (~dsrt@128-092-160-106.biz.spectrum.com) (Remote host closed the connection)
[16:11:25] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[16:12:26] *** Quits: geekosaur (~geekosaur@xmonad/geekosaur) (Ping timeout: 245 seconds)
[16:13:29] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[16:13:37] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[16:13:46] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[16:14:26] *** Quits: phma_ (phma@2001:5b0:211b:9208:8d1f:a4f2:ccb:6f41) (Read error: Connection reset by peer)
[16:16:09] *** Joins: phma_ (phma@2001:5b0:210d:70f8:60e0:e2f9:8ba1:2fd7)
[16:16:17] *** Quits: lottaquestions (~nick@2607:fa49:5041:a200:833f:e9c7:6325:4206) (Ping timeout: 240 seconds)
[16:21:42] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[16:21:48] *** Joins: slack1256 (~slack1256@191.126.99.204)
[16:22:02] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[16:22:13] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[16:22:19] <ProfSimm> dminuoso: this question came from me wondering when does order of expressions matter and when not. For example I don't need to define a variable before i use it, but pattern matching order matters
[16:22:50] <dminuoso> ProfSimm: The order only matters in pattern matching.
[16:23:03] <dminuoso> (That and in certain magic voodoo primitives)
[16:23:25] <dminuoso> Those voodoo primities (seq, pseq, !) exist precisely for when one wants to control evaluation order for performance reasons.
[16:23:57] <dminuoso> But other than that the evaluation is left unspecified because it really doesnt matter
[16:24:26] <dminuoso> It's similar to math where, say if you have `(1 + 2) * (3 + 4)` it really doesnt matter whether you first reduce 1 + 3, or 3 + 4
[16:24:43] <dminuoso> It makes no difference, so the reader is free to do it in any way they prefer. Same story with Haskell
[16:25:28] <dminuoso> ontop we have non-strict semantics, which means that in reality things are only reduced if they are needed, and only up to a certain point
[16:25:38] <dminuoso> @src cycle
[16:25:38] <lambdabot> cycle [] = undefined
[16:25:38] <lambdabot> cycle xs = xs' where xs' = xs ++ xs'
[16:25:55] <dminuoso> % take 10 (cycle [1,2,3])
[16:25:55] <yahb> dminuoso: [1,2,3,1,2,3,1,2,3,1]
[16:26:32] <dminuoso> While in principle the second argument to `take` is an infinite list, because we only evaluate on demand and only up until we see a data constructor (and some other cases), this does not end up in an infinite loop
[16:30:39] *** Joins: boxscape_ (~boxscape_@p4ff0b60b.dip0.t-ipconnect.de)
[16:30:40] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[16:31:49] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[16:35:01] *** Quits: jgeerds_ (~jgeerds@55d4a547.access.ecotel.net) (Ping timeout: 250 seconds)
[16:35:01] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[16:35:38] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[16:36:36] *** Quits: zeenk (~zeenk@2a02:2f04:a30d:1300:51a3:bcfc:6cda:9fc5) (Quit: Konversation terminated!)
[16:37:42] <ProfSimm> dminuoso: ooo, magic voodoo primitives :) ? Like what
[16:37:54] <ProfSimm> Oh stil reading
[16:38:24] <ProfSimm> dminuoso: when is order of execution for performance reasons?
[16:38:31] <ProfSimm> rather than semantics
[16:39:49] *** Joins: alp (~alp@user/alp)
[16:41:41] <dminuoso> ProfSimm: So in GHC haskell we have lazyness. That means, if you write `let x = ...` there must be some representation in the implementation, and that costs memory.
[16:42:34] <dminuoso> So let's say we have a list of things, all of which would automatically be lazy (and thus have some memory representation for that lazyness), that means we have to keep all those representations in memory
[16:43:25] <dminuoso> But if we, as a programmer, know we are going to need each value regardless, then we can give additional hints to force evaluating these elements when you demand that list.
[16:43:42] <dminuoso> Such that this list will not contain a list of lazy things, but a list of already computed values
[16:44:03] <dminuoso> So as a simple example, lets say we have a tuple of three elements
[16:44:46] <ProfSimm> dminuoso: ah I was aware of lazy eval, but I didn't know you can force eval outside IO monad and the like
[16:46:21] *** Joins: Everything (~Everythin@37.115.210.35)
[16:48:17] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[16:50:36] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:51:44] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 250 seconds)
[16:52:17] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[16:52:52] *** Joins: o-90 (~o-90@gateway/tor-sasl/o-90)
[16:54:10] *** Joins: cfricke (~cfricke@user/cfricke)
[16:54:45] *** Quits: xff0x (~xff0x@2001:1a81:5217:8700:69e5:685a:dbaf:e7b2) (Ping timeout: 250 seconds)
[16:55:31] *** Joins: xff0x (~xff0x@2001:1a81:5217:8700:efaf:a053:4338:c053)
[17:03:24] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[17:03:47] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[17:04:51] *** Quits: Ranhir (~Ranhir@157.97.53.139) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[17:07:15] *** Joins: jollygood2 (~bc8147f2@cerf.good1.com)
[17:08:05] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[17:08:27] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[17:08:53] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[17:10:17] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[17:10:37] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[17:12:02] *** Joins: Ranhir (~Ranhir@157.97.53.139)
[17:12:41] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[17:14:17] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Remote host closed the connection)
[17:14:33] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Remote host closed the connection)
[17:16:58] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[17:17:08] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[17:17:17] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 250 seconds)
[17:19:40] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:20:51] *** Quits: o-90 (~o-90@gateway/tor-sasl/o-90) (Ping timeout: 276 seconds)
[17:22:29] *** Joins: slack1729 (~slack1256@181.42.43.2)
[17:25:17] *** Quits: slack1256 (~slack1256@191.126.99.204) (Ping timeout: 240 seconds)
[17:28:44] *** Joins: __monty__ (~toonn@user/toonn)
[17:29:08] *** Joins: kilolympus (~kilolympu@31.205.200.235)
[17:30:03] *** Joins: lottaquestions (~nick@2607:fa49:5041:a200:bd48:3fa6:d41:7f9)
[17:30:43] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[17:30:47] *** Joins: jgeerds_ (~jgeerds@55d4a547.access.ecotel.net)
[17:32:10] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[17:32:15] *** Joins: slack1256 (~slack1256@191.126.99.204)
[17:32:17] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[17:32:53] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Remote host closed the connection)
[17:34:08] *** Quits: slack1729 (~slack1256@181.42.43.2) (Ping timeout: 252 seconds)
[17:34:41] *** Quits: jollygood2 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC)
[17:35:16] *** Joins: jollygood2 (~bc8147f2@cerf.good1.com)
[17:35:55] *** Quits: deadmarshal (~deadmarsh@95.38.117.65) (Ping timeout: 250 seconds)
[17:36:39] *** Joins: shriekingnoise (~shrieking@201.231.16.156)
[17:37:03] *** Joins: deadmarshal (~deadmarsh@95.38.117.65)
[17:38:02] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[17:43:10] *** Joins: vysn (~vysn@user/vysn)
[17:43:48] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[17:43:48] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[17:43:48] *** Joins: wroathe (~wroathe@user/wroathe)
[17:48:57] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[17:49:27] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[17:49:52] *** Joins: opticblast (~june@secure-165.caltech.edu)
[17:50:09] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[17:50:37] *** Parts: opticblast (~june@secure-165.caltech.edu) ()
[17:50:45] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[17:51:43] *** Quits: jgeerds_ (~jgeerds@55d4a547.access.ecotel.net) (Ping timeout: 256 seconds)
[18:02:17] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[18:03:23] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[18:03:23] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[18:03:57] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[18:04:07] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[18:04:23] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 252 seconds)
[18:06:17] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:07:18] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[18:08:10] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[18:08:18] *** Joins: Techcable (~Techcable@168.235.93.147)
[18:09:53] *** Quits: xff0x (~xff0x@2001:1a81:5217:8700:efaf:a053:4338:c053) (Ping timeout: 252 seconds)
[18:10:45] *** Joins: xff0x (~xff0x@2001:1a81:5217:8700:66e9:b7e:a0f4:b397)
[18:15:31] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 256 seconds)
[18:15:49] *** Quits: n3rdy1 (~n3rdy1@2600:1700:4570:3480:1b88:50f:dae0:9293) (Remote host closed the connection)
[18:18:32] *** Quits: stilgart_ (~Christoph@chezlefab.net) (Ping timeout: 240 seconds)
[18:24:40] *** Quits: acidsys (~LSD@2.lsd.systems) (Quit: I love you.)
[18:25:35] *** Joins: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net)
[18:28:07] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[18:31:50] *** Quits: lottaquestions (~nick@2607:fa49:5041:a200:bd48:3fa6:d41:7f9) (Quit: Konversation terminated!)
[18:35:18] *** Quits: hyiltiz (~quassel@31.220.5.250) (Ping timeout: 250 seconds)
[18:35:18] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[18:35:51] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[18:38:56] *** Joins: neurocyte0917090 (~neurocyte@IP-045010063119.dynamic.medianet-world.de)
[18:38:56] *** Quits: neurocyte0917090 (~neurocyte@IP-045010063119.dynamic.medianet-world.de) (Changing host)
[18:38:56] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[18:39:19] *** Joins: hyiltiz (~quassel@31.220.5.250)
[18:39:53] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[18:40:15] *** Quits: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com) (Ping timeout: 250 seconds)
[18:41:15] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[18:41:44] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[18:42:01] *** Joins: neurocyte0917090 (~neurocyte@IP-045010063119.dynamic.medianet-world.de)
[18:42:01] *** Quits: neurocyte0917090 (~neurocyte@IP-045010063119.dynamic.medianet-world.de) (Changing host)
[18:42:01] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[18:43:06] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 250 seconds)
[18:43:25] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[18:44:11] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:44:19] *** Joins: sektor|3 (~kvirc@94.155.193.66)
[18:44:59] *** Quits: sektor|2 (~kvirc@87.227.175.182) (Ping timeout: 256 seconds)
[18:45:13] *** Joins: nschoe (~quassel@2a01:e0a:8e:a190:aeb5:bcf:993b:2d87)
[18:46:39] *** Joins: sektor|2 (~kvirc@94.155.193.66)
[18:48:13] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 240 seconds)
[18:48:24] *** Quits: jalil (~jalil@2a01:e0a:277:4100:6436:dad4:61ec:3c98) (Quit: jalil)
[18:49:10] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[18:49:31] *** Quits: sektor|3 (~kvirc@94.155.193.66) (Ping timeout: 256 seconds)
[18:49:57] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:49:57] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:49:57] *** Joins: wroathe (~wroathe@user/wroathe)
[18:54:21] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 250 seconds)
[18:54:27] *** Quits: ph88 (~ph88@2a02:8109:9e00:71d0:980:dccb:621a:6731) (Remote host closed the connection)
[18:54:48] *** Joins: vysn (~vysn@user/vysn)
[18:58:42] *** Quits: cosimone (~user@93-47-230-95.ip115.fastwebnet.it) (Remote host closed the connection)
[18:59:06] *** Joins: k8yun (~k8yun@user/k8yun)
[19:04:51] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[19:04:51] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[19:05:57] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[19:06:15] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[19:06:18] *** Joins: cosimone (~user@93-47-230-95.ip115.fastwebnet.it)
[19:06:24] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[19:06:43] *** Joins: rekahsoft (~rekahsoft@cpe0008a20f982f-cm64777d666260.cpe.net.cable.rogers.com)
[19:06:43] *** Joins: mc47 (~mc47@xmonad/TheMC47)
[19:06:56] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[19:09:22] *** Joins: burnsidesLlama (~burnsides@dhcp168-030.wadham.ox.ac.uk)
[19:12:11] *** Quits: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[19:13:05] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 256 seconds)
[19:14:52] *** Joins: sektor|3 (~kvirc@87.227.175.182)
[19:16:09] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[19:16:21] *** Joins: jao (~jao@static-68-235-44-40.cust.tzulo.com)
[19:16:40] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[19:16:43] *** Quits: Graham31415 (~Graham314@130.226.236.6) (Ping timeout: 256 seconds)
[19:17:32] *** Joins: Sgeo (~Sgeo@user/sgeo)
[19:18:03] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[19:18:25] *** Quits: sektor|2 (~kvirc@94.155.193.66) (Ping timeout: 256 seconds)
[19:18:25] *** Joins: wroathe (~wroathe@user/wroathe)
[19:21:48] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:21:49] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[19:22:04] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:22:11] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:22:27] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:22:34] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:22:47] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:22:55] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:23:10] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:23:17] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:23:31] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:23:39] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:23:54] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:24:00] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:24:13] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:24:14] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:24:22] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:24:32] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[19:24:36] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:24:39] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:ad86:5044:3d0e:26e7)
[19:24:44] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:24:58] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:25:05] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:25:19] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:25:28] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:25:42] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:25:49] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:26:03] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:26:10] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:26:25] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:26:32] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:26:46] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:26:53] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:27:08] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:27:16] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:27:30] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:27:37] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:27:51] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:27:58] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:28:13] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:28:20] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:28:35] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:28:43] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:28:52] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[19:28:57] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:29:01] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:ad86:5044:3d0e:26e7) (Ping timeout: 240 seconds)
[19:29:05] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:29:20] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:29:28] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:29:41] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:29:49] *** Quits: jao (~jao@static-68-235-44-40.cust.tzulo.com) (Ping timeout: 240 seconds)
[19:29:49] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:30:03] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:30:11] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:30:24] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:30:32] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:30:47] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:30:54] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:31:08] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:31:16] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:31:31] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:31:38] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:31:52] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:31:59] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:32:15] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:32:16] *** Joins: jao (~jao@68.235.43.173)
[19:32:22] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:32:36] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:32:43] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:32:58] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:33:06] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:33:21] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:33:28] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:33:42] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:33:49] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:33:58] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[19:34:03] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:34:11] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:34:26] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:34:34] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:34:48] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:34:56] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:35:10] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:35:15] *** Joins: wroathe (~wroathe@user/wroathe)
[19:35:18] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:35:32] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:35:39] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[19:35:40] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:35:55] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:36:03] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:36:16] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:36:24] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:36:39] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:36:46] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:37:04] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:37:11] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:37:26] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:37:34] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:37:49] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:37:57] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:38:13] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:38:19] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[19:38:20] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:38:21] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:38:35] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:38:43] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:38:57] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:39:01] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:39:05] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:39:17] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[19:39:18] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:39:26] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:39:38] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[19:39:38] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[19:39:41] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:39:49] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:40:03] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:40:11] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:40:27] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:40:35] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:40:49] *** Joins: lavaman (~lavaman@98.38.249.169)
[19:40:56] *** Quits: lavaman (~lavaman@98.38.249.169) (Remote host closed the connection)
[19:41:41] *** Quits: thevishy (~Nishant@2405:201:f005:c007:742b:aca7:e311:68b4) (Quit: Leaving)
[19:42:29] *** Quits: mbuf (~Shakthi@122.173.240.119) (Quit: Leaving)
[19:42:51] *** Quits: lortabac (~lortabac@2a01:e0a:541:b8f0:a93b:29e3:e4c0:d09f) (Quit: WeeChat 2.8)
[19:45:11] *** Joins: shailangsa (~shailangs@host217-39-45-199.range217-39.btcentralplus.com)
[19:46:22] *** Quits: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net) (Ping timeout: 250 seconds)
[19:48:08] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[19:48:08] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[19:48:08] *** Joins: wroathe (~wroathe@user/wroathe)
[19:59:29] <reactormonk[m]> What's the type/name of overM, which is kinda like over, except it also uses a monad?
[20:00:27] *** Quits: boxscape_ (~boxscape_@p4ff0b60b.dip0.t-ipconnect.de) (Quit: Connection closed)
[20:00:37] *** Quits: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[20:01:11] <c_wraith> it has a bunch of names.  mapMOf, (%%~), id, etc
[20:02:54] *** Joins: wombat875 (~wombat875@pool-72-89-24-154.nycmny.fios.verizon.net)
[20:02:54] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[20:03:34] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[20:03:53] *** Quits: nschoe (~quassel@2a01:e0a:8e:a190:aeb5:bcf:993b:2d87) (Ping timeout: 250 seconds)
[20:04:24] *** Joins: nschoe (~quassel@91-162-58-134.subs.proxad.net)
[20:04:53] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[20:06:01] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:06:27] *** Joins: Guest76 (~Guest76@93.159.185.196)
[20:07:35] *** Quits: Kaipi (~Kaiepi@156.34.47.253) (Remote host closed the connection)
[20:08:00] *** Joins: Kaipi (~Kaiepi@156.34.47.253)
[20:08:28] *** Joins: acidsys (~LSD@2a03:4000:55:d20::3)
[20:09:58] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:ad86:5044:3d0e:26e7)
[20:09:58] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[20:11:00] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[20:12:12] *** Joins: wroathe (~wroathe@user/wroathe)
[20:12:12] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[20:12:21] *** Quits: jao (~jao@68.235.43.173) (Ping timeout: 250 seconds)
[20:12:24] *** Joins: _ht (~quassel@231-169-21-31.ftth.glasoperator.nl)
[20:13:28] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[20:15:08] *** Joins: c209e6dc-4d76-47 (~aditya@2601:249:4300:1296:195:dac6:592c:a55a)
[20:16:28] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[20:18:40] *** Joins: bontaq (~user@ool-45779fe5.dyn.optonline.net)
[20:21:44] *** Quits: ubert1 (~Thunderbi@p200300ecdf099410dad98e969e0c4f9b.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:21:44] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[20:22:42] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[20:24:18] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Quit: WeeChat 3.4)
[20:25:02] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 260 seconds)
[20:25:39] *** Joins: raehik (~raehik@cpc95906-rdng25-2-0-cust156.15-3.cable.virginm.net)
[20:25:59] *** Quits: Guest76 (~Guest76@93.159.185.196) (Quit: Client closed)
[20:27:53] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 256 seconds)
[20:29:12] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[20:30:40] *** Quits: c209e6dc-4d76-47 (~aditya@2601:249:4300:1296:195:dac6:592c:a55a) (Quit: Konversation terminated!)
[20:32:00] *** Joins: slac90668 (~slack1256@181.42.42.218)
[20:33:46] *** Joins: Topsi (~Tobias@dyndsl-095-033-024-254.ewe-ip-backbone.de)
[20:34:13] *** Quits: slack1256 (~slack1256@191.126.99.204) (Ping timeout: 250 seconds)
[20:34:33] *** Joins: lbseale (~ep1ctetus@user/ep1ctetus)
[20:37:56] *** Quits: ubert (~Thunderbi@p200300ecdf0994102c357846a3b3453e.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[20:38:11] *** Joins: ubert (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de)
[20:39:20] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:ad86:5044:3d0e:26e7) (Remote host closed the connection)
[20:40:14] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net)
[20:41:40] *** Joins: slack1256 (~slack1256@191.126.99.65)
[20:42:51] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[20:42:51] *** Joins: lavaman (~lavaman@98.38.249.169)
[20:43:11] *** Joins: shapr` (~user@pool-173-73-44-186.washdc.fios.verizon.net)
[20:43:45] *** Quits: slac90668 (~slack1256@181.42.42.218) (Ping timeout: 250 seconds)
[20:44:53] *** Quits: shapr (~user@pool-173-73-44-186.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[20:46:14] *** Quits: cosimone (~user@93-47-230-95.ip115.fastwebnet.it) (Remote host closed the connection)
[20:47:00] *** Quits: nschoe (~quassel@91-162-58-134.subs.proxad.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[20:47:57] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Remote host closed the connection)
[20:48:13] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[20:48:17] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 256 seconds)
[20:48:45] *** Quits: dajoer (~david@user/gvx) (Quit: leaving)
[20:51:34] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[20:54:34] *** Joins: gaff (~gaff@49.207.227.85)
[20:55:36] <gaff> there is a `guard` function you can use inside a do block ... i have used it before but now can not find it.  where is this function defined?
[20:55:53] *** Quits: cfricke (~cfricke@user/cfricke) (Ping timeout: 256 seconds)
[20:56:14] <ski> @index guard
[20:56:14] <lambdabot> Control.Monad
[20:56:25] <gaff> any link etc would be nice
[20:56:29] <gaff> ah
[20:56:32] <gaff> thanks
[20:58:53] *** Joins: slowtype- (~slowtyper@79.103.56.56.dsl.dyn.forthnet.gr)
[20:59:06] *** Joins: k8yun (~k8yun@user/k8yun)
[20:59:47] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 250 seconds)
[21:01:15] *** Quits: gaff (~gaff@49.207.227.85) ()
[21:01:20] *** Quits: mstksg (~jle`@cpe-23-240-75-236.socal.res.rr.com) (Ping timeout: 250 seconds)
[21:02:07] *** Quits: vpan (~0@212.117.1.172) (Quit: Leaving.)
[21:03:23] *** Joins: mstksg (~jle`@cpe-23-240-75-236.socal.res.rr.com)
[21:05:15] *** Joins: Hildegunst (~luc@80.248.12.109.rev.sfr.net)
[21:05:27] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:95db:50d7:7eec:328d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:06:40] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:95db:50d7:7eec:328d)
[21:07:42] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[21:07:45] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:ad86:5044:3d0e:26e7)
[21:07:47] *** Quits: slowtype- (~slowtyper@79.103.56.56.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[21:08:18] *** Quits: Topsi (~Tobias@dyndsl-095-033-024-254.ewe-ip-backbone.de) (Read error: Connection reset by peer)
[21:10:00] *** Quits: xff0x (~xff0x@2001:1a81:5217:8700:66e9:b7e:a0f4:b397) (Ping timeout: 250 seconds)
[21:11:05] *** Joins: xff0x (~xff0x@2001:1a81:5217:8700:5c4c:6e43:a062:eba7)
[21:18:48] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[21:20:20] *** Joins: stilgart (~Christoph@chezlefab.net)
[21:23:31] *** Quits: DNH (~DNH@2a02:8108:1100:16d8:95db:50d7:7eec:328d) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:23:54] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 256 seconds)
[21:25:21] *** Joins: zebrag (~chris@user/zebrag)
[21:25:49] *** Joins: DNH (~DNH@2a02:8108:1100:16d8:95db:50d7:7eec:328d)
[21:27:53] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 252 seconds)
[21:28:03] *** Joins: slowtype- (~slowtyper@79.103.227.82.dsl.dyn.forthnet.gr)
[21:28:45] *** Quits: kayvank (~user@52-119-115-185.PUBLIC.monkeybrains.net) (Ping timeout: 256 seconds)
[21:34:12] *** Joins: yauhsien_ (~yauhsien@61-231-32-103.dynamic-ip.hinet.net)
[21:34:15] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[21:34:27] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[21:38:38] *** Quits: yauhsien_ (~yauhsien@61-231-32-103.dynamic-ip.hinet.net) (Ping timeout: 256 seconds)
[21:41:13] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[21:42:10] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[21:42:38] *** Joins: lavaman (~lavaman@98.38.249.169)
[21:44:57] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 240 seconds)
[21:47:01] *** Quits: lavaman (~lavaman@98.38.249.169) (Ping timeout: 250 seconds)
[21:49:07] *** Joins: k8yun (~k8yun@user/k8yun)
[21:50:46] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 245 seconds)
[21:51:03] *** Joins: k8yun_ (~k8yun@user/k8yun)
[21:51:15] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[21:51:22] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[21:53:37] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[21:54:06] *** Joins: Drew[m] (~drewefenw@2001:470:69fc:105::c8c4)
[21:54:33] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[21:54:49] *** Quits: k8yun (~k8yun@user/k8yun) (Ping timeout: 250 seconds)
[21:56:26] *** Quits: k8yun_ (~k8yun@user/k8yun) (Quit: Leaving)
[21:59:52] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:59:52] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[21:59:52] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:59:52] *** Joins: wroathe (~wroathe@user/wroathe)
[22:00:02] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[22:00:50] *** Quits: gehmehgeh (~user@user/gehmehgeh) (Remote host closed the connection)
[22:01:34] *** Joins: gehmehgeh (~user@user/gehmehgeh)
[22:03:28] *** Quits: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi) (Read error: Connection reset by peer)
[22:03:35] *** Joins: Vajb (~Vajb@hag-jnsbng11-58c3a8-176.dhcp.inet.fi)
[22:05:08] *** Joins: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl)
[22:05:52] *** Joins: AlexisTP (~AlexisTP@92.57.44.63)
[22:07:56] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[22:08:53] *** hgolden_ is now known as hgolden
[22:10:30] *** Joins: OscarZ (~oscarz@95.175.104.142)
[22:12:36] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[22:12:36] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[22:12:48] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[22:13:59] *** Joins: cfricke (~cfricke@user/cfricke)
[22:15:00] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[22:15:36] *** Quits: MasseR4 (~MasseR@51.15.143.128) (Quit: Ping timeout (120 seconds))
[22:15:49] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[22:16:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[22:16:49] *** Joins: gawen_ (~gawen@user/gawen)
[22:18:13] *** Joins: MasseR4 (~MasseR@51.15.143.128)
[22:19:45] *** Quits: gawen (~gawen@user/gawen) (Ping timeout: 256 seconds)
[22:23:48] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[22:24:45] *** Quits: AlexisTP (~AlexisTP@92.57.44.63) (Quit: Leaving)
[22:25:52] *** Joins: AlexisTP (~AlexisTP@92.57.44.63)
[22:27:46] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[22:28:51] *** Quits: eggplantade (~Eggplanta@2600:1700:bef1:5e10:ad86:5044:3d0e:26e7) (Remote host closed the connection)
[22:31:09] *** Joins: vicfred (~vicfred@user/vicfred)
[22:32:30] *** Joins: notzmv (~zmv@user/notzmv)
[22:32:51] *** Quits: califax (~califax@user/califx) (Ping timeout: 276 seconds)
[22:33:41] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 256 seconds)
[22:34:19] *** shapr` is now known as shapr
[22:34:40] *** Joins: califax (~califax@user/califx)
[22:35:20] <shapr> Is there some way to ask hoogle for all indexed instances of a typeclass? I want to stuff a value into postgres so I want "all instances of To{Row,Field}" 
[22:35:21] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[22:35:27] *** Joins: eggplantade (~Eggplanta@2600:1700:bef1:5e10:ad86:5044:3d0e:26e7)
[22:36:22] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
[22:38:14] *** Joins: k8yun (~k8yun@user/k8yun)
[22:38:57] *** Quits: merijn (~merijn@c-001-001-027.client.esciencecenter.eduvpn.nl) (Ping timeout: 240 seconds)
[22:39:17] *** Joins: machinedgod (~machinedg@24.105.81.50)
[22:40:58] *** Quits: slowtype- (~slowtyper@79.103.227.82.dsl.dyn.forthnet.gr) (Ping timeout: 256 seconds)
[22:41:26] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[22:45:21] *** Quits: deadmarshal (~deadmarsh@95.38.117.65) (Ping timeout: 245 seconds)
[22:47:12] *** Joins: slowtype- (~slowtyper@2a02:214c:8635:c300:db7f:8a50:4683:57fa)
[22:47:26] *** Quits: jollygood2 (~bc8147f2@cerf.good1.com) (Quit: CGI:IRC (Session timeout))
[22:47:57] *** Quits: slowtyper (~slowtyper@user/slowtyper) (Ping timeout: 240 seconds)
[22:51:08] <monochrom> I don't know hoogle. But in ghci or cabal repl, :info! ToRow can help.
[22:51:15] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[22:51:27] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[22:54:30] *** Quits: arkeet (~arkeet@moriya.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[22:54:47] *** Joins: arkeet (arkeet@moriya.ca)
[22:55:46] *** Quits: burnsidesLlama (~burnsides@dhcp168-030.wadham.ox.ac.uk) (Remote host closed the connection)
[22:57:05] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[22:57:05] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[22:57:14] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[22:58:17] *** Quits: AlexisTP (~AlexisTP@92.57.44.63) (Ping timeout: 256 seconds)
[23:00:14] *** Quits: haskl (~haskl@user/haskl) (Ping timeout: 256 seconds)
[23:00:41] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8) (Ping timeout: 250 seconds)
[23:01:20] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:9ab:4940:4574:a1f8)
[23:03:04] *** Joins: haskl (~haskl@user/haskl)
[23:04:41] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Read error: Connection reset by peer)
[23:05:37] <Sqaure> So i've created this Tree like, but a fair bit more complex (3 separate types to model different parent-child relations), data type and now i realize i want it to have insert/update/delete. What would be good way to add this functionality to it? Manual hammering or implement Monad / Applicative and use some standard procedure? 
[23:06:37] *** Quits: mstksg (~jle`@cpe-23-240-75-236.socal.res.rr.com) (Ping timeout: 240 seconds)
[23:07:39] *** Joins: cosimone (~user@93-47-230-95.ip115.fastwebnet.it)
[23:07:39] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[23:07:54] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 260 seconds)
[23:07:55] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[23:08:44] *** Joins: mstksg (~jle`@cpe-23-240-75-236.socal.res.rr.com)
[23:09:29] <ski> i don't see how `Monad' or `Applicative' would give you insertion, update, or deletion
[23:09:55] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:10:15] <ski> (`Monad' could give you substitution. `Applicative' would give you "cartesian product")
[23:10:30] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[23:10:37] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[23:11:20] <Sqaure> oh, I found som SO answer and a quick skim made me believe they relied on that. Might have been wrong there.
[23:13:00] <EvanR> for updating subparts of the tree you could use lenses / functional references
[23:14:16] *** Joins: dcoutts (~duncan@host213-122-143-132.range213-122.btcentralplus.com)
[23:14:27] <EvanR> or just write a few recursive routines yourself
[23:14:36] <EvanR> esp if it's for practice
[23:15:22] *** Quits: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net) (Ping timeout: 260 seconds)
[23:17:11] *** Joins: werneta (~werneta@70-142-214-115.lightspeed.irvnca.sbcglobal.net)
[23:19:15] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[23:21:04] *** Joins: kayvank (~user@52-119-115-185.PUBLIC.monkeybrains.net)
[23:24:46] *** Quits: slack1256 (~slack1256@191.126.99.65) (Remote host closed the connection)
[23:25:38] <Sqaure> EvanR, thanks. Its not for practice, it should be "optimal choice" if there is such =D. 
[23:27:41] *** Joins: cynomys (~cynomys@user/cynomys)
[23:28:34] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[23:28:49] *** Joins: cheater (~Username@user/cheater)
[23:29:27] *** Joins: burnsidesLlama (~burnsides@dhcp168-030.wadham.ox.ac.uk)
[23:29:54] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[23:31:08] *** Joins: little_mac (~little_ma@2601:410:4300:3ce0:9142:26a8:3892:1b3a)
[23:31:08] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[23:31:19] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[23:32:05] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[23:34:14] *** Quits: burnsidesLlama (~burnsides@dhcp168-030.wadham.ox.ac.uk) (Ping timeout: 256 seconds)
[23:34:14] *** Joins: Akiva (~Akiva@user/Akiva)
[23:34:27] *** Joins: neurocyte0917090 (~neurocyte@IP-045010063119.dynamic.medianet-world.de)
[23:34:27] *** Quits: neurocyte0917090 (~neurocyte@IP-045010063119.dynamic.medianet-world.de) (Changing host)
[23:34:27] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[23:35:35] *** Joins: deadmarshal (~deadmarsh@95.38.117.65)
[23:37:13] *** Joins: ralu (~ralu@static.211.245.203.116.clients.your-server.de)
[23:37:44] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[23:37:49] *** Joins: juhp (~juhp@128.106.188.82)
[23:37:59] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
[23:39:51] *** Quits: cfricke (~cfricke@user/cfricke) (Quit: WeeChat 3.3)
[23:40:13] *** Quits: deadmarshal (~deadmarsh@95.38.117.65) (Ping timeout: 256 seconds)
[23:42:31] <hololeap> I think I screwed up my environment, and I'm just wondering what I can do to try to debug it: http://sprunge.us/d82nVV
[23:46:15] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[23:48:09] *** Quits: gentauro (~gentauro@user/gentauro) (Ping timeout: 256 seconds)
[23:49:28] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[23:50:20] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[23:51:28] <Cale> hololeap: does ghc-pkg check tell you anything?
[23:51:38] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[23:53:39] <hololeap> yeah, there are a ton of broken packages. I just haven't seen ghc panic before, but fixing the breakages will likely help?
[23:56:37] *** Joins: slowtyper (~slowtyper@user/slowtyper)
[23:56:37] *** Quits: vglfr (~vglfr@coupling.penchant.volia.net) (Read error: Connection reset by peer)
[23:56:53] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[23:56:57] *** Quits: slowtype- (~slowtyper@2a02:214c:8635:c300:db7f:8a50:4683:57fa) (Ping timeout: 240 seconds)
[23:57:29] *** Joins: vglfr (~vglfr@coupling.penchant.volia.net)
