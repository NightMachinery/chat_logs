[00:00:15] <Payam> When I remove the `super()...` in line 55 then I get an other warning saying that the class is not initilized
[00:01:25] *** Quits: besnn (~besnn@user/besnn) (Remote host closed the connection)
[00:01:45] *** Joins: besnn (~besnn@user/besnn)
[00:02:10] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 240 seconds)
[00:02:43] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[00:03:01] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Quit: Leaving)
[00:03:22] <pragmaticenigma> I'm wondering if show_all() is the correct method to be called, Payam
[00:03:37] <Payam> https://python-gtk-3-tutorial.readthedocs.io/en/latest/dialogs.html
[00:05:52] <akk> pragmaticenigma: I usually call show_all() on dialogs, but I don't think it's the only way to do things.
[00:06:34] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[00:07:11] <Payam> When I remove line 55 then the additional window disappears and my dialog is showing. but then I get this: RuntimeError: object at 0x7f05ace73ab0 of type SettingDialog is not initialized
[00:07:34] <aphysically> :( so I guess I do have to use a union until 3.10 at least https://bpa.st/6JIQ
[00:07:44] *** Joins: emika7 (~emika@212.102.45.115)
[00:08:03] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[00:08:13] *** Quits: emika (~emika@185.207.249.162) (Ping timeout: 252 seconds)
[00:08:13] *** emika7 is now known as emika
[00:08:18] <bjs> aphysically: that's a __future__ thing again,  add your __future__ import and then it'll work
[00:08:36] <bjs> assuming you have a new enough typechecker that understands |
[00:10:00] *** Quits: riposte (~finalripo@2403-5800-3200-5c02--310.ip6.aussiebb.net) (Quit: Quitting)
[00:10:16] *** Quits: Novi (~novi@user/novi) (Read error: Connection reset by peer)
[00:11:02] *** Joins: VimVim (~VimVim@85.191.61.113)
[00:11:18] <akk> Payam: Maybe that super()... duplicates something the builder does? I've never used Gtk.Builder so I don't know how those are initialized.
[00:11:40] *** Quits: gusto (~Augustus@109.255.100.54) (Ping timeout: 240 seconds)
[00:11:52] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:12:05] *** Quits: axisys (~axisys@ec2-34-225-151-46.compute-1.amazonaws.com) (Remote host closed the connection)
[00:12:08] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[00:12:12] <pragmaticenigma> that's kind of my theory, something happening in the parent __init__, is generating another window in the stack
[00:12:24] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[00:12:27] *** Quits: VimVim (~VimVim@85.191.61.113) (Client Quit)
[00:12:44] <aphysically> bjs: you mean for my editor? I'm just using CPython for the implementation if that's what you mean
[00:12:48] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[00:13:08] *** Quits: mattil (~mattil@87-92-153-0.rev.dnainternet.fi) (Quit: Leaving)
[00:13:10] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[00:13:10] *** Joins: Jefren3 (~Jefren@208.104.190.49)
[00:13:24] <bjs> aphysically: CPython ignores the annotations anyway,  but the error you get is because it's evaluating the `str | int | float` expression
[00:14:32] *** Lord_of_Life_ is now known as Lord_of_Life
[00:15:18] <aphysically> my editor is vim w/YCM (jedi-based), but I don't have stove like hover and such enabled so it'll only show if it's whatever I keybound it to
[00:15:27] <aphysically> I mostly use it for stuff like enabling jumping to definitions and such
[00:15:46] <aphysically> stove? stuff
[00:15:55] *** Quits: Nalt (~Nalt|||@cpe-24-243-123-79.rgv.res.rr.com) (Ping timeout: 252 seconds)
[00:17:34] *** Joins: jetchisel (jetchisel@user/jetchisel)
[00:18:40] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (Remote host closed the connection)
[00:20:06] *** Joins: cation (cation@user/cation)
[00:20:12] *** Joins: Wayno (~James@user/wayno)
[00:20:43] <aphysically> wow the way bpa.st italicizes the verbose regex is kinda ugly https://bpa.st/UG7A
[00:20:49] <aphysically> I assume it's doing that because of docstrings
[00:22:00] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[00:22:31] *** Quits: Jefren3 (~Jefren@208.104.190.49) (Ping timeout: 252 seconds)
[00:22:40] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 240 seconds)
[00:24:16] *** Quits: python (~python@user/demon) (Ping timeout: 250 seconds)
[00:24:32] *** Joins: Jefren3 (~Jefren@70.35.66.185)
[00:24:47] <bjs> aphysically: I think it's pygments that doesn't try understand the difference between docstrings and other strings
[00:25:04] <bjs> but maybe it could be special cased idk (cc supakeen)
[00:25:58] <supakeen> it's hard to special case but i agree that the theme could use some love.
[00:26:13] <bjs> supakeen: how do you feel about writing your very own pygments lexer :D
[00:26:14] <supakeen> just 'not-italic' would be good
[00:26:18] <supakeen> grrr
[00:26:33] <supakeen> anyways, it marks all strings the same
[00:27:23] <supakeen> https://github.com/supakeen/pinnwand/issues/118
[00:27:26] <supakeen> there we go, so i don't forget
[00:27:44] *** Quits: gambl0re (~gambl0re@104.247.245.205) (Ping timeout: 250 seconds)
[00:28:37] *** Quits: Wayno (~James@user/wayno) (Quit: Leaving.)
[00:28:45] <AhmedAmerican> is there anyone familiar with Scrapy available to discuss few things ?
[00:29:07] *** Quits: Jefren3 (~Jefren@70.35.66.185) (Ping timeout: 252 seconds)
[00:29:42] <pragmaticenigma> AhmedAmerican, it's best to ask your question here, if someone knows something about your question, they'll respond in chat so everyone can benefit
[00:29:57] <AhmedAmerican> pragmaticenigma: alright
[00:30:19] <AhmedAmerican> Basically, I'm trying to tell my spider to keep try failed requests till it's success.
[00:30:52] *** Joins: Jefren3 (~Jefren@70.35.66.49)
[00:31:39] *** Joins: fikran (~fikran@user/fikran)
[00:32:08] <pragmaticenigma> that doesn't sound like a good idea, at best your an annoyance to the site owner, at worst, you will likely see yourself banned from accessing that resource
[00:32:17] <pragmaticenigma> the later is more likely
[00:32:24] <aphysically> okay another style question with that same code sample: should I include the failed input in a valueerror? Should the exception be a complete sentence? https://bpa.st/XRBQ
[00:33:24] <aphysically> I've been unsure when I raise exceptions if I should also be printing out the values
[00:33:39] *** Joins: python (~python@user/demon)
[00:33:48] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 250 seconds)
[00:35:10] *** Joins: VimVim (~VimVim@85.191.61.113)
[00:35:58] *** Joins: nomic (~nomic@185.192.69.192)
[00:36:36] <bjs> aphysically: it's up to you, typically it's a good idea to put the value in if it would help the programmer understand (and if you don't expect it to be caught later on)
[00:36:54] *** Quits: CalimeroTeknik (~calimero@user/calimeroteknik) (Quit: バイバイ)
[00:37:07] <bjs> aphysically: e.g. `[1,2,3].pop(4)` will fail with a boring "ValueError: pop index out of range"  but it doesn't say which index.
[00:37:34] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[00:37:35] <bjs> aphysically: you shouldn't print values out (outside of the exception message I mean) because people can try/except and catch those errors
[00:37:53] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 268 seconds)
[00:38:18] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[00:38:32] *** Joins: brabrax (~brabrax@user/brabrax)
[00:39:03] *** Joins: securethemews_ (~securethe@2a00:23c4:1e9b:7b00::1)
[00:39:06] <pragmaticenigma> I usually try not to print the values that caused the exception. It can break tools designed to record exceptions. Also, depending on the nature of the object, could accidentally display confidential information like a password, api key, or similar
[00:39:33] *** Joins: Henistein (~Henistein@2001:8a0:c1b3:6b01:d137:e994:8237:655b)
[00:40:11] *** Joins: cthulchu (~Cthulchu@46.211.33.198)
[00:40:21] *** Quits: cthulchu (~Cthulchu@46.211.33.198) (Read error: Connection reset by peer)
[00:40:39] *** Joins: cthulchu (~Cthulchu@46.211.33.198)
[00:41:39] <aphysically> I was actually *just* looking at the logging thing for logging in general
[00:41:49] *** Joins: magga (magga@ti0036a400-1042.bb.online.no)
[00:42:10] *** Joins: Celeo (~Celeo@user/celeo)
[00:43:20] <pragmaticenigma> logging is a good idea
[00:44:34] *** Quits: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[00:44:43] <aphysically> right now I was just checking verbosity level and printing to console so I'm trying to read about the logger
[00:45:02] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[00:45:24] *** Joins: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net)
[00:45:27] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[00:46:20] <pragmaticenigma> I have my logger setup to log to a file objects, and setup one to be a on disk, the other outputs to the command line
[00:46:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[00:47:16] *** Quits: Jefren3 (~Jefren@70.35.66.49) (Ping timeout: 252 seconds)
[00:49:23] *** Joins: Jefren3 (~Jefren@70.35.66.126)
[00:49:34] *** Quits: kostkon (~kostkon@2a02:587:a110:6f20:b1f0:6beb:6b69:cf32) (Quit: Leaving)
[00:52:45] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:53:21] *** Joins: Novi (~novi@user/novi)
[00:53:24] *** Parts: Novi (~novi@user/novi) (Thanks!)
[00:55:10] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 268 seconds)
[00:55:43] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[00:55:49] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[00:56:23] *** Quits: nomic (~nomic@185.192.69.192) (Quit: Leaving)
[00:57:00] *** Quits: Payam (~Payam@c83-250-236-236.bredband.tele2.se) (Ping timeout: 268 seconds)
[00:57:01] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[00:58:52] *** Joins: Jefren4 (~Jefren@208.104.190.62)
[00:58:54] *** Joins: p4rpc (~przemek@89-69-17-47.dynamic.chello.pl)
[01:00:14] *** Joins: csevast (~csevast@apu40.neoplus.adsl.tpnet.pl)
[01:01:12] <aphysically> if log level is set higher than the command I'm trying to log, it's really cheap to run the logging command?
[01:01:16] *** Quits: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215) (Quit: Leaving)
[01:01:36] <aphysically> i.e. I won't fill up some huge file or memory by putting a lot of stuff at INFO level or something but using my program above that level?
[01:01:54] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[01:02:01] *** Quits: Jefren3 (~Jefren@70.35.66.126) (Ping timeout: 248 seconds)
[01:03:02] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[01:03:21] <pragmaticenigma> imo: if you're worried about that, you're in the wrong programming language
[01:03:46] *** Quits: Jefren4 (~Jefren@208.104.190.62) (Ping timeout: 252 seconds)
[01:04:51] *** Joins: V1mV1m (~VimVim@85.191.9.175)
[01:05:52] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[01:06:02] *** Joins: Jefren4 (~Jefren@70.35.67.74)
[01:06:24] <pragmaticenigma> every call to the logger is going to at minimum run a compare for the level, ideally, if it's not a match, the logging message is discarded and the method returns back to the caller
[01:07:41] <pragmaticenigma> unless you write your own logging module, you have to trust the author of the one you are using to make their code efficient
[01:08:06] *** Quits: VimVim (~VimVim@85.191.61.113) (Ping timeout: 268 seconds)
[01:10:06] *** Joins: Voxel (~Voxel@ip178-67-155-188.onego.ru)
[01:13:42] *** Joins: kostkon (~kostkon@2a02:587:a110:6f20:b1f0:6beb:6b69:cf32)
[01:15:57] *** Joins: ice9 (~ice9@user/ice9)
[01:16:25] *** Quits: Jefren4 (~Jefren@70.35.67.74) (Ping timeout: 252 seconds)
[01:18:30] *** Joins: Jefren4 (~Jefren@70.35.66.181)
[01:19:03] <Henistein> I made this CNN model: https://bpa.st/MPMQ
[01:19:04] <Henistein> Why it just learns if X_train is between [0, 255] and not [0, 1] ?
[01:19:29] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[01:21:02] *** Quits: leighbb (~leighbb@user/leighbb) (Quit: Leaving)
[01:21:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[01:26:21] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[01:27:18] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (Remote host closed the connection)
[01:28:40] *** Quits: pro (~pro@user/pro) (Ping timeout: 240 seconds)
[01:29:11] *** Joins: gusto (~Augustus@109.255.100.54)
[01:30:48] *** Joins: Macuser (~Macuser@216.30.159.201)
[01:31:18] <aphysically> is it okay to use my logger as a global?
[01:31:26] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[01:34:40] *** Quits: manin (~x@185.242.190.95) (Ping timeout: 240 seconds)
[01:34:43] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[01:35:25] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[01:36:27] *** Quits: csevast (~csevast@apu40.neoplus.adsl.tpnet.pl) (Quit: IRC for eric IDE)
[01:36:36] *** Quits: fuz (~fuz@user/fuz) (Ping timeout: 276 seconds)
[01:36:46] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 252 seconds)
[01:37:04] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 250 seconds)
[01:37:08] *** Joins: cheater (~Username@user/cheater)
[01:38:40] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[01:39:16] <bjs> aphysically: loggers are usually a global in the module
[01:39:24] *** Joins: damonlynch (~ngaio@2601:245:c700:2c06:8181:47af:d3b4:a2c0)
[01:39:24] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[01:40:57] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:40:58] *** Quits: rememberYou (~someone@user/rememberyou) (Remote host closed the connection)
[01:41:23] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[01:41:50] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[01:42:16] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e) (Ping timeout: 258 seconds)
[01:43:56] <aphysically> okay cool
[01:45:01] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[01:45:24] *** Quits: paulman (~kulernil@gateway/tor-sasl/kuler) (Ping timeout: 244 seconds)
[01:46:40] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 252 seconds)
[01:50:11] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e)
[01:52:14] *** Quits: goldfish_ (~goldfish@user/goldfish) (Ping timeout: 250 seconds)
[01:52:30] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 268 seconds)
[01:54:40] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e) (Ping timeout: 240 seconds)
[01:58:11] <pragmaticenigma> I think of the included python logger module as being like a singleton
[02:00:14] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:2489:d8ec:6e6c:e38b) (Quit: Textual IRC Client: www.textualapp.com)
[02:01:22] *** Joins: carl- (~carl-@185.103.188.130)
[02:01:37] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:03:43] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 252 seconds)
[02:05:19] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e)
[02:09:40] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e) (Ping timeout: 240 seconds)
[02:10:12] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[02:11:52] *** cache is now known as cacheyourdreams
[02:12:27] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.1)
[02:13:50] *** Joins: cthulchu_ (~Cthulchu@94.153.87.125)
[02:15:32] *** Joins: darksun (~darksun@user/darksun)
[02:16:22] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Ping timeout: 252 seconds)
[02:16:55] *** Quits: cthulchu (~Cthulchu@46.211.33.198) (Ping timeout: 252 seconds)
[02:20:34] *** Joins: xx (~xx@user/xx)
[02:20:46] <xx> is there a tool that would tell me if a file is python2 or python3 code?
[02:23:35] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[02:24:20] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[02:24:30] <pragmaticenigma> xx, not really
[02:24:58] <dodo> xx: ast.. though some code can be both
[02:28:31] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-7dbd-69ed-c482-bcce.res6.spectrum.com)
[02:29:42] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[02:31:20] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 258 seconds)
[02:37:03] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[02:38:10] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[02:38:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[02:39:38] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e)
[02:39:46] *** Quits: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[02:40:35] *** Joins: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net)
[02:41:04] *** Joins: fikran (~fikran@user/fikran)
[02:41:11] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[02:42:29] *** Joins: Hackerpcs (~user@user/hackerpcs)
[02:42:41] *** Quits: Akuli (~Akuli@82-203-162-147.bb.dnainternet.fi) (Quit: Leaving)
[02:42:50] *** Quits: Pandadub (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Ping timeout: 258 seconds)
[02:45:37] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[02:46:50] *** Quits: rany (~rany@user/rany) (Ping timeout: 250 seconds)
[02:47:10] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e) (Ping timeout: 240 seconds)
[02:47:59] *** Joins: fuz (~fuz@user/fuz)
[02:48:29] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[02:48:57] *** Joins: i0e (~is0ke3@user/is0ke3)
[02:53:55] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e)
[02:54:24] *** Quits: akk (~akk@174-28-98-206.albq.qwest.net) (Quit: +++)
[02:58:12] *** Quits: kenoba (~kenoba@user/kenoba) (Read error: Connection reset by peer)
[02:58:25] *** Joins: gitly (~gitly@148.252.128.183)
[02:58:40] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e) (Ping timeout: 240 seconds)
[02:58:41] *** Joins: kenoba (~kenoba@user/kenoba)
[02:58:53] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:d099:ff1b:cb18:435e)
[03:00:07] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[03:00:19] <sniperwolf> hello, anyone here uses testcontainers-python
[03:00:51] *** Joins: nomic (~nomic@185.192.69.192)
[03:01:26] <sniperwolf> i made local docker image that contains postgres db with lot of test data. Then  iuse python script with testcontainers library to pull image, and then i do "select * from table" but its relation does not exists even tho this relation exists in db i have inside my container
[03:02:05] <sniperwolf> maybe it pulls empty postgres:9.6 image from web, ignoring my local image?
[03:03:13] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[03:03:44] *** Quits: Caesar-EW (~Caesar-EW@84.213.107.109) (Ping timeout: 250 seconds)
[03:03:55] *** Joins: JuicyJ (~textual@2600:381:1c31:4a08:c8c6:79b5:d0b5:b135)
[03:04:08] *** Joins: driib9 (~driib@185.195.233.163)
[03:04:17] <JuicyJ> Anybody here develop w/ PyCharm?
[03:04:32] *** Joins: rany (~rany@user/rany)
[03:04:45] <lxer> just ask your question
[03:04:52] <JuicyJ> lulz
[03:05:19] *** Quits: Macuser (~Macuser@216.30.159.201) (Ping timeout: 252 seconds)
[03:05:35] *** Quits: rany (~rany@user/rany) (Remote host closed the connection)
[03:06:25] *** Quits: driib (~driib@185.195.233.169) (Ping timeout: 252 seconds)
[03:06:25] *** driib9 is now known as driib
[03:06:28] <JuicyJ> I'm using Kivy for a multitouch application and my code renders/scales as expected when launch the .py from the shell but the graphics are scaled 50% when launched through the IDE. It's super bizarre.
[03:08:03] *** Joins: rany (~rany@user/rany)
[03:08:39] *** Joins: okamis (~okamis@81-235-235-237-no92.tbcn.telia.com)
[03:08:44] *** Quits: okamis (~okamis@81-235-235-237-no92.tbcn.telia.com) (Client Quit)
[03:09:36] *** Joins: derelict (~derelict@user/derelict)
[03:11:06] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 250 seconds)
[03:11:55] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 252 seconds)
[03:12:54] *** Quits: rany (~rany@user/rany) (Client Quit)
[03:13:20] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[03:14:33] <pragmaticenigma> JuicyJ, check if any HighDPI settings are enabled
[03:14:39] *** Joins: BlessJah_ (~BlessJah@user/blessjah)
[03:14:46] *** Quits: derelict (~derelict@user/derelict) (Quit: WeeChat 3.2)
[03:15:17] *** Joins: rany (~rany@user/rany)
[03:17:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:17:20] *** Quits: BlessJah (~BlessJah@user/blessjah) (Ping timeout: 258 seconds)
[03:17:51] <JuicyJ> noted! I'll have a look. i'm developing this for an RPi touchscreen so definitely want it to run at the res I specify with 100% scaling.
[03:19:33] <pragmaticenigma> JuicyJ, the idea came to me from here: https://intellij-support.jetbrains.com/hc/en-us/community/posts/205818919-Pycharm-Resolution-Problem... It makes sense to me, as anything launched from PyCharm would inherit scaling settings of PyCharm. Where as terminal/command line would not
[03:22:03] *** Joins: JanC_ (~janc@user/janc)
[03:22:13] <JuicyJ> Those are instructions for Windows users and bluriness in the IDE.
[03:22:27] <JuicyJ> I have neither.
[03:22:53] <pragmaticenigma> it's a thread, sometimes following that gets you closer to what might be going on
[03:24:10] *** Quits: JanC (~janc@user/janc) (Ping timeout: 240 seconds)
[03:24:29] <pragmaticenigma> I don't think the issue is Kivy or your installation of Python. I believe something else is causing the behavior, and the set of variables lead me to OS or PyCharm settings related
[03:25:07] *** JanC_ is now known as JanC
[03:26:10] *** Quits: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[03:27:27] <TML> sniperwolf: https://github.com/testcontainers/testcontainers-python/blob/master/testcontainers/postgres.py - def __init__(self, image="postgres:latest",
[03:27:43] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e)
[03:27:49] <TML> sniperwolf: seems pretty clear to me that it generates a new container off the image 'postgres:latest'
[03:28:45] <sniperwolf> TML no
[03:28:56] <sniperwolf> i replaces image in constructor with own value
[03:29:23] <sniperwolf> container = PostgresContainer("postgres:myowntag")
[03:29:31] *** Joins: Pandadub (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[03:29:53] <TML> sniperwolf: So you're saying your image has the data populated in it? Because it's going to spin up a new container with that image name, so unless the data is baked into the image, you'll be spinning up a new, blank database.
[03:30:23] <sniperwolf> my local image has test data in it
[03:30:42] <sniperwolf> i mean my local image has postgres database that is already populated
[03:30:45] *** Joins: p-i-_ (~Ohmu@2403:6200:8870:41ad:ddbd:4a28:9a94:dc2)
[03:30:59] <TML> sniperwolf: Is that an *image*, or is that a *container*?
[03:31:09] <sniperwolf> actually maybe i should specify db name in testcontainers code in some way
[03:31:18] <sniperwolf> TML container
[03:31:29] <sniperwolf> i am not sure of differnece though i am newb
[03:31:31] <TML> sniperwolf: Yeah, there's no way in here to say "Use an existing container"
[03:32:00] <TML> sniperwolf: A container is a running instance. An image is a description of how to build containers.
[03:32:12] <sniperwolf> if i do "docker image ls" i see few postgres containers, but only has name "postgres:myowntag"
[03:32:17] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Ping timeout: 258 seconds)
[03:32:37] *** Joins: georgios (~georgios@user/georgios)
[03:32:46] *** Quits: Jefren4 (~Jefren@70.35.66.181) (Ping timeout: 250 seconds)
[03:33:03] *** Quits: JuicyJ (~textual@2600:381:1c31:4a08:c8c6:79b5:d0b5:b135) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:33:05] <TML> sniperwolf: if you make a brand-new container from "postgres:myowntag", will it have your table in it already, or is there some process you're doing to populate the database once the container is running?
[03:33:28] <sniperwolf> i dont want to make brandnew container then
[03:33:34] <sniperwolf> i want to use existsing
[03:33:40] *** Quits: p-i- (~Ohmu@2403:6200:8870:41ad:71bc:4a39:5fd6:3f32) (Ping timeout: 240 seconds)
[03:33:45] <sniperwolf> however logs indicate local container is being used
[03:33:49] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e) (Ping timeout: 258 seconds)
[03:33:52] <TML> sniperwolf: There doesn't appear to be any obvious way to do that with this tool you're using
[03:34:21] <TML> it's going to create a NEW, (presumably BLANK) container off of the image "postgres:myowntag"
[03:34:40] <sniperwolf> TML https://bpa.st/COFA
[03:34:50] *** Joins: Jefren4 (~Jefren@70.35.66.253)
[03:34:56] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 250 seconds)
[03:35:01] <TML> sniperwolf: yes, that's doing exactly what I just said
[03:35:03] <sniperwolf> ok if its different id its probably different container
[03:35:11] <TML> creating a NEW, (presumably BLANK) container off of the image "postgres:myowntag"
[03:35:24] <TML> yes, this is showing you a new container being built
[03:35:41] <sniperwolf> what am i supposed to do? create image out of existing container?
[03:36:45] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:37:36] <TML> Well, I'm not familiar with this toolchain you're using, so I can't really say what you're "supposed to" do here; but, in general, the point of containers ("cattle, not pets") is that I can delete an existing container and deploy a new one and my software just marches along. One way I know people solve that for things that need persistent storage is to use persistent volumes; that is, the actual
[03:37:38] <TML> _data_ doesn't live inside the container, it's just mounted there at container start
[03:37:48] <TML> woof, wrapped by the ircd
[03:38:11] *** Quits: fedenix__ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:38:38] <sniperwolf> ok so i did it all wrong
[03:38:49] <TML> sniperwolf: https://docs.docker.com/storage/volumes/
[03:38:50] *** Quits: cthulchu_ (~Cthulchu@94.153.87.125) (Ping timeout: 250 seconds)
[03:39:00] <sniperwolf> maybe i can generate dockerfille out of container or something
[03:39:10] *** Quits: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy) (Ping timeout: 240 seconds)
[03:39:51] <TML> You probably just need to make a persistent volume and mount it at `/var/lib/postgresql` inside the container
[03:40:36] <TML> that way whenever an instance of the database starts, it starts with all the app data
[03:41:04] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Ping timeout: 252 seconds)
[03:41:34] *** Joins: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy)
[03:41:49] <TML> when it comes to persistent volumes, I prefer to use bind mounts, but YMMV
[03:43:19] *** Quits: nomic (~nomic@185.192.69.192) (Quit: Leaving)
[03:43:37] *** Joins: nomic (~nomic@185.192.69.192)
[03:43:49] <sybariten> hello hello
[03:44:18] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[03:44:39] <sybariten> Although i'm not perfectly sure how i'm planning to use it, is there something inherently problematic with this function structure? I'm writing a little console menu driven thing to analyze some text.  https://bpa.st/C5NQ
[03:44:55] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 252 seconds)
[03:46:27] <sniperwolf> TLS thank you https://docs.docker.com/storage/volumes/ from this i assume you can do it only on docker run, so when creating container? YOu cant add volume to existing one with docker exec?
[03:47:21] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 248 seconds)
[03:47:59] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[03:48:13] *** Quits: Jefren4 (~Jefren@70.35.66.253) (Ping timeout: 252 seconds)
[03:48:41] *** Joins: oriba (~oriba@dynamic-089-014-030-138.89.14.pool.telefonica.de)
[03:48:53] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[03:50:23] *** Joins: Jefren4 (~Jefren@70.35.66.138)
[03:50:25] <sybariten> cause i'm getting some linting warning/error, specifically for the thing i'm returning there
[03:50:30] <sniperwolf> TMS i assume if i create volume, starting container will know only there is dump.sql inside /var/lib/postgresql? But it will need to run this file anyway?
[03:51:24] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[03:52:10] *** Quits: kenoba (~kenoba@user/kenoba) (Ping timeout: 240 seconds)
[03:52:14] <TML> sniperwolf: Are you trying to speak to me?
[03:52:41] <TML> I am neither TLS nor TMS :)
[03:53:11] <TML> sniperwolf: it's possible to mount a volume to a running container, though it's not exactly straight-forward last I checked - https://jpetazzo.github.io/2015/01/13/docker-mount-dynamic-volumes/ might be helpful there.
[03:53:24] *** Joins: kenoba (~kenoba@user/kenoba)
[03:53:35] <TML> sniperwolf: The point is that you shouldn't have a "dump.sql" inside /var/lib/postgresql, but an actual pgsql database
[03:53:45] <TML> and it gets mounted into the container each time the container starts up
[03:53:55] <aphysically> it feels a bit silly to import each typing qualifier individually
[03:54:38] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e)
[03:54:39] <sniperwolf> sorry
[03:55:19] <TML> sybariten: your indentation appears to be off on line 3, and the whole function seems a bit odd, but I don't see anything "problematic" about it
[03:55:42] *** Joins: derelict (~derelict@user/derelict)
[03:55:44] *** Joins: torandu (~sean@94.10.125.197)
[03:56:28] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:57:13] <aphysically> right now I'm just doing "typing.blah" like this: https://bpa.st/RZZA
[03:57:39] <aphysically> this function needs some docstring love but I haven't gotten to the docstring docs for non simple functions yet (soon tm)
[03:57:54] <TML> aphysically: seems fine to me, what's your concern?
[03:58:17] <aphysically> my docstring seems fine?
[03:58:32] <TML> Your use of "typing.blah"
[03:58:50] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Quit: bilb_ono)
[03:59:00] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Read error: Connection reset by peer)
[03:59:06] <aphysically> oh, I mean sure, I just figured it's easier to read if I import the blah directly
[03:59:10] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[03:59:11] <TML> that seemed to be what you were trying to ask about, but maybe I mis-understood the direction of the conversation
[03:59:13] *** Joins: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[03:59:14] <aphysically> which is the only way I've seen it used in other code
[03:59:23] <sybariten> TML: thanks
[03:59:40] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e) (Ping timeout: 240 seconds)
[03:59:55] <TML> sybariten: The function *does* feel a little bit like YAGNI, though
[04:00:16] <sybariten> mhmm
[04:00:19] <sniperwolf> TML i did that and got same error
[04:00:45] <sybariten> I just know that others (in my class) did reader function for the file, in this exercise.... but as for now maybe i should hardcode the file-reading into each functin i make instead
[04:00:48] <TML> sniperwolf: sorry, you did what, exactly?
[04:01:00] <sniperwolf> i mean i commited existing container then i created new container using previous as base and i added volume pointing at /var/lib/postgresql
[04:01:06] <aphysically> I do question the utility of typing.Optional in python >= 3.10, after that it seems like it's going to be a lot clearer to just right e.g. str | None, even if optional portrays the intent
[04:01:17] <aphysically> write*
[04:01:22] <sniperwolf> like here https://stackoverflow.com/questions/28302178/how-can-i-add-a-volume-to-an-existing-docker-container
[04:01:38] <TML> sybariten: Well, you didn't specify that this was for a school exercise; sometimes school exercises ask you to do things that would be silly IRL because they want you to demonstrate understanding/mastery of a concept
[04:02:44] *** Joins: LINguist (~linguist@170.84.56.192)
[04:03:06] <sybariten> TML: yeah yeah true. They didne explicitly ask for a file reader fucntion, but they do state that for all the text-analyze-functions that i write (which are for a specific file) , we are also supposed to change and use a different file with a command. If you understand. So maybe i'll need a function for that , later.
[04:03:06] *** Quits: freeworld (~vit@chello085216193138.chello.sk) (Ping timeout: 250 seconds)
[04:03:16] <TML> sniperwolf: and if you make a new container from that image, and check its database yourself, do the database contents still exist?
[04:04:10] <sybariten> basically, i'm analyzing poetry.txt, which is a file everybody gets, and doing five-six different tests. that have menu choices. But htere should be a seventh menu choice where instead of poetry.txt i should be able to define any other file.
[04:04:43] <sniperwolf> TML no
[04:04:54] <sniperwolf> database does not exists at all on new contaienr
[04:06:26] <TML> sniperwolf: *shrug* I can't say I've ever used that "docker commit" process laid out in the SO answer, so I can't really speak to what it "should do"
[04:06:27] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e)
[04:10:27] <jmcantrell> Why is `__new__` used here for `SpoofDate`? https://stackoverflow.com/a/13073432/18866
[04:11:23] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e) (Ping timeout: 258 seconds)
[04:12:25] *** Joins: darksun (~darksun@user/darksun)
[04:12:50] <TML> jmcantrell: https://docs.python.org/3/reference/datamodel.html#object.__new__
[04:14:17] <sybariten> two basic questions about this:  https://bpa.st/LJFQ   1. is "return None" allowed, or does it not make any sense?  2. i will never have the outer world (the other functions in the module) be aware of that variable i'm creating right?
[04:14:39] <pragmaticenigma> sybariten: return None doesn't hurt anything
[04:14:49] <sybariten> ok, good
[04:14:58] <TML> sybariten: That function reads a file and then throws away the work it did to read it
[04:15:22] <TML> so while "return None" is fine in abstract, in this case it makes the whole function particularly pointless
[04:15:33] <pragmaticenigma> it's a noop
[04:15:51] <sybariten> hmmm ok. So is there a way to create a function that reads a file, so that the other functions can use that file content as a variable?  I had "return content" before, but then when i called the fucntion it printed the text
[04:16:00] <TML> except that it actually _does work_, while noops traditionally don't :)
[04:16:16] *** Quits: Jefren4 (~Jefren@70.35.66.138) (Ping timeout: 252 seconds)
[04:16:31] <TML> sybariten: "return content" isn't why your code printed text
[04:16:44] <sybariten> hmmm ok
[04:17:24] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 250 seconds)
[04:18:14] *** Joins: Jefren4 (~Jefren@70.35.67.135)
[04:18:49] *** Joins: nomic2 (~nomic@185.192.69.192)
[04:18:57] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[04:20:20] <TML> sybariten: https://replit.com/@tml/BarrenGaseousBits#main.py
[04:20:31] <TML> sybariten: Hit the run button, note the lack of output :)
[04:21:03] *** Parts: Henistein (~Henistein@2001:8a0:c1b3:6b01:d137:e994:8237:655b) ()
[04:21:22] *** Joins: c10l (~c10l@89.34.167.207)
[04:21:26] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Quit: Konversation terminated!)
[04:21:30] <TML> sybariten: Now, if I were to say add 'print(poem)', of course there would be output
[04:21:44] *** Quits: nomic (~nomic@185.192.69.192) (Ping timeout: 250 seconds)
[04:23:14] *** Joins: kissofthedeath (~fedorafan@user/fedorafan)
[04:23:46] <kissofthedeath> yo
[04:25:23] *** Quits: Thermoriax (Thermoriax@user/thermoriax) (Quit: WeeChat 3.2)
[04:26:32] *** Joins: audiophile_ (~audiophil@user/audiophile)
[04:26:43] *** Joins: qlixed (~qlixed@181.44.129.13)
[04:27:23] <audiophile_> can someoen tell me why i need to convert to list on line 27 when all I did was set the instance value 'word' to a list? why do I need to recast it to a list again? http://vpaste.net/J9UzP?bg=dark&nu
[04:27:39] *** Quits: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[04:28:28] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[04:28:28] *** Joins: JuicyJ (~textual@107.126.35.161)
[04:30:40] *** Quits: JuicyJ (~textual@107.126.35.161) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:31:32] <sybariten> TML: indeed there is a lack of output!  :)
[04:32:08] <sybariten> TML: yeah, actually i have no print statement there... i'm a bit surprised its printing....  this is me loading a module from the python command line and executing a function
[04:33:26] <sybariten> TML: this is literally what i have in a file.py , which i import, and hten when calling fileReader i get output spat out on the console...   is this expected?  :)
[04:33:53] <jinsun> audiophile_: you don't need to have the list() call there, what happens if you remove the list() call from that line?
[04:33:55] *** Joins: emika8 (~emika@185.207.249.63)
[04:34:25] *** Quits: emika (~emika@212.102.45.115) (Ping timeout: 252 seconds)
[04:34:25] *** emika8 is now known as emika
[04:34:31] *** Quits: waxfire (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[04:34:40] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 240 seconds)
[04:34:42] *** Joins: waxfire8 (~waxfire@65.119.2.240)
[04:36:33] *** Quits: Nanobot567 (~Nanobot56@108-195-7-3.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 268 seconds)
[04:36:37] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.2)
[04:37:11] *** Quits: comrumino (~comrumino@li87-103.members.linode.com) (Quit: byeee)
[04:37:26] *** Joins: comrumino (~comrumino@li87-103.members.linode.com)
[04:37:48] <jinsun> audiophile_: I guess the issue is not the type of the thing you are passing because the type remains same either way
[04:38:13] *** Quits: visl (visl@user/visl) (Ping timeout: 258 seconds)
[04:38:21] <jinsun> audiophile_: but if you don't do list() then the new GAB object will have the same internal list object as poppedword, but your logic requires it to be a copy, and list() makes a new copy
[04:38:47] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e)
[04:39:04] *** Quits: LINguist (~linguist@170.84.56.192) (Ping timeout: 250 seconds)
[04:41:20] *** Joins: LINguist (~linguist@170.84.56.192)
[04:42:07] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:7075:a6e1:dbff:2d89) (Read error: Connection reset by peer)
[04:42:45] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[04:43:10] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e) (Ping timeout: 240 seconds)
[04:44:16] <sybariten> TML: ehm, maybe its smart if i post a paste if i try to show something.... see my last comment   https://bpa.st/CF5A
[04:46:45] *** Joins: darksun (~darksun@user/darksun)
[04:46:53] *** Joins: mago (~mago@87.125.54.129)
[04:47:01] <mago> Hi mates! Do you know anything about instapy?
[04:47:50] <jinsun> sybariten: where/how are you calling that function that you defined in that paste?
[04:48:41] *** Joins: {Johnny_Cage} (~Dragoon@177.83.87.113)
[04:48:52] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[04:49:14] <sybariten> jinsun: python console ; from myPythonModule import * ; fileReader()
[04:50:05] *** Quits: PantelicGR (~PantelicG@user/pantelicgr) (Quit: Leaving)
[04:50:27] *** Joins: fikran (~fikran@user/fikran)
[04:50:57] <jinsun> okay, well in the console it will print the value unless you assign it to some name, do `content = fileReader()` and it will not print
[04:51:30] *** Joins: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421)
[04:51:38] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 258 seconds)
[04:51:59] <sybariten> gotcha. Thanks jinsun
[04:52:29] <jinsun> sybariten: that is the interactive behavior, usually people assume you are running the code by running `python your_file.py` and in that case it will not print even if you don't assign
[04:52:34] *** Quits: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 268 seconds)
[04:52:35] *** Joins: visl (visl@user/visl)
[04:52:42] <sybariten> aaah ok
[04:53:03] <jinsun> and you have to explictly add print() around it if you wanted to print
[04:53:03] <sybariten> that explains tmls earlier comment
[04:53:12] *** Joins: dustiestgolf (~anotherus@dsl-74-209-44-181.fairpoint.net)
[04:53:58] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 256 seconds)
[04:55:17] *** A_Dragon is now known as gay_dragon
[04:56:09] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 248 seconds)
[04:56:33] *** Joins: darksun (~darksun@user/darksun)
[04:57:22] *** Joins: wyclif (~wyclif@user/wyclif)
[04:59:17] *** Quits: mago (~mago@87.125.54.129) (Quit: Client closed)
[04:59:26] *** Joins: Jefren (~Jefren@70.35.67.139)
[05:00:35] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[05:01:49] *** Quits: Jefren4 (~Jefren@70.35.67.135) (Ping timeout: 268 seconds)
[05:01:55] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[05:02:02] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[05:02:15] *** Joins: ColdKeyboard (~ColdKeybo@user/coldkeyboard)
[05:02:50] *** Joins: wyclif (~wyclif@user/wyclif)
[05:03:18] *** Joins: Jefren1 (~Jefren@70.35.67.177)
[05:05:40] *** Quits: Jefren (~Jefren@70.35.67.139) (Ping timeout: 240 seconds)
[05:07:54] *** Joins: Jefren2 (~Jefren@70.35.67.109)
[05:09:52] *** Joins: Jefren3 (~Jefren@206.253.157.236)
[05:10:40] *** Quits: Jefren1 (~Jefren@70.35.67.177) (Ping timeout: 240 seconds)
[05:10:54] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Quit: Client closed)
[05:12:10] *** Quits: Jefren2 (~Jefren@70.35.67.109) (Ping timeout: 240 seconds)
[05:12:12] *** Quits: {Johnny_Cage} (~Dragoon@177.83.87.113) (Remote host closed the connection)
[05:18:07] *** Quits: gitly (~gitly@148.252.128.183) (Read error: Connection reset by peer)
[05:21:51] *** Joins: damxsa (~damx@2001:16a2:cd07:7e00:a8bc:1716:95f4:86ed)
[05:22:24] *** Quits: xx (~xx@user/xx) (Ping timeout: 250 seconds)
[05:23:14] <sybariten> if i do f = open("filename", "r")  i get a so called filehandle, right
[05:23:39] <KirkMcDonald> A file object.
[05:23:40] <pragmaticenigma> define what you mean by file handle?
[05:24:49] <sybariten> and often it seems people do read() on this file object . ... But it seems its still possible to iterate over f itself ?  So if i want to do something like counting lines (i do) , is there any point in also doing read() ?
[05:25:32] <KirkMcDonald> Iterating over a file object will read from the file and yield its lines, yes. You don't generally want to both call read() and iterate over it.
[05:25:33] *** Joins: gitly (~gitly@148.252.128.183)
[05:26:00] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e)
[05:26:21] <sybariten> i _don't_ want to call read, and then iterate over the result ?
[05:27:11] <Repiphany> That would load the whole file into memory
[05:28:01] <pragmaticenigma> sybariten: .read() reads the entire file and returns the result. Iterating over that result would be similar to iterating over a string. It isn't recommended.
[05:28:22] <sybariten> pragmaticenigma: hmmm i see
[05:28:23] *** Joins: jazzy (~jaziz@2600:380:c150:cfb9:485f:3c30:f3c1:9e98)
[05:28:52] *** Quits: LINguist (~linguist@170.84.56.192) (Ping timeout: 252 seconds)
[05:29:00] <sybariten> so if i want some generalized function that i use from several different fucntions ... a generalized file-reading-function... then maybe it should just return a file object
[05:29:20] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 250 seconds)
[05:29:39] *** Joins: paulman (~kulernil@gateway/tor-sasl/kuler)
[05:29:52] <sybariten> OTOH that would maybe just be wrapper around open(), and not adding anything new basically
[05:29:57] <pragmaticenigma> sybariten, typically, you would just do your file read where you would make the call to your "general function" ... in other words, why make a function to do something that can already do the thing?
[05:30:10] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e) (Ping timeout: 240 seconds)
[05:30:30] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[05:31:02] *** Joins: djhankb (~djhankb@208.113.164.68)
[05:32:02] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:41] *** Quits: dustiestgolf (~anotherus@dsl-74-209-44-181.fairpoint.net) (Quit: Leaving)
[05:33:40] *** Quits: Jefren3 (~Jefren@206.253.157.236) (Ping timeout: 250 seconds)
[05:34:22] <pragmaticenigma> In most programming, that caller reads the file, and passes what is needed to other methods. Iteration allows the file object to read "chunks" of the file at a time which can be done be a for loop against the file object, which defaults to breaking the file up into lines. Or other iterations where you tell the .read() method a size to return, as .read() can also accept a size integer value. Repeated calling the .read() with the same size
[05:34:22] <pragmaticenigma> will get the next chunk of data from the file object
[05:34:25] *** Joins: Spawns_Carpeting (~pi@user/spawns-carpeting/x-6969421)
[05:34:58] *** Quits: Spawns_Carpetin- (~pi@user/spawns-carpeting/x-6969421) (Ping timeout: 250 seconds)
[05:35:35] *** Joins: Jefren3 (~Jefren@70.35.67.97)
[05:36:07] *** Joins: vlm (~vlm@user/vlm)
[05:37:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[05:38:41] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-35dc-75d9-9cf8-a9d7.res6.spectrum.com) (Read error: Connection reset by peer)
[05:38:46] <cluelessperson> sybariten, what are you doing? :P
[05:38:48] *** Joins: wyclif (~wyclif@user/wyclif)
[05:38:53] <pragmaticenigma> sybariten: all objects returned by the open() function will return an object based on the Base IO class. In the documentation is probably a better explanation: https://docs.python.org/3/library/io.html#i-o-base-classes
[05:39:01] <pragmaticenigma> cluelessperson: they're working on homework
[05:39:27] *** Joins: darksun (~darksun@user/darksun)
[05:40:10] <sybariten> cluelessperson: username checks out!
[05:40:19] *** Joins: retrograde (retrograde@gateway/vpn/protonvpn/retrograde)
[05:40:29] *** Quits: oriba (~oriba@dynamic-089-014-030-138.89.14.pool.telefonica.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[05:41:19] *** Quits: paulman (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[05:41:45] *** Joins: paulman (~kulernil@gateway/tor-sasl/kuler)
[05:42:02] <sybariten> un/related question - its not possible to do something liek this with f strings right?  print(f"i'm using a function to get the value {someFunction()}"
[05:42:33] <Repiphany> You can do that
[05:42:47] <sybariten> hmmm ok
[05:42:52] <Repiphany> That's something you could easily test before asking
[05:43:25] <sybariten> well the reason i asked is because that test failed
[05:43:38] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[05:43:40] <cluelessperson> sybariten,   I suggest only doing it for simple things.
[05:44:15] <cluelessperson> sybariten,   name = getName();   print(f"Hi there, {name}!")
[05:44:28] *** Joins: wyclif (~wyclif@user/wyclif)
[05:44:35] <jinsun> sybariten: failed how? show code and error message
[05:44:45] <Repiphany> https://bpa.st/OMNA
[05:44:49] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[05:46:26] *** Joins: linguist (~linguist@170.84.56.192)
[05:46:28] <sybariten> cluelessperson: yeah but in that case you did the variable declaration ....
[05:47:40] <cluelessperson> sybariten,     person = obj("Bob");    print(f"Hi there, {person.get_name()}");   :P
[05:48:00] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[05:48:40] <sybariten> jinsun: https://bpa.st/DGVA    lineCounter returns an integer...
[05:48:52] *** nomic2 is now known as nomic
[05:48:57] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 248 seconds)
[05:48:59] <Repiphany> You can't use "" twice
[05:49:08] <Repiphany> """" is two strings
[05:49:43] <sybariten> oh my goodness ofcourse
[05:50:00] <jinsun> sybariten: that is quoting probem, your f" ends with the quote you put in front of "phit.txt", use single quotes for one of those
[05:50:04] *** Quits: damxsa (~damx@2001:16a2:cd07:7e00:a8bc:1716:95f4:86ed) (Quit: Leaving)
[05:50:12] *** Quits: civillian (~nick@124-171-97-43.dyn.iinet.net.au) (Remote host closed the connection)
[05:50:27] <sybariten> yep , hehehe, single quotes helped... i'm so tired... thanks!
[05:51:55] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[05:51:59] <sybariten> how does this work, btw, if i use a variable for the filename instead....  that is defined, with double quotes. Same problem?
[05:52:18] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Ping timeout: 250 seconds)
[05:52:38] <cluelessperson> sybariten,   "This is a string"    'You can also do "this"!'
[05:52:38] <Repiphany> There is no difference using single or double quotes for strings
[05:53:03] <jinsun> sybariten: no, the quotes are just syntax, the variable doesn't actually have the quotes
[05:53:18] <sybariten> ok
[05:53:58] <cluelessperson> sybariten,  "You can use \"escape characters\" such as \\ to write strings"
[05:54:24] <sybariten> thats true... thanks
[05:55:44] *** Quits: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606) (Quit: ZNC - https://znc.in)
[05:56:55] *** Joins: trace987 (~trace@95.90.106.112)
[05:59:17] <sybariten> Time to sleep, see ya and thanks for all the help!
[06:03:37] *** Quits: jim (~jim@about/linux/staff/jim) (Quit: Leaving)
[06:03:39] *** Joins: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606)
[06:04:03] *** Joins: jim (~jim@about/linux/staff/jim)
[06:06:33] *** Quits: trace987 (~trace@95.90.106.112) (Ping timeout: 248 seconds)
[06:07:28] *** Joins: gambl0re (~gambl0re@2607:fea8:a59e:87e0::b7d1)
[06:07:42] *** Joins: djapo (~archangel@user/djapo)
[06:10:06] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[06:12:14] *** Quits: Pandadub (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Ping timeout: 250 seconds)
[06:13:07] *** Quits: kissofthedeath (~fedorafan@user/fedorafan) (Quit: Textual IRC Client: www.textualapp.com)
[06:13:24] *** linguist is now known as autistic
[06:14:08] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[06:14:29] *** Joins: mickey (~user@user/mickey)
[06:15:10] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e)
[06:16:20] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[06:17:10] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[06:18:22] *** Joins: Fiji (~Fiji@user/fiji)
[06:19:25] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e) (Ping timeout: 258 seconds)
[06:19:31] *** Joins: nbao (~nbao@187.20.162.127)
[06:22:12] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[06:23:30] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 250 seconds)
[06:23:49] *** Joins: brabrax (~brabrax@user/brabrax)
[06:24:01] *** Quits: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606) (Remote host closed the connection)
[06:24:34] *** Joins: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606)
[06:25:18] *** Quits: Jigsy (~Jigsy@user/jigsy) (Remote host closed the connection)
[06:25:42] *** Joins: Jigsy (~Jigsy@user/jigsy)
[06:25:51] <aphysically> the default logging module is nice, much better than the manually coded nonsense I was doing checking my loglevel argument
[06:26:03] <aphysically> and plus naturally extended to file logging (or otherwise) if I wanted to
[06:26:53] *** Quits: Powerhouse6666 (~Powerhous@2604:3d08:5b7f:e136:95b1:bac0:7698:51de) (Read error: Connection reset by peer)
[06:27:33] *** Joins: Powerhouse6666 (~Powerhous@2604:3d08:5b7f:e136:95b1:bac0:7698:51de)
[06:29:50] <pragmaticenigma> aphysically, not sure what you mean by extend... the built in logger you create handlers if you wish to specify specific logs for specific levels and destinations
[06:30:17] <pragmaticenigma> aphysically: https://docs.python.org/3/howto/logging.html#handlers
[06:30:30] <aphysically> yeah that's what I mean (add a new handler)
[06:30:38] <pragmaticenigma> okay :)
[06:31:18] *** Quits: audiophile_ (~audiophil@user/audiophile) (Quit: Default Quit Message)
[06:31:52] *** Joins: audiophile_ (~audiophil@user/audiophile)
[06:32:10] *** Quits: nbao (~nbao@187.20.162.127) (Ping timeout: 250 seconds)
[06:32:40] *** Quits: Jefren3 (~Jefren@70.35.67.97) (Ping timeout: 252 seconds)
[06:32:48] *** Joins: nbao (~nbao@187.20.162.127)
[06:34:35] *** Joins: Jefren3 (~Jefren@208.104.190.38)
[06:34:40] <AhmedAmerican> with a list of strings, am trying to pickup elements which hold more than `2 spaces` , currently i pickup  it using `[x for x in mylist if len(x.split()) > 2]` is that's count good ?
[06:34:48] *** Quits: audiophile_ (~audiophil@user/audiophile) (Client Quit)
[06:36:55] <grym> AhmedAmerican: no
[06:37:15] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[06:37:18] <AhmedAmerican> grym: what do  you recommend ?
[06:37:40] <grym> AhmedAmerican: wait.  waht do you mean by "two spaces"
[06:37:49] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Client Quit)
[06:37:53] <grym> more than two characters long?
[06:38:05] <grym> or 'has at least two single space characters in it'
[06:38:23] <AhmedAmerican> something like `Test Test Test` should be matched
[06:38:41] <grym> AhmedAmerican: how about "test"
[06:39:01] <AhmedAmerican> `Test Test` or `Test` should not be matched
[06:39:23] <grym> oh.  that is not the same as 'two spaces'
[06:39:35] <grym> "test\ttest\ttest"
[06:39:37] <grym> e.g.
[06:39:46] <grym> would pass your comprehension, but has no spaces at all
[06:41:40] *** Quits: h4zel (~hazel@user/h4zel) (Ping timeout: 240 seconds)
[06:42:26] <grym> what you wrote is fine if you want to look for "at least two whitespace-separated groups", though
[06:42:40] <grym> but \n and \t and stuff are all whitespace as well, not just spaces
[06:42:54] *** Joins: gggp (~textual@60.10.194.48)
[06:43:27] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[06:45:22] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[06:45:40] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[06:45:57] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Remote host closed the connection)
[06:46:56] *** Joins: Jefren4 (~Jefren@70.35.66.198)
[06:47:05] *** Quits: Jefren3 (~Jefren@208.104.190.38) (Ping timeout: 248 seconds)
[06:48:19] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e)
[06:49:01] *** Joins: Jefren (~Jefren@70.35.67.1)
[06:50:59] *** Quits: retrograde (retrograde@gateway/vpn/protonvpn/retrograde) (Ping timeout: 268 seconds)
[06:51:36] *** Quits: Jefren4 (~Jefren@70.35.66.198) (Ping timeout: 268 seconds)
[06:51:55] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 252 seconds)
[06:52:06] *** hanaan is now known as Naan
[06:52:40] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e) (Ping timeout: 240 seconds)
[06:53:24] *** Quits: Jefren (~Jefren@70.35.67.1) (Ping timeout: 250 seconds)
[06:54:03] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:55:23] *** Joins: Jefren (~Jefren@70.35.66.129)
[06:57:58] *** Joins: darksun (~darksun@user/darksun)
[06:57:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[06:59:49] *** Joins: fikran (~fikran@user/fikran)
[07:01:20] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[07:01:29] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 248 seconds)
[07:02:04] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 250 seconds)
[07:02:04] *** Quits: Jefren (~Jefren@70.35.66.129) (Ping timeout: 268 seconds)
[07:03:01] *** Joins: Jefren (~Jefren@70.35.67.187)
[07:03:10] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Client Quit)
[07:03:10] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[07:03:32] *** Quits: c4017__ (~c4017@S0106c0943583f893.vf.shawcable.net) (Quit: Leaving)
[07:04:15] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[07:04:32] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[07:09:43] *** Joins: Jefren1 (~Jefren@70.35.66.133)
[07:11:10] *** Quits: Jefren (~Jefren@70.35.67.187) (Ping timeout: 240 seconds)
[07:13:47] *** Quits: Batzy (~Batzy@user/batzy) (Ping timeout: 245 seconds)
[07:14:02] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[07:15:01] *** Joins: Batzy (~Batzy@user/batzy)
[07:15:04] *** Quits: Jefren1 (~Jefren@70.35.66.133) (Ping timeout: 250 seconds)
[07:16:31] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[07:16:57] *** Quits: p4rpc (~przemek@89-69-17-47.dynamic.chello.pl) (Ping timeout: 248 seconds)
[07:17:05] *** Joins: Jefren1 (~Jefren@206.253.157.227)
[07:17:22] *** Quits: p-i-_ (~Ohmu@2403:6200:8870:41ad:ddbd:4a28:9a94:dc2) (Read error: Connection reset by peer)
[07:18:08] *** Joins: p-i- (~Ohmu@2403:6200:8870:41ad:a017:1263:2b99:7035)
[07:19:58] *** Quits: autistic (~linguist@170.84.56.192) (Ping timeout: 252 seconds)
[07:21:10] *** Joins: thiras (~thiras@user/thiras)
[07:21:52] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e)
[07:22:43] *** Quits: gggp (~textual@60.10.194.48) (Ping timeout: 252 seconds)
[07:23:27] *** Joins: minip (minip@user/minip)
[07:23:35] *** Joins: cs (~ovnicraft@179.49.44.28)
[07:25:29] *** Quits: cs (~ovnicraft@179.49.44.28) (Client Quit)
[07:25:36] *** Quits: Sheilong (uid293653@id-293653.charlton.irccloud.com) ()
[07:25:54] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Ping timeout: 250 seconds)
[07:26:07] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e) (Ping timeout: 258 seconds)
[07:30:59] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e)
[07:30:59] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[07:33:31] *** Quits: d1b (~db@user/d1b) (Quit: the cake is a lie!)
[07:33:40] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[07:34:58] *** Joins: wyclif (~wyclif@user/wyclif)
[07:35:40] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e) (Ping timeout: 240 seconds)
[07:36:24] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.2)
[07:36:28] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 252 seconds)
[07:38:03] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:38:20] *** Joins: mexen (uid495612@user/mexen)
[07:38:23] *** Joins: darksun (~darksun@user/darksun)
[07:38:40] *** Quits: Jefren1 (~Jefren@206.253.157.227) (Ping timeout: 252 seconds)
[07:39:13] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[07:41:04] *** Quits: nomic (~nomic@185.192.69.192) (Quit: Leaving)
[07:41:22] *** Joins: Jefren1 (~Jefren@206.253.157.237)
[07:43:40] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 240 seconds)
[07:44:24] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:45:26] *** Joins: ovnicraft (~ovnicraft@179.49.44.28)
[07:45:47] <TML> AhmedAmerican: You could try something like: if len(re.sub('\S+', '', my_str)) > 1
[07:47:22] <TML> AhmedAmerican: '\S+' here means that tabs, newlines, vertical tabs, and carriage returns, etc. are all counted as "spaces" - if that's not what you want, you can use something like '[^ ]+'
[07:48:00] <AhmedAmerican> TML: Brilliant, thanks a lot
[07:50:01] <TML> AhmedAmerican: some other ways of doing it are to use itertools.Counter or some crazy lambda nonsense like sum(map(lambda x : 1 if ' ' in x else 0, my_str)
[07:50:55] <TML> Except I think I dropped a ) there
[07:51:55] <TML> there are probably a ton of other ways - str.partition might be useful here, etc.
[07:53:17] *** Joins: gggp (~textual@60.10.23.160)
[07:53:19] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-7dbd-69ed-c482-bcce.res6.spectrum.com) (Remote host closed the connection)
[07:53:37] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-1c98-6fe6-7a7c-0e20.res6.spectrum.com)
[07:53:59] <aphysically> .count
[07:54:13] <aphysically> nested next iterables on the index would probably be efficient but really stupid
[07:55:16] <aphysically> (in that it would look confusing and be way too long of a one liner)
[07:56:39] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-1c98-6fe6-7a7c-0e20.res6.spectrum.com) (Remote host closed the connection)
[07:56:56] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-39b4-e23c-b23f-7386.res6.spectrum.com)
[07:57:00] *** Quits: pragmaticenigma (~pragmatic@user/pragmaticenigma) (Quit: Leaving)
[07:57:32] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Connection closed)
[07:59:37] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Quit: leaving)
[08:00:48] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[08:02:36] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[08:02:43] *** Joins: txtsd (~txtsd@user/txtsd)
[08:03:03] <AhmedAmerican> within Scrapy `Item Loader` , how i can send a keyword to my `PipeLine` class ? i believe that `loader.load_item()` is calling `PipeLine` class but am not sure how to send a keyword to it.  here's my  code snnipet --> https://bpa.st/JZZQ ,  Say that i want to send a dynamic file name to my PipeLine class which i will later use to save to file.
[08:03:47] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e)
[08:05:00] *** Joins: d1b (~db@user/d1b)
[08:07:32] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[08:07:32] *** Quits: Fiji (~Fiji@user/fiji) (Quit: Leaving)
[08:08:17] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e) (Ping timeout: 258 seconds)
[08:08:21] *** Joins: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net)
[08:11:21] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 248 seconds)
[08:18:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:20:30] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 250 seconds)
[08:25:20] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[08:26:24] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[08:32:23] *** Joins: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com)
[08:32:27] *** Joins: itt788 (~itt788@117.209.165.170)
[08:33:46] *** Joins: jeho (~jehoshaph@user/jehoshaphat)
[08:34:08] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[08:34:43] <itt788> i'm trying to install something with pip but it downloads some dependencies. How does pip do to know what and where to download?
[08:34:58] <itt788> where from
[08:35:12] *** Quits: paulman (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[08:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[08:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:37:35] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e)
[08:39:03] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Quit: leaving)
[08:41:40] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e) (Ping timeout: 240 seconds)
[08:43:24] <gegenschein> itt788: packages specify their own deps. there are a few ways to do this when you're making your own, but setup.py and setuptools seems the most canonical at the moment. https://packaging.python.org/discussions/install-requires-vs-requirements/
[08:44:53] *** Quits: qlixed (~qlixed@181.44.129.13) (Quit: That's all folks!!)
[08:45:50] *** Quits: Elliria (~littlegir@cpe-66-24-84-219.stny.res.rr.com) (Quit: *POOF*)
[08:47:37] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[08:48:50] *** Quits: ovnicraft (~ovnicraft@179.49.44.28) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:49:55] *** Quits: i0e (~is0ke3@user/is0ke3) (Quit: Zzzzzz.....)
[08:51:14] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.2)
[08:52:35] <itt788> gegenschein: i grepped whatever package name it was downloading into the sources i was trying to install with pip but couldn't find anything
[08:52:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[08:54:36] <aphysically> it could be a package it requires itself requires a package
[08:54:44] *** Quits: [_] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[08:55:39] *** Quits: N3X15 (~nexis@mail.nexisonline.net) (Quit: ZNC - http://znc.in)
[08:58:34] *** Joins: N3X15 (~nexis@mail.nexisonline.net)
[08:59:53] *** Joins: emika8 (~emika@83.136.182.189)
[09:00:48] *** Quits: emika (~emika@185.207.249.63) (Ping timeout: 250 seconds)
[09:00:48] *** emika8 is now known as emika
[09:01:11] <jinsun> the package name can be different from what name you use to import it
[09:03:35] *** Joins: paulman (~kulernil@gateway/tor-sasl/kuler)
[09:04:48] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[09:07:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[09:09:11] *** Joins: fikran (~fikran@user/fikran)
[09:10:31] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e)
[09:14:40] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e) (Ping timeout: 240 seconds)
[09:16:14] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[09:21:51] *** Quits: tkazi (~tkazi@user/tkazi) (Quit: Disconnected)
[09:23:11] *** Joins: tkazi (~tkazi@user/tkazi)
[09:24:07] *** Joins: c4017 (~c4017@S0106c0943583f893.vf.shawcable.net)
[09:25:14] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 244 seconds)
[09:25:16] *** Joins: manin (~x@185.242.190.95)
[09:27:36] *** Quits: itt788 (~itt788@117.209.165.170) (Ping timeout: 268 seconds)
[09:27:53] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:32:57] *** Joins: sri19 (uid477846@id-477846.charlton.irccloud.com)
[09:36:29] *** Joins: mei (~mei@user/mei)
[09:38:19] *** Quits: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:c468:ec9f:e649:97cb) (Quit: Leaving)
[09:38:37] *** Joins: darksun (~darksun@user/darksun)
[09:42:45] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[09:43:42] *** Quits: V1mV1m (~VimVim@85.191.9.175) (Ping timeout: 250 seconds)
[09:44:08] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 250 seconds)
[09:44:09] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e)
[09:46:07] *** byzandula is now known as byzafk
[09:48:43] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e) (Ping timeout: 258 seconds)
[09:48:54] *** Quits: gambl0re (~gambl0re@2607:fea8:a59e:87e0::b7d1) (Ping timeout: 250 seconds)
[09:50:20] *** Quits: nbao (~nbao@187.20.162.127) (Quit: leaving)
[09:50:36] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[09:50:54] *** Quits: gegenschein (~james@ec2-34-226-147-141.compute-1.amazonaws.com) (Quit: hasta luego pendejos)
[09:53:00] *** Joins: Wulf (~Wulf@user/wulf)
[09:53:50] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[09:56:25] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:56:30] *** Quits: gggp (~textual@60.10.23.160) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:58:02] *** Quits: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[09:58:48] *** Joins: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se)
[09:58:50] *** Joins: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net)
[09:59:22] *** Joins: Jefren2 (~Jefren@70.35.66.74)
[10:01:26] *** Quits: mei (~mei@user/mei) (Quit: mei)
[10:02:08] *** Quits: Jefren1 (~Jefren@206.253.157.237) (Ping timeout: 268 seconds)
[10:02:11] *** Joins: mei (~mei@user/mei)
[10:04:56] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e)
[10:09:40] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 244 seconds)
[10:11:19] *** Quits: mei (~mei@user/mei) (Quit: mei)
[10:12:06] *** Joins: mei (~mei@user/mei)
[10:14:55] *** Quits: ColdKeyboard (~ColdKeybo@user/coldkeyboard) (Quit: I'll be back...)
[10:15:57] *** Joins: ColdKeyboard (~ColdKeybo@user/coldkeyboard)
[10:17:04] *** Quits: d1b (~db@user/d1b) (Ping timeout: 250 seconds)
[10:20:11] *** Joins: d1b (~db@user/d1b)
[10:26:02] *** Quits: damonlynch (~ngaio@2601:245:c700:2c06:8181:47af:d3b4:a2c0) (Quit: Leaving)
[10:26:56] *** Joins: Jefren3 (~Jefren@70.35.67.99)
[10:28:39] *** BlessJah_ is now known as BlessJah
[10:29:53] *** Quits: Jefren2 (~Jefren@70.35.66.74) (Ping timeout: 268 seconds)
[10:30:56] *** Quits: p-i- (~Ohmu@2403:6200:8870:41ad:a017:1263:2b99:7035) (Remote host closed the connection)
[10:31:23] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[10:31:40] *** Quits: jazzy (~jaziz@2600:380:c150:cfb9:485f:3c30:f3c1:9e98) (Ping timeout: 240 seconds)
[10:31:40] *** Joins: p-i- (~Ohmu@2403:6200:8870:41ad:28d8:8f42:2ccb:ec5d)
[10:32:14] *** Quits: Jefren3 (~Jefren@70.35.67.99) (Ping timeout: 250 seconds)
[10:34:16] *** Joins: Jefren3 (~Jefren@70.35.66.160)
[10:34:37] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[10:38:28] *** Joins: frost (~frost@59.71.240.119)
[10:45:51] *** Joins: pro (~pro@user/pro)
[10:46:17] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:46:36] *** Quits: ircuser-1 (~Johnny@71.63.241.168) (Quit: because)
[10:46:47] *** Joins: seednode (~seednode@user/seednode)
[10:49:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:49:58] *** Joins: Vooch (~iovoo@096-038-011-034.biz.spectrum.com)
[10:51:35] <AhmedAmerican> how to match `filter_words` into `blocked_words` https://bpa.st/NS2A with most performance ?
[10:58:56] *** Joins: Adoi (~Adoi@user/adoi)
[10:59:22] *** Quits: Ara (~Ara@user/ara) (Ping timeout: 240 seconds)
[10:59:39] <Repiphany> What are you trying to do
[11:04:06] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[11:04:55] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Ping timeout: 252 seconds)
[11:05:37] <AhmedAmerican> Repiphany: i want catch strings within `filterwords` from `auth` which i append to `blocked_words`
[11:06:26] <Repiphany> I don't know what that means
[11:06:34] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 252 seconds)
[11:06:41] *** Joins: Ara (~Ara@user/ara)
[11:07:19] <Adoi> hello, I have this code https://bpa.st/3DOA  about drawing balls of different color from a hat. I end up finding a probability different from the solution's.
[11:07:29] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[11:08:10] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[11:08:13] *** Joins: palasso (~palasso@user/palasso)
[11:08:41] <Adoi> a certain number of balls are drawn, and chances of matching at least x balls of color y are calculated in repeated trials.
[11:08:42] <Repiphany> Where does your expected output come from for a monte carlo simulation
[11:08:53] <Adoi> Repiphany, it is given
[11:08:58] *** Joins: darksun (~darksun@user/darksun)
[11:09:20] <Repiphany> Monte carlo simulation isn't going to give you an exact answer
[11:09:35] <Adoi> sorry, I misunderstood your reply
[11:09:55] <Adoi> the unit test shows the expected output
[11:10:12] *** Joins: manti7 (~manti7@176.10.104.94)
[11:10:39] *** Quits: dre (~dre@2001:8003:c932:c301:ef2c:1b38:ddbc:e3bd) (Quit: Leaving)
[11:11:14] <Repiphany> The output is going to depend very specifically on how you set up your simulation logic
[11:11:43] <Repiphany> You need to provide the exact specifications of the simulation you're trying to recreate
[11:11:54] <AhmedAmerican> Repiphany: Sorry, hopefully that's make it clear --> https://bpa.st/MZAQ
[11:11:55] <Adoi> the question contains a unit test to point at errors in the code. and it printed this difference
[11:12:14] <Adoi> I have no idea of logic or simulation
[11:12:18] <Repiphany> Are you even supposed to be solving your question with a simulation
[11:12:25] <Adoi> this is a test question where the submitted answer is verified
[11:12:26] *** Joins: kosh (~kosh@user/kosh)
[11:12:36] <Adoi> I dont know what you mean
[11:12:43] <Repiphany> You're not going to get an exact answer even if you simulate 1000000000000000000000 draws
[11:13:30] <Repiphany> If I flip a fair coin 1000000 times, the chance I get exactly 500000 heads is tiny
[11:13:54] <Adoi> yes, but there is a set error margin like delta = 0.01 and the deviation above is apparently aboce that
[11:13:56] <Adoi> aove
[11:13:59] <Adoi> above
[11:14:08] *** Joins: freeworld (~vit@chello085216193138.chello.sk)
[11:14:17] <Repiphany> Does the question say you're supposed to be simulating the problem to get the probability
[11:14:18] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 268 seconds)
[11:14:18] <Adoi> this is how the unit test is set up
[11:14:42] <Adoi> the question tells me to set up the methods and instance vars in the code
[11:14:46] <Repiphany> There are other programmatic ways to calculate exact probabilities without using any randomness
[11:14:51] <Adoi> and then solve the problem based on given args
[11:14:57] <Repiphany> Show the whole problem that you're trying to solve
[11:15:23] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[11:15:28] <Adoi> randomness is deliberate. random method is to be used in the solution
[11:15:56] <Repiphany> You need to show the original problem you're trying to solve rather than describing it
[11:16:15] <Adoi> nevermind
[11:16:17] <Adoi> thanks
[11:16:21] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[11:16:26] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[11:16:52] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[11:17:56] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Client Quit)
[11:18:39] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[11:18:48] *** Joins: fikran (~fikran@user/fikran)
[11:20:02] *** Quits: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f) (Quit: Leaving)
[11:20:22] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[11:20:56] *** Joins: NeoCore (~neocore@195.200.221.53)
[11:21:23] *** Joins: hafat (~hafat@159.146.87.68)
[11:23:31] *** Joins: ice9 (~ice9@user/ice9)
[11:23:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[11:23:37] *** Quits: Jefren3 (~Jefren@70.35.66.160) (Ping timeout: 252 seconds)
[11:25:44] <aphysically> what's the difference between typing.List[int] and list[int] - is the latter even valid? (type hinting)
[11:25:44] *** Joins: lapno (~lapno@eoh163.neoplus.adsl.tpnet.pl)
[11:25:54] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[11:26:18] <jinsun> it is the same thing to type checkers, latter is only valid for 3.9+
[11:27:01] <jinsun> or if you use the __future__ annoations import
[11:27:18] *** gay_dragon is now known as A_Dragon
[11:27:30] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[11:29:28] *** Joins: damonlynch (~ngaio@2601:245:c700:2c06:c0e0:62a7:7fac:e313)
[11:30:06] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[11:30:19] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[11:30:20] *** Joins: entuland (~entuland@user/entuland)
[11:31:15] *** Quits: hafat (~hafat@159.146.87.68) (Remote host closed the connection)
[11:32:05] <aphysically> hmmm not impressed with this type checker
[11:32:10] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[11:32:18] *** Joins: Jefren3 (~Jefren@70.35.67.13)
[11:32:47] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[11:32:58] *** Joins: cthulchu (~Cthulchu@94.153.10.122)
[11:32:58] *** Quits: cthulchu (~Cthulchu@94.153.10.122) (Read error: Connection reset by peer)
[11:33:03] <aphysically> trying mypy right now
[11:33:08] <aphysically> .scripts/pyffstream.py:470: error: Value of type "Union[str, None, Dict[Any, Any]]" is not indexable
[11:33:08] *** Joins: hafat (~hafat@159.146.87.68)
[11:33:11] <aphysically> a dict clearly is indexable!
[11:33:18] *** Joins: cthulchu (~Cthulchu@94.153.10.122)
[11:33:28] <jinsun> None is not
[11:33:40] <aphysically> is Union the wrong typing for an or?
[11:33:46] *** Joins: gggp (~textual@114.245.111.238)
[11:35:05] <jinsun> that Union means that your variable can be str or Dicti[Any, Any] or None
[11:35:23] <jinsun> and if it is None, the indexing will fail
[11:35:36] <jinsun> so the type checker cannot allow it
[11:37:59] <aphysically> it seems quite angry every I've used None to mean something
[11:38:07] <aphysically> everywhere*
[11:39:10] *** Joins: jinsun_ (~quassel@user/jinsun)
[11:40:10] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[11:40:13] *** jinsun_ is now known as jinsun
[11:40:57] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[11:41:28] <aphysically> I can change my code to use an empty string instead of None and check that instead of None but I'm not sure I want to just to satisfy a type checker
[11:41:37] *** Quits: gggp (~textual@114.245.111.238) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:42:09] *** Joins: gggp (~textual@60.10.23.160)
[11:42:13] <themill> Using None as a special value is fine. Indexing None is not fine.
[11:42:21] <jinsun> aphysically: you can do `if value is not None: value[index]`
[11:42:48] <aphysically> I'm not indexing a None, None can't be passed to where I used it
[11:42:55] <aphysically> it's already checked in my code
[11:43:20] <aphysically> it's a static type checking tool that's complaining, not a runtime error or such
[11:43:43] <themill> If it can't be None, why allow it to be None in that type annotation?
[11:44:16] *** Joins: jinsun_ (~quassel@user/jinsun)
[11:45:04] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:45:43] <graingert[m]> aphysically: Can you show your code?
[11:46:13] <aphysically> yeah sure
[11:46:31] <aphysically> https://dpaste.com/8KDEZNGDG
[11:46:37] <aphysically> I haven't yet split into files for a project it's on my to-do
[11:46:46] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 250 seconds)
[11:46:47] *** Quits: dolor_avis (~dolor_avi@user-5-173-0-42.play-internet.pl) (Quit: dolor_avis)
[11:47:00] <aphysically> I'm converting a bash script I wrote and am trying to use it as a learning test bed for good Python habits
[11:47:26] <aphysically> I don't have strong opinions on how to do it I'm just trying to learn stuff as I go, so I'm trying out type annotations and a static type checker right now
[11:47:40] *** Joins: goepsilongo (~goepsilon@2603-7000-ab00-62ed-1cf8-2891-43b9-94ea.res6.spectrum.com)
[11:47:58] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[11:48:10] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:2d03:4854:99:d11e) (Ping timeout: 240 seconds)
[11:48:20] <aphysically> if you want to actually run it yourself you need to pass --system-ffmpeg (right now my self-compiled version is hard coded as the default pending config files), it doesn't actually do anything yet except start to calculate some parameters to use for encoding
[11:48:45] *** Quits: minip (minip@user/minip) (Remote host closed the connection)
[11:48:58] <themill> aphysically: the origin of this is that probefile says that it might return None and then the use of probefile at 470 assumes that it is not None
[11:49:33] *** Quits: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[11:50:10] *** Quits: goepsilongo_ (~goepsilon@2603-7000-ab00-62ed-c9e0-8f19-de85-1d2f.res6.spectrum.com) (Ping timeout: 240 seconds)
[11:50:10] <aphysically> right, so, probefile can return None, I use it as the signal that the ffprobe of a file's requested info failed
[11:50:12] <themill> None there seems to be for an exceptional condition which is why normal runtime operation hasn't caused a problem yet
[11:50:22] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[11:50:42] <themill> so if None is a signal of failure, then do you need to check for that failure at/about line 470?
[11:50:43] <aphysically> it's actually not especially exceptional, it fails for all values not included in the file
[11:51:05] *** Quits: complexnumber (~brett@123-243-63-51.tpgi.com.au) (Quit: So long, and thanks for all the fish!)
[11:51:17] <jinsun_> instead of try catch check if it is None using if
[11:51:30] *** jinsun_ is now known as jinsun
[11:51:56] <jinsun> ugh my wifi acting weird
[11:52:12] <themill> It might also be that rather than returning None, raising an exception is better in this case... (I've not digested all the code)
[11:52:36] <aphysically> I do try catch the case intentionally to cover this, I'm open to suggestions to whatever you think is the best solution overall
[11:52:43] <jinsun> aphysically: the type checker should be able to narrow down the type if you use if condition
[11:52:53] <aphysically> let's try it
[11:53:09] *** Joins: upsala (~zcb@185.213.155.160)
[11:53:19] <aphysically> I still need the try catch with how the code is now because even the [0] part can fail since ffmpeg can return json with no real contents (I could check that and return None for that case too, I guess)
[11:53:22] *** Quits: reset (~reset@user/reset) (Quit: reset)
[11:54:59] <jinsun> inside the `if value is not None` block mypy will (rightly) assume that the type cannot be None, and allow you to use indexing
[11:55:05] <aphysically> yeah you're right
[11:56:52] <jinsun> then you can remove the TypeError from the except part
[11:57:14] <jinsun> because you will not get TypeError if you check for None beforehand
[11:58:16] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[11:59:07] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:a952:d56:a5b4:a5ad)
[12:00:37] <aphysically> right
[12:01:02] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[12:02:17] *** Quits: gggp (~textual@60.10.23.160) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:02:30] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[12:02:35] <no_gravity> Good Morning
[12:03:06] <aphysically> I have to check it's not a str too to get rid of the other complaint, although it's not possible to get a string because of the arguments I passed to the probefile
[12:03:13] <aphysically> (it's either none or the dict)
[12:03:35] <aphysically> I don't mind that, I can do it
[12:03:40] *** Quits: Jefren3 (~Jefren@70.35.67.13) (Ping timeout: 250 seconds)
[12:03:54] <no_gravity> I am trying to come up with a rule of thumb what happens when you call a function with a parameter in Python. Could you say that everything in Python is a pointer and when you call a function f(x), f gets a copy of the pointer x? This would explain this very well for example: https://www.online-python.com/Vhzo4b1CTq
[12:04:16] *** Joins: Auron (~Auron956@user/auron)
[12:04:25] *** Quits: humberto1 (~humbertow@2806:107e:f:5e47:a952:d56:a5b4:a5ad) (Ping timeout: 258 seconds)
[12:04:53] <no_gravity> As line 2 changes the thing pointed to (so it has side effects) but line 6 does change the pointer itself (so it has no side effects, as it is a copy of the pointer)
[12:05:20] <aphysically> https://dpaste.com/GGZL4QQHZ okay surely this is a bug in the type checker
[12:05:23] <aphysically> .scripts/pyffstream.py:458: error: Name "emptydict" already defined on line 451
[12:05:50] <aphysically> they're on opposite sides of an if/elif
[12:06:01] *** Quits: xcombelle (~xavie@176-139-252-198.abo.bbox.fr) (Ping timeout: 248 seconds)
[12:06:09] <aphysically> (and the else raises a valueerror)
[12:08:02] *** Joins: gggp (~textual@60.10.23.160)
[12:08:29] *** Joins: pabed1 (~Thunderbi@89.37.15.34)
[12:08:35] <The-Compiler> no_gravity: sounds reasonable
[12:08:46] <no_gravity> The-Compiler: Nice, thanks.
[12:08:56] <The-Compiler> aphysically: that's by design, a name should be declared exactly once (per scope)
[12:09:52] *** Joins: Jefren3 (~Jefren@206.253.157.219)
[12:09:58] <aphysically> ok, I can accept that, it's easy enough to move the declaration up
[12:11:09] <The-Compiler> aphysically: there's no point in the assignment before the valueerror anyways, no?
[12:12:24] *** Joins: k162 (k162@user/k162)
[12:13:38] <aphysically> umm, I guess
[12:14:41] *** Quits: gggp (~textual@60.10.23.160) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:14:46] *** Quits: Jefren3 (~Jefren@206.253.157.219) (Ping timeout: 252 seconds)
[12:16:12] *** Joins: Jefren3 (~Jefren@208.104.190.61)
[12:16:36] <aphysically> ok down to 7 errors, fixing these is not so bad
[12:17:20] <aphysically> most of these complaints are because I used None as a special meaning and was using it as a str in places where I had set an assignment to make sure it couldn't return None
[12:17:34] *** Joins: gggp (~textual@60.10.23.160)
[12:18:04] *** Quits: entuland (~entuland@user/entuland) (Ping timeout: 252 seconds)
[12:18:04] *** Joins: humberto1 (~humbertow@2806:107e:f:5e47:8c2d:7a40:c763:be0b)
[12:18:45] <aphysically> this one I'm not sure what's happening: https://dpaste.com/89PXYBNPJ
[12:18:55] <aphysically> .scripts/pyffstream.py:824: error: Item "None" of "Optional[IO[str]]" has no attribute "readline"
[12:19:48] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[12:19:51] <aphysically> surely this is a bug
[12:20:21] *** Joins: ogis (~Android@p2037202-ipngn201011tokaisakaetozai.aichi.ocn.ne.jp)
[12:22:44] *** Quits: cthulchu (~Cthulchu@94.153.10.122) (Ping timeout: 268 seconds)
[12:22:47] *** Joins: stevieh (~skrodzki@p2e584735.dip0.t-ipconnect.de)
[12:26:12] *** Quits: gggp (~textual@60.10.23.160) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:26:48] *** Quits: Tat (~Tat@137-025-218-069.res.spectrum.com) (Read error: Connection reset by peer)
[12:27:08] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[12:28:32] *** Joins: gggp (~textual@221.219.72.60)
[12:30:06] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 250 seconds)
[12:30:14] <aphysically> okay I fixed all the complaints except that :D https://dpaste.com/GTWPXSSXA
[12:31:19] <aphysically> two of these errors in the two places I use readline:
[12:31:22] <aphysically> .scripts/pyffstream.py:827: error: Item "None" of "Optional[IO[str]]" has no attribute "readline"
[12:33:07] <aphysically> I'm okay with these changes I think, it wasn't that bad overall
[12:33:21] *** Joins: Archenfield (~textual@2405:6580:8e60:4600:c841:c00d:1866:206a)
[12:33:45] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[12:34:52] *** Quits: gggp (~textual@221.219.72.60) (Ping timeout: 250 seconds)
[12:35:13] *** Joins: hendursa1 (~weechat@user/hendursaga)
[12:36:15] *** Quits: zaquest (~notzaques@5.128.210.178) (Remote host closed the connection)
[12:36:36] <aphysically> a couple bugs though in this (trying mypy right now), this bug here ^ and also it complains that a function annotated with "noreturn" from typing doesn't return something despite being annotated with a return
[12:37:35] *** Joins: zaquest (~notzaques@5.128.210.178)
[12:37:57] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 244 seconds)
[12:38:33] *** Joins: gggp (~textual@60.10.23.160)
[12:39:29] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[12:41:11] *** Quits: Archenfield (~textual@2405:6580:8e60:4600:c841:c00d:1866:206a) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:44:28] *** Joins: csevast (~csevast@apu40.neoplus.adsl.tpnet.pl)
[12:44:36] *** Quits: csevast (~csevast@apu40.neoplus.adsl.tpnet.pl) (Client Quit)
[12:44:40] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 244 seconds)
[12:45:27] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[12:46:31] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.2)
[12:47:54] *** Joins: kosh_ (~kosh@user/kosh)
[12:47:57] *** Quits: LordKalma (~LordKalma@server.ruilvo.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[12:48:48] *** Joins: LordKalma (~LordKalma@server.ruilvo.com)
[12:50:08] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:51:15] *** Joins: kosh_000__ (~kosh@user/kosh)
[12:51:20] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 250 seconds)
[12:52:23] *** Quits: lapno (~lapno@eoh163.neoplus.adsl.tpnet.pl) (Quit: Leaving)
[12:54:22] *** Quits: kosh_ (~kosh@user/kosh) (Ping timeout: 252 seconds)
[12:54:59] *** Joins: nomic (~nomic@185.192.69.192)
[12:56:32] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 250 seconds)
[12:57:18] *** Joins: wyclif (~wyclif@user/wyclif)
[12:57:37] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[12:58:32] *** Quits: portalrat (~portalrat@user/portalrat) (Read error: Connection reset by peer)
[12:58:52] *** Joins: portalrat (~portalrat@user/portalrat)
[12:58:57] *** Quits: lordrishav (~LordRisha@user/lordrishav) (Quit: WeeChat 2.8)
[12:59:30] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: Textual IRC Client: www.textualapp.com)
[13:02:04] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[13:02:48] *** Joins: wyclif (~wyclif@user/wyclif)
[13:03:38] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[13:03:48] *** Joins: Archenfield (~textual@2405:6580:8e60:4600:41be:562f:11e:9e65)
[13:04:00] *** Quits: gggp (~textual@60.10.23.160) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:07:34] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[13:08:18] *** Joins: wyclif (~wyclif@user/wyclif)
[13:08:32] <aphysically> okay I'm not sure I understand this one either: https://dpaste.com/5CYYZU3VE
[13:08:44] <aphysically> .scripts/pyffstream.py:513: error: Argument 1 to "initval" has incompatible type "Union[str, Dict[Any, Any]]"; expected "Dict[Any, Any]"
[13:09:04] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:09:05] <aphysically> see line 463 for the annotation
[13:09:12] <aphysically>         emptydict: dict[str, typing.Union[str, dict]] = {}
[13:09:23] *** Joins: darksun (~darksun@user/darksun)
[13:09:24] <aphysically> I'm not sure how it's getting that this can be a str, if I change it to just dict the complaint goes away
[13:09:42] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[13:09:50] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[13:09:52] *** Joins: its-fonsy (~fonsy@84.247.210.222)
[13:10:19] *** Quits: Jefren3 (~Jefren@208.104.190.61) (Ping timeout: 252 seconds)
[13:12:37] *** Joins: mattil (~mattil@87-92-132-211.rev.dnainternet.fi)
[13:13:04] *** its-fonsy is now known as fonsy
[13:14:08] *** Joins: gggp (~textual@221.219.78.247)
[13:14:44] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 250 seconds)
[13:18:40] *** Quits: gggp (~textual@221.219.78.247) (Ping timeout: 240 seconds)
[13:20:03] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[13:21:04] *** Joins: V1mV1m (~VimVim@85.191.61.113)
[13:22:27] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[13:24:13] *** Joins: rendar (~rendar@user/rendar)
[13:25:17] <jochum> aphysically: https://stackoverflow.com/questions/37087457/difference-between-defining-typing-dict-and-dict <-- may this helps? (I have no clue)
[13:25:37] *** Joins: Jefren3 (~Jefren@70.35.66.192)
[13:25:57] <jochum> aphysically: especialy the uppercase "D" in dict
[13:26:06] *** Joins: emika1 (~emika@185.207.249.81)
[13:26:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[13:26:16] *** Quits: emika (~emika@83.136.182.189) (Ping timeout: 252 seconds)
[13:26:16] *** emika1 is now known as emika
[13:26:30] <aphysically> The uppercase D dict is deprecated in 3.9 because the lowercase means the same thing now
[13:26:31] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[13:26:49] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 252 seconds)
[13:27:04] *** Joins: inomoz (~inomoz@176.59.111.80)
[13:27:35] <jochum> aphysically: ok, then I'm unable to help. I tried, sorry.
[13:28:11] *** Joins: fikran (~fikran@user/fikran)
[13:29:10] *** Quits: jack__d (~jack__d@pool-98-109-145-13.nwrknj.fios.verizon.net) (Ping timeout: 240 seconds)
[13:30:20] *** Quits: Jefren3 (~Jefren@70.35.66.192) (Ping timeout: 250 seconds)
[13:31:28] *** Joins: darksun (~darksun@user/darksun)
[13:31:38] *** Joins: rany_ (~rany@user/rany)
[13:31:42] *** Quits: rany (~rany@user/rany) (Read error: Connection reset by peer)
[13:32:12] *** Joins: Jefren3 (~Jefren@70.35.66.225)
[13:35:10] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[13:36:24] *** Quits: Jefren3 (~Jefren@70.35.66.225) (Ping timeout: 250 seconds)
[13:39:02] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[13:39:56] *** Joins: the-mask (~the-mask@user/the-mask)
[13:40:14] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[13:40:34] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 252 seconds)
[13:40:37] *** Joins: besnn (~besnn@user/besnn)
[13:41:03] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[13:42:22] *** Quits: Archenfield (~textual@2405:6580:8e60:4600:41be:562f:11e:9e65) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:44:28] <hexnewbie> Is there a cheap way to call an existing function with *args, **kwargs, discarding the ones the function does not accept? I have a drop-in replacement for PyQt5 Signal() (for the console part of the program which does not use Qt), and Signal.emit(1,2,3) can be connected to f(a), discard 2,3. I do not rely on this at the moment, but it will get hairy if I need to add arguments to my signals
[13:44:29] <hexnewbie> in the future
[13:44:36] *** Joins: gggp (~textual@123.113.190.24)
[13:45:04] <hexnewbie> Well, at last PyQt5's Signal() can be connected to f(a), mine requires f(a,b,c) at the moment
[13:45:53] *** Joins: Jefren3 (~Jefren@70.35.67.195)
[13:46:11] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[13:46:31] *** Joins: Archenfield (~textual@y246040.dynamic.ppp.asahi-net.or.jp)
[13:47:10] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 252 seconds)
[13:47:28] <hexnewbie> I could whip up something with inspect, but my signal.connect() and signal.emit() code is already pretty expensive as it is
[13:49:24] *** Quits: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[13:49:24] *** Joins: AlanMD (~AlanMD@5-12-8-103.residential.rdsnet.ro)
[13:49:56] *** Joins: j0be (~j0be@user/j0be)
[13:51:30] *** Quits: Archenfield (~textual@y246040.dynamic.ppp.asahi-net.or.jp) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:54:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[13:54:27] *** Joins: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr)
[13:55:14] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[13:55:22] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:5dbe:cfd7:aedc:da9)
[13:56:14] *** Joins: Jefren4 (~Jefren@70.35.67.178)
[13:59:05] *** Quits: Jefren3 (~Jefren@70.35.67.195) (Ping timeout: 248 seconds)
[14:00:47] *** Quits: gggp (~textual@123.113.190.24) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:01:28] *** Quits: Jefren4 (~Jefren@70.35.67.178) (Ping timeout: 252 seconds)
[14:03:34] *** Joins: Jefren4 (~Jefren@70.35.66.70)
[14:03:34] *** Joins: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854)
[14:04:48] <aphysically> I can fix it by asserting the result isn't none apparently jochum
[14:04:55] *** Joins: xx (~xx@user/xx)
[14:04:59] *** Joins: HolyTaint (~HolyTaint@gateway/tor-sasl/holytaint)
[14:05:27] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[14:05:39] *** Quits: hafat (~hafat@159.146.87.68) (Quit: Leaving)
[14:06:41] *** Joins: gggp (~textual@60.10.23.160)
[14:08:46] *** Quits: gggp (~textual@60.10.23.160) (Client Quit)
[14:08:59] <hexnewbie> Hm, it might be a simple case of counting f.__code__.co_varnames (if it exists), which I won't code until I need it.
[14:10:51] *** Quits: fonsy (~fonsy@84.247.210.222) (Quit: Leaving)
[14:12:04] *** Joins: gggp (~textual@221.219.72.60)
[14:12:10] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 240 seconds)
[14:12:27] * enyc meows
[14:14:03] <HolyTaint> in setuptools.setup(install_requires=[]) how could I set three dependencies as alternative? let's say I want installed either libfoo or libbar
[14:15:29] <ChrisWarrick> HolyTaint: what are those libraries and why do you want to have this? what would you want pip to install when installing your package?
[14:17:59] *** Joins: hafat (~hafat@159.146.87.68)
[14:18:11] <HolyTaint> ChrisWarrick, sqlalchemy, for working my package would need an async module anyway, so for example, either asyncpg or aiosqlite
[14:18:21] <HolyTaint> so, is there a way for doing this
[14:19:14] <ChrisWarrick> HolyTaint: not really
[14:19:24] <aphysically> I maybe should have fixed a couple of the other mypy complaints with assertions when it was for cases that couldn't/shouldn't ever happen
[14:19:37] <aphysically> eh whatever
[14:19:40] <ChrisWarrick> HolyTaint: you could define extras, and then tell your user to `pip install 'foo[sqlite]'` or `pip install 'foo[postgres]'` depending on their db of choice
[14:19:54] <HolyTaint> how do they work
[14:20:00] <aphysically> we did it, no mypy complaints \o/ https://dpaste.com/62NAABTF9
[14:20:02] *** Joins: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215)
[14:20:14] *** Quits: fanis30 (~fanis30@adsl-11.37.6.3.tellas.gr) (Quit: Leaving)
[14:24:49] <ChrisWarrick> HolyTaint: https://setuptools.readthedocs.io/en/latest/userguide/dependency_management.html#optional-dependencies
[14:27:16] *** Quits: hafat (~hafat@159.146.87.68) (Remote host closed the connection)
[14:29:16] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 250 seconds)
[14:33:55] *** Quits: darksun (~darksun@user/darksun) (Ping timeout: 252 seconds)
[14:33:58] <p-i-> How can I trap keyboard input in an async(trio) program? Requiring newline is ok.
[14:35:37] *** Quits: gggp (~textual@221.219.72.60) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:36:36] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi)
[14:37:13] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi) (Ping timeout: 252 seconds)
[14:37:52] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[14:38:18] <HolyTaint> ChrisWarrick, there's a problem, without either of the dependencies my program needs it isn't able to work at all
[14:38:28] *** Quits: zBeeble (~zBeeble@2001:1928:1::35) (Remote host closed the connection)
[14:38:30] <HolyTaint> so dunno if optional dependencies might be the suitable case
[14:38:39] <ChrisWarrick> HolyTaint: if that happens, you’ll need to tell your user to install the appropriate package
[14:38:41] *** Joins: rsx (~dummy@ppp-188-174-142-175.dynamic.mnet-online.de)
[14:38:53] *** Joins: zBeeble (~zBeeble@2001:1928:1::35)
[14:39:14] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 250 seconds)
[14:39:17] <HolyTaint> ChrisWarrick, gotcha
[14:40:58] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:41:24] *** Joins: mickey (~user@user/mickey)
[14:41:59] *** Quits: kcrk (~kcrk@user/kcrk) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[14:42:28] *** Joins: kcrk (~kcrk@user/kcrk)
[14:43:40] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-39b4-e23c-b23f-7386.res6.spectrum.com) (Ping timeout: 240 seconds)
[14:43:52] *** Joins: gggp (~textual@60.10.23.160)
[14:44:28] *** Joins: gruuf (~gruuf@94.31.99.29)
[14:45:32] *** tuxifreund is now known as tuxifreund`
[14:45:42] *** tuxifreund` is now known as tuxifreund
[14:51:16] *** Joins: xcombelle (~xavie@176-139-252-198.abo.bbox.fr)
[14:53:21] *** Joins: Archenfield (~textual@2405:6580:8e60:4600:9947:352c:3e4:b142)
[14:56:24] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:57:14] *** Joins: p4rpc (~p4rpc@89-69-17-47.dynamic.chello.pl)
[14:59:11] *** Joins: georgios (~georgios@user/georgios)
[15:00:22] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::4433)
[15:00:52] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[15:02:17] *** Joins: wyclif (~wyclif@user/wyclif)
[15:07:10] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 240 seconds)
[15:07:46] *** Joins: wyclif (~wyclif@user/wyclif)
[15:08:58] *** Joins: darksun (~darksun@user/darksun)
[15:09:24] *** Quits: canton7 (canton7@about/csharp/canton7) (Quit: ZNC - http://znc.in)
[15:10:13] *** Joins: canton7 (canton7@about/csharp/canton7)
[15:12:11] <p-i-> https://bpa.st/GZFQ <-- can anyone see why this code isn't trapping terminal input?
[15:12:25] *** Quits: wyclif (~wyclif@user/wyclif) (Ping timeout: 252 seconds)
[15:13:14] <dale> p-i-: That while loop immediately exits if there's nothing to read, right?
[15:13:15] *** Joins: wyclif (~wyclif@user/wyclif)
[15:13:24] *** Joins: ice9 (~ice9@user/ice9)
[15:13:47] <dale> Like you do that select once, you've got timeout 0 so if stdin isn't immediately readable, the loop exits and kbinput exits, never to be called again?
[15:14:54] <dale> Also, calling select in a Trio function seems odd to me, shouldn't you just be doing something like an async Trio read call and waiting for Trio to return control to your function when the read can proceed?  I would have guessed that's how it'd work, at least.
[15:17:33] *** Joins: Atque (~Atque@user/atque)
[15:19:18] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:20:32] *** Joins: retrograde (retrograde@gateway/vpn/protonvpn/retrograde)
[15:20:40] *** Quits: retrograde (retrograde@gateway/vpn/protonvpn/retrograde) (Remote host closed the connection)
[15:21:35] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[15:24:05] *** Quits: khrbt (~znc@user/khrbt) (Ping timeout: 252 seconds)
[15:24:22] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[15:24:57] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[15:25:52] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Ping timeout: 244 seconds)
[15:26:17] *** Joins: lxer (~lx@ip5f5bf666.dynamic.kabel-deutschland.de)
[15:26:21] *** Joins: khrbt (~znc@user/khrbt)
[15:28:22] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[15:28:33] *** Joins: jazzy (~jaziz@2600:380:863c:4fce:20a0:52d4:968d:eb40)
[15:32:58] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Ping timeout: 250 seconds)
[15:33:16] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[15:33:55] *** Quits: PJBoy (~PJBoy@user/pjboy) (Quit: Ping timeout: 252 seconds)
[15:34:06] *** Joins: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net)
[15:35:31] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[15:36:55] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:37:34] *** Joins: fikran (~fikran@user/fikran)
[15:40:28] *** Quits: Archenfield (~textual@2405:6580:8e60:4600:9947:352c:3e4:b142) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:40:54] *** Quits: gggp (~textual@60.10.23.160) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:43:00] *** Joins: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[15:43:44] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[15:45:10] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[15:45:33] *** Joins: gggp (~textual@123.113.180.13)
[15:45:45] *** Quits: dalan62 (~dalan@14-203-203-26.tpgi.com.au) (Ping timeout: 248 seconds)
[15:45:58] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[15:46:32] *** Quits: paulman (~kulernil@gateway/tor-sasl/kuler) (Ping timeout: 244 seconds)
[15:47:20] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:d099:ff1b:cb18:435e) (Quit: Textual IRC Client: www.textualapp.com)
[15:47:23] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[15:48:11] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-58c384-213.dhcp.inet.fi)
[15:50:06] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:5dbe:cfd7:aedc:da9) (Quit: Leaving)
[15:50:30] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:50:38] <gloomy> What's the "best" way to cache information in a function that gets called many times but has an expensive precomputation that only needs to happen once? Assign the results to a global variable? Make it a class and store the results in an attribute? higher-order function?
[15:51:22] <bjs> gloomy: use functools.cache
[15:51:32] <gloomy> (obviously best is subjective but I'm wondering what the most common solution is)
[15:51:47] *** Quits: roadt (~roadt@36.5.216.242) (Ping timeout: 268 seconds)
[15:52:02] <gloomy> bjs: no, that's to cache the entire function call (unless there's other ways to use it than what I know)
[15:52:46] <bjs> gloomy: oh like you only want *some* of the function computation to get saved
[15:53:03] <p-i-> dale: Just got this, thanks!
[15:53:19] <gloomy> say my function is something like `def f(smth): d = very_expensive_computation(); return d[smth]`
[15:53:40] <bjs> gloomy: well for that case you can put the @cache on the very_expensive_computation def
[15:54:31] <bjs> gloomy: if it's something more arbitrary I'd probably make a class,  that's usually the way to persist state
[15:55:20] *** Quits: gggp (~textual@123.113.180.13) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:55:33] <gloomy> mmmh, yes makes sense to put the expensive computation in its own function and cache that one
[15:57:02] *** Joins: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:59:54] *** Quits: torandu (~sean@94.10.125.197) (Quit: leaving)
[16:01:22] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 252 seconds)
[16:03:33] *** Joins: damxsa (~damx@2001:16a2:cd07:7e00:c69c:ea15:4679:2b93)
[16:03:54] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Quit: leaving)
[16:04:11] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[16:05:06] *** Joins: gggp (~textual@60.10.23.160)
[16:05:44] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[16:08:10] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:08:28] *** Quits: damxsa (~damx@2001:16a2:cd07:7e00:c69c:ea15:4679:2b93) (Quit: Leaving)
[16:08:52] *** Joins: damxsa (~damx@2001:16a2:cd07:7e00:c69c:ea15:4679:2b93)
[16:09:40] *** Quits: gggp (~textual@60.10.23.160) (Ping timeout: 268 seconds)
[16:12:54] *** Quits: damxsa (~damx@2001:16a2:cd07:7e00:c69c:ea15:4679:2b93) (Client Quit)
[16:15:40] *** Quits: hyper_dave (~hyper_dav@197.156.107.167) (Ping timeout: 252 seconds)
[16:15:42] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[16:16:42] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:17:59] *** Joins: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi)
[16:18:56] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[16:19:02] *** Quits: nedbat (~nedbat@python/psf/nedbat) (Quit: ZNC - http://znc.in)
[16:19:28] *** Quits: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi) (Client Quit)
[16:20:04] *** Joins: nedbat (~nedbat@python/psf/nedbat)
[16:21:12] *** Joins: c10l (~c10l@89.34.167.207)
[16:21:51] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[16:22:40] *** Quits: nedbat (~nedbat@python/psf/nedbat) (Client Quit)
[16:22:52] *** Joins: hyper_dave (~hyper_dav@197.156.107.167)
[16:24:15] <p-i-> Does anyone know how to gracefully quit in trio? sys.exit() just hangs it (and I can't ctrl+c out)
[16:24:18] *** Joins: nedbat (~nedbat@python/psf/nedbat)
[16:24:28] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 252 seconds)
[16:24:31] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:24:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[16:25:01] *** Joins: magla (~gelignite@55d4e32c.access.ecotel.net)
[16:27:02] *** Joins: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi)
[16:27:15] *** Quits: nomic (~nomic@185.192.69.192) (Quit: Leaving)
[16:27:31] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[16:27:35] * enyc meows
[16:27:51] *** Joins: portalrat (~portalrat@user/portalrat)
[16:28:37] *** Quits: goepsilongo (~goepsilon@2603-7000-ab00-62ed-1cf8-2891-43b9-94ea.res6.spectrum.com) (Quit: Textual IRC Client: www.textualapp.com)
[16:29:25] *** Quits: the-mask (~the-mask@user/the-mask) (Ping timeout: 268 seconds)
[16:30:43] * p-i- meows
[16:32:01] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[16:33:20] <jinsun> aphysically: now make it not complain with `mypy --strict` also
[16:35:04] *** Joins: cheater (~Username@user/cheater)
[16:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.2)
[16:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[16:39:28] *** Joins: gggp (~textual@221.219.72.60)
[16:40:08] *** Joins: EGH (~EGH@185.25.195.104)
[16:40:36] *** Quits: gggp (~textual@221.219.72.60) (Client Quit)
[16:44:42] *** Quits: brylie (~Thunderbi@88-114-218-113.elisa-laajakaista.fi) (Quit: brylie)
[16:46:05] *** Joins: gggp (~textual@221.219.72.60)
[16:46:12] *** Quits: Auron (~Auron956@user/auron) (Ping timeout: 250 seconds)
[16:47:08] *** Joins: jan1 (~jan@user/jan1)
[16:51:34] <jan1> a noobie here, I made a Car class, and I made another Board class in which one of its method I will need to pass a car object. how can I type hint an argument to be a car object?
[16:54:54] <jinsun> you do it just like you do for a built in type, nothing special for custom classes
[16:55:54] *** Joins: MrAlexBailey (~Alex@104-11-73-100.lightspeed.tukrga.sbcglobal.net)
[16:57:34] <jan1> but I want to type hint the arguemnt. I know how to pass the car object. I think I need to use typing.NewType() but I'm not sure if that's how it's done and how
[16:59:46] *** Joins: lapno (~lapno@eoh163.neoplus.adsl.tpnet.pl)
[17:01:48] *** Quits: gloomy_desktop (~ldorigo@81.161.149.37) (Ping timeout: 250 seconds)
[17:02:56] <jan1> ohh ok I got what you mean now, thanks!
[17:04:19] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[17:06:37] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Ping timeout: 244 seconds)
[17:06:58] *** Joins: DrBrownBear (~DrBrownbe@2600:1700:9aa1:6bc0:a1ee:580f:99d8:c5bc)
[17:09:24] *** Joins: Naan (~naan@user/naan)
[17:12:01] *** Joins: shangxiao (~davids@124.182.71.141)
[17:17:45] *** Quits: sri19 (uid477846@id-477846.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[17:19:25] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:19:34] *** Quits: georgios (~georgios@user/georgios) (Ping timeout: 250 seconds)
[17:19:58] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:20:01] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Client Quit)
[17:21:42] *** Quits: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net) (Remote host closed the connection)
[17:22:12] *** Quits: Nact (~l@2a02:a03f:c0b0:f600:3253:5994:1b4f:e854) (Ping timeout: 258 seconds)
[17:22:16] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:22:32] *** Joins: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net)
[17:24:56] *** Joins: cthulchu (~Cthulchu@94.153.89.70)
[17:25:24] *** Quits: cthulchu (~Cthulchu@94.153.89.70) (Read error: Connection reset by peer)
[17:25:30] *** Joins: cthulchu_ (~Cthulchu@94.153.89.70)
[17:28:42] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[17:28:52] *** Joins: ulu (~ulu@user/ulu)
[17:28:59] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[17:32:12] *** Quits: gggp (~textual@221.219.72.60) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:32:51] *** Joins: Linux77 (~kvirc@187-126-71-30.user3p.veloxzone.com.br)
[17:33:52] *** Joins: Lisyn (~lisyn@user/deepspace-link)
[17:36:35] *** Quits: HolyTaint (~HolyTaint@gateway/tor-sasl/holytaint) (Ping timeout: 244 seconds)
[17:37:21] *** Joins: HolyTaint (~HolyTaint@gateway/tor-sasl/holytaint)
[17:39:47] *** Quits: molt (~molt@79.140.150.21) (Read error: Connection reset by peer)
[17:39:48] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[17:40:11] *** Joins: molt (~molt@79.140.150.21)
[17:42:19] *** Quits: EvilDMP (~textual@django/moderator/EvilDMP) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:42:40] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 240 seconds)
[17:42:49] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[17:43:03] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:43:49] *** Joins: georgios (~georgios@user/georgios)
[17:45:08] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[17:45:22] *** Quits: jan1 (~jan@user/jan1) (Quit: WeeChat 3.0.1)
[17:46:15] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[17:47:26] *** Joins: fikran (~fikran@user/fikran)
[17:47:43] <lxer> these are topics a noobie should avoid, imho.
[17:48:23] <grym> type annotations? no, that's good imo
[17:48:33] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:70b0:8bd4:3605:ce5c)
[17:48:55] *** Joins: EvilDMP (~textual@django/moderator/EvilDMP)
[17:50:01] *** Quits: cthulchu_ (~Cthulchu@94.153.89.70) (Ping timeout: 248 seconds)
[17:50:04] <nedbat> lxer: why do think they should avoid them?
[17:52:21] *** Joins: emika2 (~emika@83.136.182.18)
[17:53:37] *** Quits: welrmaron (~welrmaron@sigterm.xyz) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[17:53:50] *** Joins: welrmaron (~welrmaron@sigterm.xyz)
[17:54:07] *** Quits: emika (~emika@185.207.249.81) (Ping timeout: 252 seconds)
[17:54:07] *** emika2 is now known as emika
[17:56:03] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:56:11] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[17:56:19] *** Quits: welrmaron (~welrmaron@sigterm.xyz) (Client Quit)
[17:56:32] *** Joins: welrmaron (~welrmaron@sigterm.xyz)
[17:57:23] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[18:00:10] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:00:16] *** Quits: mossman93 (~quassel@user/mossman93) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:00:59] *** Joins: besnn (~besnn@user/besnn)
[18:01:09] *** Joins: mossman93 (~quassel@user/mossman93)
[18:03:43] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[18:03:56] *** Quits: Doffi (~doffi@91.132.197.188) (Read error: Connection reset by peer)
[18:04:14] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[18:05:21] *** Quits: someguy1233 (~someguy@user/someguy123) (Quit: someguy1233)
[18:05:50] *** Joins: someguy123 (~someguy@user/someguy123)
[18:06:38] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[18:06:44] *** Joins: osxtra (~root@136.49.108.80)
[18:11:35] <graingert[m]> <jan1> "but I want to type hint the..." <- Have you tried making a https://mypy-play.net demo?
[18:12:36] <graingert[m]> NewType would be if you wanted to proof carry a check on a car eg RoadSafeCar = NewType("RoadSafeCar", Car)
[18:12:38] *** georgios is now known as megas_malakas
[18:13:08] *** Quits: shgvbvri (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: shgvbvri)
[18:13:11] <graingert[m]> Then you might make a `def check_safe(car: Car) -> RoadSafeCar | None: ...`
[18:13:31] <graingert[m]> So you don't need it here necessarily
[18:14:22] *** Joins: the-mask (~the-mask@user/the-mask)
[18:14:32] <graingert[m]> Mostly I use NewType for str validation
[18:14:38] <graingert[m]> Eg HtmlSafeStr
[18:15:01] *** Quits: hyper_dave (~hyper_dav@197.156.107.167) (Ping timeout: 252 seconds)
[18:16:09] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[18:16:15] *** Joins: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net)
[18:16:16] *** Joins: CoolerX (~CoolerX@user/coolerx)
[18:17:11] *** Joins: hyper_dave (~hyper_dav@197.156.107.167)
[18:18:30] *** Quits: megas_malakas (~georgios@user/georgios) (Ping timeout: 250 seconds)
[18:20:25] *** Quits: bfoley (~bfoley@pool-173-48-101-113.bstnma.fios.verizon.net) (Ping timeout: 248 seconds)
[18:20:31] *** Quits: driib (~driib@185.195.233.163) (Ping timeout: 252 seconds)
[18:20:44] *** Joins: driib (~driib@185.195.233.163)
[18:22:06] *** Parts: wyclif (~wyclif@user/wyclif) ()
[18:22:20] *** Joins: varaindemian (uid73404@id-73404.charlton.irccloud.com)
[18:24:29] <the-mask> hello, can somebody take a look please ? https://bpa.st/WGPQ
[18:24:41] *** Quits: Lisyn (~lisyn@user/deepspace-link) (Remote host closed the connection)
[18:25:22] *** Joins: plastico (~plastico@neomutt/plastico)
[18:26:56] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-ed71-0a19-f20f-b92d.res6.spectrum.com)
[18:27:57] <rendar> does poetry uses asyncio under the hoods to install multiple packages? or threads?
[18:29:18] *** Joins: akk (~akk@174-28-98-206.albq.qwest.net)
[18:29:30] *** Quits: CoolerX (~CoolerX@user/coolerx) (Remote host closed the connection)
[18:29:36] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[18:29:58] *** Joins: CoolerX (~CoolerX@user/coolerx)
[18:31:37] <jinsun> a quick grep of the code suggests threads
[18:32:21] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 258 seconds)
[18:32:43] <jinsun> because there is no await happening, and ThreadPoolExecutor is used in some places
[18:33:36] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:33:52] *** Joins: gggp (~textual@221.219.72.60)
[18:34:58] *** Quits: Jefren4 (~Jefren@70.35.66.70) (Ping timeout: 250 seconds)
[18:35:44] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[18:37:04] *** Joins: Jefren4 (~Jefren@70.35.67.44)
[18:38:46] *** Quits: thurs8 (~thurs@ip68-228-237-69.ph.ph.cox.net) (Read error: Connection reset by peer)
[18:39:27] *** Joins: Jefren (~Jefren@70.35.67.123)
[18:40:16] *** Quits: jess (~jess@libera/staff/jess) (Quit: brb real quick)
[18:40:41] *** Joins: jess (~jess@libera/staff/jess)
[18:41:07] *** Joins: thurs8 (~thurs@ip68-228-237-69.ph.ph.cox.net)
[18:42:17] *** Quits: Jefren4 (~Jefren@70.35.67.44) (Ping timeout: 248 seconds)
[18:42:46] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 250 seconds)
[18:42:52] *** Joins: kZel (~kZel@90.199.64.48)
[18:43:30] *** Joins: Jefren1 (~Jefren@70.35.66.69)
[18:43:53] *** Quits: Jefren (~Jefren@70.35.67.123) (Ping timeout: 248 seconds)
[18:43:56] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:44:43] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 252 seconds)
[18:46:22] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[18:46:22] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[18:47:05] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[18:47:38] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[18:51:00] *** Quits: sudomannn (~sudomann@86.106.143.206) (Ping timeout: 250 seconds)
[18:51:23] *** Quits: ihaveamac (~ihaveamac@ihaveahax.net) (Quit: fail)
[18:51:53] *** Quits: p4rpc (~p4rpc@89-69-17-47.dynamic.chello.pl) (Ping timeout: 248 seconds)
[18:51:53] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[18:52:16] *** Joins: ihaveamac (~ihaveamac@ihaveahax.net)
[18:52:37] <bjs> the-mask: what are we looking at here
[18:54:38] *** Quits: ulu (~ulu@user/ulu) (Quit: Leaving)
[18:55:34] *** Quits: gggp (~textual@221.219.72.60) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:56:45] <the-mask> bjs: in short, I want to create an object of type tksheet and modify each row with different values of variables
[18:57:18] <bjs> the-mask: what is a tksheet?
[18:57:57] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[18:58:11] <the-mask> bjs, tksheet is a Python tkinter table widget written in pure python. It is licensed under the MIT license.
[18:58:22] <bjs> the-mask: oh some library or something okay
[18:59:42] <the-mask> bjs, yes; I calculate the variables in other functions and each time I change the quantities, articles, etc, I want to add/write to another row of tksheet object
[19:00:25] *** Joins: audiophile_ (~audiophil@user/audiophile)
[19:00:40] <bjs> the-mask: is https://github.com/ragardner/tksheet the library?
[19:01:06] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-def8-5e99-ae61-1013.res6.spectrum.com)
[19:01:17] *** Quits: audiophile_ (~audiophil@user/audiophile) (Client Quit)
[19:01:34] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:01:36] <bjs> the-mask: oh this demo() thing is the `class demo` from https://github.com/ragardner/tksheet/blob/master/DOCUMENTATION.md ?  you copy/pasted it somewhere?
[19:02:01] <the-mask> bjs, and I'm not able to figure if this is even possible; somebody on the channel gave me some hints a while ago and said it should be possible - but I cannot figure it ...
[19:02:16] *** Quits: kosh_000__ (~kosh@user/kosh) (Ping timeout: 250 seconds)
[19:03:10] <the-mask> bjs, yes, the main "demo" class is part of my script; I create tk_sheet_data as an object of demo() class;
[19:03:47] <bjs> the-mask: I can't see why it wouldn't be possible so far, it looks like a tksheet.Sheet object has a .add_row() method that you can call
[19:03:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[19:03:58] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[19:04:55] *** Joins: kosh_000__ (~kosh@user/kosh)
[19:07:32] *** Joins: dez (uid92154@user/dez)
[19:08:41] *** Joins: CoolerX (~CoolerX@user/coolerx)
[19:10:18] <the-mask> bjs, and it is obvious - each time the function is called it just opening another tksheet instance; what I want is opening once and after, just keep adding/modifying the rows; but, if I instantiate outside my function, it is messing with the other functions which are calculating the variables; also, if instantiating via another function, I receive the tk_sheet_data is not defined; I've tried making tk_sheet_data (the object) as a global variable; in
[19:10:19] <the-mask> any case, after creating the tk_sheet_data object, when trying print(type(tk_sheet_data)) - result is ! "str" so trying tk_sheet_data.sheet.set_row_data reports - "str" doesn't have a sheet method .....   -
[19:10:43] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[19:13:27] *** Quits: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[19:13:49] <the-mask> bjs, I'm not sure the .add_row() method is what I need; I create object by default with a matrix of 50 rows by 6 columns ....; what I want ( populating the cells with different values ) is done with .set_row_data() method ...
[19:13:54] *** Quits: jess (~jess@libera/staff/jess) ()
[19:14:15] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[19:15:00] <bjs> the-mask: it's really hard to know what's going on because most of the code is hidden
[19:15:19] <the-mask> bjs, or with .set_cell_data - at a cell level; but for me, it makes sense to do it by row ...
[19:17:25] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[19:18:53] <the-mask> bjs, true - there is little documentation and the library is quite complex; and is exceeding my current level anyway; 90% of what I've done so far is functional programming; I just started messing out with OOP and classes because some of the code I want to use is written OOP style by advanced programmers
[19:19:22] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[19:19:50] *** Joins: Midjak (~Midjak@82-65-111-221.subs.proxad.net)
[19:20:11] <bjs> the-mask: yes you keep saying do it by row but that's why i suggest .add_row()?  I'm a little confused what it is you want or what is going on without being able to see more of the code (or at least see what this `demo` thing is?)
[19:21:01] *** Quits: akk (~akk@174-28-98-206.albq.qwest.net) (Ping timeout: 252 seconds)
[19:21:16] <the-mask> bjs, but in short, is it possible to modify an object with an outside function ?
[19:21:28] <the-mask> bjs, can I post screenshots somewhere ?
[19:21:40] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 240 seconds)
[19:22:38] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 250 seconds)
[19:22:40] *** Quits: MrAlexBailey (~Alex@104-11-73-100.lightspeed.tukrga.sbcglobal.net) (Ping timeout: 252 seconds)
[19:23:18] *** Quits: p-i- (~Ohmu@2403:6200:8870:41ad:28d8:8f42:2ccb:ec5d) (Read error: Connection reset by peer)
[19:23:57] *** Joins: p-i- (~Ohmu@171.6.227.183)
[19:24:48] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 250 seconds)
[19:25:02] <bjs> the-mask: sure it's possible, `def f(a_sheet): a_sheet.add_row(...)` for example
[19:25:14] <bjs> the-mask: I guess? I don't know what website people use for screenshots these days
[19:27:04] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 252 seconds)
[19:27:25] <the-mask> bjs, look, the demo function is doing this window - https://paste.pics/7670d59ef44cb81eb747fac1f9459ffb ; I tuned some cells, but by default is populating with automatic data ...
[19:28:02] <bjs> the-mask: I can't see your code so it's hard to help
[19:28:15] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[19:30:51] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[19:32:09] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Quit: robotnik~~)
[19:32:28] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[19:32:44] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[19:32:57] *** Joins: besnn (~besnn@user/besnn)
[19:33:24] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Remote host closed the connection)
[19:33:54] *** Quits: Jefren1 (~Jefren@70.35.66.69) (Ping timeout: 250 seconds)
[19:34:02] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[19:36:05] *** Joins: Jefren1 (~Jefren@70.35.66.224)
[19:36:55] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[19:38:14] *** Joins: zeden (~zeden@user/zeden)
[19:40:25] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Quit: robotnik~~)
[19:40:57] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[19:41:04] *** Quits: drmessano (sid104353@user/drmessano) (Quit: Updating details, brb)
[19:41:18] *** Joins: drmessano (drmessano@user/drmessano)
[19:41:22] *** Quits: Jefren1 (~Jefren@70.35.66.224) (Ping timeout: 252 seconds)
[19:41:40] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Remote host closed the connection)
[19:41:49] *** Quits: p-i- (~Ohmu@171.6.227.183) (Read error: Connection reset by peer)
[19:41:52] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[19:42:06] *** Joins: p-i- (~Ohmu@171.6.227.183)
[19:43:02] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Client Quit)
[19:43:07] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[19:43:37] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[19:44:08] *** Quits: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) (Quit: Leaving.)
[19:44:24] *** Joins: Jefren1 (~Jefren@70.35.66.51)
[19:46:03] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[19:54:55] *** Joins: pycurious (~Adium@user/pycurious)
[19:55:08] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 250 seconds)
[19:55:59] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Quit: robotnik~~)
[19:56:10] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 240 seconds)
[19:56:33] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[19:57:08] *** Joins: fikran (~fikran@user/fikran)
[19:58:18] *** Joins: nomic (~nomic@185.192.69.192)
[20:01:36] *** Joins: zebrag (~chris@user/zebrag)
[20:01:40] *** Quits: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Quit: robotnik~~)
[20:02:13] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[20:02:43] *** Joins: entuland (~entuland@user/entuland)
[20:11:51] *** Joins: CoolerX (~CoolerX@user/coolerx)
[20:12:28] *** Joins: hnOsmium0001 (uid453710@id-453710.stonehaven.irccloud.com)
[20:13:58] <gitesh> Does scope of a variable depends on the way it is reference to?
[20:18:12] *** Quits: Gerula (~Gerula@user/gerula) (Read error: Connection reset by peer)
[20:20:25] *** Joins: milosz_ (~milosz@user/milosz)
[20:21:20] <nedbat> gitesh: no
[20:21:35] <nedbat> gitesh: variables are scoped to the functions they are created in
[20:25:54] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 250 seconds)
[20:26:11] <gitesh> nedbat: but we are passing values as an argument to function
[20:26:18] <gitesh> They are aliases right?
[20:26:31] <gitesh> So function can change it if it is mutable
[20:26:33] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:27:51] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[20:28:49] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:29:16] *** Joins: mickey (~user@user/mickey)
[20:29:25] *** Joins: bilb_ono_ (~alexmarsh@ip68-6-69-149.sb.sd.cox.net)
[20:30:52] *** Quits: bilb_ono (~alexmarsh@ip68-6-69-149.sb.sd.cox.net) (Ping timeout: 252 seconds)
[20:30:52] *** bilb_ono_ is now known as bilb_ono
[20:33:40] <nedbat> gitesh: the function can mutate the value if it is mutable, yes.  But that's not about the scope of the variable.
[20:34:50] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[20:36:41] <the-mask> bjs, thanks anyway, I'll keep diggin' ....
[20:40:02] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Quit: Leaving)
[20:40:06] *** Joins: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838)
[20:45:24] *** Quits: molt (~molt@79.140.150.21) (Ping timeout: 250 seconds)
[20:45:30] *** Quits: nomic (~nomic@185.192.69.192) (Quit: Leaving)
[20:50:38] *** Joins: monkey_ (~user@190.104.116.134)
[20:50:41] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[20:50:41] *** Quits: AlanMD (~AlanMD@5-12-8-103.residential.rdsnet.ro) (Quit: ZZZzzz…)
[20:52:26] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[20:53:18] *** Quits: Voxel (~Voxel@ip178-67-155-188.onego.ru) (Quit: Client closed)
[20:53:28] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[20:53:32] *** Joins: jmft2 (~jmft2@81.149.115.87.dyn.plus.net)
[20:54:05] *** Joins: rosborn (~richard@c-73-73-179-235.hsd1.il.comcast.net)
[20:57:38] *** Quits: fedenix_ (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[20:57:58] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[21:00:03] *** Joins: nomic (~nomic@185.192.69.192)
[21:01:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:01:22] *** Joins: AlanMD (~AlanMD@5-12-8-103.residential.rdsnet.ro)
[21:07:25] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[21:08:14] *** Joins: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net)
[21:08:57] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[21:08:59] *** Joins: Pixi_ (~Pixi@user/pixi)
[21:09:00] *** ShowDonkey is now known as mpmc
[21:12:09] *** Quits: AlanMD (~AlanMD@5-12-8-103.residential.rdsnet.ro) (Ping timeout: 248 seconds)
[21:12:16] *** Quits: Pixi (~Pixi@user/pixi) (Ping timeout: 250 seconds)
[21:13:21] *** Quits: jazzy (~jaziz@2600:380:863c:4fce:20a0:52d4:968d:eb40) (Ping timeout: 258 seconds)
[21:13:29] *** Quits: asix (~Anders@user/asix) (Quit: leaving)
[21:13:46] *** Quits: stevieh (~skrodzki@p2e584735.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[21:15:58] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[21:17:28] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 250 seconds)
[21:18:51] *** Joins: Pixi__ (~Pixi@user/pixi)
[21:21:19] *** Joins: brelod (~me@87.74.198.187)
[21:22:14] *** Quits: Pixi_ (~Pixi@user/pixi) (Ping timeout: 250 seconds)
[21:23:18] *** Quits: brelod (~me@87.74.198.187) (Client Quit)
[21:24:01] <jmft2> What is the best library for rendering markdown to html? I'm using https://pypi.org/project/Markdown/ but it doesn't seem to have very good support for code blocks using ```
[21:24:37] <jmft2> Ideally something that has support for syntax highlighting when I do ```y = python some_python_code(x)```
[21:24:49] <jmft2> Sorry I mean ```python y = f(x) ```
[21:27:45] *** Joins: brelod (~me@87.74.198.187)
[21:28:24] <jpds> jmft2: Look at what https://blog.getpelican.com/ does?
[21:29:55] *** Quits: fortuno51 (~fortuno51@78.10.204.254) (Remote host closed the connection)
[21:30:11] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[21:30:44] <rosborn> Is there a canonical way to put a subclass in the ‘namespace’ of a superclass? Something like this: https://bpa.st/FD3Q
[21:30:49] <jmft2> jpds, I shall, thanks. I need (I think) a dynamic website but the internals should be nice enough
[21:31:13] *** Joins: Auron (~Auron956@user/auron)
[21:34:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[21:35:36] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Quit: This computer has gone to sleep)
[21:36:50] *** Quits: HolyTaint (~HolyTaint@gateway/tor-sasl/holytaint) (Ping timeout: 244 seconds)
[21:37:05] <bjs> rosborn: no, infact classes very rarely get used as namespaces because they don't really work very well as namespaces
[21:37:19] *** Quits: kZel (~kZel@90.199.64.48) ()
[21:37:32] <bjs> rosborn: you can go `Car.Sedan = Sedan` after you've defined all the classes if you want,  just making "Sedan" a normal class attribute
[21:37:57] <bjs> rosborn: but it'd be unusual, usually these kind of hierarchical namespacing is done with modules in Python because of the problems classes have with namespaces
[21:39:16] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[21:39:27] *** Quits: nomic (~nomic@185.192.69.192) (Quit: Leaving)
[21:39:44] <rosborn> yea, I realize the most common implementation would have a car namespace, but for some reason car.Car seems ugly to me.
[21:39:50] <nedbat> rosborn: the typical thing would be to have a "car" module, with classes BaseCar, Sedan, Coupe, then instantiate car.Coupe
[21:39:56] *** Quits: Powerhouse6666 (~Powerhous@2604:3d08:5b7f:e136:95b1:bac0:7698:51de) (Read error: Connection reset by peer)
[21:40:02] <nedbat> rosborn: car.Car is very common in Python
[21:40:20] <nedbat> rosborn: (btw, this is all assuming that Coupe is a subclass of car, which I am not convinced of!)
[21:40:32] *** Joins: Powerhouse6666 (~Powerhous@2604:3d08:5b7f:e136:95b1:bac0:7698:51de)
[21:40:54] <grym> sometimes Coupes are a subclass of Cup
[21:43:11] <lxer> rosborn, you could use one Car class with a few  @classmethod for that. classmethods are for initialisation with different variations.
[21:43:34] <rosborn> I guess just providing a Couple and Sedan initializer would be most pythonic
[21:43:46] <lxer> i dont think so.
[21:44:07] <nedbat> rosborn: what do you mean by initializer?
[21:44:33] <nedbat> rosborn: maybe it makes sense to clarify how Coupe and Sedan would differ?  Perhaps Car(kind="sedan") is better?
[21:45:43] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[21:46:14] *** Joins: linux_dream (~isaac@2a01:e0a:7:60e0:bcc4:b32c:9221:831d)
[21:46:29] *** Joins: fortuno51 (~fortuno51@78.10.204.254)
[21:47:06] *** Joins: nomic (~nomic@185.192.69.192)
[21:47:21] <rosborn> Right, creating an explicit tagged union
[21:48:31] <rosborn> Thanks for the help!
[21:48:32] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[21:49:26] *** Quits: samathy (~samathy@user/samathy) (Read error: Connection reset by peer)
[21:49:38] *** Joins: asix (~Anders@user/asix)
[21:51:18] <nedbat> rosborn: how will the data in an object be different for Coupe and Sedan?
[21:51:40] *** Joins: lordrishav (~LordRisha@user/lordrishav)
[21:52:05] *** Quits: upsala (~zcb@185.213.155.160) (Quit: WeeChat 3.2)
[21:52:51] *** Joins: Betal (~Betal@user/betal)
[21:53:08] <lxer> https://dpaste.org/qJB5 something like this would probably work. If you do it right you then you can add different amounts of arguments and defaults.
[21:53:32] *** Quits: brelod (~me@87.74.198.187) (Remote host closed the connection)
[21:53:32] *** Joins: upsala (~zcb@185.213.155.160)
[21:54:18] *** Joins: brelod (~me@87.74.198.187)
[21:56:00] *** Quits: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215) (Quit: Leaving)
[21:56:07] *** Quits: death916 (AdiIRC@user/death916) (Ping timeout: 252 seconds)
[21:56:27] *** Joins: csevast (~csevast@apu40.neoplus.adsl.tpnet.pl)
[21:56:57] <rosborn> In the example I gave, you could argue there shouldn’t be any, but my mindset is still oriented around ADTs. I’m slowly relearning the standard way of organizing data in python.
[21:56:59] *** Joins: death916 (UserNick@user/death916)
[21:57:16] *** Joins: sudomannn (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[21:58:07] <lxer> adt?
[21:58:26] <rosborn> lxer: Thanks, that’s likely what I’ll end up doing
[21:58:38] <rosborn> algebraic data types
[22:00:22] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 250 seconds)
[22:00:27] *** Quits: aead (~aead@user/aead) (Quit: aead)
[22:01:14] <nedbat> rosborn: how would algebraic data types deal with this?
[22:02:27] *** Joins: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk)
[22:03:43] <the-mask> hello, anyone familiar with tksheet ?
[22:04:02] *** Joins: Akuli (~Akuli@87-94-109-4.bb.dnainternet.fi)
[22:04:37] <aphysically> jinsun: good lord I don't think it's even possible to fix mypy --strict without importing annotations from __future__
[22:04:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 258 seconds)
[22:05:24] <aphysically> (it's not possible to arrange the classes in a manner that would always allow the declare time annotation evaluation)
[22:06:01] *** Quits: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net) (Ping timeout: 252 seconds)
[22:06:16] *** Joins: aead (~aead@user/aead)
[22:06:30] *** Joins: fikran (~fikran@user/fikran)
[22:08:56] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Ping timeout: 258 seconds)
[22:09:54] *** Quits: cdown (~cdown@82-69-42-66.dsl.in-addr.zen.co.uk) (Ping timeout: 250 seconds)
[22:10:12] <jinsun> aphysically: well, it is possible to replicate the behavior of the future import by manually stringifying the annotations (put quotes around it), although that is a bit uglier
[22:11:53] <aphysically> there is one problem I was never able to figure out from yesterday though
[22:12:55] <aphysically> k
[22:13:33] <aphysically> when the code was at this point: https://dpaste.com/5CYYZU3VE
[22:13:42] <aphysically> .scripts/pyffstream.py:513: error: Argument 1 to "initval" has incompatible type "Union[str, Dict[Any, Any]]"; expected "Dict[Any, Any]"
[22:14:05] <aphysically> changing this annotation to just 'dict' fixed it: emptydict: dict[str, typing.Union[str, dict]] = {}
[22:14:12] <aphysically> but I don't understand why this annotation made it think it could be a str
[22:17:22] *** Joins: akk (~akk@174-28-98-206.albq.qwest.net)
[22:17:36] <aphysically> (annotation on line 463)
[22:17:42] *** Quits: emika (~emika@83.136.182.18) (Ping timeout: 250 seconds)
[22:17:45] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 248 seconds)
[22:17:50] <jinsun> dict means dict[Any, Any]
[22:18:01] *** Joins: emika (~emika@185.207.249.107)
[22:18:24] <jinsun> and Any is allowed anywhere even if the annoation says something else
[22:19:14] <aphysically> but it thought it could be a Union[str, Dict[Any, Any]] even though the outer annotation was Dict[blah, blah]
[22:19:32] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[22:19:41] <aphysically> or you mean, it still has the problem it just doesn't throw the error anymore
[22:20:15] <aphysically> I don't understand where the str in the Union[str, Dict[Any, Any]] is coming from
[22:20:40] *** Quits: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa) (Ping timeout: 240 seconds)
[22:20:42] <jinsun> you wrote that in the annotation for emptydict
[22:21:10] <jinsun> ` typing.Union[str, dict]` is `Union[str, Dict[Any, Any]]`
[22:21:20] <aphysically> okay, let me explain what I intended to mean and you can help me understand what I misannotated
[22:21:49] <aphysically> I wanted to annotate a dict with str keys and values that can be either str or dicts themselves (as is what ffprobe outputs)
[22:22:05] <aphysically> so I put Dict[str, dict | str]
[22:22:26] <aphysically> how does it get the inner str outside?
[22:22:27] <jinsun> so that is where the str comes from, the annotation of the value
[22:22:37] <jinsun> dict[key] gives the value
[22:22:58] <jinsun> key is str
[22:23:13] *** Quits: ckdcreation (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Quit: Leaving)
[22:23:15] <jinsun> value is Union[str, Dict[Any, Any]]
[22:23:28] <aphysically> ah okay, so it's when I'm doing ['streams
[22:23:56] *** Quits: aead (~aead@user/aead) (Quit: aead)
[22:24:18] *** Joins: aead (~aead@user/aead)
[22:25:05] <jinsun> on line 513 where you get the error, you are doing `self.filevals["tags"]`, `self.filevals` is `dict[str, str | dict[Any, Any]]`, so `self.filevals["tags"]` will be `str | dict[Any, Any]`
[22:25:33] <aphysically> right I understand now
[22:25:37] *** Quits: nomic (~nomic@185.192.69.192) (Quit: Leaving)
[22:26:05] <aphysically> in actuality this will be either a (possibly empty) dict or a keyerror
[22:26:10] *** Joins: sazawal (~sazawal@182.64.58.123)
[22:26:17] <jinsun> and changing the annotation to dict, makes `self.filevals` be dict[Any, Any], so self.filevals["tags"] becomes Any
[22:26:27] <jinsun> which just siiences mypy
[22:26:37] <jinsun> *silences
[22:27:10] *** Joins: Smedles (~quassel@61-245-148-167.3df594.adl.nbn.aussiebb.net)
[22:27:12] *** Joins: Dotz0cat_ (~Dotz0cat@h171.71.29.71.dynamic.ip.windstream.net)
[22:27:15] *** Joins: rubion (~rubion@cpc124306-ayle4-2-0-cust188.15-2.cable.virginm.net)
[22:27:21] *** Quits: Dotz0cat (~Dotz0cat@h41.199.117.75.dynamic.ip.windstream.net) (Ping timeout: 248 seconds)
[22:28:04] *** Dotz0cat_ is now known as Dotz0cat
[22:28:05] <jinsun> mypy --strict will not allow you to annotate with dict
[22:28:20] <jinsun> you will have to explicitly do dict[Any, Any]
[22:28:23] *** Joins: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be)
[22:28:44] <jinsun> which might make these things clearer
[22:29:52] <aphysically> what's the intention of not allowing dict annotations in strict?
[22:30:12] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[22:30:39] <aphysically> if I annotate the dict I'm not even sure the best way to do it, I initialize the value so it can't have a keyerror and must return a dict in the spot where it complains
[22:30:42] *** Joins: compufreak (~compufrea@2603-6010-4903-d184-0218-d705-fa62-f556.res6.spectrum.com)
[22:30:44] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[22:30:48] *** Quits: aead (~aead@user/aead) (Quit: aead)
[22:31:02] <jinsun> so that you don't accidentally annotate something to Any and disable type checking, just like you did when you tried to "fix" this error
[22:31:14] *** Joins: aead (~aead@user/aead)
[22:31:15] *** Joins: djhankb (~djhankb@208.113.164.68)
[22:31:38] <jinsun> if you really want key and value to be Any, write dict[Any, Any] explicitly, instead of just dict
[22:31:53] <aphysically> oh, I misunderstood I thought you meant it disallows the annotations within dict - yeah okay that makes sense
[22:33:00] <jinsun> ah okay, no you can still use dict, just you will have to give the type of key and value also
[22:33:15] *** Quits: csevast (~csevast@apu40.neoplus.adsl.tpnet.pl) (Quit: IRC for eric IDE)
[22:33:18] *** Joins: cthulchu (~Cthulchu@46.211.59.153)
[22:34:13] <aphysically> I understand its complaint now but I'm not sure the best fix hmmm here's current code: https://dpaste.com/AF2FLQF99
[22:34:30] <aphysically> I mean I clearly initialize those accessed keys to a dict immediately before calling
[22:34:47] <aphysically> (see line 514)
[22:35:19] <aphysically> I'm not sure the best way to communicate this to mypy though (or do it in a different way that mypy understands)
[22:36:09] <aphysically>                 assert isinstance(self.fileargs["tags"],dict) beforehand doesn't fix it
[22:36:45] *** Joins: gustik (~gustik@2a01:c844:2410:9020:63ab:4bb6:83d2:e11b)
[22:37:57] <aphysically> uhhhhh
[22:38:09] <jinsun> I think you can assign the value to another variable before the function call, then do if isinstance(x, str): raise ValueError
[22:38:56] <jinsun> then supply that variable to the function
[22:39:54] <jinsun> mypy should be able to figure out that the type cannot be str because it would have thrown exception before otherwise
[22:40:33] <aphysically> hmmm does this work
[22:41:01] <aphysically> I'm using the fact that the dict being passed to the function is immutable, I think this is still fine since it's a dict within a dict, so modifying that inner dict will modify the outer function still
[22:41:11] <aphysically> let's write a test program
[22:41:35] <jinsun> aphysically: https://mypy-play.net/
[22:42:24] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 250 seconds)
[22:42:29] *** Quits: foureyes (foureyes@brought.to.you.by.bnc4free.com) (Remote host closed the connection)
[22:43:08] <aphysically> yes it's fine okay https://bpa.st/ZS5Q I mean I know this python feature I'm just always paranoid about it
[22:43:57] *** Joins: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it)
[22:45:38] <aphysically> jinsun: that didn't work
[22:45:40] <aphysically> (your suggestion)
[22:46:00] <jinsun> why not use mypy-play.net for pasting, we can check what mypy is doing with a click of a button there
[22:46:15] <aphysically> ok
[22:46:36] *** Joins: thiras (~thiras@user/thiras)
[22:46:48] <aphysically> https://mypy-play.net/?mypy=latest&python=3.9&gist=18c92bc945f5647298e093bc8e80796c
[22:47:25] <aphysically> the first error is similar but I'll fix it later, it's due to the same thing so I'm focused on the line 521 stuff
[22:47:27] *** Joins: Barones (~Barones@2804:7f3:8987:a56:1904:b84d:d454:b1fa)
[22:47:42] *** Quits: weibullguy (DRowland@gateway/vpn/protonvpn/weibullguy) (Remote host closed the connection)
[22:48:21] <jinsun> pass tagdict to initval instead of self.filevals["tags"]
[22:48:22] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Ping timeout: 252 seconds)
[22:48:59] *** Quits: rsx (~dummy@ppp-188-174-142-175.dynamic.mnet-online.de) (Quit: rsx)
[22:49:08] <jinsun> the type of tagdict gets narrowed down, not of the original dict
[22:49:11] *** Joins: CoolerX (~CoolerX@user/coolerx)
[22:50:16] <aphysically> oh
[22:50:18] <aphysically> duh
[22:50:35] *** Joins: Sheilong (uid293653@id-293653.charlton.irccloud.com)
[22:50:38] *** Joins: weibullguy (~DRowland@2600:6c4a:7d00:fe22:4ced:6a14:8bb7:6d54)
[22:50:51] *** Joins: gloomy_desktop (~ldorigo@81.161.149.37)
[22:51:40] *** Joins: Modx3 (~vel@user/modx3)
[22:52:03] <aphysically> but in this case where it's very obviously impossible (due to the assignment *immediately* preceding it), I wonder if it's better to fix it with an assertion
[22:52:22] *** Quits: dontyouloveshort (~julius@2a02:8108:8100:18c4:3d26:df8c:7070:d838) (Ping timeout: 250 seconds)
[22:52:47] <jinsun> I think asserts don't work, mypy doesn't process them
[22:53:10] *** Quits: puff (~user@S0106d4ca6d80a83c.vs.shawcable.net) (Read error: Connection reset by peer)
[22:53:13] <jinsun> or it does but it doesn't narrow down types based on that
[22:53:18] <bjs> it does and it does
[22:53:20] *** Joins: AlanMD (~AlanMD@5-12-8-103.residential.rdsnet.ro)
[22:53:37] <bjs> see https://mypy.readthedocs.io/en/stable/casts.html
[22:53:46] *** Parts: blackout69 (~blackout6@net-2-42-57-150.cust.vodafonedsl.it) ()
[22:53:59] *** Joins: puff (~user@s0106d4ca6d80a83c.vs.shawcable.net)
[22:54:47] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[22:54:57] *** Joins: fassl (~fassl@2a02:8388:1987:9380:c4ee:81c5:625a:a215)
[22:54:59] <aphysically> yeah the assert works: https://mypy-play.net/?mypy=latest&python=3.9&gist=475b927f14e71e799eac647d6d0e8565
[22:56:25] *** Joins: winlundn (nick@2600:3c01::f03c:92ff:fef3:7260)
[22:56:53] <jinsun> ah ok, I somehow remember from past they didn't work for something
[22:57:08] *** Joins: pro_z (~pro_z@37.214.45.81)
[22:57:11] <jinsun> maybe I was asserting wrong, or some mypy bug
[22:58:16] *** Joins: skali (~skali@178.214.254.136)
[22:59:35] *** Joins: foureyes (foureyes@brought.to.you.by.bnc4free.com)
[23:00:34] <bjs> there once was a time where most things in mypy didn't work very well
[23:00:35] *** Quits: AlanMD (~AlanMD@5-12-8-103.residential.rdsnet.ro) (Quit: ZZZzzz…)
[23:00:50] <bjs> i think nowadays it's quite stable
[23:01:18] *** Joins: AlanMD (~AlanMD@5-12-8-103.residential.rdsnet.ro)
[23:02:33] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 248 seconds)
[23:02:46] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 250 seconds)
[23:03:05] *** Joins: yogoyo (~paddy@user/yogoyo)
[23:03:20] *** Quits: skali (~skali@178.214.254.136) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:04:12] *** Joins: cloudbender (~cloudbend@user/cloudbender)
[23:04:33] *** Joins: djapo (~archangel@user/djapo)
[23:04:47] <cloudbender> I have python 2.7.28  is there a way to determine whether I have the 32-bit version versus the 64bit ?
[23:04:59] <cloudbender> -V only cites the version number
[23:05:10] <cloudbender> ... 2.7.18 sorry
[23:05:11] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Ping timeout: 244 seconds)
[23:05:32] <Yhg1s> cloudbender: 'python2 -c "import sys; print(sys.maxsize)"
[23:05:38] *** Joins: Pickchea (~private@user/pickchea)
[23:05:44] <cloudbender> nice lol
[23:06:46] <cloudbender> I'm trying 'PyScipter' and it's tanking on my python version
[23:08:52] *** Joins: Deknos (~someone@user/menace)
[23:09:47] <cloudbender> "python" opens the interpreter and displays the full version info.
[23:09:48] *** Quits: cloudbender (~cloudbend@user/cloudbender) (Quit: Ping timeout (120 seconds))
[23:10:43] *** Joins: nomic (~nomic@185.192.69.192)
[23:12:32] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 245 seconds)
[23:12:33] <aphysically> jinsun: one thing I don't like about mypy is it doesn't recognize typing.NoReturn
[23:12:39] <aphysically> it gives .scripts/pyffstream.py:705: error: Implicit return in function which does not return unless I change it to None
[23:13:32] <aphysically> https://mypy-play.net/?mypy=latest&python=3.9&gist=bb9f9f3d83ae392c3d6e69b1f514722e
[23:14:40] *** Joins: SuperLag (~akulbe@user/superlag)
[23:16:06] <jinsun> that error looks fine, typing.NoReturn doesn't mean that it will implicitly return None, it means that the function will never return and always throw an exception (I don't know how else it would not be able to return)
[23:16:22] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[23:16:53] <aphysically> ooohhhhh
[23:17:14] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[23:17:49] <aphysically> ok then
[23:17:56] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[23:18:28] <jinsun> just use -> None when you want it to implicitly return None
[23:19:43] <aphysically> yeah, let's see if I can fix some of these strict errors too a lot of them aren't so bad
[23:20:04] *** Quits: grym (~grym@user/grym) (Quit: leaving)
[23:20:23] *** Joins: grym (~grym@user/grym)
[23:21:31] *** Joins: stealth_ (~stelath_@216-197-160-97.regn.static.sasknet.sk.ca)
[23:21:36] *** Quits: brelod (~me@87.74.198.187) (Quit: leaving)
[23:22:02] <stealth_> any way to install a package that overrides python stdlib module?
[23:23:32] *** Joins: abrantesasf (~abrantesa@2804:14d:b086:4b3c:2e56:dcff:fedb:62f)
[23:24:21] <jinsun> I think with .pth files you can, see https://docs.python.org/3/library/site.html
[23:25:07] <jinsun> I have not tried it but I have seen some packages do it
[23:25:24] <stealth_> jinsun, ok, thanks, will look into it
[23:26:11] <jinsun> it is a bit too hacky though and if you get any exception when your hack is running it is hard to debug
[23:26:16] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 268 seconds)
[23:27:07] *** Joins: SuperLag (~akulbe@user/superlag)
[23:28:03] <Yhg1s> cloudcell: the full version info is sys.version.
[23:28:09] <Yhg1s> cloudcell: but it doesn't say whether it's 32-bit or 64.
[23:28:37] *** Joins: cedric (~cedric@2a01:cb11:867:c200:6715:8359:406a:198a)
[23:28:40] *** Quits: fortuno51 (~fortuno51@78.10.204.254) (Remote host closed the connection)
[23:28:50] <Yhg1s> cloudcell: sorry, that was for cloudbender, who left.
[23:30:37] *** Joins: fortuno51 (~fortuno51@78.10.204.254)
[23:31:26] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:31:53] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 248 seconds)
[23:32:07] *** Joins: SuperLag (~akulbe@user/superlag)
[23:34:36] <de-facto> how do i remove all characters in one string that occur in a second string most efficiently (will be hotspot)?
[23:35:31] <aphysically> awwwww mypy doesn't like me assigning undeclared values to a class I made to hold random encode vars ;[
[23:35:39] *** Quits: ledtc (~ledtc@c-f8aa70d5.014-57-6c756e3.bbcust.telenor.se) (Quit: Client closed)
[23:35:50] <jinsun> yeah no monkeypatching
[23:35:56] *** Quits: Powerhouse6666 (~Powerhous@2604:3d08:5b7f:e136:95b1:bac0:7698:51de) (Remote host closed the connection)
[23:36:02] *** Quits: acresearch (~acresearc@user/acresearch) (Quit: WeeChat 2.8)
[23:36:26] <aphysically> I mean I guess I can pre-init the values I intend to use
[23:37:35] <de-facto> what i want to do is replacing a table cell values
[23:37:37] <aphysically> I guess I have to initialize them too I can't just mention their type
[23:37:51] *** Joins: pycurious (~Adium@user/pycurious)
[23:37:53] <de-facto> maybe i need to apply an array of regular expressions and only the matching ones will change cells?
[23:38:07] <de-facto> because i am going to have multiple classes of patterns in the cells
[23:38:43] *** Quits: mattil (~mattil@87-92-132-211.rev.dnainternet.fi) (Quit: Leaving)
[23:38:49] *** Quits: SuperLag (~akulbe@user/superlag) (Ping timeout: 248 seconds)
[23:39:04] <aphysically> apparently I don't have to declare it
[23:39:12] <aphysically> or uh initialize
[23:39:18] <aphysically> self.kf_int: str satisfies it
[23:39:22] <aphysically> within an __init__
[23:41:07] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[23:42:40] <jinsun> even better will be to use dataclass and avoid writing an init
[23:42:46] *** Joins: brelod (~me@87.74.198.187)
[23:44:10] *** Joins: SuperLag (~akulbe@user/superlag)
[23:44:44] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:45:00] <nedbat> de-facto: can you give us a concrete example of the replacement you have to do?
[23:45:28] *** Quits: hendursa1 (~weechat@user/hendursaga) (Quit: hendursa1)
[23:45:32] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:f41d:36f4:eaf6:b945) (Ping timeout: 258 seconds)
[23:45:34] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 252 seconds)
[23:45:37] <aphysically> jinsun: I *was* using a dataclass, but I wanted to pass in an argument for the init to do some really really basic processing
[23:45:55] *** Joins: hendursaga (~weechat@user/hendursaga)
[23:46:01] <aphysically> I could conceivably move it back though
[23:46:03] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[23:46:10] <aphysically> I'm guessing dataclass will still want no monkeypatching though
[23:46:24] <aphysically> I'm surprised it even wants me to annotate -> None on the __init__ functions
[23:46:50] <jinsun> ya monkeypatching is not allowed for dataclasses also
[23:47:09] <aphysically> but only some of my __init__ it's complaining about no -> None, not sure why
[23:47:21] *** Joins: Powerhouse6666 (~Powerhous@security.orcacomputers.com)
[23:47:45] <jinsun> and that -> None is annoying behavior of mypy only, pyright is happy without -> None
[23:50:16] <jinsun> I think it will not ask for -> None if you have any annotated arguments
[23:51:23] <aphysically> pyright you mean?
[23:51:56] <jinsun> no mypy
[23:52:38] <jinsun> if you don't have any arguments to __init__, then there are no annotations at all and it assumes dynamically typed function in that case https://mypy.readthedocs.io/en/stable/getting_started.html#function-signatures-and-dynamic-vs-static-typing
[23:52:45] <jinsun> and strict mode doesn't like that
[23:53:07] <jinsun> so it asks you to annotate the None return value
[23:53:13] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[23:53:36] *** Joins: electrostatic (~electrost@2601:600:8600:5a1:6db2:ea9e:70e8:1b11)
[23:53:58] *** Joins: p-i-_ (~Ohmu@mx-ll-171.6.227-183.dynamic.3bb.co.th)
[23:54:11] <aphysically> None to init means the initializer returns the class, or actually None
[23:55:12] *** Quits: Powerhouse6666 (~Powerhous@security.orcacomputers.com) (Ping timeout: 250 seconds)
[23:55:19] <aphysically> ok apparently always None
[23:55:23] <jinsun> actually None, __init__ should always return None, the class is returned by __new__
[23:55:37] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[23:57:14] *** Quits: p-i-_ (~Ohmu@mx-ll-171.6.227-183.dynamic.3bb.co.th) (Remote host closed the connection)
[23:57:40] *** Quits: p-i- (~Ohmu@171.6.227.183) (Ping timeout: 252 seconds)
[23:58:07] *** Quits: mei (~mei@user/mei) (Quit: mei)
[23:58:16] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:cdb0:2ad1:533d:94f3)
