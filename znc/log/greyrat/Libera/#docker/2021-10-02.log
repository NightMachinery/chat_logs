[00:00:23] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 252 seconds)
[00:05:34] *** Joins: Null_A (~null_a@2601:645:8700:2290:e9de:2461:c7b1:d42b)
[00:07:13] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[00:10:43] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[00:11:42] <pycurious> i kill a docker container - then change the hostname - then start the docker container. Inside the container, i get the wrong hostname ? How do i fix it?
[00:13:27] <pycurious> is this the right way -> docker run .. -e HOST_HOSTNAME=`hostname` ..
[00:16:33] *** Joins: sudomann (~sudomann@73.183.118.9)
[00:22:17] <pycurious> I cant use run - since my container is already running
[00:22:56] *** Quits: ph88 (~ph88@ip5f5af6fd.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[00:22:58] *** Quits: cwchristerw (~cwchriste@onyx.devices.christerwaren.fi) (Remote host closed the connection)
[00:23:35] *** Joins: cwchristerw (~cwchriste@onyx.devices.christerwaren.fi)
[00:24:48] <pycurious> is this what i need to edit: /var/lib/docker/containers/CONTAINER_ID/config.json ?
[00:25:12] *** Quits: BinarySavior (~BinarySav@user/binarysavior) (Changing host)
[00:25:12] *** Joins: BinarySavior (~BinarySav@idlerpg/player/BinarySavior)
[00:28:28] <blackwood821> How do incremental images work in Docker builds? Let's say I build my own image from some official Docker image which just adds 5 files to it. Then I create a new version of my image (using the previous version of my image as the base image) but this time only 1 of the 5 files has changed. Is there any way for the new image (layer?) to only include the 1 changed file rather duplicating the 4 files that haven't changed?
[00:30:40] <ikke> docker works with layers
[00:30:59] <ikke> The final image is a result of all layers combined
[00:31:51] <ikke> each layer only contains what is added to that layer (modifications shadow files below it)
[00:35:42] *** Joins: cX1n (~cX1n@107.159.97.244)
[00:35:53] <BtbN> You don't typically want to update your image by piling up layer after layer
[00:36:05] <BtbN> there is a hard limit to how many layers you can have, so that's not a sustainable approach
[00:36:17] <BtbN> plus, having too many layers seriously hurts performance
[00:36:47] *** Quits: tex (~super@user/dix) (Ping timeout: 246 seconds)
[00:38:26] <ikke> You basically should not use layers as synchronization systems
[00:39:29] *** Quits: jmartin (~jmartin@user/jmartin) (Remote host closed the connection)
[00:40:20] <blackwood821> So it's recommended that for version 2 of my image I would use the same base image as I used when I built version 1 rather than using my version 1 image as the base?
[00:40:45] <ikke> correct
[00:42:10] <blackwood821> The downside to that is duplicating files across multiple versions of the same image
[00:42:30] <ikke> yes
[00:43:19] <blackwood821> So even though it's not recommended, if I did use my version 1 image as the base for my version 2 image, is there even a way for the new layer to only include the changes files?
[00:43:26] <ikke> But note that the way layers work, you can only add, not really remove
[00:43:35] <ikke> so the size would only grow
[00:43:54] <ikke> blackwood821: that's already how docker works
[00:44:46] <BtbN> there is also no advantage to piling up layers for updates
[00:44:58] <BtbN> Just make a fresh proper image like everyone else
[00:45:11] <BtbN> the old unused layers will get cleaned up eventually
[00:45:47] *** Quits: strobelight (~quassel@c-69-180-7-202.hsd1.ga.comcast.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:45:57] <Habbie> blackwood821, there's a balance there - if you are keeping both versions around, stacking 2 on top of 1 might save some space
[00:46:05] <blackwood821> BtbN: assuming the older images are not still being used by some containers
[00:46:09] <Habbie> blackwood821, but your users might only ever want one version, in which case not stacking like that saves them space
[00:46:43] <blackwood821> Habbie: Right, that makes sense. If our users will mostly always be on the latest version then there's no point in stacking layers
[00:46:50] <Habbie> blackwood821, yep
[00:47:07] <blackwood821> But if some of our users don't want to update frequently, then there is some advantage in layering
[00:48:16] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[00:48:49] <blackwood821> Hypothetically, if I did use my version 1 image as the base image of my version 2 image and I COPY the 5 files from the repo but only 1 of the 5 changed, does the new layer only contain the 1 changed file?
[00:49:12] <Habbie> i don't know if it's smart enough to notice that your COPY caused no changes
[00:49:21] <Habbie> i would not count on it
[00:49:29] <BtbN> That makes no sense, why would the update frequency make any difference?
[00:49:50] <BtbN> The new layer will only contain the differences between the layer below
[00:50:01] <BtbN> But it can only ever add size to the image.
[00:50:15] <blackwood821> BtbN: because if some users don't upgrade as frequently, that means they stay on older images for longer, so when when we come out with new images, not everyone will take the new images
[00:50:16] <BtbN> If you add 2GB in one layer, and remove it in the next, the image is still 2GB in size
[00:50:27] <blackwood821> In which case there is some benefit to the new image and old image sharing files
[00:50:32] <BtbN> blackwood821, and that's related to how the images are layered in what way?
[00:50:39] <BtbN> That makes no sense
[00:51:01] <BtbN> If you update, you just pull the new image. And don't care about what its base image is, or if you have to download a few MB more
[00:51:22] <BtbN> You'll also want to update the base image itself at some point anyway
[00:52:04] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 252 seconds)
[00:52:54] <blackwood821> If we have two users who are both on version 1 of our image which is 2 GB, then we come out with version 2, but only 10 MB changed in version 2 because version 2 uses version 1 as the base image, then when user 2 wants to upgrade then they pull down the new image which is only pulling 10 MB
[00:53:12] <pycurious> anyone knows how to change the hostname in a running container?
[00:53:25] <blackwood821> But if version 2 uses the same base image as version 1, then when user 2 upgrades and pulls the new image they would be pulling 2 GB again, right? Even though most of that 2 GB is duplicate files from version 1
[00:53:42] <BtbN> If your image is that huge, you're probably doing something wrong to begin with
[00:53:59] <blackwood821> I'm just using that size as an example
[00:54:07] <blackwood821> And wanting to verify if that's the way it does work
[00:54:19] <BtbN> Literally everyone using Docker disagrees with your idea, sooo
[00:54:42] <BtbN> Never updating the base image is bad enough of an idea for anything else to be irrelevant
[00:55:01] <blackwood821> BtbN: I'm simply providing an example of how it can be advantage, and if you are dealing with large images, then yes, there is an advantage
[00:55:19] <BtbN> It's not an advantage, it's abusing the layer system
[00:56:56] <blackwood821> Maybe that's the case in Docker, which is why I'm asking questions... but in our current image build environment which is not Docker, it saves tons of time for weekly updates. Not only are the incremental image sizes smaller, but the build process can avoid recompiling code that hasn't changed
[00:57:13] <blackwood821> But if no one does it that way in Docker then I'll do the suggested Docker approach
[00:57:20] *** Quits: Null_A (~null_a@2601:645:8700:2290:e9de:2461:c7b1:d42b) (Remote host closed the connection)
[00:57:25] *** Quits: Tas-sos (~Tas-sos@78-27-110.adsl.cyta.gr) (Ping timeout: 252 seconds)
[00:57:26] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 246 seconds)
[00:57:34] <blackwood821> Just wanting to understand the options.
[00:57:57] *** Joins: Null_A (~null_a@2601:645:8700:2290:e9de:2461:c7b1:d42b)
[00:58:18] <blackwood821> "Never updating the base image is bad enough of an idea for anything else to be irrelevant" - Did I say I would never update the base image?
[00:58:50] <blackwood821> For major releases we would, for minor we likely wouldn't if the only stuff that changed is our application code and not third-party software
[01:00:12] <Habbie> if you update the base image, any perceived benefits of basing version 2 on version 1 go away anyway
[01:00:59] <blackwood821> Right. The way we do it now (outside of Docker) is we only update the base image on major releases in which case we have to install all of our code and compile all of it
[01:01:15] *** Joins: ph88 (~ph88@ip5f5af6fd.dynamic.kabel-deutschland.de)
[01:01:22] <blackwood821> But for minor releases where we don't need new versions of 3rd part software, we don't upgrade the base image and instead use our previous image as the base image for the new minor release
[01:16:22] *** Quits: Null_A (~null_a@2601:645:8700:2290:e9de:2461:c7b1:d42b) (Ping timeout: 260 seconds)
[01:21:58] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[01:28:16] *** Quits: junktext (~junktext@109.201.152.179) (Ping timeout: 252 seconds)
[01:34:35] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[01:42:14] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[01:53:28] *** Joins: sudomann (~sudomann@73.183.118.9)
[01:54:54] *** Quits: andycooper (uid246432@id-246432.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[01:56:13] <pycurious> how do i profile a docker-compose command and see why my container is taking 5 seconds to start? It's a python-slimbuster (4GB) size - I am doing a rm â€”force + docker-compose up
[01:57:58] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 252 seconds)
[02:04:17] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[02:07:04] <tabakhase> pycurious asside, rm force? are you looking for "up --force-recreate"? ;-)
[02:08:39] <tabakhase> cant rly say anything on your actual issue... but thats gonna be the fastes way (other than blue/green thingys with replicas - tho i think that need swarm anyhow, if even a first party thing...)
[02:09:15] *** Quits: TomTom (uid45892@id-45892.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:13:17] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[02:13:36] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[02:27:19] <pycurious> tabakhase: should i do that with docker-compose? I was currently using systemctl Execstop and Execstart commands to kill and recreate that container. It's taking 5 seconds - which I am not sure why. If I kill and start the container it takes 4 seconds. 
[02:28:00] <pycurious> tabakhase: it seems force-recreate uses SIGTERM - I do need SIGKILL 
[02:28:27] <tabakhase> it prob uses whatever is set as stop-signal in the image uh?
[02:29:24] <pycurious> tabakhase: What I dont understand is why it takes 5 seconds to run my first print command inside python-slimbuster. I do have some volume mounts in docker-compose file.
[02:30:41] <pycurious> It varies from 3-5 seconds
[02:33:08] *** Joins: incognito (~relativit@user/incognito)
[02:36:11] *** Quits: esses (uid38151@id-38151.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[02:51:12] *** Joins: tlaxkit (~hexchat@170.253.34.130)
[02:52:45] *** Quits: krzydv (~dave_uy@gateway/tor-sasl/daveuy/x-47453912) (Remote host closed the connection)
[02:53:56] *** Joins: krzydv (~dave_uy@gateway/tor-sasl/daveuy/x-47453912)
[03:01:00] *** Quits: Keridos (~Keridos@ironhide.de) (Quit: ZNC - http://znc.in)
[03:01:39] *** Joins: Keridos (~Keridos@ironhide.de)
[03:04:33] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[03:12:06] *** Joins: rdrg109_ (~rdrg109@user/rdrg109)
[03:15:04] *** Quits: jamiejackson (~jamiejack@207.172.87.34) (Quit: Connection closed)
[03:53:54] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[03:58:55] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:01:15] *** Quits: bencevans (~bencevans@static.153.97.4.46.clients.your-server.de) (Remote host closed the connection)
[04:02:13] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[04:04:25] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[04:04:47] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[04:05:51] *** Joins: keypusher (keypusher@user/keypusher)
[04:06:06] *** Quits: ph88 (~ph88@ip5f5af6fd.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[04:06:31] *** Joins: ph88 (~ph88@2a02:8109:9e00:7e5c:1cbc:efbb:c578:a980)
[04:07:16] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:10:28] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[04:12:15] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[04:15:25] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[04:19:30] *** Quits: crazymax (~crazymax@user/crazymax) (Quit: Bye!)
[04:23:13] *** Quits: minimal (~minimal@user/minimal) (Quit: Leaving)
[04:30:25] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:34:53] *** Joins: vlm (~vlm@user/vlm)
[04:44:28] *** Joins: ExeciN (~ExeciN@user/nicexe)
[05:00:04] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[05:02:25] *** Quits: tlaxkit (~hexchat@170.253.34.130) (Quit: Leaving)
[05:06:48] *** Quits: BSaboia (~bsaboia@177.37.198.122) (Quit: This computer has gone to sleep)
[05:14:44] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[05:15:53] *** Joins: svm_invictvs_ (~svm_invic@user/svm-invictvs/x-6696469)
[05:17:07] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[05:17:52] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Ping timeout: 265 seconds)
[05:20:29] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[05:25:28] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[05:26:06] *** Joins: ExeciN (~ExeciN@user/nicexe)
[05:26:41] *** Joins: sudomann (~sudomann@73.183.118.9)
[05:30:04] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[05:31:19] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 252 seconds)
[05:32:38] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[05:39:37] *** Quits: aidalgol (~aidalgol@user/aidalgol) (Ping timeout: 252 seconds)
[05:49:47] *** Joins: aidalgol (~aidalgol@user/aidalgol)
[05:53:41] *** Quits: standardrat (~standardr@196.30.99.2) (Remote host closed the connection)
[05:53:56] *** Joins: standardrat (~standardr@196.30.99.2)
[05:55:24] *** Joins: SteveR (~SteveR@192.146.154.3)
[06:07:38] *** Joins: crazymax (~crazymax@user/crazymax)
[06:12:18] *** Quits: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de) (Read error: Connection reset by peer)
[06:13:50] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[06:15:16] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[06:15:38] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[06:27:44] *** Joins: dmalteseknight (~dmaltesek@user/dmalteseknight)
[06:32:37] *** Quits: SteveR (~SteveR@192.146.154.3) (Quit: Client closed)
[06:34:15] *** Joins: SteveR (~SteveR@192.146.154.3)
[06:42:34] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[06:42:42] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[07:00:01] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[07:00:43] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[07:01:01] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[07:06:25] *** Joins: cim (~cim@205.185.117.110)
[07:13:38] *** Quits: SteveR (~SteveR@192.146.154.3) (Quit: Client closed)
[07:13:58] *** Joins: SteveR (~SteveR@192.146.154.3)
[07:14:27] <pycurious> how do i check if the dns settings in my docker container/host are good? is there an easy test for this?
[07:15:48] <dodo> how do you define good?
[07:17:10] <pycurious> dodo: something that is correctly configured? 
[07:23:04] <notevil> pycurious: https://github.com/nicolaka/netshoot  use an image like this to connect to your container.  then use the network tools to test.
[07:25:30] <pycurious> thanks notevil
[07:32:29] *** Quits: kulernil (~kulernil@gateway/tor-sasl/kuler) (Quit: Leaving)
[07:35:13] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Quit: ZNC 1.8.2 - https://znc.in)
[07:35:27] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[07:52:22] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[08:04:50] *** Quits: SteveR (~SteveR@192.146.154.3) (Ping timeout: 256 seconds)
[08:04:54] *** Joins: tex (~super@user/dix)
[08:34:40] <pycurious> how do i change the hostname inside a running container? 
[08:50:24] *** Quits: winstonsmith (~winstonsm@109.201.152.178) (Remote host closed the connection)
[08:50:46] *** Joins: winstonsmith (~winstonsm@109.201.152.168)
[09:03:46] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[09:15:52] *** Quits: Czernobog (~Czernobog@user/czernobog) (Read error: Connection reset by peer)
[09:17:20] *** Joins: sudomann (~sudomann@73.183.118.9)
[09:17:24] *** Joins: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net)
[09:19:07] *** Joins: bouncy (~ben@user/benoit)
[09:22:52] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 252 seconds)
[09:24:31] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 252 seconds)
[09:37:16] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[09:43:31] *** Quits: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead) (Quit: bye)
[09:43:38] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[09:50:16] *** Joins: JohnDoe2 (~johndoe2@2001:470:1f07:89::dead:bead)
[09:54:30] *** Joins: sudomann (~sudomann@2601:543:100:2e3:61a8:363e:2584:6d4e)
[09:57:57] *** Joins: kuler (~kulernil@gateway/tor-sasl/kuler)
[09:58:47] *** Quits: sudomann (~sudomann@2601:543:100:2e3:61a8:363e:2584:6d4e) (Ping timeout: 252 seconds)
[09:59:28] *** simplici1y is now known as simplicity
[10:04:28] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Quit: Leaving)
[10:15:20] *** Quits: jazzy (~jaziz@2600:380:863e:b8c:2c7e:3597:d015:9d41) (Ping timeout: 246 seconds)
[10:20:31] *** Joins: Tas-sos (~Tas-sos@78-24-233.adsl.cyta.gr)
[10:25:53] *** Quits: Haxxa (~Haxxa@116-255-6-75.ip4.superloop.com) (Quit: Haxxa flies away.)
[10:30:37] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[10:30:53] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[10:31:11] *** Joins: rejik (~rodybig@2620:0:e00:400f::fe)
[10:32:03] *** Joins: Tach (~Tach@user/tach)
[10:32:59] <rejik> I'm using KIND (which is a tool for running local Kubernetes clusters) which uses Docker container nodes to simulate hosts. I'm deployed an application on it and exposed an ingress which is accessible outside the local cluster (on the same host) but not accessible from the general internet. 
[10:33:17] <rejik> Do I need to do port forwarding from the host to the docker container running the ingress?
[10:33:42] <rejik> Like how you would normally expose an application on docker to the internet. Or do I have this wrong?
[10:52:19] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[10:53:03] *** Joins: pycurious (~Adium@user/pycurious)
[10:59:14] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 252 seconds)
[11:01:30] <tabakhase> rejik idk KIND, but id say "yes"
[11:01:49] <tabakhase> how -> published ports?
[11:04:21] *** Quits: Tach (~Tach@user/tach) (Quit: Tach)
[11:07:11] *** Joins: ychaouche (~ychaouche@user/ychaouche)
[11:07:30] <ychaouche> hello #docker
[11:07:59] <ychaouche> can I inspect the Dockerfile in plaintext from the hub for a particular image ? 
[11:08:48] <ychaouche> I'd like to diff two Dockerfiles for two images of the same appication with different tags
[11:09:05] <ychaouche> say, one for debian strech the other for debian bullseye
[11:09:25] <ychaouche> the website gives an HTML view that's not very practical to process
[11:09:53] *** Quits: Buggys (Buggy@Buggy.shelltalk.net) (Quit: PeaceOutGirlScout!)
[11:16:24] <ychaouche> ok it's in the description page of the project, not the particular image.
[11:16:27] <ychaouche> nm
[11:17:36] *** Quits: setesat (~setesat@94.4.156.220) (Quit: The Lounge - https://thelounge.chat)
[11:17:41] <ychaouche> ok. Why have exactly the same docker file for two tags of the same image ? 
[11:18:12] <ychaouche> or rather, if the dockerfile is the same aren't the produced images exactly the same ? 
[11:18:33] *** Joins: setesat (~setesat@94.4.156.220)
[11:19:00] <ychaouche> ah there's a difference in the FROM
[11:19:16] *** Joins: ExeciN (~ExeciN@user/nicexe)
[11:19:24] <ychaouche> one is from buildpack-deps:bullseye the other is buildpack-deps:stretch
[11:20:10] <ychaouche> so much duplication for a single line of difference
[11:24:09] *** Joins: TomTom (uid45892@id-45892.ilkley.irccloud.com)
[11:28:41] *** Joins: pycurious (~Adium@user/pycurious)
[11:33:13] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 252 seconds)
[11:36:41] <ychaouche> https://forums.docker.com/t/duplication-among-dockerfiles/57570/1
[11:37:24] <ikke> build arguments could be used for that
[11:38:25] <ikke> But I'm not sure of it's supported for official images built by docker
[11:38:51] <ychaouche> ikke: that's the best option imo
[11:39:11] <ychaouche> that way you keep a single docker file for all distros and only change the build command
[11:39:15] <ychaouche> no ?
[11:39:35] <ychaouche> not all distros, I mean all versions of a single distro
[11:39:46] <ikke> If that's the only difference
[11:39:53] <ychaouche> it is for debian
[11:40:04] <ychaouche> This buster version https://raw.githubusercontent.com/nodejs/docker-node/e886c2c1d3a109ccfe169419f3b30f9794bacf61/16/buster/Dockerfile
[11:40:16] <ychaouche> this is bullseye version https://raw.githubusercontent.com/nodejs/docker-node/e886c2c1d3a109ccfe169419f3b30f9794bacf61/16/bullseye/Dockerfile
[11:40:19] <ychaouche> same image, two tags
[11:40:40] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Quit: ZNC - https://znc.in)
[11:40:42] <ychaouche> 70 lines each, only one line difference (FROM)
[11:41:52] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[11:42:25] <ikke> Right, but like I said, for official images it appears not to be possible to specify build arguments
[11:42:33] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[11:42:39] <ikke> https://github.com/docker-library/official-images/blob/master/library/node
[11:43:53] <ychaouche> what is that ?
[11:46:13] <ychaouche> can't see any specific option in docker build --help that would let me choose the base image
[11:46:25] <ychaouche> so what did you mean by "build arguments could be used for that" ?
[11:47:07] <ikke> For official images, maintainers do not run docker build themselves. Rather, a file like that tells docker where to find the dockerfiles to build
[11:56:09] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-bcfd-e74c-43c9-4dcf.res6.spectrum.com) (Ping timeout: 250 seconds)
[11:57:28] <ychaouche> ikke:  what's the output of the link you gave me ? 
[11:59:40] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-41dd-c7b6-6757-fde9.res6.spectrum.com)
[12:00:23] *** Joins: pycurious (~Adium@user/pycurious)
[12:04:41] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 252 seconds)
[12:07:58] *** Quits: dmalteseknight (~dmaltesek@user/dmalteseknight) (Quit: WeeChat 3.2)
[12:08:30] *** Quits: rejik (~rodybig@2620:0:e00:400f::fe) (Ping timeout: 256 seconds)
[12:11:09] <ychaouche> so, it seems docker has a preference for debian and alpine
[12:14:58] *** Quits: Nightah (~Nightah@user/nightah) (Quit: ZNC - https://znc.in)
[12:15:10] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 252 seconds)
[12:17:50] *** Joins: sebastianos (~sebastian@user/sebastianos)
[12:18:01] *** Joins: Nightah (~Nightah@user/nightah)
[12:18:29] <ikke> Those are popular base images
[12:20:00] *** Joins: pycurious (~Adium@user/pycurious)
[12:20:38] <ikke> That file is how you get docker (the company / service) to build official images
[12:20:44] <ikke> in that case, for nodejs
[12:22:49] *** Joins: mei (~mei@user/mei)
[12:31:38] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 260 seconds)
[12:44:49] <tabakhase> ychaouche those are mostly generated from templates - so chance that they equal, but not garanteed into the future/past
[12:45:11] <ychaouche> tabakhase: doc about templates ? 
[12:45:36] <ikke> ychaouche: that's not docker specific
[12:45:56] <ychaouche> I'm digging 3 levels deep of image dependencies with identical dockerfiles for each base image except for the FROM line
[12:45:58] <ychaouche> ikke: ah ok
[12:45:59] <ikke> You can just create a script that uses a basefile and generates Dockerfiles
[12:46:25] *** Quits: sebastianos (~sebastian@user/sebastianos) (Ping timeout: 252 seconds)
[12:47:18] <tabakhase> ye 3rd party, see update.sh in the repo
[12:47:30] <tabakhase> some bashfu :D
[12:50:22] <ychaouche> ok I got to the lowest level base image, 4th level I think, and the dockerfiles this time are identical
[12:50:25] <ychaouche> three lines
[12:50:34] <ychaouche> https://github.com/debuerreotype/docker-debian-artifacts/blob/67181104c635279692b54b5448f74387212d9f18/bullseye/Dockerfile
[12:50:39] *** Joins: Tach (~Tach@user/tach)
[12:50:48] <ychaouche> that was bullseye
[12:50:51] <ychaouche> now buster : https://github.com/debuerreotype/docker-debian-artifacts/blob/67181104c635279692b54b5448f74387212d9f18/buster/Dockerfile
[12:51:22] <ychaouche> This needs to go into a diagram
[12:54:26] *** Joins: vxi (~user@styria.daemonized.org)
[13:06:58] *** Quits: akik (akik@dsl-tkubng22-58c1e2-116.dhcp.inet.fi) (Quit: leaving)
[13:08:41] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Quit: leaving)
[13:11:33] *** Joins: akik (akik@dsl-tkubng22-58c1e2-116.dhcp.inet.fi)
[13:13:17] *** Quits: Tas-sos (~Tas-sos@78-24-233.adsl.cyta.gr) (Quit: leaving)
[13:14:04] *** Joins: pycurious (~Adium@user/pycurious)
[13:16:50] *** Joins: rsx (~dummy@ppp-188-174-145-233.dynamic.mnet-online.de)
[13:18:19] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 252 seconds)
[13:26:12] *** Joins: ExeciN (~ExeciN@user/nicexe)
[13:28:30] *** Quits: Tach (~Tach@user/tach) (Quit: Tach)
[13:28:45] *** Joins: sebastianos (~sebastian@user/sebastianos)
[13:30:05] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[13:30:40] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[13:32:58] *** Joins: incognito (~relativit@user/incognito)
[13:40:10] <ychaouche> So if I have a node image that has a FROM chain going 5 levels down all the way to the debian image, does that mean the when I build that image, the resulting container will run a whole debian OS inside ? (minus what's already taken care of by the "host" in VM parlance)
[13:41:08] <ychaouche> and so node:buster will run a node inside a debian buster container and node:bullseye will run node inside a debian bullseye container. Is that what it is ? 
[13:46:58] <tabakhase> ychaouche different topics - and there can be only ONE "CMD" and ONE "ENTRYPOINT" - so if those say node, node is what runs.
[13:47:33] <ychaouche> but runs on what ?
[13:47:45] <ychaouche> like there must be a filesystem underneath, no ? 
[13:47:52] <tabakhase> on the "os running" in general thing - docker is a little special, NOTHING actually runs in there except the one thing it should run - - this whole "debian" thing is kinda "only there so you can use apt-get during the build" ;D
[13:47:54] <ychaouche> (contained in the image itself)
[13:48:15] *** Joins: pycurious (~Adium@user/pycurious)
[13:48:26] <ikke> A container just runs a single process (which can spawn other processes)
[13:48:38] <ikke> There can be a OS filesystem, but it's not required
[13:48:52] <tabakhase> if your language compiles, you may even build with static-links and "make a docker image that consists of a single binary"
[13:50:58] <tabakhase> example -> https://docs.docker.com/develop/develop-images/multistage-build/#use-multi-stage-builds
[13:51:31] <tabakhase> hm ok bad example ;D seems that changed to use alpine, there used to be a scratch demo... *thinking*
[13:52:55] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 252 seconds)
[13:52:59] <tabakhase> anyhow, thats kinda rarecase - usually youd kinda "still need the OS" as all the libs come from there, but it isnt ""running"" in any shape or form
[13:53:17] *** Quits: mei (~mei@user/mei) (Quit: mei)
[13:54:59] *** Joins: mei (~mei@user/mei)
[13:55:06] <ikke> There is no real init system that is running or services
[13:56:14] <ychaouche> So each docker container has its own bash, libc, etc. If the process that it's supposed to run (CMD or ENTRYPOINT) need to get a function from a library, it will fetch it from itself, rather than from the host OS. Yes ? 
[13:56:35] <ychaouche> from itself : from the container it's in.
[13:57:03] <ikke> ychaouche: are you familiar with chroot?
[13:57:08] <ychaouche> a little yeah
[13:57:23] <ikke> so a process runs, but has it's own idea of what the root filesystem is
[13:57:30] <ychaouche> aha
[13:57:54] <ikke> a docker container is like a chroot, but it isolates even more
[13:58:02] <ychaouche> with cgroups
[14:00:04] <tabakhase> chroot on horse-steroids yea ;-)
[14:00:42] <ychaouche> and so if I put debian as a base for my image, the container will have all the debian filesystem inside of it, yes ? 
[14:01:02] <ychaouche> maybe a custom image for docker containing only the essential
[14:01:18] <ikke> yes
[14:01:43] <ikke> That's why alpine is popular, because it has a very small base image
[14:01:57] <ychaouche> I was reading about that, it reduces attack surface.
[14:02:47] <wez> cgroups is what lxc become? and now lxc is implemented by cgroups?
[14:03:56] <tabakhase> lxc is its own thing, but it also uses cgroups - and like half a decade back docker used lxc as kinda shim you could say i guess...
[14:04:13] <wez> ah
[14:04:29] <wez> I used lxc alot before docker was a thing
[14:06:16] *** Joins: bencc1 (~bencc1@2a00:a040:197:3af:9b9c:97ad:bd45:b1ad)
[14:06:18] <tabakhase> still do, proxmox uses lxc for containers (and kvm for vms) - also "lxd" is still pretty popular (+ libvirt can use it too)
[14:06:43] <bencc1> is it better to run each container on a separate hyperthread or can several containers share the same hyperthread?
[14:07:11] <bencc1> I'm trying to choose between a machine with few faster cores and a machine with x2 slower cores
[14:07:50] <tabakhase> bencc1 afaik docker makes no difference there
[14:08:31] <bencc1> what about programs and processes with the same question?
[14:08:48] <bencc1> each container will run chrome and ffmpeg
[14:09:13] <bencc1> I'm not sure if it's bad when several processes compete on the same core
[14:09:48] <ychaouche> many cores means more cache
[14:09:55] <ychaouche> which is good IMO
[14:10:04] <tabakhase> both certainly multicory, chrome depending on ussage (tabs/extensions) and ffmepg on what it does i guess (encoding? screencaptures?)
[14:11:04] <ychaouche> I don't think CPU speed matters anymore because bus speed to access memory is the bottleneck (even if we have made significant progress). My current bottleneck is disk I/O.
[14:11:14] <tabakhase> (disclaimer, not sure how chrome relates with the switches needed for docker-chroming - think some of the sandboxing has to be disabled or so)
[14:11:18] <ychaouche> you should care more about that (having performant SSDs)
[14:12:21] <ychaouche> having more cache memory means using the bus less often, thus increasing speed.
[14:12:46] <bencc1> in my case L3 cache is the same on both machines
[14:13:09] <bencc1> both will have nvme so probably fast
[14:13:20] <bencc1> https://www.hetzner.com/dedicated-rootserver/matrix-ax?country=us
[14:13:25] <tabakhase> got some hard some numbers? 
[14:13:39] <tabakhase> oh hetzner =) so amd or intel youre asking ;-)
[14:13:48] <tabakhase> AX or EX ;P
[14:14:21] <bencc1> trying to choose between AX101 - AMD Ryzenâ„¢ 9 5950X and AX161 AMD EPYCâ„¢ 7502P 
[14:14:37] <bencc1> best prices I could find
[14:14:42] <ychaouche> better ask on ##hardware then
[14:14:46] <bencc1> thanks
[14:16:17] <tabakhase> ^^ this too, certainly offtopic here and smarter pwebs for this there :P
[14:16:48] *** Joins: arkanoid (~arkanoid@2-238-151-49.ip244.fastwebnet.it)
[14:17:06] <bencc1> ok
[14:17:47] <tabakhase> and dont just tell em docker, tell em about your chrome usecase and what ffmpeg shall do for best results ;-)
[14:17:59] <arkanoid> Hello! How can I know the installed size of a "docker-compose up" before running it? I'm dealing with a device with very little space
[14:18:44] <ychaouche> so, If I'd like to inspect the filesystem of a debian image, I just run the image, which will fire up bash, and I'm in the chroot, right ?
[14:19:06] <tabakhase> arkanoid not. - you mean like "what images to pull would use"? - whats with runtime data? - and what you/the "thing" supposed todo if answer is no?
[14:19:20] <tabakhase> ychaouche right
[14:19:25] <ychaouche> good
[14:19:49] <tabakhase> ychaouche (and "docker exec" do jump into an already running one)
[14:20:23] <arkanoid> tabakhase: well, sure the final answer would be the sum of the sizes of all the services of the compose, sure
[14:20:32] <ychaouche> presumabley because you can images in the background and get back to them ? 
[14:20:45] <ychaouche> run images in the background*
[14:21:18] <tabakhase> arkanoid so in some sense "check if its save to up(what may pull) or if doing so would lock up the thing on 100% disk used"?
[14:21:25] <arkanoid> I just want to know if I have enough space for doing "docker up", otherwize I need to open all DockerFiles and walk back all FROM and search for sizes
[14:21:54] <arkanoid> *docker-compose up
[14:22:16] <ychaouche> ah no, docker exec is for executing a command inside a container
[14:22:21] <ychaouche> that is already running
[14:22:41] <arkanoid> second option, I fear not having enough disk space and ending up 100% disk used
[14:24:18] <tabakhase> arkanoid how dirty do you want this to be? ... smells like youd have to parse the registry, compare layers-used-in-current-tags to what you have on disk or so... - but ye, nothing inbuild of any sort, "pull" doesnt even have a dry-run option
[14:26:03] <arkanoid> Ok, thank. I'll just run the command and see what happens. YOLO
[14:28:10] <tabakhase> arkanoid id prob just estimate a ~gb value or so, make sure that dcker gets pruned/garbagecollected and have docker on its own partition...
[14:28:44] <tabakhase> so if it blows, only this blows and then you can fire some escalation
[14:29:02] <tabakhase> say, a rPi appliance thing or such
[14:29:32] <arkanoid> sure
[14:31:29] <tabakhase> maybe even run a seperate "docker-compose pull" first - with a watchdog that checks and ctrl+CÂ´s it when hitting 99% + fires a instant GC ;D
[14:31:48] <tabakhase> in a way that sounds almost reasonable...
[14:31:53] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Remote host closed the connection)
[14:32:20] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[14:34:47] <ychaouche> Where does docker put container files ? 
[14:35:02] <ychaouche> on a linux machine that is.
[14:35:28] <tabakhase> ychaouche deep deep inside /var/lib/docker - but dont ever touch those directly, those are unassembled layers
[14:35:29] <ikke> /var/lib/docker
[14:35:48] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Remote host closed the connection)
[14:35:57] <ychaouche> tabakhase: you triggered me
[14:35:58] <ychaouche> :p
[14:36:14] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[14:36:31] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Ping timeout: 252 seconds)
[14:37:10] <ychaouche> ok just curious
[14:37:42] *** Joins: vidbina (~vid@x4db70a3d.dyn.telefonica.de)
[14:39:21] <tabakhase> ;D all good - its just "usually" that question comes up whenever someone has a broken container and will try to look at some file to check something -- they may tried a "docker run ... bash", to get tripped by a entrypoint script that still blows (--entrypoint "" is a thing), but often not even that
[14:41:32] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (Remote host closed the connection)
[14:41:57] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[14:43:38] *** Joins: pycurious (~Adium@user/pycurious)
[14:44:31] *** Joins: ExeciN (~ExeciN@user/nicexe)
[14:48:02] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 252 seconds)
[14:51:25] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[14:54:05] *** Quits: vidbina (~vid@x4db70a3d.dyn.telefonica.de) (Ping timeout: 252 seconds)
[14:54:44] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[15:02:28] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[15:09:22] *** Quits: cwchristerw (~cwchriste@onyx.devices.christerwaren.fi) (Ping timeout: 252 seconds)
[15:12:14] <ychaouche> I have 0 image right now
[15:12:26] <ychaouche> I just started learning docker yesterday
[15:13:50] <wez> gg
[15:17:45] <tabakhase> ychaouche well good luck, its not easy to learn, but simple once understood... just no real learning curve, but more a series of steps - so when things dont make sense along the way, that may be just fine, youll understand an hour later ;-)
[15:22:53] *** Joins: cwchristerw (~cwchriste@onyx.devices.christerwaren.fi)
[15:27:22] *** Joins: pycurious (~Adium@user/pycurious)
[15:31:55] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 252 seconds)
[15:32:13] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[15:43:35] <ychaouche> Everything that's inside the RUN command of a Dockerfile, the paths of the files and the commands themselves are taken from the chroot, yes ? 
[15:46:03] <ikke> The RUN command is executed in the context of the image you specified
[15:46:12] <ikke> so yes
[15:51:49] *** Joins: SteveR (~SteveR@192.146.154.3)
[15:52:30] *** Parts: [twisti] (~twisti@toadwater.com) ()
[16:00:08] <ychaouche> I don't need to configure the network in the image at build time, docker automatically configures it for me ? (commands like apt-get and curl in RUN needs network)
[16:11:14] *** Joins: pycurious (~Adium@user/pycurious)
[16:19:59] <ikke> yes
[16:20:01] <mei> hey, is it normal that i need to run docker-compose compose? instead of just docker-compose.. i can not follow things around the web
[16:20:09] <ikke> ychaouche: you do not need to take care for that
[16:20:15] <ikke> mei: no
[16:21:05] <mei> but docker-copose say to specific a command which is completion or compose.. why is that
[16:21:05] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 264 seconds)
[16:21:23] <ikke> `type docker-compose`
[16:22:09] <mei> (/usr/local/bin/docker-compose)
[16:23:20] *** Joins: slurpyb (~slurpyb@user/slurpyb)
[16:23:53] <ikke> file /usr/local/bin/docker-compose
[16:24:22] <mei> ELF 64-bit LSB executable, ARM aarch64, version 1 (SYSV), statically linked, Go BuildID=-sNjhiBdN45o61aVkX_m/epH-LMZQXBrE4OCr18I4/mukV-pUJVfQlcsqVFvMR/_vhCMHhQDAZDeCn2RU6p, stripped
[16:25:40] *** Quits: ph88 (~ph88@2a02:8109:9e00:7e5c:1cbc:efbb:c578:a980) (Remote host closed the connection)
[16:27:38] <ychaouche> When you build an image, where is it stored ? 
[16:28:06] <ychaouche> and when you do FROM image, how does docker know if it needs to pull from local or from the hub ? 
[16:28:23] <ikke> ychaouche: if it does not find it, it tries to pull it from the hub
[16:28:31] <ychaouche> ok
[16:28:35] <ikke> otherwise it will use the local image, unless you add --pull to build
[16:28:53] <ikke> all data is stored in /var/lib/docker
[16:28:56] <mei> well i just replaced that with the latest version on github and now is fine...
[16:29:23] <mei> i donÃ¬t know why the output of docker-compose is "Usage:  docker compose [OPTIONS] COMMAND" if i just "docker compose" i get that compose is not a valid command
[16:29:53] <ychaouche> ikke:if the image is in the hub, will docker try to get latest version if new version is available ? 
[16:30:11] <ychaouche> w/o the --pull
[16:30:20] <ychaouche> or will it prefer the cached version ?
[16:30:30] <ychaouche> is there a cache invalidation mechanisme ? 
[16:31:21] <ikke> It will use the local version
[16:31:57] <ychaouche> so it's relatively stable I guess
[16:36:07] *** Joins: Hazza (~Haxxa@122-199-44-5.ip4.superloop.com)
[16:36:17] <ychaouche> --pull=false          Always attempt to pull a newer version of the image
[16:36:26] <ychaouche> of the base image(s) ?
[16:36:52] <ychaouche> that was from the docker build --help
[16:39:49] <ikke> yes
[16:40:56] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[16:41:46] <ychaouche> it seems to also take care of redirecting standard I/O, i see RUN with set -x ... that means that when the image is built, output of the actual building process is redirected to the terminal ? 
[16:42:13] <ychaouche> so that you can debug the building process ? 
[16:43:08] <ikke> You see the output of commands, yes
[16:50:52] *** Quits: Nightah (~Nightah@user/nightah) (Quit: ZNC - https://znc.in)
[16:51:36] *** Joins: vidbina (~vid@x4db70a3d.dyn.telefonica.de)
[16:51:44] *** Joins: Nightah (~Nightah@user/nightah)
[16:53:06] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (Quit: leaving)
[16:54:27] *** Joins: pycurious (~Adium@user/pycurious)
[16:56:05] *** Quits: Nightah (~Nightah@user/nightah) (Client Quit)
[16:58:44] *** Joins: BSaboia (~bsaboia@177.37.198.122)
[16:58:49] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 252 seconds)
[17:01:09] *** Joins: Nightah (~Nightah@user/nightah)
[17:02:59] *** Joins: ExeciN (~ExeciN@user/nicexe)
[17:03:15] <ychaouche> help of docker run  --rm=false                 Automatically remove the container when it exits
[17:03:20] <ychaouche> why would I do this ? 
[17:04:45] <ikke> Maybe you want to test something or just run a task and you do not need to keep the container after it exits
[17:05:02] <ikke> Otherwise you need to manually clean up the container afterwards
[17:05:16] <mei> what can be if i compose up, and have" Container mastodon-redis-1         Created" but than an error " getaddrinfo ENOTFOUND mastodon_redis_1"
[17:05:29] <mei> it's like is not able to get the address of the container but i don't know why
[17:07:01] *** Quits: thanas (~thanas@user/thanas) (Quit: ZNC - https://znc.in)
[17:07:08] *** Quits: Nightah (~Nightah@user/nightah) (Quit: ZNC - https://znc.in)
[17:07:21] <mei> i think i will downgrade docker-compose....
[17:07:42] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[17:07:46] *** Joins: Nightah (~Nightah@user/nightah)
[17:09:05] *** Quits: Nightah (~Nightah@user/nightah) (Client Quit)
[17:09:50] <mei> yeah it works again. sorry, it's just that the new docker compose need adjustaments
[17:11:00] *** Joins: pycurious (~Adium@user/pycurious)
[17:11:59] <pycurious> in a docker container, when I run python3 -c "import socket; print(socket.gethostname())" â€” I get an old hostname - how can i fix this without restarting the container?
[17:12:13] *** Joins: Nightah (~Nightah@user/nightah)
[17:13:08] <pycurious> on the host the container name is correct
[17:18:17] *** Joins: thanas (~thanas@user/thanas)
[17:19:09] *** Joins: Jimmy_H (~Jimmy_H@119.136.152.242)
[17:19:57] <ychaouche> pycurious: did you try changing it's name with the hostname command ? 
[17:20:31] <pycurious> ychaouche: hostname: you must be root to change the host name - And I cant run it privileged
[17:20:47] <ikke> I think the hostname is immutable
[17:21:09] *** Joins: Latrina (~Latrina@user/latrina)
[17:22:29] *** Quits: BSaboia (~bsaboia@177.37.198.122) (Quit: This computer has gone to sleep)
[17:23:18] <ychaouche> so, the idea when having an os upgrade is to build another image for the upgraded OS instead of doing the upgrade inside the container, right ? 
[17:23:41] <ikke> yes
[17:24:02] <ikke> Best practice is to treat containers as immutable
[17:24:22] <ychaouche> ok, now I can make sense of RUN rm -rf /var/cache/apk/*
[17:24:25] <ikke> (state can be stored in volumes / mounts)
[17:24:42] <ikke> ychaouche: that specific command is not very useful
[17:24:48] <ychaouche> really ? 
[17:24:57] <ikke> Every RUN command creates a new layer
[17:25:06] <ychaouche> but it reduces image size, no ? 
[17:25:15] <ikke> If you add files in one layer, removing it in a later layer does not decrease the file size
[17:25:29] <ikke> You want apk add --no-cache
[17:25:38] <pycurious> I've another related problem. If I kill my container, rm the container, then start the container using docker-compose (in which case I can change the hostname) - the total time taken for this operation is 5-10 seconds. How do I figure out what is wrong and how to optimize this? I tried docker stats - but the memory/cpu usage is not much. 
[17:25:39] <ikke> Then you do not even need to clean it up
[17:25:47] <ychaouche> great tip ikke, thanks.
[17:26:17] <ikke> ychaouche: If you need to remove files, you need to do it in the same RUN command that added them
[17:26:38] <ychaouche> another great tip, all of that will be done in a single layer
[17:28:12] *** Joins: BSaboia (~bsaboia@177.37.198.122)
[17:28:30] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:28:55] <pycurious> is 5-10 second for docker-compose up on a container normal? 
[17:37:40] *** Joins: Brainium (~brainium@user/brainium)
[17:39:48] <ychaouche> [12:05] <tabakhase> ychaouche deep deep inside /var/lib/docker - but dont ever touch those directly, those are unassembled layers
[17:39:55] <ychaouche> use docker export to inspect a containers filesystem ? 
[17:42:39] <ychaouche> oh the correct way to start a container is start not run
[17:42:58] <ychaouche> run is for running commands, which by deafult is CMD or ENTRYPOINT
[17:43:10] <ychaouche> so run w/o any argument defaults to start
[17:43:22] <ikke> You create a container with docker run
[17:43:37] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Read error: Connection reset by peer)
[17:43:51] <ikke> docker start only works for existing containers that are stopped
[17:44:06] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[17:44:44] <ychaouche> or paused
[17:47:07] <ychaouche> oh that would be unpause
[17:48:09] *** Joins: minimal (~minimal@user/minimal)
[17:49:40] *** Joins: incognito (~relativit@user/incognito)
[17:50:14] *** Joins: Buggys (Buggy@Buggy.shelltalk.net)
[17:50:19] *** Quits: blip2 (~blip2@blip2.net) (Quit: Bye)
[17:50:57] *** Joins: blip2 (~blip2@blip2.net)
[17:52:13] *** Joins: iomari891 (~iomari891@105.112.138.38)
[17:54:24] *** Quits: mthall (~quassel@mail.thalliman.com) (Ping timeout: 250 seconds)
[17:55:08] *** Joins: mthall (~quassel@mail.thalliman.com)
[17:56:20] *** Joins: ExeciN (~ExeciN@user/nicexe)
[18:00:58] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[18:09:06] *** Joins: dmalteseknight (~dmaltesek@user/dmalteseknight)
[18:12:34] *** Quits: linsux (~metbsd@user/linsux) (Ping timeout: 252 seconds)
[18:14:06] *** Joins: linsux (~metbsd@user/linsux)
[18:33:01] <ychaouche> there used to be a docker container command and a docker image command ? 
[18:33:23] <ychaouche> confused by this article : https://dzone.com/articles/docker-images-and-containers see useful docker commands
[18:35:21] <ikke> For me there still is
[18:41:02] *** Joins: ExeciN (~ExeciN@user/nicexe)
[18:43:27] <ychaouche> oh, I might be using an old version of docker then
[18:43:35] <ychaouche> ,v
[18:45:44] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[18:46:20] *** Quits: mei (~mei@user/mei) (Read error: Connection reset by peer)
[18:47:58] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[18:55:05] *** Joins: Ryu945 (Ryu945@gateway/vpn/protonvpn/ryu945)
[18:59:02] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[19:00:21] *** Joins: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net)
[19:04:42] *** Joins: ryu__ (~Ryu945@102.129.153.214)
[19:07:31] *** Quits: Ryu945 (Ryu945@gateway/vpn/protonvpn/ryu945) (Ping timeout: 252 seconds)
[19:19:16] *** Joins: Ryu945 (Ryu945@gateway/vpn/protonvpn/ryu945)
[19:21:46] *** Quits: ryu__ (~Ryu945@102.129.153.214) (Ping timeout: 265 seconds)
[19:23:31] *** Quits: Ryu945 (Ryu945@gateway/vpn/protonvpn/ryu945) (Ping timeout: 252 seconds)
[19:23:58] *** Quits: SteveR (~SteveR@192.146.154.3) (Quit: Client closed)
[19:30:05] *** Joins: Cienisty (Cienisty@user/cienisty)
[19:36:08] *** Quits: dmalteseknight (~dmaltesek@user/dmalteseknight) (Quit: WeeChat 3.2)
[19:38:50] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:42:09] <Cienisty> Hi, I have access to the l2tp ipsec server in the network where the database is located. What's the best idea to get there from the docker container? Is it better to make a separate container with the l2tp client or put the l2tp client on the host? I want to be able to access this database (only one ip address) in one docker network.
[19:42:33] *** Joins: Null_A (~null_a@2601:645:8700:2290:e9de:2461:c7b1:d42b)
[19:45:52] *** Joins: artok (~azo@mobile-access-b04844-153.dhcp.inet.fi)
[19:50:52] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[19:51:48] *** Joins: ExeciN (~ExeciN@user/nicexe)
[19:57:15] <ychaouche> how can I have a bash started inside a container to inspect its filesystem ? docker run <image> /bin/bash ?
[19:58:30] <Cienisty> docker exec -it <name> /bin/bash
[19:58:31] <artok> have entrypoint as bash. if there is entrypoint on the image itself, that won't work
[19:59:07] <artok> ..and for already running container, exec is the way
[19:59:33] <ychaouche> ok I was missing -it
[19:59:41] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[20:05:17] *** Joins: jazzy (~jaziz@2600:380:8479:d098:94a6:146f:5840:e64b)
[20:05:33] <ychaouche> oh yes, run creates a container. (I wonder why is it not simply named create ?)
[20:05:48] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[20:06:04] <ychaouche> oh there's already a create command...
[20:06:09] *** Quits: realies (~realies@user/realies) (Quit: ~)
[20:06:13] <ychaouche> so run is create+start I guess
[20:06:25] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[20:06:29] <artok> and pull if needed
[20:06:57] <ychaouche> oh nice
[20:07:14] <ychaouche> that's actually really nice
[20:07:21] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[20:08:01] *** Quits: vidbina (~vid@x4db70a3d.dyn.telefonica.de) (Ping timeout: 252 seconds)
[20:11:07] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[20:12:58] *** Quits: incognito (~relativit@user/incognito) (Ping timeout: 252 seconds)
[20:15:56] *** Joins: realies (~realies@user/realies)
[20:18:10] *** Joins: incognito (~relativit@user/incognito)
[20:26:40] *** Quits: realies (~realies@user/realies) (Quit: ~)
[20:29:16] *** Quits: rsx (~dummy@ppp-188-174-145-233.dynamic.mnet-online.de) (Quit: rsx)
[20:31:02] *** Joins: thiras (~thiras@user/thiras)
[20:37:33] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.0.1)
[20:38:02] *** Quits: momomo (~momomo@user/momomo) (Remote host closed the connection)
[20:38:30] *** Joins: realies (~realies@user/realies)
[20:40:38] *** Joins: vidbina (~vid@x4db70a3d.dyn.telefonica.de)
[20:41:58] *** Joins: SteveR (~SteveR@192.146.154.3)
[20:43:30] *** Quits: SirJitsu (~SirJitsu@162-231-111-175.lightspeed.livnmi.sbcglobal.net) (Quit: Leaving)
[20:44:09] *** Joins: downwater (~downwater@user/downwater)
[20:47:00] *** Quits: SteveR (~SteveR@192.146.154.3) (Ping timeout: 256 seconds)
[20:48:57] *** Joins: momomo (~momomo@user/momomo)
[20:49:40] <downwater> Hello, I'm installing docker on my machine (Linux). The package maintainer suggests to create a group to use docker as a limited user. They suggests this line: "groupadd -r -g 281 docker". Why should be relevant here to provide a GID?
[20:52:56] <ychaouche> I didn't create that group for my distro, it was already there.
[20:53:01] <ychaouche> I just added myself to that gruop
[20:53:15] <ychaouche> adduser ychaouche docker
[20:53:43] <ychaouche> you then need to logout/login again for the changes to take effect
[20:54:35] <ychaouche> you can check if the docker group was created with grep docker /etc/group
[20:56:02] <ychaouche> group id here was 135
[21:07:18] *** Quits: realies (~realies@user/realies) (Quit: ~)
[21:16:35] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[21:16:51] *** Joins: CombatVet (~c4@user/combatvet)
[21:18:38] <downwater> thanks ychaouche
[21:18:45] <ychaouche> hey no problem downwater
[21:19:26] <ychaouche> I can't really tell if you were asking about what the author had in mind if you were struggeling to install and run docker yourself
[21:19:37] <ychaouche> or if you were* ...
[21:19:56] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[21:20:13] <downwater> what the author had in mind
[21:20:45] <downwater> why docker would need a specific GID
[21:20:58] <ychaouche> :shrug:
[21:21:06] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:21:27] <downwater> I would :shudder: personnaly :p
[21:22:28] <downwater> At this point I think it's relevant to contact the maintainer
[21:23:22] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[21:26:40] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 252 seconds)
[21:28:04] <downwater> Mail sent. bye :)
[21:29:45] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[21:30:17] *** Parts: downwater (~downwater@user/downwater) (Leaving)
[21:36:14] *** Joins: incognito (~relativit@user/incognito)
[21:38:39] *** Joins: liefer3 (~liefer@user/liefer)
[21:39:29] *** Joins: sudomann (~sudomann@73.183.118.9)
[21:40:43] *** Quits: liefer (~liefer@user/liefer) (Ping timeout: 250 seconds)
[21:40:43] *** liefer3 is now known as liefer
[21:41:40] *** Joins: standardrat_ (~standardr@196.30.99.2)
[21:42:15] *** Joins: FreEm1nD (~freemindm@mail.guarapari.store)
[21:44:16] *** Quits: standardrat (~standardr@196.30.99.2) (Ping timeout: 252 seconds)
[21:45:33] <ychaouche> can't push my docker image to hub.docker.com :( https://gist.github.com/ychaouche/a44bbdfa2e9e75c6f9ee596d05fb1022
[21:46:05] <ychaouche> repo on the hub was created via web interface : https://hub.docker.com/r/ychaouche/wtii
[21:47:08] *** Quits: sudomann (~sudomann@73.183.118.9) (Ping timeout: 252 seconds)
[21:48:32] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[21:49:23] *** Quits: standardrat_ (~standardr@196.30.99.2) (Ping timeout: 246 seconds)
[21:49:46] *** Quits: vidbina (~vid@x4db70a3d.dyn.telefonica.de) (Ping timeout: 252 seconds)
[22:01:37] *** Parts: ychaouche (~ychaouche@user/ychaouche) (Konversation terminated!)
[22:05:42] *** Joins: Tach (~Tach@user/tach)
[22:16:07] *** Quits: ferr_ (~ferr@185.65.50.48) (Quit: ZNC - https://znc.in)
[22:16:32] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[22:21:34] *** Joins: standardrat (~standardr@102.39.93.9)
[22:22:20] *** Quits: incognito (~relativit@user/incognito) (Ping timeout: 252 seconds)
[22:24:44] *** Joins: fercell (~ferr@185.65.50.48)
[22:31:01] *** Quits: sed (~sed@pool-100-7-38-116.rcmdva.fios.verizon.net) (Ping timeout: 252 seconds)
[22:32:00] *** Joins: terrorjack (~terrorjac@static.3.200.12.49.clients.your-server.de)
[22:34:48] *** Quits: Null_A (~null_a@2601:645:8700:2290:e9de:2461:c7b1:d42b) (Remote host closed the connection)
[22:40:09] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Quit: Leaving)
[22:40:27] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[22:41:48] *** Joins: incognito (~relativit@user/incognito)
[22:43:23] *** Joins: zitter (~danilo@host-79-53-177-20.retail.telecomitalia.it)
[22:50:03] *** Joins: jkwnki (~jkwnki@p2e57952d.dip0.t-ipconnect.de)
[22:54:54] *** Quits: chipas_ (~chipas@user/dobbicorp) (Quit: Lost terminal)
[23:03:35] *** Quits: winstonsmith (~winstonsm@109.201.152.168) (Ping timeout: 252 seconds)
[23:05:12] *** Joins: winstonsmith (~winstonsm@109.201.152.162)
[23:07:58] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-41dd-c7b6-6757-fde9.res6.spectrum.com) (Ping timeout: 265 seconds)
[23:08:22] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[23:08:48] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[23:13:53] *** Quits: minimal (~minimal@user/minimal) (Quit: Leaving)
[23:14:00] *** Quits: BSaboia (~bsaboia@177.37.198.122) (Quit: This computer has gone to sleep)
[23:22:14] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Remote host closed the connection)
[23:22:43] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[23:28:39] *** Joins: incognito (~relativit@user/incognito)
[23:52:02] *** Quits: incognito (~relativit@user/incognito) (Quit: Going offline, see ya! (www.adiirc.com))
[23:55:03] *** Quits: zitter (~danilo@host-79-53-177-20.retail.telecomitalia.it) (Read error: Connection reset by peer)
[23:56:21] *** Quits: noarb- (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[23:56:58] *** Joins: noarb (~noarb@user/noarb)
[23:59:39] *** Quits: noarb (~noarb@user/noarb) (Client Quit)
[23:59:42] *** Quits: Tach (~Tach@user/tach) (Quit: Tach)
