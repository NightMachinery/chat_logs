[00:00:05] <jmercouris> aartaka: interessant
[00:00:10] <jmercouris> that is very surprising
[00:00:21] <jmercouris> well, I am off for now, my christmas break begins
[00:00:29] <jmercouris> I'll still be on the channel, but I won't be doing anything productive
[00:00:34] <jmercouris> mostly nonsense that I find interesting
[00:00:38] <jmercouris> it may accidentally be productive
[00:00:52] <jmercouris> so in case I don't see any of you, and in case you celebrate it, merry christmas!
[00:01:07] <jmercouris> and of course a happy new year
[00:01:14] <jmercouris> knowing myself though, I'm probably going to be on IRC 11
[00:02:07] <aartaka> jmercouris: have a good Christmas break!
[00:09:32] <waleee> jmercouris: I think edgarvincent[m] had some success with a similar looking error by changing one of the pkg-config flags
[00:19:06] <edgarvincent[m]> Yes. Long story short: I added `--maximum-traverse-depth 2` to the `pkg-config` call.
[00:19:20] <edgarvincent[m]> No idea whether it is a suitable solution.
[00:23:26] <edgarvincent[m]> It prevents `ld` from being called with flags meant for GCC as they are defined in /usr/lib/pkgconfig/gmodule-2.0.pc
[00:24:10] <edgarvincent[m]> (I feel like I am pretending to speak Mandarin fluently here)
[00:25:18] <edgarvincent[m]> gmodule-2.0.pc contains: `Libs: -Wl,--export-dynamic`
[00:25:57] <edgarvincent[m]> From what I understand, this flag is passed on from gcc to ld, but it won't work if ld is called with it directly.
[00:26:01] <waleee> jmercouris: also, gave a giid
[00:26:04] <waleee> gah
[00:26:14] <waleee> * good Christmas break
[00:26:55] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 268 seconds)
[00:28:26] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[00:30:12] <jmercouris> Thank you waleee !
[00:30:20] <jmercouris> Also thanks for the info
[00:30:48] <edgarvincent[m]> Have a nice holiday everyone!
[00:31:07] <edgarvincent[m]> I hope you can all relax and enjoy life & loved ones.
[00:34:55] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 250 seconds)
[00:35:36] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[00:36:49] *** Quits: amk (~amk@109.255.169.126) (Remote host closed the connection)
[00:38:17] *** Joins: amk (~amk@109.255.169.126)
[01:34:15] *** Quits: aartaka (aartaka@gateway/vpn/protonvpn/aartaka) (Ping timeout: 256 seconds)
[01:58:10] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Error from remote client)
[02:04:16] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[04:10:48] *** Quits: defaultxr (~defaultxr@99-138-110-241.lightspeed.cicril.sbcglobal.net) (Quit: bbl)
[05:20:56] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Error from remote client)
[05:24:44] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[06:26:13] <qhong> I just found out that prompter does accept HTML string, and I can format my docstring by writing HTML in it
[06:27:29] <qhong> I'm not sure if that is intentional design or accidental, though. Interpreting strings as raw HTML strings without escaping might cause problem (e.g. what if a "<" just shows up in the docstring of CL:<)?
[06:30:56] <qhong> There are several intentional design I can see:
[06:30:57] <qhong> 1. Use plump node uniformly. String has to be a special case and is (a) escaped or (b) never escaped.
[06:30:57] <qhong> 2. Use spinneret style sexp uniformly. String is naturally a subset of spinneret style sexp and is escaped.
[06:30:57] <qhong> 3. Status quo, use unescaped HTML string uniformly
[06:31:46] <qhong> I like 2 the most, there's a specific problem though: for docstrings, an S-expr won't be recognized as documentation in place of the docstring
[06:32:35] <qhong> maybe we can add a convention: if we see a quoted form as the first form of a function/command/etc body, store it as structured documentation?
[07:39:54] *** Quits: ynakao (~ynakao@user/ynakao) (Quit: WeeChat 3.3)
[07:40:54] *** Joins: ynakao (~ynakao@user/ynakao)
[08:31:14] *** Joins: defaultxr (~defaultxr@99-138-110-241.lightspeed.cicril.sbcglobal.net)
[08:52:00] *** Parts: pranavats (3fba1d1b34@jabberfr.org) (Error from remote client)
[08:54:05] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[09:28:57] *** Quits: taiju (~taiju@240b:253:ec40:2400:bd6b:dfac:c8bb:c6d4) (Ping timeout: 240 seconds)
[09:32:53] *** Joins: jackhill (~jackhill@kalessin.dragonsnail.net)
[11:02:16] *** Joins: aartaka (aartaka@gateway/vpn/protonvpn/aartaka)
[11:03:00] *** Joins: taiju (~taiju@240b:253:ec40:2400:bd6b:dfac:c8bb:c6d4)
[11:04:02] *** Quits: nm0i (znc@me0w.net) (Quit: -)
[11:08:28] *** Joins: nm0i (znc@me0w.net)
[11:22:48] *** Quits: geyaeb (~geyaeb@gateway/tor-sasl/geyaeb) (Remote host closed the connection)
[11:23:18] *** Joins: geyaeb (~geyaeb@gateway/tor-sasl/geyaeb)
[11:54:22] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 260 seconds)
[11:56:00] *** Joins: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4)
[12:03:35] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[12:08:40] *** Joins: shka (~herr@109.231.0.226)
[12:09:26] *** Joins: ano (~ano@user/ano)
[12:27:57] *** Quits: taiju (~taiju@240b:253:ec40:2400:bd6b:dfac:c8bb:c6d4) (Ping timeout: 240 seconds)
[12:29:38] *** Joins: taiju (~taiju@240b:253:ec40:2400:bd6b:dfac:c8bb:c6d4)
[13:12:57] *** Quits: taiju (~taiju@240b:253:ec40:2400:bd6b:dfac:c8bb:c6d4) (Ping timeout: 240 seconds)
[18:12:36] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[18:16:37] *** Quits: taiju (~taiju@M014013236064.v4.enabler.ne.jp) (Ping timeout: 240 seconds)
[18:17:38] *** Joins: taiju (~taiju@M014013236064.v4.enabler.ne.jp)
[18:30:13] *** Quits: kagevf (~jfh@ip68-108-33-76.lv.lv.cox.net) (Ping timeout: 240 seconds)
[18:30:26] *** Joins: kagevf (~jfh@ip68-108-33-76.lv.lv.cox.net)
[20:01:50] *** Joins: ardon (~user@user/ardon)
[20:04:21] <ardon> Hi Nyxt, I've got a small issue with my auto-mode rules. I'm trying to override the :constructor INITARG of one my custom modes for a specific match, but I keep getting a "Error on GTK thread: The value <my-fun> is not of type (or FUNCTION SYMBOL) when binding FUNCTION" when navigating to the site in question.
[20:08:48] <ardon> Nevermind, it seems to have gone throught without the sharpquote, unexpected :P !
[21:06:33] <Kabouik> So I've been on i3 for years. It works well for me and is well configured to work on all my devices, including SBCs and phones.
[21:06:52] <Kabouik> Should I break everything and try StumpWM as an excuse to force-learn common-lisp?
[21:08:54] <Kabouik> End-of-years holidays always come with the most stupid ideas and then the following year is just pain until the next stupid idea.
[21:09:35] <opalvaults[m]> Kabouik: StumpWM is great! If you use Emacs you could also try EXWM
[21:10:29] <Kabouik> I don't, that's the issue
[21:10:38] <opalvaults[m]> Kabouik: Never a bad idea to learn a new language by hacking with it. There's also Practical Common Lisp (the book) which is an excellent resource for building things :)
[21:11:04] <Kabouik> Never even heard of Common-Lisp before Nyxt, I'm not a programmer (just a hobbyist, maybe)
[21:11:14] <opalvaults[m]> Kabouik: Ooo, I definitely recommend Emacs. There's Doom Emacs and SpaceMacs if you're a vim user
[21:11:34] <opalvaults[m]> It comes with Evil mode and all that. Can take a second to get used to but it's the ultimate productivity machine and you can hack on it much like you can with Nyxt.
[21:11:41] <opalvaults[m]> Emacs was my gateway drug to CL :)
[21:11:52] <Kabouik> Problem is I'm kinda sold on Kakoune as editor, and I like minimal frugal programs, Emacs seems to be the opposite
[21:12:12] <Kabouik> s/on/to
[21:12:16] <opalvaults[m]> Hmm, I suppose we have different definitions of minimal! D:
[21:12:29] <opalvaults[m]> But that's fair. You can still learn CL with any editor
[21:12:53] <Kabouik> You pasted a multi-line message. When you close the editor final version of
[21:12:53] <Kabouik> I'm curious about these diverging definitions
[21:13:17] <Kabouik> Last time I tried emacs, it was indeed with Doom and the starting time alone made me concerned
[21:13:39] <Kabouik> Sorry about that multiline message above, problem with my irc client.
[21:14:57] <opalvaults[m]> Well I always start the Emacs server so my startup times are pretty minimal. However I'm not sure I'd be able to find a single program that is as extensible and hackable as Emacs and has a low start-up time. It's more than a text editor so there's a lot that comes with that.
[21:16:28] <opalvaults[m]> However it's I find minimal and simple the same way I find Nyxt to be minimal and simple. I extend the program to my needs and it doesn't do anything more than what I tell it to. I'm able to organize code and libraries for my own program. It's a canvas, so to speak.
[21:17:10] <opalvaults[m]> I'm not familiar with kakoune, fwiw
[21:17:24] <opalvaults[m]> I'm sure it's great. Either way, doesn't hurt to learn Common Lisp with StumpWM
[21:17:57] <opalvaults[m]> There's a youtuber named Gavin who does a video or two with it and it's excellent! If you're interested in Lisp in general, there's GNU Guix which is extensible through guile scheme
[21:19:12] <opalvaults[m]> Kabouik: https://github.com/opalvault/dotfiles/blob/master/StumpWM.org here's my Stump config if it gives you any ideas. I haven't hacked on it in a while but you might find a piece or two you like
[21:25:06] <Kabouik> Yup I know about Gavin and was thinking Guix might be worth a try during the holidays actually, I brought an SBC with me for trials
[21:26:04] <Kabouik> Kakoune is just an editor, not like emacs I guess, but I like it and the bindings are more straightforward than vim's I think (also less keypresses for combined actions in general)
[21:26:39] <Kabouik> Thanks for your config, I'll most likely give it a try soon!
[21:26:49] <opalvaults[m]> Cool! Hope it goes well for ya :)
[21:27:12] <opalvaults[m]> There's also a Nyxt config and if you ever decide to roll your own Emacs config there's an Emacs.org file in there as well.
[21:27:19] <opalvaults[m]> Systemcrafters is a great resource
[21:27:32] <opalvaults[m]> He works with GNU Guix, Emacs, a little bit of StumpWM iirc.
[21:27:55] <Kabouik> Reading your README. "Focus window with mouth", you lispers have a problem. :p
[21:28:45] <opalvaults[m]> Kabouik: LMAO
[21:28:47] <opalvaults[m]> nice catch
[21:28:52] <opalvaults[m]> no idea how that ended up there
[21:29:16] <Kabouik> I have a Nyxt config already but 90% of it is ripped from others, 10% is my own additions on things that were easy to complete, I still don't understand much in lisp except that (+ 2 3)  is 5.
[21:30:01] <opalvaults[m]> okay i fixed the s/mouth/mouse thing ahaha
[21:30:20] <opalvaults[m]> Kabouik: I can't recommend Practical Common Lisp enough tbh
[21:30:38] <opalvaults[m]> It's free online, or if you're into books I bought my copy for cheap
[21:31:08] <opalvaults[m]> I actually have it right beside me because I use it for referencing :D
[21:32:12] <opalvaults[m]> Also if Kakoune allows you to hook a REPL up to your program, definitely do that so you can evaluate functions in real-time.
[21:32:29] <opalvaults[m]> I've only used Sly/SLIME but I'm sure there are alternatives
[21:33:19] <Kabouik> See, that also is a concept I don't fully comprehend yet.
[21:33:42] <Kabouik> I do use REPL for interfacing R with Kakoune and running my scripts in R while editing them
[21:34:34] <Kabouik> But I'm not sure how that works with things like emacs that to me are primarily an editor, not quite like R which executes my code and shows outputs
[21:34:46] <opalvaults[m]> Hmm, essentially Lisps use a READ EVAL PRINT LOOP, which is like a cracked out Python interpreter. It allows for you to extend and manipulate programs as they are running.
[21:34:50] <Kabouik> Maybe it's my misconception that emacs is an editor, I blame the vim/emacs war
[21:35:46] <opalvaults[m]> It's not the same as a regular interpreter however, as you're loading the entire language environment into your program in real-time. So for instance, in Emacs I can change a piece of code that relates to keybindings, and when I evaluate the expression it changes the keybind immediately
[21:36:09] <opalvaults[m]> So you can test changes and never have to restart Emacs, or revert changes by evaluating the configuration/functions again.
[21:36:47] *** Parts: ardon (~user@user/ardon) (ERC 5.4 (IRC client for GNU Emacs 28.0.90))
[21:36:56] <Kabouik> But doesn't reevaluating feel like restarting anyway? Or it's much shorter because you only reevaluate one chunk?
[21:38:21] <opalvaults[m]> No it's not restarting at all, it's evaluating the code inside the program as its running. There's no downtime for the REPL so when you evaluate an expression it reflects in the program immeidately.
[21:38:21] <Kabouik> Like in R when I use Kakoune repl, I dislike something in my plot or output, so I change the code in Kakoune, and I have to run it again anyway. Of course I don't need to relaunch R, but my script is just a series of commands anyway, not something to be compiled
[21:38:57] <opalvaults[m]> It's the same for Nyxt actually. You can evaluate an expression in the Nyxt repl and it immediately changes the environment due to that fact that when you open Nyxt, it also brings with it the REPL.
[21:39:24] <opalvaults[m]> Well I'm unfamiliar with R, maybe it's similar?
[21:41:28] <opalvaults[m]> In any case, that's kind of the schtick with Lisps and their REPL.
[21:44:04] <Kabouik> What I really need is clarifying the definitions I have of all those concepts.
[21:44:55] <Kabouik> Even REPL, I vaguely know what it is, I use it (for R), but I'm still not certain how it differs from copying a line of code in an editor and pasting it in the console of the program or shell that can execute that code.
[21:46:05] <Kabouik> Until then, I think it'll be hard for me to understand how emacs is more than a text editor and what I can interact with from emacs that I couldn't do from another editor with REPL too.
[21:52:12] <opalvaults[m]> If you get a chance Kabounik, take a look at the Elpa, Melpa repositories. There are thousands of packages for emacs that do everything from driving Kubernetes to playing chess. It's not that you can extend the editor part itself, it's that you can extend the entire Emacs program. You could never use the editing portion and purely stick to using Magit if you wanted to. It's all the same to Emacs.
[21:54:33] <opalvaults[m]> And re: REPL vs just printing in a console: https://en.m.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop
[21:55:00] <opalvaults[m]> I'd take a browse over the wiki article, maybe it'll do a better job of explaining it than I can. :)
[21:56:18] <opalvaults[m]> Anyways, I'm off for now, happy hacking!
[21:57:11] <opalvaults[m]> Ps: https://github.com/a-schaefers/systemE
[21:57:40] <Kabouik> I was a fool when I took a book with me for the holidays in case I would be bored :p
[21:57:59] <edgarvincent[m]> Haha, one thing to bear in mind is that systemE is a joke.
[21:58:12] <opalvaults[m]> An awesome joke ;)
[21:58:32] <Kabouik> Thanks a lot for all the links and general advice opalvaults[m], I'll try to take a look to all that but it's a bit overwhelming from where I stand, I must say (hence why nyxt + stumpwm could help, because the need makest the motivation to learn).
[22:06:42] *** Quits: Jing (~hedgehog@115.207.51.59) (Read error: Connection reset by peer)
[22:07:27] *** Joins: Jing (~hedgehog@2604:a840:3::1061)
[22:07:43] <Kabouik> About Guix, I must say that this https://ambrevar.xyz/guix-advance/#orgf946d5d on Ambrevar's website is exciting
[22:08:48] <Kabouik> Now I wonder if I can do something a bit different: install Guix on a thumb drive (pretty much like a Live USB) with write permissions, play a bit with it in live mode and try to install key things like Nyxt and a WM, and then if I'm pleased, use it as an install disk with `guix system disk-image`
[22:09:29] <Kabouik> Not really a topic for #nyxt but since it's Ambrevar's website and since devs (jmercouris at least) are off, I'm not sorry to drift about lisp here!
[22:13:39] <Kabouik> I'll bother folks at #guix too.
[22:16:16] <edgarvincent[m]> I don't think you should feel sorry.
[22:16:38] <edgarvincent[m]> Emacs is indeed worth a go, and it's a fun way to learn Lisp.
[22:17:04] <edgarvincent[m]> Although the CL used in Nyxt and Emacs Lisp are fairly different.
[22:17:48] <edgarvincent[m]> I've never managed to use Guix for more than two days.
[22:18:16] <edgarvincent[m]> It looks very interesting, but I don't see it being particularly useful for an end-user.
[22:20:56] <lagash> What's the FotD? Perhaps tomorrow's can be fruitcake? ;)
[22:21:50] <edgarvincent[m]> In principle, I'd love to be able to deploy my system easily, and manage my configuration with home-manager, but in the end, using Arch and making frequent backups is just as good.
[22:22:28] <edgarvincent[m]> Also, it seems to me that while Guix is a very advanced package manager, Guix System lacks a lot of polish.
[22:24:13] <waleee> lagash: I think none has been declared yet, jmercouris announced time away
[22:24:33] <waleee> so feel free to declare a festive one
[22:27:14] <lagash> Just made a new PR! https://github.com/atlas-engineer/nyxt/pull/1961
[22:28:44] <lagash> Anyone on the dev team do pair programming??
[22:28:55] <waleee> wtf does macos use for lsblk functionality? (trying to remotely help someone)
[22:30:46] <edgarvincent[m]> waleee: I think it's diskutil list, or something like that.
[22:32:41] <waleee> thx
[22:59:04] *** Quits: pjb (~pjb@user/pjb) (Remote host closed the connection)
[23:13:28] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[23:13:54] *** Joins: ano (~ano@user/ano)
[23:27:16] *** Joins: pjb (~pjb@user/pjb)
[23:32:47] *** Quits: waleee (~waleee@2001:9b0:21d:fc00:398f:b003:b90d:acf4) (Ping timeout: 252 seconds)
[23:34:50] *** Joins: waleee (~waleee@h-98-128-229-110.NA.cust.bahnhof.se)
