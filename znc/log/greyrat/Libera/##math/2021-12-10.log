[00:00:02] *** Quits: diophantoz (~diophanto@user/diophantoz) (Ping timeout: 252 seconds)
[00:00:13] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (Ping timeout: 252 seconds)
[00:00:13] *** Flonk7 is now known as Flonk
[00:01:24] <lericson> ah jesus this is just so hard to think yourself through
[00:01:25] <somiaj> Aren't you going to just get some circle on the sphere? I think you could do this more gemeotrically just using the fact the tangent line intersects the sphere at a right angle to the radius, and create a right triangle between the point (a,b), center of the sphere, and the point on the sphere creating a right triangle
[00:02:37] <lericson> it would be half of a circle
[00:02:51] <lericson> each line that is
[00:03:04] <lericson> so a 180 degree arc
[00:03:44] <somiaj> ahh you don't want all possible, but just some, though either way, I think you can geometrically figure it out vs using the parametrizations of the lines
[00:04:05] <lericson> no i need all possible lines, because i have to discretize them
[00:04:45] <somiaj> well once you know the circle of points on the sphere, you can easily use that to parametrize the lines
[00:04:46] <lericson> hence also the parameterization
[00:04:59] <somiaj> but to figure out what lines you need, I'd go a more geometric approach
[00:05:58] *** Quits: Kevin578 (~Kevin578@pool-96-237-112-198.bstnma.fios.verizon.net) (Ping timeout: 256 seconds)
[00:06:05] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:d118:d107:8477:44eb) (Ping timeout: 252 seconds)
[00:06:52] *** Joins: Kevin578 (~Kevin578@pool-96-237-112-198.bstnma.fios.verizon.net)
[00:07:03] <lericson> mm
[00:07:08] <lericson> i'm not sure how
[00:07:30] *** Joins: SpikeHeron (~DutchIngr@user/dutch)
[00:07:32] *** Joins: k60`` (~user@static.100.218.46.78.clients.your-server.de)
[00:07:44] <lericson> i can find the lines for the pole using my parameterization, i'm just not sure what to do when it's somewhere else, it seems like i should be able to just rotate the line parameters
[00:11:44] <lericson> in the pole case, all lines would be rotated 90 degrees. if you have a point on the equator, they would not all be rotated 90 degrees; lines along the equator would have 0 degrees
[00:12:19] *** Quits: BlueSky_ (~BlueSky@user/bluesky) (Ping timeout: 252 seconds)
[00:13:25] <lericson> the rotation is the bearing between the line center and the given point
[00:13:35] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[00:13:49] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[00:14:47] <lericson> by line center i mean where the tangent line touches the sphere
[00:16:05] *** Quits: ninjabanjo (~ninjabanj@107.150.45.163) (Quit: ZNC - https://znc.in)
[00:16:55] *** Quits: quantum (~quantum@user/quantum/x-8556232) (Ping timeout: 268 seconds)
[00:16:55] *** Quits: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4) (Ping timeout: 268 seconds)
[00:16:55] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[00:17:32] *** Quits: gloomy (~gloomy@2001:470:69fc:105::ce00) (Ping timeout: 240 seconds)
[00:17:38] *** Quits: jinsun_ (~jinsun@user/jinsun) (Ping timeout: 252 seconds)
[00:18:01] *** Quits: BrownJenkin (~falconsti@2001:470:69fc:105::36d) (Ping timeout: 250 seconds)
[00:18:01] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Ping timeout: 250 seconds)
[00:18:11] *** Quits: davidk156305 (~davidk156@2001:470:69fc:105::1:484e) (Ping timeout: 252 seconds)
[00:18:14] *** Quits: niedzejkob[m] (~niedzejko@2001:470:69fc:105::1:1c02) (Ping timeout: 250 seconds)
[00:18:15] <lericson> https://math.stackexchange.com/questions/1019910/rotation-matrix-in-spherical-coordinates
[00:18:17] *** Quits: Inline (~Inline@aftr-37-201-241-234.unity-media.net) (Quit: Leaving)
[00:18:18] <lericson> this seems useful
[00:18:28] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[00:18:32] *** Quits: matrixidentity[m (~matrixide@2001:470:69fc:105::1:2e68) (Ping timeout: 240 seconds)
[00:18:42] *** Quits: DerlgM (~lucifargu@2001:470:69fc:105::2faa) (Ping timeout: 260 seconds)
[00:18:42] *** Quits: dunpeal (~dunpeal@2001:470:69fc:105::3e80) (Ping timeout: 260 seconds)
[00:18:44] *** Quits: Freemo[m] (~freemoqot@2001:470:69fc:105::c203) (Ping timeout: 252 seconds)
[00:18:44] *** Joins: Inline (~Inline@aftr-37-201-241-234.unity-media.net)
[00:19:05] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:2d97:d647:614f:583a)
[00:19:17] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Ping timeout: 252 seconds)
[00:19:19] *** Quits: nicoty (~nicoty@user/nicoty) (Ping timeout: 250 seconds)
[00:19:22] *** Joins: ninjabanjo (~ninjabanj@107.150.45.163)
[00:19:31] *** Quits: atx (~atx@2001:470:69fc:105::923) (Ping timeout: 250 seconds)
[00:19:38] *** Quits: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5) (Ping timeout: 260 seconds)
[00:19:45] *** Quits: aplund (~aplundmat@2001:470:69fc:105::4146) (Ping timeout: 250 seconds)
[00:19:45] *** Quits: sp (~sp@user/susam) (Ping timeout: 250 seconds)
[00:20:02] *** Quits: Tisoxin (~ikosit@user/ikosit) (Ping timeout: 240 seconds)
[00:20:06] *** Quits: kadoban (~kadoban@user/kadoban) (Ping timeout: 260 seconds)
[00:20:06] *** Quits: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631) (Ping timeout: 260 seconds)
[00:20:37] *** Quits: BitPuffin (~bitpuffin@2001:470:69fc:105::c9c5) (Ping timeout: 268 seconds)
[00:20:38] *** Quits: smitop[m] (~smitopkde@2001:470:69fc:105::1:117) (Ping timeout: 268 seconds)
[00:21:51] *** Quits: DrBanana[m] (~drbanana@2001:470:69fc:105::3c9a) (Ping timeout: 268 seconds)
[00:23:08] *** Joins: pavonia (~user@user/siracusa)
[00:24:02] *** Quits: son0p (~ff@181.136.122.143) (Remote host closed the connection)
[00:28:51] *** Joins: DrBanana[m] (~drbanana@2001:470:69fc:105::3c9a)
[00:31:35] *** Joins: plankster_ (~plankster@user/plankers)
[00:32:13] *** Quits: plankster (~plankster@user/plankers) (Ping timeout: 240 seconds)
[00:33:34] *** Joins: kadoban (~kadoban@user/kadoban)
[00:33:38] *** Joins: smitop[m] (~smitopkde@2001:470:69fc:105::1:117)
[00:34:47] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 268 seconds)
[00:36:31] *** Joins: sp (~sp@user/susam)
[00:36:45] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[00:36:48] *** Quits: audio (~audio@user/audio) (Ping timeout: 265 seconds)
[00:36:52] <lericson> couldn't i just do this with quaternions
[00:37:24] <lericson> describe each tangent line as a quaternion that maps the tangent point to the pole
[00:37:32] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[00:37:49] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[00:38:08] <lericson> then composing rotations is just quaternion multiplication
[00:38:53] *** Joins: BrownJenkin (~falconsti@2001:470:69fc:105::36d)
[00:39:04] *** Joins: bobb_ (~bobb_@dslb-092-074-247-064.092.074.pools.vodafone-ip.de)
[00:39:42] <decker> easier to just use the 3 angles for x/y/z and use a quaternion yes.  YOu can convert your azimuth-elevtation to a direction normal and then the angle around the is the scalar for axis-angle conversion
[00:39:47] *** Joins: quantum (~quantum@user/quantum/x-8556232)
[00:40:02] <decker> the quaternion is just cos(th/2)+sin(th/2)(x,y,z)  where x/y/z is the unit normal direction
[00:40:40] <decker> which then they suggest rodrigues's rule for comosite rotations using just the axis and angle in the stackoverflow
[00:40:50] <decker> https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation#The_composition_of_spatial_rotations
[00:40:54] <bobb_> How can i fit a hermite function https://en.wikipedia.org/wiki/Hermite_polynomials#Hermite_functions with a fixed degree of 1?
[00:40:59] *** Joins: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4)
[00:42:20] *** Joins: Maturion (~Maturion@p200300ede7135c00844d881b17860d82.dip0.t-ipconnect.de)
[00:42:21] <bobb_> i found descriptions about fitters for hermite polynoms of arbitrary degree but do not immediately see how they can be applied on hermite functions
[00:43:26] *** Joins: gloomy (~gloomy@2001:470:69fc:105::ce00)
[00:44:23] *** Joins: johnkeats6 (~johnkeats@2804:14c:32:a0cc:9d8c:aff8:17c8:a5bf)
[00:47:40] *** Quits: ko (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[00:49:01] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:2d97:d647:614f:583a) (Ping timeout: 240 seconds)
[00:51:45] *** Joins: diophantoz (~diophanto@user/diophantoz)
[00:52:21] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[00:52:40] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 268 seconds)
[00:54:08] *** Quits: jellyknight (~gelignite@55d403aa.access.ecotel.net) (Quit: Stay safe!)
[00:55:21] *** Joins: Pickchea (~private@user/pickchea)
[00:55:43] *** Joins: sshine (~simon@hubris.eta.solutions)
[00:56:35] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[00:58:24] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[00:59:14] <sshine> if I multiply two uint64s, they will naturally overflow at 2^64. if I want to perform two multiplications modulo N = 2^64 - 2^32 + 1, inside of an uint64, then just doing (a * b) % N might overflow at 2^64 before I get a chance to % N it. is there an efficient way to ensure that the result is correct, without resorting to a uint65, if I know that N is prime?
[00:59:55] *** Joins: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631)
[01:00:13] *** Quits: sazawal (~sazawal@122.161.85.155) (Quit: Leaving)
[01:00:29] *** Quits: xff0x (~xff0x@2001:1a81:5338:9c00:d04b:38a4:ed4b:d288) (Ping timeout: 265 seconds)
[01:00:50] <river> sshine: https://cp4space.hatsya.com/2021/09/01/an-efficient-prime-for-number-theoretic-transforms/
[01:01:03] *** Joins: xff0x (~xff0x@2001:1a81:5338:9c00:9209:5fa4:fe4c:a1bd)
[01:01:08] <river> multiply into 3 words and then reduce down using this efficient algorithm
[01:02:07] *** Joins: jinsun_ (~jinsun@user/jinsun)
[01:03:04] <sshine> river, wow, that was exactly what I was looking for, haha.
[01:03:14] <sshine> river, thanks!
[01:03:18] <river> yw
[01:08:44] *** Parts: f-a (f2a@f2a.jujube.ircnow.org) ()
[01:08:52] *** Quits: vaporatorius (~vaporator@user/vaporatorius) (Ping timeout: 256 seconds)
[01:09:56] *** Quits: Trigo (~NeedMathH@64.201.115.44) (Ping timeout: 268 seconds)
[01:13:23] *** Joins: Tisoxin (~ikosit@user/ikosit)
[01:15:57] *** Quits: a0z1 (~a0z1@194.36.25.57) (Ping timeout: 265 seconds)
[01:16:46] *** Quits: BSaboia (~bsaboia@177.37.198.179) (Quit: This computer has gone to sleep)
[01:17:13] *** Joins: BitPuffin (~bitpuffin@2001:470:69fc:105::c9c5)
[01:19:54] *** Joins: BSaboia (~bsaboia@177.37.198.179)
[01:20:28] *** Joins: davidk156305 (~davidk156@2001:470:69fc:105::1:484e)
[01:20:54] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Quit: asetuhaosenuhason)
[01:21:32] *** Joins: vaporatorius (~vaporator@78.red-176-84-46.dynamicip.rima-tde.net)
[01:21:32] *** Quits: vaporatorius (~vaporator@78.red-176-84-46.dynamicip.rima-tde.net) (Changing host)
[01:21:32] *** Joins: vaporatorius (~vaporator@user/vaporatorius)
[01:22:19] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:2d97:d647:614f:583a)
[01:26:00] *** Joins: Macuser (~Macuser@216.30.159.201)
[01:26:16] *** Joins: son0p (~ff@2800:484:1d81:b700:d40b:900:b387:320)
[01:27:26] *** Quits: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:e508:1c65:a2f:d5d5) (Quit: I'll be back)
[01:29:38] *** Joins: vicfred (~vicfred@user/vicfred)
[01:33:04] *** Joins: garqq (~garqq@cpeac202e0695f3-cmac202e0695f0.cpe.net.cable.rogers.com)
[01:33:09] *** Joins: dmenz (~dmenz@2804:14d:5cd4:5e94::1)
[01:34:49] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:3700:12c3:7bff:fe6d:d374) (Ping timeout: 252 seconds)
[01:37:01] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Ping timeout: 240 seconds)
[01:38:46] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[01:38:50] *** Quits: bobb_ (~bobb_@dslb-092-074-247-064.092.074.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[01:39:05] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[01:39:59] *** Quits: dmenz (~dmenz@2804:14d:5cd4:5e94::1) (Quit: Leaving)
[01:40:13] *** Joins: matrixidentity[m (~matrixide@2001:470:69fc:105::1:2e68)
[01:40:49] *** Joins: Guest1853 (~user@cpe5c7d7dbd2142-cm5c7d7dbd2140.cpe.net.cable.rogers.com)
[01:41:03] *** Guest1853 is now known as Hazey_Dream
[01:42:46] <garqq> Is this true P(Y=1)=P(X=0)P(Y=1|X=0)+P(X=1)P(Y=1|X=1) ?
[01:42:47] *** Joins: Guest7892 (~Guest78@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[01:42:57] <Hazey_Dream> There are 2 sets of twelve dice, with each of the 12 dice in those sets individually & randomly showing 1 of 6 faces. What are the odds ANY of the 12 dice shows a matching face to another dice in the other set?
[01:47:33] *** Joins: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5)
[01:47:35] <int-e> garqq: what do you know about X?
[01:47:56] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[01:48:28] <garqq> int-e oh this is law of total probability right?
[01:48:54] *** Joins: dauggy_ (~wojtek@31.12.0.178)
[01:49:51] *** Joins: andreasbuhr (~quassel@p549db5b0.dip0.t-ipconnect.de)
[01:49:51] *** Quits: andreasbuhr (~quassel@p549db5b0.dip0.t-ipconnect.de) (Client Quit)
[01:49:53] <int-e> "obvious" has so many names :-/
[01:49:58] *** Quits: dauggy_ (~wojtek@31.12.0.178) (Client Quit)
[01:50:08] <int-e> garqq: Anyway, it may be. it depends on X.
[01:50:45] <garqq> ok
[01:52:04] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Write error: Connection reset by peer)
[01:52:04] *** Quits: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5) (Read error: Connection reset by peer)
[01:52:04] *** Quits: matrixidentity[m (~matrixide@2001:470:69fc:105::1:2e68) (Read error: Connection reset by peer)
[01:52:05] *** Quits: davidk156305 (~davidk156@2001:470:69fc:105::1:484e) (Write error: Connection reset by peer)
[01:52:06] *** Quits: quantum (~quantum@user/quantum/x-8556232) (Write error: Connection reset by peer)
[01:52:07] *** Quits: jinsun_ (~jinsun@user/jinsun) (Write error: Connection reset by peer)
[01:52:07] *** Quits: BrownJenkin (~falconsti@2001:470:69fc:105::36d) (Read error: Connection reset by peer)
[01:52:07] *** Quits: BitPuffin (~bitpuffin@2001:470:69fc:105::c9c5) (Read error: Connection reset by peer)
[01:52:07] *** Quits: DrBanana[m] (~drbanana@2001:470:69fc:105::3c9a) (Write error: Connection reset by peer)
[01:52:08] *** Quits: kadoban (~kadoban@user/kadoban) (Read error: Connection reset by peer)
[01:52:08] *** Quits: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4) (Write error: Connection reset by peer)
[01:52:08] *** Quits: smitop[m] (~smitopkde@2001:470:69fc:105::1:117) (Read error: Connection reset by peer)
[01:52:08] *** Quits: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631) (Read error: Connection reset by peer)
[01:52:09] *** Quits: Tisoxin (~ikosit@user/ikosit) (Write error: Connection reset by peer)
[01:52:10] *** Quits: sp (~sp@user/susam) (Read error: Connection reset by peer)
[01:52:10] *** Quits: gloomy (~gloomy@2001:470:69fc:105::ce00) (Write error: Connection reset by peer)
[01:53:32] *** Joins: atx (~atx@2001:470:69fc:105::923)
[01:56:03] <SrPx> I'm deeply disturbed that 100 in hex is 64
[01:56:04] *** Joins: kadoban (~kadoban@user/kadoban)
[01:56:04] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[01:56:04] *** Joins: quantum (~quantum@user/quantum/x-8556232)
[01:56:04] *** Joins: dunpeal (~dunpeal@2001:470:69fc:105::3e80)
[01:56:04] *** Joins: sp (~sp@user/susam)
[01:56:05] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[01:56:05] *** Joins: smitop[m] (~smitopkde@2001:470:69fc:105::1:117)
[01:56:09] <learner36> how do I derive a group fourier transform on project special linear group PSL(3,R)? does anyone have a formula for this?
[01:56:20] *** Joins: DrBanana[m] (~drbanana@2001:470:69fc:105::3c9a)
[01:56:20] *** Joins: Freemo[m] (~freemoqot@2001:470:69fc:105::c203)
[01:56:20] *** Joins: aplund (~aplundmat@2001:470:69fc:105::4146)
[01:56:20] *** Joins: DerlgM (~lucifargu@2001:470:69fc:105::2faa)
[01:56:20] *** Joins: niedzejkob[m] (~niedzejko@2001:470:69fc:105::1:1c02)
[01:56:20] *** Joins: gloomy (~gloomy@2001:470:69fc:105::ce00)
[01:56:20] *** Joins: jinsun_ (~jinsun@user/jinsun)
[01:56:20] *** Joins: nicoty (~nicoty@user/nicoty)
[01:56:20] *** Joins: Tisoxin (~ikosit@user/ikosit)
[01:56:24] <learner36> *how do I derive a group fourier transform on projective special linear group PSL(3,R)? does anyone have a formula for this?
[01:56:33] *** Joins: matrixidentity[m (~matrixide@2001:470:69fc:105::1:2e68)
[01:56:33] *** Joins: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5)
[01:56:33] *** Joins: BitPuffin (~bitpuffin@2001:470:69fc:105::c9c5)
[01:56:47] *** Joins: davidk156305 (~davidk156@2001:470:69fc:105::1:484e)
[01:56:48] *** Joins: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4)
[01:56:48] *** Joins: BrownJenkin (~falconsti@2001:470:69fc:105::36d)
[01:56:48] *** Joins: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631)
[01:59:12] <Panther> I dunno, but it looks kewl.
[01:59:18] *** Quits: BSaboia (~bsaboia@177.37.198.179) (Quit: This computer has gone to sleep)
[01:59:36] <Panther> There is a direct relationship between the Fourier transform on finite groups and the representation theory of finite groups. The set of complex-valued functions on a finite group, {\displaystyle G}G, together with the operations of pointwise addition and convolution, form a ring that is naturally identified with the group ring of {\displaystyle G}G over the complex numbers, {\displaystyle
[01:59:36] <Panther> \mathbb {C} [G]}{\displaystyle \mathbb {C} [G]}. Modules of this ring are the same thing as representations.
[02:00:17] * Panther smiles
[02:00:18] *** Joins: Trigo (~NeedMathH@64.201.115.44)
[02:01:00] *** Quits: mnl (~mnl@user/mnl) (Ping timeout: 256 seconds)
[02:01:18] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[02:01:59] *** Joins: constxd (~brad@142.134.38.68)
[02:02:42] *** Quits: Nitrousoxide_ (~msdos@user/nitrousoxide) (Ping timeout: 256 seconds)
[02:03:46] *** Joins: FragmentedCurve (~FC@192.199.187.86)
[02:04:13] <Panther> Fourier transform is integral to all modern imaging, and is particularly important in MRI.  That was important in the research project I did as an undergrad.
[02:04:29] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[02:04:53] <learner36> yeah, I'm still not fully clear on how to get the group Fourier transform for PSL(3,R)
[02:05:04] *** Quits: FragmentedCurve (~FC@192.199.187.86) (Client Quit)
[02:05:06] <learner36> this is supposed to be for drone navigation
[02:05:55] <learner36> it's to make a neural network based on the drone camera equivariant to rotational symmetries
[02:06:08] *** Joins: FragmentedCurve (~FC@192.199.187.86)
[02:09:53] <learner36> I'm trying to embed this principle in the network architecture along the lines of Geometric Deep Learning
[02:12:18] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[02:14:17] <decker> https://en.wikipedia.org/wiki/Projective_linear_group#Mathieu_groups I could only find a thing for PSL(3,4) are you trying to build a new thing?
[02:15:28] *** Quits: gas51627 (uid91066@id-91066.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:16:07] <decker> https://d3x0r.github.io/STFRPhysics/3d/indexHarmonics.html was playing with spherical harmonics- but that's only 3.  It looks like you'd just run separate FFT's for each axis and recomposite their results at the end to get the direction (which would be a phase difference right?)
[02:16:49] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: Client limit exceeded: 20000)
[02:16:57] *** Quits: evidlo (~evidlo@2001:470:69fc:105::7fc) (Quit: Client limit exceeded: 20000)
[02:17:06] *** Quits: nicoty (~nicoty@user/nicoty) (Quit: Client limit exceeded: 20000)
[02:17:27] *** Quits: atx (~atx@2001:470:69fc:105::923) (Quit: Client limit exceeded: 20000)
[02:17:27] *** Quits: Tisoxin (~ikosit@user/ikosit) (Quit: Client limit exceeded: 20000)
[02:17:35] <Panther> http://cms.dt.uh.edu/Faculty/TurskiJ/research/PR%202000.pdf
[02:17:43] *** Quits: DerlgM (~lucifargu@2001:470:69fc:105::2faa) (Quit: Client limit exceeded: 20000)
[02:17:47] *** Quits: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4) (Quit: Client limit exceeded: 20000)
[02:17:49] *** Quits: BrownJenkin (~falconsti@2001:470:69fc:105::36d) (Quit: Client limit exceeded: 20000)
[02:17:50] *** Joins: atx (~atx@2001:470:69fc:105::923)
[02:17:50] <Panther> There is a paper about using these things for cameras.
[02:17:50] *** Joins: evidlo (~evidlo@2001:470:69fc:105::7fc)
[02:17:51] *** Joins: kadoban (~kadoban@user/kadoban)
[02:17:53] *** Quits: Freemo[m] (~freemoqot@2001:470:69fc:105::c203) (Quit: Client limit exceeded: 20000)
[02:17:53] *** Quits: smitop[m] (~smitopkde@2001:470:69fc:105::1:117) (Quit: Client limit exceeded: 20000)
[02:18:02] *** Joins: hsiktas[m] (~hsiktasma@2001:470:69fc:105::30d4)
[02:18:04] *** Quits: BitPuffin (~bitpuffin@2001:470:69fc:105::c9c5) (Quit: Client limit exceeded: 20000)
[02:18:09] *** Quits: aplund (~aplundmat@2001:470:69fc:105::4146) (Quit: Client limit exceeded: 20000)
[02:18:14] *** Joins: smitop[m] (~smitopkde@2001:470:69fc:105::1:117)
[02:18:15] *** Quits: quantum (~quantum@user/quantum/x-8556232) (Quit: Client limit exceeded: 20000)
[02:18:19] *** Quits: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4) (Quit: Client limit exceeded: 20000)
[02:18:27] *** Joins: Freemo[m] (~freemoqot@2001:470:69fc:105::c203)
[02:18:28] *** Joins: aplund (~aplundmat@2001:470:69fc:105::4146)
[02:18:30] *** Quits: sp (~sp@user/susam) (Quit: Client limit exceeded: 20000)
[02:18:35] *** Quits: dunpeal (~dunpeal@2001:470:69fc:105::3e80) (Quit: Client limit exceeded: 20000)
[02:18:40] *** Joins: DerlgM (~lucifargu@2001:470:69fc:105::2faa)
[02:18:41] *** Joins: nicoty (~nicoty@user/nicoty)
[02:18:41] *** Joins: Tisoxin (~ikosit@user/ikosit)
[02:18:49] *** Quits: garqq (~garqq@cpeac202e0695f3-cmac202e0695f0.cpe.net.cable.rogers.com) (Quit: Client closed)
[02:18:54] *** Quits: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5) (Quit: Client limit exceeded: 20000)
[02:18:54] *** Joins: BitPuffin (~bitpuffin@2001:470:69fc:105::c9c5)
[02:18:55] *** Joins: seninha (~seninha@user/seninha)
[02:19:02] *** Quits: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631) (Quit: Client limit exceeded: 20000)
[02:19:06] *** Joins: arconte[m] (~arcontema@2001:470:69fc:105::1:2fe4)
[02:19:07] *** Joins: BrownJenkin (~falconsti@2001:470:69fc:105::36d)
[02:19:21] *** Joins: milia[m] (~mlliarmma@2001:470:69fc:105::1:4631)
[02:19:28] *** Joins: BSaboia (~bsaboia@177.37.198.179)
[02:19:30] <decker> learner36 ^ way above all the disconnects
[02:19:46] *** Joins: quantum (~quantum@user/quantum/x-8556232)
[02:19:48] *** Quits: gloomy (~gloomy@2001:470:69fc:105::ce00) (Quit: Client limit exceeded: 20000)
[02:19:56] *** Quits: jinsun_ (~jinsun@user/jinsun) (Quit: Client limit exceeded: 20000)
[02:20:01] *** Joins: dunpeal (~dunpeal@2001:470:69fc:105::3e80)
[02:20:01] *** Joins: sp (~sp@user/susam)
[02:20:03] *** Joins: gloomy (~gloomy@2001:470:69fc:105::ce00)
[02:20:04] *** Quits: niedzejkob[m] (~niedzejko@2001:470:69fc:105::1:1c02) (Quit: Client limit exceeded: 20000)
[02:20:13] *** Joins: jinsun_ (~jinsun@user/jinsun)
[02:20:13] *** Joins: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5)
[02:21:36] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[02:21:45] *** Quits: FragmentedCurve (~FC@192.199.187.86) (Ping timeout: 252 seconds)
[02:21:52] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[02:24:23] <learner36> nice. looks really close
[02:24:24] *** Joins: niedzejkob[m] (~niedzejko@2001:470:69fc:105::1:1c02)
[02:24:39] *** Joins: FragmentedCurve (~FC@192.199.187.86)
[02:24:54] <learner36> thanks
[02:25:37] *** Joins: Arcorann (~A@user/arcorann)
[02:30:07] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[02:32:10] *** Quits: FragmentedCurve (~FC@192.199.187.86) (Ping timeout: 256 seconds)
[02:33:16] *** Quits: Libero (~Libero@77.49.128.70.dsl.dyn.forthnet.gr) (Quit: Leaving)
[02:33:30] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Client Quit)
[02:33:44] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[02:38:15] *** Quits: emf (~emf@2620:10d:c091:480::1:58ea) (Ping timeout: 252 seconds)
[02:38:21] *** Quits: qedders (~qedders@132.76.61.51) (Quit: Ping timeout (120 seconds))
[02:40:57] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[02:41:27] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[02:44:06] *** Joins: XCode (~XCode@d108-173-59-218.abhsia.telus.net)
[02:45:34] *** Joins: Fragment1dCurve (~FC@192.199.187.86)
[02:45:35] <Guest7892> whats the matrix called when mutliplied by its adjoint the product is the identity?
[02:47:41] <learner36> unitary?
[02:48:04] *** Quits: BSaboia (~bsaboia@177.37.198.179) (Quit: This computer has gone to sleep)
[02:48:17] <Guest7892> yeaaah thansk
[02:50:09] <Z-module> (if it is square, and "adjoint" means conjugate transpose)
[02:51:11] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 250 seconds)
[02:51:34] <mornfall> (if adjoint = adjugate, it'd be a bit more restrictive, demanding detA = 1, wouldn't it?)
[02:51:56] <buster> that's less restrictive
[02:52:16] <mornfall> unitary matrices don't need to have detA = 1
[02:54:25] <buster> still. any invertible matrix times its adjugate is the determinant times the identity. that's just how you invert matrices.
[02:55:03] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[02:55:42] <mornfall> right, so adj(A)A = I iff det(A) = 1?
[02:56:03] <buster> yeah.
[02:56:33] <buster> the adjoint of A with respect to some inner product is equal to the inverse of A if and only if A preserves the inner product, <Au, Av> = <u,v>
[02:56:45] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[02:56:47] <Guest7892> uh
[03:00:09] <buster> Guest7892: 'orthogonal' for a real inner product space, 'unitary' for a complex inner product space, 'lorentz' for minkowski space, ...
[03:01:12] *** Joins: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:f5a4:2481:6d20:f250)
[03:01:16] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-c014-8934-c8a1-0049.res6.spectrum.com) (Read error: Connection reset by peer)
[03:01:59] <buster> whatever class of matrices it is that preserves the inner product you're interested in, those are the matrices that have the 'adjoint = inverse' property too
[03:02:45] *** Joins: Super_Ape (~SuperB@2001:8a0:661b:2e00:84ac:eb76:8e6:3731)
[03:03:03] <Guest7892> brb
[03:03:27] *** Quits: Maturion (~Maturion@p200300ede7135c00844d881b17860d82.dip0.t-ipconnect.de) (Remote host closed the connection)
[03:03:44] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 265 seconds)
[03:06:15] *** Parts: sshine (~simon@hubris.eta.solutions) ()
[03:07:43] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:07:47] *** Quits: Guest7892 (~Guest78@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Ping timeout: 256 seconds)
[03:08:15] *** Quits: Super_Ape (~SuperB@2001:8a0:661b:2e00:84ac:eb76:8e6:3731) (Quit: Leaving)
[03:10:31] *** Quits: Fragment1dCurve (~FC@192.199.187.86) (Ping timeout: 252 seconds)
[03:12:13] *** Quits: diophantoz (~diophanto@user/diophantoz) (Ping timeout: 250 seconds)
[03:13:15] *** Joins: Super_Ape (~SuperB@2001:8a0:661b:2e00:84ac:eb76:8e6:3731)
[03:15:12] *** Joins: bosspotato (~bosspotat@lnsm2-montreal02-142-118-210-99.internet.virginmobile.ca)
[03:15:12] *** Quits: bosspotato (~bosspotat@lnsm2-montreal02-142-118-210-99.internet.virginmobile.ca) (Changing host)
[03:15:12] *** Joins: bosspotato (~bosspotat@user/bosspotato)
[03:16:17] *** Joins: reezoh (~reezoh@2600:1702:3cf0:2e00:3805:567f:3744:4661)
[03:18:14] *** Quits: Panther (Lord@2601:18a:c000:5290:51ef:65bc:9691:8fe0) (Ping timeout: 265 seconds)
[03:19:31] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:e9a5:f347:4833:9d3b)
[03:23:44] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:e9a5:f347:4833:9d3b) (Client Quit)
[03:26:02] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[03:27:10] *** Joins: Panther (~Lord@2601:18a:c000:5290:59b6:5128:8d7a:c4a7)
[03:27:28] *** Quits: son0p (~ff@2800:484:1d81:b700:d40b:900:b387:320) (Ping timeout: 268 seconds)
[03:29:02] *** Joins: stonkey (~stonkey@user/stonkey)
[03:36:28] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[03:38:05] *** Joins: ferdna (~ferdna@user/ferdna)
[03:38:50] *** Quits: Koen (~Koen@128.245.88.92.rev.sfr.net) (Quit: Leaving...)
[03:42:11] *** Joins: constxd (~brad@142.134.38.68)
[03:44:20] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (Ping timeout: 265 seconds)
[03:44:42] *** Quits: Super_Ape (~SuperB@2001:8a0:661b:2e00:84ac:eb76:8e6:3731) (Quit: Leaving)
[03:47:03] *** Quits: AviKav (~AviKav@pool-71-191-176-243.washdc.fios.verizon.net) (Remote host closed the connection)
[03:47:25] *** Joins: AviKav (~AviKav@pool-71-191-176-243.washdc.fios.verizon.net)
[03:47:55] *** Quits: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:f5a4:2481:6d20:f250) (Quit: WeeChat 3.3)
[03:48:44] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:50:50] *** Quits: AviKav (~AviKav@pool-71-191-176-243.washdc.fios.verizon.net) (Client Quit)
[03:51:17] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[03:51:39] *** Joins: AviKav (~AviKav@pool-71-191-176-243.washdc.fios.verizon.net)
[03:51:57] *** Quits: k60`` (~user@static.100.218.46.78.clients.your-server.de) (Ping timeout: 252 seconds)
[03:52:57] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[03:54:27] *** Joins: FragmentedCurve (~FC@192.199.187.86)
[03:54:55] *** Quits: stonkey (~stonkey@user/stonkey) (Quit: Leaving)
[03:55:15] *** Quits: AviKav (~AviKav@pool-71-191-176-243.washdc.fios.verizon.net) (Client Quit)
[03:55:18] <constxd> kings
[03:55:43] *** Joins: AviKav (~AviKav@pool-71-191-176-243.washdc.fios.verizon.net)
[03:55:58] <constxd> what's that thing called where you find the roots of the characteristic equation and then depending on whether they're real or not you have different solutions for the DE
[04:02:22] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[04:09:16] *** Quits: src (~src@user/src) (Quit: Leaving)
[04:10:37] *** Joins: neverfindme (~hayden@72.92.246.5)
[04:11:09] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 250 seconds)
[04:11:34] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:12:41] <isekaijin> The entire universe does not revolve around the calculus or differential equations course you are taking, so more context, please?
[04:12:52] <isekaijin> constxd: ^
[04:14:09] <int-e> The question is about this part, https://en.wikipedia.org/wiki/Linear_differential_equation#Homogeneous_equation_with_constant_coefficients "Thus a real basis is obtained by using Euler's formula"
[04:14:14] <int-e> But I have no clue what it's called.
[04:14:50] <isekaijin> There are so many things called “characteristic equation” or “characteristic function” in math.
[04:14:54] <int-e> (other than (an application of) Euler's formula)
[04:16:07] <int-e> isekaijin: sure but "DE" indicates differential equations
[04:16:18] <int-e> so that restricts the choices significantly
[04:16:28] <greenbagels> yeah i thought it was pretty clear from the question
[04:16:38] <greenbagels> but i dont know if this technique has a general name
[04:20:08] <Galois> it's called "solving second order linear homogeneous differential equations"
[04:20:50] <PlanckWalk> I guess it would work for higher order as well
[04:22:19] <Galois> in higher order there is not such a sharp difference between the real roots and imaginary roots case
[04:23:09] *** Joins: specing_ (~specing@user/specing)
[04:23:09] *** Quits: specing (~specing@user/specing) (Killed (NickServ (GHOST command used by specing_)))
[04:24:52] *** specing_ is now known as specing
[04:24:52] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Quit: leaving)
[04:25:07] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[04:25:33] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 276 seconds)
[04:26:01] *** Joins: CombatVet (~c4@user/combatvet)
[04:27:08] *** Joins: k60`` (~user@static.100.218.46.78.clients.your-server.de)
[04:28:13] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[04:30:42] *** Quits: k60`` (~user@static.100.218.46.78.clients.your-server.de) (Remote host closed the connection)
[04:31:01] <isekaijin> Everything reduces to first order differential equations on more variables. I never understood why in differential equations class we never explored the case of three or more variables.
[04:31:23] <isekaijin> The phase space business looks like it should work equally well.
[04:33:14] <constxd> ah yeah sorry for the lack of context
[04:33:28] <constxd> you guys figured it out though
[04:34:13] <constxd> i was indeed thinking of how to solve second order homogeneous DEs with constant coefficients
[04:35:08] *** Quits: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com) (Read error: Connection reset by peer)
[04:36:42] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[04:39:25] *** Joins: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com)
[04:41:01] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 240 seconds)
[04:41:40] *** Joins: darkapex (~darkapex@user/darkapex)
[04:48:39] <droid3> hey guys i just thought of another way aka representation theory for a knot. I guess all talk a little on this today.
[04:48:39] *** Quits: neverfindme (~hayden@72.92.246.5) (Quit: Leaving)
[04:49:00] <droid3> So everybody knows about graphs
[04:49:08] <droid3> and edge coloring
[04:50:05] <droid3> But if one looks at multi-graphs and edge colorings for those that is equivalent to k-color-ability invariant for knots.
[04:51:17] <droid3> usually most people attack knots with 3-color-ability  as well as generalizations to k-color-ability  using matrix algebra with mod k arithmetic.
[04:51:48] <droid3> rather then that one can look at the chromatic polynomials for multi-graphs instead to coming up with color invariants for knots.
[04:51:59] <droid3> I just realized this reviewing some knot colorization invariants
[04:53:40] <droid3> now colorization knot invariants arent as strong as other invariants like jones , homfly ,vassiliev ....etc invariants
[04:54:36] <droid3> but there cool because they are in some sense a complete invariant for rational knots aka rational tangles. I can show this
[04:54:39] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[04:55:23] <droid3> Well actually colorability in itself is not a complete invariant but combining it in together restricted to rational knots (aka knots created by rational tangles it is )
[04:56:32] <droid3> Another words take the moduli space of all knot invariant for rational knots a group of colorization together makes a complete invariant for rational knots.
[04:56:48] <droid3> The sad part is rational knots arent all knots :(
[04:56:50] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 260 seconds)
[04:57:38] <droid3> but still cool because i want to brainstorm tonight for awhile on math topics in the realm of algebraic topology/representation theory.
[04:58:32] <droid3> It seems i have been away from knots for awhile and the physics guys have been relating knot invariant to quantum groups /topological QFT subjects.
[05:01:52] *** Joins: seninha (~seninha@user/seninha)
[05:09:13] *** Joins: elroo (~elroo@45.133.4.112)
[05:12:37] *** Quits: reezoh (~reezoh@2600:1702:3cf0:2e00:3805:567f:3744:4661) (Ping timeout: 252 seconds)
[05:14:18] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[05:14:57] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:15:34] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[05:15:55] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[05:16:44] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[05:16:56] *** Joins: reezoh (~reezoh@2600:1702:3cf0:2e00:3805:567f:3744:4661)
[05:17:17] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[05:18:18] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:18:40] *** Joins: soapsudsxx (~soapsudsx@209.221.40.158)
[05:18:53] *** Joins: newpy (~newpy@206.168.231.90)
[05:19:07] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[05:21:34] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[05:22:00] *** Joins: Macuser (~Macuser@216.30.159.201)
[05:24:03] <orbisvicis> what's the notation for a summation over corresponding elements of two sets, {1,2,3}, {a,b,c} -> (1,a),(2,b),(3,c) ?
[05:24:49] <droid3> use index notation
[05:25:50] *** Quits: bollu (uid233390@id-233390.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:26:22] <droid3> for your summation instead of just going from n = 0  to n = end value.
[05:26:32] <droid3> just use an index notation like for example
[05:27:29] <droid3> if you want to sum over all the reciprocals of twin primes. You could use an index set to denote the set of all twin primes.
[05:27:32] <buster> orbisvicis: you know {1,2,3} = {1,3,2}, though
[05:27:40] *** Joins: k60`` (~user@static.100.218.46.78.clients.your-server.de)
[05:27:57] <orbisvicis> droid3, is that more common than function notation, ie given sets C,E then summation(c of C)(...f(c)...) where f(c) gets the corresponding element of E?
[05:28:14] <orbisvicis> which admittedly just moves the problem somewhere else
[05:29:52] <droid3> orbisvicis not sure what your objective is with sets. And from buster post i am thinking your set have some kind of order matters.
[05:32:25] <orbisvicis> droid3, list rather than set? I'm experimenting documenting an algorithm using math rather than english. The order doesn't matter, except the order of the pairings
[05:32:27] <[itchyjunk]> orbisvicis, is (1,b),(2,a),(3,c) also valid?
[05:32:32] *** Joins: frost (~frost@user/frost)
[05:33:34] *** Joins: audio (~audio@user/audio)
[05:34:19] <orbisvicis> [itchyjunk], so no ^
[05:35:32] <[itchyjunk]> so you want 1+a, 2+b, 3+c ? you could sigma_m,n i + j where m indexes over first and n over second?
[05:35:46] <droid3> "order doesn't matter, except the order of the pairings"  so then order of the (a,b) does matter.... hummm i think what your trying to say is the last element in the pair is where order matters.
[05:35:48] <[itchyjunk]> hmm not sure actually how proparly formatted sigma notation works
[05:36:08] <droid3> Still confused though hard to see :0 what you mean.
[05:37:06] <orbisvicis> droid3, this is the code: https://bpa.st/CQMQ
[05:37:29] <orbisvicis> droid3, this would be the actual set in which order doesn't matter: {(1,a),(2,b),(3,c)}
[05:37:54] <[itchyjunk]> oh
[05:38:02] <[itchyjunk]> you want cartesian product of AxB ?
[05:38:08] <[itchyjunk]> thought you wanted summation
[05:38:16] <buster> that would be a 9-element set
[05:38:21] *** Quits: loller_ (uid358106@id-358106.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[05:38:26] <[itchyjunk]> oh..
[05:38:43] <[itchyjunk]> looks like some kind of set product though, no?
[05:38:46] <buster> the first thing is just awkward notation for the second thing, there's no mathematics involved
[05:41:29] *** Quits: xff0x (~xff0x@2001:1a81:5338:9c00:9209:5fa4:fe4c:a1bd) (Ping timeout: 250 seconds)
[05:42:02] <orbisvicis> [itchyjunk], I'm going to sum over each element of {(1,a),(2,b),(3,c)}
[05:43:16] *** Joins: xff0x (~xff0x@2001:1a81:537e:3f00:97ca:7ac8:9d9f:cfb2)
[05:43:38] *** Joins: slidercrank (~slidercra@user/slidercrank)
[05:43:53] *** Joins: k60``` (~user@94.25.169.9)
[05:44:09] <[itchyjunk]> (1,a) + (2,b) + (3,c) ?
[05:45:34] <orbisvicis> [itchyjunk], yes
[05:45:52] <droid3> this is more a computer programming problem then a math problem orbisvicis. I think you should just define an abstract addition for the elements in your list
[05:46:32] *** Quits: k60`` (~user@static.100.218.46.78.clients.your-server.de) (Ping timeout: 256 seconds)
[05:46:32] <droid3> your list could be list of order pairs create a data structure /use existing ones for pairs
[05:46:54] <[itchyjunk]> sure but why shouldn't it have a math notation?
[05:47:00] <droid3> Then just sum over them anyway you want using a for loop over the correct elements you want to sum over.
[05:47:20] <droid3> it does depending on how you represent it.
[05:47:34] *** Quits: FragmentedCurve (~FC@192.199.187.86) (Quit: Lost terminal)
[05:47:51] <[itchyjunk]> yeah defining some function might work. you need set A = {1,2,3} and B = {a,b,c} with some ordering i suppose
[05:48:01] <droid3> i guess i still not seeing the huge trouble /issue. But i dont want to interrupt you guys
[05:48:18] <[itchyjunk]> well i think he just wanted math notation to repreesnt this idea
[05:48:26] <droid3> stem talk is always good talk :)
[05:48:50] <buster> you can define (f×g)(i)=(f(i)×g(i)) pretty quickly if you need it
[05:49:12] <droid3> sum i,j (ai,bj) there you go.
[05:49:35] <orbisvicis> for example, right now I have a(k,e) = sum(j of C, j != k)(variance(j, mean(k)*ej/e) + variance(k, mean(k))
[05:50:46] <orbisvicis> where k of C, e of E and ej corresponds to k  <-- that's the problem notation
[05:52:23] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:2d97:d647:614f:583a) (Ping timeout: 268 seconds)
[05:52:46] <orbisvicis> buster, yeah instead of defining E as {a,b,c} I can just defined E(k) as the corresponding value to C
[05:52:58] <orbisvicis> problem solved, I guess
[05:56:25] *** Quits: reezoh (~reezoh@2600:1702:3cf0:2e00:3805:567f:3744:4661) (Quit: Leaving)
[06:02:13] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[06:03:35] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:8f25:9cfd:14a2:8da2)
[06:07:58] *** Joins: cokernel_hacker (uid7956@id-7956.lymington.irccloud.com)
[06:12:20] *** Joins: i0e (~is0ke3@user/is0ke3)
[06:14:12] *** Quits: lilgopher (~textual@2601:241:8000:38f0:fc6d:baa:b0b5:9af8) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:14:52] *** Quits: marloi (~mark@45.72.209.251) (Ping timeout: 256 seconds)
[06:15:14] *** Joins: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-0007.res6.spectrum.com)
[06:19:31] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:8f25:9cfd:14a2:8da2) (Remote host closed the connection)
[06:23:45] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[06:25:38] *** Joins: quartz (~quartz@user/quartz)
[06:25:44] *** Joins: i0e (~is0ke3@user/is0ke3)
[06:25:52] <orbisvicis> how is this? shorturl.at/citFN
[06:27:39] *** Quits: xff0x (~xff0x@2001:1a81:537e:3f00:97ca:7ac8:9d9f:cfb2) (Ping timeout: 250 seconds)
[06:28:28] *** Joins: xff0x (~xff0x@2001:1a81:537e:3f00:d6d6:fa6f:b314:a474)
[06:29:27] <Z-module> a lot of things don't make sense in that, orbisvicis : Is C a set of clusters? so how can it be the "number of clusters"? No mention of the bound variable j, either.
[06:31:39] <Z-module> also the summand doesn't seem to use k_1 or k_2.
[06:31:44] <Z-module> Basically nothing there makes any sense.
[06:32:10] *** Quits: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-0007.res6.spectrum.com) (Quit: emf)
[06:32:47] *** Joins: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-0007.res6.spectrum.com)
[06:32:51] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[06:33:34] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[06:33:37] <Z-module> (not to mention the absurd use of "v" to mean variance)
[06:35:05] *** Joins: i0e (~is0ke3@user/is0ke3)
[06:36:53] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:40:49] <orbisvicis> and now? https://bit.ly/3GyUrBw
[06:41:09] *** Joins: robin (~robin@user/terpri)
[06:41:58] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[06:43:07] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[06:43:36] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[06:44:20] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 256 seconds)
[06:44:34] *** plankster_ is now known as plank
[06:48:22] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[06:48:27] *** Quits: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-0007.res6.spectrum.com) (Quit: emf)
[06:49:58] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[06:50:14] *** Quits: k60``` (~user@94.25.169.9) (Ping timeout: 260 seconds)
[06:50:19] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[06:50:25] *** Joins: i0e (~is0ke3@user/is0ke3)
[06:50:29] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[06:50:35] *** Joins: x003fgqwe (uid479614@id-479614.lymington.irccloud.com)
[06:53:19] *** Quits: gaqwas (~john@dynamic-095-115-044-086.95.115.pool.telefonica.de) (Ping timeout: 265 seconds)
[06:53:41] *** Joins: gaqwas (~john@dynamic-095-117-004-089.95.117.pool.telefonica.de)
[06:53:51] <Z-module> that's way better. But are those  (j, (\bar{k}/e_k)*e_j)  things supposed to be ordered pairs -- points in the plane?
[06:56:45] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[06:58:47] *** Joins: i0e (~is0ke3@user/is0ke3)
[06:59:16] <orbisvicis> oh I should probably add that to the definition list, that's variance of a set x from a given mean m: Var(x, m)
[07:01:20] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Ping timeout: 256 seconds)
[07:01:49] *** Quits: jj5 (~jj5@111-220-243-3.dyn.dodo.net.au) (Ping timeout: 256 seconds)
[07:02:55] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:04:03] <orbisvicis> https://bit.ly/3dAGiaj
[07:05:11] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 252 seconds)
[07:06:23] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[07:07:58] *** Joins: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net)
[07:08:06] *** Quits: Kevin578 (~Kevin578@pool-96-237-112-198.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[07:08:33] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[07:08:52] <PlanckWalk> That's a bizarre sort of formula
[07:09:12] <PlanckWalk> Dividing by means of clusters?
[07:09:20] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[07:09:26] *** Joins: i0e (~is0ke3@user/is0ke3)
[07:10:02] <PlanckWalk> For one thing it implies that the clusters are just along R, but also that the formula blows if any cluster is about zero.
[07:10:53] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[07:11:03] *** Quits: lovehcomics (~nibbles@205.185.116.30) (Read error: Connection reset by peer)
[07:11:31] *** Joins: lovehcomics (~nibbles@205.185.116.30)
[07:11:48] *** Joins: BSaboia (~bsaboia@177.37.198.179)
[07:12:15] *** Joins: moog (~moog@107.77.244.89)
[07:12:58] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:13:33] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:14:30] *** Quits: BSaboia (~bsaboia@177.37.198.179) (Client Quit)
[07:14:45] <orbisvicis> PlanckWalk, best I could come up with and works well with real world data. Clusterings are ranked by variance, this ranks the clusters by expected means, so means of variances.
[07:14:59] <orbisvicis> If by along R you mean 1 dimensional, then yes
[07:15:18] <orbisvicis> I noticed that issue around zero but what to do??
[07:16:15] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[07:17:47] *** Joins: i0e (~is0ke3@user/is0ke3)
[07:18:58] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[07:19:47] *** Joins: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net)
[07:20:27] <orbisvicis> oh you mean that ebar/ek*ej, thats to scale the expected means to the actual means
[07:20:46] *** Joins: k60``` (~user@94.25.169.9)
[07:22:24] <droid3> nope my idea of proof that for rational knots (aka knots made from rational tangles)  has a complete invariant with a group of different k-color-able  conditions is false found an issue with it. And a counterexample can be found with the old Alexanders/conway polynomial
[07:22:54] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 250 seconds)
[07:23:04] <droid3> so darn but i still think there is a complete invariant restricting to rational knots out there still.
[07:23:11] *** Joins: darkapex (~darkapex@user/darkapex)
[07:23:39] <droid3> so appealing because the rational tangles have unquie continued fractions that identify them
[07:25:14] <droid3> And any knot i see can be decomposed into a sum of rational knots. The issue is the decomposition into prime knots is difficult to work with.
[07:25:50] <droid3> and the continued fractions associated with it aren't unique any more
[07:26:01] <droid3> hummm think more on this i will.
[07:27:51] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[07:27:55] *** Quits: norias (~jaredm@c-98-219-195-163.hsd1.pa.comcast.net) (Quit: leaving)
[07:27:58] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[07:28:36] *** Joins: X-Scale` (~ARM@206.46.158.5.rev.vodafone.pt)
[07:30:13] *** Quits: X-Scale (~ARM@83.223.250.30) (Ping timeout: 240 seconds)
[07:30:13] *** X-Scale` is now known as X-Scale
[07:31:59] *** Joins: jj5 (~jj5@111-220-243-3.dyn.dodo.net.au)
[07:32:30] *** Quits: k60``` (~user@94.25.169.9) (Ping timeout: 256 seconds)
[07:36:23] *** Joins: darkapex_ (~darkapex@user/darkapex)
[07:36:26] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 260 seconds)
[07:38:55] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[07:41:08] *** Joins: i0e (~is0ke3@user/is0ke3)
[07:43:08] *** Quits: moog (~moog@107.77.244.89) (Quit: Leaving)
[07:43:36] *** Joins: moog (~moog@107.77.244.89)
[07:45:32] *** Quits: moog (~moog@107.77.244.89) (Remote host closed the connection)
[07:46:37] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 252 seconds)
[07:48:22] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[07:48:27] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (Ping timeout: 250 seconds)
[07:51:44] *** Joins: i0e (~is0ke3@user/is0ke3)
[07:55:45] <droid3> himmm on another note, we are accumulating alot of different knot invariants from physics. It be nice if we could some how understand the moduli space of knot invariants better. So to weed out the relevant ones. That actually break new knot distinctions
[07:56:54] <droid3> It would also be nice to know what the most general polynomial knot invariant is from all this. Or if there is some way to determine the most general polynomial invariant.
[07:57:16] <droid3> Sure what i mean by this is we can always take groups of polynomial invariants to get a finer look between knots.
[07:57:22] *** Joins: defn (~n0b0dy@user/defn)
[07:57:26] <droid3> But this surely seems like it will end
[07:57:55] <droid3> And even if it didnt you want to know the relevant distinct ones that give new information not existing information.
[07:58:43] <droid3> surely conway didnt really improve on alexanders find. Where he did improve is relating it to skein relations instead of determinant calculations.
[07:59:20] <droid3> Either way alexander polynomial and conways version of it dont really distinguish any add info.
[07:59:40] <droid3> The big leap was from jones and Kaufman
[08:00:12] *** Quits: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com) (Read error: Connection reset by peer)
[08:00:43] <droid3> actually kaufman bracket is only good for R2, R3 of the moves so without the great insight/figuring out the writhe it wouldnt have even been invented the jones polynomial.
[08:01:23] <droid3> And regardless the leap after that was homfly sortly after but after that interms of polynomials we really havent improved much in a new invariant for them.
[08:01:39] <droid3> What we have done is group them together to create better invariants
[08:02:01] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 252 seconds)
[08:02:21] <droid3> Which is nice but one is lead to thinking what would be the most general polynomial invariant on its own. Is there such or can we always go finer and finer polynomial invariants.
[08:03:26] *** Joins: k60``` (~user@94.25.169.9)
[08:03:38] <droid3> even when one looks at it more abstractly with Khovanov homology your not really getting much new information from just the jones polynomials anyway.
[08:04:37] <droid3> And k-colorability of a knot is only slightly worse invariant the alexanders/conway polynomial anyway.
[08:05:31] <droid3> unknotting numbers is definitely not a complete invariant
[08:06:20] <droid3> stick number and unknotting number is about the same intensity (that is interms of invariants go not much finer then each other)
[08:06:58] *** Joins: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com)
[08:07:17] <droid3> knot groups , braid groups , link groups are to difficult to usually work directly with.
[08:08:20] <droid3> crossing number even probably less finer then even stick or unknotting number. (relatively on same level)
[08:09:06] *** Quits: k60``` (~user@94.25.169.9) (Ping timeout: 260 seconds)
[08:09:15] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[08:10:38] <droid3> vassilliev invariant i would like to know more on the status of what we can do with this invariant i have heard good things. Not sure if anybody made any leaps with it.
[08:12:16] <droid3> it would be nice to have an invariant more finer for chirality and invertiblity type to distinguish. But i guess jones ish will have to do.
[08:12:59] *** Quits: xff0x (~xff0x@2001:1a81:537e:3f00:d6d6:fa6f:b314:a474) (Ping timeout: 268 seconds)
[08:13:24] <droid3> Seifert surfaces aka a surface that has the knot as its boundary your considering is nice if you want to work the problem in a 3-manifold problem.
[08:13:34] <droid3> kind of way
[08:13:42] *** Joins: xff0x (~xff0x@2001:1a81:537e:3f00:9578:51b0:7e3f:b293)
[08:13:50] <droid3> but usually putting it into that context is also quite difficult.
[08:14:31] *** Quits: Aim_Here (~David@vpn-fn-230.net.ed.ac.uk) (Ping timeout: 265 seconds)
[08:16:19] *** Joins: plankster (~plankster@user/plankers)
[08:16:51] *** Quits: plank (~plankster@user/plankers) (Ping timeout: 250 seconds)
[08:18:33] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[08:19:25] <droid3> I guess thank god for milnor and dehn with his dehn invariants that at least make a little easier to work with 3-manifolds restricted to knot types.
[08:19:46] <droid3> But even still there so much unknowns still of things.
[08:20:19] <droid3> Heck me personally i dont think any other notation beats dowkers notation if one wanted to implement his own knot algorithms.
[08:20:41] <droid3> there is gauss notation but that really just a bite out of dowkers great notation anyway.
[08:21:10] <droid3> conways notation only really good for rational tangles/rational knots for the most part
[08:21:11] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 250 seconds)
[08:21:24] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[08:21:49] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[08:22:01] <droid3> And as of current i am not aware of any computer notation for knots to distinguish chiral type issues/mirror images.
[08:22:10] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 260 seconds)
[08:22:19] <droid3> the only way to go about that is to use jones polynomial on individual cases.
[08:25:09] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:25:26] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[08:26:03] <droid3> I do like the hyperbolic volume invariant however that usually hard to compute other then perhaps for simple few knots we only have a few close forms as of current.
[08:26:37] <droid3> But its a really neat invariant to beable to work with if you can figure it out.
[08:27:12] *** Joins: Aim_Here (~David@92.238.16.159)
[08:27:18] <droid3> Crosscap number is no more powerful then the genus invariant.
[08:32:06] <droid3> For torus knots the hyperbolic volume is sort of doable but torus knots dont encompass all of knots.
[08:33:47] *** Quits: Guest80 (~Guest80@S01069050ca4e3573.cg.shawcable.net) (Quit: Connection closed)
[08:37:23] <decker> ooc - these knots are all great and stuff to have parameteric equations that already describe them - but how to get to them from real world input?
[08:37:53] <decker> https://people.engr.tamu.edu/schaefer/research/dualsimp_tvcg.pdf (manifold dual contouring) wish I could figure out the 2 or 3 things the author left out :/
[08:39:34] <droid3> decker you can parameter a knot if its a torus knot quite easy because its well known how to parameterize the torus so parameterizing a torus knot is not that bad.
[08:39:52] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:44c9:56a1:ff70:f248)
[08:40:22] <decker> https://d3x0r.github.io/STFRPhysics/3d/index4.html can you tell me if this is a knot?
[08:40:23] <droid3> That why hyperbolic volumes for torus knots are slightly easier then the general knots
[08:41:02] <droid3> However still to me wicked difficult these integrals get . Approximation are fine if you can figure the integral out in the first place which normally i cannt.
[08:43:02] *** Quits: xff0x (~xff0x@2001:1a81:537e:3f00:9578:51b0:7e3f:b293) (Ping timeout: 240 seconds)
[08:43:53] *** Joins: xff0x (~xff0x@2001:1a81:537e:3f00:d5b4:3c9d:ec95:16b3)
[08:46:25] <decker> https://d3x0r.github.io/DualMarchingTetrahedra/indexNothing.html is this a knot?  are surfaces knots or just their pathing lines?  Autocad 3d ropes can be like a circle extruded along a line function
[08:48:26] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (Ping timeout: 256 seconds)
[08:54:01] *** Quits: kakuhen (~kakuhen@user/kakuhen) (Remote host closed the connection)
[08:54:31] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[08:56:02] <droid3> well i cannt really from your link see anything.
[08:56:29] *** Quits: bosspotato (~bosspotat@user/bosspotato) (Ping timeout: 250 seconds)
[08:56:38] <droid3> but a knot in mathematics is defined as a closed curve that doesnt intersect itself in R^3 say.
[08:56:55] *** Quits: XCode (~XCode@d108-173-59-218.abhsia.telus.net) (Ping timeout: 250 seconds)
[08:57:15] <droid3> if it looks like that or a polygonal verison of that with lines so ok to.
[08:57:29] <droid3> the difference is now your working with stick numbers
[08:58:45] <droid3> for seifert surfaces of a knot its probably easier to convert it alot of times into a discrete ish problem using simplical complex... aka convex polytopes.
[08:59:13] *** Quits: Hazey_Dream (~user@cpe5c7d7dbd2142-cm5c7d7dbd2140.cpe.net.cable.rogers.com) (Ping timeout: 268 seconds)
[08:59:22] <droid3> But regardless its going to be hard to work with 3-manifolds in general regardless of if there all classified.
[09:00:07] *** Quits: soapsudsxx (~soapsudsx@209.221.40.158) (Remote host closed the connection)
[09:00:21] <droid3> And higher dimensional knots aka knotted surfaces are going to probably impossible to classify unless some how 4-manifolds in the case of knots dont reduce to the word problem again.
[09:00:27] <droid3> but i just dont know about that one.
[09:03:06] <decker> the hopf fiber is a closed loop that doesn't intersect itself, it does pass through itself though; it's just three rotations...for some initial A, rotated by 90 degrees and then by 90 degrees,  (with a different cycle counter for turns... like if you go around the last one multiple times you get more coils
[09:03:22] <decker> so it's quaterniosn I suppose you'd work with even though it's just a 3d graph
[09:03:50] <decker> every loop passes through every other loop (beyond 3 or 4 turns)
[09:10:44] *** Joins: XCode (~XCode@d108-173-59-218.abhsia.telus.net)
[09:11:14] *** Joins: WILLIAM (~WILLIAM__@121.32.199.3)
[09:12:48] *** Quits: johnkeats6 (~johnkeats@2804:14c:32:a0cc:9d8c:aff8:17c8:a5bf) (Ping timeout: 268 seconds)
[09:16:42] *** Quits: WILLIAM (~WILLIAM__@121.32.199.3) (Quit: Leaving)
[09:16:55] *** Joins: WILLIAM (~WILLIAM__@121.32.199.3)
[09:17:08] *** Quits: WILLIAM (~WILLIAM__@121.32.199.3) (Max SendQ exceeded)
[09:17:36] *** Joins: WILLIAM (~WILLIAM84@121.32.199.3)
[09:18:15] *** Quits: WILLIAM (~WILLIAM84@121.32.199.3) (Client Quit)
[09:20:11] *** Joins: WILLIAM84_ (~WILLIAM84@121.32.199.3)
[09:26:49] *** Quits: elderK (uid205007@id-205007.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[09:30:44] *** Joins: takuan (~takuan@178-116-218-225.access.telenet.be)
[09:31:33] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[09:34:52] <orbisvicis> once again I need some help fixing my notation: https://bit.ly/31Klcng
[09:35:48] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[09:36:02] *** Quits: XCode (~XCode@d108-173-59-218.abhsia.telus.net) (Ping timeout: 256 seconds)
[09:36:04] <orbisvicis> 1) mistakes 2) is not using index notation in 'vem' confusing 3) are either 'allvem' interchangeable?
[09:38:58] <somiaj> are you writing this all in mathmode?
[09:39:31] <orbisvicis> I believe so, but the where clauses with \textit
[09:39:33] <somiaj> Anyways you can use \text{} to get the normal font
[09:39:57] <somiaj> ahh, you are making it itallic, to me looks poor, though I'm use to itallics mostly being used for variables, but not function names and normal text
[09:40:43] <somiaj> notice now \min isn't itallic, that is more standard for function names
[09:41:11] <int-e> Even for italic, to get proper kerning of Var you should use \mathit{Var}
[09:42:08] <orbisvicis> you're right it does look better without italic
[09:42:12] <int-e> What else... I dislike the two-letter CS, I dislike that E looks like a set but is actually a function from C...
[09:42:31] <int-e> (where function application is denoted e_k)
[09:43:17] <int-e> I dislike the lack of \left and \right in the second version of allvem
[09:45:00] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[09:45:02] *** Joins: sazawal (~sazawal@122.161.85.155)
[09:46:49] <orbisvicis> int-e, about allvem, is the 2nd version understandable as a shortcut for the 1st?
[09:47:12] <cherim> Would never have thought TeX can create that "V ar" everywhere with its kerning rules
[09:47:22] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 256 seconds)
[09:47:26] <int-e> orbisvicis: not really
[09:49:10] <orbisvicis> int-e, also E is the sequence, e is the function from E->C, but if I replace it with index notation it becomes very cluttered, 2 index variables (i,j) + 2 member variables (a_i,b_j), two extra where clauses
[09:49:21] <orbisvicis> anything to help with that?
[09:49:28] <Galois> does nobody know about \operatorname
[09:49:54] <int-e> cherim: It makes sense though; kerning is done inside words, and in math mode there are no words. It will still use do kerning for subscripts attached to a V.
[09:50:21] <Galois> if you do \text{sin} x you'll get messed up spacing
[09:50:43] <Galois> \operatorname{sin} x works correctly. (Of course \sin is built-in, but the principle is the point)
[09:50:56] <cherim> I use \mathop
[09:51:22] <Galois> mathop is like the TeX version
[09:51:26] <Galois> operatorname is LaTeX
[09:51:29] <int-e> Galois: I'm in the middle, I recalled that there was a specialized command for this but forgot its name :P. can always piece it together with \mathop{\mathrm{}}
[09:51:45] <int-e> :P
[09:52:16] <cherim> But for the kerning issue, if I want to multiply V*a*r inside math, why do I have to deal with this awful space?
[09:52:59] <Galois> https://tex.stackexchange.com/questions/41261/mathop-shifts-the-baseline-declaremathoperator-doesnt apparently they're not entirely equivalent
[09:53:02] <cherim> Or maybe it's a n optical illusion since Var products are awful by themselvs
[09:54:21] <pavonia> If you're only multiplying V and a it looks better with spacing, IMHO
[09:54:22] <int-e> cherim: I don't know. There's always potential for tweaking Va\,r or V\!ar :-/.
[09:55:37] <int-e> (Of those two I'd prefer the former, wider, version.)
[09:56:30] *** Quits: droid3 (~fffd@071-010-228-178.res.spectrum.com) (Ping timeout: 265 seconds)
[09:57:13] *** Joins: mkopriva (~mkopriva@ip-78-45-72-123.net.upcbroadband.cz)
[09:57:30] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[09:58:29] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:3700:12c3:7bff:fe6d:d374)
[10:02:14] *** Quits: DrBanana[m] (~drbanana@2001:470:69fc:105::3c9a) (Quit: Client limit exceeded: 20000)
[10:04:51] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[10:05:16] <orbisvicis> ah index notation wasnt too bad
[10:05:23] <orbisvicis> how's this? https://bit.ly/3oFetE4
[10:05:30] *** Joins: DrBanana[m] (~drbanana@2001:470:69fc:105::3c9a)
[10:05:36] *** Joins: k60``` (~user@94.25.169.9)
[10:10:35] *** Quits: Al-Khwarizmi (~Al-Khwari@d24-57-234-201.home.cgocable.net) (Ping timeout: 250 seconds)
[10:10:45] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:11:00] *** Quits: acegallagher (~Ace@71-211-235-186.hlrn.qwest.net) (Ping timeout: 265 seconds)
[10:11:22] *** Quits: k60``` (~user@94.25.169.9) (Ping timeout: 268 seconds)
[10:12:25] *** Joins: acegallagher (~Ace@71-33-210-112.hlrn.qwest.net)
[10:13:05] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[10:13:17] <orbisvicis> https://bit.ly/33bE5jD
[10:13:34] *** Quits: dimi1947 (~dimi1947@2a02:1388:95:c940:1d69:7fbb:f9ce:fc45) (Quit: Leaving)
[10:16:30] *** Joins: Guest78 (~Guest78@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[10:22:35] *** Joins: nullcone (uid11626@id-11626.helmsley.irccloud.com)
[10:23:20] *** Joins: k60``` (~user@94.25.169.9)
[10:27:34] *** Quits: cokernel_hacker (uid7956@id-7956.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[10:27:35] *** Quits: k60``` (~user@94.25.169.9) (Ping timeout: 252 seconds)
[10:31:00] *** Quits: newpy (~newpy@206.168.231.90) (Ping timeout: 256 seconds)
[10:36:02] *** Quits: bpmedley (~bpmedley@2600:1700:e2c:8410:181c:e491:2cb7:3e4a) (Ping timeout: 268 seconds)
[10:39:03] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[10:39:18] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[10:41:28] *** Joins: newpy (~newpy@206.168.231.90)
[10:41:54] *** Quits: newpy (~newpy@206.168.231.90) (Client Quit)
[10:43:21] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Ping timeout: 252 seconds)
[10:44:43] *** Joins: JaredCE (~JaredCE@188.211.162.68)
[10:46:37] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:49:38] *** Quits: JaredCE (~JaredCE@188.211.162.68) (Ping timeout: 260 seconds)
[10:49:44] *** Joins: maxzor (~maxzor@2a01cb04054faa00c0bae4ae5a15fef6.ipv6.abo.wanadoo.fr)
[10:49:55] *** Joins: menace (~someone@ppp-93-104-168-246.dynamic.mnet-online.de)
[10:50:21] *** Quits: menace (~someone@ppp-93-104-168-246.dynamic.mnet-online.de) (Changing host)
[10:50:21] *** Joins: menace (~someone@user/menace)
[10:50:25] *** menace is now known as Deknos
[10:55:56] *** Quits: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net) (Ping timeout: 256 seconds)
[10:55:56] *** Joins: gas51627 (uid91066@id-91066.helmsley.irccloud.com)
[10:56:18] *** Quits: mkopriva (~mkopriva@ip-78-45-72-123.net.upcbroadband.cz) ()
[10:57:26] *** Joins: Libero (~Libero@77.49.128.70.dsl.dyn.forthnet.gr)
[10:58:31] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[11:00:09] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:01:15] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:02:37] *** Joins: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net)
[11:04:46] *** Joins: xardas (~xardas@149.233.51.127)
[11:05:22] *** Quits: xardas (~xardas@149.233.51.127) (Client Quit)
[11:11:15] *** Quits: vaporatorius (~vaporator@user/vaporatorius) (Ping timeout: 250 seconds)
[11:11:51] *** Joins: mncheck (~mncheck@193.224.205.254)
[11:11:59] *** Joins: mnl (~mnl@user/mnl)
[11:12:39] *** Joins: bollu (uid233390@id-233390.helmsley.irccloud.com)
[11:12:42] *** Joins: learner36_ (~learner36@cpef81d0fa12c13-cmf81d0fa12c10.cpe.net.cable.rogers.com)
[11:13:21] *** Joins: learner36__ (~learner36@2607:fea8:129f:c220:b9c2:7e48:6807:dbee)
[11:14:03] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[11:15:12] *** Quits: learner36 (~learner36@99.224.66.125) (Ping timeout: 256 seconds)
[11:15:17] *** learner36__ is now known as learner36
[11:17:22] *** Joins: lleo (~leo@89-200-7-180.mobile.kpn.net)
[11:17:58] *** Quits: learner36_ (~learner36@cpef81d0fa12c13-cmf81d0fa12c10.cpe.net.cable.rogers.com) (Ping timeout: 268 seconds)
[11:18:18] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:19:55] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[11:23:39] *** Joins: vaporatorius (~vaporator@105.red-176-84-45.dynamicip.rima-tde.net)
[11:23:39] *** Quits: vaporatorius (~vaporator@105.red-176-84-45.dynamicip.rima-tde.net) (Changing host)
[11:23:39] *** Joins: vaporatorius (~vaporator@user/vaporatorius)
[11:24:35] *** Joins: andreasbuhr (~quassel@p548ddf4b.dip0.t-ipconnect.de)
[11:25:11] *** Quits: andreasbuhr (~quassel@p548ddf4b.dip0.t-ipconnect.de) (Client Quit)
[11:26:03] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Remote host closed the connection)
[11:28:37] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[11:33:47] *** Quits: Trigo (~NeedMathH@64.201.115.44) (Ping timeout: 250 seconds)
[11:35:55] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Remote host closed the connection)
[11:36:31] *** Quits: audio (~audio@user/audio) (Ping timeout: 252 seconds)
[11:37:06] *** Joins: Koen (~Koen@128.245.88.92.rev.sfr.net)
[11:37:14] *** Quits: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net) (Remote host closed the connection)
[11:38:27] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Ping timeout: 276 seconds)
[11:39:24] *** Joins: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net)
[11:40:10] *** Joins: diophantoz (~diophanto@user/diophantoz)
[11:40:37] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[11:42:07] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:43:17] *** Joins: palasso (~palasso@user/palasso)
[11:43:46] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 260 seconds)
[11:46:23] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[11:52:08] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[11:57:16] *** Quits: econo (uid147250@user/econo) (Quit: Connection closed for inactivity)
[11:58:01] *** Joins: Pickchea (~private@user/pickchea)
[12:01:16] *** Joins: Klinda (~superleag@user/klinda)
[12:03:11] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[12:03:13] *** Joins: brick (~br1ck@150.140.193.84)
[12:03:25] *** Quits: br1ck (~br1ck@150.140.193.84) (Ping timeout: 240 seconds)
[12:04:21] *** Quits: Libero (~Libero@77.49.128.70.dsl.dyn.forthnet.gr) (Ping timeout: 250 seconds)
[12:06:38] *** Quits: gaqwas (~john@dynamic-095-117-004-089.95.117.pool.telefonica.de) (Ping timeout: 260 seconds)
[12:07:45] *** Joins: Libero (~Libero@77.49.32.8.dsl.dyn.forthnet.gr)
[12:09:53] *** Joins: rain3 (~rain3___@2a02:2f09:d00c:8800:e5a:2f8d:20e4:29e8)
[12:09:54] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[12:10:00] *** Quits: Rutice_ (~Rutice@216.131.105.192) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[12:11:38] *** Quits: matrixidentity[m (~matrixide@2001:470:69fc:105::1:2e68) (Quit: Client limit exceeded: 20000)
[12:14:25] *** Joins: notzmv (~zmv@user/notzmv)
[12:24:04] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[12:24:25] *** Joins: madage (~madage@user/madage)
[12:30:34] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:30:38] *** Joins: k60``` (~user@94.25.169.9)
[12:33:01] *** Joins: bobb_ (~bobb_@dslb-092-074-253-076.092.074.pools.vodafone-ip.de)
[12:34:59] <lericson> when you map euler angles to quaternions, you have to choose a rotation convention, right?
[12:35:07] <lericson> like x'-y''-z'''
[12:35:12] *** Joins: matrixidentity[m (~matrixide@2001:470:69fc:105::1:2e68)
[12:35:40] *** Quits: lleo (~leo@89-200-7-180.mobile.kpn.net) (Ping timeout: 268 seconds)
[12:35:43] <lericson> i have a library here that says: Assumes the Euler angles correspond to the quaternion R via R = exp(alpha*z/2) * exp(beta*y/2) * exp(gamma*z/2)
[12:35:57] <lericson> is this x'-y''-z''' i wonder?
[12:38:45] <lericson> ah it's x-y-z
[12:39:30] <lericson> and it's x-y'-z''
[12:40:38] *** Joins: JaredCE (~JaredCE@188.211.162.68)
[12:41:20] <lericson> hm
[12:42:11] <lericson> so the intrinsic convention z-y'-x'' corresponds to the extrinsic convention x-y-z
[12:43:34] <lericson> so if i want an intrinsic convention x-y'-z'', i'd have to define R = exp(gamma z/2) exp(beta y/2) exp(alpha x/2)
[12:44:04] *** Joins: Maturion (~Maturion@p200300ede7135c00844d881b17860d82.dip0.t-ipconnect.de)
[12:49:51] *** Quits: rain3 (~rain3___@2a02:2f09:d00c:8800:e5a:2f8d:20e4:29e8) (Ping timeout: 268 seconds)
[12:59:29] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:02:52] *** Quits: WILLIAM84_ (~WILLIAM84@121.32.199.3) (Ping timeout: 256 seconds)
[13:08:30] *** Quits: peepsalot2 (~peepsalot@openscad/peepsalot) (Read error: Connection reset by peer)
[13:08:37] *** Quits: vgtw (~vgtw@c-2359205c.07-348-756d651.bbcust.telenor.se) (Ping timeout: 240 seconds)
[13:09:07] *** Joins: niso- (~niso-@2a02:1205:c690:ca10:18ca:1811:6156:df7a)
[13:09:07] *** Quits: niso- (~niso-@2a02:1205:c690:ca10:18ca:1811:6156:df7a) (Client Quit)
[13:09:16] *** Joins: peepsalot (~peepsalot@openscad/peepsalot)
[13:09:33] *** Quits: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com) (Ping timeout: 250 seconds)
[13:15:21] *** Quits: frost (~frost@user/frost) (Remote host closed the connection)
[13:17:27] *** Joins: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:f5a4:2481:6d20:f250)
[13:19:26] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[13:19:58] *** Joins: vgtw (~vgtw@c-2359205c.07-348-756d651.bbcust.telenor.se)
[13:24:24] *** Joins: Super_Ape (~SuperB@2001:8a0:661b:2e00:84ac:eb76:8e6:3731)
[13:24:24] *** Quits: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com) (Read error: Connection reset by peer)
[13:28:22] *** Joins: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com)
[13:29:14] *** Quits: Maturion (~Maturion@p200300ede7135c00844d881b17860d82.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[13:30:08] *** Joins: son0p (~ff@2800:484:1d81:b700:d40b:900:b387:320)
[13:30:18] *** Quits: x003fgqwe (uid479614@id-479614.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[13:35:01] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:36:25] *** Quits: k60``` (~user@94.25.169.9) (Ping timeout: 250 seconds)
[13:40:50] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[13:41:14] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[13:42:03] <W> Is there a name for elements of the domain or codomain of a function, especially a function between two very small finite sets, where the sets are almost defined by the function? E.g. if I want to write something like "Since f has only three possible <domain things> and two of those <domain things> are mapped to <codomain things> that..."
[13:42:20] <W> Is it okay to use "inputs" and "outputs" like I would for programming?
[13:43:28] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[13:45:04] <W> Wikipedia does use that at times even in mathematical articles, guess it's okay
[13:45:13] *** Quits: maxzor (~maxzor@2a01cb04054faa00c0bae4ae5a15fef6.ipv6.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[13:45:51] <diophantoz> hi, i have a isosceles triangle, where a = |BC|, b = |CA|, c = |AB| and sin alfa = 1/2
[13:46:15] <diophantoz> i have tried to draw it: https://imgur.com/a/qGf5lNT
[13:46:39] <fds> W: "Okay" is entirely relative to your audience.  I'd probably say "elements" rather than "things", but "inputs" and "outputs" also wouldn't bother me too much.
[13:48:01] *** Joins: cadmio (~cadmio@151.47.57.149)
[13:48:05] <cadmio> Hello
[13:48:09] <diophantoz> a few things seems wrong thou, if sin a = 1/2 = 30  degrees, then that b angle should be 30 degrees as well
[13:48:30] <diophantoz> well then the c corner would be more than 90 ?
[13:49:22] <diophantoz> so sin 1/2 = 45 degrees?
[13:50:28] <diophantoz> in their sketch of an isosceles triangle, the have the sides a = b = 1, and c = sqrt(2)
[13:50:58] <diophantoz> so by that token i would have, a = b = 4, c = sqrt(8)
[13:51:36] <cadmio> I'm unsure about point (d) http://mathb.in/68284
[13:51:58] <cadmio> about the order in the case of G_i,G_j not coprime
[13:53:23] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 268 seconds)
[13:54:17] <diophantoz> another way to express it would be 4/sin(45) = c/sin(90) => c = (sin(90)*4)/sin(45)
[13:54:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[13:55:35] *** Joins: Kaylah (~Kaylah@84-198-141-54.access.telenet.be)
[13:55:43] <diophantoz> any clues?
[13:56:14] *** Joins: Turingtoast (~Tino@2001:16b8:60e0:c700:1497:fb43:8a79:c0d)
[13:56:52] *** Joins: Klinda (~superleag@user/klinda)
[13:56:53] *** Joins: i0e (~is0ke3@user/is0ke3)
[13:56:58] <diophantoz> oh, it's just isosceles, not right
[13:57:04] <diophantoz> but how can that be?
[13:57:05] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 268 seconds)
[13:57:46] *** Joins: cadmio1 (~cadmio@151.57.162.206)
[13:57:56] <diophantoz> i guess it could be obtuse
[13:58:01] <diophantoz> but they didn't write that
[14:00:03] *** Quits: cadmio (~cadmio@151.47.57.149) (Ping timeout: 250 seconds)
[14:00:18] *** Quits: Koen (~Koen@128.245.88.92.rev.sfr.net) (Remote host closed the connection)
[14:01:17] *** Joins: ko (~i.am@user/marlboro)
[14:02:04] *** Joins: X-Scale` (~ARM@83.223.232.153)
[14:03:59] *** Quits: X-Scale (~ARM@206.46.158.5.rev.vodafone.pt) (Ping timeout: 256 seconds)
[14:03:59] *** X-Scale` is now known as X-Scale
[14:05:26] *** Joins: lpapp|webchat (~lpapp|web@84.67.32.187)
[14:06:19] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[14:07:49] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[14:08:15] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:08:27] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[14:08:48] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[14:10:12] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:11:03] *** Joins: ProfSimm (~ProfSimm@87.227.196.109)
[14:13:57] *** Quits: vgtw (~vgtw@c-2359205c.07-348-756d651.bbcust.telenor.se) (Quit: ZNC - https://znc.in)
[14:14:28] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[14:21:09] *** Quits: cadmio1 (~cadmio@151.57.162.206) (Quit: WeeChat 3.0)
[14:21:23] *** Joins: vgtw (~vgtw@c-2359205c.07-348-756d651.bbcust.telenor.se)
[14:21:45] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[14:23:38] *** Joins: i0e (~is0ke3@user/is0ke3)
[14:23:57] *** Quits: vgtw (~vgtw@c-2359205c.07-348-756d651.bbcust.telenor.se) (Client Quit)
[14:25:46] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[14:25:59] *** Joins: madage (~madage@user/madage)
[14:27:42] *** Quits: stipa (~stipa@user/stipa) (Quit: WeeChat 3.3)
[14:33:09] *** Quits: Satin (uid193953@user/Seten) (Quit: Connection closed for inactivity)
[14:33:56] *** Joins: cadmio (~cadmio@151.47.57.149)
[14:35:07] *** Joins: Pickchea (~private@user/pickchea)
[14:35:54] *** Quits: Kaylah (~Kaylah@84-198-141-54.access.telenet.be) (Quit: Client closed)
[14:37:12] *** Quits: lpapp|webchat (~lpapp|web@84.67.32.187) (Quit: Client closed)
[14:38:40] *** Joins: frost (~frost@user/frost)
[14:39:25] *** Quits: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com) (Read error: Connection reset by peer)
[14:42:12] *** Joins: seninha (~seninha@user/seninha)
[14:42:31] *** Joins: lpapp|webchat (~lpapp|web@84.67.32.187)
[14:43:50] *** Joins: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com)
[14:45:21] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:45:40] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[14:47:33] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[14:47:38] *** Quits: cadmio (~cadmio@151.47.57.149) (Ping timeout: 260 seconds)
[14:48:53] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[14:54:25] *** Joins: k60``` (~user@94.25.169.9)
[14:58:27] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[14:59:14] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[14:59:51] *** Joins: cadmio (~cadmio@151.25.158.60)
[15:00:03] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[15:01:33] *** Joins: rain3 (~rain3___@79.115.252.154)
[15:02:02] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:04:16] *** Joins: lleo (~leo@89-200-7-180.mobile.kpn.net)
[15:08:31] *** Quits: rain3 (~rain3___@79.115.252.154) (Ping timeout: 250 seconds)
[15:09:03] *** Joins: rain3 (~rain3___@2a02:2f09:d00c:8800:e5a:2f8d:20e4:29e8)
[15:09:21] *** Joins: maxzor (~maxzor@2a01cb04054faa00c0bae4ae5a15fef6.ipv6.abo.wanadoo.fr)
[15:10:18] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:49a2:b187:a83c:8b86)
[15:11:08] *** Joins: darkapex (~darkapex@user/darkapex)
[15:11:45] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 250 seconds)
[15:14:14] *** Quits: rain3 (~rain3___@2a02:2f09:d00c:8800:e5a:2f8d:20e4:29e8) (Remote host closed the connection)
[15:14:37] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Remote host closed the connection)
[15:14:40] *** Joins: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de)
[15:16:36] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 256 seconds)
[15:17:44] *** Joins: constxd (~brad@142.134.38.68)
[15:18:37] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:19:44] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[15:21:09] *** Joins: bpmedley (~bpmedley@2600:1700:e2c:8410:fcc3:c2aa:476f:b540)
[15:24:22] <cadmio> I don't understand point (d) http://mathb.in/68284
[15:27:09] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[15:27:18] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[15:27:52] *** Quits: lleo (~leo@89-200-7-180.mobile.kpn.net) (Quit: Leaving)
[15:29:27] *** Joins: i0e (~is0ke3@user/is0ke3)
[15:29:57] *** Quits: Guest78 (~Guest78@162-239-107-41.lightspeed.rcsntx.sbcglobal.net) (Quit: Client closed)
[15:30:13] *** Quits: lpapp|webchat (~lpapp|web@84.67.32.187) (Quit: Client closed)
[15:30:24] *** Quits: gas51627 (uid91066@id-91066.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:31:39] *** Quits: Super_Ape (~SuperB@2001:8a0:661b:2e00:84ac:eb76:8e6:3731) (Quit: Leaving)
[15:32:02] *** Quits: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:f5a4:2481:6d20:f250) (Ping timeout: 268 seconds)
[15:32:18] *** Quits: nullcone (uid11626@id-11626.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:38:44] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[15:42:54] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[15:45:23] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[15:53:54] *** Joins: Maturion (~Maturion@p200300ede7135c00844d881b17860d82.dip0.t-ipconnect.de)
[15:57:52] *** Joins: vgtw (~vgtw@c-2359205c.07-348-756d651.bbcust.telenor.se)
[15:58:51] *** Joins: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:f5a4:2481:6d20:f250)
[16:01:52] *** Joins: xkuru (~xkuru@user/xkuru)
[16:02:30] *** Quits: SpikeHeron (~DutchIngr@user/dutch) (Quit: WeeChat 3.0)
[16:06:01] *** Quits: constxd (~brad@142.134.38.68) (Ping timeout: 252 seconds)
[16:06:58] *** Joins: marloi (~mark@45.72.209.251)
[16:08:01] *** Parts: JustLandedOnMars (question@user/question) ()
[16:09:51] *** Joins: the_lanetly_052 (~the_lanet@185.30.89.29)
[16:10:04] *** Joins: Koen (~Koen@128.245.88.92.rev.sfr.net)
[16:10:16] *** Quits: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:f5a4:2481:6d20:f250) (Ping timeout: 268 seconds)
[16:10:32] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[16:10:53] *** Quits: k60``` (~user@94.25.169.9) (Ping timeout: 268 seconds)
[16:11:53] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[16:13:41] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[16:15:40] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:16:06] <CuriousErnestBro> any graph theorists in here?
[16:16:46] <river> all the graph theorists are off in their own clique
[16:17:37] *** Quits: ProfSimm (~ProfSimm@87.227.196.109) (Quit: Client closed)
[16:18:06] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[16:18:32] <diophantoz> * euler has left #math
[16:18:33] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[16:18:48] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[16:19:11] *** Joins: Brainium (~brainium@user/brainium)
[16:19:21] *** Joins: moog (~moog@107.126.53.121)
[16:23:14] *** Joins: specing_ (~specing@user/specing)
[16:23:14] *** Quits: specing (~specing@user/specing) (Killed (NickServ (GHOST command used by specing_)))
[16:23:51] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Quit: = "")
[16:24:56] *** specing_ is now known as specing
[16:25:00] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:25:23] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[16:26:16] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[16:26:21] *** Quits: moog (~moog@107.126.53.121) (Remote host closed the connection)
[16:28:06] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[16:29:17] *** Joins: no_gravity (~no_gravit@user/no-gravity/x-5639427)
[16:29:34] <no_gravity> Hello! Is there a website that re-orders a given formula?
[16:29:42] <no_gravity> W - (W-F)*T = E
[16:30:26] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[16:30:34] <no_gravity> I want to reorder that one to "W".
[16:31:26] <Z-module> cadmio: You mean point 4 on there?
[16:31:38] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Remote host closed the connection)
[16:31:57] *** Quits: irrgit (~irrgit@192.241.175.183) (Remote host closed the connection)
[16:32:10] <greenbagels> no_gravity: whiel i believe you should learn how to solve this for yourself, try putting "solve EQUATION for W" into wolframalpha.com, where EQUATION is the one you just wrote
[16:32:29] <Z-module> cadmio, hopefully you realize that their notation (|G_i|,|G_j|) in that really means the GCD of the two numbers.
[16:32:34] *** Joins: moog (~moog@107.126.53.121)
[16:32:36] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[16:32:46] <greenbagels> river: cursed joke
[16:32:56] <no_gravity> greenbagels: Wolfram Alpha always tries to interpret my variables as mathematical/physical constants.
[16:33:22] <no_gravity> greenbagels: For example, it thinks when I write "E" I mean 2.718 etc :)
[16:33:34] <greenbagels> you can usually tell it to interpret it as a variable instead
[16:33:36] <greenbagels> or use lowercase e
[16:33:44] <greenbagels> E in the wolfram language is 2.718 yeah
[16:33:49] <no_gravity> greenbagels: Tell it how? I tried a bunch of ways, none worked.
[16:35:18] <greenbagels> no_gravity: ok in this case it should work if you just put what i said, but in the future just try replacing e with another variable name
[16:35:44] <greenbagels> and then re-substituting e for that variable name once WA gives you an answer
[16:35:46] *** Joins: irrgit (~irrgit@192.241.175.183)
[16:35:55] <cadmio> Z-module: I reasoned like this if m is the order then a^m = e and if d | m then a^(m/d) = (a^m)^/d =  e
[16:36:16] <Z-module> cadmio, which point are we doing?
[16:36:37] *** Joins: xkuru (~xkuru@user/xkuru)
[16:36:59] <no_gravity> greenbagels: It seems to work when I only use lowercase letters for variable names.
[16:36:59] <cadmio> 4 the list there doesn't show letters 4 = (d)
[16:37:22] <greenbagels> the wolfram language defines uppercase E to be euler's constant
[16:37:38] <greenbagels> i mean euler's number
[16:38:38] *** Quits: xff0x (~xff0x@2001:1a81:537e:3f00:d5b4:3c9d:ec95:16b3) (Ping timeout: 268 seconds)
[16:42:09] <greenbagels> no_gravity: http://0x0.st/-FMB.png
[16:42:43] <greenbagels> you can just replace E with another variable name, it doesn't matter
[16:43:44] *** Quits: cadmio (~cadmio@151.25.158.60) (Quit: WeeChat 3.0)
[16:45:05] *** Joins: xff0x (~xff0x@2001:1a81:537e:3f00:d5b4:3c9d:ec95:16b3)
[16:46:10] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 260 seconds)
[16:46:39] *** Joins: k60``` (~user@94.25.169.9)
[16:47:28] <no_gravity> greenbagels: It worked for me, when I used "e" instead of "E", thanks.
[16:47:29] *** Quits: no_gravity (~no_gravit@user/no-gravity/x-5639427) (Quit: leaving)
[16:47:36] *** Joins: savask (~savask@Powder/Developer/savask)
[16:48:33] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:49:36] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:50:29] *** Joins: stipa (~stipa@user/stipa)
[16:54:01] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[16:54:04] <Z-module> cadmio, for ease of notation, let's deal with just k = 2 first, so G = G_1 x G_2 = <g_1> x <g_2>  where gcd(|g_1|,|g_2|) = d > 1. So |g_1| = m_1 d,  |g_2| = m_2 d  for certain naturals m_1, m_2.  Then in G_1 x G_2,  (g_1, g_2)^(m_1 m_2 d) = ( ((g_1)^(m_1 d))^(m_2) , ((g_2)^(m_2 d))^(m_1) ) = ( (e_1)^(m_2), (e_2)^(m_1) ) = (e_1, e_2),  so the order of the element (g_1, g_2) is *at most* m_1 m_2 d = |g_1| |g_2| / d < |g_1| |g_2| = |G_1 x
[16:54:04] <Z-module> G_2|.  So this element has order less than the size of this group, so this element is not a generator for it.
[16:55:06] *** Joins: TheCatBehemoth (~TheCatBeh@2001:8a0:f55d:b200:f5a4:2481:6d20:f250)
[16:55:42] <Z-module> cadmio, in that I used the basic fact that  a^(bc) = (a^b)^c = (a^c)^b   for any naturals a,b,c
[16:57:14] *** Joins: i0e (~is0ke3@user/is0ke3)
[16:57:18] <Z-module> well, not really; I used  g^(bc) = (g^b)^c = (g^c)^b  for any g in a group, and any naturals b,c
[17:02:04] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 268 seconds)
[17:03:02] *** Quits: Arcorann (~A@user/arcorann) (Ping timeout: 240 seconds)
[17:04:51] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:05:45] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[17:07:06] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[17:10:33] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[17:13:33] *** Joins: Guest61 (~Guest61@194.81.214.42)
[17:18:07] *** Joins: Julian (~tos9@python/site-packages/Julian)
[17:18:44] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 268 seconds)
[17:19:34] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 256 seconds)
[17:21:16] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:22:17] *** Joins: Klinda (~superleag@user/klinda)
[17:22:34] *** Quits: Julian (~tos9@python/site-packages/Julian) (Ping timeout: 260 seconds)
[17:23:04] *** Joins: src (~src@user/src)
[17:24:39] *** Joins: a0z1 (~a0z1@185.213.155.160)
[17:25:02] *** Quits: dan_ (~omnisip@2601:280:5880:1b50:ae16:2dff:fe78:44b4) (Ping timeout: 240 seconds)
[17:25:39] *** Joins: omnisip (~omnisip@c-76-25-44-21.hsd1.co.comcast.net)
[17:27:51] *** Joins: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-0007.res6.spectrum.com)
[17:31:44] *** Joins: dez (uid92154@user/dez)
[17:32:54] *** Quits: emf (~emf@2603-6080-9403-11bf-0000-0000-0000-0007.res6.spectrum.com) (Ping timeout: 268 seconds)
[17:34:02] *** Joins: emf (~emf@2620:10d:c091:480::1:ff4b)
[17:36:14] *** Quits: Aim_Here (~David@92.238.16.159) (Quit: Leaving)
[17:36:34] <Guest61> Where a is a vector, am i correct that you can 'contract' a{j} with the kronecker delta to give a{i} (a{j}delta{ij} = a{i})
[17:36:34] <Guest61> but if instead of a{j} you have a{i} would be incorrect to say a{i}delta{ij} = a{j}?
[17:36:38] *** Joins: AimHere (~David@92.238.16.159)
[17:38:27] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 250 seconds)
[17:38:43] <Z-module> Guest61, does your notation a{j} here just mean the jth coordinate entry of the vector?
[17:39:28] <greenbagels> a_i delta_ij = a_j, yes
[17:40:08] <Guest61> Z-module yes (pretty sure so)
[17:40:19] <Z-module> greenbagels: are a_i, a_j just arbitrary entries? I must be misunderstanding notation entirely.
[17:40:41] *** Joins: i0e (~is0ke3@user/is0ke3)
[17:40:56] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:49a2:b187:a83c:8b86) (Ping timeout: 268 seconds)
[17:41:10] <Z-module> oh, I bet there's the Einstein convention nonsense going on. Thus my confusion.
[17:41:17] <greenbagels> Z-module: it's index notation, a_i and a_j are the ith and jth components of a
[17:41:19] <greenbagels> yeah, exactly
[17:41:24] <Guest61> greenbagels just to clarify a_i delta_ij does *not* equal a_j
[17:42:27] <greenbagels> Guest61: a_i delta_ij = a_1 delta_1j + a_2 delta_2j + ... + a_n delta_nj
[17:42:40] <greenbagels> but the only nonzero term on the right is a_j delta_jj
[17:42:56] <greenbagels> (which is just a_j)
[17:45:41] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[17:46:24] <greenbagels> Guest61: to be more clear about your original question: it is true both ways; you can think of the kronecker delta as "replacing one index with another" (when contracted)
[17:46:52] <greenbagels> so delta_ij replaces an i with a j, or vice versa (using the reasoning i wrote out a few lines above)
[17:48:04] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[17:48:11] *** Joins: NEYi (~NEYi@109.251.216.38)
[17:49:30] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (Ping timeout: 250 seconds)
[17:51:54] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:57:23] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi)
[18:01:31] *** Joins: neverfindme (~hayden@158.123.160.43)
[18:04:37] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Read error: Connection reset by peer)
[18:05:36] <omnicron> total tilt
[18:05:58] *** Quits: Guest61 (~Guest61@194.81.214.42) (Ping timeout: 256 seconds)
[18:08:31] *** Joins: Kaylah (~Kaylah@84-198-141-54.access.telenet.be)
[18:09:55] *** Quits: bobb_ (~bobb_@dslb-092-074-253-076.092.074.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[18:11:15] *** Joins: kish` (~sid742412@user/aqua)
[18:13:10] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[18:13:13] *** Joins: Guest61 (~Guest61@194.81.214.42)
[18:13:22] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[18:13:22] *** Joins: kish` (~sid742412@user/aqua)
[18:13:42] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[18:14:21] *** Quits: utis (~utis@vpn-client453.uio.no) (Ping timeout: 252 seconds)
[18:14:40] *** Joins: utis (~utis@vpn-client453.uio.no)
[18:15:16] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[18:16:12] *** Quits: kish` (~sid742412@user/aqua) (Remote host closed the connection)
[18:16:30] *** Joins: kish` (~sid742412@user/aqua)
[18:18:16] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[18:18:16] *** Quits: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com) (Read error: Connection reset by peer)
[18:19:22] *** Joins: the_lanetly_052_ (~the_lanet@185.30.91.139)
[18:22:14] *** Quits: the_lanetly_052 (~the_lanet@185.30.89.29) (Ping timeout: 268 seconds)
[18:22:54] *** Quits: mnl (~mnl@user/mnl) (Quit: cya~)
[18:24:12] *** Joins: lakitu (~lakitu@192-198-3-9.dhcp.radiolinkinternet.com)
[18:26:13] *** Joins: mihael (~mihael@49.145.39.240)
[18:28:54] *** Joins: slidercrank (~slidercra@user/slidercrank)
[18:29:07] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[18:34:02] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[18:35:01] <diophantoz> hi, how can i calculate sin gamma from sin alpha = 7/8, and two isosceles sides a = b = 9?
[18:35:06] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-64ec-ce3a-a9e2-346d.res6.spectrum.com)
[18:35:14] <diophantoz> sin gamma would be angle at C
[18:36:01] *** Joins: Julian (~tos9@python/site-packages/Julian)
[18:36:02] *** Quits: marloi (~mark@45.72.209.251) (Remote host closed the connection)
[18:36:24] *** Joins: marloi (~mark@45.72.209.251)
[18:36:58] <Guest61> greenbagels I wrote out what you put and it makes sense, thanks.
[18:37:01] <diophantoz> like, i could do it sin^-1(7/8) to get it in degrees
[18:37:02] <Guest61>  What i`m confused with now is that I had this notion in my head you only contract the same indices (e.g. i,i ) if they share the same postition number in the subscript (i didn`t read this anywhere, it`s my brain picking up on patterns from what i`ve seen) e.g. E_{ij}E_{jk} = E_{ik} makes sense to me but I would have thought E_{ij}E_{kj} would
[18:37:02] <Guest61> *not* be equal to E_{ik} because you can`t contract the j`s since the j in E_{ij} is second and the j in E_{kj} is also second? But now i`m thinking i`m just making crap up that isn`t real.
[18:37:28] *** Joins: bobb_ (~bobb_@dslb-092-074-253-076.092.074.pools.vodafone-ip.de)
[18:37:33] <diophantoz> then subtract that from 180 degrees (2x) but then i would get an "exact" number?
[18:38:11] *** Joins: mimmy (~mimmy@184.94.118.194)
[18:38:27] *** Quits: Julian (~tos9@python/site-packages/Julian) (Client Quit)
[18:39:26] *** Joins: Guest78 (~Guest78@cpe-173-174-25-173.stx.res.rr.com)
[18:39:28] <somiaj> diophantoz: law of sines?
[18:39:44] <somiaj> though I guess you don't know the third side.
[18:40:45] <somiaj> diophantoz: you can also use trig idenities, sin(180 - 2alpha) = sin(180)cos(2 alpha) - sin(2 alpha) cos(180) = sin(2alpha) = 2 sin(alpha) cos(alpha) and from there you can get an exact value
[18:41:55] <bobb_> Say i have a function f(x) = a * ln(x). A system Ax = y would look like [ ln(x) ] [ a ] = [y]. What can i do when f(x) = ln(x - a) ?
[18:42:21] <greenbagels> Guest61: you would not be able to do anything with the i index there
[18:43:20] <greenbagels> Oh sorry I misread
[18:44:17] <Z-module> bobb_: wait, does Ax mean f(x) ?
[18:44:19] <greenbagels> E_ij E_jk is not E_ik, the js are summed over
[18:45:02] *** Quits: i0e (~is0ke3@user/is0ke3) (Ping timeout: 240 seconds)
[18:45:48] <greenbagels> But if one j is a covariant index and the other is contravariant, you can say E_ij E^j_k = F_ik for some tensor F
[18:46:32] <greenbagels> I guess what I'm saying is that technically the indices have to be in opposite positions to be contractable
[18:48:47] *** Joins: lleo (~leo@89-200-7-180.mobile.kpn.net)
[18:50:02] <bobb_> Z-module no, A should be the same matrix that is referred to as X here https://en.wikipedia.org/wiki/Least_squares#Linear_least_squares
[18:51:49] <bobb_> Z-module found this very minimal example https://math.stackexchange.com/a/2306959 but my function is slightly different
[18:52:11] <omnicron> [ ln(x) - a] = [y]
[18:53:01] <omnicron> but it's unclear what your least squares map is
[18:54:19] <omnicron> normally, for least squares, you're finding x such that Ax≈y minimizes the error
[18:55:10] <omnicron> so in f(x)=a*ln(x) you're finding the a that minimizes the error of [ln(x)]*a ≈ [y]
[18:55:26] <omnicron> in f(x)=ln(x-a) there's no parameter, you're fixing the coefficient to 1
[18:56:38] <bobb_> but in f(x) = ln(x-a) the parameter is inside the function argument?
[18:56:46] <omnicron> unless you're trying to find the a that minimizes errors in which case you're in non-linear territory or possible you can exponentiate and linearlize
[18:58:13] <Guest61> greenbagels ah right, okay (btw I think in my specific context we`re only dealing with cartisian coordinates). I`m looking at this https://imgur.com/a/guPzWOs from the 3rd to the 4th line they seem to 'contract' (might be using this incorrectly) the kronecker delta with T_jk to get T_ik (T_jk delta_ij = T_ik). Now lets say instead of delta_ij, we
[18:58:13] <Guest61> had delt_ji would it still be legit to put T_jk delta_ji = T_ik ?  (T_ij is the stress tensor)
[18:58:32] <bobb_> yes, i believe i try to find the a that minimizes errors, how can i linearlize that?
[18:58:52] <omnicron> bobb_: sorry, i will be back in a bit. i am back to watching carlsen blundering away a total win
[18:59:13] <bobb_> omnicron no problem, thank you :)
[19:00:09] <greenbagels> Guest61: delta_ij is the same as delta_ji
[19:00:58] <greenbagels> delta_ij is just a function f(i, j) which is 1 when i=j, 0 otherwise
[19:01:08] <greenbagels> So it's symmetric in its arguments
[19:02:43] *** Joins: mimmy_ (~mimmy@66.115.145.34)
[19:03:32] *** Quits: mimmy (~mimmy@184.94.118.194) (Ping timeout: 240 seconds)
[19:05:35] *** Joins: lilgopher (~textual@2601:241:8000:38f0:fc6d:baa:b0b5:9af8)
[19:07:43] *** Quits: mimmy_ (~mimmy@66.115.145.34) (Ping timeout: 250 seconds)
[19:09:02] *** Joins: mimmy_ (~mimmy@184.94.118.194)
[19:17:26] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Ping timeout: 256 seconds)
[19:18:19] *** Quits: neverfindme (~hayden@158.123.160.43) (Ping timeout: 250 seconds)
[19:19:04] <bobb_> omnicron my starting point was f(x) = a * (x-b) * e^(-1/2(x-c)^2) which i linearized to ln(a) + ln(x-b) -1/2(x-c)^2 and then realized i'm in trouble
[19:21:24] <dude12312414> that last step is very common :P
[19:21:26] *** Joins: neverfindme (~hayden@158.123.160.43)
[19:21:26] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[19:21:43] *** Joins: neverfindme (~hayden@158.123.160.43)
[19:21:58] *** Quits: lleo (~leo@89-200-7-180.mobile.kpn.net) (Ping timeout: 256 seconds)
[19:25:13] *** Quits: Raz- (~nikolay@libera/sponsor/razor) (Remote host closed the connection)
[19:26:09] *** Joins: sfields (~sfields@2605:a601:adea:7a00:f930:3a7b:a2c4:3fce)
[19:28:15] <bobb_> hehe :D
[19:29:48] *** Joins: abrantesasf (~abrantesa@187.36.170.211)
[19:34:48] <Guest61> greenbagels got it. In that example i sent, the kronecker delta seems to have gotten 'absorbed' into T_jk which resulted in a change of the subscripts of T. Would it be equally correct to have a_j T_jk vec{e_k} ? where the subscript of the a changes (kronecker delta is 'absorbed' into the a_i) and the subcripts of T remain unchanged
[19:34:53] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[19:35:20] <bobb_> the recognititon that f is not linearizable would also be a result
[19:35:58] *** Joins: orbisvicis (~orbisvici@user/orbisvicis)
[19:37:29] *** Quits: orbisvicis (~orbisvici@user/orbisvicis) (Client Quit)
[19:40:24] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[19:40:40] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[19:44:16] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[19:46:54] *** Quits: Koen (~Koen@128.245.88.92.rev.sfr.net) (Quit: Leaving...)
[19:49:10] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (Ping timeout: 256 seconds)
[19:53:47] *** Joins: Satin (uid193953@user/Seten)
[19:56:19] *** Quits: mihael (~mihael@49.145.39.240) (Quit: Client closed)
[20:01:31] *** Joins: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net)
[20:05:15] *** Joins: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com)
[20:05:55] <lpapp> hi, I do not understand why adding an element in a singly linked list after the last node is O(N) when after a given node, it is O(1). Is it a typo? I guess it assumes that you have access to the given node: https://leetcode.com/explore/learn/card/linked-list/213/conclusion/1230/
[20:06:17] *** Joins: stonkey (~stonkey@user/stonkey)
[20:07:35] <Galois> paywall
[20:07:37] <Galois> it's semantics
[20:07:50] <Galois> to reach the k-th node requires taking k steps
[20:08:17] <lpapp> ?
[20:08:26] <Galois> ok, so how many steps does it take to add to the 15th node? You take 15 steps and insert your element.
[20:08:30] <lpapp> it would be the same issue for inserting after a given node, so I do not think you have to do that for this table
[20:08:43] <lpapp> they assume that you have access to the node.
[20:08:49] <Galois> If you had to do this x times, how much time would it take?
[20:08:52] <Galois> answer: 15*x
[20:08:54] <lpapp> otherwise, all additions would be O(N)
[20:09:08] <lpapp> I think you got the assumptions of the table wrong.
[20:09:14] <Galois> I can't see the table, paywall
[20:09:34] <Galois> but regardless, you don't need access to the given node
[20:09:44] <Galois> O(1) _allows for a fixed multiplicative constant_
[20:09:50] <Galois> that's the whole point of Big O notation
[20:10:04] *** Quits: Guest78 (~Guest78@cpe-173-174-25-173.stx.res.rr.com) (Ping timeout: 256 seconds)
[20:10:05] <lpapp> then do not speak if you do not see the table
[20:10:15] <lpapp> because then it is not relevant if you have no information on the question :)
[20:10:28] <Galois> do not ask, then, since no one here can see the table
[20:10:34] <lpapp> I can
[20:10:43] <Galois> do not ask, then, since no one else here can see the table
[20:11:02] <Galois> I will answer your question and ignore your tribulations. If something takes k steps for a fixed k, it's still O(1)
[20:11:04] <lpapp> you are assuming that no one out of 565 people has leetcode account
[20:11:17] <lpapp> sadly, you are wrong
[20:11:39] <Galois> you are free to attack the only one here helping you. I will ignore your attacks.
[20:11:45] <lpapp> Again, if that was the case, i.e. they would not assume that you have access to the node, then _of course_, doubly linked list would also be O(n), not O(1) at all.
[20:11:55] <lpapp> but again, they assume that you have access to the node, really.
[20:12:16] <lpapp> you are attacking the problem with irrelevant info, I will ignore the attack.
[20:12:43] <lpapp> the question is not really what the complexity of reaching a node in a linked list. That would just be dumb.
[20:12:45] <Galois> since you understand the answer so well already, you are on your own.
[20:13:05] <lpapp> No, please stop this nonsense. I do not.
[20:13:29] <Galois> since you do not want my help, and no one else is helping, you can wallow in your own misunderstanding.
[20:14:02] * lpapp is going to ignore this as it is not productive
[20:14:15] *** Quits: brick (~br1ck@150.140.193.84) (Ping timeout: 252 seconds)
[20:14:32] *** Joins: DoYouKnow (~khronos@75-28-180-206.lightspeed.bnsvil.sbcglobal.net)
[20:14:33] <Galois> I can't imagine how anyone would possibly think it productive to 1) post a question involving a paywall, and 2) insist that no one can help without the paywall
[20:15:07] <Galois> like someone's going to buy access just to help you, wtf?
[20:15:18] <lpapp> You are so ridiculous, this is a free page...
[20:15:22] <Galois> no it's not
[20:15:23] <lpapp> it only requires login at worst...
[20:15:26] <Galois> login ain't free
[20:15:34] <lpapp> what did this guy smoke
[20:15:36] <Galois> if you don't know what the product is, YOU are the product
[20:15:56] *** Parts: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com) ()
[20:16:13] *** Parts: DoYouKnow (~khronos@75-28-180-206.lightspeed.bnsvil.sbcglobal.net) ()
[20:19:02] *** Joins: FragmentedCurve (~FC@199.33.98.165)
[20:19:09] *** Joins: cadmio (~cadmio@151.37.156.186)
[20:19:11] <cadmio> Hello
[20:20:40] <biberao> hi
[20:23:09] <cadmio> I'm not sure about #4 http://mathb.in/68296 which is (d) in the proof
[20:25:32] *** Joins: Raz- (~nikolay@libera/sponsor/razor)
[20:26:22] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[20:26:35] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[20:27:04] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[20:28:18] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 260 seconds)
[20:28:41] <cadmio> take an element a^m = e hence if d|m : a^m/d = e, is it correct?
[20:30:55] <Galois> is this your proof? It has some abvious [sic] spelling mistakes
[20:31:07] *** Quits: emf (~emf@2620:10d:c091:480::1:ff4b) (Ping timeout: 252 seconds)
[20:31:16] <Galois> I assume you mean a^(m/d) instead of (a^m)/d. Parentheses are mandatory in this case.
[20:31:28] <Galois> if a^m = e then ... why exactly would a^(m/d) = e?
[20:31:33] <Galois> are you saying a^m = a^(m/d)?
[20:31:48] *** Quits: dsrt^ (~dsrt@wsip-98-188-240-142.mc.at.cox.net) (Remote host closed the connection)
[20:34:02] *** Quits: abrantesasf (~abrantesa@187.36.170.211) (Remote host closed the connection)
[20:34:10] <cadmio> yes I need to understand why the order would be (|g_1||g_2| ⋅⋅⋅ |g_k|)/d
[20:36:18] *** Joins: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com)
[20:36:55] <lpapp> hi, I do not understand why adding an element in a singly linked list after the last node is O(N) when after a given node, it is O(1). Is it a typo? I guess it assumes that you have access to the given node: https://leetcode.com/explore/learn/card/linked-list/213/conclusion/1230/ - those who do not have login, here is a screenshot: https://imgur.com/a/owJAOdt - Also, adding an element after the last node in
[20:37:01] <lpapp> a doubly linked list is O(1) - I do not see how a singly linked list is different in this regard.
[20:37:15] *** hayaliali is now known as alip
[20:37:34] <lpapp> For deletion, I would understand the difference for sure because of the lack of prev, so perhaps a copy/paste error from there or I am missing something?
[20:38:21] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[20:38:24] <diophantoz> hi, if i know sin alfa = 2/3 in a triangle, can i subtract that from the 180 degrees?
[20:38:55] <diophantoz> (given that i know that there is another angle which is the same as well)
[20:39:13] *** Quits: Turingtoast (~Tino@2001:16b8:60e0:c700:1497:fb43:8a79:c0d) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:40:04] <biberao> diophantoz: its 41%
[20:40:09] <biberao> diophantoz: its 41º
[20:41:01] *** Quits: JaredCE (~JaredCE@188.211.162.68) (Ping timeout: 252 seconds)
[20:42:00] *** Joins: lleo (~leo@89-200-7-180.mobile.kpn.net)
[20:42:39] <Galois> having the screenshot available does not change the correctness of anything I said before. Are you ready to listen now?
[20:43:13] <traxex> Galois: prepare for a 2 hour argument about big O
[20:43:30] <diophantoz> biberao, yes, and sin beta is also 2/3
[20:43:46] <diophantoz> i'm looking for a "ratio" for sin gamma
[20:43:50] *** Joins: rain3 (~rain3___@2a02:2f09:d00c:8800:e5a:2f8d:20e4:29e8)
[20:44:12] <Galois> if you want to add an element after the 12th node, and you do this one million times, it will cost you 12*(1 million) operations
[20:44:15] <biberao> diophantoz: you got two angles
[20:44:30] <Galois> this is O(n) operations, where n is the number of times you add an element
[20:44:42] <Galois> adding an element only _once_ under this scenario is O(1) operations
[20:44:47] <diophantoz> biberao, they want the answer in some sort of algebraic form
[20:44:54] <biberao> diophantoz: show a pic
[20:45:12] <Galois> yes, it's 12*1, but that's simply O(1) under Big-O notation
[20:45:17] <Galois> the 12 is fixed
[20:45:51] <lpapp> no, wrong
[20:45:57] <rain3> how to prove this by induction ? https://pasteboard.co/aAO97MZYaDJM.jpg
[20:46:03] <lpapp> are you willing to listen and understand the task at least before adhocly jumping into wrong assumptions?
[20:46:13] <lpapp> The table is based on the assumption that you have access to the node after you add.
[20:46:18] <Galois> I'm not going to engage in a two-hour argument about Big O. If you already understand the answer to your question then don't ask for help.
[20:46:22] <lpapp> You wrongly assume that you have to find it, no, and I told you multiple times.
[20:46:29] <Galois> I am saying _even without that assumption_ the table is correct
[20:46:45] <Galois> that assupmtion is not listed in the screenshot, so I am not using it
[20:46:47] <cadmio> Galois: it's a translation from my textbook and it's not clear to me the part that says "g = (g1, g2, ..., gk) has greatest order among all the elements of G1 x G2 x ... x Gk "
[20:46:58] <Galois> adding an element to the end of a list takes O(N) operations where N is the length of the list. If you do this one million times, the total cost is 1+2+3+...+1000000
[20:47:07] <lpapp> no
[20:47:13] <lpapp> and the table does not say so either, it says O(1)
[20:47:17] <Galois> feel free to ignore the only person who can help you.
[20:47:20] <lpapp> dude, you really have something going on
[20:47:21] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[20:47:23] <Galois> I explained O(1) already. You're not listening.
[20:47:38] <Galois> this is a cost of O(N^2), for N updates. The cost of each update is O(N).
[20:47:54] <lpapp> and no, adding an item to the N/2th element versus Nth is example the same O(n) if you have to loop
[20:48:01] <lpapp> so even with your assumption, you are wrong anyway
[20:48:05] <Plazma> !ops
[20:48:08] *** Joins: rain3_ (~rain3_mob@2a02:2f09:d00c:8800:b89a:8aca:514d:cc2f)
[20:48:14] <Galois> agreed, adding to the N/2th position would also cost O(N)
[20:48:14] <Plazma> ops Galois is being rude
[20:48:28] <Galois> the difference is that N is not fixed here
[20:48:43] <Galois> you can't be "given" the N-th node
[20:48:50] <Galois> otherwise the "given" and "last" rows would indeed be identical
[20:48:50] *** Joins: Trigo (~NeedMathH@64.201.115.44)
[20:49:03] <Galois> "given" node refers to a fixed constant position, not a position depending on N
[20:49:21] <lpapp> Sorry, I am going to ignore you because you ignore everything I have said
[20:49:23] *** Parts: savask (~savask@Powder/Developer/savask) ()
[20:49:34] <lpapp> of course, you can get access to the node after which you have to insert.
[20:50:03] <Galois> I've helped you already. If you don't want it then go ahead.
[20:50:05] <lpapp> and in fact, doubly linked list insertion is O(1) after the last node, which again, according to your logic... well, your logic just does not stand there.
[20:50:29] <Galois> I can explain that too but you don't want it.
[20:50:31] *** Joins: evlc (~evlc@l37-193-63-15.novotelecom.ru)
[20:50:33] <lpapp> I honestly think that you have no idea about the assumptions of this table and you have not read the text to it either, so it is not really productive to discuss it until you get the assumptions.
[20:50:56] <Galois> I am saying two things. 1. the table does not require added assumptions
[20:51:03] *** Joins: Pickchea (~private@user/pickchea)
[20:51:07] <diophantoz> biberao, https://imgur.com/a/tLyyfeO
[20:51:11] <Galois> 2. if you insist that the assumptions are super important, then include those assumptions in your screenshot. You did not.
[20:51:42] <biberao> diophantoz: use cosine law
[20:51:53] <biberao> or sinelaw
[20:51:57] <biberao> it should work
[20:52:36] <diophantoz> yes but the issue is that i can't use sin gamma in degree
[20:52:42] <Galois> it seems to me that the table is not actually based on any assumptions. Rather I think you are incorrectly assuming things about the table that are simply not actually being assumed, which is why those assumptions are not stated anywhere.
[20:52:43] <diophantoz> i need the algebraic form
[20:53:21] <biberao> ok
[20:53:39] *** Quits: lleo (~leo@89-200-7-180.mobile.kpn.net) (Ping timeout: 250 seconds)
[20:54:12] <Galois> nevertheless, if you show me a non-paywalled screenshot displaying the assumptions being used, I will be happy to include them in my response. Until then, you've gotten the help you need, it's up to you to take it, or not. I don't really mind if you have to figure it out yourself.
[20:54:15] <lpapp> Ah, ok, this is a type as this says O(1) for insertion: https://www.geeksforgeeks.org/time-complexities-of-different-data-structures/
[20:54:18] <lpapp> typo*
[20:54:22] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[20:54:34] <lpapp> so, I was correct.
[20:54:35] *** Quits: Inline (~Inline@aftr-37-201-241-234.unity-media.net) (Ping timeout: 252 seconds)
[20:54:39] <dude12312414> i'm assuming that the N in this table refers to the size of the list at the moment, right?
[20:55:18] <Galois> good, you solved your problem yourself.
[20:56:11] <traxex> the whole question makes no sense when you're hiding whether the doubly-linked list maintains a pointer to the last node
[20:56:12] <lpapp> Ah, this also says O(1): https://medium.com/future-vision/data-structures-algorithms-linked-lists-fc0b8a82d609
[20:56:33] <biberao> brb
[20:56:39] *** Joins: gb73d (gb73d@host-92-7-42-10.as13285.net)
[20:56:51] <dude12312414> then for a singly-linked list, adding an element to the end (where you initially only have access to the initial element) requires getting access to the 2nd element, then the 3rd, etc, until you get to the N-th element. Then you can add the next element. So in total you need to perform at least N operations (N-1 next and 1 append step)
[20:57:23] <lpapp> dude12312414: that is exactly the same for N/2th node
[20:57:26] <lpapp> no difference
[20:57:38] *** Quits: xff0x (~xff0x@2001:1a81:537e:3f00:d5b4:3c9d:ec95:16b3) (Ping timeout: 268 seconds)
[20:57:38] <lpapp> that is why the table assumes that you have access to the element that you delete or add after.
[20:57:48] *** Quits: k60``` (~user@94.25.169.9) (Remote host closed the connection)
[20:57:49] <lpapp> and of course, it is the same for the doubly-linked list, too
[20:58:00] <dude12312414> that's for the "given node"
[20:58:06] <lpapp> doubly-linked list with an extra prev pointer makes no difference except deletion
[20:58:11] <lpapp> for adding, it makes no difference
[20:58:24] <lpapp> last node can be given or cannot be given
[20:58:25] *** Joins: xff0x (~xff0x@2001:1a81:537e:3f00:6b1a:2a67:475e:9b5f)
[20:58:28] <dude12312414> if the previous node is not given, you can't add in a single step
[20:58:32] *** Joins: k60``` (~user@static.100.218.46.78.clients.your-server.de)
[20:58:36] <lpapp> either way, the complexity cannot differ because of an extra prev
[20:59:09] <lpapp> the previous node is given
[20:59:28] <lpapp> you insert after
[20:59:33] <lpapp> so, naturally, you get the node before the insertion
[20:59:47] <lpapp> it is basically an append, not preprend
[20:59:49] <lpapp> prepend*
[20:59:58] *** qedders50 is now known as qed
[20:59:59] *** Parts: cadmio (~cadmio@151.37.156.186) (WeeChat 3.0)
[21:00:07] *** Joins: nvmd (~nvmd@user/nvmd)
[21:00:17] <lpapp> for prepend, I would understand the difference.
[21:00:21] *** Quits: qed (~qedders@bzq-84-108-229-161.cablep.bezeqint.net) (Changing host)
[21:00:21] *** Joins: qed (~qedders@user/qed)
[21:00:47] <lpapp> but then, after given node would also be O(N), not O(1) for singly.
[21:01:01] <dude12312414> depends on the meaning of "given"
[21:01:04] <lpapp> so, whichever way and assumptions we look at it with, the table does not seem to stand.
[21:01:12] <lpapp> it does not
[21:01:12] <dude12312414> if they gave you a pointer to the node you want to append to then it's O(1)
[21:01:25] <lpapp> whichever way the meaning is, singly and doubly do not differ because of a prev.
[21:01:34] <dude12312414> if they just told you to add something after the i-th node but your pointer is only to the first node, you will need i steps
[21:01:47] <lpapp> they must be consistent, but in this context, given means you have access to the last node to add to.
[21:02:17] <lpapp> yes, but even if you needed i steps, you would need it even for the doubly.
[21:02:28] <lpapp> So, even then, although I believe it is not it, the table would not stand
[21:02:33] <lpapp> since doubly would also be O(n)
[21:02:42] <lpapp> a prev does not make a difference for the forward traversal.
[21:03:22] <dude12312414> yes in a doubly-linked list if you need to place an element between the i-th and i+1-th element, you will need min(i, N-i) steps
[21:03:27] <lpapp> add | after last node | singly: O(n) | doubly: O(1)
[21:03:32] <lpapp> that just does not make sense with an extra prev.
[21:03:34] <dude12312414> sorry min(i, N-i-1)
[21:04:06] <dude12312414> because you have to get to the i-th or i+1-th node, starting from the first node following ->next or starting from the last node, following ->prev
[21:04:31] <dude12312414> but in a doubly-linked list the last node pointer is for free, so adding to the last node takes 1 step only
[21:04:33] <lpapp> you cannot st art from the last node, come on
[21:04:46] <dude12312414> that's for the doubly-linked list i am talking about
[21:04:48] <lpapp> that is not really part of these linked lists at all
[21:04:50] <lpapp> no
[21:04:54] <lpapp> even for doubly, you do not have last.
[21:05:26] <traxex> < traxex> the whole question makes no sense when you're hiding whether the doubly-linked list maintains a pointer to the last node
[21:05:26] *** Joins: cadmio (~cadmio@151.37.156.186)
[21:05:29] <dude12312414> ok if you don't have last for doubly-linked list then yeah you have to get it by following N pointers
[21:05:32] <lpapp> and again, if given means an index, not the reference, as you seem to think, the table would not show O(1) for after given node
[21:05:40] <lpapp> no, you do not
[21:05:44] <lpapp> that is what I am saying!
[21:05:47] <lpapp> why do you not listen
[21:05:58] <lpapp> given node means, you have access to the reference, not index.
[21:06:14] <lpapp> if that was not the case, assumption, how could the add after given node row be O(1)?
[21:06:17] <Galois> I like how lpapp is perfectly willing to make all sorts of crazy assumptions _except_ the assumption that the doubly linked list is circular
[21:06:24] <dude12312414> i think this question cannot be answered properly without an actual specification of the linked list implementation
[21:06:25] <lpapp> It must be the case therefore that the given node means reference to the node, not index.
[21:06:28] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[21:06:33] <lpapp> it is specificed omg
[21:06:35] <lpapp> specified*
[21:06:36] <dude12312414> in pseudocode or actual source code
[21:06:38] <lpapp> ok, never mind
[21:06:44] <lpapp> I accept and appreciate that you do not get it :)
[21:06:45] <traxex> dude12312414: yep
[21:06:51] <lpapp> I will open a bugreport.
[21:06:55] *** Joins: Guest78 (~Guest78@162-239-107-41.lightspeed.rcsntx.sbcglobal.net)
[21:07:03] <lpapp> It is all very well specified on leetcode actually.
[21:07:16] <Guest78> https://i.imgur.com/8eDZVNh.png why is <a2, q1> * q1 the blue vector here?
[21:07:29] <dude12312414> there is a difference whether you have access to the last node pointer or not
[21:07:34] <Guest78> what is the inner product information give ? length?
[21:07:37] <dude12312414> and this is not made clear in the screenshot
[21:07:39] <lpapp> dude12312414: there is absolutely no
[21:07:42] <lpapp> that is red-herring
[21:07:52] <lpapp> because if you have access, singly would also be O(1)
[21:07:56] <lpapp> not O(n)
[21:08:06] <lpapp> last makes no difference here whatsoever thereof.
[21:08:20] <lpapp> Honestly, if you think harder, you will see that the assumption is that there is reference to the node, not just index.
[21:08:29] <dude12312414> the access can be there for doubly and not there for singly
[21:08:35] <dude12312414> depends on implementation
[21:08:41] <lpapp> it even says "by index" for access where it is given by index, and it does not say here.
[21:08:43] <dude12312414> for doubly-linked lists it is common to have a last pointer
[21:08:48] <traxex> some of us can't read minds even when thinking hard
[21:08:51] *** Parts: cadmio (~cadmio@151.37.156.186) (WeeChat 3.0)
[21:08:56] <lpapp> access there for double, and not for linked, omg
[21:09:09] <lpapp> I am really sorry, but this is singly/doubly 101
[21:09:14] <lpapp> the difference between the two is prev
[21:09:36] <lpapp> at least on leetcode, which we are discussing.
[21:10:37] <lpapp> dude12312414: again, you are wrong, sorry to say, let me prove why
[21:10:40] <lpapp> incorrect
[21:10:52] <lpapp> you seem to assume that you have index based access to given
[21:11:04] <lpapp> that is why you think singly is O(n)
[21:11:10] <lpapp> let us go with this assumption
[21:11:20] <lpapp> add after a given node would be O(n), but it is O(1)
[21:11:37] <lpapp> so, the assumption is definitely wrong, because it can only ever be O(1) if given means, you are given the reference.
[21:12:08] <lpapp> so, really, if you think it through harder, I believe you see that is not the assumption and it is more likely to do with typo than "last".
[21:15:16] <lpapp> This explains doubly well, by the way, if you need a leetcode refresher: https://leetcode.com/explore/learn/card/linked-list/210/doubly-linked-list/1291/
[21:15:45] *** Quits: evlc (~evlc@l37-193-63-15.novotelecom.ru) (Ping timeout: 250 seconds)
[21:16:02] <lpapp> screenshot, last is definitely redherring: https://imgur.com/a/GnvFfHC
[21:16:21] *** Quits: bobb_ (~bobb_@dslb-092-074-253-076.092.074.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[21:16:26] <lpapp> and of course, you could have last a singly, so it is just not relevant as far as I am concerned.
[21:16:31] <lpapp> in*
[21:17:41] <lpapp> either way, the table could be clarified if it is difficult for you to get it.
[21:17:50] <lpapp> That means there is certainly room for improvement in the explanation...
[21:18:13] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0d5-193.dhcp.inet.fi) (Read error: Connection reset by peer)
[21:18:15] *** Quits: Europa (~Europa@user/europa) (Ping timeout: 276 seconds)
[21:18:22] *** Joins: Europa_ (~Europa@user/europa)
[21:19:15] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[21:20:31] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 250 seconds)
[21:22:41] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Ping timeout: 250 seconds)
[21:24:37] *** Quits: neverfindme (~hayden@158.123.160.43) (Quit: Leaving)
[21:26:41] <lpapp> Created a bugreport, thanks.
[21:26:42] *** Parts: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com) ()
[21:28:47] *** Joins: econo (uid147250@user/econo)
[21:29:21] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[21:33:18] *** Quits: causative (~halberd@user/causative) (Quit: may the truth move you)
[21:34:24] *** Joins: causative (~halberd@user/causative)
[21:34:29] *** Quits: Guest61 (~Guest61@194.81.214.42) (Ping timeout: 256 seconds)
[21:34:52] *** Quits: FragmentedCurve (~FC@199.33.98.165) (Quit: leaving)
[21:35:29] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:38:19] *** Joins: staa (~staa@cpeac202e0695f3-cmac202e0695f0.cpe.net.cable.rogers.com)
[21:39:05] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[21:39:26] *** Joins: neverfindme (~hayden@158.123.160.43)
[21:39:31] *** Joins: millido (~millido@84.210.150.128)
[21:40:34] *** Quits: neverfindme (~hayden@158.123.160.43) (Remote host closed the connection)
[21:42:30] *** Quits: Dotz0cat (~Dotz0cat@h165.65.213.151.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[21:43:29] *** Quits: millido (~millido@84.210.150.128) (Client Quit)
[21:44:04] *** Joins: millido (~millido@84.210.150.128)
[21:45:45] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 268 seconds)
[21:45:57] *** Joins: BSaboia (~bsaboia@177.37.198.59)
[21:46:10] *** Quits: Kaylah (~Kaylah@84-198-141-54.access.telenet.be) (Quit: Client closed)
[21:54:21] *** Joins: ld (~a0z1@194.36.25.57)
[21:55:16] *** Quits: BSaboia (~bsaboia@177.37.198.59) (Quit: This computer has gone to sleep)
[21:55:37] *** Quits: staa (~staa@cpeac202e0695f3-cmac202e0695f0.cpe.net.cable.rogers.com) (Quit: Client closed)
[21:56:43] *** Quits: a0z1 (~a0z1@185.213.155.160) (Ping timeout: 250 seconds)
[21:56:54] *** Joins: staa (~staa@cpeac202e0695f3-cmac202e0695f0.cpe.net.cable.rogers.com)
[22:00:41] <dude12312414> lpapp: having this screenshot of their definition of a doubly-linked list would have been helpful in the earlier discussions, as it would have removed the ambiguity related to the presence of a "last" pointer
[22:01:46] *** Quits: mimmy_ (~mimmy@184.94.118.194) (Ping timeout: 268 seconds)
[22:02:00] *** Quits: staa (~staa@cpeac202e0695f3-cmac202e0695f0.cpe.net.cable.rogers.com) (Quit: Client closed)
[22:03:51] <dude12312414> and this is quite a reasonable assumption, if you're implementing a doubly-linked list it is very common, useful and easy to have a last pointer (or have the prev of first element point to last)
[22:05:49] *** Quits: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c) (Ping timeout: 250 seconds)
[22:07:49] *** Joins: jero98772 (~jero98772@2800:484:1d80:d8ce:3490:26c5:1782:da8c)
[22:08:33] <dude12312414> though in that case it still looks like the O(N) for adding to the last element in a singly-linked list is correct, and the O(1) for doubly-linked lists is wrong (with that implementation)
[22:10:54] *** Joins: mimmy_ (~mimmy@184.94.118.194)
[22:11:09] *** Joins: staa (~staa@cpeac202e0695f3-cmac202e0695f0.cpe.net.cable.rogers.com)
[22:11:26] *** Quits: diophantoz (~diophanto@user/diophantoz) (Ping timeout: 260 seconds)
[22:15:27] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[22:17:58] *** Quits: the_lanetly_052_ (~the_lanet@185.30.91.139) (Ping timeout: 260 seconds)
[22:24:23] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:25:03] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[22:25:50] *** Joins: audio (~audio@user/audio)
[22:30:15] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[22:31:01] *** Joins: Kev_ (~Kev@2a01cb0400149f0065b3f67d57fe4c2b.ipv6.abo.wanadoo.fr)
[22:31:17] *** Joins: emf (~emf@2620:10d:c091:480::1:a9a4)
[22:35:29] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[22:37:13] *** Joins: JaredCE (~JaredCE@188.211.162.68)
[22:38:45] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[22:39:11] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[22:39:40] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[22:40:26] *** Joins: pavlushka (~pavlushka@user/pavlushka)
[22:41:08] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[22:41:51] *** Quits: JaredCE (~JaredCE@188.211.162.68) (Ping timeout: 268 seconds)
[22:42:03] *** Joins: seninha (~seninha@user/seninha)
[22:45:21] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[22:45:59] *** Joins: Dotz0cat (~Dotz0cat@h2.88.187.173.dynamic.ip.windstream.net)
[22:53:37] *** Joins: laurus (~laurus@user/laurus)
[22:54:37] <laurus> Does anyone know a good source for getting better at transitioning between the different ways of writing limits in analysis? For example, I sometimes see people write the definition of a Cauchy sequence as lim_{j, k \to \infty} |stuff|  but I've never seen that in a book anywhere. Those kinds of simplications of definitions seem to be useful, is there a place I can read about them or learn them?
[22:56:53] *** Quits: pavlushka (~pavlushka@user/pavlushka) (Remote host closed the connection)
[22:57:50] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:59:23] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[22:59:38] <Z-module> laurus: there are some interesting equivalent versions for stating the Cauchy criterion.
[23:00:04] <laurus> Z-module: What I'm noticing is that there are often "shortcut" ways of writing definitions of limits, convergence, etc
[23:00:16] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[23:00:18] <laurus> But I'm not sure where people are getting these shortcuts from
[23:01:13] <Z-module> Can you link to one?
[23:01:15] <laurus> It often happens when there are, say, two terms involed, that's why I used the Cauchy sequence as an example. But this kind of thing also shows up in just problems I see, etc.
[23:01:31] <laurus> Z-module: yes give me a few minutes to find an example
[23:03:52] <laurus> Z-module: Well using the Cauchy one as an example. It seems like it's kind of glossing over something to write  lim_{j, k \to \infty} |stuff|, doesn't it? I mean, we could have a j that _doesn't_ go to infinity and just send k to infinity and it seems like there is still a limit there.
[23:04:19] <laurus> Whereas the precise "< \varepsilon" version doesn't hide that ambiguity.
[23:04:32] *** Quits: audio (~audio@user/audio) (Ping timeout: 240 seconds)
[23:04:47] *** Joins: millido (~millido@84.210.150.128)
[23:04:51] <laurus> So I guess I am particularly talking about converting between statements that are in the "less than epsilon" form and "limit of something equals something" form.
[23:04:52] <Z-module> they really mean:   the limit over all ordered pairs (j,k) as min{j,k} -> infty
[23:05:22] <laurus> Z-module: Aha... is that in a book somewhere?
[23:05:34] <laurus> I'm thinking I just need to upgrade my sources a bit so I can see these alternative versions of things
[23:05:49] <Z-module> This is the same as:  forall eps > 0  exists N   forall m,n :  m >= N and n >= N,  |x_m - x_n| < eps
[23:06:01] <laurus> Z-module: the reason I'm asking this is, for some problems it seems like these shortcuts make the problems much easier to deal with since you don't have to use specific N's, specific epsilons, etc.
[23:06:33] <laurus> You can just abstract it by writing "limit of stuff" and then when it combines with other expressions that "limit of" is much simpler than dealing with specific bounds, etc.
[23:06:53] <Z-module> sorry,   m >= N and n >= N  ->  |x_m - x_n| < eps
[23:07:08] <laurus> Z-module: Got it, yes that's the definition in my book here
[23:07:16] *** Quits: millido (~millido@84.210.150.128) (Client Quit)
[23:07:27] <laurus> Z-module: are there some other books that use the "limit of" style more? or that provide some exercises about how to move between these kinds of statemnts?
[23:07:54] *** Joins: millido (~millido@84.210.150.128)
[23:08:05] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[23:10:23] *** Joins: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com)
[23:16:03] <laurus> Z-module: I think what's going on is, people develop these kinds of shorthands on their own and then use them to make their work "quicker"
[23:16:33] <laurus> So perhaps I just need to do that
[23:16:42] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[23:16:48] <laurus> I'm sorry I don't have more specific examples of what I'm talking about. Anyway
[23:17:03] <somiaj> I tend to see that a bit more often in classes on like measure theory, where they assume a good foundation of understanding limits from a traditional anaylsis class
[23:17:17] *** Joins: millido (~millido@84.210.150.128)
[23:17:41] <laurus> somiaj: Yes. I guess I just need more practice in abstracting away from specific epsilon type arguments
[23:18:01] <laurus> I think what's going on is these convergence things I'm seeing are the _conclusions_ of specific results from analysis problems or something
[23:18:23] <somiaj> Yea, or cases that are well known so it isn't needed to go through all the details
[23:18:28] <laurus> So these books are basically saying "the reader already proved this in a lower level book or course and so we use that result" and it looks snappy to me
[23:18:42] <somiaj> Though having specific examples would probably help in understandnig what the notation is trying to state
[23:18:53] <laurus> somiaj: Alright. Thanks. I found a book a few weeks ago by N.L. Carothers that looks like it has the reader prove some of these types of statements
[23:18:59] <laurus> somiaj: Yeah I should have come with some specific examples I'm sorry
[23:19:30] <somiaj> Measure theory gets interesting where you have various types of limits, point wise, uniform, almost everywhere, in measure, and so on
[23:20:02] <somiaj> So being able to quickly state the convergence type is useful without having to write out the full definition
[23:20:13] <laurus> somiaj: Right, that is where I'm kind of having issues
[23:20:43] <laurus> I might try working on some stuff from this Carothers book as something to boost my level
[23:22:10] *** Quits: ko (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[23:22:11] <laurus> Thank you for sharing your thoughts, it was helpful for me
[23:27:31] <Z-module> Well, you just have to work out why various versions are the same, really.
[23:27:56] <laurus> Z-module: Yes, I agree, I might be able to just do that as they come up.
[23:30:34] *** Quits: rain3 (~rain3___@2a02:2f09:d00c:8800:e5a:2f8d:20e4:29e8) (Ping timeout: 268 seconds)
[23:36:11] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[23:44:09] *** Joins: mnl (~mnl@user/mnl)
[23:49:54] *** Quits: mimmy_ (~mimmy@184.94.118.194) (Ping timeout: 260 seconds)
[23:56:04] <staa> Given binary classification ~N(0,1) if t = 0, ~N(3,1) if t = 1
[23:56:06] *** Quits: ejjdhfjsu (~ejjdhfjsu@cmcust2a-84.174.nulinkdigital.com) (Read error: Connection reset by peer)
[23:56:14] <staa> What is the Bayes optimal prediction for a new query point 𝑥 assuming the 0-1 loss?
[23:57:34] *** Joins: remavas (~Remavas@user/remavas)
[23:58:42] *** Quits: [-_-] (~fractal@user/---/x-1675478) (Quit: ;3)
[23:58:57] <Bayes> staa: 0 if x < 1.5, 1 if x > 1.5?
