[00:00:00] <earendel> also i can learn python.
[00:00:02] <earnestly> Yes
[00:00:06] <rendar> earnestly, too much code to rewrite by now
[00:00:59] <emanuele6> file descriptors and /dev/tty are not bash things
[00:01:13] <earnestly> Nor is copying data
[00:01:23] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[00:01:30] <earnestly> The same requirements would be necessary in whatever language is used
[00:01:32] <emanuele6> this is just os stuff, hardly anything to do with bash specifically
[00:01:53] <earnestly> Hm
[00:03:30] <earnestly> But I don't really care about the technical side of this.  Why must this user be a chain around everyone's neck if they neither care, spurn help they do get, and then become hostile all the same.  If they want to use python, that's fine.  They could use any language they want, so long as they fuck off
[00:03:36] <tirnanog> blah blah blah muh python. yawn.
[00:03:50] <rendar> earnestly, lol
[00:03:52] <rendar> that's rude
[00:03:58] <rendar> chilll out, dude..
[00:04:09] <earnestly> I used to have blacklists and I remember this user constantly winding up on them.  I lost them recently due to changing configs
[00:04:11] <rendar> someone has been triggered
[00:04:24] <rendar> earnestly, you can simple /ignore me, no?
[00:04:30] <rendar> is that simple.. :)
[00:04:44] <emanuele6> rendar: you can simply /ignore him.
[00:04:49] <rendar> why?
[00:04:55] <rendar> i don't want to ignore him
[00:04:57] <earendel> i'm not sure it's a good idea to restrict channels like this just to bash only questions. even though pointing out it's not a bash problem can help.
[00:05:11] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[00:05:18] <earendel> emanuele6: they are on the same team.
[00:05:55] <jensen> i see a lot of desktop status bars use modules involving scripts which poll with a "sleep 1" to update information. Is this significantly less resource efficient than lower level languages like C/C++ especially because sleep is not a builtin?
[00:06:01] <rendar> i think that the problem here is people doesn't explain things, i aksed why what fd3 thing? i have never seen something like that, and the answer was a command bot, that yes.. explains something, but i still did not get that, i'm not a so expert in bash..
[00:06:10] <rendar> i just wanted some more context to grasp it better
[00:06:29] <rendar> the thing is, bash squeeze the worst out of me, sorry guys..
[00:06:34] <rendar> i appreciate your help
[00:06:40] <rendar> but bash is just not for me
[00:06:48] <tirnanog> earendel: I think it was more a case of the question being drenched in a frustration against bash that had clearly spilled into negativity that ended up causing irritation. not so much whether mentioning python is on-topic or not.
[00:07:01] <earendel> jensen: sleep is usually a workaround for missing event-mechanics
[00:07:10] <earnestly> jensen: It's expensive to poll like that.  You can load the bash sleep loadable to avoid the cost of fork+exec, but ideally you want to design statusbars to not poll for data at all, and try to make it more event oriented
[00:08:09] <earnestly> jensen: For some things you have no choice but to poll, such as for a clock.  Here's something I whipped up awhile ago as an example: https://0x0.st/-n4W.sh
[00:08:54] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[00:09:21] <rendar> i think that one of the first solution to my problem could have been `s=$( my_fn 2>&1 >/dev/null | tee /dev/tty )`
[00:09:26] <rendar> i would have grasped that
[00:09:26] <earnestly> jensen: I did a little write up on it now that you mention it which might make it clearer what's going on: https://gist.github.com/6ff1fa506d58f5a2a6f611f76e5f80b4
[00:09:48] <rendar> basically, you don't need fd3 in such a way, right?
[00:09:58] <emanuele6> no, that won't work
[00:10:03] <rendar> emanuele6, why?
[00:10:05] <tirnanog> indeed.
[00:10:05] <emanuele6> you tried it and it didn't work
[00:10:13] *** Quits: sdu (~doo@185.44.146.214) (Remote host closed the connection)
[00:10:19] <rendar> emanuele6, in the Xorg terminal, yes
[00:10:32] <rendar> but now i've checked for /dev/tty
[00:10:42] <rendar> i can print stuff to /dev/tty
[00:10:46] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[00:10:51] <emanuele6> no, that is impossible i think
[00:12:26] <rendar> let's say the /dev/tty is working properly, that should work (even i wish to not use /dev/tty)
[00:12:30] <rendar> why the fd3, then?
[00:13:43] <earendel> can i use file redirectors to read from other descriptors than 1? like <2?
[00:13:47] <emanuele6> if /dev/tty is working somethiing's up
[00:14:02] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Client Quit)
[00:14:09] <emanuele6> because it will not work
[00:14:19] <rendar> emanuele6, i'm very tired
[00:14:21] <emanuele6> because it is always pts
[00:14:32] <rendar> can you just be more mature? :)
[00:15:02] <rendar> i apologize for my myopic view of before, i know that you do your best to help here
[00:15:12] <rendar> it's just i can't grasp bash
[00:15:16] <tirnanog> earendel: <& rather than <
[00:15:48] <tirnanog> or read -u
[00:15:52] <rendar> so again, said that /dev/tty works, why i would want fd3 if i can do that without it?
[00:15:57] <earendel> tirnanog: hm? like <&2  ?
[00:16:23] *** Joins: ProperN[out] (~holyShizn@user/propernoun)
[00:16:31] <rendar> what is the advantage?
[00:16:34] *** Quits: Guest16 (~Guest16@151.29.94.152) (Quit: Client closed)
[00:16:39] *** Quits: ProperNoun (~holyShizn@user/propernoun) (Ping timeout: 250 seconds)
[00:17:11] *** Joins: Andrie (~Andrie@user/Andrie)
[00:17:12] <earendel> i don't understand that & operator .. i thought i can use it to make descriptor point at the same target  than another. so far.
[00:17:18] *** Joins: nehsou^ (~nehsou@207.5.54.6)
[00:17:31] <emanuele6> i don't think fd3 can work
[00:17:41] <earendel> wait. hm..
[00:18:00] <emanuele6> it usually breaks
[00:18:19] <earendel> tirnanog: would that also read the output from fd1?  or just 2?
[00:18:22] <tirnanog> earendel: yes. although 2, specifically, is hard to usefully employ in that way. typically, you'd be using something from 3 onwards in the case that you're designating specific file descriptor numbers.
[00:18:33] <gr33n7007h> # for((b=48; b>=0; b-=8)); do c=$(( 11910237700115242 >> b & 0x7f )); printf "$(printf '\\x%02x' $c)"; done
[00:18:34] <shbot> gr33n7007h: *PLONK*
[00:18:36] <rendar> OUTPUT=$(command | tee >(cat - >&2))
[00:18:43] <rendar> this is the solution i was looking for, btw
[00:18:44] <gr33n7007h> only jk :)
[00:19:46] <rendar> or, at least  tee /dev/stderr instead of /dev/tty
[00:20:52] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:21:01] <emanuele6> # output=$(command 2>&1 >/dev/null | tee /dev/stderr)
[00:21:03] <shbot> emanuele6: no output
[00:21:49] <emanuele6> # output=$({ echo hi >&2 ;} 2>&1 >/dev/null | tee /dev/stderr); declare -p output
[00:21:50] <shbot> emanuele6: hi
[00:21:50] <tirnanog> earendel: for example, consider two read loops, one of which is nested within another. while read -r a; do while read -r b <&3; do :; done 3< file2; done < file1. file1 is opened on the standard input (fd 0), file2 is opened on fd 3.
[00:21:50] <shbot> emanuele6: declare -- output="hi"
[00:22:20] <emanuele6> you could use that because tee will have the main the terminal as fd2
[00:23:13] <tirnanog> earendel: read -r -u 3 b would also work there.
[00:23:36] <earendel> tirnanog: nice, thank you.
[00:24:00] *** Joins: wenijinew (~wenijinew@c83-248-21-105.bredband.tele2.se)
[00:24:16] *** Joins: damxsa (~damx@2001:16a2:cfed:3100:d614:626b:5937:395b)
[00:24:48] <earendel> is dev/stderr bound dynamically to a process by context?
[00:25:23] *** Joins: docmax__ (~docmax@dynamic-077-006-116-140.77.6.pool.telefonica.de)
[00:25:25] *** Quits: reezoh (~reezoh@173.168.223.85) (Read error: Connection reset by peer)
[00:25:36] <emanuele6> /dev/stderr; /dev/fd/N; /proc/self/*, etc. yes
[00:25:52] <earendel> uhum.
[00:25:54] <emanuele6> they point to different things depending on what is the current process
[00:26:07] <earendel> yes. get ya.
[00:26:17] <emanuele6> s/current process/process accessing them/
[00:26:20] <tirnanog> /dev/stderr isn't strictly portable but, that aside, file descriptors are per-process and so would /dev/stderr be, yes.
[00:27:02] <emanuele6> in bash, /dev/stderr and /dev/fd/N are portable to any os (they will be emulated), but only in redirections
[00:27:11] <tirnanog> yeah.
[00:27:31] <jensen> earnestly: that is awesome reference material, are you still using that status bar or is it more proof of concept? i suppose there's no event for reflecting filsystem size in real time. I used inotify before, but i don't think it's suitable to track an 8 tb media drive for writes/deletions to run e.g. du -sh
[00:27:37] <earendel> but in principle all running process have their descriptors listed in some directory .. (proc or sys or sth) right? so one could eventually write to it, at least as root?
[00:27:43] *** Quits: damxsa (~damx@2001:16a2:cfed:3100:d614:626b:5937:395b) (Client Quit)
[00:27:55] *** Quits: docmax_ (~docmax@dynamic-095-112-241-050.95.112.pool.telefonica.de) (Ping timeout: 250 seconds)
[00:28:04] <earnestly> jensen: I still use it, because it works well enough I haven't given it more attention.  I mean to, but eh.
[00:28:09] <earendel> write to them.
[00:28:36] <tirnanog> earnestly: commonly, yes. at least, I can't think of any (still maintained) unix derivative off-hand that doesn't provide a system interface of that sort.
[00:28:42] <tirnanog> bah.
[00:28:47] <tirnanog> i should stop IRC'ing and go freshen up.
[00:28:48] <earnestly> jensen: I don't use inotify to watch disk usage, I use sar for that
[00:29:05] <earendel> (isn't that one reason ppl do start processes reading from /dev/null to prevent it?)
[00:29:19] <earnestly> tirnanog: It's reasonable, 'ea' is too much similarity, can't be expected to type more than 2 letters
[00:29:40] <earendel> yes. i got that joke.
[00:30:12] <earnestly> jensen: (sar handles much of the random stats)
[00:30:14] <emanuele6> earnestly: even `ear' would be too similar
[00:30:25] <earnestly> emanuele6: I didn't even notice that
[00:30:34] <earendel> tho earendel is before earnestly.
[00:31:17] <emanuele6> # printf '%s' earnestly earendel | sort | nl
[00:31:18] <shbot> emanuele6:      1  earnestlyearendel
[00:31:23] <emanuele6> oops
[00:31:25] <earendel> that's why nobody accidently tab completes to ping you :p
[00:31:26] <emanuele6> # printf '%s\n' earnestly earendel | sort | nl
[00:31:27] <shbot> emanuele6:      1  earendel
[00:31:27] <shbot> emanuele6:      2  earnestly
[00:32:57] <earendel> so it accidently has some merit :)
[00:34:06] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 245 seconds)
[00:34:16] *** Quits: cfaber (~cfaber@c-71-237-84-236.hsd1.co.comcast.net) (Ping timeout: 268 seconds)
[00:38:03] *** Quits: rufito (~phil@2800:150:153:29c9:8d74:aa4:d5c5:a984) (Remote host closed the connection)
[00:38:04] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[00:43:27] *** Joins: stonkey (~stonkey@user/stonkey)
[00:43:37] *** Joins: cactus-head (~cactus_he@159.196.56.11)
[00:43:43] *** Quits: cactushead (~cactus_he@159.196.56.11) (Remote host closed the connection)
[00:44:30] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[00:45:53] *** Quits: n4dir (~user@i577BC816.versanet.de) (Remote host closed the connection)
[00:46:17] *** Quits: ozzzo_work (~ozzzo_wor@h87.s239.verisign.com) (Ping timeout: 256 seconds)
[00:47:31] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[00:47:42] <tirnanog> earendel: yes, re: /dev/null.
[00:49:02] *** Quits: sudomann1 (~sudomann@c-24-126-8-24.hsd1.wv.comcast.net) (Ping timeout: 260 seconds)
[00:49:38] *** Joins: sudomann (~sudomann@c-24-126-8-24.hsd1.wv.comcast.net)
[00:51:50] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 260 seconds)
[00:57:10] *** Quits: magla (~gelignite@55d48631.access.ecotel.net) (Quit: Stay safe!)
[00:59:14] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[00:59:30] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:00:47] *** Quits: zer0bitz (~zer0bitz@194.34.133.91) (Ping timeout: 268 seconds)
[01:02:08] <earendel> cool. ok.
[01:04:15] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[01:04:38] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Remote host closed the connection)
[01:09:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[01:09:50] *** Quits: H3dn1ng (~H3dn1ng@185.213.154.229) (Quit: leaving)
[01:10:15] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:13:55] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[01:15:10] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[01:19:28] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[01:21:33] *** Quits: wenijinew (~wenijinew@c83-248-21-105.bredband.tele2.se) (Ping timeout: 256 seconds)
[01:23:14] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[01:24:11] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[01:24:46] *** Joins: nvrhome (~Bop@user/nvrhome)
[01:24:52] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[01:24:57] *** Quits: thebombzen (~thebombze@64-233-244-163.static.clv.wideopenwest.com) (Quit: Quit)
[01:27:21] *** Joins: miique (~miique@181.46.139.166)
[01:27:55] *** Quits: drd (~drd@host-79-53-116-35.retail.telecomitalia.it) (Ping timeout: 268 seconds)
[01:32:20] *** Joins: zeden (~zeden@user/zeden)
[01:33:12] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[01:34:05] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[01:36:17] *** Quits: joedang (~joedang@50.39.238.43) (Ping timeout: 256 seconds)
[01:37:52] *** Quits: pigweed (~pigweed@97.119.249.142) (Quit: Leaving)
[01:41:37] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[01:42:17] *** Quits: jonthesnow (~xizhendu@240e:305:7380:4300:22a3:ecb5:b567:7739) (Ping timeout: 240 seconds)
[01:42:21] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[01:42:30] *** Quits: bud (~bud@user/bud) (Quit: Leaving.)
[01:43:20] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[01:46:54] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Ping timeout: 260 seconds)
[01:47:55] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[01:47:58] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[01:48:10] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[01:49:12] *** Parts: mehwork (~mehwork@98.185.199.35.bc.googleusercontent.com) ()
[01:51:17] *** Joins: malina (~malina@user/malina)
[01:51:35] *** Quits: Namarrgon (~Namarrgon@archlinux/op/Namarrgon) (Ping timeout: 256 seconds)
[01:52:01] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Client Quit)
[01:53:46] *** Joins: zoe (~zoe@fsf/member/zoe)
[01:53:57] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[01:54:59] *** Quits: sinaowolabi_ (~SinaOwola@160.152.143.77) (Ping timeout: 256 seconds)
[01:55:17] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Ping timeout: 240 seconds)
[01:56:24] *** Quits: NoelFlantier3 (~Hubert@static.238.157.9.5.clients.your-server.de) (Remote host closed the connection)
[01:56:38] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[01:56:45] *** Joins: NoelFlantier3 (~Hubert@static.238.157.9.5.clients.your-server.de)
[02:01:22] *** Joins: Namarrgon (~Namarrgon@archlinux/op/Namarrgon)
[02:03:43] *** Joins: seninha (~seninha@user/seninha)
[02:03:59] *** Joins: wiscii (~tct@user/wiscii)
[02:07:13] *** Joins: Everything (~Everythin@37.115.210.35)
[02:09:44] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:14:47] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[02:15:18] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:16:06] *** Joins: Dotz0cat_ (~Dotz0cat@h146.184.39.162.static.ip.windstream.net)
[02:16:31] *** Quits: Dotz0cat (~Dotz0cat@h8.47.90.75.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[02:17:02] *** Dotz0cat_ is now known as Dotz0cat
[02:18:41] *** Quits: finalriposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net) (Quit: Quitting)
[02:18:47] *** Joins: sinaowolabi_ (~SinaOwola@160.152.143.77)
[02:18:57] *** Quits: miique (~miique@181.46.139.166) (Ping timeout: 240 seconds)
[02:20:20] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[02:21:18] *** Joins: riposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net)
[02:21:45] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[02:24:02] *** Quits: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Ping timeout: 268 seconds)
[02:25:01] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Remote host closed the connection)
[02:25:07] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:25:53] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 268 seconds)
[02:26:48] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[02:30:41] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[02:31:17] *** Quits: unicky (~unickyllt@46.211.75.112) (Ping timeout: 240 seconds)
[02:35:35] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[02:35:45] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[02:38:47] *** Quits: Murray7501 (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[02:40:03] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[02:40:15] *** Joins: ferdna (~ferdna@user/ferdna)
[02:40:53] *** Quits: sudomann (~sudomann@c-24-126-8-24.hsd1.wv.comcast.net) (Ping timeout: 256 seconds)
[02:41:26] *** Joins: MrBlue_ (~MrBlue@24.114.96.72)
[02:41:40] *** Joins: sudomann (~sudomann@c-24-126-8-24.hsd1.wv.comcast.net)
[02:41:48] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[02:41:59] *** Joins: loganlee (~Thunderbi@user/loganlee)
[02:42:32] *** Joins: cfaber (~cfaber@c-71-237-84-236.hsd1.co.comcast.net)
[02:43:03] *** Joins: Circuitsoft (uid393878@id-393878.lymington.irccloud.com)
[02:43:37] *** Quits: MrBlue (~MrBlue@192.145.80.134) (Ping timeout: 240 seconds)
[02:45:09] *** Quits: MrBlue_ (~MrBlue@24.114.96.72) (Client Quit)
[02:45:16] *** Joins: semeion (~semeion@user/semeion)
[02:48:17] *** Quits: chomwitt (~chomwitt@2a02:587:dc1e:c100:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[02:49:45] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[02:54:16] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[02:55:01] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[02:56:44] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[02:57:54] *** Joins: bluedust (~bluedust@103.165.167.220)
[02:58:02] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Ping timeout: 240 seconds)
[02:58:57] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[03:03:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:05:02] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:05:32] *** Quits: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul) (Ping timeout: 240 seconds)
[03:07:04] *** Joins: rgrinberg (~textual@2806:101e:7:cff:f4d0:b9c8:9c34:9747)
[03:07:59] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[03:09:47] *** Quits: FoodMan (~glucose@user/foodman) (Ping timeout: 256 seconds)
[03:11:26] <kurahaupo> emanuele6: « > /dev/stderr » and « >&2 » appear to be synonyms but on Linux they're not quite. If stderr is going to a file rather than a pipe or tty, the former will truncate the file, and then will have its own write cursor. The same applies to « tee /dev/stderr ».
[03:11:41] *** Joins: chenqisu12 (~bhca7d@183.217.200.22)
[03:12:03] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[03:14:19] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[03:14:49] *** Quits: rgrinberg (~textual@2806:101e:7:cff:f4d0:b9c8:9c34:9747) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:15:01] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:35] *** Joins: rgrinberg (~textual@2806:101e:7:cff:f4d0:b9c8:9c34:9747)
[03:15:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:15:56] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:16:17] *** Quits: chenqisu12 (~bhca7d@183.217.200.22) (Ping timeout: 240 seconds)
[03:16:46] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[03:17:17] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[03:17:40] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[03:19:44] <emanuele6> kurahaupo: that makes sense
[03:19:59] <emanuele6> thank you for pointing it out
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:20:57] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 240 seconds)
[03:21:36] <kurahaupo> The difference is the reason for « tee >( cat >&2 ) », which is annoying for having an extra process in the chain
[03:22:34] *** Quits: Oleg (~Oleg@ool-45745511.dyn.optonline.net) (Quit: WeeChat 3.4)
[03:24:16] *** Quits: xx (~xx@user/xx) (Excess Flood)
[03:24:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[03:24:48] *** Joins: xx (~xx@user/xx)
[03:25:13] *** Joins: Maxattax97 (~max@2603:900a:1501:a7ca::100)
[03:26:28] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[03:30:48] <earendel>  and...  >&2 will not truncate the file?
[03:31:39] <emanuele6> kurahaupo: wouldn't `tee /dev/df/3 3>&1 >&2' solve that?
[03:32:04] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Read error: Connection reset by peer)
[03:32:22] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[03:32:47] <kurahaupo> earendel: >& uses the dup2() syscall which won't truncate
[03:33:01] <kurahaupo> emanuele6: No it won't fix it
[03:35:03] <earendel> you mean tee will truncate the file?
[03:35:13] <kurahaupo> emanuele6: on Linux /dev/stderr is typically a symlink to /dev/fd/2, and /dev/fd is a symlink to /proc/self/fd. Changing the names won't stop the truncation when it hits the actual file
[03:35:50] <emanuele6> kurahaupo: but that would truncate /dev/fd/3 which is what bash captures
[03:36:02] <emanuele6>  a=$(f 2>&1 > /dev/null | tee /dev/fd/3 3>&1 >&2)
[03:36:31] <kurahaupo> oh I see, yes that could work
[03:37:03] *** Quits: XV8 (~XV8@2601:5cb:c001:50:d40f:2d13:1de:ebb1) (Quit: Textual IRC Client: www.textualapp.com)
[03:38:08] *** Quits: rgrinberg (~textual@2806:101e:7:cff:f4d0:b9c8:9c34:9747) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:40:01] *** Quits: malina (~malina@user/malina) (Quit: malina)
[03:40:11] *** Joins: Oleg (~Oleg@ool-45745511.dyn.optonline.net)
[03:40:37] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 240 seconds)
[03:40:57] <emanuele6> # exec 4>&2 2> myfile.test; echo hello >&2; f () { echo out; echo >&2 err ;}; a=$(f 2>&1 > /dev/null | tee /dev/fd/3 3>&1 >&2); declare -p a; exec 2>&4-; cat -- myfile.test
[03:41:02] <shbot> emanuele6: declare -- a="err"
[03:41:02] <shbot> emanuele6: cat: cannot open --: No such file or directory
[03:41:02] <shbot> emanuele6: etc... ( http://ix.io/3K7Y )
[03:41:05] <earendel> i understand files can be truncated or appended to. but that wouln't in any way justify any difference in syntax. or workarounds. 2>> could append to files, and just write to anything else.
[03:41:12] <emanuele6> 5# exec 4>&2 2> myfile.test; echo hello >&2; f () { echo out; echo >&2 err ;}; a=$(f 2>&1 > /dev/null | tee /dev/fd/3 3>&1 >&2); declare -p a; exec 2>&4-; cat -- myfile.test
[03:41:13] <shbot> emanuele6: declare -- a="err"
[03:41:13] <shbot> emanuele6: hello
[03:41:14] <shbot> emanuele6: err
[03:41:18] <emanuele6> yep, seems to work
[03:41:51] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[03:42:14] *** Joins: chenqisu1 (~bhca7d@183.217.201.21)
[03:42:36] <emanuele6> kurahaupo: oh, ok. i didn't get why you said it would not work; it was just a misunderstanding :)
[03:42:37] <earendel> but i guess internally you will have to open the file and set its cursos to end of it. if tee doesn't allow to  append to files that would be. unexpected.
[03:43:08] *** Quits: clarkk11 (~clarkk@host86-165-12-159.range86-165.btcentralplus.com) (Quit: Leaving)
[03:44:51] <emanuele6> but thanks a lot for mentioning that thing about `tee /dev/stderr' i knew that `tee' could truncate it, but i was not thinking of the case in which stderr was a regular file
[03:45:52] <kurahaupo> earendel: I'm inclined to think it's a design error in the Linux kernel, that opening /proc/pid/fd/1 doesn't get the open flags from the existing fd, and doesn't have an option to do the equivalent of dup()
[03:47:21] <kurahaupo> There are arguments both ways about sharing the cursor; it means that you could mess up a database by moving the cursor between operations within the database server
[03:48:43] <kurahaupo> Having two independent cursors both set to append mode is a reasonable facsimile of having one shared cursor, for the purposes of shell io redirection
[03:49:30] <emanuele6> i think it makes more sense that opening /proc/pid/fd/N uses the flags of the open() call that opened it to be honest (how it works now)
[03:49:32] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[03:50:50] *** Joins: NotSatoshi (~NotSatosh@user/NotSatoshi)
[03:50:53] <emanuele6> # strace -e openat tee /dev/fd/3 3>/dev/null </dev/null |& grep /dev/fd
[03:50:54] <shbot> emanuele6: openat(AT_FDCWD, "/dev/fd/3", O_WRONLY|O_CREAT|O_TRUNC, 0666) = 4
[03:51:21] <emanuele6> `tee' opened /dev/fd/3 with O_TRUNC so it should be truncated
[03:51:33] <emanuele6> i don't think it is a flaw personally
[03:51:43] <Blondie101010> -a to append
[03:52:14] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 252 seconds)
[03:52:25] <kurahaupo> Blondie101010: sure; then what about when the original fd was not set to append?
[03:52:37] <earendel> i think nothing created more problems then all the diverse programmers (mis)understanding of :blocking: mechanisms (all kind of)
[03:53:32] *** Quits: Maxattax97 (~max@2603:900a:1501:a7ca::100) (Quit: WeeChat 3.4)
[03:54:19] <kurahaupo> The thing is, people look at /proc/self/fd and see what appears to be a bunch of symlinks; but they're not: those are synthesised for appearances sake. Rather it's a special mount that provides kernel information.
[03:54:26] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 252 seconds)
[03:54:32] *** Joins: n4dir (~user@i577BC816.versanet.de)
[03:54:40] <earendel> without referencing what you just said kurahaupo. more of like.. me trying to understand what problems you are even trying to solve in first place: like emanueles line: # exec 4>&2 2> myfile.test; echo hello >&2; f () { echo out; echo >&2 err ;}; a=$(f 2>&1 > /dev/null | tee /dev/fd/3 3>&1 >&2); declare -p a; exec 2>&4-; cat -- myfile.test  ..
[03:55:09] *** Quits: owl4ce[m] (~owl4cemat@2001:470:69fc:105::1:3235) (Quit: Client limit exceeded: 20000)
[03:55:30] <phogg> kurahaupo: are you saying files in /proc might not conform to typical file semantics? I am shocked! Shocked! Well, not that shocked.
[03:55:42] *** Joins: owl4ce[m] (~owl4cemat@2001:470:69fc:105::1:3235)
[03:55:48] <earendel> would it be something that breaks the syntax/semantic of bash? i don't see that.
[03:55:51] <emanuele6> earendel: if you use the   `f 2>&1 > /dev/null | tee /dev/stderr'   at the end, myfile.test will not contain "hello"
[03:56:37] *** Joins: Maxattax97 (~max@2603-900a-1501-a7ca-0000-0000-0000-0100.inf6.spectrum.com)
[03:56:38] *** Joins: rgrinberg (~textual@2806:101e:7:cff:f4d0:b9c8:9c34:9747)
[03:56:46] <emanuele6> # exec 4>&2 2> myfile.test; echo hello >&2; f () { echo out; echo >&2 err ;}; a=$(f 2>&1 > /dev/null | tee /dev/stderr); declare -p a; exec 2>&4-; cat myfile.test
[03:56:47] <shbot> emanuele6: declare -- a="err"
[03:56:47] <shbot> emanuele6: err
[03:57:04] <emanuele6> # exec 4>&2 2> myfile.test; echo hello >&2; f () { echo out; echo >&2 err ;}; a=$(f 2>&1 > /dev/null | tee /dev/fd/3 3>&1 >&2); declare -p a; exec 2>&4-; cat myfile.test
[03:57:05] <shbot> emanuele6: declare -- a="err"
[03:57:06] <shbot> emanuele6: hello
[03:57:06] <shbot> emanuele6: err
[03:57:10] <earendel> i wouldn't really care if bash keeps overthrowing rise bags in chine when i use a file redirector to express my will.
[03:57:39] <earendel> i wouldn't really care if bash keeps overthrowing rise bags in chine when i use a file redirector to express my will.
[04:00:43] <emanuele6> s/bash/tee/g
[04:01:12] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[04:03:24] <Oleg> 0 H[*kill-server
[04:03:24] *** Quits: Oleg (~Oleg@ool-45745511.dyn.optonline.net) (Quit: WeeChat 3.4)
[04:03:48] *** Joins: Oleg (~Oleg@ool-45745511.dyn.optonline.net)
[04:03:58] *** Joins: rufito (~phil@2800:150:153:29c9:8d74:aa4:d5c5:a984)
[04:04:56] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:06:17] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[04:07:35] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[04:09:01] *** Quits: freep (~freepppp@62.1.245.43.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[04:12:41] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[04:13:26] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:13:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[04:13:48] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[04:14:16] *** Joins: loganlee (~Thunderbi@user/loganlee)
[04:14:20] *** Parts: loganlee (~Thunderbi@user/loganlee) ()
[04:15:03] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:15:56] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[04:16:17] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 240 seconds)
[04:17:19] *** Joins: kurahaupo1 (~martin@115.69.27.211)
[04:20:03] *** Joins: seninha (~seninha@user/seninha)
[04:20:10] <earendel> `` if you use the   `f 2>&1 > /dev/null | tee /dev/stderr'   at the end, myfile.test will not contain "hello" .. okay. first of all tee will have its own stderr. second: the pipe connects stdout (1) of f to stdin of whatever its passed to. all that redirectors are actually bs.
[04:21:22] <earendel> echo "hello" | append <file>
[04:21:31] <earendel> would have been correct.
[04:22:01] <emanuele6> 2 redirections
[04:22:05] <earendel> if append whats to have side effects. it can implement them in c :P
[04:22:18] <emanuele6> `3>&1 >&2' that is it
[04:22:18] <Blondie101010> yeah but why do things simply and intelligently when you can do 4 redirects for nothing
[04:22:26] *** Quits: Strom (strom@fedora/strom) ()
[04:22:26] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 268 seconds)
[04:22:39] <emanuele6> how is it 4 redirections?
[04:22:59] <Blondie101010> not in your last example
[04:23:21] <earendel> emanuele6: actually your redirections  ( > < ) just implement a special case of a program that will write to a file. or read from it.
[04:23:28] <emanuele6> it's literally just `tee /dev/fd/3 3>&1 >&2' instead of `tee /dev/stderr'
[04:23:48] <earendel> and you even  say... that way you dont start another process.  i say: great. here you go.
[04:23:55] <earendel> fall of eden.
[04:24:19] <emanuele6> i didn't say that. and i don't understand how it is relevant
[04:24:28] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[04:24:30] *** Joins: Strom (strom@fedora/strom)
[04:24:47] <earendel> it has been decided to have stderr for error output. bad decision.
[04:25:17] <kurahaupo1> # exec 3> foo.out ; printf '123\n' >&3 ; printf '%s\n' abc def | tee -a /dev/stderr 2>&3 >/dev/null ; printf 'xyz\n' >&3 ; exec 3>&- ; cat foo.out
[04:25:18] <shbot> kurahaupo1: 123
[04:25:18] <shbot> kurahaupo1: xyz
[04:25:18] <shbot> kurahaupo1: def
[04:25:32] *** Joins: totenkoph (~scythe@user/totenkoph)
[04:25:37] <kurahaupo1> ^^^ tee -a ("always append") is NOT a complete solution
[04:25:44] <earendel> i mean. you can do it with the stupid redirectors. but everytime you use a redirector, a kitten somewhere cries because its out of tuna.
[04:26:06] <emanuele6> man, i actually thought you were not going to troll this time
[04:26:18] <earendel> i don't.
[04:26:44] <earendel> emanuele6: look up: side effects. or pure functions. or eva-prinzip
[04:26:58] <earendel> a function doesn't have two outputs.
[04:27:31] <emanuele6> printing to the terminal is a side effect.
[04:27:33] <kurahaupo1> The solution to this would be to alter the Linux kernel, so that you can go « append /proc/self/fd/3+dup » and get dup-like behaviour - attach to the existing cursor, rather than creating a new one
[04:27:37] *** Quits: beencubed (~beencubed@209.131.238.248) (Ping timeout: 240 seconds)
[04:27:39] <earendel> emanuele6: yes.
[04:27:47] *** Joins: loganlee (~Thunderbi@user/loganlee)
[04:28:06] <kurahaupo1> Err, I meant « tee /proc/self/fd/3+dup »
[04:28:34] *** Joins: myrrh (~markus@172.58.196.137)
[04:28:53] *** loganlee is now known as zx2A^zx3F
[04:28:54] <kurahaupo1> That is, allow control flags to be added after the fd number as part of the path, rather than retrofitting extra flags into openat() which Bash would never use
[04:29:00] <kurahaupo1> And tee would never use
[04:29:07] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:29:08] <Blondie101010> feel free to do that PR, but I wouldn't vote for it or approve it
[04:29:51] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[04:29:53] <tirnanog> I doubt Linus would either, if it were actually a PR ;)
[04:30:03] <emanuele6> i think  open("/proc/100/fd/4+dup", O_WRITE|O_TRUNC); /* fd 4 is opened for reading by pid 100 */  would just be weird
[04:30:22] <emanuele6> i guess you could make it fail
[04:30:27] <kurahaupo1> Blondie101010: I wouldn't change the current behaviour as the default, since there will be some programs somewhere that rely on it.
[04:30:37] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 240 seconds)
[04:30:40] <kurahaupo1> emanuele6: No, not for writing by pid 100, for writing by the current pid
[04:30:41] <cryptonector> this is a Linux kernel bug that cannot be fixed at this point
[04:30:56] *** Joins: peve (~peve@185.65.135.234)
[04:31:04] <Blondie101010> I think there's sufficiently enough crappy std io indirection
[04:31:10] <cryptonector> adding the +dup or other convention would be fine, but the kernel maintainers are likely to reject (IMO, but idk)
[04:31:40] <cryptonector> arguing with the Linux kernel maintainers can be extremely time consuming and exhausting
[04:31:49] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:32:15] <kurahaupo1> There's the obvious argument that being able to change the cursor of a private FD of some other process is asking for trouble. But then, so is being able to write to a private memfd file.
[04:32:40] <emanuele6> kurahaupo1: ah, i see. so make it work either like dup() or openat() ?
[04:33:52] <emanuele6> no, it can't work like openat(), what would it open?
[04:34:05] <kurahaupo1> emanuele6: You know how both dup and fork create new filedescriptors, right? (In the case of fork, they have the same numeric value, but they're in a different process.) What I'm aiming for is a combination of both of those: a new FD that's a dup of one in another process (or indeed, in "self") but with a newly assigned FD in "self"
[04:34:05] <emanuele6> you mean just as an alias for dup()? i don't get it
[04:34:55] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[04:35:26] <kurahaupo1> emanuele6: Perhaps it would be more informative to look at the sendfd/recvfd syscalls (actually library calls built on top of ioctl).
[04:37:03] <kurahaupo1> emanuele6: When dealing with the same process, then yes, it would be exactly an alias for dup. And that would be the point: to ensure that both FD's refer to the same underlying read-write cursor, and the same O_READ/O_WRITE/O_RDWR, and the same O_APPEND (or not).
[04:37:43] <phogg> It would be more palatable to my mind if you said /proc/100/fd/4/dup (and painted the bike shed forest green).
[04:37:51] <kurahaupo1> Because otherwise there's no way to get that behaviour from tee.
[04:38:18] <kurahaupo1> phogg: That was my initial ideal, but what if /proc/100/fd/4 was an open directory? That would be ambiguous at best
[04:38:34] *** Joins: MenschZwoNull (~MenschZwo@p200300c8571cb700350366d9a698f89c.dip0.t-ipconnect.de)
[04:38:42] <phogg> kurahaupo1: good point
[04:38:47] *** Joins: micah (~micah@debian/micah)
[04:38:55] <phogg> I like everything about this idea except the API.
[04:39:06] *** Quits: wwallace (~afernande@63.240.73.102) (Ping timeout: 268 seconds)
[04:39:12] <phogg> and the fact that it will never get merged to mainline, of course
[04:39:12] <kurahaupo1> maybe /proc/100/fd_dup/1 ?
[04:39:24] <phogg> kurahaupo1: that's more like it
[04:39:29] <micah> i need to pass a variable into a script, and that variable needs to include single quotes, I thought this would work: ADD_MIRROR="'deb http://deb.debian.org/debian bullseye-backports main'" but it ends up without the single quotes
[04:39:42] <phogg> micah: double quote it when you pass it
[04:40:04] <phogg> # ADD_MIRROR="'deb http://deb.debian.org/debian bullseye-backports main'"; echo "$ADD_MIRROR"
[04:40:05] <shbot> phogg: 'deb http://deb.debian.org/debian bullseye-backports main'
[04:40:05] <kurahaupo1> phogg: that is double quoting it when passed (in the environment)
[04:40:19] <micah> oh right!
[04:40:29] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[04:41:11] *** Joins: beencubed (~beencubed@209.131.238.248)
[04:41:21] <kurahaupo1> micah: This sounds suspiciously like a variable that's going to be eval'ed by the script. Is this an existing script, or one you're writing?
[04:41:36] *** Joins: MrConorAE (~MrConorAE@103.152.126.131)
[04:41:48] *** MrConorAE is now known as Guest4237
[04:42:03] *** Quits: Guest4237 (~MrConorAE@103.152.126.131) (Client Quit)
[04:42:27] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[04:42:39] <earendel> yw thanks haupo for being exemplary constructive. aye.
[04:43:02] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 240 seconds)
[04:43:09] <micah> kurahaupo1: i'm writing it
[04:43:14] * earendel all join in a halleluja
[04:43:25] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[04:44:11] <earendel> you should get paid for it, otherwise they may lock you up in some red scare :p
[04:44:27] <emanuele6> kurahaupo1: i don't think i get it;   do you want open("/proc/100/fd_dup/1", O_WRITE|O_APPEND) to ignore O_APPEND (or `O_TRUNC') and use "/proc/100/fd/1"'s O_APPEND/O_TRUNC (i.e. be equivalent to dup()/recvfd()) instead behaving like open("/proc/100/fd/1",..); and make it work only if "/proc/100/fd/1" is O_READ or O_RDWR?
[04:44:37] <kurahaupo1> micah: do the quotes need to end up in the output from the script, and do the quotes always need to be there? If so, consider using « printf "'%s'\n" "$ADD_MIRROR" »
[04:44:41] *** Joins: dre (~dre@2001:8003:c932:c301:8304:d78a:deb9:dfd1)
[04:45:08] <emanuele6> s/O_READ/O_WRITE/
[04:45:49] <micah> kurahaupo1: its this script: https://paste.debian.net/1225319/ the "$ADD_MIRROR" is being passed in from a gitlab CI variable in .gitlab-ci.yml
[04:45:52] *** Quits: n4dir (~user@i577BC816.versanet.de) (Remote host closed the connection)
[04:45:57] <kurahaupo1> emanuele6: The objective is for « > /proc/self/fd_dup/3 » to act as an exact synonym for « >&3 »
[04:46:10] *** zx2A^zx3F is now known as loganlee
[04:46:29] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[04:46:53] <kurahaupo1> emanuele6: Which means that the R/W and append modes are ignored (<& and >& both do exactly the same thing)
[04:47:02] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 240 seconds)
[04:47:10] <earendel> maybe i did the syllables wrong. it could be ku-rah-au-po  ..or even kur - ah - au - po :o
[04:47:19] <earendel> lol
[04:47:46] *** Quits: JanC (~janc@user/janc) (Read error: Connection reset by peer)
[04:48:18] <kurahaupo1> earendel: In the language that this name comes from all words have a ([consonant] vowel)+ morphology
[04:48:57] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Ping timeout: 240 seconds)
[04:49:02] <earendel> so no au.
[04:49:22] *** Joins: MrConorAE (~MrConorAE@user/mrconorae)
[04:50:00] <earendel> consonants were all but aeiou right? i hope so.
[04:50:12] <kurahaupo1> earendel: ku-ra-ha-u-po or ku-ra-hau-po (in practice, vowel clusters are limited to 2, or 3 if you consider long vowels as repetitions)
[04:50:50] *** Quits: zoe (~zoe@fsf/member/zoe) (Remote host closed the connection)
[04:50:57] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 240 seconds)
[04:50:57] <earendel> well what lang is it? kurahaupo1.
[04:51:00] <kurahaupo1> consonants are unvoiced only; no b, d, g, v, z
[04:51:06] <kurahaupo1> Māori
[04:51:19] *** Joins: JanC (~janc@user/janc)
[04:51:34] <earendel> ah. i wish i could say something in maori now. but..
[04:51:46] * earendel dances wildly.
[04:51:52] <tirnanog> micah: are you quite sure that operand needs to contain literal single quotes? I'm not familiar with mmdebstrap but it would be a rather unusual requirement to impose and a quick skim of its man page didn't suggest it as a requirement either.
[04:51:56] <kurahaupo1> haere mai = welcome
[04:52:19] <earendel> nice! thanks. and sorry for distraction.
[04:54:02] <kurahaupo1> Today's discovery: Bash can do vector math.
[04:54:03] <kurahaupo1> # declare -ia V=( 2 3 5 7 11 13 ) ; V+=( [0]=9 8 7 6 5 4 ) ; declare -p V
[04:54:04] <shbot> kurahaupo1: declare -ai V=([0]="9" [1]="8" [2]="7" [3]="6" [4]="5" [5]="4")
[04:54:18] *** Quits: MrConorAE (~MrConorAE@user/mrconorae) (Quit: MrConorAE)
[04:54:23] <earendel> :o
[04:54:37] <kurahaupo1> OK, that's not what I just saw in my shell:
[04:54:37] <kurahaupo1> ( F=(3 7 11) ; declare -i F ; F+=( 1 [1]=2 3 ) ; declare -p F )
[04:54:37] <kurahaupo1> declare -ai F='([0]="3" [1]="9" [2]="14" [3]="1")'
[04:54:46] *** Joins: MrConorAE (~MrConorAE@user/mrconorae)
[04:54:48] <phogg> pretty sure I've seen someone in this channel abuse that before for fibonnaci, or some such thing
[04:55:01] <tirnanog> micah: I'll wager that you were expanding the variable without double quotes and wondering why it wasn't then treated as a single operand. in that case, embedding the single quotes would not be the answer but double quoting the expansion would be.
[04:55:10] <kurahaupo1> # F=(3 7 11) ; declare -i F ; F+=( 1 [1]=2 3 ) ; declare -p F
[04:55:11] <shbot> kurahaupo1: declare -ai F=([0]="3" [1]="2" [2]="3" [3]="1")
[04:55:13] <earendel> hm. maybe some shopt?
[04:55:37] <kurahaupo1> 4# F=(3 7 11) ; declare -i F ; F+=( 1 [1]=2 3 ) ; declare -p F
[04:55:38] <shbot> kurahaupo1: declare -ai F=([0]="3" [1]="2" [2]="3" [3]="1")
[04:55:51] <kurahaupo1> echo $BASH_VERSION
[04:55:51] <kurahaupo1> 4.3.48(1)-release
[04:56:01] <kurahaupo1> # ls -l /bin/bash*
[04:56:08] <shbot> kurahaupo1: lrwxrwxrwx 1 root root       5 May  4  2021 /bin/bash -> bash5
[04:56:08] <shbot> kurahaupo1: -rwxrwxr-x 1 root root 1269360 May  4  2021 /bin/bash+
[04:56:08] <shbot> kurahaupo1: etc... ( http://ix.io/3K8j )
[04:56:45] *** Joins: A|an (~Alan@173.218.175.171)
[04:56:57] <kurahaupo1> 43# F=(3 7 11) ; declare -i F ; F+=( 1 [1]=2 3 ) ; declare -p F
[04:56:58] <shbot> kurahaupo1: declare -ai F='([0]="3" [1]="9" [2]="14" [3]="1")'
[04:56:59] <emanuele6> oh, i never noticed that `> /dev/fd/N' was not equivalent to `>&N' in bash!
[04:57:34] <emanuele6> i thought bash would ensure it would be since it emulates it if you compile without HAVE_DEV_FD
[04:57:52] <emanuele6> $ ./bash --noprofile --norc -c 'echo hi > /dev/stdout; echo hello > /dev/stdout' > file1; cat file1
[04:57:54] <emanuele6> hi
[04:57:56] <kurahaupo1> emanuele6: On some platforms bash emulates it, so it is in fact the same. But in the general case no it's not, especially when a program other than Bash is opening the file
[04:57:56] <emanuele6> hello
[04:57:57] *** Quits: bluedust (~bluedust@103.165.167.220) (Ping timeout: 240 seconds)
[04:58:02] <emanuele6> $ bash --noprofile --norc -c 'echo hi > /dev/stdout; echo hello > /dev/stdout' > file1; cat file1
[04:58:04] <emanuele6> hello
[04:58:06] <emanuele6> i didn't expect that
[04:58:42] *** Joins: Nact (~l@host-85-27-127-179.dynamic.voo.be)
[04:59:03] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[04:59:30] <emanuele6> kurahaupo1: it makes sense, but i was expecting bash to make sure the behaviour was equivalent on system that have and don't have /dev/fd
[04:59:47] <kurahaupo1> Perhaps another approach would be to patch tee, so that we can write « tee file1 --fd=2 file3 »
[05:02:11] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[05:02:33] *** Quits: Everything (~Everythin@37.115.210.35) (Ping timeout: 256 seconds)
[05:03:30] <kurahaupo1> Then we also get to patch Bash so we can write « >&{pid=14,fd=3} » or somesuch
[05:04:03] *** Joins: Everything (~Everythin@178-133-112-180.mobile.vf-ua.net)
[05:04:23] <kurahaupo1> Being able to hijack the fd's of other processes is a horrible can of worms with no simple answer.
[05:04:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:04:52] <earendel> tee could write append or whatever.  it could start 4 new process chains each doing different things with it. however tee would have a single out that is relevant for this chain.. and it's to out whatever it got.
[05:05:42] <emanuele6> i just changed one of my scripts that was using `case $# in 0) input_file=/dev/stdin ;; 1) input_file=$1 ;; ... < "$input_file"' to `case $# in 0) input=0 ;; 1) if ! exec {input_file}> "$1"; then error; fi ;; ... <&"$input"' ':)
[05:06:02] <earendel> does that sound banal to you?
[05:06:11] <earendel>  it isn't as much as it seems.
[05:06:13] <emanuele6> well, that does not matter match, since it was just reading
[05:06:31] <emanuele6> but that is still safer
[05:06:36] <cryptonector> I'm late to this party, but if you want to do things to victim processes, the standard answer is to script a debugger or write a thing using ptrace.  On Solaris there's proc tools that let you redirect I/O for running processes and what not, and it's based on forcing a victim process to stop and run an "agent thread" that runs object code sent to it by the controller (this is a pain to code to)
[05:07:23] <emanuele6> s/input_file//input/4
[05:08:12] *** Joins: bluedust (~bluedust@103.165.167.220)
[05:08:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:09:01] <earendel> !cat
[05:09:01] <greybot> cat(1) is used to concatenate multiple files together. It should NOT be used to feed file data to processes. There are far better ways to achieve this. The application might take a file as argument (eg. grep ^foo file); or you might want to use file redirection (eg. read line < file).
[05:09:12] <earendel> here we go.
[05:09:41] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:09:45] <kurahaupo> earendel: stdin generally doesn't have these issues, but there are still corner cases where one program doesn't read the whole input and leaves some for another program
[05:11:39] <earendel> i tried to point out the difficulties you may have with writing spagetthi code are not unwanted.
[05:11:59] <earendel> to put it suffisant ways.
[05:12:45] *** Quits: Everything (~Everythin@178-133-112-180.mobile.vf-ua.net) (Quit: leaving)
[05:12:53] <earendel> see i dont agree with that cat factoid at all.
[05:14:27] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:15:13] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:17:56] <earendel> as not starting a process for writing or reading to a file suddenly you miss all configurabilty of a process. and of course its own I/O. then u will argument: those should be used as sinks, why tee or fork would be the only one signify ast (breaking out of this procedural chain.. )
[05:18:17] *** Quits: rgrinberg (~textual@2806:101e:7:cff:f4d0:b9c8:9c34:9747) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:18:37] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Ping timeout: 240 seconds)
[05:21:49] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[05:22:47] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[05:24:39] *** Quits: MrConorAE (~MrConorAE@user/mrconorae) (Quit: MrConorAE)
[05:25:05] *** Joins: MrConorAE (~MrConorAE@user/mrconorae)
[05:25:17] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[05:25:43] *** Quits: rufito (~phil@2800:150:153:29c9:8d74:aa4:d5c5:a984) (Quit: Leaving)
[05:25:49] <earendel> bash is procedurally oriented. there are programs whichs main function is to manage i/o between other processes. however. bash doens't control threads. and that is by virtue.
[05:25:52] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[05:26:39] *** Joins: peve_ (~peve@2601:281:8700:3c10::bc48)
[05:27:25] <ormaaj> kurahaupo1: Yeah `var+=()` in that context is actually supposed to mean don't redefine a new variable. For individual subscripts you can do `var+=([key]+=x)` which should be equal to `var[key]+=x`.
[05:28:03] *** Joins: jonthesnow (~xizhendu@36.112.176.107)
[05:28:24] <earendel> even complex distributed event-driven systems will model its microtasks as processes.
[05:29:02] *** Quits: peve (~peve@185.65.135.234) (Ping timeout: 240 seconds)
[05:29:11] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:29:21] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[05:30:19] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:33:12] *** Quits: NotSatoshi (~NotSatosh@user/NotSatoshi) (Remote host closed the connection)
[05:34:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[05:36:47] *** kurahaupo1 is now known as kurahaupo
[05:36:49] *** kurahaupo is now known as Guest3094
[05:37:38] *** Guest3094 is now known as kurahaupo1
[05:42:09] *** Joins: peve__ (~peve@185.65.135.232)
[05:43:00] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 240 seconds)
[05:44:17] *** Quits: peve_ (~peve@2601:281:8700:3c10::bc48) (Ping timeout: 240 seconds)
[05:44:18] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[05:45:47] *** Quits: uuidNuniq (~weechat@146.56.136.247) (Quit: WeeChat 3.3)
[05:47:08] *** Joins: uuidNuniq (~weechat@146.56.136.247)
[05:47:39] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[05:50:01] *** Joins: igemnace (~ian@user/igemnace)
[05:52:38] *** Quits: jonthesnow (~xizhendu@36.112.176.107) (Remote host closed the connection)
[05:52:40] *** Joins: thomasross (~thomasros@dyn-pppoe-142-51-227-74.vianet.ca)
[05:53:39] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[05:54:34] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:02:18] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Quit: Quit)
[06:02:18] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:02:35] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[06:03:09] *** kurahaupo is now known as kurahaupo_
[06:03:15] *** kurahaupo1 is now known as kurahaupo
[06:06:39] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[06:06:50] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[06:07:28] *** Quits: MrConorAE (~MrConorAE@user/mrconorae) (Quit: MrConorAE)
[06:09:38] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:14:31] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:14:52] *** Joins: texasmynsted (~texasmyns@99.96.221.112)
[06:15:18] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:15:56] <texasmynsted> how do I use getops if I want all options and no other stuff? Example: mycommand --file abc.txt, vs mycommand bar --file abc.txt
[06:16:11] *** Quits: MenschZwoNull (~MenschZwo@p200300c8571cb700350366d9a698f89c.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[06:16:27] *** Joins: TomyLobo (~TomyLobo@p200300e80f006700f1e6dbe8275e9226.dip0.t-ipconnect.de)
[06:17:16] <phogg> long opts and getopt won't work too well.
[06:17:31] <phogg> er, getopts I mean
[06:19:25] <texasmynsted> I am actually using  https://github.com/UrsaDK/getopts_long
[06:19:41] <texasmynsted> but I think they all have the same issue
[06:20:38] <tirnanog> it even provides a docker container. I don't know whether to laugh or cry.
[06:20:51] <phogg> I don't know, I always just write a while loop to handle options. Seems easier than messing with getopt{,s}
[06:22:23] *** Joins: MrConorAE (~MrConorAE@user/mrconorae)
[06:23:06] <phogg> tirnanog: for all that the implementation itself is not too bad
[06:23:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[06:24:09] <tirnanog> it looks a lot more complicated than writing a manual loop.
[06:24:22] <phogg> definitely
[06:25:17] <e36freak> texasmynsted: options should always go before non-option arguments
[06:25:19] <phogg> in the end you still need a while/case construct, only you've allowed an intermediate step that you probably don't understand to munge the args first.
[06:25:24] <e36freak> that's convention, and it's that way for a reason
[06:25:52] <phogg> there are tradeoffs no matter how you do it
[06:26:07] <texasmynsted> I just know that the getopts_long thing is not working unless I add something like 'bar' before the options
[06:26:12] <texasmynsted> it makes no sense.
[06:26:15] <e36freak> texasmynsted: if i were to run a program with "mycommand bar --file abc.txt", i would expect all three of those to be treated as arguments that are not options
[06:26:18] <texasmynsted> I do not recall having this problem before
[06:26:27] <e36freak> i would expect --file to be treated as just another filename or wahtever
[06:26:33] <phogg> I prefer the tradeoff where I process the arg list once (and in order) and don't care about interleaving options and non-option arguments. There are some things which you can't easily do that way, but I live with them.
[06:27:03] <e36freak> i wrote a loop to just manually break it all into a more easily parseable format some years ago, wasn't a hard thing t odo
[06:27:06] <e36freak> to do
[06:27:17] <e36freak> either way it expects all options/optargs before any non-option arguments
[06:28:15] <e36freak> texasmynsted: how are you attempting to use it right now?
[06:28:20] <e36freak> i haven't seen any code from you
[06:28:36] <texasmynsted> okay making a pastebin
[06:29:09] <phogg> it gets complicated when you want to support extra behavior like --foo=bar being the same as --foo bar, and allowing things like tar-style mode strings (e.g. czXf), or even things like bundled args one of which requires a parameter (e.g. grep -fR)
[06:29:40] <e36freak> yeah, i handled all that, but it's less trivial
[06:29:50] <e36freak> also optional arguments such as --color[=WHEN]
[06:29:52] <phogg> and what do you do with things like head which allow -n 1 and also -n1?
[06:30:19] <e36freak> my loop just split any -abc where -a requires an argument into "-a bc"
[06:30:21] <phogg> some things are easy with one style of processing, but hard with others. It all depends on which tradeoff works to your advantage
[06:30:32] <e36freak> similarly if b required an argument it would be "-a -b c"
[06:30:47] *** Quits: gnoo (gnoo@user/gnoo) (Quit: IRCNow and Forever!)
[06:30:52] <phogg> e36freak: I do it by splitting -abc into -a -b -c and require positionals consumed by one of them to be consumed by the *last* one.
[06:31:01] <phogg> this sucks, but I can live wi th it
[06:31:13] <e36freak> i did find it better to roll my own than use something else to get the behavior i wanted, so
[06:31:27] <phogg> so you can do -abc foo and it acts like -a -b -c foo, but if you do -n1 you get -n -1 and you're out of luck.
[06:31:29] <texasmynsted> https://gist.github.com/mmynsted/653ed1be1aceaa20c298a15f1ce2c17d
[06:32:03] <e36freak> phogg: right, mine had to take a getopts-like option string to deal with that
[06:32:14] <phogg> texasmynsted: you lost me at "set -Eeuo pipefail" (please don't uncomment that)
[06:32:24] <texasmynsted> Really I just want flags like --foo rather than -f
[06:32:28] <phogg> e36freak: that's pretty much the only option, you need *rules*
[06:32:46] *** Quits: Nact (~l@host-85-27-127-179.dynamic.voo.be) (Quit: Konversation terminated!)
[06:32:54] *** Quits: peve__ (~peve@185.65.135.232) (Quit: Leaving)
[06:33:06] <phogg> texasmynsted: while (( $# > 0 )); do case $1 in --foo) : shift; do something with $1; shift ;; esac; done
[06:33:13] <texasmynsted> heh the combination pipefail was an actual comment. It is now removed
[06:33:44] <texasmynsted> okay, trying
[06:34:26] <e36freak> you're supporting *only* long options? fuckin gross
[06:34:38] <e36freak> yeah you don't need getopts for that at all then
[06:34:55] <e36freak> i'd just use a while loop/case
[06:35:14] <e36freak> getopts becomes a thing when you need to deal with short options that can be combined
[06:35:17] <e36freak> you can't combine long options
[06:35:26] <phogg> the other thing I've tried (but not in bash, at least not yet) is to have a ruleset and extract (and remove) from argv anything matching the rules, leaving the rest to interpreted as non-option and non-option-parameter args. That's much like getopt. The way I did it loses positional relationships, though.
[06:35:54] <phogg> so you can't do something like -x 1 +x 2 and have the x flag off while 1 is handled then on while 2 is handled
[06:35:57] <texasmynsted> yes only supporting long
[06:36:10] <phogg> texasmynsted: only supporting long options is unfriendly to the fingers
[06:36:13] <texasmynsted> I am still writing out the loop from phogg
[06:36:42] <e36freak> phogg: so much agreed
[06:36:47] <texasmynsted> Yes. This will be used from a build script mostly. S
[06:36:50] * e36freak is not a fan of long options
[06:36:58] * phogg loves long options
[06:37:05] <phogg> for every short option please have a long
[06:37:11] <e36freak> texasmynsted: but like, you need getopts when you can represent "-a -b" as "-ab"
[06:37:11] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[06:37:23] <e36freak> phogg: i give the option on any real program, but i rarely use them myself
[06:37:27] <phogg> reserve long-only options for rare cases, if you have to have them at all
[06:37:35] <e36freak> texasmynsted: you can't represent --foo --bar as --foobar
[06:37:43] <e36freak> so it becomes pointless
[06:38:12] <e36freak> phogg: agreed. i do like the ability to have optional arguments, as an example again --color[=WHEN]
[06:38:36] <phogg> you can (sometimes) get that with a simple peek and a whitelist
[06:38:49] <phogg> WHEN is usually a static list, or in a well known format
[06:38:52] <e36freak> eh, then it's not transparent to the user what's going on, which i try to avoid
[06:38:54] <texasmynsted> can I not have optional args?
[06:39:07] <phogg> texasmynsted: you can do anything you can code
[06:39:13] <e36freak> heh
[06:39:36] <ormaaj> eew, --opt=...
[06:39:39] <phogg> *I* know how to have optional args. Happy to describe some ways of doing it.
[06:40:15] <phogg> ormaaj: be glad it's not dd style
[06:41:02] <phogg> texasmynsted: I have a serious question about your getDateTime function
[06:41:16] <phogg> why a subshell, and why an echo?
[06:41:27] <tirnanog> phogg: that second shift should be outside of the case otherwise you have yourself a potential infinite loop. also, it's going to execute : shift (rather than shift) in the case.
[06:41:55] <texasmynsted> with your loop I am not exactly sure how to grab the argument  from --file, but I am guessing it will be $2
[06:42:03] *** Joins: tm512 (~tm512@user/tm512)
[06:42:21] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[06:42:37] <phogg> texasmynsted: getDateTime2 () { date +'[%Y-%m-%dT%H:%M:%S%z]: '; }
[06:42:51] <phogg> texasmynsted: it will be in $2 until you shift, then it will be in $1
[06:43:01] <tirnanog> it doesn't shift though (as noted above).
[06:43:25] *** Quits: jos1 (~jos3@dyndsl-178-142-069-198.ewe-ip-backbone.de) (Ping timeout: 256 seconds)
[06:43:59] <texasmynsted> what is wrong with my getDateTime2 ?
[06:44:05] <phogg> tirnanog: what's that : doing in there?!
[06:44:23] <phogg> texasmynsted: no, yours is getDateTime. Mine is getDateTime2 and has identical behavior
[06:44:24] <tirnanog> texasmynsted: it was supposed to be something like: while (( $# )); do case $1 in --foo) shift; do_something_with "$1" ;;; easc; shift; done (though I would have just used $2 also)
[06:44:37] <texasmynsted> oh, heh
[06:44:39] <tirnanog> er, ;;
[06:44:41] <phogg> you have an extra ; but yeah
[06:44:42] <texasmynsted> I will check out yours
[06:45:01] <phogg> you could handle $2 directly then shift 2 if you prefer
[06:45:08] <e36freak> --) shift; break;; # is a case you'll want to add
[06:45:17] <e36freak> just fyi
[06:45:21] <tirnanog> yeah. well I was going to link to the faq also.
[06:45:27] <phogg> my example was not exactly complete in a lot of ways
[06:45:30] <e36freak> !faq easily
[06:45:30] <greybot> https://mywiki.wooledge.org/BashFAQ/035 -- How can I handle command-line options and arguments in my script easily?
[06:46:01] <tirnanog> there we go. it doesn't actually show how to handle long options other than in the -foo=bar form but it's not exactly difficult.
[06:46:30] <texasmynsted> okay this while loop appears to be working.
[06:46:39] <texasmynsted> I will fix this and check out the date function
[06:46:41] <tirnanog> great. now see the faq for how to flesh it out.
[06:47:20] <phogg> this is my actual boilerplate https://termbin.com/6w6m
[06:49:00] <phogg> hmm, except the -- condition seems to be missing
[06:49:04] <phogg> how long has that been there...
[06:49:20] <phogg> should come just before --*) and just set the flag.
[06:49:26] *** Joins: sudomann_ (~sudomann@c-24-126-9-16.hsd1.wv.comcast.net)
[06:50:20] <tirnanog> which flag is that?
[06:50:27] <phogg> no_more_options
[06:50:33] <phogg> imaginative naming is my thing
[06:50:55] <e36freak> i'm about to subcontract you to name my variables
[06:51:32] <phogg> the one with the actually-good naming imagination is my youngest brother.
[06:51:48] *** Joins: gnoo (gnoo@user/gnoo)
[06:52:01] <phogg> a constant barrage of too-clever-for-your-own-good nonsense
[06:52:03] <tirnanog> phogg: I see. but wouldn't it just be simpler to gut all that out and do "shift; break" in the case of -- and a "break" in the case of a non-option that's not already being contextually operated upon? then "$@" is your non_option_args and you can simply assign to an array if you so wish.
[06:52:29] *** Quits: sudomann (~sudomann@c-24-126-8-24.hsd1.wv.comcast.net) (Ping timeout: 256 seconds)
[06:52:31] <phogg> tirnanog: in some cases yes, in other cases no
[06:53:00] <phogg> tirnanog: in some forms I use this construct where there are multiple ways to populate the "non option args" list. E.g. you can say --file multiple times, but also just list them as non-opt args
[06:53:00] <tirnanog> oh, you want to mingle them.
[06:53:14] <tm512> I'm kinda confused about how exactly shell scripts kill child processes when they're killed. I'm writing a script for managing game server instances, in which I have a function that runs the server in a while true loop, my intention being that it'd relaunch the server if it quits unexpectedly, with an intentional quit being signalled by killing the script running the loop
[06:53:24] <tm512> but... killing the script leaves the server running
[06:53:24] <phogg> tirnanog: so in the general case I form it to allow this. It's always easy to edit it down to what you describe when that's all I need.
[06:53:30] <tirnanog> I see.
[06:53:51] <e36freak> tm512: first of all, how are you killing the script
[06:54:03] <phogg> tirnanog: this is just my stock "I need something for a new script" snippet. I always customize heavily. E.g., it's never called non_option_args in real code.
[06:54:40] *** Quits: MrConorAE (~MrConorAE@user/mrconorae) (Quit: MrConorAE)
[06:54:40] <e36freak> set -- "${non_options_args[@]}" "$@"
[06:55:00] <tm512> e36freak: I spawn this supervisor loop with (supervise "$1) & echo $! > /tmp/pidfile
[06:55:01] <phogg> e36freak: could do that, but there are cases where it's less useful
[06:55:12] <tm512> and then kill it with kill $(cat /tmp/pidfile)
[06:55:25] <e36freak> oh fun
[06:55:27] <phogg> e36freak: for example, I often want to do a sanity check of each such arg as I handle them
[06:55:42] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:55:45] <e36freak> phogg: sure sure
[06:55:51] <e36freak> tm512: if you haven't read it, start here
[06:55:52] <e36freak> !pm
[06:55:52] <greybot> http://mywiki.wooledge.org/ProcessManagement
[06:55:57] <tm512> should specify this is POSIX shell, I don't know if bash behaves differently in this regard, I wouldn't really expect it to
[06:56:32] <e36freak> bash handles some traps different than sh, namely the EXIT trap is pretty much useless in POSIX sh
[06:56:40] <e36freak> general process management is the same
[06:56:41] *** Joins: jos1 (~jos3@host-091-097-191-120.ewe-ip-backbone.de)
[06:57:55] <e36freak> tm512: what's in "supervise" ?
[06:58:13] <tm512> I can pastebin the script in a moment
[06:58:36] <phogg> The perspective I have evolved is that in the general case I would prefer to pass once through all args in a loop, *then* take any resulting actions. Branching out of the arg loop early for any reason just adds confusion.
[06:58:45] <e36freak> agreed
[06:58:53] <e36freak> set flags, variables, whatever
[06:58:59] <e36freak> once it's all done, use it
[06:59:11] <phogg> that's how I do it, unless there is a compelling reason to deviate. Very compelling.
[06:59:38] <phogg> but this feeds in to my aversion to set -- and break
[06:59:57] *** Quits: sudomann_ (~sudomann@c-24-126-9-16.hsd1.wv.comcast.net) (Ping timeout: 240 seconds)
[07:00:47] <texasmynsted> Okay this is much better, thank you https://gist.github.com/mmynsted/653ed1be1aceaa20c298a15f1ce2c17d
[07:00:54] *** Joins: sudomann (~sudomann@c-24-126-9-16.hsd1.wv.comcast.net)
[07:01:51] <tm512> e36freak: https://www.toptal.com/developers/hastebin/raw/zoqozetoba
[07:01:52] <checkbot> tm512: I think the problem is on line 17. Double quote array expansions to avoid re-splitting elements. See 5 issues on https://shellcheck.net/?id=cb21512
[07:02:34] <tirnanog> texasmynsted: '-?' is wrong. you want for that to be treated as a pattern, therefore it shouldn't be single quoted.
[07:03:23] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.4)
[07:03:29] <tirnanog> -?* would make more sense
[07:03:32] <texasmynsted> the rest are single quoted. I am unclear
[07:03:51] <tirnanog> you're not literally trying to match -? are you.
[07:04:04] <texasmynsted> I was, but what does -?* do?
[07:04:05] <tirnanog> rather, you're trying to match something that begins with a dash (at least).
[07:04:06] *** Quits: anaveragehuman (~anaverage@user/anaveragehuman) (Ping timeout: 276 seconds)
[07:04:08] <texasmynsted> any other options?
[07:04:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:04:30] <phogg> you want to match - followed by anything you didn't expect and say "invalid option", what you have matches only a literal -?
[07:04:34] <e36freak> tm512: if it were an INT thing i'd be concerned that zandronium-server isn't propagating the signal correctly on exit, but you're sending TERM
[07:04:36] <texasmynsted> cool
[07:04:44] <texasmynsted> I changed to what you have. Is better
[07:04:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:05:38] <tirnanog> texasmynsted: -?* means a dash followed by any character, optionall followed by any number of characters. -* could be another option, though it would also match just a dash in isolation.
[07:05:51] *** Quits: sudomann (~sudomann@c-24-126-9-16.hsd1.wv.comcast.net) (Ping timeout: 268 seconds)
[07:06:01] <tm512> e36freak: yeah, I'm sending it to the subshell I spawn to run supervise. I'd assumed that it'd kill zandronum-server because that isn't being run in the background of the subshell
[07:06:20] <texasmynsted> Yes. that is much better, and I can add -? and --help for help
[07:06:23] <tirnanog> texasmynsted: whereas '-?*' would mean, literally: -?*
[07:06:31] <e36freak> tm512: you could try something like supervise() { trap 'kill "$pid"; exit' TERM; while true; do zandronum blah & pid=$!; wait; done; }
[07:06:35] <phogg> tm512: you confused me with your supervise function, I assumed you must have been using https://manpages.debian.org/bullseye/daemontools/supervise.8.en.html
[07:06:38] <e36freak> to kind of force it to do what you want
[07:07:23] <tirnanog> texasmynsted: as for the rest, none of them need to be single-quoted but it's doing no harm either.
[07:07:32] <e36freak> why aren't you using your init system though? this kind of thing is kind of its whole point
[07:07:33] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[07:08:45] *** Joins: MrConorAE (~MrConorAE@user/mrconorae)
[07:09:14] <tm512> I'm not really well-versed with systemd and just writing a simple script that handles start/stop commands seems like the most straightforward thing
[07:09:33] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[07:09:53] <tm512> also, I'm running several instances of these servers, I want each one running in their own subshell
[07:11:02] <tm512> is wait a POSIX shell builtin?
[07:11:51] <tirnanog> yes.
[07:13:43] *** Quits: cactus-head (~cactus_he@159.196.56.11) (Quit: Leaving)
[07:14:57] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:15:45] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Quit: WeeChat 3.4)
[07:15:59] *** Joins: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net)
[07:16:36] *** Quits: cuppajoe (~joe@ip70-171-93-122.no.no.cox.net) (Client Quit)
[07:16:58] *** Quits: lockywolf (~lockywolf@46.23.90.177) (Quit: ZNC 1.8.2 - https://znc.in)
[07:17:36] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[07:18:02] <tm512> e36freak: setting up that signal trap worked. thanks
[07:18:12] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:18:54] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:19:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[07:19:51] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:19:52] *** Joins: lockywolf (~lockywolf@2a03:6000:6f63:638::177)
[07:23:37] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 240 seconds)
[07:24:26] *** Quits: jensen (~jensen@65.78.100.184) (Remote host closed the connection)
[07:24:36] <tm512> it's weird that shell does this stuff. if, on my PC, I run a program and background it, it gets killed when I close the shell
[07:24:46] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[07:25:15] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:25:26] <tm512> does SIGHUP only get sent with interactive shells?
[07:28:37] *** Quits: MrConorAE (~MrConorAE@user/mrconorae) (Quit: MrConorAE)
[07:29:04] *** Joins: MrConorAE (~MrConorAE@user/mrconorae)
[07:30:20] *** Quits: gnoo (gnoo@user/gnoo) (Quit: IRCNow and Forever!)
[07:32:43] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[07:33:32] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[07:33:33] <texasmynsted> okay this is better I think
[07:33:46] <texasmynsted> https://gist.github.com/mmynsted/653ed1be1aceaa20c298a15f1ce2c17d
[07:34:05] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[07:34:47] <texasmynsted> I think that removing the newline from decrypt might have a better option, but I can not think of one
[07:35:34] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[07:37:12] <phogg> texasmynsted: https://mywiki.wooledge.org/BashFAQ/105
[07:37:26] *** Joins: vishal (~vishal@fedora/vishal)
[07:38:23] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[07:38:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:38:57] *** Quits: MrConorAE (~MrConorAE@user/mrconorae) (Quit: MrConorAE)
[07:38:58] *** Quits: lockywolf (~lockywolf@2a03:6000:6f63:638::177) (Remote host closed the connection)
[07:39:39] *** Joins: MrConorAE (~MrConorAE@user/mrconorae)
[07:40:02] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[07:40:20] *** Joins: lockywolf (~lockywolf@46.23.90.177)
[07:40:36] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[07:41:36] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[07:41:47] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[07:41:59] *** Joins: Leonardzzz (~Administr@114.55.127.80)
[07:43:09] *** Joins: wwallace (~afernande@63.240.73.102)
[07:44:32] *** Quits: MrConorAE (~MrConorAE@user/mrconorae) (Quit: MrConorAE)
[07:44:54] <e36freak> tm512: HUP is an interactive/terminal thing, yes
[07:45:00] *** Joins: MrConorAE (~MrConorAE@user/mrconorae)
[07:46:25] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[07:48:40] <tm512> I know I've used nohup in scripts before to avoid having child processes killed. it just seems pretty unclear about when a shell will kill processes it spawned
[07:50:00] <tm512> at least the SIGTERM trap works. I was not aware of the wait builtin prior to this, I didn't think I could get the PID of something running in a loop without having the loop spawning the process over and over again
[07:50:20] *** Joins: rgrinberg (~textual@177.246.221.96)
[07:50:52] *** Quits: hendry (~hendry@210.23.22.2) (Quit: linux-upgrade)
[07:52:10] *** Joins: hendry (~hendry@210.23.22.2)
[07:52:43] <texasmynsted> so do not use 'set -e'
[07:53:01] *** Joins: Leonard (~Administr@114.55.127.80)
[07:53:04] *** Joins: gnoo (gnoo@user/gnoo)
[07:53:05] <texasmynsted> got it
[07:54:30] <e36freak> tm512: yeah, wait is super important
[07:54:57] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[07:55:02] *** Quits: Leonardzzz (~Administr@114.55.127.80) (Ping timeout: 240 seconds)
[07:55:35] *** Joins: Leonard (~Administr@114.55.127.80)
[07:59:08] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[08:02:06] *** Joins: akoana (~ah@user/akoana)
[08:03:09] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[08:06:13] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[08:06:47] *** Quits: cheer (~cheer@cpe-76-189-213-198.neo.res.rr.com) (Quit: WeeChat 3.4)
[08:06:50] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[08:07:34] <texasmynsted> thank you all
[08:08:03] *** Joins: UncleKiwi (~UncleKiwi@user/unclekiwi)
[08:08:24] *** Quits: MrConorAE (~MrConorAE@user/mrconorae) (Quit: MrConorAE)
[08:08:24] <UncleKiwi> Hi there im having some trouble running this script from this page
[08:09:47] <UncleKiwi> server=${1?"The server address is required"}    <----- when i attempt to fill this info it doent work
[08:10:34] <tirnanog> !doesntwork
[08:10:34] <greybot> Saying something "doesn't work" helps neither you or us. Explain the result you *want* or *expect*, what you are *doing* and *how* it is failing. Copy/paste the commands you use and the errors they produce. Consider set -x to get more information on what is happening.
[08:11:00] <UncleKiwi> ok thanks - actually i think I just have realised what im doing wrong
[08:11:01] <UncleKiwi> sorry
[08:11:10] <tirnanog> ok. that was valid syntax, for the record.
[08:11:35] <UncleKiwi> i'll let you know soon
[08:11:45] <tirnanog> but simply saying "doesn't work" doesn't explain much, obviously.
[08:11:58] <UncleKiwi> yeah sorry :)
[08:12:07] *** Joins: jensen (~jensen@65.78.100.184)
[08:13:27] *** Joins: bluedust_ (~bluedust@194.37.96.104)
[08:14:25] <UncleKiwi> tirnanog: yeah it was me not understanding how to use the script
[08:14:42] <UncleKiwi> I was trying to edit the variables int he file
[08:14:57] <tirnanog> rather than specifying an argument, presumably.
[08:15:01] <UncleKiwi> yes
[08:15:34] <tirnanog> I see how you got confused.
[08:16:09] <tirnanog> you took the error message string as an invitation to write in your intended value for the server parameter.
[08:16:17] *** Quits: bluedust (~bluedust@103.165.167.220) (Ping timeout: 240 seconds)
[08:16:20] <UncleKiwi> :) yep
[08:17:28] <tirnanog> but it's an interesting form or parameter expansion that just bails out if the parameter expands as empty. somewhat rare to see in in scripts in the wild, actually.
[08:17:30] <tirnanog> of*
[08:18:52] *** Joins: bluedust (~bluedust@103.165.167.220)
[08:19:56] <UncleKiwi> it probably has a lot of room for improvment - its quite useful in preping openvpn client configs
[08:21:37] *** Quits: bluedust_ (~bluedust@194.37.96.104) (Ping timeout: 240 seconds)
[08:22:35] *** Quits: Circuitsoft (uid393878@id-393878.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[08:25:06] *** Quits: reset (~reset@user/reset) (Quit: reset)
[08:25:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:29:11] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[08:31:17] *** Quits: Feuermagier_ (~Feuermagi@84.17.49.78) (Quit: Leaving)
[08:31:28] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[08:32:30] *** Joins: bluedust_ (~bluedust@185.195.232.145)
[08:35:54] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[08:35:57] *** Quits: bluedust (~bluedust@103.165.167.220) (Ping timeout: 240 seconds)
[08:37:08] *** Quits: myrrh (~markus@172.58.196.137) (Ping timeout: 252 seconds)
[08:37:53] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[08:38:40] *** Joins: myrrh (~markus@172.58.196.70)
[08:39:28] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:40:05] *** Joins: bluedust (~bluedust@103.165.167.220)
[08:40:54] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[08:44:07] *** Quits: bluedust_ (~bluedust@185.195.232.145) (Ping timeout: 256 seconds)
[08:45:45] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 268 seconds)
[08:47:43] *** Joins: bluedust_ (~bluedust@117.204.154.215)
[08:47:59] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[08:49:27] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[08:49:56] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:50:17] *** Quits: bluedust (~bluedust@103.165.167.220) (Ping timeout: 240 seconds)
[08:52:37] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[08:54:15] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[08:54:22] *** Quits: jensen (~jensen@65.78.100.184) (Ping timeout: 260 seconds)
[08:54:44] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:55:43] <cryptonector> tm512: SIGHUP is... interesting.  On BSD systems it's generated by the tty/pty when the shell exits, while on SVR4 and Linux it's generated by the shell when it exits [cleanly].  disown works by having the shell not send SIGHUP to the disowned process group, and that works only on SVR4 and Linux -- it doesn't work on BSD.
[08:56:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[08:56:18] *** Quits: A|an (~Alan@173.218.175.171) (Quit: A|an)
[08:56:45] <cryptonector> ports of csh generally fail (or used to, idk if it's been fixed because I'm not a csh user and I just don't care) to send SIGHUP to bg process groups because csh assumes the kernel does it
[08:57:11] <cryptonector> this manifests as hanging ssh connections when csh users leave bg process groups running and exit the csh shell
[08:57:19] <cryptonector> but this happens with disown as well
[08:58:32] <cryptonector> what's needed is the BSD revoke(2) system call, which is meant for this.  revoke(2) let's you have all those bg process groups' open file descriptors for the tty atomically replaced with ones that produce EOF/EIO (or EPIPE?  I forget)
[08:58:51] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[08:59:02] <cryptonector> so on exit a shell should HUP non-disowned bg process groups, revoke(2) the pts, and exit
[08:59:10] <cryptonector> does Linux have revoke(2) nowadays?
[09:00:26] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[09:00:48] <cryptonector> if you ever see "ssh hangs when I exit my shell", ask "did you have background process groups?  are you using csh?"
[09:00:51] <e36freak> » man revoke
[09:00:51] <e36freak> No manual entry for revoke
[09:01:30] <cryptonector> https://lwn.net/Articles/192632/
[09:02:19] *** Joins: kdc (~kdc@196.211.197.159)
[09:02:46] <cryptonector> it would really be fantastic for bash to revoke(2) the tty before exiting
[09:03:08] <Blondie101010> and what determines if the shell will send SIGHUP, depends on the huponexit shell option
[09:03:27] <cryptonector> there's also vhangup(2), which causes the tty/pty to a) post SIGHUP to all process groups with that tty as their controlling tty, b) revoke(2) the tty
[09:03:40] <cryptonector> Blondie101010: and whether you disown(1)
[09:03:45] <Blondie101010> of course
[09:03:52] <Blondie101010> that's doing it intentionally
[09:04:00] <Blondie101010> I typically just nohup
[09:04:06] <Blondie101010> but disown can be useful
[09:04:15] <Blondie101010> though nowadays I'm always in tmux
[09:04:35] <cryptonector> nohup does more than ignore SIGHUP
[09:04:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:04:42] <Blondie101010> I know
[09:04:48] <cryptonector> it redirects stdin/out/err
[09:04:55] <Blondie101010> ok so?
[09:04:58] <cryptonector> with revoke(2) maybe you don't have to?
[09:05:21] <Blondie101010> if your IO is not redirected, then you'll get an error
[09:05:31] <Blondie101010> and the program will crash
[09:05:46] <cryptonector> like: some-cmd ... > /dev/null 2>&1 & disown $!; exit
[09:05:47] <Blondie101010> that's why nohup does it
[09:06:02] <Blondie101010> yes, that's how it's done
[09:06:11] <cryptonector> yeah, but then I can just redirect explicitly -- seems better to me
[09:06:24] <cryptonector> nohup uses files for stdout/err -- maybe you don't want that
[09:06:26] <Blondie101010> nohup command > /dev/null 2>&1
[09:06:29] <Blondie101010> come on!
[09:06:39] <Blondie101010> and I didn't pretend disown was useless
[09:08:07] <cryptonector> ah, nohup detects that stdout is being sent to /dev/null and skips the nohup.out file -- TIL
[09:08:12] <Blondie101010> disown and nohup both detach the process from the current shell (tty)
[09:08:20] <Blondie101010> that doesn't matter
[09:08:29] <Blondie101010> it would have nothing to write
[09:08:48] <cryptonector> well, nohup gets to setsid; disown doesn't
[09:09:06] <Blondie101010> hmmm, what's your question again?
[09:09:16] <cryptonector> (idk if nohup does setsid(), but that would be strictly better, though with revoke(2) it wouldn't matter)
[09:09:18] <cryptonector> no question
[09:09:28] <cryptonector> I was spewing trivia in response to someone else
[09:09:38] <Blondie101010> ah ok
[09:09:48] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[09:09:53] <cryptonector> well, I did have a question: does Linux have revoke(2) yet?
[09:10:01] <cryptonector> the answer appears to be "no"
[09:10:07] <Blondie101010> wrong channel for that
[09:10:30] <cryptonector> sort of -- if Linux did have it, bash should use it
[09:10:50] <Blondie101010> nope
[09:10:59] <cryptonector> absolutely it should
[09:11:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:11:13] <Blondie101010> ok well go develop it and do a PR
[09:11:44] <cryptonector> no point; Linux doesn't have it
[09:11:58] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[09:12:08] <Blondie101010> what's the point of that function?
[09:12:21] <Blondie101010> does it kill/cause processes to terminate?
[09:13:04] <cryptonector> scroll up
[09:13:12] <cryptonector> or search for revoke(2) BSD
[09:13:30] <Blondie101010> so you mean you don't know the details?
[09:13:37] <Blondie101010> I asked a very direct question
[09:13:50] <Blondie101010> to someone who seems to pretend knowing what they're talking about
[09:14:27] *** Joins: freep (~freepppp@62.1.245.43.dsl.dyn.forthnet.gr)
[09:14:27] <Blondie101010> if the processes terminate, as I suspect, it would be very easy to copy that behaviour
[09:14:43] *** Quits: timj (~timj@user/timj) (Ping timeout: 256 seconds)
[09:15:34] <cryptonector> "scroll up" -> details are above
[09:15:58] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[09:16:26] <Blondie101010> no, but I just read a distinction in the man page....  it can act on other users' processes
[09:16:35] <Blondie101010> that is completely inacceptable to me
[09:16:35] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 268 seconds)
[09:17:33] <Blondie101010> I would consider that a major security bug
[09:17:58] <cryptonector> "Access to a file may be revoked only by its owner or the super user.
[09:18:00] <cryptonector> "
[09:18:22] <cryptonector> that seems quite fair to me -- if I own a resource and let you use it, I get to say "and now stop"
[09:18:31] <Blondie101010> "the calling process must either own the file, or it must be able to override file permissions"
[09:18:34] <cryptonector> security-wise, it's quite useful
[09:18:47] <Blondie101010> no it's very sluggish at best
[09:19:03] <cryptonector> "or it must be able to override file permissions" pretty much means "own the file or have privilege"
[09:19:17] <Blondie101010> anyways, why the heck do you need/want junk like that
[09:19:31] <cryptonector> on BSD it only really works on ttys/ptys, which is what it was created for in the first place
[09:19:32] <Blondie101010> just kill the processes you want to kill and revise your permissiosn
[09:19:39] <cryptonector> because people don't
[09:20:04] <cryptonector> they run bg procs, they disown them or ignore SIGHUP, then exit the shell, then wonder why ssh hangs
[09:20:43] <Blondie101010> I don't follow your reasoning...  what is your position in this?  are you a shell service provider?
[09:20:45] <cryptonector> the correct fix is to implement BSD-ish semantics of forcefully detaching those bg jobs from their ttys when the shell exits
[09:20:46] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:21:00] <Blondie101010> ok so go tell that to Linus
[09:21:34] <cryptonector> nah
[09:21:37] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[09:26:24] *** Joins: callq (~callq@157.41.89.228)
[09:28:11] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[09:28:44] *** Joins: timj (~timj@user/timj)
[09:29:34] *** Quits: Maxattax97 (~max@2603-900a-1501-a7ca-0000-0000-0000-0100.inf6.spectrum.com) (Quit: WeeChat 3.4)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:35] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[09:31:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:35:28] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.4)
[09:35:30] *** Joins: jensen (~jensen@65.78.100.184)
[09:36:17] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[09:37:33] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:39:25] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Ping timeout: 268 seconds)
[09:40:12] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:40:15] <jensen> i know it's preferable to test the command directly, but is this correct if I know the last command of each condition is the command to be tested? https://0x0.st/osMm.txt
[09:42:30] *** Quits: bluedust_ (~bluedust@117.204.154.215) (Remote host closed the connection)
[09:44:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[09:54:52] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[09:55:36] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:57:39] <Blondie101010> !check
[09:57:40] <checkbot> jensen: Line 6: Parsing stopped here. Is this keyword correctly matched up?. Line 2: file is referenced but not assigned (for output from commands, use "$(file ...)" ). Line 6: Check exit code directly with e.g. 'if ! mycmd;', not indirectly with $?. See https://shellcheck.net/?id=cb32060
[10:00:22] <tirnanog> jensen: it's correct but (( $? == 0 )) ||, or an if statement, would make more sense. otherwise, the mere act of performing the test will effectively set $? to 1 in the case that nothing actually went wrong.
[10:01:03] <tirnanog> and that could have real side-effects at some point in your future.
[10:03:05] <tirnanog> # true; (( $? != 0 )) && error_handler; echo $?
[10:03:06] <shbot> tirnanog: 1
[10:03:14] <tirnanog> # true; (( $? == 0 )) || error_handler; echo $?
[10:03:15] <shbot> tirnanog: 0
[10:04:22] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[10:04:55] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:07:25] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:09:41] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[10:11:18] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:12:37] <jensen> good point
[10:14:19] *** Joins: unicky (~unickyllt@46.211.232.23)
[10:15:55] *** Joins: Everything (~Everythin@178-133-112-180.mobile.vf-ua.net)
[10:16:22] <tirnanog> you may also write "fi || ...", though some might find it to be distasteful.
[10:19:29] *** Quits: unicky (~unickyllt@46.211.232.23) (Ping timeout: 268 seconds)
[10:20:06] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[10:23:55] *** Joins: bluedust (~bluedust@117.204.154.215)
[10:24:21] <jensen> actually, i prefer being distasteful in this scenario because this form makes it slightly more obvious (imo) the test is for the last command of each condition and kind of reinforces that this is not the conventional "good practice" of testing cmds directly
[10:28:38] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[10:35:17] *** Quits: thomasross (~thomasros@dyn-pppoe-142-51-227-74.vianet.ca) (Ping timeout: 240 seconds)
[10:36:31] *** Joins: han-solo (~han-solo@user/han-solo)
[10:36:54] *** Joins: sdu (~doo@185.44.146.214)
[10:36:54] <tirnanog> besides which, you could specify another compound command if it ever became unwieldy. as long as it's done right, that's what counts.
[10:37:33] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[10:37:53] *** Joins: sgn (~sgn@user/sgn)
[10:42:10] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.4)
[10:46:41] *** Quits: rgrinberg (~textual@177.246.221.96) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:48:12] *** Joins: rgrinberg (~textual@177.246.223.46)
[10:48:19] <Blondie101010> you can also use a variable...  they're on sale at this time of year
[10:54:24] *** Quits: semigloss (~semigloss@d14-69-6-230.try.wideopenwest.com) (Quit: leaving)
[10:55:26] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[10:58:57] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:01:00] *** Quits: Leonard (~Administr@114.55.127.80) (Read error: Connection reset by peer)
[11:01:23] *** Joins: Leonard (~Administr@114.55.127.80)
[11:02:15] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[11:03:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:11:22] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[11:11:33] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.4)
[11:13:21] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[11:17:05] *** Quits: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net) (Remote host closed the connection)
[11:17:07] *** Quits: sinaowolabi_ (~SinaOwola@160.152.143.77) (Ping timeout: 256 seconds)
[11:17:07] *** Quits: sinaowolabi (~SinaOwola@160.152.143.77) (Ping timeout: 256 seconds)
[11:17:52] *** Joins: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net)
[11:21:28] *** Quits: rgrinberg (~textual@177.246.223.46) (Read error: Connection reset by peer)
[11:23:08] *** Joins: rgrinberg (~textual@177.246.221.96)
[11:23:37] *** Joins: bluedust_ (~bluedust@217.138.254.105)
[11:24:29] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[11:24:33] *** Quits: daniel-k (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[11:24:43] *** Joins: daniel-k (~daniel-k@fsf/emeritus/daniel-k)
[11:26:57] *** Quits: bluedust (~bluedust@117.204.154.215) (Ping timeout: 240 seconds)
[11:28:51] *** Joins: rendar (~rendar@user/rendar)
[11:29:38] *** Joins: sinaowolabi_ (~SinaOwola@160.152.93.247)
[11:30:23] *** Joins: sinaowolabi (~SinaOwola@160.152.93.247)
[11:33:10] *** Joins: loganlee (~Thunderbi@user/loganlee)
[11:35:08] *** Quits: rgrinberg (~textual@177.246.221.96) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:35:43] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Read error: Connection reset by peer)
[11:36:05] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[11:40:07] *** Quits: jensen (~jensen@65.78.100.184) (Quit: WeeChat 3.4)
[11:43:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[11:44:39] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[11:44:59] <uuidNuniq> just don't use && || , use if then fi instead
[11:45:16] <uuidNuniq> nest as many as you want
[11:45:48] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[11:46:24] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[11:49:57] *** Quits: nvrhome (~Bop@user/nvrhome) (Ping timeout: 240 seconds)
[11:50:37] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[11:50:54] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-120-117.pa.qld.optusnet.com.au)
[11:52:01] *** Quits: sinaowolabi_ (~SinaOwola@160.152.93.247) (Ping timeout: 245 seconds)
[11:54:58] *** Quits: bluedust_ (~bluedust@217.138.254.105) (Remote host closed the connection)
[11:58:26] *** Joins: akoana (~ah@user/akoana)
[12:00:41] *** Quits: downtrip (~downtrip@188.166.151.198) (Quit: WeeChat 3.4)
[12:01:18] *** Joins: magla (~gelignite@55d465a4.access.ecotel.net)
[12:01:56] <tirnanog> a nested if is possible, but - given the exact problem that was presented - it would be finnicky, in my opinion. see https://termbin.com/90ph.
[12:04:06] *** Joins: downtrip (~downtrip@188.166.151.198)
[12:04:28] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[12:05:10] <tirnanog> I don't think the comprehensibliity of the first example is all that great as compared to the second, or even the third.
[12:05:50] <tirnanog> but, really, it's the fact that if if ... would do the wrong thing that's the kicker. I can imagine that tripping up a lot of people.
[12:06:44] <tirnanog> if ! if ... I mean. it looks like it should work, but it doesn't.
[12:10:09] <tirnanog> it would be ok if the inner code were punted to a function though.
[12:17:22] *** Quits: dre (~dre@2001:8003:c932:c301:8304:d78a:deb9:dfd1) (Ping timeout: 260 seconds)
[12:18:30] *** Quits: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se) (Remote host closed the connection)
[12:22:17] *** Joins: Jad (~Nashmi@user/jad)
[12:24:47] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:25:38] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:33:52] *** Joins: bluedust (~bluedust@217.138.254.105)
[12:33:55] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[12:35:15] *** Joins: janko (~gian@2001:ce8:132:f834:27e1:902e:1b0b:c44)
[12:35:47] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[12:35:53] *** Quits: itachi19 (~itachi19@46.232.210.60) (Quit: The Lounge - https://thelounge.chat)
[12:36:02] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[12:36:16] *** Joins: itachi19 (~itachi19@46.232.210.60)
[12:38:22] *** Quits: Oleg (~Oleg@ool-45745511.dyn.optonline.net) (Ping timeout: 260 seconds)
[12:38:39] *** Joins: bluedust_ (~bluedust@117.204.154.215)
[12:39:17] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[12:40:52] *** Quits: freep (~freepppp@62.1.245.43.dsl.dyn.forthnet.gr) (Quit: Leaving)
[12:41:57] *** Quits: bluedust (~bluedust@217.138.254.105) (Ping timeout: 240 seconds)
[12:43:43] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[12:45:30] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.3)
[12:45:47] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[12:48:34] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Client Quit)
[12:49:21] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[12:55:30] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[12:56:02] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[12:56:28] *** Joins: sinaowolabi_ (~SinaOwola@160.152.93.247)
[12:59:04] *** Joins: Night-Shade (~Tim@86.111.161.6)
[12:59:47] *** Quits: Night-Shade (~Tim@86.111.161.6) (Read error: Connection reset by peer)
[13:01:53] *** Joins: Night-Shade (~Tim@86.111.161.6)
[13:03:16] *** Joins: john_johnk (~Thunderbi@1.59.140.77.rev.sfr.net)
[13:05:32] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 240 seconds)
[13:06:17] *** Quits: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e) (Ping timeout: 240 seconds)
[13:07:14] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[13:07:23] *** Joins: troyt (troyt@2601:681:4100:d591:44dd:acff:fe85:9c8e)
[13:09:43] *** Joins: seninha (~seninha@user/seninha)
[13:10:28] *** Joins: roadie (~user@2a02:8108:ec0:1427:3550:c1eb:43f0:f5c0)
[13:11:17] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-120-117.pa.qld.optusnet.com.au) (Ping timeout: 240 seconds)
[13:11:44] *** Quits: callq (~callq@157.41.89.228) (Quit: callq)
[13:12:13] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[13:13:16] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 245 seconds)
[13:15:09] *** Quits: janko (~gian@2001:ce8:132:f834:27e1:902e:1b0b:c44) (Quit: WeeChat 2.8)
[13:15:59] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[13:16:02] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[13:16:37] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[13:17:38] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 252 seconds)
[13:20:28] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[13:20:30] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:21:36] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[13:22:01] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 245 seconds)
[13:24:22] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:30:25] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[13:31:58] *** Joins: zostj (~rue@61-231-132-82.dynamic-ip.hinet.net)
[13:33:01] *** Joins: freep (~freepppp@62.1.245.43.dsl.dyn.forthnet.gr)
[13:34:15] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:34:49] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[13:35:08] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:40:33] *** nosoul is now known as flea-
[13:42:38] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[13:44:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[13:44:46] *** Joins: Ad1Tech (~Ad1Tech@h104101.man.tk-internet.pl)
[13:45:13] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[13:45:28] *** Quits: flea- (nosoul@gateway/vpn/protonvpn/nosoul) (Quit: Leaving)
[13:45:39] *** Joins: flea- (flea@gateway/vpn/protonvpn/nosoul)
[13:47:02] *** Quits: bluedust_ (~bluedust@117.204.154.215) (Ping timeout: 240 seconds)
[13:49:46] *** Quits: sinaowolabi_ (~SinaOwola@160.152.93.247) (Ping timeout: 260 seconds)
[13:51:04] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[13:53:15] *** Joins: thebombzen (~thebombze@64-233-244-163.static.clv.wideopenwest.com)
[13:53:34] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[13:55:10] *** Joins: bluedust (~bluedust@103.165.167.220)
[13:56:21] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[13:56:21] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Read error: Connection reset by peer)
[13:56:21] <rendar> if i call a remote command with ssh, there is a way to check if 'ssh' command failed, and not the remote command?
[13:57:08] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:57:43] <koollman> rendar: check if the exit status is 255
[13:58:03] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[13:58:22] <rendar> koollman, oh thanks
[13:58:26] *** Lord_of_Life_ is now known as Lord_of_Life
[13:58:37] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[13:58:46] <rendar> koollman, so, if ssh fails, exit status will always be 255, otherwise it will be the exit status of the remote command, if i got it right
[13:58:53] <koollman> yes
[13:59:18] *** Joins: gabriele (~gabriele@user/gabriele)
[14:01:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[14:02:39] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[14:03:28] *** Joins: bud (~bud@user/bud)
[14:03:36] <rendar> if this correct? https://bpa.st/7NWA -- i have the feeling that the first check, after calling `[[` will modify the PIPESTATUS array
[14:04:02] *** Joins: zer0bitz (~zer0bitz@196.244.192.54)
[14:04:17] *** Quits: polve (~polve@user/polve) (Ping timeout: 256 seconds)
[14:05:59] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[14:07:43] *** Joins: Nact (~l@host-85-27-124-155.dynamic.voo.be)
[14:09:53] *** Joins: polve (~polve@user/polve)
[14:11:27] *** Quits: flea- (flea@gateway/vpn/protonvpn/nosoul) (Quit: Leaving)
[14:13:18] *** Joins: callq (~callq@2409:4062:2d92:448:e48d:d3de:c520:9560)
[14:13:21] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[14:15:01] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[14:16:08] *** Joins: flea- (flea@gateway/vpn/protonvpn/nosoul)
[14:19:28] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:19:54] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[14:20:43] *** Joins: earnestly (~earnest@user/earnestly)
[14:21:58] *** Joins: MenschZwoNull (~MenschZwo@p200300c8571cb700350366d9a698f89c.dip0.t-ipconnect.de)
[14:22:27] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 268 seconds)
[14:24:15] *** Joins: cdown (~cdown@188.214.11.14)
[14:24:36] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[14:26:06] <geirha> it wlll, so save PIPESTATUS first
[14:26:16] *** Joins: cdown_ (~cdown@163.114.131.1)
[14:26:56] <geirha> status=( "${PIPESTATUS[@]}" ); if (( status[1] != 0 )) ; then ... ; elif (( status[0] != 1 )) ; then ...
[14:27:59] *** Joins: furrymcgee (~devuan@cgn-213-196-210-78.nc.de)
[14:28:01] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[14:28:49] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 250 seconds)
[14:28:54] *** cdown_ is now known as cdown
[14:30:21] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[14:30:39] *** Joins: legola (~legola@46.235.101.65)
[14:30:57] *** Joins: Oleg (~Oleg@ool-45745511.dyn.optonline.net)
[14:32:26] <kurahaupo> Lord_of_Life: if you go « man ssh », can you find the part where it says « EXIT STATUS  ssh exits with the exit status of the remote command or with 255 if an error occurred. »?
[14:32:58] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[14:33:33] *** Quits: john_johnk (~Thunderbi@1.59.140.77.rev.sfr.net) (Read error: Connection reset by peer)
[14:34:00] *** Joins: john_johnk (~Thunderbi@1.59.140.77.rev.sfr.net)
[14:35:31] <kurahaupo> rendar: Every command alters the PIPESTATUS array, so capture a copy in another array S=("${PIPESTATUS[@]}"); and since all its entries are numeric, it's tidier to write if (( S[1] != 0 )) ; then ... ; elif (( S[0] != 0 )) ; then ... ; else ... ; fi
[14:35:37] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 240 seconds)
[14:36:15] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Read error: Connection reset by peer)
[14:37:28] <kurahaupo> rendar: or you could write case ${PIPESTATUS[0]}:${PIPESTATUS[1]} in 0:0)  ;; 0:*) ;; *:*) ;; esac
[14:38:17] *** Quits: john_johnk (~Thunderbi@1.59.140.77.rev.sfr.net) (Ping timeout: 256 seconds)
[14:39:39] <kurahaupo> Unlike a daisy-chained if/elif block, evaluation of the control value used in a case statement doesn't affect $? or PIPESTATUS (unless it includes a $(...) expansion but that's easy to avoid)
[14:39:45] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-120-117.pa.qld.optusnet.com.au)
[14:40:10] *** Joins: sudomann (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33)
[14:40:12] <rendar> i see, thanks
[14:41:18] <rendar> so i can use arrays into (( )) too, ok
[14:43:26] *** Quits: sudomannn (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33) (Ping timeout: 260 seconds)
[14:45:37] *** Quits: Night-Shade (~Tim@86.111.161.6) (Ping timeout: 240 seconds)
[14:48:25] *** Joins: reset (~reset@user/reset)
[14:49:55] *** Quits: fatal (~0x00@user/fatal) (Remote host closed the connection)
[14:50:13] *** Joins: fatal (~0x00@user/fatal)
[14:52:26] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-120-117.pa.qld.optusnet.com.au) (Ping timeout: 245 seconds)
[14:53:13] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[14:53:57] *** Quits: han-solo (~han-solo@user/han-solo) (Ping timeout: 240 seconds)
[14:57:22] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[14:57:57] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[14:58:40] *** Joins: Night-Shade (~Tim@86.111.161.6)
[14:59:06] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[15:02:32] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[15:02:49] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[15:03:37] *** Joins: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke)
[15:04:14] <rendar> i have an array formed in this way: my_arr=( ); my_arr+=( -o atime ) ... now, i need to copy that array 'my_arr' into 'final_arr' but the catch is that i have to convert -o to -O, and i do this: final_arr="${my_arr[@]/#-o/-O}" --- problem is that is i call the final command giving "${final_array[@]}" as the command options, i get this: property ' atime' is not a valid filesystem property
[15:04:29] <rendar> somehow that conversion from -o to -O modified also those strings...
[15:04:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:05:01] <rendar> so basically bash is passing `-O ' atime'` instead of the classic option `-O atime` -- any help?
[15:05:54] <emanuele6> final_arr=( "${my_arr[@]/#-o/-O}" )  using "$@" in an assignment is weird and is probably not what you want
[15:06:19] <rendar> emanuele6, i agree, someone here told me to use that command btw some time ago
[15:06:23] <rendar> now i get this bug
[15:06:24] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[15:06:52] <rendar> what is the best way to modifying -o into -O, but preserving the arr+=( -o atime ) structure?
[15:06:53] <emanuele6> anyway, `/#-o/-O' is a little inaccurate since you are replacing -o at the start of any element with -O, not just -o with -O
[15:07:03] <emanuele6> it would be more accurate to use use a for loop
[15:07:25] <rendar> ok, yes, i think it would be a lot better
[15:07:53] <rendar> the problem is that in the initial array, i have '-o atime', so a for loop would get that string
[15:08:04] <emanuele6> > my_arr=( ); my_arr+=( -o atime )
[15:08:07] <rendar> but i only need 'atime' into the for loop, to do final_array+=( -O $s )
[15:08:10] <emanuele6> you don't have a string
[15:08:20] <emanuele6> # my_arr=( ); my_arr+=( -o atime ); declare -p my_arr
[15:08:22] <shbot> emanuele6: declare -a my_arr=([0]="-o" [1]="atime")
[15:08:33] <rendar> oh!
[15:08:49] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[15:09:19] <emanuele6> rendar: $s should be quoted there
[15:09:19] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[15:09:24] <rendar> yep
[15:09:43] <rendar> final_array+=( -O "${s[1]}" )
[15:09:44] <rendar> something like this
[15:09:50] <emanuele6> i don't know what s is
[15:10:19] <rendar> `for s in "${my_arr[@]}"` ? right?
[15:10:38] <emanuele6> then "${s[1]}" expands to empty
[15:10:44] <emanuele6> since s is a string, not an array
[15:10:55] <rendar> ok, i'll do some tests
[15:11:05] <emanuele6> and a string does not have a second (index 1) element
[15:11:08] <rendar> but with a for loop, you meant something like that ^, right?
[15:11:28] <emanuele6> no, i did not mean something like that
[15:11:35] <rendar> i see, can you explain?
[15:11:48] *** Quits: furrymcgee (~devuan@cgn-213-196-210-78.nc.de) (Remote host closed the connection)
[15:11:52] <emanuele6> you said you wanted to replace all the -o's with -O's
[15:12:07] <rendar> yes
[15:12:30] <emanuele6> then why? `+=( -O "$s" )', that does not replace anything
[15:13:08] <rendar> ok, then you mean if [[ "$s" == "-o" ]] final_arr+=( -O ) else final_arr+=( "$s" ) ?
[15:13:15] <emanuele6> yes
[15:13:22] <rendar> ok, got it
[15:14:13] <emanuele6> but why do you construct the original array with `-o'?
[15:15:59] *** Andrie is now known as Andrie_
[15:16:15] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 250 seconds)
[15:17:54] <emanuele6> assuming is an array of options for a command: my_arr=( -a arg1 -b arg2 -o arg3 -c arg4 -o arg5 ), and you want to reuse it later for another command with the -o's replaced with -O's and if it is not important that `-c arg4' is between `-o arg3' and `-o arg4', you can simply have a o_args=( arg3 arg5 ) array
[15:18:31] <emanuele6> and call the first command with     cmd1 "${common_args[@]}" "${o_args/#/-o}"
[15:18:42] <emanuele6> and call the second command with    cmd2 "${common_args[@]}" "${o_args/#/-O}"
[15:19:48] <emanuele6> that is also more correct since it will not replace "arg1", "arg2", "arg3", "arg4" or "arg5" with `-O' in case the are `-o'
[15:20:02] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:21:25] <emanuele6> i meant  "${o_args[@]/#/-o}"  and  "${o_args[@]/#/-O}"
[15:21:58] *** Joins: furrymcgee (~devuan@cgn-213-196-210-78.nc.de)
[15:24:45] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:28:38] *** Joins: bluedust_ (~bluedust@117.204.154.215)
[15:29:57] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:31:17] *** Quits: bluedust (~bluedust@103.165.167.220) (Ping timeout: 240 seconds)
[15:32:43] *** Quits: MenschZwoNull (~MenschZwo@p200300c8571cb700350366d9a698f89c.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[15:32:52] *** Joins: bluedust (~bluedust@185.248.85.10)
[15:34:23] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[15:35:37] *** Quits: bluedust_ (~bluedust@117.204.154.215) (Ping timeout: 240 seconds)
[15:36:17] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[15:36:36] *** Quits: magla (~gelignite@55d465a4.access.ecotel.net) (Quit: Stay safe!)
[15:37:10] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[15:38:21] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 256 seconds)
[15:38:37] *** Quits: wwallace (~afernande@63.240.73.102) (Ping timeout: 240 seconds)
[15:39:30] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[15:44:07] *** Joins: n4dir (~user@i577BC830.versanet.de)
[15:45:42] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[15:46:38] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[15:46:50] *** Joins: knstn (~knstn@ppp-94-66-57-173.home.otenet.gr)
[15:48:56] <uuidNuniq> ass array possible?
[15:49:20] <uuidNuniq> arr[-o]+="atime"
[15:50:02] <uuidNuniq> o , no need the + for ass array. just arr[-o]=atime
[15:51:13] <uuidNuniq> # typeset -Ag arr ; arr[-o]=atime ; typeset -p arr
[15:51:15] <shbot> uuidNuniq: declare -A arr=([-o]="atime" )
[15:51:27] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[15:56:42] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 260 seconds)
[15:57:32] *** Quits: Andrie_ (~Andrie@user/Andrie) (Quit: bye)
[15:58:04] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[15:59:01] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[15:59:19] *** Quits: varazir (~mircwars@81-230-91-92-no2300.tbcn.telia.com) (Ping timeout: 256 seconds)
[15:59:26] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[15:59:54] *** Joins: semeion (~semeion@user/semeion)
[16:00:08] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[16:00:50] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[16:03:24] *** Joins: ntwk (~ntwk@user/ntwk)
[16:03:42] *** Joins: varazir (~mircwars@81-230-91-92-no2300.tbcn.telia.com)
[16:03:44] *** Joins: bert_ (~quassel@user/bertptrs)
[16:04:10] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[16:04:54] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:04:54] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[16:07:02] *** Quits: bertptrs (~quassel@user/bertptrs) (Ping timeout: 252 seconds)
[16:09:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[16:10:57] *** Joins: Ad1Tech_IT (~Ad1Tech@193.218.151.167.static.telsat.wroc.pl)
[16:13:31] *** Quits: bert_ (~quassel@user/bertptrs) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:13:39] *** Quits: bluedust (~bluedust@185.248.85.10) (Remote host closed the connection)
[16:13:39] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[16:13:57] *** Quits: callq (~callq@2409:4062:2d92:448:e48d:d3de:c520:9560) (Ping timeout: 240 seconds)
[16:14:01] *** Joins: bertptrs (~quassel@user/bertptrs)
[16:14:05] *** Quits: Ad1Tech (~Ad1Tech@h104101.man.tk-internet.pl) (Ping timeout: 268 seconds)
[16:17:41] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Client Quit)
[16:17:43] *** Joins: lavaball (~Melissa@p54a4dd9a.dip0.t-ipconnect.de)
[16:19:28] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:20:11] *** Quits: Oleg (~Oleg@ool-45745511.dyn.optonline.net) (Ping timeout: 250 seconds)
[16:23:33] *** Joins: bluedust (~bluedust@185.248.85.10)
[16:23:54] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Quit: Leaving)
[16:26:44] *** Joins: rufito (~phil@2800:150:153:29c9:8d74:aa4:d5c5:a984)
[16:28:29] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[16:28:29] *** Quits: chenqisu1 (~bhca7d@183.217.201.21) (Ping timeout: 252 seconds)
[16:28:44] *** Joins: john_johnk (~Thunderbi@1.59.140.77.rev.sfr.net)
[16:29:29] *** Joins: miique (~miique@181.46.139.166)
[16:35:54] *** Joins: thevishy (~Nishant@2405:201:f005:c007:bc65:cf77:420d:9a2d)
[16:46:47] *** Quits: totenkoph (~scythe@user/totenkoph) (Remote host closed the connection)
[16:47:30] *** Joins: totenkoph (~scythe@user/totenkoph)
[16:53:32] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:d8e5:b45f:7ffd:50ed)
[16:53:32] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:d8e5:b45f:7ffd:50ed) (Changing host)
[16:53:32] *** Joins: skapata (~Skapata@user/skapata)
[16:53:39] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[16:54:04] *** Joins: gabriele (~gabriele@user/gabriele)
[17:00:31] *** Quits: Night-Shade (~Tim@86.111.161.6) (Ping timeout: 256 seconds)
[17:03:47] *** Joins: MenschZwoNull (~MenschZwo@p200300c8571cb700350366d9a698f89c.dip0.t-ipconnect.de)
[17:04:49] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:05:00] *** Joins: stonkey (~stonkey@user/stonkey)
[17:06:47] *** Joins: zeden (~zeden@user/zeden)
[17:08:27] *** Quits: sinaowolabi (~SinaOwola@160.152.93.247) (Ping timeout: 256 seconds)
[17:08:46] *** Joins: H3dn1ng (~H3dn1ng@185.213.154.229)
[17:09:44] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[17:09:55] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[17:10:45] *** Quits: Nact (~l@host-85-27-124-155.dynamic.voo.be) (Quit: Konversation terminated!)
[17:10:59] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[17:11:55] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Client Quit)
[17:12:27] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[17:18:06] *** Joins: Night-Shade (~Tim@86.111.161.6)
[17:19:52] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:21:13] *** Joins: sinaowolabi (~SinaOwola@160.152.107.242)
[17:23:25] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[17:23:57] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[17:27:33] *** Quits: fstd (~fstd@xdsl-78-35-82-60.nc.de) (Read error: Connection reset by peer)
[17:27:44] *** Joins: fstd (~fstd@xdsl-78-35-82-60.nc.de)
[17:28:43] *** Quits: nehsou^ (~nehsou@207.5.54.6) (Remote host closed the connection)
[17:30:06] *** Quits: polve (~polve@user/polve) (Read error: Connection reset by peer)
[17:37:06] *** Joins: pj (~pj@ghettoforge/pj)
[17:39:10] *** Quits: kurahaupo (~martin@115.69.27.211) (Ping timeout: 268 seconds)
[17:39:11] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[17:39:23] *** Joins: Oleg (~Oleg@ool-45745511.dyn.optonline.net)
[17:39:59] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:40:27] *** Joins: MrBlue (~MrBlue@24.114.99.5)
[17:44:27] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[17:46:00] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[17:46:55] *** Joins: yeirr (~yeirr@user/yeirr)
[17:47:04] *** Joins: legola (~legola@46.235.101.65)
[17:47:16] *** Quits: yeirr (~yeirr@user/yeirr) (Client Quit)
[17:51:17] *** Quits: legola (~legola@46.235.101.65) (Ping timeout: 240 seconds)
[17:52:42] *** Joins: thiras (~thiras@user/thiras)
[17:54:29] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[17:54:44] *** Joins: damxsa (~damx@2001:16a2:cfed:3100:d614:626b:5937:395b)
[17:54:48] <heiner_> # echo test
[17:54:49] <shbot> heiner_: test
[17:54:51] *** Joins: unicky (~unickyllt@46.211.241.13)
[17:55:06] <heiner_> # echo "$(date -d 2022-01-01 +"%s")-$(date +"%s")" | bc
[17:55:07] <shbot> heiner_: 34494
[17:55:10] <heiner_> # echo "$(date -d 2022-01-01 +"%s")-$(date +"%s")" | bc
[17:55:11] <shbot> heiner_: 34490
[17:55:15] <riff-IRC> # ls
[17:55:16] <shbot> riff-IRC: no output
[17:55:20] <riff-IRC> #ls /
[17:55:23] <heiner_> yeah, the new year countdown
[17:55:24] <riff-IRC> # ls /
[17:55:25] <shbot> riff-IRC: bin  dev  etc  init  lib  lib64  proc  root  tmp  usr  var
[17:55:39] <riff-IRC> # ls /etc/apcupsd
[17:55:40] <shbot> riff-IRC: /bin/ls: cannot access '/etc/apcupsd': No such file or directory
[17:55:54] <riff-IRC> # init 0
[17:55:55] <shbot> riff-IRC: bash: init: command not found
[17:56:05] <riff-IRC> # /usr/bin/init 0
[17:56:06] <shbot> riff-IRC: bash: /usr/bin/init: No such file or directory
[17:56:16] <emanuele6> riff-IRC: /query shbot
[17:56:44] <emanuele6> heiner_: you can make it simpler in bash
[17:57:55] <emanuele6> you can use $EPOCHSECONDS to get the current time in seconds since the start of 1970 UTC
[17:58:33] *** Quits: roadie (~user@2a02:8108:ec0:1427:3550:c1eb:43f0:f5c0) (Quit: ERC (IRC client for Emacs 25.3.50.1))
[17:58:44] <phy1729> (ignoring leap seconds because those don't exist in Unix time)
[17:58:45] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[17:59:03] *** Joins: gabriele (~gabriele@user/gabriele)
[17:59:06] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 245 seconds)
[17:59:30] <emanuele6> yeah, right
[17:59:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:00:16] <heiner_> emanuele6: "EPOCHSECONDS" seems to be specific to BASH
[18:01:13] <emanuele6> that is what i said
[18:01:14] *** Quits: Jad (~Nashmi@user/jad) (Remote host closed the connection)
[18:01:54] <emanuele6> -d is also specific to GNU date.
[18:01:56] <heiner_> # echo $(( $(date -d 2022-01-01 +"%s")-$(date +"%s")))
[18:01:57] <shbot> heiner_: 34084
[18:02:06] <heiner_> one process less
[18:02:23] *** Joins: L3 (~L3@user/l3)
[18:02:36] *** Quits: damxsa (~damx@2001:16a2:cfed:3100:d614:626b:5937:395b) (Ping timeout: 268 seconds)
[18:02:41] <emanuele6> two
[18:03:05] *** Quits: H3dn1ng (~H3dn1ng@185.213.154.229) (Ping timeout: 252 seconds)
[18:03:16] <emanuele6> there was an extra process for the echo part of the pipe line before
[18:05:10] <emanuele6> before you had: the main bash, `echo ...', `$(...)', the other `$(...)' and `bc'
[18:05:25] <emanuele6> now you only have: the main bash, `$(...)', the other `$(...)'
[18:06:28] *** Quits: WinterStar (~IceLight@user/icelight) (Quit: WeeChat 3.3)
[18:07:59] *** Joins: adac (~adac@31.207.101.82)
[18:09:04] *** Joins: nunggu (~q@gateway/tor-sasl/nunggu)
[18:09:05] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[18:09:41] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[18:10:06] *** Joins: WinterStar (~IceLight@user/icelight)
[18:12:18] <emanuele6> also i think your code is incorrect
[18:12:33] <emanuele6> you should use `date -ud 2022-01-01 +%s'
[18:12:55] <emanuele6> you don't need -u for %s, but GNU date needs -u to decode 2022-01-01 in UTC
[18:13:06] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[18:13:37] *** Quits: sudomann (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33) (Ping timeout: 240 seconds)
[18:13:51] <emanuele6> otherwise it will use the system's local time (that for shbot is UTC)
[18:14:23] <heiner_> # until [ "$diff" = "0" ]; do diff=$(( $(date -d 22-01-01 +"%s")-$(date +"%s") )); sleep 1; done; echo "Happy New Year"
[18:14:29] <shbot> heiner_: no output within the time limit
[18:14:44] <heiner_> hey!
[18:15:23] <heiner_> I assume there is no discussion about "expected behaviour" with shbot.1
[18:16:34] <emanuele6> that code will possibly loop forever
[18:16:46] *** Joins: bluedust_ (~bluedust@117.204.154.215)
[18:16:59] <emanuele6> because you are checking for exact 0 as stop condition in a loop that sleeps for 1 second
[18:17:41] <heiner_> good point
[18:17:57] <emanuele6> and again, it is not correct because it should use -u
[18:18:20] <emanuele6> otherwise -d decodes the date in local time which is not consistent with %s that is in UTC
[18:18:26] <emanuele6> well, unix time
[18:18:37] <heiner_> also agreed
[18:19:02] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[18:19:02] *** Quits: skered (~dereks@user/skered) (Ping timeout: 260 seconds)
[18:19:27] <heiner_> # echo Happy New Year | TC=UTC at 00:00
[18:19:28] <shbot> heiner_: bash: at: command not found
[18:19:36] <emanuele6> TZ
[18:19:37] *** Quits: bluedust (~bluedust@185.248.85.10) (Ping timeout: 240 seconds)
[18:20:09] <heiner_> # ls /usr/bin/a*
[18:20:09] <emanuele6> shbot loads the same vm snapshot everytime it starts.
[18:20:10] <shbot> heiner_: /bin/ls: cannot access '/usr/bin/a*': No such file or directory
[18:20:24] <heiner_> # ls /bin/a*
[18:20:25] <shbot> heiner_: /bin/adu  /bin/awk
[18:20:27] <emanuele6> it does not save any state
[18:21:00] <wiscii> how often is shbot restarted ?
[18:21:00] *** Quits: fstd (~fstd@xdsl-78-35-82-60.nc.de) (Read error: Connection reset by peer)
[18:21:17] *** Joins: fstd (~fstd@xdsl-78-35-82-60.nc.de)
[18:21:27] <heiner_> it is *supposed* to not save any state ;-)
[18:21:33] <wiscii> # uptime
[18:21:33] <shbot> wiscii: bash: uptime: command not found
[18:22:07] <heiner_> # who -r-
[18:22:08] <shbot> heiner_: who: invalid option -- '-'
[18:22:08] <shbot> heiner_: Try 'who --help' for more information.
[18:22:21] <emanuele6> heiner_: also, `ls glob' is a terrible way to check the results of a glob, if glob matches a directory, it will output unwanted stuff
[18:22:34] <wiscii> ## cat /proc/uptime
[18:22:34] <emanuele6> `echo glob' makes a lot more sense
[18:22:43] <wiscii> # cat /proc/uptime
[18:22:43] <shbot> wiscii: 7.39 0.05
[18:23:12] <emanuele6> # mkdir .a; >> .a/b; ls .*
[18:23:18] <shbot> emanuele6: .bashrc  .mkshrc
[18:23:18] <shbot> emanuele6:
[18:23:18] <shbot> emanuele6: etc... ( http://ix.io/3KcY )
[18:23:23] <emanuele6> # mkdir .a; >> .a/b; echo .*
[18:23:24] <shbot> emanuele6: . .. .a .bashrc .mkshrc
[18:23:27] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 250 seconds)
[18:24:59] <emanuele6> also
[18:25:18] <emanuele6> # mkdir a; >> a/b; >> al; ls a*
[18:25:28] <shbot> emanuele6: al
[18:25:28] <shbot> emanuele6:
[18:25:28] <shbot> emanuele6: etc... ( http://ix.io/3Kd2 )
[18:25:29] <emanuele6> # mkdir a; >> a/b; >> al; echo a*
[18:25:30] <shbot> emanuele6: a al
[18:25:39] *** Quits: NoelFlantier3 (~Hubert@static.238.157.9.5.clients.your-server.de) (Remote host closed the connection)
[18:26:01] *** Joins: NoelFlantier3 (~Hubert@static.238.157.9.5.clients.your-server.de)
[18:27:01] <emanuele6> and `echo a*' only requires the current directory to be readable; while `ls' will randomly error out based on the file permissions of the content of the current directory that matches the glob
[18:28:11] *** kurahaupo_ is now known as kurahaupo
[18:29:24] *** kurahaupo is now known as opuaharuk
[18:29:34] <heiner_> # who am i
[18:29:35] <shbot> heiner_: no output
[18:29:50] <heiner_> # whoami
[18:29:51] <shbot> heiner_: root
[18:29:52] *** opuaharuk is now known as kurahaupo
[18:32:16] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:33:56] *** Joins: callq (~callq@2409:4062:2d92:448:d73:1a02:e27c:1e4a)
[18:34:02] *** Parts: texasmynsted (~texasmyns@99.96.221.112) (WeeChat 3.3)
[18:34:11] *** Quits: UncleKiwi (~UncleKiwi@user/unclekiwi) (Remote host closed the connection)
[18:34:54] *** Quits: adac (~adac@31.207.101.82) (Ping timeout: 260 seconds)
[18:36:20] *** Joins: pj (~pj@ghettoforge/pj)
[18:38:00] <heiner_> # date
[18:38:01] <shbot> heiner_: Fri Dec 31 15:08:00 UTC 2021
[18:38:37] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[18:41:57] *** Quits: Night-Shade (~Tim@86.111.161.6) (Ping timeout: 256 seconds)
[18:42:55] *** Joins: damxsa (~damx@2001:16a2:cfed:3100:d614:626b:5937:395b)
[18:46:24] *** Quits: esselfe (~steph@user/esselfe) (Read error: Connection reset by peer)
[18:46:37] *** Joins: sudomann (~sudomann@66.44.58.83)
[18:47:23] *** Quits: Ad1Tech_IT (~Ad1Tech@193.218.151.167.static.telsat.wroc.pl) (Quit: Leaving)
[18:52:21] *** Quits: bluedust_ (~bluedust@117.204.154.215) (Remote host closed the connection)
[18:54:41] *** Joins: esselfe (~steph@user/esselfe)
[18:55:19] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:00:44] *** Joins: malina (~malina@user/malina)
[19:01:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:01:17] <kurahaupo> # TZ=Australia/Brisbane date
[19:01:18] <shbot> kurahaupo: Fri Dec 31 15:31:17 Australia 2021
[19:01:25] <kurahaupo> nope
[19:01:53] <kurahaupo> Sat Jan 01 01:31 AEST
[19:02:15] *** Quits: damxsa (~damx@2001:16a2:cfed:3100:d614:626b:5937:395b) (Quit: Leaving)
[19:03:39] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[19:03:53] <esselfe> #sh TZ=America/Montreal date
[19:04:01] <esselfe> # TZ=America/Montreal date
[19:04:02] <shbot> esselfe: Fri Dec 31 15:34:01 America 2021
[19:04:05] *** Joins: jensen (~jensen@65.78.100.184)
[19:04:19] <esselfe> wrong too, it's 10:34
[19:04:28] <esselfe> # date -u
[19:04:29] <shbot> esselfe: Fri Dec 31 15:34:28 UTC 2021
[19:06:11] <esselfe> oh this one works:
[19:06:25] <esselfe> # TZ=EDT5EST date
[19:06:26] <shbot> esselfe: Fri Dec 31 10:36:25 EDT 2021
[19:07:03] <esselfe> # which nc
[19:07:04] <shbot> esselfe: Sorry, I don't do whichcraft.
[19:07:20] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[19:08:32] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[19:09:27] <esselfe> # echo $TZ; ls -l /etc/localtime # last one :P
[19:09:28] <shbot> esselfe:
[19:09:28] <shbot> esselfe: /bin/ls: cannot access '/etc/localtime': No such file or directory
[19:10:42] <kurahaupo> # TZ=AEST-10AEDT,M10.1,M4.1 date
[19:10:43] <shbot> kurahaupo: Sat Jan  1 02:40:42 AEDT 2022
[19:10:53] <kurahaupo> yay!
[19:10:56] *** Joins: sandb0y (~pirate@user/sandb0y)
[19:11:05] <kurahaupo> # TZ=AEST-10 date
[19:11:06] <shbot> kurahaupo: Sat Jan  1 01:41:05 AEST 2022
[19:11:37] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[19:11:41] <esselfe> Happy new year!
[19:12:15] <esselfe> is shbot's source code published?
[19:12:18] *** Joins: malina (~malina@user/malina)
[19:12:20] <earnestly> !source
[19:12:20] <greybot> ''. scriptname'' (or ''source scriptname'', which is not portable) reads and executes the commands from scriptname in the current shell, as opposed to a separate instance of the shell. If scriptname does not contain a slash (/), it will be searched for in $PATH.
[19:12:22] <esselfe> I'm curious
[19:12:23] <earnestly> ha
[19:12:24] <kurahaupo> Thankyou! And happy New year to you too at the appropriate hour (when I'll probably be asleep)
[19:12:26] <earnestly> !shbot
[19:12:27] <greybot> shbot runs each session in a new VM as root. Feel free to play with the bot in #evalbot. | Original: http://www.vidarholen.net/contents/evalbot/ | geirha's fork: https://gitlab.com/geirha/shbot | current triggers: /msg shbot triggers
[19:12:32] <esselfe> !about
[19:12:32] <greybot> I'm a bot. I'm written in perl. My source, factoids, and stats are at http://wooledge.org/~greybot/ . See !help for a list of my commands. git mirror https://github.com/im14/greybot
[19:13:18] <esselfe> wow 1 file!
[19:13:26] *** Joins: ChmEarl (~chmearl@user/chmearl)
[19:16:58] *** Quits: L3 (~L3@user/l3) (Quit: o/)
[19:17:04] <emanuele6> esselfe: http://gitlab.com/gierha/shbot
[19:17:10] <emanuele6> oops
[19:17:17] <emanuele6> http://gitlab.com/geirha/shbot
[19:17:33] <emanuele6> and also http://gitlab.com/geirha/shbot-initramfs
[19:18:27] *** Quits: masterkorp (~masterkor@user/masterkorp) (Ping timeout: 268 seconds)
[19:18:43] *** Joins: masterkorp (~masterkor@user/masterkorp)
[19:20:05] *** Quits: foobarfoo (~user@vps-93-95-226-254.1984.is) (Remote host closed the connection)
[19:20:59] *** Quits: masterkorp (~masterkor@user/masterkorp) (Client Quit)
[19:21:43] *** Joins: pj (~pj@ghettoforge/pj)
[19:21:45] *** Joins: masterkorp (~masterkor@user/masterkorp)
[19:22:33] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[19:23:25] *** Quits: masterkorp (~masterkor@user/masterkorp) (Client Quit)
[19:23:48] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[19:24:31] *** Joins: masterkorp (~masterkor@user/masterkorp)
[19:24:52] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[19:25:58] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[19:26:17] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[19:26:35] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[19:28:56] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[19:30:17] *** Joins: stonkey (~stonkey@user/stonkey)
[19:30:27] <wiscii> what is a "non-breaking space" ?
[19:31:10] <wiscii> i used to use alt-255 once upon a time, is that the character ?
[19:34:52] *** Joins: yeirr (~yeirr@user/yeirr)
[19:35:11] *** Quits: yeirr (~yeirr@user/yeirr) (Client Quit)
[19:35:19] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:38:36] *** Joins: B4re (~l4yer@178.239.168.223)
[19:38:40] *** Joins: dreamon (~dreamon@pd950387b.dip0.t-ipconnect.de)
[19:38:41] *** Joins: bluedust (~bluedust@117.204.154.215)
[19:39:08] *** Quits: n4dir (~user@i577BC830.versanet.de) (Remote host closed the connection)
[19:39:11] *** Quits: l4yer (~l4yer@178.239.168.223) (Ping timeout: 256 seconds)
[19:39:13] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[19:41:29] *** Joins: ablyss (~ablyss___@068-118-118-194.biz.spectrum.com)
[19:42:33] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[19:42:38] *** Quits: MenschZwoNull (~MenschZwo@p200300c8571cb700350366d9a698f89c.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[19:43:33] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[19:43:41] *** Quits: bluedust (~bluedust@117.204.154.215) (Remote host closed the connection)
[19:43:54] *** Joins: unickyll (~unickyllt@46.211.1.45)
[19:44:43] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:45:14] *** Joins: netpipe (~netpipe@user/netpipe)
[19:46:11] *** Quits: unicky (~unickyllt@46.211.241.13) (Ping timeout: 245 seconds)
[19:47:20] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[19:49:14] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[19:49:54] *** Joins: l4yer (~l4yer@84.69.191.245)
[19:50:03] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[19:50:04] *** Quits: l4yer (~l4yer@84.69.191.245) (Read error: Connection reset by peer)
[19:50:31] *** Quits: B4re (~l4yer@178.239.168.223) (Ping timeout: 268 seconds)
[19:50:33] *** Quits: dreamon (~dreamon@pd950387b.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[19:52:35] <emanuele6> # printf -v ch255 '\%03o' 255; printf '%b\n' "$ch255"
[19:52:36] <shbot> emanuele6: �
[19:52:47] <emanuele6> doesn't look like a space to me
[19:53:49] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 240 seconds)
[19:55:26] *** Joins: dfdx_ (~F@user/dfdx)
[19:57:24] *** Joins: sinaowolabi_ (~SinaOwola@160.152.107.242)
[19:58:42] *** Joins: semigloss (~semigloss@d14-69-6-230.try.wideopenwest.com)
[19:58:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[19:59:42] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:02:39] <Blondie101010> it is: " "
[20:03:03] *** Joins: dreamon (~dreamon@pd950387b.dip0.t-ipconnect.de)
[20:03:14] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[20:03:28] <kurahaupo> wiscii: A normal-width non-breaking space is code point U+00a0
[20:06:14] *** Joins: magla (~gelignite@55d465a4.access.ecotel.net)
[20:06:24] *** Joins: n4dir (~user@i577BC830.versanet.de)
[20:07:37] <Blondie101010> this is a matter of encoding
[20:07:53] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[20:08:39] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[20:09:47] <Blondie101010> I'd almost forgotten that Windows doesn't use Latin-1 by default anymore
[20:10:41] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:12:32] *** Joins: bluedust (~bluedust@117.204.154.215)
[20:13:33] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[20:14:25] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Remote host closed the connection)
[20:14:49] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::3)
[20:22:35] *** Quits: ablyss (~ablyss___@068-118-118-194.biz.spectrum.com) (Ping timeout: 268 seconds)
[20:22:59] *** Joins: ozzzo_work (~ozzzo_wor@h87.s239.verisign.com)
[20:26:00] *** Joins: skered (~dereks@user/skered)
[20:29:31] <rendar> `cp -au /mnt/a/data /data/a; cp -au /mnt/b/data /data/b` <- bash ensures that the second cp will be called only when the first cp completes, right?
[20:29:39] *** Joins: unicky (~unickyllt@46.211.13.143)
[20:30:11] <lopid> right
[20:31:28] *** Joins: drd (~drd@host-79-53-116-35.retail.telecomitalia.it)
[20:32:08] *** Quits: unickyll (~unickyllt@46.211.1.45) (Ping timeout: 252 seconds)
[20:34:31] <rendar> fine, what about `screen cp ..; cp ..` ?
[20:34:38] *** Quits: bougyman (~bougyman@user/bougyman) (Quit: ZNC 1.8.2 - https://znc.in)
[20:35:29] *** Joins: bougyman (~bougyman@user/bougyman)
[20:37:40] *** Joins: travisghansen (~travisgha@192.74.130.86)
[20:38:24] *** Quits: sdu (~doo@185.44.146.214) (Remote host closed the connection)
[20:40:17] *** Quits: drd (~drd@host-79-53-116-35.retail.telecomitalia.it) (Ping timeout: 240 seconds)
[20:40:43] <llua> it runs after screen returns
[20:40:47] *** Joins: drd (~drd@93.55.24.175)
[20:42:23] *** Joins: han-solo (~han-solo@user/han-solo)
[20:42:51] *** Quits: unicky (~unickyllt@46.211.13.143) (Ping timeout: 245 seconds)
[20:43:32] *** Quits: Inline (~Inline@aftr-37-201-240-204.unity-media.net) (Quit: Leaving)
[20:44:24] <rendar> yep, indeed
[20:44:35] <rendar> i wish to run 2 cp inside screen, is that possible?
[20:44:35] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:44:41] *** Joins: Inline (~Inline@aftr-37-201-240-204.unity-media.net)
[20:44:54] <lopid> with screen's -X option, yes
[20:46:17] <rendar> hmm, screen -X cp.. ; cp ..?
[20:46:32] *** Joins: unicky (~unickyllt@46.211.13.143)
[20:46:32] <lopid> no
[20:46:37] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 256 seconds)
[20:47:00] <rendar> well, also enclosing the 2 cp's inside a file script and run screen ./that_file
[20:47:25] <lopid> -X takes a screen command
[20:48:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[20:50:37] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[20:50:57] *** Quits: bodiccea_ (~bodiccea@user/bodiccea) (Ping timeout: 268 seconds)
[20:51:01] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[20:51:09] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Ping timeout: 256 seconds)
[20:51:20] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[20:51:22] *** Quits: BSaboia (~bsaboia@177.37.198.83) (Quit: This computer has gone to sleep)
[20:51:47] <lopid> screen -X screen bash -c 'cp …; cp …; read'
[20:52:11] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[20:52:24] <rendar> oh right, interesting
[20:52:32] *** Quits: sinaowolabi_ (~SinaOwola@160.152.107.242) (Ping timeout: 240 seconds)
[20:52:34] <lopid> the read is so it doesn't immediately close the new window. or you could send it to an existing one with "at", if you knew it was already at a shell
[20:52:39] <rendar> but that point isn't simpler put the 2 or more cp commands inside a script and screen that script?
[20:52:59] <lopid> yes
[20:53:31] <han-solo> screen -S session_name -p 0 -X stuff "cp ..; cp..;" # will that work, i vaguely remember using `stuff` for stuffs like this
[20:54:37] <lopid> stuff goes to whatever the current window is
[20:54:45] *** Quits: n4dir (~user@i577BC830.versanet.de) (Remote host closed the connection)
[20:55:03] <lopid> which you've selected with -p
[20:55:04] <rendar> han-solo, interesting thanks
[20:55:52] <rendar> screen -S session_name -p 0 -X stuff "sleep 5; touch /tmp/a; sleep 1; touch /tmp/b"
[20:55:57] <rendar> should create both files
[20:56:47] <lopid> there's no enter there
[20:56:53] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[20:56:55] <han-solo> need the ctrl+M too
[20:56:58] <han-solo> "The ^M is the keycode the ENTER key sends to the terminal. If you omit it, screen will just type ls onto your terminal but not send the ENTER key afterwards."
[20:58:17] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[20:58:48] *** Joins: remote (~self@user/hackers)
[20:58:51] <remote> hello
[20:59:06] <lopid> where was that from, han-solo?
[20:59:12] <Blondie101010> does it convert '^M' to "\r"
[20:59:18] <lopid> apparently so
[20:59:30] <lopid> but not in the man page, that i can see…
[20:59:58] *** Joins: mnemonic (~semeion@user/semeion)
[21:00:05] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[21:00:28] <han-solo> lopid: some random blog when i searched for 'stuff' command. Hold on. lemme get that
[21:00:32] <han-solo> s/on/one/
[21:00:33] <lopid> https://raymii.org/s/snippets/Sending_commands_or_input_to_a_screen_session.html ?
[21:00:39] <han-solo> https://raymii.org/s/snippets/Sending_commands_or_input_to_a_screen_session.html
[21:00:44] <han-solo> yeah...
[21:01:01] *** Quits: bluedust (~bluedust@117.204.154.215) (Ping timeout: 240 seconds)
[21:01:10] <lopid> here's me been substituting in printf \r all this time
[21:01:18] <han-solo> :)
[21:02:36] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[21:03:14] <han-solo> wait, what happens if you directly send "\r" ?
[21:03:40] <lopid> my command is executed :)
[21:03:52] <han-solo> i seem to have an old snippet lying around in keep notes
[21:03:55] <lopid> it's documented in "bind", i just didn't think it applied here
[21:04:10] <han-solo> ` for i in 0 1;do screen -S foo -p "$i" -X stuff "sleep 20\r";done; for i in 0 1;do screen -S foo -p "$i" -X stuff  $'\034' ;done`
[21:06:22] <han-solo> anyway, back to CSGO
[21:08:25] <lopid> yes
[21:10:02] *** Joins: l4yer (~l4yer@178.239.168.223)
[21:12:04] *** Joins: ferdna (~ferdna@user/ferdna)
[21:12:53] *** Joins: totenkoph (~scythe@user/totenkoph)
[21:13:56] *** Quits: drd (~drd@93.55.24.175) (Ping timeout: 252 seconds)
[21:19:59] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[21:22:44] *** Joins: thomasross (~thomasros@dyn-pppoe-142-51-227-74.vianet.ca)
[21:25:26] *** Joins: bloodfart69 (~bloodfart@131.150.105.232)
[21:27:17] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[21:30:49] *** Joins: rgrinberg (~textual@2806:101e:7:33a5:94b6:4a60:d424:26d4)
[21:31:23] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[21:34:26] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:34:44] *** Quits: docmax__ (~docmax@dynamic-077-006-116-140.77.6.pool.telefonica.de) (Remote host closed the connection)
[21:36:55] *** Quits: netpipe (~netpipe@user/netpipe) (Ping timeout: 256 seconds)
[21:39:07] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[21:39:36] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:44:33] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[21:44:36] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[21:45:55] *** Quits: myrrh (~markus@172.58.196.70) (Killed (NickServ (GHOST command used by markus_)))
[21:46:16] *** Joins: Betal (~Betal@user/betal)
[21:47:27] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:49:08] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[21:49:44] *** Quits: xx (~xx@user/xx) (Remote host closed the connection)
[21:52:00] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[21:52:34] *** Joins: myrrh (~markus@172.58.196.70)
[21:52:54] *** Quits: fstd (~fstd@xdsl-78-35-82-60.nc.de) (Read error: Connection reset by peer)
[21:52:57] *** Joins: xx (~xx@user/xx)
[21:53:04] *** Joins: fstd (~fstd@xdsl-78-35-82-60.nc.de)
[21:54:54] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:57:00] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::3) (Remote host closed the connection)
[21:57:19] *** Joins: odoood (~odoood@2601:c8:c000:c4e0::6)
[21:59:43] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[22:00:11] *** Joins: FluffyMask (~masque@user/fluffymask)
[22:04:16] *** Quits: thevishy (~Nishant@2405:201:f005:c007:bc65:cf77:420d:9a2d) (Quit: Leaving)
[22:05:03] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:09:21] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[22:09:48] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[22:10:15] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:11:39] *** Quits: han-solo (~han-solo@user/han-solo) (Read error: Connection reset by peer)
[22:13:01] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[22:13:11] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:14:33] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:14:42] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[22:15:07] *** Quits: zostj (~rue@61-231-132-82.dynamic-ip.hinet.net) (Quit: WeeChat 3.4)
[22:15:14] *** Joins: han-solo (~han-solo@103.82.184.207)
[22:16:07] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:17:00] *** Quits: han-solo (~han-solo@103.82.184.207) (Client Quit)
[22:17:21] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[22:19:08] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[22:20:17] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[22:23:42] *** Joins: han-solo (~han-solo@user/han-solo)
[22:26:00] *** Joins: sgn_ (~sgn@user/sgn)
[22:26:06] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[22:26:25] *** Joins: tccki_ (~tccki@box.webslate.co.nz)
[22:28:37] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 256 seconds)
[22:28:37] *** tccki_ is now known as tccki
[22:28:46] *** Quits: furrymcgee (~devuan@cgn-213-196-210-78.nc.de) (Quit: leaving)
[22:29:45] *** Quits: sgn (~sgn@user/sgn) (Ping timeout: 256 seconds)
[22:30:52] *** Quits: sudomann (~sudomann@66.44.58.83) (Ping timeout: 268 seconds)
[22:32:51] *** Quits: john_johnk (~Thunderbi@1.59.140.77.rev.sfr.net) (Ping timeout: 250 seconds)
[22:33:17] *** Quits: Hash (~Hash@hashsecurity.org) (Ping timeout: 240 seconds)
[22:33:35] *** Joins: pj (~pj@ghettoforge/pj)
[22:36:59] *** Joins: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:39:57] *** Quits: cornfeedhobo (~cornfeedh@user/cornfeedhobo) (Ping timeout: 256 seconds)
[22:42:06] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[22:43:55] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[22:45:00] *** Quits: rgrinberg (~textual@2806:101e:7:33a5:94b6:4a60:d424:26d4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:49:15] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[22:51:50] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Ping timeout: 252 seconds)
[22:54:40] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[22:55:34] *** Joins: Andrie (~Andrie@user/Andrie)
[22:56:43] *** Joins: jkwnki (~jkwnki@p2e5794ba.dip0.t-ipconnect.de)
[22:56:43] *** Joins: cornfeedhobo (~cornfeedh@user/cornfeedhobo)
[22:57:28] *** Joins: rgrinberg (~textual@2806:101e:7:b2bc:b9e9:b5b0:1484:bd77)
[22:58:57] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[22:59:26] *** Quits: rgrinberg (~textual@2806:101e:7:b2bc:b9e9:b5b0:1484:bd77) (Client Quit)
[22:59:28] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:00:26] *** Quits: VSpike (~johncc@163.172.164.229) (Ping timeout: 260 seconds)
[23:01:09] *** Joins: rgrinberg (~textual@2806:101e:7:b2bc:b9e9:b5b0:1484:bd77)
[23:02:07] *** Quits: rgrinberg (~textual@2806:101e:7:b2bc:b9e9:b5b0:1484:bd77) (Client Quit)
[23:03:35] *** Joins: sinaowolabi_ (~SinaOwola@160.152.107.242)
[23:03:49] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[23:04:28] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:05:09] *** Quits: brw (~bas@haring.bas.sh) (Read error: Connection reset by peer)
[23:05:35] *** Joins: brw (~bas@haring.bas.sh)
[23:06:49] *** Quits: callq (~callq@2409:4062:2d92:448:d73:1a02:e27c:1e4a) (Quit: callq)
[23:08:08] *** Quits: Alternity (~Alternity@user/alternity) (Read error: Connection reset by peer)
[23:08:34] *** Joins: Alternity (~Alternity@user/alternity)
[23:09:25] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[23:10:05] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[23:18:33] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[23:19:13] *** Joins: MenschZwoNull (~MenschZwo@p200300c8571cb700350366d9a698f89c.dip0.t-ipconnect.de)
[23:27:30] *** Quits: mnemonic (~semeion@user/semeion) (Ping timeout: 260 seconds)
[23:32:16] *** Quits: odoood (~odoood@2601:c8:c000:c4e0::6) (Quit: Leaving)
[23:32:25] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[23:34:04] *** Quits: magla (~gelignite@55d465a4.access.ecotel.net) (Quit: Stay safe!)
[23:36:20] *** Quits: bertptrs (~quassel@user/bertptrs) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:36:51] *** Joins: bertptrs (~quassel@user/bertptrs)
[23:41:34] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[23:42:22] *** Joins: akoana (~ah@user/akoana)
[23:45:37] *** Joins: mnemonic (~semeion@user/semeion)
[23:47:42] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[23:48:07] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[23:48:42] *** Joins: totenkoph (~scythe@user/totenkoph)
[23:50:18] *** Quits: fatal (~0x00@user/fatal) (Ping timeout: 276 seconds)
[23:53:32] *** Quits: MenschZwoNull (~MenschZwo@p200300c8571cb700350366d9a698f89c.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[23:53:36] *** Joins: semeion (~semeion@user/semeion)
[23:53:36] *** mnemonic is now known as Guest7561
[23:54:37] *** Quits: Guest7561 (~semeion@user/semeion) (Ping timeout: 240 seconds)
[23:55:12] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
