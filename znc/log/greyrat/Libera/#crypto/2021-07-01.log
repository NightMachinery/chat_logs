[00:12:43] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 265 seconds)
[00:15:25] *** Joins: akaWolf (~akaWolf@akawolf.org)
[00:28:33] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[00:32:55] *** Quits: sm2n (~sm2n@user/sm2n) (Read error: Connection reset by peer)
[00:33:17] *** Joins: sm2n (~sm2n@user/sm2n)
[00:37:41] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.1)
[00:41:52] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[00:45:39] *** Quits: cehteh (~ct@i6DFA8712.versanet.de) (Ping timeout: 256 seconds)
[00:50:41] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[00:56:10] *** Joins: onelegend (onelegend@wireguard/tunneler/onelegend)
[01:01:28] *** Joins: cehteh (~ct@164-69-142-46.pool.kielnet.net)
[01:06:08] *** Joins: g00fy (~g00fy@user/g00fy)
[01:07:22] *** Quits: g00fy (~g00fy@user/g00fy) (Remote host closed the connection)
[01:07:53] *** Joins: g00fy (~g00fy@user/g00fy)
[01:07:53] *** Quits: g00fy (~g00fy@user/g00fy) (Read error: Connection reset by peer)
[01:08:09] *** Joins: g00fy (~g00fy@user/g00fy)
[01:08:09] *** Quits: g00fy (~g00fy@user/g00fy) (Remote host closed the connection)
[01:08:25] *** Joins: g00fy (~g00fy@user/g00fy)
[01:08:25] *** Quits: g00fy (~g00fy@user/g00fy) (Read error: Connection reset by peer)
[01:10:34] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[01:12:15] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[01:18:38] *** Quits: stoned (~weechat@thestonedapes.com) (Quit: testing)
[01:18:55] *** Joins: God (~weechat@thestonedapes.com)
[01:19:11] *** God is now known as Hash
[01:24:45] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[01:35:35] *** Joins: mikail (~mikail@90.212.77.3)
[01:38:11] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[01:43:03] *** Quits: CryptoClub (~fafs@62.174.195.52.static.user.ono.com) (Read error: Connection reset by peer)
[01:45:04] *** Joins: CryptoClub (~fafs@62.174.195.52.static.user.ono.com)
[01:49:48] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[01:57:12] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 252 seconds)
[02:13:33] *** Quits: mikail (~mikail@90.212.77.3) (Ping timeout: 265 seconds)
[02:14:55] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[02:15:42] *** Joins: mikail (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f)
[02:18:29] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[02:25:34] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 258 seconds)
[02:28:06] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[02:30:06] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[02:31:09] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[02:31:25] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[02:32:36] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Remote host closed the connection)
[02:38:01] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[02:38:34] *** Quits: Quiark[m] (~quiarkmat@2001:470:69fc:105::16be) (Write error: Connection reset by peer)
[02:39:26] *** Joins: Quiark[m] (~quiarkmat@2001:470:69fc:105::16be)
[02:42:35] *** Quits: chomwitt (~Pitsikoko@2a02:587:dc0b:0:d8f7:cdfe:4658:bec4) (Read error: Connection reset by peer)
[02:42:38] *** Joins: laguneucl (~Pitsikoko@2a02:587:dc0b:0:d8f7:cdfe:4658:bec4)
[03:03:38] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 272 seconds)
[03:06:43] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[03:08:14] *** Joins: chomwitt (~Pitsikoko@2a02:587:dc0b:0:d8f7:cdfe:4658:bec4)
[03:10:42] *** Quits: laguneucl (~Pitsikoko@2a02:587:dc0b:0:d8f7:cdfe:4658:bec4) (Ping timeout: 240 seconds)
[03:12:44] *** Joins: akaWolf (~akaWolf@akawolf.org)
[03:12:44] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 244 seconds)
[03:12:59] *** Quits: mikail (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f) (Ping timeout: 256 seconds)
[03:15:24] *** Quits: SomeWeirdAnon (~shwn@2a02:8109:abf:ffb4:e4d7:c4d:9c1f:dab) ()
[03:17:20] *** Quits: mrlemke_ (~mrlemke@208.74.105.200) (Quit: Konversation terminated!)
[03:19:28] *** Joins: mrlemke (~mrlemke@208.74.105.200)
[03:32:28] *** Joins: Wulf4 (~Wulf@user/wulf)
[03:34:42] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[03:34:42] *** Wulf4 is now known as Wulf
[04:20:54] *** Quits: ham2 (~ham4@d8D8627D5.access.telenet.be) (Ping timeout: 272 seconds)
[04:22:07] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[04:27:08] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 244 seconds)
[04:29:41] *** Joins: kish` (~aqua@user/aqua)
[04:37:30] *** Quits: kish` (~aqua@user/aqua) (Read error: Connection reset by peer)
[04:41:56] *** Quits: ionface (~ionface@user/ionface) (Ping timeout: 265 seconds)
[04:42:06] *** Joins: ionface (~ionface@user/ionface)
[04:45:00] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[04:59:04] *** Joins: CryptoDavid (uid14990@id-14990.highgate.irccloud.com)
[05:17:16] *** Quits: hegstal (~hegstal@2a02:c7f:7604:8a00:1749:70f2:c3b4:7591) (Remote host closed the connection)
[05:31:43] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[05:35:13] *** Quits: chomwitt (~Pitsikoko@2a02:587:dc0b:0:d8f7:cdfe:4658:bec4) (Ping timeout: 256 seconds)
[05:38:42] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[05:49:23] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 256 seconds)
[05:52:19] *** Joins: andreasbuhr_ (~quassel@p549dbb4d.dip0.t-ipconnect.de)
[05:54:47] *** Quits: CryptoClub (~fafs@62.174.195.52.static.user.ono.com) (Read error: Connection reset by peer)
[05:55:10] *** Joins: pete443 (~pete@user/pete443)
[05:55:30] *** Quits: andreasbuhr (~quassel@p549dbbe1.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[05:56:11] *** Quits: pete443_ (~pete@user/pete443) (Ping timeout: 256 seconds)
[05:56:29] *** Joins: CryptoClub (~fafs@62.174.195.52.static.user.ono.com)
[05:57:02] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[06:00:44] *** Quits: Sasazuka (~Sasazuka@user/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:05:50] *** Joins: akaWolf (~akaWolf@akawolf.org)
[06:06:47] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[06:15:22] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[06:23:33] *** Joins: frost (~frost@59.71.241.179)
[06:25:02] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 272 seconds)
[06:36:27] *** Joins: menace (~someone@ppp-93-104-109-239.dynamic.mnet-online.de)
[06:37:42] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 272 seconds)
[06:38:18] *** Quits: Deknos (~someone@user/menace) (Ping timeout: 240 seconds)
[06:48:15] *** Quits: lithiumpt (~lithiumpt@217.138.203.173) (Read error: Connection reset by peer)
[06:50:31] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[07:06:08] *** Quits: Gravis (~gravis@user/gravis) (Read error: Connection reset by peer)
[07:06:20] *** Joins: Gravis (~gravis@user/gravis)
[07:07:07] *** Quits: CryptoDavid (uid14990@id-14990.highgate.irccloud.com) (Quit: Connection closed for inactivity)
[07:26:51] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[07:42:41] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 268 seconds)
[07:43:59] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[08:01:59] *** Joins: akaWolf (~akaWolf@akawolf.org)
[08:05:55] *** Joins: WarpedAI (~Warped@user/warped)
[08:06:24] *** Joins: gabriel1_ (~gabriel1@k2.ilion.info)
[08:07:28] *** Quits: gabriel1 (~gabriel1@k2.ilion.info) (Read error: Connection reset by peer)
[08:07:29] *** Quits: frost (~frost@59.71.241.179) (Quit: Ping timeout (120 seconds))
[08:08:18] *** Quits: Warped (~Warped@user/warped) (Ping timeout: 240 seconds)
[08:12:18] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 252 seconds)
[08:13:53] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[08:15:48] *** Joins: Guest62 (~Guest62@69-230-153-205.lightspeed.irvnca.sbcglobal.net)
[08:16:44] *** Quits: Guest62 (~Guest62@69-230-153-205.lightspeed.irvnca.sbcglobal.net) (Client Quit)
[08:17:14] *** Joins: ackatz (~ackatz@69-230-153-205.lightspeed.irvnca.sbcglobal.net)
[08:33:15] *** Quits: ackatz (~ackatz@69-230-153-205.lightspeed.irvnca.sbcglobal.net) (Quit: Connection closed)
[08:39:18] *** Joins: kish` (~aqua@user/aqua)
[08:44:42] *** Quits: sebbu (~sebbu@user/sebbu) (Ping timeout: 240 seconds)
[08:52:47] *** Joins: byteskep1ical (~amnesia@user/byteskeptical)
[08:55:46] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 272 seconds)
[09:01:32] *** Quits: menace (~someone@ppp-93-104-109-239.dynamic.mnet-online.de) (Quit: menace)
[09:15:30] *** Quits: WarpedAI (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[09:16:18] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[09:24:37] *** Joins: madage (~madage@user/madage)
[09:34:09] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[09:34:54] *** Joins: brcolow (~brcolow@ip68-0-136-132.tc.ph.cox.net)
[09:45:07] *** Joins: sebbu (~sebbu@user/sebbu)
[09:46:57] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[09:59:11] *** Joins: lithiumpt (~lithiumpt@217.138.203.173)
[10:01:44] *** Quits: ericonr (~ericonr@voidlinux/docs/ericonr) (Ping timeout: 258 seconds)
[10:06:34] *** Quits: CryptoClub (~fafs@62.174.195.52.static.user.ono.com) (Read error: Connection reset by peer)
[10:07:32] *** Joins: ericonr (~ericonr@voidlinux/docs/ericonr)
[10:08:24] *** Joins: CryptoClub (~fafs@62.174.195.52.static.user.ono.com)
[10:12:42] *** Quits: brcolow (~brcolow@ip68-0-136-132.tc.ph.cox.net) (Ping timeout: 240 seconds)
[10:30:06] *** Quits: byteskep1ical (~amnesia@user/byteskeptical) (Ping timeout: 258 seconds)
[10:30:41] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[10:32:42] *** Joins: qbt (~edun@user/edun)
[10:32:46] <wasamasa> I'm at the point where I'm seriously considering to build openssl with debug info
[10:32:58] <wasamasa> and gdb it
[10:35:18] <Wulf> wasamasa: why, what's wrong?
[10:35:43] <wasamasa> I cannot figure out why it signals an error when I try to hand an aes-128-gcm context auth data
[10:36:33] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[10:37:13] <Wulf> it's hard to use gcm in openssl. At least the command line tools don't really support it.
[10:38:06] <wasamasa> yeah, I've figured
[10:38:15] <wasamasa> made two test vectors work that don't use auth data
[10:38:56] <wasamasa> I know it can be made to work since ruby's openssl binding and pycryptodome support that usecase, but my binding doesn't
[10:40:25] <wasamasa> as usual, there's no useful error message
[10:40:47] <wasamasa> so the error might be beyond the EVP layer and inside the implementation
[10:44:33] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[10:58:39] <wasamasa> and the error apparently makes the library unusable, lol
[10:58:50] <wasamasa> cannot perform subsequent operations after it
[11:01:10] <wasamasa> or no, just that context
[11:01:11] <wasamasa> strange
[11:03:03] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[11:04:40] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Remote host closed the connection)
[11:09:52] <wasamasa> anyway, I'll look into this later
[11:16:47] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:19:58] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Client Quit)
[11:20:34] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:22:22] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:22:46] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:24:38] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:25:00] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[11:26:16] *** Quits: betelgeuse (~john2gb@94-225-47-8.access.telenet.be) (Client Quit)
[11:42:48] *** Joins: chomwitt (~Pitsikoko@2a02:587:dc0b:0:d8f7:cdfe:4658:bec4)
[11:59:38] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 252 seconds)
[12:03:05] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[12:03:55] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[12:05:43] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[12:15:54] *** Quits: mrlemke (~mrlemke@208.74.105.200) (Ping timeout: 272 seconds)
[12:28:37] *** Joins: PJBoy (~PJBoy@user/pjboy)
[12:29:41] *** Quits: gabriel1_ (~gabriel1@k2.ilion.info) (Read error: Connection reset by peer)
[12:31:31] *** Joins: kikijiki (~Thunderbi@user/kikijiki)
[12:31:46] *** Quits: fatal (0x00@user/fatal) (Killed (ozone (No Spam)))
[12:33:02] *** Joins: fatal (0x00@user/fatal)
[12:34:34] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[12:35:31] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[12:36:07] *** Joins: gabriel1 (~gabriel1@k2.ilion.info)
[12:36:14] *** Quits: riv (~river@tilde.team/user/river) (Quit: Leaving)
[12:36:56] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[12:38:55] *** Joins: mikail (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f)
[12:44:44] *** Quits: kikijiki (~Thunderbi@user/kikijiki) (Quit: kikijiki)
[12:45:49] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[12:46:49] *** Joins: hegstal (~hegstal@2a02:c7f:7604:8a00:8d05:aaa6:8a87:6441)
[12:48:09] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[12:48:10] *** Lord_of_Life_ is now known as Lord_of_Life
[12:48:25] *** Joins: akaWolf (~akaWolf@akawolf.org)
[13:00:38] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[13:05:27] *** Joins: frost14 (~frost@59.71.241.179)
[13:11:51] *** Quits: frost14 (~frost@59.71.241.179) (Quit: Connection closed)
[13:12:07] *** Joins: frost46 (~frost@59.71.241.179)
[13:13:18] *** Quits: frost46 (~frost@59.71.241.179) (Client Quit)
[13:13:34] *** Joins: frost24 (~frost@59.71.241.179)
[13:15:21] *** Quits: frost24 (~frost@59.71.241.179) (Client Quit)
[13:18:40] *** Joins: Guyver2 (Guyver@guyver2.xs4all.nl)
[13:27:08] *** Joins: frost (~frost@59.71.241.179)
[13:51:24] *** Joins: rtypo (~alex@user/rtypo)
[14:03:41] *** Joins: Ohlov3179 (~Ohlov3@dyndsl-095-033-061-095.ewe-ip-backbone.de)
[14:07:26] *** Quits: Ohlov317 (~Ohlov3@dyndsl-085-016-106-080.ewe-ip-backbone.de) (Ping timeout: 265 seconds)
[14:13:35] *** Joins: cecep (~weechat@dynamic-077-011-144-059.77.11.pool.telefonica.de)
[14:23:26] *** Quits: mikail (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f) (Remote host closed the connection)
[14:28:04] *** Joins: mikail (~mikail@90.212.77.3)
[15:18:44] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Read error: Connection reset by peer)
[15:19:01] *** Joins: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com)
[15:33:07] *** Quits: madage (~madage@user/madage) (Remote host closed the connection)
[15:33:24] *** Joins: madage (~madage@user/madage)
[15:35:24] *** Quits: mikail (~mikail@90.212.77.3) (Ping timeout: 272 seconds)
[15:43:18] *** Quits: MrFantastik (~Thunderbi@cpe-69-204-101-67.buffalo.res.rr.com) (Ping timeout: 252 seconds)
[15:43:57] *** Joins: mikail (~mikail@90.152.14.81)
[15:50:03] *** Quits: gabriel1 (~gabriel1@k2.ilion.info) (Ping timeout: 256 seconds)
[15:52:37] *** Joins: gabriel1 (~gabriel1@k2.ilion.info)
[16:23:17] *** Quits: CryptoClub (~fafs@62.174.195.52.static.user.ono.com) (Read error: Connection reset by peer)
[16:23:32] *** Quits: lithiumpt (~lithiumpt@217.138.203.173) (Ping timeout: 272 seconds)
[16:25:27] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[16:25:32] *** Joins: CryptoClub (~fafs@62.174.195.52.static.user.ono.com)
[16:35:11] *** Joins: Faustino50_Cat (~Faustino5@host-82-62-203-67.business.telecomitalia.it)
[16:40:01] *** Quits: ionface (~ionface@user/ionface) (Read error: Connection reset by peer)
[16:42:16] *** Joins: ionface (~ionface@user/ionface)
[16:46:07] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[16:52:27] *** Joins: lithiumpt (~lithiumpt@217.138.203.173)
[16:57:41] *** Joins: gareppa (~gareppa@user/gareppa)
[17:00:46] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 268 seconds)
[17:24:08] *** Quits: Faustino50_Cat (~Faustino5@host-82-62-203-67.business.telecomitalia.it) (Quit: Leaving)
[17:24:55] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[17:37:07] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[17:47:51] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[18:04:31] <caveman> any reason why cryptocurrencies don't use symmetric ciphers to verify ownership of wallets?  they all seem to be using public-private keys.
[18:11:12] *** Joins: acr (~acr@185.165.160.238)
[18:13:57] <acr> hi
[18:14:01] <tolarz> you want everyone to be able to pay you caveman 
[18:14:09] <acr> how to implement quantum algorithm for elliptic curves?
[18:14:12] <tolarz> but you want only yourself to be able to pay from your wallet
[18:14:16] <tolarz> this is inherently public-private
[18:14:22] *** Joins: hl (~hl@user/hl)
[18:20:40] *** Joins: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com)
[18:20:54] *** Quits: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com) (Client Quit)
[18:25:33] <caveman> tolarz: any way to make it with symmetric only?  e.g. any proof of concept example doing it?
[18:26:31] <TimMc> caveman: You want to be able to prove to the world that a payment happened. You can't do that with symmetric keys.
[18:27:02] <TimMc> (At least, that's required for public-ledger cryptocurrencies.)
[18:27:41] <TimMc> (But I have trouble imagining another type that *could* use symmetric crypto.)
[18:28:41] <TimMc> You can also abandon cryptography entirely and just have central trusted entities that assert ownership, and that's... banks.
[18:29:48] *** Joins: zro (~zro@user/zro)
[18:32:08] <caveman> i think it's possible to have an open p2p currency like bitcoin, except 100% symmetric.
[18:32:19] <cehteh> mhm .. i wonder if there are some surprising/nice cryptosystems that make uncommon use of symetric keys, like "when the key is leaked, then this thing is burned"
[18:32:41] <caveman> ^ that's what i thought of.
[18:33:39] <cehteh> but there may not much point into that, try to design one and see if that works
[18:34:03] <caveman> i plan to.  but if you design it 1st, lemme know to join your currency.
[18:34:16] <cehteh> i dont
[18:34:44] <caveman> if anyone does it, i'd like to hear about it.
[18:34:54] <ms7821> yawn
[18:35:04] <caveman> would it be interesting?  my main reason is readiness against quantom computers.
[18:35:13] <cehteh> later i am planning to do a WoT done right for my distributed filesystem (unlike this PGP trainwreck)
[18:35:33] <cehteh> but thats some way ahead
[18:36:02] <caveman> i guess a symmetric-only cryptocurrency will be very worth it as it will offer the best protection against quantum computers?
[18:36:26] <cehteh> nice guess
[18:36:44] <cehteh> is that proven somewhere?
[18:37:32] <MacGyver> Sounds an awful lot like digicash.
[18:37:32] <caveman> dunno.  i just thought of it.
[18:37:40] <int-e> caveman: Good luck overcoming the INHERENT ASYMMETRIC NATURE of signature schemes.
[18:38:10] <cehteh> (or even the opposite, is there are proof yet that quantum computers can break RSA in practice) .. everyone says/guesses so, but i dont know (never looked) if thats really feasible or just a theory
[18:38:48] <MacGyver> Since nobody has built a quantum computer doing so, no.
[18:39:08] <MacGyver> The problem is once that proof is provided it's too late.
[18:39:26] <caveman> is there a proof on the fitness of symmetric ciphers against qc?
[18:39:26] <int-e> Quantum computing is in an interesting spot where you can meaningfully say that theoretically, quantum computers can break RSA in practice.
[18:40:01] <cehteh> well you could say that for classical computing as well we dont *know* yet if there is a better factoring algorithm
[18:40:09] <int-e> (Because the latter "in practice" is really a claim about complexity, not a claim about implementability.)
[18:40:21] <MacGyver> cehteh: Yes, and for classical computing the same holds.
[18:40:42] <MacGyver> cehteh: If someone comes up with such an algorithm today and breaks RSA *in practice* with it, we're too late :P
[18:40:56] <MacGyver> cehteh: The difference is that it's not even broken in theory.
[18:41:14] <MacGyver> But then it would effectively mean the same thing.
[18:41:26] <MacGyver> Because there's no lag-time between breaking it in theory and breaking it in practice.
[18:41:57] <cehteh> personally i am amazed how long RSA works already .. its one of the oldest, there are known attacks but it was clear from the start that you can mitigate them with increasing the key length, still for 40 years or whatever there was no *real* breakthough only refinements
[18:42:19] <cehteh> plenty ther ciphers came and go within that time
[18:44:47] <cehteh> (not saying that RSA is that great by by today standards, but its well aged)
[18:44:55] <ms7821> most ciphers aren't mathematical in the same way
[18:45:09] <ms7821> AES is just moving bits around in a way we hope is hard to shortcut
[18:45:14] <piou> I wonder what cipher was considered good the longest (in the sense that, for example, AES is considered good today but not state of the art. It's still considered safe and used)
[18:47:50] <MacGyver> Well technically TDEA isn't broken yet.
[18:47:57] <Alipha> caveman: there's plenty of asymmetric algorithms which are quantum resistant: https://en.m.wikipedia.org/wiki/Post-quantum_cryptography
[18:47:58] <MacGyver> So that's probably a strong contender.
[18:48:25] <MacGyver> Not sure whether you'd consider that hack a "cipher", though.
[18:48:36] <ms7821> when was the enigma break made public?
[18:49:30] <MacGyver> In such a consideration I'd exclude pre-computing-age ciphers.
[18:49:31] <cehteh> at some point quantum cryptography might be just too complex for humans to grasp, then AI's do the work and may break ciphers without humans even knowing
[18:49:50] <cehteh> $randomscifiplot
[18:50:15] <MacGyver> cehteh: Quantum cryptography is already too complex for humans to grasp, that's why every single product doing it gets broken within months.
[18:50:18] <ms7821> it's probably between DES and 3DES then
[18:51:00] <cehteh> MacGyver: yes somehow .. but we are at the early stages i bet we find some way to understand it better, not beeing there yet
[18:51:47] <ms7821> I can't find what ciphers Crypto AG were using during their 50+ years of operation but probably not just one
[18:54:00] <cehteh> rot13 xor .. :)
[18:58:21] *** Joins: Guyver2 (Guyver@guyver2.xs4all.nl)
[19:01:42] <Alipha> caveman: though to answer your question, I've thought of a mechanism just now that seems like it could work to be a symmetric-only blockchain. You generate a random key. You use HMAC(key, "public-key") as your "public key" that people can use to give you money. Then when you need to send money, you write `transaction_msg || HMAC(HMAC(key, "send-key"), transaction_msg)`. The transaction_msg must include your
[19:01:44] <Alipha> "next public key" because then after that's on the blockchain, you publish your key to blockchain so that your "send-key" can be verified.
[19:03:05] <cehteh> question is if that improves anything over blockchains using asymetric crypto
[19:03:45] <cehteh> esp in considering there are quantum resistant async algorithms
[19:03:56] <Alipha> It doesn't
[19:05:38] *** Joins: MrFantastik (~Thunderbi@rrcs-184-74-43-235.nys.biz.rr.com)
[19:05:41] <MacGyver> I think what Alipha just describes actually comes pretty close to hash-based signatures? I wouldn't exactly call this construction symmetric, even though it has a symmetric building block at its core.
[19:06:11] <caveman> Alipha: was 1st "public-key" meant to be "private-key"?  i see two public keys.
[19:06:39] <Alipha> caveman: no
[19:06:43] <caveman> i.e. the part  ``HMAC(key, "public-key") as your "public key"''  <--  two public keys.
[19:07:16] <Alipha> caveman: "public-key" is literally the text "public-key"
[19:07:26] <caveman> oh
[19:07:58] <Alipha> var public_key = HMAC(key, "public-key");
[19:08:29] <caveman> yeah.  neat.
[19:08:48] <Alipha> And "send-key" is literally the text "send-key"
[19:08:57] <ms7821> how do miners validate it before incorporating in a block? or don't they?
[19:08:58] <Alipha> I'm just using HMAC as a KDF
[19:11:16] <int-e> Alipha: so that's an invitation to just submit a ton of garbage to the blockchain
[19:13:07] <TimMc> int-e: I think that's where transaction fees would come in.
[19:13:34] <ms7821> you can't validate anything until it's in the blockchain and the key can then be published
[19:13:54] <int-e> TimMc: the thing is that you have to include "transactions" into the blockchain without knowing whether they will eventually be invalidated (when the corresponding key is submitted as well)
[19:14:05] <TimMc> yeah...
[19:14:18] <TimMc> There's a chicken and egg problem here, isn't there.
[19:14:19] <Alipha> Miners would still do a PoW in order to put blocks on the blockchain.
[19:14:20] <int-e> but it's an interesting idea anyway
[19:15:03] <ms7821> hash-based signatures exist, but I think that's kind of cheating to get around the "symmetrical crypto" requirement
[19:15:29] <ms7821> anyway, it's funny how all caveman's galaxy brain ideas involve other people answering them
[19:16:10] <int-e> Chief Crypto Visionary
[19:16:21] <caveman> lel.  hour for adhom.
[19:17:05] <Alipha> Hm, so yeah, there is the issue that a miner doesn't know whether a transaction is valid, and so the miner has to hope that it is so that they would get a fee from it once its confirmed to be valid
[19:18:20] <Alipha> And there's no penalty for submitting invalid transactions. So yeah, there's an invitation for a lot of garbage to be added
[19:18:44] <Alipha> You could put PoW on the transactions themselves....
[19:18:51] <int-e> but it's easy, just sign the transaction and add a reputation scheme on top... waitasecond
[19:23:20] <caveman> is garbage a problem?  i see how it won't guarantee miners money from transactions that they confirm, but i think it still asymptotically guarantees them some profit as there has to be some transaction that will be confirmed among them eventually.  so perhaps it only changes profit of confirmations from being "guaranteed"-ish into more "expected" or "estimated".
[19:24:06] <int-e> caveman: have you ever heard of spam?
[19:24:08] <int-e> or ddos?
[19:24:54] <ms7821> heh
[19:29:08] <caveman> but isn't btc also vulnerable to spam/dos?
[19:29:52] <sol> its resistant 
[19:29:59] <sol> anything is if you have enough banwidth to throw at it
[19:30:02] <sol> really a moot point 
[19:30:30] <Alipha> If you want to pay miner fees for filling the blockchain with a bunch of pointless transactions
[19:31:16] <int-e> Yes, but less so. Miners can pick lucratice transactions that are validated to include in the next block... so the blockchain will not accumulate garbage without miners' profit... while in the hash-based signature scheme you get to add garbage for free.
[19:32:32] <int-e> And everyone pays for it because it's permanently on the blockchain. There may be workarounds for that if one uses (Merkle?) trees and prunes non-validated transactions? Hard to say.
[19:33:38] <int-e> The fact remains that having a two-step validation like that adds non-trivial complications.
[19:47:21] *** Joins: cuz (~user@38.140.58.234)
[19:47:29] <caveman> yeah.  plus, it will cause price inflation/deflation by dos attacks.
[19:47:44] <caveman> more obvious inflation/deflation by dos than those that use symmetric ciphers.
[19:48:23] <MacGyver> Alipha: Isn't that the very definition... no you know what, I'm not even going to bother :P
[19:48:42] <Alipha> MacGyver: lol
[19:49:38] *** Quits: cuz (~user@38.140.58.234) (Remote host closed the connection)
[19:50:40] *** Joins: mei (~mei@user/mei)
[19:50:54] *** Joins: cuz (~user@38.140.58.234)
[19:51:59] *** Joins: Guyver2_ (Guyver@guyver2.xs4all.nl)
[19:54:17] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Ping timeout: 256 seconds)
[19:54:19] *** Guyver2_ is now known as Guyver2
[19:56:40] *** Quits: acr (~acr@185.165.160.238) (Quit: Leaving)
[20:02:23] *** Quits: cuz (~user@38.140.58.234) (Read error: Connection reset by peer)
[20:02:42] *** Quits: s8n (~s8n@user/s8n) (Ping timeout: 268 seconds)
[20:02:56] *** Joins: cuz (~user@38.140.58.234)
[20:05:08] *** Joins: mrlemke (~mrlemke@208.74.105.200)
[20:05:18] <int-e> MacGyver: I took some care with my statement about garbage too :P
[20:09:08] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 252 seconds)
[20:14:30] *** Joins: SomeWeirdAnon (~shwn@2a02:8109:abf:ffb4:ec8e:146:e5e:cc24)
[20:16:50] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:29:59] *** Joins: s8n (~s8n@user/s8n)
[20:32:48] <caveman> is this the best we got today for asym. enc./dec.?   https://csrc.nist.gov/Projects/post-quantum-cryptography/round-3-submissions
[20:35:38] *** Quits: CryptoClub (~fafs@62.174.195.52.static.user.ono.com) (Read error: Connection reset by peer)
[20:37:58] *** Joins: CryptoClub (~fafs@62.174.195.52.static.user.ono.com)
[20:40:26] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[20:54:55] *** Quits: szarka (~szarka@24-124-20-18-static.midco.net) (Read error: Connection reset by peer)
[20:56:21] *** Quits: qbt (~edun@user/edun) (Ping timeout: 268 seconds)
[20:59:20] <onelegend> caveman: we got SIKE in there
[20:59:57] <onelegend> https://sike.org/
[21:00:08] <onelegend> SIDH sounds very promising
[21:01:52] <caveman> is sidh in the nist?  can't see it in round 3.
[21:03:49] *** Quits: rtypo (~alex@user/rtypo) (Read error: Connection reset by peer)
[21:06:42] <onelegend> caveman: SIDH is SIKE applied to diffie hellman
[21:07:09] <onelegend> oh
[21:07:26] <onelegend> it's in alternative candidates I believe
[21:07:53] <onelegend> fuck
[21:08:13] <onelegend> is there any replacement to diffie hellman in the finalists
[21:08:34] <onelegend> some pure key exchange algorithm 
[21:08:41] *** Quits: s8n (~s8n@user/s8n) (Ping timeout: 268 seconds)
[21:09:00] <wasamasa> don't knock on diffie hellman
[21:10:17] <onelegend> is there some variant of diffie hellman in the finalists
[21:10:44] *** Joins: szarka (~szarka@24-124-20-18-static.midco.net)
[21:10:51] *** Joins: rtypo (~alex@user/rtypo)
[21:11:32] <onelegend> https://www.esat.kuleuven.be/cosic/pqcrypto/saber/resources.html
[21:11:36] <onelegend> Saber
[21:13:12] <onelegend> tbh I don't even trust the NIST
[21:13:32] <wasamasa> another one bites the NIST
[21:14:40] *** Quits: szarka (~szarka@24-124-20-18-static.midco.net) (Read error: Connection reset by peer)
[21:26:30] <onelegend> I can't see anything to build onto DH on the PCQ websites
[21:26:37] <onelegend> maybe I'm just being dumb
[21:29:32] *** Joins: s8n (~s8n@user/s8n)
[21:39:40] *** Joins: menace (~someone@2001:a61:533:5a01:a49f:a81:6c54:19a4)
[21:39:41] *** Quits: menace (~someone@2001:a61:533:5a01:a49f:a81:6c54:19a4) (Changing host)
[21:39:41] *** Joins: menace (~someone@user/menace)
[21:42:08] <onelegend> caveman: are their any KEMs on there that can be used for a key exchange?
[21:42:24] <onelegend> something like diffie hellman
[21:44:03] <caveman> dunno.  i'm a newbie here.  i was actually asking you.
[21:44:11] *** Joins: mikail_ (~mikail@213.205.242.43)
[21:46:42] *** Quits: mikail (~mikail@90.152.14.81) (Ping timeout: 240 seconds)
[21:57:35] <onelegend> ah my mad, Saber seems to do key exchange
[21:57:38] <onelegend> https://eprint.iacr.org/2018/230.pdf
[21:57:53] <onelegend> Module LWR
[22:00:17] *** Joins: mikail__ (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f)
[22:00:58] *** Joins: g00fy (~g00fy@user/g00fy)
[22:01:54] *** Quits: mikail_ (~mikail@213.205.242.43) (Ping timeout: 240 seconds)
[22:02:23] *** Quits: mikail__ (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f) (Remote host closed the connection)
[22:02:35] *** Quits: g00fy (~g00fy@user/g00fy) (Remote host closed the connection)
[22:03:00] *** Joins: mikail__ (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f)
[22:03:05] *** Joins: g00fy (~g00fy@user/g00fy)
[22:03:05] *** Quits: g00fy (~g00fy@user/g00fy) (Remote host closed the connection)
[22:03:21] *** Joins: g00fy (~g00fy@user/g00fy)
[22:03:21] *** Quits: g00fy (~g00fy@user/g00fy) (Remote host closed the connection)
[22:03:38] *** Joins: g00fy (~g00fy@user/g00fy)
[22:03:38] *** Quits: g00fy (~g00fy@user/g00fy) (Read error: Connection reset by peer)
[22:03:48] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: leaving)
[22:03:55] *** Joins: g00fy (~g00fy@user/g00fy)
[22:03:55] *** Quits: g00fy (~g00fy@user/g00fy) (Read error: Connection reset by peer)
[22:06:21] *** Quits: mikail__ (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f) (Remote host closed the connection)
[22:09:14] *** Joins: mikail__ (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f)
[22:15:18] *** Joins: riv (~river@tilde.team/user/river)
[22:22:22] *** Joins: mouseghost (~draco@user/mouseghost)
[22:28:50] *** Joins: Sasazuka (~Sasazuka@user/sasazuka)
[22:32:05] *** Joins: Iryon (~Iryon@2a02:a31a:a045:3500:90e2:686f:e863:4359)
[22:36:21] *** Quits: mikail__ (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f) (Remote host closed the connection)
[22:37:04] *** Joins: mikail__ (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f)
[22:37:51] *** Quits: mikail__ (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f) (Remote host closed the connection)
[22:38:47] *** Joins: mikail__ (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f)
[22:40:51] *** Quits: mikail__ (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f) (Remote host closed the connection)
[22:41:19] *** Joins: mikail__ (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f)
[22:43:17] <wasamasa> I've caved in, recompiled openssl with debug symbols and judging from gdb it errors out inside the AES implementation, argh
[22:43:29] <wasamasa> so I need to do some more indirection to figure out where exactly
[22:48:07] <wasamasa> it turned out to be easier to do that in gdb than via source code
[22:49:52] <wasamasa> so it turns out you need to set auth data *after* setting up key/iv
[22:49:58] <wasamasa> fucking hell
[22:52:14] <wasamasa> somewhat wondrously, AES-128-GCM and AES-128-OCB work now, leaving AES-128-CCM
[22:52:44] <rqsd> Clear and obvious API design /s
[22:53:27] <wasamasa> I mean, it does make sense somehow
[22:53:43] <wasamasa> auth data is set up by performing an update
[22:53:53] <wasamasa> an update only works after initialization is fully done
[22:55:06] *** Joins: dolor_avis (~dolor_avi@user-5-173-11-128.play-internet.pl)
[22:56:08] *** Quits: dolor_avis (~dolor_avi@user-5-173-11-128.play-internet.pl) (Client Quit)
[22:56:15] <int-e> Designed for ease of use: 1. pull trigger. 2. bandage foot.
[23:01:50] <wasamasa> wait
[23:02:13] <wasamasa> does pycryptodome reimplement crypto in python and only rely on libtomcrypt for native code?
[23:02:18] <wasamasa> I am surprised to say the least
[23:02:50] <wasamasa> > PyCryptodome is not a wrapper to a separate C library like OpenSSL. To the largest possible extent, algorithms are implemented in pure Python. Only the pieces that are extremely critical to performance (e.g. block ciphers) are implemented as C extensions.
[23:03:08] <wasamasa> that's cool though, but it doesn't help me figuring out this mystery
[23:03:48] <ms7821> what's the mystery?
[23:04:12] *** Quits: mikail__ (~mikail@2a02:c7f:bd83:fd00:55cf:122f:957a:f66f) (Quit: Leaving)
[23:05:05] <wasamasa> how one makes CCM work
[23:05:14] <MacGyver> Well.
[23:05:18] <MacGyver> First, you'll need a goat.
[23:05:20] <wasamasa> ideally, don't
[23:05:27] <wasamasa> no goats on github
[23:05:50] <wasamasa> because the obvious and documented way of setting the message length doesn't seem to do shit
[23:06:44] <wasamasa> lol: https://github.com/pyca/cryptography/blob/main/src/cryptography/hazmat/backends/openssl/aead.py#L108-L111
[23:07:04] <wasamasa> their solution does it in a completely different way, wow
[23:07:05] <ms7821> haha
[23:07:26] <ms7821> ~openssl~
[23:07:38] <wasamasa> you know what's funny
[23:07:49] <wasamasa> the guy who handed me down this openssl binding
[23:07:55] <wasamasa> he said he would rather work with botan
[23:08:07] <wasamasa> I've later read the BSI came to the same conclusion
[23:08:14] <wasamasa> I think I understand now
[23:08:25] <wasamasa> dealing with C++ is less of a pain
[23:08:34] <int-e> wasamasa: and you laughed at him and now you need to apologize and try to be friends again?
[23:08:38] <wasamasa> I didn't
[23:08:49] <wasamasa> I just expressed surprise because I know he hates C++ as much as I do
[23:09:50] <wasamasa> this thing: https://botan.randombit.net/handbook/
[23:13:58] <wasamasa> the BSI's evaluation was that while botan is not ideal, it's a lot easier to implement custom algos in it and fix the existing ones than in the competition
[23:24:50] <wasamasa> > Newly designed Russian national hash function. Due to use of input-dependent table lookups, it is vulnerable to side channels. There is no reason to use it unless compatibility is needed.
[23:25:00] <wasamasa> > The Streebog Sbox has recently been revealed to have a hidden structure which interacts with its linear layer in a way which may provide a backdoor when used in certain ways. Avoid Streebog if at all possible.
[23:25:24] <wasamasa> https://en.wikipedia.org/wiki/Stribog
[23:26:08] <wasamasa> national ciphers are fun
[23:26:55] <sarnold> hah, cute
[23:26:57] <ms7821> oh yeah streebog is super sus
[23:27:15] <wasamasa> and yes, I've checked and that's how wikipedia chose to romanize стрибог
[23:27:27] <wasamasa> which is a GOST standard indeed
[23:27:59] <ms7821> wikipedia doesn't link to https://who.paris.inria.fr/Leo.Perrin/pi.html
[23:28:34] <wasamasa> sad
[23:29:21] <ms7821> "I have met with the alleged designer of this S-box during an ISO meeting in Paris in October 2019. He maintained his claim of randomness—and insisted that he unfortunately lost the program generating the S-box. Make of that what you will."
[23:29:59] *** Joins: betelgeuse (~john2gb@94-225-47-8.access.telenet.be)
[23:36:55] <wasamasa> yeah, I like the botan docs overall, especially those tidbits
[23:38:57] <wasamasa> > The TPM contains a RNG of unknown design or quality. If that doesn’t scare you off, you can use it with TPM_RNG which implements the standard RandomNumberGenerator interface.
[23:39:55] <sarnold> hah
[23:40:51] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 244 seconds)
[23:42:50] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
