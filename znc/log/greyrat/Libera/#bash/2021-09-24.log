[00:00:51] *** Quits: nyex (~Thunderbi@177.84.107.48) (Quit: nyex)
[00:05:00] *** Quits: Lord_Vlad (~Lord_Vlad@ptr-178-51-178-39.dyn.mobistar.be) (Quit: Leaving)
[00:06:12] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[00:06:23] *** Joins: alzgh (~alzgh@user/alzgh)
[00:08:29] *** Quits: tex (~dee@user/dix) (Quit: Konversation terminated!)
[00:08:53] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 246 seconds)
[00:09:07] *** Quits: mags (~mags@097-090-237-145.res.spectrum.com) (Ping timeout: 265 seconds)
[00:10:24] *** Joins: mags (~mags@097-090-237-145.res.spectrum.com)
[00:12:01] *** Quits: sinaowolabi (~SinaOwola@169.159.79.172) (Ping timeout: 265 seconds)
[00:12:57] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Quit: Bye)
[00:17:44] *** Parts: akoana (~ah@user/akoana) ()
[00:18:12] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[00:19:39] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[00:22:52] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:26:49] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[00:27:56] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[00:28:18] *** Joins: vysn (~vysn@user/vysn)
[00:29:25] *** Quits: adac (~adac@213-47-187-80.cable.dynamic.surfer.at) (Ping timeout: 265 seconds)
[00:37:41] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[00:38:56] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:38:59] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 246 seconds)
[00:39:50] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[00:40:16] *** Lord_of_Life_ is now known as Lord_of_Life
[00:45:19] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[00:45:51] *** Quits: aliosablack (~chomwitt@athedsl-351887.home.otenet.gr) (Ping timeout: 265 seconds)
[00:48:25] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[00:49:05] *** Joins: njitramii (~njitramii@144-027-180-159.dynamic.caiway.nl)
[00:49:35] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[00:51:45] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[00:52:23] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[00:53:02] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[00:53:06] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[00:54:34] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[00:55:18] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[00:55:35] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 252 seconds)
[00:56:15] *** Quits: henko (~henko@62-178-187-35.cable.dynamic.surfer.at) (Quit: WeeChat 3.2.1)
[00:56:20] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[00:56:51] *** Joins: n4dir (~user@i577bc9aa.versanet.de)
[00:58:54] *** Joins: bigMouth` (~user@173-163-76-245-cpennsylvania.hfc.comcastbusiness.net)
[01:00:21] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[01:02:24] *** Quits: semeion (~semeion@user/semeion) (Read error: Connection reset by peer)
[01:02:26] *** Quits: bigMouthCommie (~user@173-163-76-245-cpennsylvania.hfc.comcastbusiness.net) (Ping timeout: 246 seconds)
[01:02:45] *** Joins: semeion (~semeion@user/semeion)
[01:05:40] *** Joins: Betal (~Betal@user/betal)
[01:06:59] *** Quits: njitramii (~njitramii@144-027-180-159.dynamic.caiway.nl) (Quit: WeeChat 3.2)
[01:07:10] *** Joins: zro (~zro@user/zro)
[01:10:40] <anddam> I have lines on stdout of a command like      <foo@bar.invalid> Some words up till the end of line
[01:10:53] <anddam> how do I read email, line splitting at that first space?
[01:11:12] <greycat> Do you want to keep the angle brackets?
[01:11:41] <anddam> I figure this is some clever    read -r email, line; do some_dark_magic; done < <(exec_uber_vodoo_here)
[01:11:43] <anddam> nope
[01:11:48] <anddam> greycat: ^
[01:11:58] <greycat> while IFS='<>' read -r _ addr _; do ...; done
[01:12:24] <greycat> or if there's whitespace before the < then include space in the IFS value
[01:12:38] *** Quits: zro (~zro@user/zro) (Ping timeout: 252 seconds)
[01:13:32] <anddam> read -r _ addr line
[01:13:36] *** Quits: bgpepi (~quassel@ip-83-134-114-91.dsl.scarlet.be) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[01:13:38] <anddam> n0ice, thanks
[01:13:40] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Read error: Connection reset by peer)
[01:13:44] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Read error: Connection reset by peer)
[01:13:53] <anddam> my question was a bit confusing
[01:14:05] <anddam> how do I read email, line  =>  how do I read (email, line)
[01:14:12] <greycat> Fucking hell.
[01:14:30] <greycat> !b21
[01:14:30] <greybot> When the newbie's question is ambiguous, the proper interpretation will be whichever one makes the problem the hardest to solve.
[01:14:37] <anddam> ? seems a bit extreme
[01:14:49] <anddam> no it was right there, pretty clear, I am not used to IFS
[01:15:08] <greycat> So you want to KEEP the noise that follows the email address, but you ALSO want to trim the angle brackets, of which there could be an additional set appearing in the noise?
[01:15:19] <greycat> Then I'd do it in multiple steps.
[01:15:29] <anddam> greycat: why? it works as it is
[01:15:37] <greycat> while read -r addr noise; do addr=${addr#<} addr=${addr%>}; ...; done
[01:15:45] <anddam> oh maybe this was an XY in first place
[01:15:56] <anddam> I want to filter email for lines longer than X chars
[01:16:26] <anddam> my reasoning was "read line, if it's longer than X then echo email"
[01:17:06] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[01:20:59] *** Joins: Krail (~Krail@user/alexdelarge)
[01:21:34] *** Joins: kj (~kj@kj.aerisnetwork.net)
[01:22:19] *** Quits: netrunner (~netrunner@user/netrunner) (Quit: and just like that...)
[01:23:04] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 265 seconds)
[01:25:22] *** Krail is now known as Karloff
[01:25:26] <earnestly> anddam: mblaze has a lot of nifty tools for parsing emails
[01:25:39] *** Joins: Inhonion (~uhhh3@user/tastywiener95)
[01:27:57] <earnestly> I.e. awk 'length > 80 {print FILENAME; exit}' | maddr
[01:28:27] <earnestly> Where the awk could be better so that it's only invoked once or so
[01:28:33] <anddam> what's maddr there?
[01:28:53] <earnestly> mblaze
[01:29:00] <anddam> the plot thickens
[01:29:10] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[01:29:15] <anddam> oh I see the package
[01:29:35] <anddam> my bad, thanks
[01:30:21] *** Quits: on^ (~on@12.203.127.82) (Remote host closed the connection)
[01:33:57] <earnestly> E.g. g/mawk 'length > 80 {print FILENAME; nextfile}'
[01:34:57] <earnestly> Every awk pretty much supports nextfile, so should be safe
[01:35:30] <earnestly> (except oawk)
[01:36:36] <earnestly> Although https://www.cs.princeton.edu/~bwk/btl.mirror/index.html has nextfile too
[01:36:48] <earnestly> (now)
[01:37:09] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[01:37:28] *** Joins: keypusher (keypusher@user/keypusher)
[01:40:45] <anddam> thanks again
[01:42:16] *** Joins: noarb (~noarb@user/noarb)
[01:43:22] <earnestly> Then you can use pash to create 50 fifos in /tmp to parallise everything ;o
[01:43:30] *** Joins: prifici (~patri@user/prifici)
[01:44:08] <Seirdy> mblaze is pog
[01:44:16] <Seirdy> makes sorting mailing lists such a breeze
[01:47:17] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 252 seconds)
[01:48:26] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 260 seconds)
[01:48:53] *** Joins: nrl^ (~nrl@12.203.127.82)
[01:48:56] <anddam> Seirdy: mmm can those be sorted? given Gmail's threaded view I have long lost the appeal to read long email threads
[01:49:19] <anddam> I know there has to be a better, possibly terminal, way but never took the time to investigate
[01:50:03] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[01:51:50] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[01:52:00] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[02:00:21] *** Joins: sinaowolabi_ (~SinaOwola@160.152.40.229)
[02:06:23] *** Joins: tejr (~tejr@user/tejr)
[02:10:34] *** Quits: prifici (~patri@user/prifici) (Quit: Off to work or bed.)
[02:12:07] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[02:13:20] *** Quits: nrl^ (~nrl@12.203.127.82) (Ping timeout: 265 seconds)
[02:20:31] *** Joins: nrl^ (~nrl@12.203.127.82)
[02:22:55] <Seirdy> anddam: they should be since each file contains an in-reply-to header if it's a reply
[02:23:04] <Seirdy> all my threads show up just fine
[02:25:18] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:f459:d6f:b214:d669)
[02:29:36] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[02:32:29] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 264 seconds)
[02:37:21] *** Quits: Karloff (~Krail@user/alexdelarge) (Quit: fucktee farts)
[02:54:12] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[02:54:38] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[02:54:55] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[02:58:01] *** Quits: vysn (~vysn@user/vysn) (Remote host closed the connection)
[03:05:32] *** Joins: normskal (~normskal@101.175.64.73)
[03:09:40] *** Quits: sinaowolabi_ (~SinaOwola@160.152.40.229) (Ping timeout: 252 seconds)
[03:15:02] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:39] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:18:15] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[03:19:14] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[03:20:02] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:39] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:21:06] *** Joins: grys (~quassel@botters/gry)
[03:21:59] <grys> hello :-) i run "screen -dmS ii" and then "echo $!" but it returns no output. i expect pid of the screen that was started earlier. what's the misinterpretation here, and what's the correct procedure, please?
[03:22:39] <phy1729> !$!
[03:22:39] <greybot> $! expands to the process ID of the most recently executed background (asynchronous) command. In bash 4.4 and later this includes process substitutions.
[03:23:10] <phy1729> screen puts itself into the background, as far as bash is concerned it was a synchronous command that's terminated
[03:24:03] *** Joins: ferdna (~ferdna@user/ferdna)
[03:27:46] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[03:30:00] *** Quits: bertptrs (~quassel@user/bertptrs) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[03:30:32] *** Joins: bertptrs (~quassel@user/bertptrs)
[03:32:10] *** Joins: dstein64- (~dstein64@dannyadam.com)
[03:35:01] *** Quits: eem (~eem@200116b80f9baf002c91336c2336ab3c.dip.versatel-1u1.de) (Quit: WeeChat 3.3)
[03:35:18] *** Quits: dstein64 (~dstein64@dannyadam.com) (Ping timeout: 260 seconds)
[03:35:18] *** dstein64- is now known as dstein64
[03:39:07] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:42:46] *** Quits: normskal (~normskal@101.175.64.73) (Quit: Client closed)
[03:43:00] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[03:45:01] <twkm> so there's no $! to provide.  screen -ls is likely what you might parse, or give the session a name you can then reuse later.  #screen probably has other ideas.
[03:45:57] *** Quits: n4dir (~user@i577bc9aa.versanet.de) (Remote host closed the connection)
[03:46:38] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[03:46:51] *** Quits: thebombzen (~thebombze@587232289.guest.umich.net) (Remote host closed the connection)
[03:47:37] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 252 seconds)
[03:53:32] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:53:52] *** Joins: seninha (~seninha@user/seninha)
[04:00:05] *** Quits: Neo517 (~Neo17@node-1w7jr9ydiugdfutehkrsqwv5w.ipv6.telus.net) (Ping timeout: 264 seconds)
[04:01:17] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[04:03:07] *** Joins: ninjabuffet (~ninjabuff@user/ninjabuffet)
[04:05:28] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 265 seconds)
[04:08:15] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[04:09:37] <greycat> and when we say "puts itself in the background", what we really mean is "forks a child and then and kills itself, forcing PID 1 to adopt the orphan"
[04:10:19] <greycat> Ritual suicide and child-abandonment was really big in the '80s.
[04:11:39] *** Joins: sublim20 (~sublim20@user/sublim20)
[04:17:37] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:17:46] *** Joins: zebrag (~chris@user/zebrag)
[04:18:58] *** Quits: Bit_MCP (~Bit_MCP@99-22-255-91.lightspeed.frokca.sbcglobal.net) (Ping timeout: 252 seconds)
[04:23:11] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[04:27:14] <phogg> "This entire recipe is full of ways to harvest your dead children. If this makes you queasy, we understand." -- The Perl Cookbook
[04:27:23] *** Joins: zebrag (~chris@user/zebrag)
[04:30:20] *** Quits: neightchan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net) (Ping timeout: 246 seconds)
[04:30:22] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[04:30:24] *** Joins: arandomcomrade (~arandomco@2601:cf:0:cf3:9cf8:5af9:4723:da2b)
[04:32:48] *** Joins: neightchan (~nate@108-233-125-227.lightspeed.sntcca.sbcglobal.net)
[04:34:30] *** Joins: vlm (~vlm@user/vlm)
[04:35:45] *** Quits: arandomcomrade (~arandomco@2601:cf:0:cf3:9cf8:5af9:4723:da2b) (Changing host)
[04:35:45] *** Joins: arandomcomrade (~arandomco@user/arandomcomrade)
[04:37:16] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[04:41:45] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[04:45:44] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[04:46:04] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[04:47:33] *** Joins: sgn (~sgn@user/sgn)
[04:52:05] *** Joins: zebrag (~chris@user/zebrag)
[04:54:20] *** Quits: Zucca (~Zucca@user/zucca) (Remote host closed the connection)
[04:54:34] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[04:54:47] *** Joins: Zucca (~Zucca@user/zucca)
[04:55:03] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[05:05:46] *** Quits: nrl^ (~nrl@12.203.127.82) (Remote host closed the connection)
[05:07:45] *** Quits: mtk (~mtk@2601:185:200:72:44aa:53fe:886b:bee9) (Remote host closed the connection)
[05:09:25] *** shark is now known as sh4rk
[05:09:31] *** Joins: mtk (~mtk@2601:185:200:72:44aa:53fe:886b:bee9)
[05:09:33] *** Quits: sh4rk (~lemonade@sharkdrip.com) (Changing host)
[05:09:33] *** Joins: sh4rk (~lemonade@user/sh4rk)
[05:09:39] *** Joins: totenkoph (~scythe@user/totenkoph)
[05:09:45] *** Quits: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053) (Quit: WeeChat 3.1)
[05:10:14] <phy1729> https://github.com/CyanogenMod/android_system_extras_su/commit/5f2c65812cfedec33118bb1fd7fa7d7367246f9a
[05:12:29] *** Joins: dehhy^ (~dehhy@12.203.127.82)
[05:13:23] *** Joins: ponyofdeath (~vladi@2606:6000:cfc0:2b:9cf9:caf8:f20d:1053)
[05:13:37] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 265 seconds)
[05:13:37] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 265 seconds)
[05:15:19] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 268 seconds)
[05:17:30] *** Joins: cilly (pluto@user/cilly)
[05:17:32] <cilly> hi
[05:17:49] <cilly> Can someone help me, to convert the following string to POSIX, please:
[05:17:51] <cilly> [[ $(date +%H) == @(04|08|12|16|20) ]]
[05:18:25] <greycat> case $(date +%H) in 04|08|12|16|20) ...;; esac
[05:19:21] <cilly> hm, okay thx, another option with if statement?
[05:19:22] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[05:19:26] <greycat> Nope.
[05:20:05] <greycat> Well, technically.  You could just do  h=$(date +%H); if test "$h" = 04 || test "$h" = 08 || ...
[05:20:11] <greycat> But nobody would do that.
[05:20:22] <cilly> Yes, indeed.
[05:20:26] <cilly> greycat: thanks for helping
[05:20:42] <phy1729> greycat: you're on late
[05:20:42] <cilly> so there is no POSIX to match a regex?
[05:20:47] <greycat> Nope.
[05:21:42] <cilly> greycat: greycat: http://dpaste.com/F9CQAWTNW
[05:22:04] <cilly> This is the script for rsnapshot to prevent race conditions.
[05:22:12] <phy1729> ![-a
[05:22:12] <greybot> The classic test command's -a and -o operators, as well as controlling precedence using ( and ) cause many problems and ambiguities, are not portable, and are unsafe with user input. They are all marked as obsolescent by POSIX. If coding for Bash, Ksh, or Zsh, [[ is *highly* preferred over [. See: http://pubs.opengroup.org/onlinepubs/9699919799/utilities/test.html#tag_20_128_16
[05:22:31] *** Joins: peterrooney (~peter@2604:3d08:1583:7400:c91d:4334:6a47:d57c)
[05:22:54] <cilly> Hm
[05:23:20] <phy1729> since rsnapshot is in the path you set, there's no need for $RSNAPSHOT
[05:24:02] *** Joins: danielcamiel (~danielcam@pa49-199-1-115.pa.vic.optusnet.com.au)
[05:24:14] <cilly> phy1729: thanks, I removed -a with ] && [
[05:26:02] *** Joins: semeion (~semeion@user/semeion)
[05:33:46] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 252 seconds)
[05:35:29] *** Quits: jos1 (~jos3@dyndsl-091-248-054-037.ewe-ip-backbone.de) (Ping timeout: 264 seconds)
[05:39:55] <cilly> http://dpaste.com/ALYA4BDBC
[05:40:21] <cilly> phy1729 & greycat ^^^^ the updated script, hopefully POSIX conform, now
[05:40:55] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[05:41:37] *** Quits: greknod2 (~grek@ppp121-45-140-199.bri-pow-que-bras31.tpg.internode.on.net) (Quit: Ping timeout (120 seconds))
[05:41:55] *** Joins: greknod2 (~grek@ppp121-45-140-199.bri-pow-que-bras31.tpg.internode.on.net)
[05:42:12] <cilly> thanks for helping, greycat & phy1729
[05:42:58] <greycat> !check
[05:42:59] <checkbot> greycat: Looks good to me
[05:43:21] <cilly> thx :D
[05:44:18] *** Joins: Everything (~Everythin@37.115.210.35)
[05:44:56] <cilly> I stumbled over this, cause rsnapshot didn't get executed cause of lock files and race conditions.
[05:45:38] <cilly> I searched the whole web and I wonder, why there you'll find only the version with 4 different crons running hourly, daily, weekly and monthly
[05:47:42] *** Joins: keypusher (keypusher@user/keypusher)
[05:48:20] *** Joins: jos1 (~jos3@dyndsl-178-142-070-070.ewe-ip-backbone.de)
[05:50:26] *** Joins: gnoo (~gnoo@user/gnoo)
[05:50:38] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[06:00:59] *** Joins: karakedi (~eAC53C340@user/karakedi)
[06:09:32] *** Joins: n4dir (~user@88.130.152.23)
[06:16:22] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:27:32] *** Quits: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net) (Quit: WeeChat 3.2.1)
[06:27:34] *** Quits: winstonsmith (~winstonsm@109.201.152.179) (Remote host closed the connection)
[06:28:04] *** Joins: winstonsmith (~winstonsm@109.201.152.164)
[06:30:45] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[06:33:51] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 265 seconds)
[06:34:16] *** Quits: jos1 (~jos3@dyndsl-178-142-070-070.ewe-ip-backbone.de) (Ping timeout: 252 seconds)
[06:38:14] *** Quits: danielcamiel (~danielcam@pa49-199-1-115.pa.vic.optusnet.com.au) (Ping timeout: 252 seconds)
[06:39:53] *** Quits: greycat (~greg@209.142.155.49) (Quit: Bye)
[06:40:01] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.2.1)
[06:40:18] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[06:45:52] *** Joins: jos1 (~jos3@dyndsl-091-096-041-231.ewe-ip-backbone.de)
[06:47:31] *** Quits: anton (anton@tloks.com) (Ping timeout: 252 seconds)
[06:54:37] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[06:55:10] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[06:55:58] *** Quits: dermoth (~dermoth@user/dermoth) (Ping timeout: 260 seconds)
[06:58:18] *** Joins: calla (~calla@modemcable025.9-177-173.mc.videotron.ca)
[06:59:13] *** Joins: anton (anton@tloks.com)
[07:01:08] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[07:01:35] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Client Quit)
[07:02:22] *** Quits: calla (~calla@modemcable025.9-177-173.mc.videotron.ca) (Client Quit)
[07:07:28] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[07:08:20] *** Joins: dermoth (~dermoth@user/dermoth)
[07:08:27] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[07:08:46] *** Joins: ano (~ano@user/ano)
[07:13:22] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[07:17:16] *** Quits: arandomcomrade (~arandomco@user/arandomcomrade) (Quit: Leaving)
[07:17:44] *** Quits: semeion (~semeion@user/semeion) (Read error: Connection reset by peer)
[07:21:05] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 264 seconds)
[07:33:38] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[07:33:38] *** Joins: pj (~pj@ghettoforge/pj)
[07:34:36] *** Joins: semeion (~semeion@user/semeion)
[07:37:18] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[07:37:37] *** Joins: prifici (~prifici@user/prifici)
[07:41:02] *** Quits: austin987 (~null@100.42.98.196) (Ping timeout: 265 seconds)
[07:46:54] <pocketprotector> what is /usr/local/bin/bash/csv?
[07:47:13] <pocketprotector> well, its a binary file that cant execute is what it is, but how do i use it?
[07:47:48] <pocketprotector> this => /usr/local/lib/bash/csv: Mach-O 64-bit dynamically linked shared library x86_64
[07:47:58] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 252 seconds)
[07:49:00] <pocketprotector> oh i figured it out
[07:49:09] <pocketprotector> enable -f /usr/local/lib/bash/csv csv
[07:52:08] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:53:25] <jetchisel> loadable builtin
[07:55:01] *** Joins: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com)
[07:56:23] *** Quits: JesseW (~nuc@c-73-149-22-184.hsd1.ma.comcast.net) (Ping timeout: 252 seconds)
[07:57:06] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 260 seconds)
[08:01:20] <pocketprotector> i cant tell you how valuable that builtin is
[08:02:43] *** Joins: Weather7774 (~Weather77@124-170-107-90.dyn.iinet.net.au)
[08:05:56] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[08:09:28] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[08:11:16] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[08:14:03] *** Joins: vishal (~vishal@fedora/vishal)
[08:16:53] *** Quits: LiftLeft (~LiftLeft@172.83.47.118) (Ping timeout: 264 seconds)
[08:18:20] *** Quits: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com) (Ping timeout: 252 seconds)
[08:19:01] *** Joins: sublim20 (~sublim20@user/sublim20)
[08:23:40] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:28:47] *** Quits: timj (~timj@user/timj) (Ping timeout: 252 seconds)
[08:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[08:30:28] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[08:31:33] *** Joins: austin987 (~null@2603-8080-2700-d768-4243-f882-6b63-9b2c.res6.spectrum.com)
[08:39:05] *** Quits: dumbsharka (~amirvince@user/amirvincent64) (Ping timeout: 264 seconds)
[08:39:21] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[08:41:01] *** Joins: Carp (~rue@1-162-40-185.dynamic-ip.hinet.net)
[08:42:32] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:f459:d6f:b214:d669) (Read error: Connection reset by peer)
[08:43:07] *** Joins: timj (~timj@user/timj)
[08:47:35] *** Quits: cilly (pluto@user/cilly) (Killed (NickServ (GHOST command used by cillybabe)))
[08:49:57] *** Joins: aliosablack (~chomwitt@2a02:587:dc0a:5800:12c3:7bff:fe6d:d374)
[08:52:36] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:9109:bf6f:fcac:be27)
[08:54:50] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[08:55:17] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[08:55:38] *** Quits: aliosablack (~chomwitt@2a02:587:dc0a:5800:12c3:7bff:fe6d:d374) (Quit: Leaving)
[08:55:53] *** Joins: aliosablack (~chomwitt@2a02:587:dc0a:5800:12c3:7bff:fe6d:d374)
[08:56:47] *** Quits: aliosablack (~chomwitt@2a02:587:dc0a:5800:12c3:7bff:fe6d:d374) (Client Quit)
[08:59:36] *** Joins: ryzendar (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[09:01:40] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (Ping timeout: 252 seconds)
[09:06:42] *** Joins: fdan (~fdan@103.215.168.1)
[09:16:21] *** Joins: dd_ (dd_@gateway/vpn/protonvpn/dd/x-95652672)
[09:17:17] <dd_> q. how could I change my name in all the files in a direcoty and it's subdirectories?
[09:17:29] <dd_> from Tom to Thom
[09:18:39] <jetchisel> define "change my name" ?
[09:19:38] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 265 seconds)
[09:21:37] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:21:39] *** Joins: chomwitt (~chomwitt@2a02:587:dc0a:5800:12c3:7bff:fe6d:d374)
[09:22:55] <dd_> it's all text, chsange all occurances of Tom to Thom...
[09:23:16] *** Quits: n4dir (~user@88.130.152.23) (Remote host closed the connection)
[09:24:27] <jetchisel> you mean the file name, file content? or the user name?
[09:26:19] <dd_> only the contents of the files
[09:26:23] <jetchisel> user name == file owner name
[09:26:34] <jetchisel> !faq replace > dd_
[09:26:35] <greybot> dd_: https://mywiki.wooledge.org/BashFAQ/021 -- How can I replace a string with another string in a variable, a stream, a file, or in all the files in a directory?
[09:26:53] <dd_> ty
[09:27:43] *** Joins: wuseman (~wuseman@81-234-120-192-no68.tbcn.telia.com)
[09:27:43] *** Quits: wuseman (~wuseman@81-234-120-192-no68.tbcn.telia.com) (Changing host)
[09:27:43] *** Joins: wuseman (~wuseman@user/wuseman)
[09:27:47] <llua> should prob run grep -r Tom dir  and see if it yields any false positives
[09:32:39] *** Joins: aramtsamtsam (~Thunderbi@2001:861:388a:5600:1710:c3dc:c776:df35)
[09:36:55] *** Quits: aramtsamtsam (~Thunderbi@2001:861:388a:5600:1710:c3dc:c776:df35) (Ping timeout: 252 seconds)
[09:37:36] *** Joins: normskal (~normskal@101.175.64.73)
[09:38:55] <geirha> might also want to exclude repository1-c.txt from that
[09:41:22] *** Quits: prifici (~prifici@user/prifici) (Quit: leaving)
[09:41:23] *** Joins: rememberYou (~someone@user/rememberyou)
[09:41:49] *** Quits: polve (~polve@twcitalia/polve) (Ping timeout: 252 seconds)
[09:45:07] *** Joins: polve (~polve@twcitalia/polve)
[09:45:15] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 265 seconds)
[09:45:38] *** Joins: besnn (~besnn@user/besnn)
[09:48:22] *** Joins: wuseman (~wuseman@81-234-120-192-no68.tbcn.telia.com)
[09:48:23] *** Quits: wuseman (~wuseman@81-234-120-192-no68.tbcn.telia.com) (Changing host)
[09:48:23] *** Joins: wuseman (~wuseman@user/wuseman)
[09:53:11] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[09:53:38] *** Joins: t0kie (~t0kie@user/t0kie)
[09:54:53] *** Joins: JesseW (~nuc@user/jessew)
[09:57:14] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[09:59:56] *** Quits: t0kie (~t0kie@user/t0kie) (Quit: Leaving)
[10:01:11] *** Quits: gnoo (~gnoo@user/gnoo) (Quit: gnoo)
[10:01:23] *** Joins: gnoo (~gnoo@user/gnoo)
[10:01:44] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 252 seconds)
[10:02:56] *** Quits: fdan (~fdan@103.215.168.1) (Quit: Client closed)
[10:03:55] *** Joins: wuseman (~wuseman@81-234-120-192-no68.tbcn.telia.com)
[10:03:56] *** Quits: wuseman (~wuseman@81-234-120-192-no68.tbcn.telia.com) (Changing host)
[10:03:56] *** Joins: wuseman (~wuseman@user/wuseman)
[10:04:06] *** Joins: vysn (~vysn@user/vysn)
[10:07:25] *** Joins: extern (~archer@141.226.59.248)
[10:08:08] *** Joins: tobybl (~tobybl@31.111.35.255)
[10:10:14] *** Joins: aramtsamtsam (~Thunderbi@94.239.102.102)
[10:10:32] *** Quits: aramtsamtsam (~Thunderbi@94.239.102.102) (Client Quit)
[10:12:10] *** Joins: ^wuseman (~wuseman@81-234-120-192-no68.tbcn.telia.com)
[10:12:10] *** Quits: ^wuseman (~wuseman@81-234-120-192-no68.tbcn.telia.com) (Changing host)
[10:12:10] *** Joins: ^wuseman (~wuseman@user/wuseman/x-1147134)
[10:12:11] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 252 seconds)
[10:16:16] *** Joins: lavaball (felix@31.204.155.215)
[10:17:37] *** Quits: chomwitt (~chomwitt@2a02:587:dc0a:5800:12c3:7bff:fe6d:d374) (Ping timeout: 252 seconds)
[10:18:01] *** Joins: damidu (~damien@2a02:2788:834:209:f483:1865:7ed2:edec)
[10:21:18] *** Quits: ih8wndz (ih8wndz@mail.zero.svr.trnkmstr.com) (Ping timeout: 260 seconds)
[10:21:43] *** Joins: ih8wndz (ih8wndz@mail.zero.svr.trnkmstr.com)
[10:23:37] *** Quits: ^wuseman (~wuseman@user/wuseman/x-1147134) (Ping timeout: 252 seconds)
[10:23:38] *** Quits: austin987 (~null@2603-8080-2700-d768-4243-f882-6b63-9b2c.res6.spectrum.com) (Ping timeout: 260 seconds)
[10:24:05] *** Quits: richardm75 (~richardm7@2600:8801:c507:2900:9415:d4dc:8724:c586) (Ping timeout: 264 seconds)
[10:24:35] *** Quits: damidu (~damien@2a02:2788:834:209:f483:1865:7ed2:edec) (Quit: Leaving)
[10:25:56] *** Quits: dd_ (dd_@gateway/vpn/protonvpn/dd/x-95652672) (Ping timeout: 252 seconds)
[10:26:04] *** Joins: wernerf (~wernerf@p200300d89f362b00ecd67331b3dd1479.dip0.t-ipconnect.de)
[10:26:11] *** Joins: wuseman (~wuseman@81-234-120-192-no68.tbcn.telia.com)
[10:26:11] *** Quits: wuseman (~wuseman@81-234-120-192-no68.tbcn.telia.com) (Changing host)
[10:26:11] *** Joins: wuseman (~wuseman@user/wuseman)
[10:26:20] *** wernerf is now known as wernerfred
[10:27:50] *** Joins: sinaowolabi_ (~SinaOwola@160.152.40.229)
[10:29:47] *** Quits: stevenm_ (~stevenm@user/stevenm) (Ping timeout: 252 seconds)
[10:34:30] *** Joins: rendar (~rendar@user/rendar)
[10:36:34] *** Quits: GilP (~GilP@igld-84-229-254-240.inter.net.il) (Quit: Leaving)
[10:39:04] *** Joins: chomwitt (~chomwitt@2a02:587:dc0a:5800:12c3:7bff:fe6d:d374)
[10:39:27] *** Quits: rtjure (~rtjure@bras-79-132-17-74.comnet.bg) (Ping timeout: 240 seconds)
[10:40:44] *** Joins: dd_ (1000@72.36.54.199)
[10:47:31] *** Joins: stevenm (~stevenm@stevenm.keele.netcentral.co.uk)
[10:49:31] *** Quits: skered (~dereks@user/skered) (Ping timeout: 252 seconds)
[10:51:07] *** Joins: node1 (~node1@user/node1)
[10:51:53] <node1>  ${TOKEN+x}   << What does +x do here?
[10:52:17] <emanuele6> !pe > node1
[10:52:18] <greybot> node1: Parameter Expansion expands parameters: "$foo", "$1". You can use it to perform string or array operations: "${file%.mp3}", "${0##*/}", "${files[@]: -4}". They should *always* be quoted. See: http://mywiki.wooledge.org/BashFAQ/073 and "Parameter Expansion" in man bash. Also see http://wiki.bash-hackers.org/syntax/pe.
[10:52:30] *** Joins: goldfish (~goldfish@user/goldfish)
[10:53:17] <emanuele6> # printf '${TOKEN+x} is: _%s_' "${TOKEN+x}" # node1
[10:53:19] <shbot> emanuele6: ${TOKEN+x} is: __
[10:53:26] *** Quits: stevenm (~stevenm@stevenm.keele.netcentral.co.uk) (Ping timeout: 252 seconds)
[10:53:26] <emanuele6> # TOKEN=something; printf '${TOKEN+x} is: _%s_' "${TOKEN+x}" # node1
[10:53:28] <shbot> emanuele6: ${TOKEN+x} is: _x_
[10:53:38] <emanuele6> # TOKEN=; printf '${TOKEN+x} is: _%s_' "${TOKEN+x}" # node1
[10:53:39] <shbot> emanuele6: ${TOKEN+x} is: _x_
[10:53:52] <emanuele6> # TOKEN=; printf '${TOKEN+x} is: _%s_' "${TOKEN:+x}" # node1
[10:53:54] <shbot> emanuele6: ${TOKEN+x} is: __
[10:54:26] *** Quits: mtk (~mtk@2601:185:200:72:44aa:53fe:886b:bee9) (Ping timeout: 260 seconds)
[10:54:38] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[10:54:38] <emanuele6> node1: if TOKEN is set, expand to "x", otherwise expand to nothing
[10:54:58] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[10:55:07] <emanuele6> ${TOKEN:+x} is: if TOKEN is set or equal to the empty string, expand to "x", otherwise expand to nothing
[10:55:14] *** Joins: sublim20 (~sublim20@user/sublim20)
[10:55:49] *** Quits: dd_ (1000@72.36.54.199) (Ping timeout: 265 seconds)
[10:57:13] <node1> emanuele6, i don't understand what you did
[10:57:26] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[10:58:14] <node1> If TOKEN is variable having value. Then ?
[10:58:31] <emanuele6> then it expands to nothing...
[10:58:38] <emanuele6> sike
[10:58:51] <emanuele6> i mean, if it has a value, then it expands to x
[10:58:55] <emanuele6> otherwise to nothing
[10:59:00] <emanuele6> as you can see in the examples
[10:59:11] <node1> TOKEN=AVRWA22JXDBJTAHO; echo ${TOKEN+x}
[10:59:31] *** Joins: adac (~adac@212-41-238-132.static.upcbusiness.at)
[10:59:45] <node1> It returns me x
[10:59:51] <emanuele6> yes
[11:00:05] <node1> okay
[11:00:38] <emanuele6> if TOKEN was unset, it would have run echo without arguments
[11:00:55] *** Joins: frostwork (~frostwork@user/frostwork)
[11:01:15] <node1> okay thank you emanuele6
[11:01:45] <emanuele6> node1: i showed you a factoid that links to a wiki page where all the parameter expansions are explained with examples if you didn't notice by the way
[11:04:08] *** Quits: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net) (Remote host closed the connection)
[11:04:23] *** Joins: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com)
[11:07:45] *** Joins: whaa (~whaa@c-75-67-72-65.hsd1.ma.comcast.net)
[11:08:06] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[11:08:24] <node1> ok checking.
[11:08:26] *** Joins: TheArchitect (~GodMode@user/h4x0r)
[11:08:46] *** Joins: stevenm (~stevenm@stevenm.keele.netcentral.co.uk)
[11:21:26] *** Quits: sinaowolabi_ (~SinaOwola@160.152.40.229) (Ping timeout: 265 seconds)
[11:21:41] *** Joins: dd_ (dd_@gateway/vpn/protonvpn/dd/x-95652672)
[11:26:50] *** Joins: shad (~shad@user/shad)
[11:27:00] *** Joins: TomyWork (~TomyLobo@p200300e80f06af002d052333a5643d14.dip0.t-ipconnect.de)
[11:29:19] *** Joins: brelod (~me@90.244.150.142)
[11:30:54] *** Joins: mongy (~mongy@user/mongy)
[11:34:29] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[11:34:58] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[11:36:13] *** Joins: testuser321 (~wandering@115.187.42.95)
[11:37:24] *** Joins: tejr (~tejr@user/tejr)
[11:38:25] <extern> s
[11:38:29] *** Parts: extern (~archer@141.226.59.248) (WeeChat 3.2.1)
[11:38:31] *** Joins: extern (~archer@141.226.59.248)
[11:38:41] *** Joins: ViRoN2 (~ViRoN@ptr-9z74i85qa250a52z7ed.18120a2.ip6.access.telenet.be)
[11:39:11] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[11:39:35] *** Joins: earnestly (~earnest@user/earnestly)
[11:41:48] *** Joins: ConstantDesc (~textual@195.224.201.178)
[11:45:43] *** Quits: ViRoN2 (~ViRoN@ptr-9z74i85qa250a52z7ed.18120a2.ip6.access.telenet.be) (Quit: Leaving)
[11:46:03] *** Joins: ViRoN (~ViRoN@ptr-9z74i85qa250a52z7ed.18120a2.ip6.access.telenet.be)
[11:46:14] *** Quits: node1 (~node1@user/node1) (Ping timeout: 260 seconds)
[11:46:22] *** Quits: ViRoN (~ViRoN@ptr-9z74i85qa250a52z7ed.18120a2.ip6.access.telenet.be) (Client Quit)
[11:49:12] *** Joins: bluxxer (~bluxxer@2a01:cb15:db:a200:d6f8:29ff:fe9c:b988)
[11:49:26] *** Joins: gnoo_ (~gnoo@user/gnoo)
[11:49:54] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 276 seconds)
[11:49:57] *** Quits: testuser321 (~wandering@115.187.42.95) (Ping timeout: 265 seconds)
[11:50:35] *** Joins: mozgalom (~mozgalom@ipnet-gw.157.157.97.111.simnet.is)
[11:50:43] *** Joins: testuser321 (~wandering@115.187.42.95)
[11:57:22] *** mozgalom is now known as bomb-on
[11:59:05] *** Quits: bomb-on (~mozgalom@ipnet-gw.157.157.97.111.simnet.is) (Read error: Connection reset by peer)
[11:59:19] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 252 seconds)
[12:00:10] <TomyWork> undefined reference to `s'
[12:00:32] *** Quits: ConstantDesc (~textual@195.224.201.178) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:11:05] *** Joins: sinaowolabi_ (~SinaOwola@160.152.40.229)
[12:13:18] *** Quits: Inhonion (~uhhh3@user/tastywiener95) (Ping timeout: 260 seconds)
[12:14:19] *** Joins: mozgalom (~mozgalom@ipnet-gw.157.157.97.111.simnet.is)
[12:14:29] *** mozgalom is now known as bomb-on
[12:15:14] *** Quits: Caffeinated (~Caffeine@user/alexdelarge) (Remote host closed the connection)
[12:17:56] *** Joins: xx (~xx@user/xx)
[12:19:03] <xx> I want to comment a part of a multiline command, but when I do it like this https://0x0.st/-YKh.sh it doesn't work
[12:19:31] <Soliton> assign to an array instead.
[12:19:45] *** Joins: ConstantDesc (~textual@195.224.201.178)
[12:20:22] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[12:20:45] *** Joins: Caffeinated (~Caffeine@user/alexdelarge)
[12:22:10] *** Joins: node1 (~node1@user/node1)
[12:23:13] <geirha> xx: like this: http://ix.io/3zNZ/bash
[12:24:31] <xx> that indeed looks nice, I'll see if it works for me
[12:25:16] <xx> isn't "${args[@]}" going to break though, because it is quoted and so the command will think it's just one option, instead of many options?
[12:25:36] <xx> I always did something like: cmd $opts
[12:25:50] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:26:09] <Soliton> !faq 5
[12:26:09] <greybot> https://mywiki.wooledge.org/BashFAQ/005 -- How can I use array variables?
[12:26:17] *** Joins: eem (~eem@200116b80f9af9005859f405ac9b3681.dip.versatel-1u1.de)
[12:28:36] <geirha> !$@
[12:28:36] <greybot> The difference between $@ and $*: "$@" (quoted) expands to each positional parameter as its own argument: "$1" "$2" ... while "$*" expands to the single argument "$1c$2c..." where c is the first character of IFS. You almost always want "$@". The same goes for arrays: "${array[@]}" or "${array[*]}". Unquoted $* and $@ are undefined; DO NOT use.
[12:31:11] *** Joins: prifici (~patri@user/prifici)
[12:36:28] *** extern is now known as lex_luther
[12:36:50] *** Quits: sinaowolabi_ (~SinaOwola@160.152.40.229) (Ping timeout: 265 seconds)
[12:38:09] *** eem is now known as ironMoth
[12:42:49] *** lex_luther is now known as babayaga
[12:46:27] *** Joins: keypushe- (keypusher@user/keypusher)
[12:46:42] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[12:47:41] *** Joins: sublim20 (~sublim20@user/sublim20)
[12:48:27] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[12:49:30] *** keypushe- is now known as keypusher
[12:49:40] *** Quits: kyr (~kyr@167.71.50.12) (Remote host closed the connection)
[12:49:58] *** Joins: kyr (~kyr@167.71.50.12)
[12:50:00] *** Joins: Atque (~Atque@user/atque)
[12:50:32] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[12:51:34] *** Quits: mixfix41 (~homefame@user/mixfix41) (Ping timeout: 260 seconds)
[12:52:51] *** ironMoth is now known as eem
[12:53:31] *** Quits: eem (~eem@200116b80f9af9005859f405ac9b3681.dip.versatel-1u1.de) (Changing host)
[12:53:31] *** Joins: eem (~eem@user/eem)
[12:54:37] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[12:55:04] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[13:01:58] *** Quits: wuseman (~wuseman@user/wuseman) (Ping timeout: 265 seconds)
[13:02:44] *** Quits: b0b (~bob@user/b0b) (Quit: o/)
[13:03:12] *** Joins: b0b (~bob@user/b0b)
[13:03:46] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[13:07:00] *** Joins: thiras (~thiras@user/thiras)
[13:10:17] <jetchisel> !faq complex > xx
[13:10:18] <greybot> xx: https://mywiki.wooledge.org/BashFAQ/050 -- I'm trying to put a command in a variable, but the complex cases always fail!
[13:10:40] *** Joins: seninha (~seninha@user/seninha)
[13:14:54] *** Joins: wuseman (~wuseman@90-227-25-99-no68.tbcn.telia.com)
[13:14:54] *** Quits: wuseman (~wuseman@90-227-25-99-no68.tbcn.telia.com) (Changing host)
[13:14:54] *** Joins: wuseman (~wuseman@user/wuseman)
[13:20:04] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[13:21:26] *** Joins: drd (~drd@93-42-69-115.ip85.fastwebnet.it)
[13:23:35] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 252 seconds)
[13:27:23] *** Joins: nikita[m]1 (~nikitasos@2001:470:69fc:105::1:86)
[13:29:05] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[13:29:49] *** Quits: rememberYou (~someone@user/rememberyou) (Remote host closed the connection)
[13:30:49] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[13:32:40] *** Quits: ponies (~ponies@203.111.95.26) (Quit: Lost terminal)
[13:36:25] *** Joins: ravan (~ravan@user/ravan)
[13:37:41] *** Joins: alzgh (~alzgh@user/alzgh)
[13:38:05] *** Parts: nikita[m]1 (~nikitasos@2001:470:69fc:105::1:86) ()
[13:39:42] *** Joins: seninha (~seninha@user/seninha)
[13:41:15] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving...)
[13:42:03] *** Joins: ravan (~ravan@user/ravan)
[13:45:57] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 265 seconds)
[13:48:38] *** Quits: wernerfred (~wernerf@p200300d89f362b00ecd67331b3dd1479.dip0.t-ipconnect.de) (Quit: Client closed)
[13:50:58] *** Quits: drd (~drd@93-42-69-115.ip85.fastwebnet.it) (Ping timeout: 252 seconds)
[13:51:23] *** Quits: ConstantDesc (~textual@195.224.201.178) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:51:40] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[13:51:59] *** Joins: ConstantDesc (~textual@195.224.201.178)
[13:52:09] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[13:52:44] *** Joins: ravan (~ravan@119.160.2.205)
[13:52:44] *** Quits: ravan (~ravan@119.160.2.205) (Changing host)
[13:52:44] *** Joins: ravan (~ravan@user/ravan)
[13:56:03] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.2.1)
[13:58:31] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[13:59:42] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[14:02:16] *** Joins: StathisA_ (~StathisA@178-147-35-19.haap.nym.cosmote.net)
[14:02:58] *** Quits: StathisA (~StathisA@178-147-7-208.haap.nym.cosmote.net) (Ping timeout: 260 seconds)
[14:03:50] *** Joins: cousin_luigi (~luigi@user/cousin-luigi/x-8293588)
[14:03:52] <cousin_luigi> Greetings.
[14:05:00] * cousin_luigi needs to extract the first two characters of a variable and store them into another variable: is there an easier way than invoking cut ?
[14:05:15] *** Joins: gnoo (~gnoo@user/gnoo)
[14:05:18] <geirha> "${var:0:2}"
[14:05:45] *** Quits: gnoo_ (~gnoo@user/gnoo) (Ping timeout: 276 seconds)
[14:06:00] *** Joins: remirol (~lorimer@user/lorimer)
[14:06:00] *** Quits: lorimer (~lorimer@user/lorimer) (Killed (NickServ (GHOST command used by remirol)))
[14:06:10] *** remirol is now known as lorimer
[14:08:09] <cousin_luigi> geirha: Lovely, thanks.
[14:09:49] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[14:10:30] *** Joins: wwilliam (~Wiilliam@user/wwilliam)
[14:11:45] <wwilliam> nabq can anyone assist with auditd?
[14:12:43] *** Joins: Alexander-47u (~Alexander@37.17.216.145)
[14:12:58] <Alexander-47u> hi guys, how can I grep all files that DONT contain a specific string
[14:14:03] <Alexander-47u> my command starts something like this   for x in `grep -rl "\[Route("`; do echo $x; done
[14:14:09] <geirha> find . -type f ! -exec grep -q 'specific string' {} \; -print
[14:14:14] <geirha> !for`
[14:14:14] <greybot> Never do this: for x in $(command) or `command` or $var. for-in is used for iterating arguments, not (output) strings. Instead, use a glob (eg. *.txt), arrays (eg. "${names[@]}") or a while-read loop (eg. while read -r line). See http://mywiki.wooledge.org/BashPitfalls#pf1 and http://mywiki.wooledge.org/DontReadLinesWithFor
[14:14:25] <Alexander-47u> but instead of echo, I want to see which files do not contain a specific string
[14:14:49] <geirha> find . -type f ! -exec grep -q '\[Route(' {} \; -print
[14:15:50] <Alexander-47u> i need to start lik ethis
[14:16:05] <Alexander-47u> for x in `grep -rl "\[Route("`; do .. inverse grep some string
[14:16:18] <Patsie> Alexander-47u: you're not listening... listen to geirha
[14:16:21] <wwilliam> They told you not to use for loop for that
[14:16:29] <Alexander-47u> need to find all files that contain route, but not some other string
[14:16:31] <geirha> If you want IDIOTIC, BROKEN shell code, go somewhere else. Try stack overflow
[14:16:36] <cousin_luigi> :D
[14:16:41] <wwilliam> ha ha han!!!
[14:17:14] <Alexander-47u> e.g. need to find all files containing "route" but excluding "bashnerdz"
[14:17:15] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:17:17] <Alexander-47u> :D
[14:17:23] <wwilliam> !xy
[14:17:23] <greybot> http://mywiki.wooledge.org/XyProblem -- "I want to do X, but I'm asking how to do Y..."
[14:19:00] <geirha> find . -type f -exec awk '/\[route\(/{found=1} /bashnerdz/{found=0;exit} END {if (!found) exit(1)}' {} \; -print
[14:21:45] *** Joins: mithrin (~mithrin@188-167-233-152.dynamic.chello.sk)
[14:22:34] <Alexander-47u> thansk , doesnt work though
[14:22:46] <Soliton> !doesntwork
[14:22:46] <greybot> Saying something "doesn't work" helps neither you or us. Explain the result you *want* or *expect*, what you are *doing* and *how* it is failing. Copy/paste the commands you use and the errors they produce. Consider set -x to get more information on what is happening.
[14:23:20] <mithrin> Hey, I have column of some strings, How to put them into variable and then use them with grep to compare with output of another command?
[14:23:24] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[14:23:48] <Soliton> how should grep compare?
[14:23:55] <mithrin> namely I have several volumes with names such as 'vol_36802c7f21b67b9d498b017cc6263e7d
[14:23:55] <mithrin> ' and i want to exclude them from output of command 'heketi-cli topology info'
[14:24:03] *** Joins: ravan (~ravan@user/ravan)
[14:24:28] <Soliton> so it's just a single line?
[14:24:32] <mithrin> no
[14:24:35] <mithrin> many volumes
[14:24:52] <mithrin> i have list of them saved in text file
[14:25:09] <Soliton> grep -f textfile ...
[14:25:24] <mithrin> thanks
[14:25:30] <Soliton> probably want -F too.
[14:25:54] *** Joins: xiongxin (~quassel@119.123.100.167)
[14:27:40] *** Joins: wernerf (~wernerf@p200300d89f362b00ecd67331b3dd1479.dip0.t-ipconnect.de)
[14:27:56] <geirha> # printf '%s\n' foo 'but excludeme' > file1; printf '%s\n' foo bar > file2; find . -type f -exec awk '/foo/{found=1} /excludeme/{found=0;exit} END{if(!found)exit(1)}' {} \; -print
[14:27:57] <shbot> geirha: ./file2
[14:28:16] <geirha> Alexander-47u: works, see? it found file2 which contains "foo", but does not contain "excludeme"
[14:30:19] <Alexander-47u> this also works
[14:30:32] <Alexander-47u> for x in `grep -rl "word1"`; do grep -L "word2" $x; done
[14:30:48] <Soliton> with the right data there is a chance that it does, sure.
[14:30:56] <Soliton> or that it does something else.
[14:31:03] <Soliton> !crap
[14:31:03] <greybot> The overwhelming majority of bash scripts, code, tutorials, and guides on the Internet are crap. Sturgeon was an optimist.
[14:31:47] <Soliton> it also goes through the files twice for no reason.
[14:32:11] <Alexander-47u> O_O i am just trying to clean some output man, not earn the medal for best bash command of the year xD
[14:32:25] <Alexander-47u> thanks for the input though
[14:32:47] <Soliton> sure, it's tough to use a solution that was provided.
[14:32:48] <pj> Alexander-47u: that command is actually rather dangerous.  You should never try to parse the output of a command with a for loop that way.
[14:32:53] <Soliton> don't push yourself too hard.
[14:33:25] <Alexander-47u> I know, but the solution didnt work. and instead of wasting time discussing, I just use grep twice so I can continue my work now.
[14:33:55] <Soliton> why even come here?
[14:34:11] <pj> insert bullet, aim af foot, pull trigger ... it's a good way to test fire your gun, too.
[14:35:00] <Soliton> you don't care for correctness, you don't care for the advice given, might just as well continue cobbling stuff together yourself.
[14:35:17] <Alexander-47u> @Soliton, my initial question was very clear "hi guys, how can I grep all files that DONT contain a specific string"
[14:35:22] <Alexander-47u> the answer could have simply been
[14:35:25] <Alexander-47u> use the -L flag
[14:35:30] <Alexander-47u> and I say, thanks buddy
[14:35:33] <Alexander-47u> and move along xD
[14:35:46] <Soliton> grep simply does not do what you want.
[14:36:15] <Soliton> a simple awk program does. who knows what you did so it doesn't work.
[14:37:32] *** Quits: wuseman (~wuseman@user/wuseman) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[14:39:24] *** Joins: Adoi (~Adoi@user/adoi)
[14:40:05] *** Quits: wernerf (~wernerf@p200300d89f362b00ecd67331b3dd1479.dip0.t-ipconnect.de) (Quit: Client closed)
[14:41:46] *** Quits: VoidNoir0 (~VoidNoir0@72.80.203.52) (Quit: Connection closed)
[14:42:10] *** Quits: shad (~shad@user/shad) (Ping timeout: 260 seconds)
[14:42:12] <tirnanog> mithrin: grep -vFf textfile
[14:42:13] <mithrin> another stupid question. If I have text file containing list of volumes, how to input this file into some command as argument? i.e. glusterd volume delete volumes.txt
[14:42:24] <mithrin> tirnanog, thank, I did exactly that and it was what i wanted
[14:42:54] <Soliton> mapfile -t args < file; cmd "${args[@]}"
[14:42:58] <tirnanog> mapfile -t args < newline-separated-argumenst.txt; some_command "${args[@]}"
[14:44:29] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[14:44:44] *** Quits: eem (~eem@user/eem) (Quit: WeeChat 3.3)
[14:45:19] *** Joins: eem (~eem@user/eem)
[14:45:24] <mithrin> hmm, that only took first line
[14:45:57] <Soliton> # printf %s\\n foo bar baz > file; mapfile -t args < file; echo cmd "${args[@]}"
[14:45:58] <shbot> Soliton: cmd foo bar baz
[14:46:11] <geirha> perhaps the command only accept one volume at a time?
[14:46:19] <mithrin> its possible
[14:46:35] <cousin_luigi> bbl
[14:46:36] *** Parts: cousin_luigi (~luigi@user/cousin-luigi/x-8293588) ()
[14:47:09] *** Quits: Adoi (~Adoi@user/adoi) (Quit: Leaving)
[14:47:21] <Soliton> # printf %s\\n foo bar baz > file; mapfile -t args < file; for arg in "${args[@]}"; do echo cmd "$arg"; done
[14:47:23] <shbot> Soliton: cmd foo
[14:47:23] <shbot> Soliton: cmd bar
[14:47:23] <shbot> Soliton: cmd baz
[14:47:33] <Soliton> !faq 1
[14:47:33] <greybot> https://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
[14:48:01] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[14:49:57] *** Quits: eem (~eem@user/eem) (Client Quit)
[14:50:11] *** Joins: eem (~eem@user/eem)
[14:51:42] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[14:52:20] *** Joins: ravan (~ravan@user/ravan)
[14:52:26] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[14:54:33] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[14:54:46] *** Quits: supernovah (~supernova@mail.ijk.nz) (Ping timeout: 260 seconds)
[14:55:10] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[14:56:18] *** Joins: supernovah (~supernova@mail.ijk.nz)
[15:07:36] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2.1)
[15:10:55] *** Joins: wuseman (~wuseman@90-227-25-99-no68.tbcn.telia.com)
[15:10:56] *** Quits: wuseman (~wuseman@90-227-25-99-no68.tbcn.telia.com) (Changing host)
[15:10:56] *** Joins: wuseman (~wuseman@user/wuseman)
[15:11:34] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 260 seconds)
[15:18:38] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[15:25:28] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[15:26:05] *** Joins: ravan (~ravan@user/ravan)
[15:26:27] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[15:27:01] *** Joins: ravan (~ravan@user/ravan)
[15:27:14] *** Quits: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee) (Remote host closed the connection)
[15:27:47] *** Joins: Asmodee[T] (~Asmodee@gateway/tor-sasl/asmodee)
[15:27:57] *** Quits: ConstantDesc (~textual@195.224.201.178) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:29:25] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[15:30:50] *** Joins: Crescendo (~Crescendo@user/crescendo)
[15:31:10] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 260 seconds)
[15:32:14] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[15:34:22] *** Quits: xiongxin (~quassel@119.123.100.167) (Ping timeout: 252 seconds)
[15:35:05] *** Joins: xiongxin (~quassel@113.116.35.121)
[15:36:51] *** Quits: dre (~dre@2001:8003:c932:c301:a33d:f011:dc0c:a672) (Remote host closed the connection)
[15:38:38] *** Joins: besnn (~besnn@user/besnn)
[15:38:50] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[15:38:52] *** Joins: Gooey (~gooey@2001:a62:1405:be01:380a:3741:b56e:adf9)
[15:39:32] *** Joins: ravan (~ravan@119.160.2.205)
[15:39:32] *** Quits: ravan (~ravan@119.160.2.205) (Changing host)
[15:39:32] *** Joins: ravan (~ravan@user/ravan)
[15:44:51] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 265 seconds)
[15:46:34] *** Joins: shad (~shad@user/shad)
[15:46:37] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[15:47:27] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[15:53:04] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[15:54:52] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving...)
[16:06:56] *** Quits: joo (~joo@fsf/member/joo--) (Ping timeout: 252 seconds)
[16:07:44] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:149b:27d3:9ff3:846a)
[16:07:44] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:149b:27d3:9ff3:846a) (Changing host)
[16:07:44] *** Joins: skapata (~Skapata@user/skapata)
[16:10:35] *** Quits: wwilliam (~Wiilliam@user/wwilliam) (Quit: Konversation terminated!)
[16:13:04] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[16:14:08] *** Joins: sublim20 (~sublim20@user/sublim20)
[16:14:19] *** Joins: earendel (uid498179@user/earendel)
[16:15:58] *** Quits: YHVH (~yhvh@2601:982:8300:8090:40fa:b80a:ec6f:cc0e) (Ping timeout: 260 seconds)
[16:16:42] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Quit: ZNC 1.8.2 - https://znc.in)
[16:17:56] *** Joins: drd (~drd@93-42-69-115.ip85.fastwebnet.it)
[16:20:05] *** Quits: babayaga (~archer@141.226.59.248) (Quit: WeeChat 3.2.1)
[16:20:07] *** Joins: wwilliam (~Wiilliam@user/wwilliam)
[16:21:39] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[16:23:04] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:23:22] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[16:26:02] <xx> it would be really helpful if https://mywiki.wooledge.org/BashFAQ/050 actually listed how to write things properly for every example of writing things improperly
[16:26:16] <xx> because right now it just says "don't do this" but doesn't tell you how to rewrite it
[16:26:24] *** Joins: ConstantDesc (~textual@195.224.201.178)
[16:26:37] <Soliton> which example are you wondering about?
[16:27:45] <sixwheeledbeast> the way I read it all examples in 1 are how not to do and the rest are examples of  what should be done
[16:27:49] *** Joins: YHVH (~yhvh@2601:982:8300:8090:213a:8f75:6baa:833e)
[16:28:28] *** Joins: gry (~quassel@botters/gry)
[16:28:34] <xx> Soliton: I have lots of runcmd() { if ((debug)); then echo "$@"; fi; "$@"; }
[16:28:52] <gry> is there a bash command for 'check whether this file exists. if it doesn't exist, wait for an external app to make it' without a manual loop?
[16:29:09] <Soliton> !upload > gry
[16:29:10] <greybot> gry: If you're asking "How can I find all the files that have been uploaded recently?" then you're probably in deep trouble. The server side can't tell when a file is finished uploading unless the client renames it or uploads an "all done" file afterward.
[16:29:49] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[16:29:58] <xx> or that redirs=">/dev/null 2>&1" I also have lots of those and it works despite the example saying it is broken
[16:30:09] <Soliton> xx: by itself that is not broken but as it says there you can't put shell code as arguments.
[16:30:41] <Soliton> if redirs=">/dev/null 2>&1" works then you have bigger issues. there must be code injection involved.
[16:30:48] <xx> I agree with the premise, variables should hold data not code, but the examples don't immediatelly follow with how to write it correctly
[16:30:59] <tirnanog> strictly speaking, it is broken.
[16:31:17] <tirnanog> # set -- -e; echo "$@"
[16:31:18] <Soliton> because there is no trivial equivalent.
[16:31:19] <shbot> tirnanog: no output
[16:31:30] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[16:31:42] *** Joins: loki_val (~crabbedha@user/crabbedhaloablut)
[16:31:48] <tirnanog> besides, it doesn't necessarily make it clear where an argument begins and ends.
[16:32:00] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Ping timeout: 276 seconds)
[16:32:46] <tirnanog> for debugging, printf would be better. or something like: local args=("$@"); declare -p args
[16:38:06] <Soliton> the only equivalent solution for treating arguments as code is eval or similar and that's not good to suggest either...
[16:38:50] <tirnanog> indeed. if one is able to expand redirs in that fashion and have it "work", it's not a good thing.
[16:39:30] <tirnanog> as mentioned, there must be code injection at play.
[16:44:21] *** Joins: nyex (~Thunderbi@177.84.107.26)
[16:45:30] *** Quits: xiongxin (~quassel@113.116.35.121) (Read error: Connection reset by peer)
[16:46:46] *** Joins: xiongxin (~quassel@119.123.102.171)
[16:47:48] *** Joins: stwerp (~sjt015@sub137-102.bucknell.edu)
[16:48:01] *** Joins: daidoji70 (~daidoji@104-52-250-5.lightspeed.gnvlsc.sbcglobal.net)
[16:49:58] <daidoji70> in bash if I have a while loop and its backgrounding a bash function that's writing to stdout and then that's being piped to something like 'split' can those writes to stdout fail? like while : ; do my_bash_function & done | split --filter'echo \$FILE'; wait
[16:50:55] <geirha> the wait will fail at least
[16:51:05] <daidoji70> or should that succeed (just with large wait times for contention maybe)?
[16:51:06] <daidoji70> oh why is that?
[16:51:23] <daidoji70> because the loop never terminates you mean?
[16:51:40] <geirha> because wait only waits for direct children. Your functions are grand children
[16:51:40] <daidoji70> yeah I guess I wrote that off the cuff. If it does terminate though that should work right?
[16:52:12] <geirha> { while ...; do f & done; wait; } | split ...
[16:52:29] <daidoji70> how are they not direct children?
[16:52:46] <geirha> because each part of a pipeline runs in a subshell, and a subshell is a child process
[16:52:47] *** Joins: dumbsharka (~amirvince@user/amirvincent64)
[16:53:58] *** Quits: tobybl (~tobybl@31.111.35.255) (Ping timeout: 265 seconds)
[16:54:36] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[16:54:44] <geirha> you really do need an end condition for your while loop though
[16:54:45] <daidoji70> oh, so you can background processes and then exit normally as long as you do it in a pipe?
[16:54:53] <daidoji70> geirha, yeah for sure
[16:55:08] <daidoji70> because those are backgrounded in sub shells and not the parent?
[16:55:18] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[16:55:21] <gry> Soliton: it is not an upload it is an app on the same server. just not the same app as the bash script that'll need this file
[16:55:24] <daidoji70> hmm maybe that's what I'm doing wrong
[16:55:27] <geirha> daidoji70: right
[16:55:36] <Soliton> gry: same issue.
[16:55:39] <daidoji70> geirha, thanks.  I guess I never realized that distinction
[16:55:44] *** daidoji70 is now known as daidoji
[16:56:01] <gry> Soliton: how can i watch and wait for the 'all done' file creation?
[16:56:09] <Soliton> gry: a file appears when you open it for writing. you have no clue when it is finished writing.
[16:56:37] <gry> Soliton: i can't write it myself, i am waiting for another app to write 'all done' file
[16:57:08] <edk> you could use inotifywait or something
[16:57:08] <gry> Soliton: i want to just wait for it to change from 'does not exist' to 'it exists'; the file size doesn't matter
[16:57:16] <Soliton> it creates and 'all done' file? ok that works then.
[16:57:31] <Soliton> well, just write a simple loop and check for that file.
[16:58:01] <Soliton> while sleep 1; do [[ -e file ]] && break; done  or something
[16:59:16] <tirnanog> or use an event monitoring system, though that becomes a platform-specific concern e.g. inotify-tools for linux.
[17:00:38] <chiselfuse> Why doesn't this output a staircase? Shouldn't the Line Feed character without a carriage return just move the cursor down? Or does the TTY line discipline mess with it?     echo -ne "foo\x0abar\n"
[17:01:09] <geirha> \x0a and \n is the same byte
[17:01:41] <emg> chiselfuse: you'd have to mess with tty settings, read stty(1)
[17:01:56] <emg> chiselfuse: or, use vertical tab \v
[17:02:06] <emg> which moves down to the next line
[17:02:30] *** Quits: Weather7774 (~Weather77@124-170-107-90.dyn.iinet.net.au) (Read error: Connection reset by peer)
[17:02:53] <emg> (also I'd highly recommend using printf instead of echo, echo is not portable and even within a given version of bash can have different behaviors based on compile-time settings)
[17:03:01] <tirnanog> also, man ascii.
[17:03:43] <emg> looks like     stty -onlret      could change your terminal:   * [-]onlret    newline performs carriage return     from stty(1)
[17:03:55] <emg> now, back to the beginning
[17:04:04] <emg> chiselfuse: what are you trying to do?
[17:05:47] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[17:05:51] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[17:06:17] <chiselfuse> I am trying to put a logging mechanism in a bunch of silent .sh files, so that when each is executed it outputs "Executing foo.sh", when one of them sources another though I made it indent it and say "     sourcing bar.sh". Now I want bar.sh to say "executing bar.sh" but for it to remain indented.
[17:06:31] <chiselfuse> I think your \v will work for this.
[17:07:37] <rj1> a
[17:07:42] <chiselfuse> So it sort of has to be aware of how far it was indented by its parent, if you know what I mean.
[17:07:52] *** Quits: Alexander-47u (~Alexander@37.17.216.145) (Ping timeout: 252 seconds)
[17:08:18] <tirnanog> !inotifywait
[17:08:18] <greybot> inotifywait is a shell interface to the Linux inotify API for filesystem events. inotifywait isn't safe for robust scripts because it can't output nul delimiters. Better cross-platform alternatives are watchdog (python) and System.IO.FileSystemWatcher (mono/.NET) which both support inotify, kqueue, Windows fs events, etc. https://github.com/rvoicilas/inotify-tools/
[17:09:05] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 252 seconds)
[17:09:38] *** Quits: bluxxer (~bluxxer@2a01:cb15:db:a200:d6f8:29ff:fe9c:b988) (Ping timeout: 256 seconds)
[17:09:38] <chiselfuse> That's nice, but I want it to output to the current TTY, now logging needed.
[17:09:46] <chiselfuse> s/now logging/no logging/
[17:09:48] <tirnanog> !forget inotifywait
[17:09:48] <greybot> OK, tirnanog
[17:10:00] <tirnanog> !learn inotifywait is a shell interface to the Linux inotify API for filesystem events. Cross-platform alternatives include watchdog (python) and System.IO.FileSystemWatcher (mono/.NET), which both support inotify, kqueue, Windows fs events, etc. https://github.com/rvoicilas/inotify-tools/
[17:10:00] <greybot> OK, tirnanog
[17:10:27] <tirnanog> (the nul delimiter limitation may have been true at the time it was written but not now)
[17:11:11] *** Joins: karakedi (~eAC53C340@user/karakedi)
[17:12:09] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[17:12:59] *** Joins: kj (~kj@beta.aerisnetwork.net)
[17:14:28] <gry> if [ lsof "foo" ]; then echo '1'; fi # says syntac error near 'then', whats wrong?
[17:14:49] <Soliton> !if[
[17:14:49] <greybot> [ is NOT part of the `if' syntax. It's a normal, ordinary COMMAND, like grep and rm. Like `if grep ..', `if [' just checks its exit status. And just like `ifgrep`, `if[` is wrong. http://mywiki.wooledge.org/BashGuide/TestsAndConditionals
[17:15:34] <Soliton> lsof does not sound like a suitable tool for your previous issue.
[17:16:37] <emanuele6> > says syntac error near 'then', whats wrong?
[17:16:41] <emanuele6> is this bash?
[17:16:42] <geirha> the introduction of lsof makes it sound like the app doesn't create a "completed" file after all
[17:17:27] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[17:17:52] *** Joins: legola (~legola@46.235.100.27)
[17:17:56] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[17:18:19] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 252 seconds)
[17:18:33] <emanuele6> i have tried bash and dash and i don't get a shell syntax error near 'then', i get (as i would expect) a [ error that complains about `lsof' not being a valid operator
[17:18:42] <emanuele6> # if [ lsof "foo" ]; then echo '1'; fi
[17:18:43] <shbot> emanuele6: bash: [: lsof: unary operator expected
[17:19:19] <geirha> # something; then
[17:19:21] <shbot> geirha: bash: syntax error near unexpected token `then'
[17:19:46] <emanuele6> the code is wrong anyway as Soliton said, but you probably also have another error in your code that caused that error and you didn't show
[17:19:51] <geirha> probably did if[ instead of if [ too
[17:20:13] <tirnanog> it's not going to end well, at any rate.
[17:20:28] <emanuele6> yeah, probably either that or if [ lsof ... ]; then; echo ...
[17:20:38] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Goodbye)
[17:20:48] <emanuele6> no, actually that would not say near "theen"
[17:21:00] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[17:21:11] <emanuele6> if[ says near "then"
[17:22:25] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[17:22:43] <grys> oh i got if[ from https://linuxhandbook.com/if-else-bash/
[17:22:58] <grys> Soliton, ya i got previous issue sorted, now going after a next phase
[17:23:21] <geirha> that book is garbage
[17:23:27] <emanuele6> # if [ something = something ]; then echo hi; fi
[17:23:28] <shbot> emanuele6: hi
[17:23:31] <emanuele6> # if[ something = something ]; then echo hi; fi
[17:23:33] <shbot> emanuele6: bash: syntax error near unexpected token `then'
[17:23:36] <grys> # if [ lsof "foo" ]; then echo '1'; fi
[17:23:37] <shbot> grys: bash: [: lsof: unary operator expected
[17:23:46] <grys> exactly what i have
[17:24:12] <geirha> well, it's wrong on multiple levels
[17:24:44] <geirha> perhaps start with explaining the goal
[17:24:50] <earendel> # if lsof "foo"; then echo '1'; fi
[17:24:52] <shbot> earendel: bash: lsof: command not found
[17:25:18] <grys> at the moment is should print '1' if file 'foo' is in use, i.e. lsof lists at least one output
[17:25:41] <geirha> That's the Y, not the X
[17:25:44] <geirha> !xy
[17:25:44] <greybot> http://mywiki.wooledge.org/XyProblem -- "I want to do X, but I'm asking how to do Y..."
[17:25:57] <grys> <earendel> # if lsof "foo"; then echo '1'; fi
[17:25:58] <grys> works ok
[17:26:35] <emanuele6> grys: that is not what you requested though
[17:26:39] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (Quit: leaving)
[17:27:02] <emanuele6> and Soliton had already proposed you that solution in the factoid
[17:27:59] *** Quits: terrorjack (~terrorjac@ec2-54-95-39-30.ap-northeast-1.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[17:28:18] <grys> this solution and http://mywiki.wooledge.org/BashGuide/TestsAndConditionals are in agreement, yes?
[17:28:42] <emanuele6> `if lsof "foo"; then echo '1'; fi' means "print 1 if lsof exits with an exit code of 0", not necessarely "print 1 if lsof lists at least one output"
[17:29:09] <geirha> grys: it does not agree with the previous goal of detecting when an upload was complete
[17:29:20] <grys> yes, it's two different purposes
[17:29:36] <grys> two different scripts
[17:29:36] <earendel> but is there an error near then?
[17:29:47] <grys> at the moment no
[17:30:02] <emanuele6> grys: did you understand why there was?
[17:30:03] <grys> `if lsof "foo"; then echo '1'; fi` doesn't have errors
[17:30:14] <grys> i understood why [] was wrong ok
[17:30:17] <earendel> are there any issues "at the moment"?
[17:30:25] <grys> no issues now
[17:30:33] <earendel> aha.
[17:30:35] <grys> what was wrong with 'then' i didn't get, not really
[17:30:54] <Soliton> # if[ ... ]; then
[17:30:55] <grys> if[ 1 == 1 ]; then echo hi; fi
[17:30:56] <shbot> Soliton: bash: syntax error near unexpected token `then'
[17:30:57] <emanuele6> `if[' means "call the if[ command", not start an if block that runs "["
[17:31:08] <grys> if 1; then echo hi; fi
[17:31:11] <grys> # if 1; then echo hi; fi
[17:31:12] <shbot> grys: bash: 1: command not found
[17:31:18] <grys> # if ls; then echo hi; fi
[17:31:20] <shbot> grys: hi
[17:31:26] <emanuele6> # ifls; then echo hi; fi
[17:31:28] <shbot> emanuele6: bash: syntax error near unexpected token `then'
[17:31:30] <grys> i don't grok it when theres two things wrong
[17:31:38] <earendel> in other words put a space after if
[17:31:43] <grys> ok
[17:32:07] <Soliton> keywords need to be... words so they need whitespace around them.
[17:32:16] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[17:32:21] <geirha> # help if | head -n1
[17:32:22] <shbot> geirha: if: if COMMANDS; then COMMANDS; [ elif COMMANDS; then COMMANDS; ]... [ else COMMANDS; ] fi
[17:32:27] *** Quits: ConstantDesc (~textual@195.224.201.178) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:33:11] <Soliton> (the [] there means optional not the test command.)
[17:33:13] <grys> ok, many thanks
[17:34:56] <earendel> Soliton: how is it not the test command?
[17:35:40] <Soliton> weird question. by the intention of the author?
[17:35:41] <geirha> the [ and ] in the SYNOPSIS
[17:35:52] *** Quits: wuseman (~wuseman@user/wuseman) (Quit: ZNC 1.8.2+deb2build1 - https://znc.in)
[17:35:55] <earendel> aha.
[17:36:02] <earendel> ok then.
[17:36:39] <emanuele6> that's from BNF syntax i think
[17:36:46] <emanuele6> https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_form
[17:37:30] <emanuele6> [ ] is commonly used to describe optionality in unix man pages
[17:38:14] *** Quits: adac (~adac@212-41-238-132.static.upcbusiness.at) (Ping timeout: 252 seconds)
[17:38:24] <djph> and then there's angle brackets for required.
[17:38:49] <djph> ... and then there's the people who read them as literals, and wonder why their system exploded.
[17:39:12] *** Joins: kj- (~kj@beta.aerisnetwork.net)
[17:39:34] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:91a8:7cf7:7645:b3d2)
[17:39:53] *** Quits: xiongxin (~quassel@119.123.102.171) (Ping timeout: 265 seconds)
[17:39:56] *** Joins: xiongxin_ (~quassel@113.116.35.121)
[17:41:41] *** Joins: joo (~joo@87-49-45-224-mobile.dk.customer.tdc.net)
[17:41:41] *** Quits: joo (~joo@87-49-45-224-mobile.dk.customer.tdc.net) (Changing host)
[17:41:41] *** Joins: joo (~joo@fsf/member/joo--)
[17:41:42] *** Joins: wuseman (~wuseman@90-227-25-99-no68.tbcn.telia.com)
[17:41:43] *** Quits: wuseman (~wuseman@90-227-25-99-no68.tbcn.telia.com) (Changing host)
[17:41:43] *** Joins: wuseman (~wuseman@user/wuseman)
[17:42:01] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 252 seconds)
[17:42:54] *** Joins: Alexander-47u (~Alexander@a44107.upc-a.chello.nl)
[17:44:38] *** Joins: vysn (~vysn@user/vysn)
[17:44:38] <Soliton> i'd say angle brackets is for "read what's inside and replace the whole thing with something fitting for your context." whether it's required or not depends whether it is in square brackets or not.
[17:45:16] <djph> Soliton: as in 'locate <filename> '
[17:45:54] *** Joins: Alexander-47u2 (~Alexander@37.17.216.145)
[17:46:19] <Soliton> yeah, you have to replace <filename> with the filename you want to locate and it's a mandatory argument since it's not in square brackets.
[17:47:19] <Soliton> in bash documentation it's rather written as all uppercase. like the COMMANDS part above.
[17:47:30] <djph> right
[17:48:35] *** Quits: Alexander-47u (~Alexander@a44107.upc-a.chello.nl) (Ping timeout: 265 seconds)
[17:50:34] *** Joins: keypusher (keypusher@user/keypusher)
[17:53:11] *** Joins: hseg (~hseg@185.120.124.14)
[17:54:11] <hseg> hi. am generating an ffmpeg script to be piped to bash (via -f -), however, bash seems to only run the first command. any ideas why?
[17:54:11] *** Quits: sinaowolabi (~SinaOwola@102.134.114.1) (Ping timeout: 252 seconds)
[17:54:37] *** Quits: sinaowolabi_ (~SinaOwola@102.134.114.1) (Ping timeout: 252 seconds)
[17:54:46] <chiselfuse> hseg: Show us the command.
[17:55:01] <geirha> !faq ffmpeg
[17:55:01] <greybot> https://mywiki.wooledge.org/BashFAQ/089 -- I'm reading a file line by line and running ssh or ffmpeg, only the first line gets processed!
[17:55:58] <hseg> that fixed it, thanks
[17:56:26] <hseg> was guessing it was sth like that
[17:56:47] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[17:57:53] *** Joins: terrorjack (~terrorjac@ec2-35-181-134-114.eu-west-3.compute.amazonaws.com)
[17:58:01] *** Joins: snoring_cat (~snore@047-040-175-178.res.spectrum.com)
[18:01:02] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[18:03:54] *** Joins: ChmEarl (~chmearl@user/chmearl)
[18:04:52] *** Quits: terrorjack (~terrorjac@ec2-35-181-134-114.eu-west-3.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[18:05:51] *** Joins: greta (uid516789@id-516789.lymington.irccloud.com)
[18:08:37] *** Joins: zebrag (~chris@user/zebrag)
[18:09:05] *** Quits: snoring_cat (~snore@047-040-175-178.res.spectrum.com) (Quit: Leaving)
[18:12:08] *** Joins: gpol3 (~gpol@135.23.207.205)
[18:13:19] *** Quits: gpol (~gpol@135-23-207-205.cpe.pppoe.ca) (Ping timeout: 252 seconds)
[18:13:19] *** gpol3 is now known as gpol
[18:14:01] <kurahaupo> hseg: ffmpeg is notable for consuming stdin and ignoring it, so this fails: generate_list| while read filename ; do ffmpeg "$filename" ; done
[18:14:41] <hseg> unfortunately, my usage of ffmpeg is non-uniform in files
[18:14:47] <TomyWork> so add </dev/null :)
[18:14:51] <kurahaupo> change ffmpeg to ffmpeg </dev/null
[18:14:56] <hseg> or -nostdin
[18:14:56] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:15:03] <hseg> as suggested in faq
[18:16:30] <TomyWork> cursed syntax description: gzip <input_filename> output_filename
[18:17:37] <geirha> I belive that is blursed
[18:17:46] <emanuele6> haha
[18:17:56] <TomyWork> blursed?
[18:18:04] <geirha> blessed and cursed at the same time
[18:18:13] *** Joins: terrorjack (~terrorjac@ec2-35-181-134-114.eu-west-3.compute.amazonaws.com)
[18:18:18] <geirha> because it'll mostly do what's intended
[18:19:00] <geirha> though the real synopsis of gzip just takes a bunch of files and creates new files with .gz extension of them
[18:19:31] <TomyWork> hence cursed :)
[18:19:48] <geirha> blursed :p
[18:20:58] <TomyWork> it weeds out the people who see a metasyntax error like this and just make it fit somehow
[18:21:25] <TomyWork> metasyntax inconsistency*
[18:21:27] *** Quits: lack (~lack@user/lack) (Ping timeout: 265 seconds)
[18:22:40] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: Goodbye)
[18:23:22] *** Joins: lack (~lack@user/lack)
[18:24:47] *** Quits: jtmusky (~jtmusky@104-1-122-97.lightspeed.okcbok.sbcglobal.net) (Quit: Bye)
[18:24:51] *** Joins: tech_exorcist (txrcst@user/tech-exorcist/x-0447479)
[18:24:56] <kurahaupo> TomyWork: And people think I'm strange for wanting to use normal printed typographical conventions instead of ambiguous punctuation. zcp input_filename output_filename
[18:25:48] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[18:26:15] *** Quits: hseg (~hseg@185.120.124.14) (Quit: Client closed)
[18:27:44] *** Quits: quazimod1 (~quazimodo@n1-40-133-145.bla1.nsw.optusnet.com.au) (Ping timeout: 252 seconds)
[18:27:47] *** Quits: kj- (~kj@beta.aerisnetwork.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:28:06] <kurahaupo> We haven't been limited to plaintext, even in terminals, for many many years
[18:30:21] <geirha> The other day someone accidentally put in a "а" instead of "a" in some code, and in some fonts those are nearly indistinguishable. Fun debugging, though luckily the terminal font gave it away
[18:30:24] *** Joins: kj (~kj@beta.aerisnetwork.net)
[18:31:49] <emanuele6> in my font, they are indistinguishable
[18:32:15] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:32:22] *** Quits: terrorjack (~terrorjac@ec2-35-181-134-114.eu-west-3.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[18:33:54] *** Quits: pwillard (sid136981@id-136981.hampstead.irccloud.com) (Ping timeout: 268 seconds)
[18:34:17] *** Quits: eruditass (uid248673@id-248673.uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[18:34:17] *** Quits: Memory (sid459764@user/memory) (Ping timeout: 264 seconds)
[18:34:18] *** Quits: liam (sid7517@id-7517.helmsley.irccloud.com) (Ping timeout: 268 seconds)
[18:34:32] *** Quits: nem (sid113421@user/nem) (Ping timeout: 246 seconds)
[18:34:32] *** Quits: nescafe1001 (sid211018@id-211018.tinside.irccloud.com) (Ping timeout: 246 seconds)
[18:34:36] *** Joins: pwillard (sid136981@id-136981.hampstead.irccloud.com)
[18:34:53] *** Quits: xiongxin_ (~quassel@113.116.35.121) (Ping timeout: 252 seconds)
[18:35:14] *** Joins: liam (sid7517@id-7517.helmsley.irccloud.com)
[18:35:16] *** Joins: knstn (~knstn@ppp-94-66-57-248.home.otenet.gr)
[18:35:16] *** Joins: Memory (sid459764@user/memory)
[18:35:35] *** Joins: eruditass (uid248673@id-248673.uxbridge.irccloud.com)
[18:35:36] *** Joins: xiongxin (~quassel@119.123.102.171)
[18:37:11] *** Joins: sandb0y (pirate@user/sandb0y)
[18:37:17] *** Joins: nem (sid113421@user/nem)
[18:37:32] *** Joins: terrorjack (~terrorjac@ec2-35-181-134-114.eu-west-3.compute.amazonaws.com)
[18:38:08] *** Joins: nescafe1001 (sid211018@id-211018.tinside.irccloud.com)
[18:40:51] *** Quits: xiongxin (~quassel@119.123.102.171) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:43:17] *** Quits: barjac (~quassel@94.196.112.2.threembb.co.uk) (Quit: barjac)
[18:43:52] *** Joins: netrunner (~netrunner@user/netrunner)
[18:45:31] *** Joins: frostwork (~frostwork@user/frostwork)
[18:48:01] <kurahaupo> geirha: Was that "а" in code or a quoted string?
[18:48:04] *** Joins: tex (~dee@user/dix)
[18:48:10] *** Gooey is now known as gooey
[18:48:42] <geirha> in a string literal
[18:48:50] <chiselfuse> It was a comment!
[18:49:02] <chiselfuse> But such an important comment that broke the code.
[18:51:15] *** Joins: L3 (~L3@user/l3)
[18:51:42] *** Joins: barjac (~quassel@94.196.112.2.threembb.co.uk)
[18:51:53] *** Joins: fructose (~fructose@user/fructose)
[18:53:12] *** Quits: terrorjack (~terrorjac@ec2-35-181-134-114.eu-west-3.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[18:54:31] *** Joins: terrorjack (~terrorjac@ec2-35-181-134-114.eu-west-3.compute.amazonaws.com)
[18:54:37] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[18:54:53] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[18:55:29] *** Quits: terrorjack (~terrorjac@ec2-35-181-134-114.eu-west-3.compute.amazonaws.com) (Client Quit)
[18:56:10] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[18:56:13] *** Joins: richardm75 (~richardm7@2600:8801:c507:2900:f423:a81f:9a45:c62f)
[18:56:55] *** Joins: seninha (~seninha@user/seninha)
[18:57:01] *** Joins: terrorjack (~terrorjac@ec2-35-181-134-114.eu-west-3.compute.amazonaws.com)
[19:06:09] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[19:06:30] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[19:09:01] *** Joins: cousin_luigi (~luigi@user/cousin-luigi/x-8293588)
[19:10:18] <cousin_luigi> Given a list of files in the format foo-x-bar, how do I identify the highest value of x?
[19:10:42] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:10:42] <izabera> ls -v
[19:10:50] <cousin_luigi> (it's always a numeric, possibly in the a.b.c format)
[19:11:01] <izabera> ls -v does that
[19:11:07] *** Quits: testuser321 (~wandering@115.187.42.95) (Read error: Connection reset by peer)
[19:11:09] *** Quits: prifici (~patri@user/prifici) (Quit: Off to work or bed.)
[19:11:48] <cousin_luigi> ls -vd foo-*-bar ?
[19:11:50] <cryptonector> well, if you have the list already, use sort -n
[19:12:05] <cousin_luigi> I forgot to say they are folders.
[19:12:20] *** Joins: ConstantDesc (~textual@195.224.201.178)
[19:13:37] <cousin_luigi> How about ls -1d foo-*-bar|tail -n1 ?
[19:14:04] * cousin_luigi is thinking whether he actually needs to extract the number
[19:14:29] <geirha> are the numbers not zero padded?
[19:14:41] <cousin_luigi> no
[19:15:02] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[19:15:06] <cousin_luigi> They are things like java-11-openjdk, java-17-openjdk, java-1.8.0-openjdk...
[19:15:22] <geirha> oh, that's hopeless
[19:15:49] <cousin_luigi> Oh right. I need a "version sort" of sorts.
[19:16:16] <cousin_luigi> Perhaps I could simply remove the dotted versions from the list.
[19:16:30] <cousin_luigi> Since they are also the oldest ones.
[19:16:52] <tirnanog> # mkdir java-11-openjdk java-17-openjdk java-1.8.0-openjdk; printf '%s\n' java-*-openjdk/ | sort -V | tail -n1
[19:16:53] <shbot> tirnanog: java-17-openjdk/
[19:16:55] *** Quits: barjac (~quassel@94.196.112.2.threembb.co.uk) (Quit: barjac)
[19:18:05] <izabera> i liked ls -v because the -v flags always does only one thing in all programs so it's easy to remember
[19:18:06] <geirha> dirs=(java-??-*/); printf '%s\n' "${dirs[-1]}"
[19:18:24] *** Joins: Bit_MCP (~Bit_MCP@99-22-255-91.lightspeed.frokca.sbcglobal.net)
[19:18:38] <geirha> oh yeah, -v never means verbose
[19:18:54] <tangy> pax was written as a compromise between tar and cpio
[19:18:58] <izabera> or variable or version or ...
[19:19:02] * geirha hides ssh
[19:19:08] <cousin_luigi> pax vobiscum?
[19:19:29] <tangy> these are the voyages of the 'Oy! wtf is he on about now?'
[19:19:50] <izabera> tangy: could say the same about you tbh
[19:19:56] <cousin_luigi> Can't one have a mystical moment?
[19:20:08] <tirnanog> izabera: yeah, though sort -V is more widely implemented.
[19:21:34] *** Joins: barjac (~quassel@94.196.112.2.threembb.co.uk)
[19:23:13] <tangy> izabera, well, honesty is the best policy
[19:25:52] <tangy> I was just following up on something from yesterday, about the program, `pax`. I guess, nevermind
[19:26:28] <tangy> thanks
[19:30:58] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[19:31:31] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[19:34:46] <kurahaupo> honesty with kindness is better than honesty with cruelty
[19:36:05] *** Quits: maledictium (~crux@bl13-195-79.dsl.telepac.pt) (Ping timeout: 264 seconds)
[19:36:13] *** Quits: unixman_home (~unixman2@37-220-137-216.mtaonline.net) (Remote host closed the connection)
[19:37:32] *** Joins: maledictium (~crux@176.78.94.123)
[19:37:52] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (Quit: WeeChat 3.2.1)
[19:38:00] *** Joins: unixman_home (~unixman2@37-220-137-216.mtaonline.net)
[19:38:01] <kurahaupo> tangy: Its five year mission: to explore strange new code; to seek out new idioms and new validations; to boldly go where no debugger has gone before
[19:38:27] <tangy> next time time how about I'll read the convo before posting blindly
[19:40:20] <tangy> oh. :) yes, to Boldygo, of House Atreides!
[19:41:40] <rendar> is it a wise move to set `stty -echoctl` by default?
[19:43:09] <kurahaupo> houses of Kirk & Picard
[19:43:30] <kurahaupo> rendar: Why?
[19:45:34] *** Quits: ConstantDesc (~textual@195.224.201.178) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:45:52] <rendar> kurahaupo, i use a lot Ctrl+C to close my python test programs, and having `^C` printed is annoying
[19:46:26] <kurahaupo> Sure then go for it
[19:46:37] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[19:47:03] <kurahaupo> Where are you that it's not off by default?
[19:47:19] <rendar> kurahaupo, linux Debian, LXTerminal
[19:47:23] *** Quits: L3 (~L3@user/l3) (Quit: o/)
[19:47:24] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[19:50:34] *** Joins: LiftLeft (~LiftLeft@172.83.47.124)
[19:52:24] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[19:52:30] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 260 seconds)
[19:52:50] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[19:53:29] <rendar> suddenly i get this message by xargs, which i've never received before, is that a new xargs update which generates this?! `xargs: warning: options --max-args and --replace/-I/-i are mutually exclusive, ignoring previous --max-args value`
[19:54:29] <llua> possibly
[19:55:07] <rendar> i think it gets printed from this `if ! xargs -n 1 -I{} git push --all {} < <(git remote -v | grep push | awk '{ print $1 }'); then` --- is that possible? i can't see how it can generates that warning...
[19:55:54] *** Quits: cisco87 (~quassel@lnxg33k.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:57:38] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[19:58:45] <kurahaupo> rendar: Why are you trying to combine -n1 (--maxargs) with -I{} (-i) ?
[19:58:45] <tirnanog> yes, because -n is --max-args.
[19:58:57] <rendar> oh that's it
[19:59:13] <tirnanog> I'd suggest not using xargs. it's not adding any value there.
[20:00:51] <rendar> tirnanog, how can i rewrite that more correctly?
[20:01:43] *** Quits: eschwartz (~eschwartz@archlinux/bugwrangler/eschwartz) (Ping timeout: 252 seconds)
[20:01:45] <rendar> let's consider that i have to write lines into the stdin of `git push --all`
[20:02:09] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[20:02:26] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[20:02:30] *** Joins: cisco87 (~quassel@lnxg33k.com)
[20:03:18] *** Quits: bomb-on (~mozgalom@ipnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[20:03:19] *** Quits: barjac (~quassel@94.196.112.2.threembb.co.uk) (Ping timeout: 252 seconds)
[20:03:45] <tirnanog> that's not actually what you are doing, though.
[20:03:52] <kurahaupo> I'm pretty sure that "git push" doesn't read anything from stdin
[20:04:10] *** Joins: skered (~dereks@user/skered)
[20:04:14] <tirnanog> you might want to ask the #git folks if there's a more direct method. but as far as that snippet is concerned: while read -r origin; do git push --all "$origin"; done
[20:04:57] *** Quits: Guest2026 (birkoff@birkoff.thunderirc.net) (Ping timeout: 268 seconds)
[20:05:09] *** Joins: eschwartz (~eschwartz@archlinux/bugwrangler/eschwartz)
[20:05:20] *** Joins: nbao (~nbao@187.20.181.193)
[20:06:28] <tirnanog> actually, I wasn't quite right when I said that xargs adds absolutely no value. it does propagate a useful exit status in the case that one of the invocations fails, though that behaviour could bbe reproduced by a while/read loop.
[20:06:31] *** Quits: aaro (aaro@user/aaro) (Ping timeout: 250 seconds)
[20:07:20] *** Quits: Aryan (Aryan@user/aryan) (Ping timeout: 260 seconds)
[20:07:24] <kurahaupo> if while read -r origin ; do git push --all "$origin" || ! break ; done ; then … whatever
[20:07:59] *** Joins: gnoo_ (~gnoo@user/gnoo)
[20:08:21] <tirnanog> well, that's good thinking. I was going to suggest a subshell that does || exit 1.
[20:08:27] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 276 seconds)
[20:09:17] <rendar> yes sorry i have to call `git push --all $remote_name` where remote_name is "origin" and "rasp0", names that i get from that awk command
[20:09:28] <rendar> xargs seemed the best thing to launch here
[20:09:47] <tirnanog> see kurahaupo's example.
[20:10:06] *** Quits: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt) (Quit: leaving)
[20:10:18] <tirnanog> it works by ingeniously inverting the exist state of the (loop-beaking) break command in the case that git fails.
[20:10:24] <tirnanog> exit status, even.
[20:10:36] *** Joins: HelloShitty (~psysc0rpi@bl20-171-222.dsl.telepac.pt)
[20:10:37] <rendar> but i don't want to break the loop if one repository fails...
[20:10:43] <rendar> it must continue to git push
[20:10:59] <tirnanog> ok. that's the behaviour you were getting with xargs, for the record.
[20:11:03] <tirnanog> but fine.
[20:11:49] <tirnanog> failed=0; while read -r origin; do git push --all "$origin" || failed=1; done; if (( failed )); then ...
[20:11:53] <kurahaupo> errors°0; while read -r origin ; do git push --all "$origin" || ((++errors)) ; done ; if ((errors)); then … whatever
[20:11:57] <tirnanog> or that.
[20:11:58] <rendar> i thought xargs kept calling git push
[20:12:00] <kurahaupo> snapp
[20:12:05] <tirnanog> no, it doesn't.
[20:12:26] <kurahaupo> depends on the exit code
[20:12:28] <tirnanog> at least, I don't think it does. I admit that my memory might be a little rusty on this pint.
[20:12:43] <rendar> i'm pretty sure xargs doesn't stop
[20:13:31] <kurahaupo> iirc xargs will stop if its subcommand exits with 255
[20:13:41] <kurahaupo> but check the man page to confirm
[20:13:54] <tirnanog> ah, yes.
[20:14:13] <tirnanog> still, xargs is generally more trouble than it's worth.
[20:14:14] <rendar> but git push won't return 255 on failure
[20:14:42] <rendar> tirnanog, ok, i can accept that, but then how can i replace xargs behavior here?
[20:14:47] *** Quits: terrorjack (~terrorjac@ec2-35-181-134-114.eu-west-3.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[20:14:52] <tirnanog> are the examples above not sufficient?
[20:15:13] <kurahaupo> rendar: Are the while loops above unclear?
[20:15:23] <rendar> kurahaupo, well, i'm reading them
[20:15:45] <rendar> just trying to figure out where to put `git remote -v | grep push | awk '{ print $1 }'`
[20:16:04] <tirnanog> in the same place. but now that you mention it, that code looks a bit fragile.
[20:16:16] <cousin_luigi> Thanks everyone, bbl!
[20:16:18] *** Parts: cousin_luigi (~luigi@user/cousin-luigi/x-8293588) ()
[20:16:20] <rendar> tirnanog, why?!
[20:16:31] <tirnanog> it checks for "push" as a substring anywhere, for one thing.
[20:16:59] <rendar> ok that's true
[20:17:12] <rendar> i should check 'push' into 'rasp0	rasp0:git_repos/burp (push)' <- this final one
[20:17:22] <rendar> and get the first token 'rasp0'
[20:18:25] <gnoo_> rendar: you can push to multiple repos with a single name
[20:18:38] <rendar> gnoo_, how?
[20:18:56] <gnoo_> like git remote set-url --add origin second_push_url
[20:19:08] <twkm> it's there a git channel somewhere?  or even documentation.
[20:19:12] <tirnanog> see, this is why I suggested asking #git. though there is some overlap, they know their tools, while this channel knows its shell.
[20:19:25] <rendar> gnoo_, that's irrelevant, because i should check all those repos every time to check if new repos has been added
[20:19:31] <rendar> so the git remove -v is better
[20:20:20] <kurahaupo> grep+awk is a bit redundant when « awk '/push{print $1}' » will suffice. Or use grep+cut instead
[20:20:24] <rendar> tirnanog, so, any suggestion how to parse that 'push' in a more solid way?
[20:20:31] <rendar> uhm
[20:20:56] <rendar> awk: cmd. line:1:  ^ unterminated regexp
[20:21:18] <gnoo_> /push/ instead of /push
[20:21:40] <rendar> ok
[20:21:52] <rendar> should i use /\(push\)/ ?
[20:21:53] <kurahaupo> or something along the lines of: for remote in .git/refs/remotes/* ; do git push --all "${remote##*/}" ; done
[20:23:07] *** Quits: austin987 (~null@cpe-173-174-99-192.austin.res.rr.com) (Ping timeout: 252 seconds)
[20:23:10] <kurahaupo> sorry /push/{…
[20:23:13] <rendar> kurahaupo, i see
[20:23:26] <kurahaupo> (typo on my part)
[20:23:37] <Swahili> Q: I have a script foobar.sh, that I prepare a value that I pass to an variable. I'd like this to be available has an enviroment variable, thought I could use: export MY_VAR=xxx, but that's incorrect
[20:23:42] <rendar> kurahaupo, but shouldn't that be `/\(push\)/` since i want to parse the "(push)" ?
[20:23:47] <tirnanog> rendar: errors=0; while read -r origin _ mirror; do if [[ $mirror == '(push)' ]]; then git push --all "$origin" || ((++errors)); fi; done < <(git remote -v)
[20:24:22] <tirnanog> doesn't feel proper still but it's an improvement.
[20:24:28] <kurahaupo> rendar: What exactly do you mean by "parse" there? It's a single fixed literal that you already know
[20:24:37] <rendar> tirnanog, thanks, interesting
[20:24:45] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[20:26:42] *** Joins: fdan (~fdan@192.146.154.3)
[20:26:49] <gnoo_> Swahili: you want to pass environmental variable to the parent shell or to new process created within the script?
[20:28:04] <Swahili> gnoo_: thanks for looking! I'd like to pass the environment variable to the parent shell (I think that's what happens when I call from a javascript npm project where I have a package.json script as in foobar: "myscript.sh && other comands")
[20:28:26] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[20:28:31] <tirnanog> that's not how it works.
[20:28:39] <gnoo_> Swahili: you can't pass environment variables back to the parent
[20:28:52] <gnoo_> !export
[20:28:52] <greybot> The environment comprises the subset of variables that are exported, either permanently by the "export" statement or temporarily by prefix assignment. All variables are copied to subshells, but only exported variables are received by other programs; that is the ONLY effect of "export". It's intentionally not possible to modify variables in another process. http://mywiki.wooledge.org/Environment
[20:29:25] <rendar> tirnanog, can i rewrite your solution like this? https://bpa.st/EEUA
[20:29:38] <Swahili> gnoo_: oh ok thanks :)
[20:30:31] <gnoo_> Swahili: if you can write the required lines on a temporary file, the you can source it from the parent shell to get the same effect
[20:30:31] <tirnanog> rendar: you can replace lines 8-11 with simply: (( errors )), assuming that's going to be the end of the function.
[20:30:55] <tirnanog> rendar: sorry, I mean: (( errors == 0 )). or even: (( ! errors ))
[20:31:09] <Swahili> gnoo_: yeh that works for another use case, now thinking about what you said, in the context of the js project, wondering what I'll do
[20:31:15] *** Quits: wolfgang (~wolfgang@101.174.6.197) (Remote host closed the connection)
[20:31:44] <tirnanog> rendar: that aside, yes, it's correct.
[20:31:57] <rendar> thanks, nice advice
[20:32:07] *** Joins: SkyWay (~apt@79.119.66.247)
[20:32:18] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Remote host closed the connection)
[20:32:41] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[20:32:59] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[20:33:00] <tirnanog> you might want to localise the errors variable while you're at it.
[20:33:11] <tirnanog> and the others.
[20:33:22] <tirnanog> local errors origin mirror
[20:33:32] *** Joins: terrorjack (~terrorjac@ec2-35-181-134-114.eu-west-3.compute.amazonaws.com)
[20:34:33] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:36:17] *** Joins: austin987 (~null@100.42.98.196)
[20:36:17] <Swahili> gnoo_: thanks for your help! I'll go with saving to file and then I'll read from the external service call
[20:39:32] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[20:39:55] <knstn> Who's the owner of "https://guide.bash.academy/"?
[20:40:24] <tirnanog> lhunath
[20:42:26] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Ping timeout: 260 seconds)
[20:42:45] *** Joins: zeden (~zeden@user/zeden)
[20:43:03] <pocketprotector> literally says in the footer
[20:44:19] *** Quits: terrorjack (~terrorjac@ec2-35-181-134-114.eu-west-3.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[20:45:27] *** Quits: Alexander-47u2 (~Alexander@37.17.216.145) (Quit: Leaving)
[20:46:41] *** Joins: sinaowolabi (~SinaOwola@102.134.114.1)
[20:47:06] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 260 seconds)
[20:50:15] *** Quits: TomyWork (~TomyLobo@p200300e80f06af002d052333a5643d14.dip0.t-ipconnect.de) (Quit: Leaving)
[20:52:12] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[20:54:34] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[20:54:50] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[20:54:59] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[20:57:05] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[20:57:17] *** Quits: gnoo_ (~gnoo@user/gnoo) (Quit: gnoo_)
[20:59:29] *** Joins: H3dn1ng (~H3dn1ng@185.213.154.230)
[21:00:23] *** Quits: Hash (~weechat@thestonedapes.com) (Quit: WeeChat 3.2.1)
[21:00:50] *** Joins: Hash (~weechat@thestonedapes.com)
[21:01:02] *** Joins: besnn (~besnn@user/besnn)
[21:03:45] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[21:06:09] *** A_Dragon is now known as Exceedingly_Gay
[21:10:56] *** Quits: dehhy^ (~dehhy@12.203.127.82) (Remote host closed the connection)
[21:14:10] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[21:15:07] *** Joins: [-_-] (~fractal@user/---/x-1675478)
[21:16:14] *** Exceedingly_Gay is now known as A_Dragon
[21:19:01] *** Joins: cart_man (~rynot@cpc100914-uddi26-2-0-cust18.20-3.cable.virginm.net)
[21:20:14] <cart_man> I have the following bash script that passes these arguments to a nodejs script -> node generateScripts.js ${ENTRY_COUNT} "${SAMPLE_FILE}"   BUT I SWEAR TO GOD If I run this nodejs script on its own it runs fine. When I try and pass in SAMPLE_FILE it tells me that it got the filename but it refuses to write to the file.
[21:20:25] <cart_man> I have literally no idea what could possibly be the difference
[21:21:16] <twkm> as an aside, don't use all upper-case variable names for purely internal purposes.
[21:21:42] <lopid> us neither, since there is no error message
[21:21:44] <twkm> if node cannot open and write a file how is that a shell issue?
[21:21:46] <cart_man> I dont know whats the difference between a Bash script Exec and a normal cmd exec
[21:22:31] <twkm> if node produces output that you want directed to a file that should be: node script "$var" > "$filename"
[21:23:00] <cart_man> twkm: Because the only difference is that the non working version is executed from a script and the other one that works is from me typing it. The other interesting thing is it only fails when the files name is SampleFile
[21:23:30] <cart_man> twkm: No the script file does not write to something else. It opens a file and write stuff into it
[21:24:00] <cart_man> Could it be that some program executes async from script and holds the file open? But then I would get an error
[21:24:05] <emanuele6> cart_man: SampleFile is not an absolute path
[21:24:06] <cart_man> Gwad this is so confusing
[21:24:07] <twkm> xtrace time, because as long as the arguments are provided to node it stops being a shell issue.
[21:24:12] <emanuele6> where are you running this script?
[21:24:24] <cart_man> emanuele6: Well if I call it SampleFile3 it works
[21:24:25] <emanuele6> from the directory in which SampleFile is in?
[21:24:25] <twkm> wag: environment is telling node to fuck off.
[21:24:32] <cart_man> emanuele6: Well the script creates one
[21:24:34] *** Joins: Neo517 (~Neo17@2001:56a:782f:d00:715d:ad8:df45:caa0)
[21:24:37] <cart_man> inside the file it is in yea
[21:24:42] *** Joins: birkoff (birkoff@birkoff.thunderirc.net)
[21:24:49] <cart_man> twkm: I wont be surprised
[21:25:06] *** birkoff is now known as Guest2222
[21:25:07] <twkm> environment is mostly not a shell issue.
[21:25:19] <cart_man> The only thing I can think of is another app executing and then trying to use the same File since that is actually a thing
[21:25:26] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[21:26:23] <twkm> environment issues are either o/s issues and/or node issues.  first ensure that node is being invoked with the arguments you expect (xtrace the script), after which it is node and/or o/s time.
[21:26:43] *** Joins: nrl^ (~nrl@12.203.127.82)
[21:26:52] <emanuele6> !-x > xtrace
[21:26:52] <greybot> xtrace: set -x (or ''bash -x myscript'') makes bash output the exact command that it will run after parsing and expansion. You can put ''set -x'' just before the code you want to debug (turn off with ''set +x''). To add more information, change PS4 first: eg. PS4='+($?) $BASH_SOURCE:$FUNCNAME:$LINENO:'
[21:26:57] *** Joins: seninha (~seninha@user/seninha)
[21:27:27] <cart_man> emanuele6: What does xtrace do?
[21:27:47] <cart_man> twkm: ok so I think whats happening is... the next app opens the same file and overwrights it with nothing
[21:27:56] <cart_man> leading me to believe that the first script never wrote anything
[21:27:58] <cart_man> GAWD
[21:27:59] <cart_man> DAMMIT
[21:30:03] *** Quits: greknod2 (~grek@ppp121-45-140-199.bri-pow-que-bras31.tpg.internode.on.net) (Quit: -)
[21:30:32] *** Quits: tech_exorcist (txrcst@user/tech-exorcist/x-0447479) (Quit: see you tomorrow)
[21:31:14] *** Joins: greknod2 (~grek@ppp121-45-140-199.bri-pow-que-bras31.tpg.internode.on.net)
[21:34:59] <earendel> you could call the script directly by adding a shebang on top and making it executable. i bet you pass it the argument number.
[21:35:35] *** Quits: greta (uid516789@id-516789.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[21:36:49] *** Quits: anton (anton@tloks.com) (Ping timeout: 252 seconds)
[21:39:08] *** Quits: Bit_MCP (~Bit_MCP@99-22-255-91.lightspeed.frokca.sbcglobal.net) (Ping timeout: 252 seconds)
[21:40:01] *** Joins: akoana (~ah@user/akoana)
[21:40:37] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[21:41:55] *** Quits: Carp (~rue@1-162-40-185.dynamic-ip.hinet.net) (Quit: WeeChat 3.2.1)
[21:44:56] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 246 seconds)
[21:47:48] *** Joins: Bit_MCP (~Bit_MCP@99-22-255-91.lightspeed.frokca.sbcglobal.net)
[21:48:47] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Quit: Leaving...)
[21:48:52] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[21:55:06] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu)
[21:56:46] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[21:57:13] *** gooey is now known as Gooey
[21:57:59] *** Quits: sandb0y (pirate@user/sandb0y) (Ping timeout: 265 seconds)
[21:58:29] *** Joins: sandb0y (pirate@user/sandb0y)
[21:58:52] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 252 seconds)
[21:58:58] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Client Quit)
[21:59:26] *** Quits: drd (~drd@93-42-69-115.ip85.fastwebnet.it) (Ping timeout: 265 seconds)
[22:00:49] *** Joins: semeion (~semeion@user/semeion)
[22:00:58] *** Quits: semeion (~semeion@user/semeion) (Client Quit)
[22:01:16] <emanuele6> # IFS=/; echo i am in $PWD
[22:01:18] <shbot> emanuele6: i am in  root
[22:01:23] *** Joins: semeion (~semeion@user/semeion)
[22:01:25] <emanuele6> # IFS=/; set -x; echo i am in $PWD
[22:01:26] <shbot> emanuele6: + echo i am in '' root
[22:01:27] <shbot> emanuele6: i am in  root
[22:01:36] <emanuele6> # IFS=/; set -x; echo i am in "$PWD"
[22:01:38] <shbot> emanuele6: + echo i am in /root
[22:01:38] <shbot> emanuele6: i am in /root
[22:02:07] <emanuele6> cart_man: what the factoid said; "makes bash output the exact command that it will run after parsing and expansion."
[22:02:11] *** Joins: wolfgang (~wolfgang@101.174.6.197)
[22:02:43] *** Quits: Bit_MCP (~Bit_MCP@99-22-255-91.lightspeed.frokca.sbcglobal.net) (Ping timeout: 252 seconds)
[22:04:55] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[22:06:05] *** Joins: Inhonion (~uhhh3@user/tastywiener95)
[22:08:17] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[22:08:43] *** Joins: fivegruel (~fivegruel@HSI-KBW-095-208-248-249.hsi5.kabel-badenwuerttemberg.de)
[22:09:56] *** Quits: Neo517 (~Neo17@2001:56a:782f:d00:715d:ad8:df45:caa0) (Quit: Leaving)
[22:12:43] <cart_man> emanuele6: Thats great! Where do I put that in the script?
[22:13:35] <emanuele6> !-x
[22:13:35] <greybot> set -x (or ''bash -x myscript'') makes bash output the exact command that it will run after parsing and expansion. You can put ''set -x'' just before the code you want to debug (turn off with ''set +x''). To add more information, change PS4 first: eg. PS4='+($?) $BASH_SOURCE:$FUNCNAME:$LINENO:'
[22:14:17] *** Quits: Inhonion (~uhhh3@user/tastywiener95) (Quit: Konversation terminated!)
[22:14:49] <emanuele6> cart_man: either put `set -x' at the top of the script to debug everything or wrap the code you want to debug between `set -x' and `set +x'
[22:15:04] <cart_man> thanks allot
[22:15:11] *** Joins: greycat (~greg@209.142.155.49)
[22:15:56] <emanuele6> but didn't you say that this problem is most likely an os/node problem rather than a shell problem?
[22:18:38] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[22:19:02] *** Joins: VoidNoir0 (~VoidNoir0@72.80.203.52)
[22:19:38] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:91a8:7cf7:7645:b3d2) (Quit: Textual IRC Client: www.textualapp.com)
[22:20:00] *** Joins: Hackerpcs (~user@user/hackerpcs)
[22:20:49] *** Quits: legola (~legola@46.235.100.27) (Remote host closed the connection)
[22:23:44] *** Joins: drd (~drd@93-42-69-115.ip85.fastwebnet.it)
[22:25:53] *** Joins: Krail (~Krail@user/alexdelarge)
[22:29:33] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:30:39] <twkm> yes, but getting xtrace on the radar can help with subsequent things.
[22:31:08] *** Gooey is now known as gooey
[22:31:36] *** Joins: iomari891 (~iomari891@105.112.138.38)
[22:31:49] <earendel> # IFS="o"; set -x; echo i am in "$PWD"
[22:31:56] <shbot> earendel: + echo i am in /root
[22:31:56] <shbot> earendel: i am in /root
[22:32:14] <earendel> # IFS="o"; set -x; echo i am in $PWD
[22:32:21] <shbot> earendel: + echo i am in /r '' t
[22:32:21] <shbot> earendel: i am in /r  t
[22:32:38] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[22:35:07] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[22:36:18] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:36:48] *** Joins: karakedi (~eAC53C340@user/karakedi)
[22:38:36] *** Joins: Guest3273 (~Guest@181.91.158.206)
[22:39:14] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu) (Remote host closed the connection)
[22:40:27] <earendel> s IFS affecting how variables are expanded in general?
[22:40:49] <greycat> It dictates how word splitting is done, on unquoted expansions.
[22:40:51] <earendel> if that's the correct term.
[22:41:23] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu)
[22:41:31] <greycat> There are a few places where word splitting simply isn't done (e.g. inside [[ ]]) so it's irrelevant there.
[22:43:13] <earendel> but if delimiter is set to some char other than space, it expands to a string delimited with a space? whats the use case for this?
[22:43:55] <greycat> You mean, how is it *supposed* to be used, as opposed to how do idiots use it in #bash?  Most commonly you'd set it to a specific punctuation character that you know is being used as a delimiter, like colon or comma.
[22:45:08] *** Quits: Rue (~rue@2001-b011-1000-1288-2af2-18b5-70e3-9f29.dynamic-ip6.hinet.net) (Ping timeout: 246 seconds)
[22:46:34] *** Joins: mtk (~mtk@2601:185:200:72:44aa:53fe:886b:bee9)
[22:47:11] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[22:47:19] *** Joins: Rue (~rue@2001-b011-1000-1f54-7eb3-4a8c-a9e9-9ba2.dynamic-ip6.hinet.net)
[22:47:25] <twkm> it is space, tab and newline by default.
[22:47:27] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:47:41] <earendel> in order to do what? replace it with a blan space? (which was not the delimiter?)
[22:47:49] <geirha> and whitespace is handled differently from other characters
[22:47:56] <greycat> to separate a string into fields/substrings
[22:48:25] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[22:49:06] <earendel> # IFS="o"; set -x; echo i am in "${PWD[0]}"
[22:49:13] <shbot> earendel: + echo i am in /root
[22:49:13] <shbot> earendel: i am in /root
[22:49:30] <emanuele6> PWD is not an array
[22:49:33] <geirha> if you run   ls -l   bash parses it into an array of words ["ls", "-l"] which eventually gets passed to the execve(2) system call. echo i am in $PWD becomes  ["echo", "i", "am", "in", "/r", "", "t"]
[22:49:37] <greycat> you're not going to understand the proper use of things by making up #bash-shitty examples
[22:49:38] <earendel> but its fields.
[22:49:52] <emanuele6> # printf %s "$IFS" | od -xc
[22:49:54] <shbot> emanuele6: 0000000    0920    000a
[22:49:54] <shbot> emanuele6:              \t  \n
[22:49:54] <shbot> emanuele6: 0000003
[22:50:05] <emanuele6> i didn't know NUL was in the default IFS
[22:50:07] <emanuele6> interesting
[22:50:11] <twkm> it isn't.
[22:50:12] <greycat> It's not.  Your od command is fucked.
[22:50:19] <emanuele6> ah
[22:50:24] <earendel> lol
[22:50:28] <geirha> # printf %s "$IFS" | od -An -tx1 -c
[22:50:30] <shbot> geirha:   20  09  0a
[22:50:30] <shbot> geirha:       \t  \n
[22:50:57] <emanuele6> haha, yeah. now i understand why that happened
[22:52:27] <earendel> it's still weird that it prints a space after the delimiter is set to another char. you know what i mean? i would have assumed IFS sets the delimiter for reading and writing.
[22:52:32] <emanuele6> also NUL couldn't be in IFS because, once again, NUL cannot be stored in shell variables :)
[22:52:54] <emanuele6> earendel: writing?
[22:52:55] <twkm> IFS is only for parsing, not reading or writing.
[22:53:01] <greycat> earendel: what "space" are you talking about here?
[22:53:37] <twkm> probably the empty argument resulting because o was followed by o.
[22:53:46] <emanuele6> IFS is only used for word splitting expansions and for "${arr[*]}" and "$*"
[22:53:53] <earendel> # IFS="o"; set -x; echo i am in $PWD #here the o becomes a delimiter.. but $PWD is expanded with spaces
[22:53:53] <greycat> and read.
[22:53:54] <emanuele6> and by read
[22:53:59] <shbot> earendel: + echo i am in /r '' t
[22:53:59] <shbot> earendel: i am in /r  t
[22:54:19] <geirha> the '' is the empty string between o and o
[22:54:23] <earendel> which is what i called "writing"
[22:54:28] <earendel> i get that/.
[22:54:29] <greycat> earendel: echo receives a list of arguments: 'i' 'am' 'in' '/r' '' 't'
[22:54:36] <geirha> !wordsplitting
[22:54:37] <greybot> echo $foo; rm $foo -- If you leave $foo unquoted, bash will *remove* all whitespace (newlines, spaces, tabs) while expanding it, take each *word* as a separate argument. `echo` prints these words separated by one space and `rm` deletes each word. So ALWAYS *quote* your parameter expansions: echo "$foo" -- http://mywiki.wooledge.org/WordSplitting
[22:54:37] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[22:54:38] <earendel> but why spaces?????????
[22:54:42] <earendel> is that so hard to understand.
[22:54:47] <greycat> earendel: and it prints the first argument, a space, the second argument, a space, and so on, then the last argument, and a newline.
[22:54:48] <geirha> echo adds the space
[22:54:49] <twkm> echo likes to output spaces.
[22:55:04] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[22:55:12] <emanuele6> # IFS="o"; set -f; pwd_arr=( $PWD ); set +f; set -x; echo "${pwd_arr[*]}"
[22:55:19] <shbot> emanuele6: + echo /root
[22:55:19] <shbot> emanuele6: /root
[22:55:19] <earendel> geirha: but the spaces are there in the set -x output command???
[22:55:32] <emanuele6> earendel: this is what you are thinking of
[22:55:35] <greycat> # IFS=o; printf '<%s>' i am in $PWD
[22:55:38] <twkm> the the xtrace so you CAN FUCKING SEE THE ARGUMENTS.
[22:55:40] <emanuele6> # IFS="o"; set -f; pwd_arr=( $PWD ); set +f; IFS=d; set -x; echo "${pwd_arr[*]}"
[22:55:41] <shbot> emanuele6: + echo /rddt
[22:55:41] <shbot> emanuele6: /rddt
[22:55:41] <earendel> i would have asked if its the echo. but obviously it is there before the echo is caled.
[22:55:42] <geirha> it shows the empty argument as ''
[22:55:43] <shbot> greycat: <i><am><in></r><><t>
[22:55:50] <greycat> See, no spaces.
[22:56:27] <greycat> Sigh.  Everyone tried to answer all at once and the responses are chaos.
[22:56:29] <emanuele6> echo does not use IFS, echo prints its arguments (if they are not options) separated by a space
[22:56:32] <earendel> unless set +x uses echo internally/.
[22:56:47] <emanuele6> that is what echo does
[22:56:55] <greycat> # IFS=o; printf '<%s>' i am in $PWD
[22:57:02] <shbot> greycat: <i><am><in></r><><t>
[22:57:46] <greycat> The unquoted $PWD is word-split into three arguments.  printf is showing you what they are.  set -x is also showing you what they are.  the representation is different, that's all.
[22:57:46] <earendel> # IFS=o; set -x; printf '<%s>' i am in $PWD # look at the output of the set -x thingy.
[22:57:54] <shbot> earendel: + printf '<%s>' i am in /r '' t
[22:57:54] <shbot> earendel: <i><am><in></r><><t>
[22:58:08] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 256 seconds)
[22:58:08] <geirha> # set -x; :   one       two
[22:58:10] <shbot> geirha: + : one two
[22:58:37] <earendel> that's before printf or anything is called. unless set +x uses echo. and its own delimiter. which can be set how?
[22:58:50] <geirha> after bash parses the simple command, the result is the three words [":", "one", "two"]. set -x visualize this as three space separated words
[22:58:54] <greycat> set -x, not set +x, and yes it has its own output format
[22:59:30] <earendel> and i can't set it with IFS?
[22:59:35] <earendel> (getting warmer)
[22:59:50] <emanuele6> setting what?
[23:00:01] <greycat> set -x gives zero fucks what IFS is set to.  it has its output format.  it shows you the shit it wants you to see, in the way it was programmed to print it.
[23:00:19] <earendel> ok then.
[23:00:25] <earendel> xD
[23:00:32] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[23:00:37] <emanuele6> i don't even understand what you were expecting it to show
[23:00:51] <earendel> the delimiter i have set?
[23:00:59] <earendel> honk
[23:01:05] <emanuele6> how? what output were you expecting exactly?
[23:01:07] <earendel> what else.
[23:01:17] <greycat> set -x's purpose is to help you debug your broken shell script.  It was written by the shell author, for the use of people who know what the fuck they are DOING.
[23:01:38] <geirha> then you first have to put it in an array (or as arguments) and use "${array[*]}" or "$*"
[23:02:02] *** Joins: Liblx (~Alex@ip4d15ff09.dynamic.kabel-deutschland.de)
[23:02:14] <geirha> # IFS=o; array=( i am in $PWD ); printf '%s\n' "${array[*]}"
[23:02:21] <shbot> geirha: ioamoino/root
[23:02:26] <earendel> look. having fields. i do echo them. IFS could be used to: separate the output with commas instead of saces. because that's what delimiters do.
[23:02:38] <geirha> woah, it's italian!
[23:02:51] <greycat> The shell's primary purpose is to arrange for a list of string arguments to be passed to a command, via the execve() system call.  If your script doesn't work, it's probably because you sent the wrong list of arguments.  So set -x helps you by showing you the list of arguments that you sent.
[23:03:03] <emanuele6> geirha: lmao
[23:06:59] *** Joins: sudosudosudo (~wahrheit@47.156.85.42)
[23:07:44] <earendel> !fields
[23:08:17] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:08:22] <geirha> !faq 1
[23:08:22] <greybot> https://mywiki.wooledge.org/BashFAQ/001 -- How can I read a file (data stream, variable) line-by-line (and/or field-by-field)?
[23:08:28] <greycat> # IFS=: read -ra fields < /etc/passwd; printf '<%s>' "${fields[@]}"
[23:08:30] <shbot> greycat: <root><x><0><0><root></root></bin/bash>
[23:08:41] <greycat> This is what IFS is meant to be used for.
[23:10:18] <earendel> arrayfields are always delimited by space, when declared. true or false/
[23:10:26] <greycat> False.
[23:10:39] <greycat> Or else... I can't understand the question.
[23:11:27] <greycat> Are you talking about an assignment command with a hard-coded list, like a=(one two three)?  Or are you talking about an array that's initialized by readarray/mapfile, or read -ra, or what?
[23:11:30] <earendel> # IFS=, a = (a,b,c); echo "${a[*]}";
[23:11:31] <shbot> earendel: bash: syntax error near unexpected token `('
[23:11:45] <greycat> You're talking about hard-coded assignment.
[23:11:54] *** Joins: travaldo (~travaldo@159.203.88.148)
[23:11:58] <emanuele6> `a = something' is not valid shell code
[23:11:58] <earendel> yes.
[23:11:59] <geirha> IFS only affects unquoted expansions, not literal words
[23:12:01] <greycat> Hard-coded assignments are parsed by the shell parser, which does gives ZERO FUCKS about IFS.
[23:12:27] <earendel> ok. this explains it. maybe.
[23:12:33] <greycat> # IFS=,; a=(1,2,3); declare -p a
[23:12:35] <shbot> greycat: declare -a a=([0]="1,2,3")
[23:13:05] <emanuele6> # IFS=, var=1,2,3; a=($var); declare -p a
[23:13:07] <shbot> emanuele6: declare -a a=([0]="1" [1]="2" [2]="3")
[23:13:25] <greycat> (this is bad style)
[23:13:48] <emanuele6> oh, yeah, i'm not suggesting it; i'm just showing
[23:13:53] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[23:14:20] *** Quits: Sayona (~Sayona@user/sayona) (Read error: Connection reset by peer)
[23:14:22] <emanuele6> # IFS=,; set -x; a=(1,2,3); set +x; declare -p a
[23:14:24] <shbot> emanuele6: + a=(1,2,3)
[23:14:24] <shbot> emanuele6: + set +x
[23:14:24] <shbot> emanuele6: declare -a a=([0]="1,2,3")
[23:14:40] <emanuele6> # IFS=, var=1,2,3; set -x; a=($var); set +x; declare -p a
[23:14:42] <shbot> emanuele6: + a=($var)
[23:14:42] <shbot> emanuele6: + set +x
[23:14:42] <shbot> emanuele6: declare -a a=([0]="1" [1]="2" [2]="3")
[23:14:44] <earendel> # a="a,b,c"; IFS=,; arr=($a); echo "$arr[0]";
[23:14:45] <shbot> earendel: a[0]
[23:15:05] <earendel> # a="a,b,c"; IFS=,; arr=($a); echo "${arr[0]}";
[23:15:06] <emanuele6> huh, xtrace doesn't show the expansion in a=( ... )
[23:15:08] <shbot> earendel: a
[23:15:12] <earendel> ha!
[23:15:45] <greycat> An array assignment with a variable inside () *does* use IFS.
[23:15:57] *** Joins: Sayona (~Sayona@user/sayona)
[23:15:59] <greycat> And it also does file globbing.
[23:16:06] <emanuele6> # set -x; a=$PWD
[23:16:08] <shbot> emanuele6: + a=/root
[23:16:11] <emanuele6> # set -x; a=($PWD)
[23:16:13] <shbot> emanuele6: + a=($PWD)
[23:16:21] *** Quits: H3dn1ng (~H3dn1ng@185.213.154.230) (Quit: leaving)
[23:16:28] <emanuele6> probably a bug or an oversight
[23:16:41] *** Quits: Liblx (~Alex@ip4d15ff09.dynamic.kabel-deutschland.de) (Quit: WeeChat 3.2)
[23:16:48] <sudosudosudo> Dumb question: Trying to create folders for and move files in pwd to the newly created folders that have been created with the files name excluding the file extension. It is delimiting at periods and such so something like this.is.a.file would generate folders for this and is and a etc. What's the correct method for locking the exact file name in so I can generate these folder properly. My code: https://pastebin.com/Ry9nhH9F
[23:16:48] <pasteban> Paste is available without ads on https://pastebin.com/raw/Ry9nhH9F
[23:16:55] <greycat> or it would have been too much of a pain in the ass to implement, I don't know
[23:16:57] *** Joins: Betal (~Betal@user/betal)
[23:17:01] <geirha> # s='/* i am comment */'; array=($s); declare -p array
[23:17:03] <shbot> geirha: declare -a array=([0]="/bin" [1]="/dev" [2]="/etc" [3]="/init" [4]="/lib" [5]="/lib64" [6]="/proc" [7]="/root" [8]="/tmp" [9]="/usr" [10]="/var" [11]="i" [12]="am" [13]="comment" [14]="*/")
[23:17:13] <geirha> !check
[23:17:13] <checkbot> sudosudosudo: Line 1: Double quote to prevent globbing and word splitting. See https://shellcheck.net/?id=cb12833 for all 3 issues.
[23:17:41] <geirha> and you want && instead of &
[23:17:42] <greycat> sudosudosudo: so if you have files named "foo.txt" and "foo.jpg" you want to mkdir foo and then move both files into foo/ ?
[23:18:12] <greycat> and what if there's a file with more than one dot? what directory name do you want to use for foo.bar.txt?
[23:18:13] <sudosudosudo> One for each file. I'm organizing my plex files :)
[23:18:33] <earendel> it wasn't array declaration which used , but the variable expansion which changed , to spaces..  :./
[23:18:45] <sudosudosudo> All names are unique greycat
[23:18:47] <greycat> earendel: *sigh*  FUCKKKKKKK
[23:19:02] <earendel> no. u.
[23:19:05] *** Quits: besnn (~besnn@user/besnn) (Read error: Connection reset by peer)
[23:19:05] <greycat> earendel: THERE ARE NO FUCKING SPACES!  IT IS A MOTHER FUCKING LIST!
[23:20:07] <earendel> # a="a,b,c"; IFS=,; set -x; arr=($a); echo "$arr[0]";
[23:20:08] <shbot> earendel: + arr=($a)
[23:20:08] <shbot> earendel: + echo 'a[0]'
[23:20:08] <shbot> earendel: a[0]
[23:20:17] <emanuele6> again, that is not bash syntax
[23:20:30] <earendel> # a="a,b,c"; IFS=,; set +x; arr=($a); echo "$arr[0]";
[23:20:31] <shbot> earendel: a[0]
[23:20:37] <earendel> meh.
[23:20:43] <emanuele6> !faq array > earendel
[23:20:43] <greybot> earendel: https://mywiki.wooledge.org/BashFAQ/005 -- How can I use array variables?
[23:21:08] <greycat> sudosudosudo: what do you want to do with foo.bar.plex?
[23:21:55] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu) (Ping timeout: 252 seconds)
[23:21:56] <greycat> # read -r line < /etc/passwd; IFS=:; array=($line); declare -p array
[23:21:57] <shbot> greycat: declare -a array=([0]="root" [1]="x" [2]="0" [3]="0" [4]="root" [5]="/root" [6]="/bin/bash")
[23:22:05] <greycat> earendel: ^^^  NO. SPACES.
[23:24:10] <earendel> # IFS=:; array=(a:b:c); declare -p array
[23:24:11] <shbot> earendel: declare -a array=([0]="a:b:c")
[23:24:46] <earendel> #abc="a:b:c"; IFS=:; array=($abc); declare -p array
[23:24:58] <earendel> # abc="a:b:c"; IFS=:; array=($abc); declare -p array
[23:25:00] <shbot> earendel: declare -a array=([0]="a" [1]="b" [2]="c")
[23:25:22] <sudosudosudo> Example for greycat: In pwd I have a.avi b.avi c.avi the desired result is mkdir a mkdir b mkdir c then mv a.avi /a mv b.avi /b mv c.avi /c
[23:25:24] <emanuele6> earendel: how many times do we have to say "IFS is only used for word splitting expansions, ${arr[*]}, $* and read"?
[23:25:32] <geirha> earendel: one last attempt. Assume we have   IFS=, s=a,b,c   then   echo "$s" $s   will after bash has parsed it the first time, result in a list of three words: ["echo", "$s", "$s"]. At this point the second element is marked as quoted. Next it runs through various expansion steps, ending up at ["echo", "a,b,c", "a,b,c"]
[23:25:47] <greycat> So you won't tell us what you want to do with foo.bar.avi?  Wonderful.  Should we GUESS?
[23:26:06] <djph> greycat: I vote you throw it in the bitbucket.
[23:26:13] <geirha> The next step after variable expansion is word splitting. All words that are not marked as quoted will be split by the characters of IFS, so it becomes ["echo", "a,b,c", "a", "b", "c"]
[23:26:17] *** Joins: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu)
[23:26:20] *** Joins: zro (~zro@user/zro)
[23:26:45] <sudosudosudo> GReycat foo.bar.avi goes into foo.bar
[23:26:52] <earnestly> I wonder if refering to IFS as your typical split() in programming languages helps
[23:27:05] <twkm> sounds pretty easy sudosudosudo, what's the problem?
[23:27:06] <greycat> sudosudosudo: for f in *.*; do [[ $f = *.*.* ]] && continue; base=${f%.*}; mkdir -p -- "$base" && mv -- "$f" "$base/"; done
[23:27:19] <geirha> set -x will show this as  "+ echo a,b,c a b c".  echo will print each word separated by spaces. "a,b,c a b c"
[23:27:24] <emanuele6> earendel: also note that word splitting only occurs for unquoted substituitions, not for literals
[23:27:29] <greycat> Awww, your answer contradicts djph's answer which I used for my answer.
[23:28:01] <greycat> sudosudosudo: for f in *.*; do base=${f%.*}; mkdir -p -- "$base" && mv -- "$f" "$base/"; done    # Changed.
[23:28:28] <djph> this sounds like !complex is about to be hit, tbh
[23:29:08] *** Quits: drd (~drd@93-42-69-115.ip85.fastwebnet.it) (Ping timeout: 252 seconds)
[23:29:32] <earendel> geirha: sure. otherwise i wouldn't have been able to create the array, before. i wanted either to track down the difference between fields, arrays and strings. it seemed odd to me i can't reference first field  of $var  before explicetly turning it into an array via array($var)..  anyways.
[23:29:58] <earendel> all good now.
[23:29:58] <greycat> Do not store a LIST in a STRING VARIABLE.  This is not POSIX sh.
[23:30:02] <geirha> earendel: and don't do that. Never do array=($var)
[23:30:07] <twkm> i'd use ./*.avi
[23:30:29] <earnestly> This discussion: https://nitter.1d4.us/pic/media%2FFAEDYY4XIAA8WsL.jpg%3Fname%3Dorig
[23:30:32] <greycat> They said "plex files" and then they gave an example with "a.avi" in it, so I have no idea what the actual criteria are.
[23:30:40] *** Quits: zro (~zro@user/zro) (Ping timeout: 252 seconds)
[23:30:56] <twkm> ahh.
[23:31:08] <twkm> right, srt, avi, mp4, mpeg, ...
[23:31:45] <earnestly> Almost like something ffprobe -print_format json something
[23:32:12] <twkm> i'd still use ./ instead of the double --, but i'm a weirdo.
[23:32:25] <emanuele6> i'd use ./ and --
[23:32:47] <sudosudosudo> Whats the relevance of --
[23:32:54] <emanuele6> but greycat's code is not wrong in any way
[23:33:02] <greycat> !--
[23:33:03] <greybot> The special option -- means "end of options" to every POSIX command except echo and test, and to many other commands. E.g. «mv -- *.png /somedir» (in case one of the filenames begins with "-"). See <http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap12.html#tag_12_02> and <http://wiki.bash-hackers.org/dict/terms/end_of_options>
[23:33:20] <sudosudosudo> Ty greycat
[23:33:25] *** Quits: LuksNuke (~LuksNuke@ip-146-0-191-111.dyn.luxfibre.pt.lu) (Ping timeout: 252 seconds)
[23:38:53] *** Joins: h4x0r (~GodMode@user/h4x0r)
[23:39:48] *** Quits: TheArchitect (~GodMode@user/h4x0r) (Quit: ZNC - https://znc.in)
[23:39:49] *** h4x0r is now known as TheArchitect
[23:40:30] *** Joins: aaro (~aaro@user/aaro)
[23:40:42] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 260 seconds)
[23:44:46] *** Joins: anton (~anton@tloks.com)
[23:46:10] *** Quits: anton (~anton@tloks.com) (Client Quit)
[23:49:41] *** Joins: sinaowolabi_ (~SinaOwola@102.134.114.1)
[23:50:17] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[23:50:42] *** Joins: n4dir (~user@88.130.152.23)
[23:52:10] *** Joins: anton (anton@tloks.com)
[23:52:19] <sudosudosudo> greycat: Your code worked perfectly. Do you have any advice on a better testing best practice when working with files. My go to is just to touch a dozen or so files and then test on the files. I didn't account for the added complexity in the file name and it bit me.
[23:52:59] <greycat> Filenames with spaces, filenames with newlines, filenames with leading dots, filenames with lading hyphens.  That'll cover most of the big ones.
[23:53:19] <greycat> I think someone here has a directory set up with "evil files" in it.
[23:54:14] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[23:55:28] *** Joins: matchi (~matchi@2a02:908:2b21:ab20:64c3:48f8:f2e6:622)
[23:57:32] <sudosudosudo> Nothing evil now I just have to go through all the random single name folders and rename them to the filename of the file inside the folder. Good times.
[23:58:12] <twkm> nothing evil currently.
[23:59:24] <sudosudosudo> Unless you count my complete collection of the Dragonball series evil
