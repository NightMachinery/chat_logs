[00:05:12] *** Quits: andreyorst (~andreyors@2.92.126.234) (Ping timeout: 268 seconds)
[00:13:50] *** Quits: Guest62 (~textual@047-006-082-079.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[00:24:04] *** Quits: hoppity (~user@user/hoppity) (Read error: Connection reset by peer)
[00:25:17] *** Quits: henry40408 (~henry4040@112-105-245-48.adsl.dynamic.seed.net.tw) (Ping timeout: 246 seconds)
[00:50:50] *** Quits: mcint (mcint@user/mcint) (Ping timeout: 268 seconds)
[01:07:15] *** Joins: Guest62 (~textual@047-006-082-079.res.spectrum.com)
[01:08:06] *** Quits: bit4bit (~bit4bit@181.49.102.14) (Ping timeout: 265 seconds)
[01:09:06] *** Joins: henry40408 (~henry4040@112-104-97-56.adsl.dynamic.seed.net.tw)
[01:13:51] *** Quits: thojanssens (~thojansse@178.151.5.79) (Ping timeout: 245 seconds)
[01:16:21] *** Quits: mouseghost (~draco@user/mouseghost) (Quit: mew wew)
[01:19:35] *** Joins: andreyorst (~andreyors@2.92.125.243)
[01:27:14] *** Joins: mcint (mcint@user/mcint)
[01:34:43] *** Quits: LostKobrakai (~LostKobra@dia.uberspace.de) (Quit: ZNC 1.8.2 - https://znc.in)
[01:34:52] *** Joins: LostKobrakai (~LostKobra@dia.uberspace.de)
[01:35:03] *** Quits: waz0wski (~waz0wski@hrothgar.distortion.io) (Read error: Connection reset by peer)
[01:35:08] *** Quits: MuffinPimp (~mokou@box.mokou.io) (Quit: Goodbye.)
[01:35:21] *** Joins: MuffinPimp_ (~mokou@box.mokou.io)
[01:35:46] *** MuffinPimp_ is now known as MuffinPimp
[01:36:57] *** Quits: Zarathu (~zarathu@li2222-85.members.linode.com) (Ping timeout: 250 seconds)
[01:37:05] *** Joins: Zarathu (~zarathu@li2222-85.members.linode.com)
[01:37:05] *** Quits: picasso (mike@potbox.pixor.net) (Ping timeout: 268 seconds)
[01:37:38] *** Joins: waz0wski (~waz0wski@hrothgar.distortion.io)
[01:40:09] <mooff> you just need a csv reader, and the json writer you already have
[01:56:37] *** Joins: craig1 (~craig@pa49-199-49-25.pa.vic.optusnet.com.au)
[02:02:33] *** craig1 is now known as w1ddersh1ns
[02:05:35] *** w1ddersh1ns is now known as withershins
[02:19:21] *** Joins: picasso (mike@potbox.pixor.net)
[02:29:34] *** Joins: odoood (~odoood@2601:c8:c003:a550::2)
[02:29:44] *** Joins: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net)
[02:33:42] *** Quits: odoood (~odoood@2601:c8:c003:a550::2) (Client Quit)
[02:34:37] *** Quits: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[02:55:51] *** Quits: Perry (~perry@coffee-break.at) (Quit: ZNC - http://znc.in)
[02:56:09] *** Joins: Perry (~perry@coffee-break.at)
[03:01:27] *** Quits: Zaab1t (~carlbordu@2001:470:69fc:105::78e) (Ping timeout: 250 seconds)
[03:01:53] *** Quits: Soup[m] (~rktjmpmat@2001:470:69fc:105::cdeb) (Ping timeout: 250 seconds)
[03:01:54] *** Quits: kshlm (~kshlm@2001:470:69fc:105::b46b) (Ping timeout: 264 seconds)
[03:01:54] *** Quits: uhoreg (~uhoreg@2001:470:69fc:105::35f) (Ping timeout: 264 seconds)
[03:02:05] *** Quits: PatrikStenmark[m (~patrikste@2001:470:69fc:105::bfa1) (Ping timeout: 246 seconds)
[03:02:05] *** Quits: Jared[m] (~jaredbmat@2001:470:69fc:105::bf98) (Ping timeout: 246 seconds)
[03:02:12] *** Quits: ServerStatsDisco (~serversta@2001:470:69fc:105::1a) (Ping timeout: 268 seconds)
[03:02:19] *** Quits: punnie (~punniemat@2001:470:69fc:105::1193) (Ping timeout: 250 seconds)
[03:02:48] *** Quits: linusmarton[m] (~linusmart@2001:470:69fc:105::890b) (Ping timeout: 268 seconds)
[03:15:46] *** Joins: uhoreg (~uhoreg@2001:470:69fc:105::35f)
[03:21:12] *** Joins: punnie (~punniemat@2001:470:69fc:105::1193)
[03:23:30] *** Joins: Jared[m] (~jaredbmat@2001:470:69fc:105::bf98)
[03:23:56] *** Joins: PatrikStenmark[m (~patrikste@2001:470:69fc:105::bfa1)
[03:25:05] *** Joins: ServerStatsDisco (~serversta@2001:470:69fc:105::1a)
[03:28:01] *** Quits: ur5us (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3) (Ping timeout: 245 seconds)
[03:28:39] *** Joins: kshlm (~kshlm@2001:470:69fc:105::b46b)
[03:38:20] *** Joins: Zaab1t (~carlbordu@2001:470:69fc:105::78e)
[03:38:28] *** Joins: Soup[m] (~rktjmpmat@2001:470:69fc:105::cdeb)
[03:39:13] *** Joins: linusmarton[m] (~linusmart@2001:470:69fc:105::890b)
[03:57:25] *** Joins: y0shi_ (~lizzin@065-190-009-253.inf.spectrum.com)
[03:59:59] *** Quits: y0shi (~lizzin@cpe-107-15-139-54.nc.res.rr.com) (Ping timeout: 252 seconds)
[04:01:32] *** Quits: jtdowney (~jtdowney@user/jtdowney) (Quit: Bye)
[04:03:02] *** Joins: jtdowney (~jtdowney@user/jtdowney)
[04:07:04] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:29f8:c08:f592:7635) (Ping timeout: 252 seconds)
[04:07:48] *** Joins: mahmutov (~mahmutov@5.176.19.239)
[04:09:27] *** Quits: jtdowney (~jtdowney@user/jtdowney) (Quit: Bye)
[04:10:20] *** Joins: jtdowney (~jtdowney@user/jtdowney)
[04:22:22] *** Quits: jtdowney (~jtdowney@user/jtdowney) (Quit: Bye)
[04:23:43] *** Joins: jtdowney (~jtdowney@user/jtdowney)
[04:29:54] *** Joins: ur5us (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3)
[04:31:49] *** Joins: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net)
[04:35:56] *** Quits: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net) (Ping timeout: 245 seconds)
[04:52:33] *** Joins: Guest32 (~Guest32@184.16.69.158)
[04:53:39] *** Quits: Guest32 (~Guest32@184.16.69.158) (Client Quit)
[05:16:03] *** Joins: humberto1 (~humbertow@fixed-189-203-2-241.totalplay.net)
[05:45:28] *** Quits: humberto1 (~humbertow@fixed-189-203-2-241.totalplay.net) (Ping timeout: 252 seconds)
[05:45:43] *** Joins: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net)
[06:09:16] *** Quits: mahmutov (~mahmutov@5.176.19.239) (Ping timeout: 245 seconds)
[06:19:51] *** Quits: terrorjack (~terrorjac@2a05:d012:f4:f400:3981:7d7e:56ee:2dd9) (Ping timeout: 265 seconds)
[06:49:23] *** Quits: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[06:57:08] *** Joins: LostKobrakai_ (~LostKobra@i577BCB1D.versanet.de)
[06:57:11] *** LostKobrakai_ is now known as LostKobrakai[awa
[06:58:23] *** Quits: LostKobrakai[awa (~LostKobra@i577BCB1D.versanet.de) (Client Quit)
[07:11:54] *** Quits: ur5us (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3) (Remote host closed the connection)
[07:12:08] *** Joins: ur5us (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3)
[07:14:37] *** Quits: hendursaga (~weechat@user/hendursaga) (Remote host closed the connection)
[07:15:02] *** Joins: hendursaga (~weechat@user/hendursaga)
[07:30:41] *** Joins: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net)
[07:30:54] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 265 seconds)
[07:35:35] *** Quits: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net) (Ping timeout: 252 seconds)
[07:49:41] *** Quits: ur5us (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3) (Ping timeout: 245 seconds)
[07:50:38] *** Quits: fjmorazan (~quassel@user/fjmorazan) (Ping timeout: 260 seconds)
[07:50:56] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[08:04:09] *** Joins: darkstardevx (~darkstard@2601:1c2:300:c8a0::f2b6)
[08:20:47] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:1435:6fb0:ae8a:9c8d)
[08:26:04] *** Joins: Guest51 (~Guest51@p200300c8cf120f00e34118d8f7a7761f.dip0.t-ipconnect.de)
[08:50:03] *** Joins: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net)
[08:51:31] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:1435:6fb0:ae8a:9c8d) (Read error: Connection reset by peer)
[08:51:52] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:1435:6fb0:ae8a:9c8d)
[08:54:16] *** Quits: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net) (Ping timeout: 245 seconds)
[09:10:42] <serafeim> hello friensd
[09:10:48] <serafeim> congrats to people releasing the phoenix 1.6
[09:11:32] <serafeim> i'll try to update my phxcrd project https://github.com/spapas/phxcrd and report back with any problems in the process. 
[09:11:53] <serafeim> i always have problems when upgrating to new phoenix versions so i think it will be an educational exercise
[09:27:53] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[09:30:39] <serafeim> here's a crazy thing
[09:31:17] <serafeim> in python, when i do `-5 % 2` it returns `1`. in elixir if i do `rem(-5, 2)` it returns `-1` ! care to clarify ? why is that behavior different? what's the correct behavior ?
[09:32:11] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 245 seconds)
[09:33:04] <Nicd> I think it depends on who you ask
[09:33:34] <Nicd> docs say "rem/2 uses truncated division, which means that the result will always have the sign of the dividend."
[09:34:05] *** Joins: chgr (~ek@nat-91-137-16-23.net.encoline.de)
[09:34:10] <serafeim> so there's no correct behavior 
[09:34:16] <serafeim> i just have to take it into account
[09:34:17] <Nicd> https://en.wikipedia.org/wiki/Remainder#In_programming_languages
[09:34:23] *** Joins: phaleth (~phaleth@user/phaleth)
[09:35:05] <serafeim> crazy stuff
[09:35:20] <Nicd> even bigger list: https://en.wikipedia.org/wiki/Modulo_operation#In_programming_languages :D
[09:35:56] <Nicd> you can also use https://hexdocs.pm/elixir/Integer.html#mod/2 that has floored division
[09:36:39] <serafeim> ah yes... the Integer.mod seems to have the same behavior as the python % operator. thank you
[09:37:30] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:1435:6fb0:ae8a:9c8d) (Ping timeout: 260 seconds)
[09:38:32] <serafeim> finally i completed the aoc 2019 day 22 ... probably the worst assignment of all
[09:39:45] <serafeim> i even had the algorithm in python and it didn't worked because of the differences in how mod and % worked :|
[09:40:11] <serafeim> and the fact that elixir doesn't have a proper `powmod`
[09:48:52] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:6c7e:136c:e798:1ec0)
[09:53:34] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:6c7e:136c:e798:1ec0) (Ping timeout: 252 seconds)
[10:15:21] *** Quits: mooff (~mooff@awful.cooking) (Remote host closed the connection)
[10:18:57] *** Joins: mooff (~mooff@awful.cooking)
[10:22:24] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:6c7e:136c:e798:1ec0)
[10:25:54] *** Joins: voltone (~voltone@85.64.15.73.dynamic.barak-online.net)
[10:26:21] *** Quits: mcint (mcint@user/mcint) (Ping timeout: 265 seconds)
[10:26:46] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:6c7e:136c:e798:1ec0) (Ping timeout: 245 seconds)
[10:26:51] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2dd6:a800:4c99:f70d:f90:2320)
[10:32:02] *** Quits: voltone (~voltone@85.64.15.73.dynamic.barak-online.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:33:35] *** Joins: voltone (~voltone@85.64.15.73.dynamic.barak-online.net)
[10:38:18] *** Quits: voltone (~voltone@85.64.15.73.dynamic.barak-online.net) (Ping timeout: 265 seconds)
[10:58:59] *** Joins: grundrausch3n (~grundraus@139.142.207.35.bc.googleusercontent.com)
[11:13:02] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:6c7e:136c:e798:1ec0)
[11:17:22] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:6c7e:136c:e798:1ec0) (Ping timeout: 260 seconds)
[11:18:39] <josevalim> serafeim: without a proper powmod, does it take too long?
[11:20:02] <serafeim> yes it can't finish. however i was a able to find an erlang powmod implementation that i translated to elixir and it worked :)https://gist.github.com/Radcliffe/e41b41a441deda19e7ac5731197f49be
[11:20:23] <serafeim> can't understand what it's doing though
[11:23:08] <josevalim> so there is a fast algorithm for integer exponention which is to traverse the bits of the exponent. if the bit is 1, you multiply the base per the result
[11:23:57] <josevalim> it is the same algorithm we use here: https://github.com/elixir-lang/elixir/blob/master/lib/elixir/lib/kernel.ex#L4140-L4150
[11:24:06] *** Joins: glassofethanol (~ethanmorg@82.16.192.251)
[11:24:27] <josevalim> it seems powmod just sprinkles some `rem` ops along the way
[11:26:16] <josevalim> https://en.wikipedia.org/wiki/Exponentiation_by_squaring
[11:28:36] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[11:29:06] <josevalim> it should be relatively straightforward to support this in Elixir too :)
[11:29:35] <josevalim> you can copy and paste the above into Integer.pow and make it accept a third argument called `mod \\ 1`
[11:29:43] <josevalim> if you want to send a PR, it will be welcome!
[11:30:35] <serafeim> thank you jose adding the mod argument to pow would be great ... it's also how the python `pow` works
[11:31:43] *** Quits: Sgeo (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[11:32:07] <Nicd> new job title: Serafeim, Elixir core developer
[11:33:01] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 245 seconds)
[11:34:24] <serafeim> ha ha ok
[11:50:31] <hauleth> josevalim: is there a way to run code after all `after_compiler/2` callbacks are ran? I want to provide a tool that will extract the diagnostics and output them in machine-readable form. Or the only way to do so is to provide custom task that will run `Mix.Task.run(:compile, args)`
[12:02:02] *** Joins: terrorjack (~terrorjac@2a05:d012:f4:f400:3981:7d7e:56ee:2dd9)
[12:05:37] *** Joins: ur5us (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3)
[12:36:58] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Excess Flood)
[12:40:51] <josevalim> if you need access to all diagnostics from all tasks, that sounds like the way to go, yeah
[12:42:11] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[12:53:06] *** Quits: amk (~amk@109.255.169.126) (Remote host closed the connection)
[12:53:14] *** Joins: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net)
[12:53:16] *** Joins: amk (~amk@109.255.169.126)
[12:57:28] *** Joins: Guest74 (~Guest74@93-41-99-82.ip81.fastwebnet.it)
[12:57:36] *** Quits: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net) (Ping timeout: 245 seconds)
[12:57:48] *** Quits: ur5us (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3) (Remote host closed the connection)
[12:58:07] *** Joins: ur5us (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3)
[12:59:16] *** Quits: Guest74 (~Guest74@93-41-99-82.ip81.fastwebnet.it) (Client Quit)
[13:11:28] *** Joins: natrys (~natrys@user/natrys)
[13:24:41] *** Quits: ur5us (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3) (Ping timeout: 245 seconds)
[13:29:22] *** LostKobrakai_ is now known as LostKobrakai[awa
[13:29:26] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:2dd6:a800:4c99:f70d:f90:2320) (Quit: LostKobrakai[awa)
[13:31:01] *** Quits: chgr (~ek@nat-91-137-16-23.net.encoline.de) (Quit: WeeChat 3.2)
[13:31:30] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2dd6:a800:4c99:f70d:f90:2320)
[14:14:29] *** Quits: grundrausch3n (~grundraus@139.142.207.35.bc.googleusercontent.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[14:15:04] *** Joins: grundrausch3n (~grundraus@139.142.207.35.bc.googleusercontent.com)
[14:16:13] *** Joins: thojanssens (~thojansse@178.151.5.79)
[14:18:28] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[14:19:24] *** Joins: marcecoll[m] (~marcecoll@2001:470:69fc:105::1:641)
[14:23:51] *** Quits: LostKobrakai_ (~LostKobra@2001:16b8:2dd6:a800:4c99:f70d:f90:2320) (Ping timeout: 245 seconds)
[14:25:16] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2dd6:a800:799f:5ddf:bc77:71dc)
[14:31:01] *** Joins: brauliobz (~manjaro-u@user/brauliobz)
[14:57:21] *** Joins: pi1 (~pi@177.223.162.27)
[15:12:06] *** Quits: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net) (Ping timeout: 260 seconds)
[15:14:16] *** Quits: thojanssens (~thojansse@178.151.5.79) (Ping timeout: 245 seconds)
[15:42:40] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:e17e:b275:238c:d106)
[15:51:21] *** Quits: pi1 (~pi@177.223.162.27) (Ping timeout: 245 seconds)
[16:02:31] *** Joins: pi1 (~pi@177.223.162.27)
[16:34:05] *** Parts: azazel (~azazel@orphu.arstecnica.it) (ERC (IRC client for Emacs 28.0.50))
[16:34:25] *** Joins: azazel (~azazel@orphu.arstecnica.it)
[16:45:06] *** Quits: pi1 (~pi@177.223.162.27) (Ping timeout: 245 seconds)
[16:55:16] *** Joins: koevet (~textual@ip5b4113de.dynamic.kabel-deutschland.de)
[17:24:41] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:e17e:b275:238c:d106) (Ping timeout: 245 seconds)
[17:25:47] *** Quits: koevet (~textual@ip5b4113de.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:29:12] *** Joins: james_la1 (~jameslavi@ool-457981b2.dyn.optonline.net)
[17:30:01] *** Joins: bit4bit (~bit4bit@181.49.102.14)
[17:30:02] *** Joins: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de)
[17:54:33] *** Joins: bandit_za (~bandit_za@185.195.232.173)
[17:56:21] <hauleth> josevalim: I have first example - https://github.com/hauleth/mix_machine
[17:57:07] <hauleth> It is a task that should produce the output in SARIF or CodeClimate output, so Elixir compilation diagnostics can be shown in GitHub/GitLab UI
[17:58:25] <hauleth> Example report - https://github.com/hauleth/mix_machine/security/code-scanning/4?query=ref%3Arefs%2Fheads%2Fmaster
[18:12:25] *** Joins: pi1 (~pi@177.223.162.27)
[18:13:16] *** Quits: bandit_za (~bandit_za@185.195.232.173) (Ping timeout: 256 seconds)
[18:18:51] *** Joins: hoppity (~user@user/hoppity)
[18:19:30] <hoppity> Does anyone know of an Elixir one-liner that can perform String.to_integer or use a default value upon failure?
[18:20:56] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 245 seconds)
[18:22:17] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:28:14] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[18:36:28] *** Joins: gitgood (~gitgood@80-44-12-204.dynamic.dsl.as9105.com)
[18:40:18] *** Quits: hoppity (~user@user/hoppity) (Remote host closed the connection)
[18:49:21] *** Joins: humberto1 (~humbertow@2806:107e:f:2338:905f:966d:c414:96d4)
[18:50:55] *** Quits: notzmv (~zmv@user/notzmv) (Ping timeout: 252 seconds)
[18:56:06] *** Quits: humberto1 (~humbertow@2806:107e:f:2338:905f:966d:c414:96d4) (Ping timeout: 260 seconds)
[19:01:33] <Guest51> is it possible to use postgres triggers with ecto?
[19:01:42] *** Joins: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net)
[19:12:48] <Ankhers> Guest51: Kinda? The trigger gets executed automatically if the event it is looking for happens. You don't actually call the trigger. What is it you are trying to do?
[19:14:35] *** Quits: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net) (Remote host closed the connection)
[19:14:42] <Guest51> Ankhers: the main problem is I want to update a user's follower count in an efficient way, I though maybe triggers would be a good way of doing this
[19:15:06] <Guest51> specifically, the User schema has a "followers:int" field
[19:15:30] <Guest51> and rather than counting the total number of rows in the "followers" table, i would like to use this field instead
[19:15:49] <Guest51> really not sure what the best way of going about all of this is though honestly
[19:16:00] *** Joins: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net)
[19:16:07] <rawtaz> the good ol "do i put my logic in the db or in the app" question :<
[19:17:49] *** Quits: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[19:18:39] <Ankhers> My biggest problem with storing something like that in the database is that it will most likely get out of sync at some point. Depending on your app size it would not be bad to get a count from the database whenever you need it.
[19:19:21] <Ankhers> You could also always cache the result if it becomes a problem.
[19:21:20] <Guest51> Ankhers: honestly it doesn't need to be up to date in real time does it? i'm not sure how similar systems work, but wouldn't it make sense to update the field periodically and just use the static value most of the time?
[19:22:27] <Guest51> or at least that's what my intuition says, but i could be totally off base of course
[19:22:47] <Ankhers> I can't answer that for your application. But that is essentially what I suggested with caching.
[19:22:54] <Guest51> ah ok
[19:23:18] <Ankhers> The only difference is you generally don't cache things in a database like postgres. But there is no reason you couldn't for smaller applications.
[19:25:10] <Guest51> do people use redis for stuff like this?
[19:26:18] <Nicd> I store some of that sort of cache data in postgres and update it when data comes in and also periodically regenerate it to deal with possible drift issues
[19:26:26] <Nicd> some is stored in ETS
[19:27:08] <Guest51> how do you handle the periodic updating part? do you use a cron/queue like oban to do this?
[19:28:00] <Nicd> I could but I have a GenServer with a send_after that picks the oldest n items and regenerates them periodically
[19:28:53] <Ankhers> I can't answer for everyone, but I generally start with Redis as a cache.
[19:30:11] *** Joins: humberto1 (~humbertow@2806:107e:f:709b:816a:8ef2:27c7:6b9)
[19:30:27] *** Joins: notzmv (~zmv@user/notzmv)
[19:33:44] *** Quits: glassofethanol (~ethanmorg@82.16.192.251) (Quit: leaving)
[19:34:41] *** Quits: humberto1 (~humbertow@2806:107e:f:709b:816a:8ef2:27c7:6b9) (Ping timeout: 245 seconds)
[19:35:34] <Guest51> a lot of choice, but how does this sound: every N hours (say N = 1), I do a query on all users (and a join on the last user that followed them, via the "follows" table), and if the user.last_updated timestamp is earlier than the follow.created_at timestamp, i push a new job to oban that will run an aggregate count on all followers a user has
[19:35:41] <Guest51> does that make sense?
[19:35:57] *** Joins: Nicd[m] (~nicd-matr@2001:470:69fc:105::1:6af)
[19:36:00] <Guest51> (oh and the oban job then updates the "followers" field in the User schema)
[19:36:38] <Guest51> not sure if that's a good way of handling it, but it was the first thing to come to my head
[19:36:59] *** Parts: Nicd[m] (~nicd-matr@2001:470:69fc:105::1:6af) ()
[19:39:22] <Nicd> it works if the follower count isn't required to be accurate at any given time
[19:47:07] <Guest51> Nicd: ideally the count would be accurate, but if it means having to build some complex analytics system or having to run an expensive aggregate query each time the user is queried, then at some point its probably not worth it
[19:47:41] <Guest51> not sure how to get that trade off right though
[19:48:59] <Guest51> perhaps triggering the recount when a user gets a new follower, and if a certain time period has elapsed?
[19:49:36] <Nicd> I update the data when new data comes in
[19:49:46] <Guest51> e.g. when a new follow row is created, if user.last_updated is 30 minutes or more older than follow.created_at, then run a new cron
[19:49:59] <Guest51> Nicd: wouldn't that potentially be quite inefficient though?
[19:50:09] <Nicd> that would be up to you to benchmark
[19:50:45] <Guest51> e.g. if a user has 100,000 followers, and each time someone queries the user page (where followers is listed), you've have to recount all those rows
[19:51:43] <srfsh> can't you keep track of it under a separate field and update that field once someone follows/unfollows?
[19:51:49] <Nicd> I said I _update_ the cached data when new data comes in
[19:52:00] <Guest51> ah ok, i misunderstood
[19:52:01] <Nicd> so in your case on a follow you'd just do +1 or -1
[19:52:20] <Nicd> the timer regenerates it from 0 to fix any mistake
[19:52:46] <Guest51> that's actually a really practical solution, sounds like the best option
[19:53:06] <Guest51> i'll implement that then, thank you guys
[19:55:01] *** Joins: shiraeeshi[m] (~shiraeesh@2001:470:69fc:105::1:77)
[20:39:42] *** Joins: koolazer (~koo@user/koolazer)
[20:43:05] *** Joins: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de)
[20:44:24] *** Joins: chgr (~ek@nat-91-137-16-23.net.encoline.de)
[20:46:36] *** Quits: chgr (~ek@nat-91-137-16-23.net.encoline.de) (Client Quit)
[20:52:49] *** LostKobrakai_ is now known as LostKobrakai[awa
[20:52:49] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:2dd6:a800:799f:5ddf:bc77:71dc) (Quit: LostKobrakai[awa)
[20:55:58] *** Joins: mcint (mcint@user/mcint)
[20:58:53] *** Quits: bit4bit (~bit4bit@181.49.102.14) (Ping timeout: 264 seconds)
[21:04:49] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2dd6:a800:799f:5ddf:bc77:71dc)
[21:11:21] *** Quits: grundrausch3n (~grundraus@139.142.207.35.bc.googleusercontent.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:11:55] *** Joins: grundrausch3n (~grundraus@139.142.207.35.bc.googleusercontent.com)
[21:20:16] *** Quits: koevet (~koevet@ip5b4113de.dynamic.kabel-deutschland.de) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:31:30] *** Quits: rx80 (~quassel@user/rx80) (Quit: rx80)
[21:44:36] *** Joins: cevado[m] (~cevadomat@2001:470:69fc:105::1:6d3)
[21:48:55] *** Quits: yauhsien (~yauhsien@118-167-48-21.dynamic-ip.hinet.net) (Remote host closed the connection)
[21:49:12] *** LostKobrakai_ is now known as LostKobrakai[awa
[21:49:12] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:2dd6:a800:799f:5ddf:bc77:71dc) (Quit: LostKobrakai[awa)
[21:49:46] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2dd6:a800:799f:5ddf:bc77:71dc)
[21:51:24] *** Quits: darkstardevx (~darkstard@2601:1c2:300:c8a0::f2b6) (Read error: Connection reset by peer)
[21:59:38] *** LostKobrakai_ is now known as LostKobrakai[awa
[21:59:38] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:2dd6:a800:799f:5ddf:bc77:71dc) (Quit: LostKobrakai[awa)
[22:00:05] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2dd6:a800:799f:5ddf:bc77:71dc)
[22:02:41] *** Joins: bit4bit (~bit4bit@181.49.102.14)
[22:08:04] *** Joins: darkstardevx (~darkstard@2601:1c2:300:c8a0::f2b6)
[22:15:06] *** Quits: LostKobrakai_ (~LostKobra@2001:16b8:2dd6:a800:799f:5ddf:bc77:71dc) (Quit: LostKobrakai_)
[22:37:47] *** Quits: phaleth (~phaleth@user/phaleth) (Quit: phaleth)
[22:44:09] *** Joins: LostKobrakai_ (~LostKobra@2001:16b8:2dd6:a800:799f:5ddf:bc77:71dc)
[22:44:20] *** LostKobrakai_ is now known as LostKobrakai[awa
[22:44:57] *** Quits: LostKobrakai[awa (~LostKobra@2001:16b8:2dd6:a800:799f:5ddf:bc77:71dc) (Client Quit)
[22:48:16] *** Joins: humberto1 (~humbertow@2806:107e:f:709b:e0d3:d76c:e717:974f)
[23:04:42] *** Quits: Guest51 (~Guest51@p200300c8cf120f00e34118d8f7a7761f.dip0.t-ipconnect.de) (Quit: Client closed)
[23:06:58] *** Joins: mouseghost (~draco@user/mouseghost)
[23:25:24] *** Joins: jswny (~jswny@142-79-223-122.starry-inc.net)
[23:26:53] *** Quits: jswny (~jswny@142-79-223-122.starry-inc.net) (Client Quit)
[23:35:54] *** Joins: ur5us (~ur5us@2406:e002:6bd3:6701:534f:b327:a77f:88b3)
