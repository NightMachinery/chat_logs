[00:23:32] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[01:39:27] <dTal> bok bok bok
[01:45:10] *** Joins: m455 (~m455@user/m455)
[02:57:27] *** Quits: andyjpb (~andyjpb@user/andyjpb) (Quit: Connection closed)
[03:26:21] *** Quits: alaricsp (~alaric@user/alaricsp) (Ping timeout: 252 seconds)
[03:26:34] *** Joins: alaricsp (~alaric@73.238.187.81.in-addr.arpa)
[03:26:35] *** Quits: alaricsp (~alaric@73.238.187.81.in-addr.arpa) (Changing host)
[03:26:35] *** Joins: alaricsp (~alaric@user/alaricsp)
[03:27:17] *** Quits: ublx (~ublx@user/ublx) (Ping timeout: 250 seconds)
[03:27:17] *** Joins: ublix (~ublx@user/ublx)
[03:34:09] *** Quits: ublix (~ublx@user/ublx) (Quit: ublix)
[03:35:26] *** Joins: ublx (~ublx@user/ublx)
[03:44:43] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[03:45:01] *** Joins: m455 (~m455@user/m455)
[03:49:55] *** Quits: m455 (~m455@user/m455) (Quit: WeeChat 3.0)
[03:50:12] *** Joins: m455 (~m455@user/m455)
[03:50:54] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:c514:d4dd:e381:3dae)
[03:50:54] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:c514:d4dd:e381:3dae) (Changing host)
[03:50:54] *** Joins: skapata (~Skapata@user/skapata)
[03:50:57] *** Quits: m455 (~m455@user/m455) (Client Quit)
[03:51:31] *** Joins: m455 (~m455@user/m455)
[04:38:59] *** Joins: klovett (~klovett@107.115.32.161)
[04:40:30] *** Quits: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at) (Ping timeout: 256 seconds)
[05:41:57] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[05:44:47] *** Joins: s-liao (~s-liao@101.86.96.154)
[06:39:04] <vandusen> "liao" pasted "copy version of ##sys#char->utf8-string" http://paste.call-cc.org/paste?id=54ec9e0b527f089fafd6f2e4b5b22ace7bd38367
[06:40:37] <s-liao> When running  the script of copy version of ##sys#char->utf8-string, like (ichar->utf8-string #\xc0)  the output is "Ã�" .
[06:41:02] <s-liao> But run (##sys#char->utf8-string #\xc0)
[06:41:30] <s-liao> the output is "À"
[06:43:03] <s-liao> Run the script is that (load "111.scm") ,then (ichar->utf8-string  #\xc0) in REPL
[06:50:05] <s-liao> I mean that same function and the same input, why the output is the different.
[07:01:31] *** Quits: s-liao (~s-liao@101.86.96.154) (Quit: Client closed)
[07:01:50] *** Joins: s-liao (~s-liao@101.86.96.154)
[07:32:16] *** Quits: cjb (~cjb@user/cjb) (Quit: rcirc on GNU Emacs 29.0.50)
[08:31:44] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[08:55:35] *** Quits: klovett (~klovett@107.115.32.161) (Quit: ZZZzzz…)
[09:07:38] *** Quits: elderK (uid205007@id-205007.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[09:19:49] *** Quits: s-liao (~s-liao@101.86.96.154) (Quit: Client closed)
[09:38:34] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 256 seconds)
[10:22:58] *** Joins: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at)
[11:26:46] <vandusen> "freee" pasted "freeee" http://paste.call-cc.org/paste?id=956253781670538376a08d4a5241f75f2902b69d
[11:26:46] <judybot> vandusen: spam 956253781670538376a08d4a5241f75f2902b69d
[11:26:47] <vandusen> judybot: I have deleted 1 paste(s) with hash 956253781670538376a08d4a5241f75f2902b69d successfully.
[11:43:17] *** Joins: s-liao (~s-liao@101.86.96.154)
[11:44:18] *** Joins: mononote (~mononote@user/mononote)
[12:02:16] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:818e:55b0:ddc9:c071)
[12:02:16] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:818e:55b0:ddc9:c071) (Changing host)
[12:02:16] *** Joins: skapata (~Skapata@user/skapata)
[12:13:45] *** Quits: s-liao (~s-liao@101.86.96.154) (Ping timeout: 256 seconds)
[12:15:34] <vandusen> "freeee" pasted "freeeeeee" http://paste.call-cc.org/paste?id=d97f837fb4919cd6bd10418e5ad2f317ad742cdc
[12:15:34] <judybot> vandusen: spam d97f837fb4919cd6bd10418e5ad2f317ad742cdc
[12:15:35] <vandusen> judybot: I have deleted 1 paste(s) with hash d97f837fb4919cd6bd10418e5ad2f317ad742cdc successfully.
[13:16:38] *** Joins: andyjpb (~andyjpb@user/andyjpb)
[13:33:34] *** Joins: s-liao (~s-liao@101.86.96.154)
[13:37:25] <sjamaan> s-liao: I think your copy of ##sys#char->utf8-string doesn't work because the utf8-egg is loaded in it, which means you'll be double-encoding the char in the string
[13:38:13] <s-liao> Let me try it.
[13:45:37] <s-liao> (string #\xc1) works
[13:46:19] <sjamaan> yeah, because "display" from the utf8 egg will call ##sys#char->utf8-string
[13:47:13] <s-liao> But it also need (import utf8)
[13:48:40] <wasamasa> I recommend importing utf8 with a prefix to avoid overriding everything
[13:48:45] <wasamasa> or only importing a subset
[13:48:52] <wasamasa> that makes figuring out what's going wrong a lot easier
[13:49:10] <s-liao> Without (import utf8), it works.
[13:52:37] <s-liao> Yes. It is about overriding. As the documentation in source file, the procure is part of the core.
[14:28:52] *** Quits: s-liao (~s-liao@101.86.96.154) (Quit: Client closed)
[14:32:31] *** Joins: s-liao (~s-liao@101.86.96.154)
[14:33:55] <s-liao> How can import subset of one egg? Like Python, import function of one module.
[14:34:04] <s-liao> wasamasa
[14:34:47] <wasamasa> http://api.call-cc.org/5/doc/chicken/modules#def:import
[14:44:27] <s-liao> Thanks
[14:44:34] <s-liao> But (import (only (chicken utf8) write-char)
[14:44:48] <s-liao> Then (write-char #\xc1)
[14:44:55] <s-liao> It does not work.
[14:45:19] <s-liao> Only work with (import utf8)
[14:45:43] <Bunny351> (import (only utf8) write-char)
[14:46:14] <Bunny351> (import (only utf8 write-char))
[14:46:18] <Bunny351> (sorry)
[14:48:37] <s-liao> Yes. (import (only utf8 write-char)) works
[15:05:37] <s-liao> sjamaan what do you mean "double-encoding the char in the string"?
[15:06:01] <s-liao> You mean that encode the char double time?
[15:09:00] <s-liao> Like with utf8 egg, in (ichar->utf8-string #\xc1), as the input #\xc1, the encode char #\xc1, then pass into  ichar->utf8-string, encode the code again?
[15:11:54] <sjamaan> yeah
[15:40:58] <s-liao> Yes. it is. I tried encoding #\Á with that function again. the output is Ã�.
[15:48:03] <s-liao> Bunny351 One more thing, after (import utf8), type #\xc1 in REPL. the ./csi not invoke the re-importing print
[15:48:48] <Bunny351> "print" is the same, with utf8 and without. utf8 merely changes the parts than perform encoding.
[15:50:31] <s-liao> But why type #\xc1 in REPL, then enter. the the encoded code can not display.
[15:51:04] <s-liao> But (print #xc1) works
[15:51:25] <Bunny351> it also depends on your terminal
[15:52:39] <s-liao> after (import utf8), (print #\xc1)  start to work.
[15:53:50] <Bunny351> oh, you're right
[15:53:55] <Bunny351> "print
[15:54:01] <Bunny351> " is indeed replaced
[16:03:54] <s-liao> Yesterday's message has the piece of the code, which is about char code encoding of REPL
[16:04:41] <s-liao> Now I can not find out that piece of code. I did not save the history of the chat.
[16:05:02] <s-liao> Will find later.
[16:20:00] <sjamaan> utf8's facade isn't complete, as we've seen in https://bugs.call-cc.org/ticket/1374
[16:20:16] *** Quits: s-liao (~s-liao@101.86.96.154) (Ping timeout: 256 seconds)
[16:39:52] *** Joins: s-liao (~s-liao@101.86.96.154)
[16:47:13] <s-liao> Okay
[16:53:17] *** Joins: simonwo (~simonwo@cpc160097-nmal26-2-0-cust8.19-2.cable.virginm.net)
[16:55:43] <s-liao> I got confused. Once (import utf8),  as the above the logical (write-char #\xc1) also encoding double times.
[16:58:20] <s-liao> The only different is that the copy version of piece code is directly call the encoding with the uft8 egg.
[17:03:15] <s-liao> (write-char #\xc1) version of the code call re-import function, then it invoke the code in the core (libchicken.so.11)
[17:04:22] <s-liao> The second version (write-char #\xc1) , it is passing  #\xc1 as string?
[17:05:47] <s-liao> sjamaan
[17:14:39] <sjamaan> I don't quite understand what you mean
[17:14:52] <sjamaan> write-char shouldn't double-encode
[17:22:24] <s-liao> (write-char #\xc1), like as input #\xc1 is encoded, come down to the call ##sys#char->utf8-string ,encoding again
[17:26:30] <s-liao> I tested in the first case, (ichar->utf8-string #\xc1), #\xc1 as the input, encoding to Á, then encode Á again. then the result is Ã�
[17:31:17] <sjamaan> "write-char" encodes its output as utf8, just like "display" does, in the utf8 module
[17:51:41] <s-liao> What that mean in the utf8 module, the write-char finally come down to  ##sys#char->utf8-string in the core.
[17:52:47] *** Quits: simonwo (~simonwo@cpc160097-nmal26-2-0-cust8.19-2.cable.virginm.net) (Ping timeout: 252 seconds)
[17:53:20] <s-liao> utf8 just re-import ##sys#char->utf8-string  as write-char, which wrote the character to the current port.
[17:53:39] <sjamaan> s-liao: yeah, write-char calls write-utf8-char in utf8-core.scm, which uses display with char->utf8-string
[17:54:20] <sjamaan> It doesn't import ##sys#char->utf8-string as write-char!
[17:56:39] <s-liao> Yes. it does not, the re-import write-char, invoke the char->utf8-string ,which is from ##sys#char->utf8-string
[17:59:10] *** Joins: klovett (~klovett@107.115.32.161)
[17:59:11] <s-liao> I am adding that function into one egg, export the copy version of  ##sys#char->utf8-string.
[18:00:44] *** Joins: simonwo (~simonwo@cpc160097-nmal26-2-0-cust8.19-2.cable.virginm.net)
[18:11:48] <s-liao> sjamaan there is different.
[18:12:43] <s-liao> One way is like the copy-version of ##sys#char->utf8-string with utf8
[18:13:31] <s-liao> Other way is that export copy-version of ##sys#char->utf8-string in egg with utf8
[18:13:54] <s-liao> The first version is encoding double time.
[18:14:21] <s-liao> The second one is encoding one time.
[18:14:37] <sjamaan> That makes no sense
[18:14:50] <sjamaan> Can you show a minimal example of this failing?
[18:15:08] <s-liao> It make sense.
[18:15:23] <s-liao> we need to ask Bunny351
[18:15:38] <s-liao> Okay
[18:17:37] <vandusen> "liao" pasted "copy version ##sys#char->utf8-string" http://paste.call-cc.org/paste?id=87b812ba9c9da7dbc7d991eb4c1ac0f9fc64faf7
[18:18:29] <sjamaan> For me that prints a Unicode questionmark and then returns "Á"
[18:18:30] <s-liao> The two version is the output is different.
[18:19:02] <sjamaan> Sure, because core's version of "print" does not know how to convert characters to UTF8 encoding
[18:19:13] <sjamaan> It just outputs the raw byte 0xc1
[18:19:26] <sjamaan> That's to be expected
[18:19:42] <s-liao> Yes.
[18:19:55] <s-liao> either way.
[18:20:06] <sjamaan> It's not double-encoding
[18:20:44] <s-liao> The first version is encoding two times
[18:21:22] <s-liao> Let me think
[18:22:28] <s-liao> Why both of version (print c) with utf8 are different?
[18:23:29] <sjamaan> Because utf8 patches print to do something else
[18:23:50] <s-liao> yes
[18:25:51] <s-liao> But why in one egg, it does not  print correctly.
[18:26:10] <sjamaan> Because that egg is not importing utf8's version of print, probably
[18:26:23] <s-liao> Yeah, you are right.
[18:26:47] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[18:28:33] <s-liao> One is inside utf8 egg (print #\xc1). one is outside utf8 egg (print #\xc1)
[18:29:34] <s-liao> ?Á does not work in my side.
[18:31:28] <s-liao> I do not understand what is it Ã�.
[18:31:37] <sjamaan> ?
[18:31:40] <s-liao> in the first verion
[18:32:25] <s-liao> （load "111.scm") with utf8 egg
[18:34:01] <s-liao> (string (integer->char (fxior #b11000000 (fxshr i 6)))
[18:34:02] <s-liao>                (integer->char (fxior #b10000000 (fxand i #b111111))))
[18:35:31] <s-liao> when (define i (char->integer c))
[18:35:54] <s-liao> The output is exactly Ã�.
[18:38:12] <sjamaan> If you have the utf8 egg loaded, it will convert characters to utf8 when printing.  If you are also converting the characters to utf8 yourself, you end up with double encoding, which is incorrect
[18:40:47] <s-liao> Yes
[18:42:41] <s-liao> with input #\xc1 or #\Á, eval the above s-exp without utf8 egg. the same result.
[18:46:49] <sjamaan> I don't understand what you are expecting
[18:46:56] <s-liao> with input #\xc1 or #\Á, eval the above s-exp with utf8 egg, the output are same  Ã�
[18:47:52] <s-liao> Just figure out what reason for the encode thing.
[18:48:04] <s-liao> Thanks anyway.
[18:48:21] <s-liao> I have to get to sleep.
[18:48:28] <sjamaan> OK, sleep well
[18:50:13] *** Quits: s-liao (~s-liao@101.86.96.154) (Quit: Client closed)
[21:36:15] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 250 seconds)
[23:00:33] *** Joins: justinethier (~justineth@pool-96-244-241-160.bltmmd.fios.verizon.net)
[23:28:42] *** Joins: monkey_ (~user@181.114.17.106)
[23:43:34] *** Joins: mononote (~mononote@user/mononote)
[23:48:31] *** Joins: clouded_ (~clouded@mail.clouded.monster)
[23:51:41] *** Quits: clouded_ (~clouded@mail.clouded.monster) (Remote host closed the connection)
[23:53:34] *** Joins: clouded_ (~clouded@mail.clouded.monster)
[23:58:03] *** clouded_ is now known as monster
[23:59:03] *** monster is now known as cm
[23:59:33] *** cm is now known as Guest3777
