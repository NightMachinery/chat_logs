[00:03:15] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 265 seconds)
[00:03:53] *** Joins: jokoon (~eio@2a01:e0a:542:e160:a439:2e93:90:56d0)
[00:04:11] *** Parts: Caffeinated (~Caffeine@user/alexdelarge) ()
[00:04:23] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Quit: Leaving)
[00:04:55] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Ping timeout: 260 seconds)
[00:06:07] *** Joins: webNET4 (~0x100@32.211.211.39)
[00:06:53] *** Joins: pavonia (~user@user/siracusa)
[00:07:35] *** Quits: jamea (~jamea@10.189-202-213.bestelclientes.com.mx) (Ping timeout: 265 seconds)
[00:14:01] <mrig> most printers have a far wider gamut than srgb, this is one of the thing that can make it difficult to get the same colours on a print that you see on the screen, the screen is usually far more limited.
[00:14:46] <mrig> there are profiles that match one gamut to another for this.
[00:15:00] <mrig> icc files if memory serves.
[00:15:42] <mrig> This used to be a job, computers did away with it though.
[00:16:10] <jtgd> the resolution of the eye (~1 min arc) matches a 55" 4k screen at 41 inches. If you are farther away than that it is a complete waste of resolution.
[00:16:15] <mrig> for photos that is, may still exist in some publications.
[00:17:35] <mrig> Rounin: Aren't those known as shuriken? :D
[00:17:53] <[itchyjunk]> what would it mean to print 8k resolution pic? :s
[00:17:54] <jtgd> they make the RGB of the display match the RGB of the cones in the eye at the peak of their respective response curves. That fools the eye to see all the colors.
[00:18:01] <[itchyjunk]> i've started seeting 8k stuff on youtube
[00:18:20] <[itchyjunk]> but do new laptops already support this in their screens?
[00:18:27] <jtgd> 8k is a complete waste. It is all marketing.
[00:18:39] <[itchyjunk]> hmm
[00:18:45] <[itchyjunk]> netflix disagrees
[00:18:51] <[itchyjunk]> but not sure what their reasoning is
[00:18:57] <[itchyjunk]> but they are heavily invested in it
[00:19:07] <[itchyjunk]> maybe larger screens needs higher resolution to maintain quality?
[00:19:46] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[00:19:59] <jtgd> so they can boast that they have 8k instead of 4k. People will be SO impressed. If you're talking Netflix then they will compress it to where it's the same visual information as 4k, or even HD.
[00:19:59] *** Joins: webNET4 (~0x100@32.211.211.39)
[00:20:11] <[itchyjunk]> netflix and japan were experimenting with 16k a few years back iirc
[00:20:11] <[itchyjunk]> https://en.wikipedia.org/wiki/16K_resolution
[00:20:13] <bayaz> Title: 16K resolution - Wikipedia 
[00:20:39] <[itchyjunk]> maybe it matters for VR?
[00:20:56] <[itchyjunk]> there seems to be a lot of people working on it so it's hard for me to dismiss it as stricrly marketing scam
[00:20:58] <webNET4> it matters for hardware sales
[00:21:00] <webNET4> and keeping prices up
[00:21:01] <jtgd> quality? whatis the point if your eye can't see it? What if your display had a billion PPI? do you think it would look better?
[00:21:03] <[itchyjunk]> heh
[00:21:13] <[itchyjunk]> maybe it would!
[00:21:18] <[itchyjunk]> idk , i've not seen it
[00:21:22] <webNET4> and so you can never sanely use a computer for multimedia without a GPU
[00:22:29] <jtgd> like I said, 55" matches at 41" away so it might make sense ofr a computer monitor that you are close to anyway. 35" screen matches at 26" so that would be a good monitor size @ 4k
[00:27:05] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 260 seconds)
[00:29:09] *** Quits: juliaEnv (~juliaEnv@ip-86-49-255-202.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[00:29:22] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[00:29:27] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[00:30:57] *** Joins: spacecraft (~spacecraf@98.50.16.116)
[00:32:33] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:38:02] <[itchyjunk]> maybe we can implant bionic eyes in future and it's useful then
[00:38:08] <[itchyjunk]> you can never predict the future!
[00:38:28] <webNET4> makes sense, what would be more expensive than a bionic eye
[00:39:08] <GeDaMo> If you can implant bionic eyes, why not just have the image project into them directly?
[00:39:12] <[itchyjunk]> 2 bionic eyes
[00:39:18] <webNET4> it's the edn game of maximizing profit margins
[00:41:17] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Read error: Connection reset by peer)
[00:41:59] <jtgd> I don't think the brain would handle the higher resolution bionic eye. The resolution I state is for the center of the eye. Peripheral vision is much less. Your brain just deals with what you're looking at.
[00:42:04] *** Joins: snake (~snake@user/snake)
[00:42:52] *** Quits: KeanuReeves (~dunkeln@94.128.205.199) (Ping timeout: 265 seconds)
[00:43:57] <pyzozord> I guess the benefit of bionic eyes is that you can have real world zoom
[00:44:13] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[00:44:14] *** Quits: dan01 (~dan01@2a02:2f09:321a:b600:f507:6395:b641:6c1d) (Read error: Connection reset by peer)
[00:44:26] <[itchyjunk]> bionic brains then
[00:44:47] <[itchyjunk]> the solution is 16k resolution
[00:44:52] <[itchyjunk]> we just need to find the problem now
[00:45:18] <mrig> [itchyjunk]: Last time that I printed digital photos, an 11MP image would blow up to A3+ and there was no visible pixels or banding. If there are 33MP or there about on a 8k screen I suppose that you might be looking at needing an A2 sized printer.
[00:46:17] <jtgd> yes, you want lots of pixels if you are printing. 300DPI is plenty but more is good because of the way color printers print
[00:46:24] *** Quits: vs^ (~vsl@68.101.54.227) (Remote host closed the connection)
[00:46:32] <mrig> There could be more sensitive eyes that capture more light more quickly, they would see more stars at night.
[00:46:38] <mrig> that would be pretty cool.
[00:47:11] <mrig> Seeing the colour of the plants is cool, which can be done with the naked eye without a telescope.
[00:47:16] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[00:47:17] <jtgd> what would be nice is if the gamut were wider and you could see larger rainbow
[00:47:35] *** Joins: independent_ (~independe@95.144.68.39)
[00:48:09] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[00:48:47] <webNET4> https://www.howplantswork.com/2008/11/30/flowers-what-you-see-versus-what-the-bees-see/
[00:48:48] <jtgd> you could fake it if the camera captured it. Just like with astronomical photos where they use false color (like for Xrays or IR), you could "compress" the wider gamut to what we can see.
[00:48:48] <bayaz> Title: Flowers: What You See Versus What the Bees See 
[00:49:16] <jtgd> yes, like that. if we could see like bees
[00:49:52] <mrig> ... if it is dark enough.
[00:49:54] <[itchyjunk]> oh right
[00:50:06] <[itchyjunk]> there might be mutations that allow for better perception
[00:50:15] <[itchyjunk]> we know this is true for the color rods already
[00:50:16] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[00:50:32] <[itchyjunk]> some have this mutations that lets you perceive millions of hue that normals eyes can't perceive
[00:50:34] *** Joins: independent_ (~independe@95.144.68.39)
[00:51:16] <[itchyjunk]> there you go, in future, 16k will facilitate these mutants. and since we all eat micro plastics via fish and such, mutation is garunteed
[00:51:33] <mrig> Also helps if you know a bit of astronomy, for when they are close and getting a good belt of sunlight still whilst in the sky.
[00:52:02] <mrig> I learned of the existence of vacuum lighters today, how cool are they! :)
[00:52:09] <GeDaMo> https://en.wikipedia.org/wiki/Tetrachromacy
[00:52:10] <bayaz> Title: Tetrachromacy - Wikipedia 
[00:52:55] *** Joins: tom_mai78101 (~wedr___@8.21.13.19)
[00:53:02] <[itchyjunk]> ah
[00:53:22] <GeDaMo> mrig: "vacuum lighters"?
[00:53:39] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[00:54:04] <mrig> oh called a fire piston, apparently humans have been using them since the very early bronze age.
[00:54:05] <[itchyjunk]> The goldfish (Carassius auratus auratus)[7] and zebrafish (Danio rerio)[8] are examples of tetrachromats, containing cone cells sensitive for red, green, blue and ultraviolet light.
[00:54:07] <[itchyjunk]> UV? :O
[00:54:31] <mrig> https://en.wikipedia.org/wiki/Fire_piston
[00:54:31] <bayaz> Title: Fire piston - Wikipedia 
[00:54:55] <mrig> every boy scout or girl guide needs one :D
[00:55:09] *** tom_mai78101 is now known as wedr
[00:55:24] <GeDaMo> Huh, I knew compressed air got hotter, didn't know about starting fires like that
[00:55:32] <mrig> Fire pistons were invented by Southeast Asians (probably the Austronesian peoples)
[00:55:42] <mrig> from the wikipedia page.
[00:56:07] <mrig> Yes I'm quite blown away by discovering that these have existed for so long.
[00:56:59] <mrig> I may very well have to save up for one, as an essential household item https://www.youtube.com/watch?v=epfzuDmSGH0&t=1s
[00:57:01] <bayaz> Title: The Clickspring Fire Piston 
[00:57:29] <mrig> These were apparently the inspiration for the diesel engine too.
[00:57:57] <mrig> Great that he shows how to make carbon tinder too :)
[00:58:50] <mrig> I think that colour perception was likely extremely important in metallurgy back then.
[00:59:03] <mrig> to gauge temperature.
[00:59:21] <GeDaMo> I was just thinking it reminded me of the Stirling cycle engine
[00:59:46] <mrig> so if your gamut of red to yellow was narrow, you would not be able to make things with the same consistency.
[01:00:31] <mrig> Its incredible that they've been about for so long, humans are awesome.
[01:01:19] <mrig> so all brawn as a smithy would not have cut the mustard :D
[01:02:57] <mrig> oh this vid is better, shows how he makes it https://www.youtube.com/watch?v=UvCB3_KtSz0
[01:02:58] <bayaz> Title: Clickspring: Milling a Fire Piston 
[01:05:49] *** Parts: Bou (uid274843@user/bou) ()
[01:06:34] <mrig> hum perhaps a lathe rather than a fire piston :D
[01:08:50] <edgar-rft> yes, color perception sincever was very important in metallurgy ->  https://en.wikipedia.org/wiki/Magnum_opus_%28alchemy%29
[01:08:50] <bayaz> Title: Magnum opus (alchemy) - Wikipedia 
[01:10:28] *** Joins: alguien (~alguien@user/alguien)
[01:10:31] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[01:11:11] <alguien> Hi, can anyone recommend a cheap low-profile split keyboard for development? Can be mechanic but doesn't need to be
[01:12:09] <webNET4> split keyboard eh
[01:12:16] <webNET4> two USB connectors?
[01:12:48] <mrig> There is a fantastic video of an American smithy making wootz damascus steel, he states in that that he is looking at the colour whilst determine the state of magnetism.
[01:13:34] <alguien> webNET4, well there are some that are wireless. But they do tend to be twice connected. Though I think the split pieces are usually connected aux cables actually
[01:13:38] <mrig> alguien: kenisis are ok but be warned that if you bend the cable it breaks the chip in them, other than that the price is reasonable.
[01:13:46] *** Joins: KeanuReeves (~dunkeln@94.128.205.199)
[01:13:49] <webNET4> i would never recommend a wireless keyboard
[01:13:54] <mrig> chip non replaceable.
[01:14:22] <alguien> webNET4, i've been happily using a Logitech K260 for years. Even for gaming (not that I'm looking for one for gaming, I'm not)
[01:14:36] <alguien> mrig, thanks, sound bad though
[01:14:36] <edgar-rft> on the scrapyard you'll probably find lots of split keyboards
[01:14:58] <alguien> edgar-rft, why is that?
[01:15:16] <edgar-rft> because they run over it with a bulldozer
[01:15:42] *** Quits: mnd999_ (~mark@2001:8b0:da3:76a2:bd88:112b:f737:98f6) (Remote host closed the connection)
[01:15:42] <alguien> edgar-rft, what drove you out from under the bridge i wonder
[01:15:56] <mrig> webNET4: you could by the components for a home build :) If you make your own case an that sort of thing it would be quite cheap. you can find info in #mechboards
[01:16:08] <mrig> oh sorry that was for alguien 
[01:16:16] <webNET4> thats a good idea
[01:16:42] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[01:16:49] <alguien> mrig, oh thanks, how did i miss that channel? 95 people in it, nice
[01:16:56] *** Joins: webNET4 (~0x100@32.211.211.39)
[01:17:52] <mrig> lots of quality keyboard lovers :)
[01:18:05] <edgar-rft> you only need a cheap keyboard and an axe...
[01:18:19] <alguien> is trolling allowed in this room?
[01:18:40] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[01:19:21] <deniska> If it's respectful and friendly
[01:20:44] <mrig> edgar-rft: well this fire piston does make the relationship between fire and air quite apparent, if you get a good hermetic seal :D
[01:21:25] <edgar-rft> deniska: I want the keyboard to be chopped in a friendly way :-)
[01:22:19] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[01:22:46] * pyzozord chops edgar-rft's keyboard friendly
[01:23:18] <pyzozord> alguien: we try to be as open minded as we can, take a look at the /topic
[01:23:32] <[itchyjunk]> Isn't keyboard an object
[01:23:33] <[itchyjunk]> ?
[01:23:34] <alguien> pyzozord, edgar-rft didn't get the memo
[01:23:39] <[itchyjunk]> just keyboard.split()
[01:24:41] *** Joins: hexfive (~eric@50.35.83.177)
[01:25:16] <deniska> Your average programming language: split. PHP: explode \o/
[01:25:30] <edgar-rft> mrig: many smiths even today judge the right temperature for the hardening by the color of the glowing metal
[01:27:25] *** Quits: nitro (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Remote host closed the connection)
[01:28:18] *** Quits: hexfive (~eric@50.35.83.177) (Client Quit)
[01:28:55] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[01:29:19] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[01:29:31] <edgar-rft> ...and I want my keyboard to be chopped brutally, you whimps
[01:30:07] <alguien> -_-
[01:30:31] * edgar-rft calls the viking hordes to chop your keyboards
[01:30:46] *** Quits: xff0x (~xff0x@2001:1a81:5337:500:915:acb5:b793:8885) (Ping timeout: 260 seconds)
[01:31:31] *** Joins: xff0x (~xff0x@2001:1a81:5337:500:1487:c5ae:272e:6220)
[01:32:23] *** Quits: user51 (~user51@176.228.90.248) (Remote host closed the connection)
[01:33:00] *** Joins: zaher (~zaher@37.48.152.217)
[01:35:24] *** Quits: SuperNintendoSUX (~sjw@69.206.48.64) (Remote host closed the connection)
[01:35:34] * pyzozord puts on viking helmet and chops and chops edgar-rft keyboard, this time sideways
[01:36:07] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[01:36:36] *** Joins: SuperNintendoSUX (~sjw@69.206.48.64)
[01:36:38] <edgar-rft> I'm typing telephatically, keyboards are only used for pianos nowadays
[01:37:53] *** Joins: paravida (~myChateau@71.215.86.34)
[01:39:33] <edgar-rft> Let's complain to Google that Android doesn't work on the Emerald Tablet.
[01:41:16] *** Joins: Thedarkb (~Thedarkb@2001:bb6:b403:d8dd:fa0e:a7e8:c2f:9285)
[01:42:24] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:42:32] *** Quits: KeanuReeves (~dunkeln@94.128.205.199) (Ping timeout: 245 seconds)
[01:44:05] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:f557:7d:4fc8:416d)
[01:44:05] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:f557:7d:4fc8:416d) (Client Quit)
[01:44:05] <vysn> which one are you?
[01:44:10] <vysn> https://ibb.co/yhqt8wM
[01:44:10] <bayaz> Title: ideusers1213 
[01:45:12] <[itchyjunk]> Does any one know an eclipse shortcut where you can add // to multiple line in one go?
[01:45:17] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[01:45:25] <[itchyjunk]> i think you select code and hit something or someone and it's all //
[01:45:29] *** Joins: webNET4 (~0x100@32.211.211.39)
[01:46:02] *** Joins: tehenderz (~tehenderz@ti0018a400-1737.bb.online.no)
[01:47:39] *** Quits: Intelo (~Intelo@88.246.78.218) (Ping timeout: 256 seconds)
[01:48:20] <webNET4> interesting gif, is vim the only text editor without autosave then?
[01:54:48] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[01:55:26] <pyzozord> so I have a program with my terminal. In tmux I have alt+c bound to creating a new window. But in my terminal somtimes when I press alt+c it seems that tmux doesn't notice it and it 'slips through' to the program/shell I'm running. This happens more often when the heavy cpu thread of decoding gif is still running, but happens later as well. Any idea how I can figure out how to debug this or at 
[01:55:32] <pyzozord> least figure out how to reproduce this consistantly?
[01:56:13] <webNET4> does it happen with screen?
[01:57:07] *** Joins: soulisson (~soulisson@user/soulisson)
[01:57:09] <soulisson> Hello
[01:58:35] <pyzozord> webNET4: good question, I guess I'll need to check that. When I'm running mpv for example, when this happens and tmux 'misses' alt+c, I can see in mpv "No key binding found for key 'Alt+c'", so the keys are registered
[01:58:50] <pyzozord> s/key are/key presses are/
[01:59:12] *** Joins: rannnn8888 (~rannnn888@bzq-79-183-158-130.red.bezeqint.net)
[01:59:32] <webNET4> on the surface level it would sound like a bug in tmux
[02:00:03] <pyzozord> it doesn't happen though in other terminal emulators, I'm sure this is because of my terminal emulator somehaw
[02:00:10] <pyzozord> *somehow
[02:00:25] <webNET4> how are you detecting the alt-key combo
[02:01:24] <webNET4> put in a print for the c key, is it dropping alt?
[02:01:31] <webNET4> maybe an alt repeat key is getting sent
[02:01:37] <webNET4> and your input logic doesn't handle repeats
[02:01:42] <webNET4> or something weird
[02:01:47] <webNET4> pasting your code would help too
[02:02:43] *** Quits: paravida (~myChateau@71.215.86.34) (Ping timeout: 252 seconds)
[02:02:44] <webNET4> you have to start from where the nput gets sent
[02:02:55] <webNET4> is this x11/wayland/evdev,  or what?
[02:02:59] <pyzozord> webNET4: https://ideone.com/PIwp1Q
[02:03:02] <bayaz> Title: Ideone.com 
[02:04:01] <pyzozord> that's SDL2
[02:04:10] <webNET4> which is a wrapper
[02:04:17] <webNET4> what is it wrapping?
[02:04:25] <pyzozord> handle_events is run in an sdl thread
[02:05:01] <pyzozord> I'm on ubuntu I guess it uses x11 under
[02:05:34] <webNET4> "alt tab in linux gernerates another alt-tab"   wuttt
[02:06:15] <pyzozord> huh?
[02:06:21] <webNET4> ok you're converting alt to escape character
[02:06:28] <pyzozord> oh yeah that bug
[02:06:37] <webNET4> // workaround for httpps://discourse.libsdl.org/t/alt-tab-in-linux-generates-another-tab/22844
[02:06:37] <webNET4> 65.
[02:06:38] <webNET4>  // ignore tab if it occured shortly after the window gained focus
[02:06:42] <pyzozord> just a bug in sdl
[02:07:18] <pyzozord> if you alt+tab to your program fast enough you'll get extra alt and/or tab even(s) in your program
[02:07:49] <webNET4> that makes no sense
[02:07:59] <webNET4> i've never encountered this bug
[02:08:08] * pyzozord shrugs
[02:09:16] <webNET4> sdl is supposed to be portable
[02:09:25] <webNET4> now you have some special case for when you press alt key
[02:09:32] <webNET4> only on linux...
[02:09:32] <pyzozord> pretty sure it's not related
[02:11:15] <pyzozord> it's actually doesn't have anything to do with alt, it just checks if the pressed key was tab and it happend with 10 miliseconds since window regained focus
[02:11:25] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[02:11:33] <webNET4> its a hack
[02:11:46] <pyzozord> you wanna help with the alt+c issue or not
[02:11:54] <webNET4> i am.
[02:12:25] <webNET4> when you see illogical hacks surrounding the key in question, it makes you wonder?
[02:14:37] <pyzozord> sure but I don't think this one is not related
[02:14:43] *** Joins: KeanuReeves (~dunkeln@94.128.205.199)
[02:14:49] <pyzozord> s/not//
[02:16:05] <pyzozord> hmm maybe that MODE_KBDLOCK, that's a leftover from original stterm, I never investigated that
[02:16:16] <pyzozord> the problem is I cannot reproduce this bug consistantly
[02:17:08] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 265 seconds)
[02:17:24] *** Quits: jokoon (~eio@2a01:e0a:542:e160:a439:2e93:90:56d0) (Quit: Leaving)
[02:17:44] <webNET4> what is "isspec"
[02:18:00] <webNET4> and why is it checking 'z'
[02:18:15] <pyzozord> stands for "is special", things that arent A-z
[02:18:27] <pyzozord> sorry [space]-z
[02:18:39] <webNET4> what about { | and } ?
[02:18:47] <webNET4> which are after z
[02:19:04] <webNET4> and ~
[02:19:15] <pyzozord> generally normal printable characters are handled by handle_textinput
[02:20:24] <pyzozord> I use handle_keypress only for alt or control codes or key mappings (kmap)
[02:21:23] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[02:21:35] *** Joins: webNET4 (~0x100@32.211.211.39)
[02:22:14] <webNET4> best advice i can give aside from fixing the alt-ltab hack is to save all key events to a file with timestamps
[02:22:32] <webNET4> and checking the tail of file when the bug occurs
[02:22:40] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 252 seconds)
[02:23:12] <vysn> webNET4: I am sure you can get vim to auto save with a plugin
[02:23:18] <pyzozord> yeah that I was planning to do
[02:23:25] <pyzozord> thanks anyway
[02:23:40] <vysn> if it isn't already built in new versions 
[02:23:55] *** Quits: normsaa (~normsaa@101.175.64.73) (Ping timeout: 256 seconds)
[02:24:21] <webNET4> also, are you sending these escape chars if nothing else is pressed, just a single alt?
[02:24:24] <vysn> the gif is a reference to vim keybindings. doing more with less keys
[02:25:25] <pyzozord> webNET4: no, just allt will be !isprint so it will return early at 60
[02:26:19] <webNET4> !(buf[0] & 0x40000000);
[02:26:25] <webNET4> buf[0] is a 8bit char
[02:26:54] <pyzozord> oh good call, thanks
[02:30:09] *** Quits: x003fgqwe (uid479614@id-479614.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[02:30:45] *** Joins: LiftLeft (~LiftLeft@172.98.92.75)
[02:32:24] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:d98:43e6:93b2:ad9)
[02:34:07] <pyzozord> that wasn't it though, still happens
[02:34:12] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:34:37] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-0d98-43e6-93b2-0ad9.inf6.spectrum.com) (Ping timeout: 245 seconds)
[02:37:33] *** Joins: juliaEnv (~juliaEnv@ip-86-49-255-202.net.upcbroadband.cz)
[02:38:50] <pyzozord> how big are enums in c?
[02:40:56] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[02:43:42] *** Quits: jaysicks (~jaysicks@94-21-246-55.pool.digikabel.hu) (Ping timeout: 265 seconds)
[02:44:07] <Thedarkb> Think it's implementation defined but candide on #c says 4.
[02:46:52] *** Quits: peteyboy1 (~peteyboy1@95.169.232.161) (Ping timeout: 252 seconds)
[02:51:02] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[02:54:28] *** Joins: clarjon1 (~clarjon1@user/clarjon1)
[02:54:41] *** Joins: paravida (~myChateau@71.215.86.34)
[02:56:02] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[02:57:14] *** Joins: jaysicks (~jaysicks@188-143-64-68.pool.digikabel.hu)
[02:59:51] *** Joins: epolanski (uid312403@id-312403.helmsley.irccloud.com)
[03:01:19] *** Quits: rannnn8888 (~rannnn888@bzq-79-183-158-130.red.bezeqint.net) (Ping timeout: 256 seconds)
[03:04:15] <webNET4> an enum is definitely more than 8 bits
[03:04:35] <webNET4> iirc it's an int in C, but i'm not sure if thats in the spec
[03:05:24] <webNET4> might want to turn on -Wall
[03:06:07] <pyzozord> Think I might have actually figured it out
[03:06:12] <pyzozord> it shouldn't have worked at all
[03:07:02] <pyzozord> I was sending only alt anyway because i was always saying I got only 1 character in line 86.
[03:07:28] <pyzozord> and then textinput was sending a putre 'c' after fast enough that tmux was registering this sometimes
[03:07:49] <pyzozord> so there were two bugs that together made it all kind of work even though it shouldn't
[03:08:06] <pyzozord> first handlekeypress
[03:08:29] <pyzozord> was sending only one character, second handletextinput was sending characters when 
[03:08:37] <pyzozord> handle
[03:08:48] <pyzozord> handlekeypress alrady handled them
[03:09:04] *** Joins: tlaxkit (~hexchat@170.253.38.52)
[03:09:16] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Write error: Connection reset by peer)
[03:09:16] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Write error: Connection reset by peer)
[03:09:16] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Write error: Connection reset by peer)
[03:09:16] *** Quits: MindPower (~GodMode@user/h4x0r) (Write error: Connection reset by peer)
[03:09:16] *** Quits: mickey0 (~user@user/mickey) (Write error: Connection reset by peer)
[03:09:16] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Write error: Connection reset by peer)
[03:09:18] <pyzozord> got some other problems now underscore produces enter, but that's because I route everything via the handle keypress now which wasn't intended to do that
[03:09:35] <pyzozord> but im sure the alt-c issue is fixed
[03:09:50] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:487c:c54c:deef:f9ac)
[03:11:19] *** Quits: Inari (~Pinkishu@p4fe7e253.dip0.t-ipconnect.de) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[03:13:49] *** Joins: REDman2k1 (~NOT@35.139.144.83)
[03:19:04] <webNET4> SDL_Keycode     aka keysym.sym  is a Sint32
[03:19:21] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[03:19:50] *** Joins: [_] (~itchyjunk@user/itchyjunk/x-7353470)
[03:20:29] <pyzozord> webNET4: how did you find that, i looked at the sdl source code and could tell
[03:20:54] <webNET4> and the enum has > 300 lines
[03:21:00] <webNET4> SDL_keycde.h
[03:21:02] <webNET4> keycode.h
[03:21:45] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:22:07] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 245 seconds)
[03:23:01] *** Quits: paravida (~myChateau@71.215.86.34) (Ping timeout: 252 seconds)
[03:23:09] <webNET4> after looking at SDL_KeyboardEvent in SDL_events.h
[03:25:27] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:f557:7d:4fc8:416d)
[03:25:45] *** Quits: REDman2k1 (~NOT@35.139.144.83) (Ping timeout: 265 seconds)
[03:28:19] *** Quits: chomwitt (~chomwitt@2a02:587:dc14:5d00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[03:29:19] *** Quits: TechTest (uid283215@id-283215.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[03:30:57] *** Joins: lunarkitty (uid501895@user/pyra)
[03:32:02] *** Quits: KeanuReeves (~dunkeln@94.128.205.199) (Ping timeout: 265 seconds)
[03:34:12] *** Joins: pizdets_ (~pizdets@183.182.111.150)
[03:34:26] *** Quits: pizdets (~pizdets@183.182.114.68) (Ping timeout: 260 seconds)
[03:38:40] *** Joins: zaher_ (~zaher@37.48.190.87)
[03:39:07] *** Quits: independent_ (~independe@95.144.68.39) (Ping timeout: 252 seconds)
[03:40:40] *** Quits: zaher (~zaher@37.48.152.217) (Ping timeout: 252 seconds)
[03:42:30] *** Quits: Akuli (~Akuli@82-203-167-105.bb.dnainternet.fi) (Quit: Leaving)
[03:44:03] *** Joins: Macuser (~Macuser@216.30.159.201)
[03:46:52] <pyzozord> Ah, so nice having reliable input
[03:58:42] *** Quits: magla (~gelignite@55d40e31.access.ecotel.net) (Quit: Stay safe!)
[04:09:20] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 260 seconds)
[04:10:56] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:14:46] <DarkTrick> Someone here who can build for GTK4? I think I've found a bug in GTK3 and I'd like to verify it for GTK4 as well. Could someone compile and run this? https://pastebin.com/izekB0bL
[04:14:49] <bayaz> Title: /** * Compile, run, click the button. * EXPECTED: A new button appears, A sc - Pastebin.com 
[04:14:59] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[04:15:54] <webNET4> i'd have to download GTK4, and it probably won't work because GTK always has some weird dependency issue
[04:17:08] <webNET4> lets see though this should be fun tosee what they impose on their users this time around
[04:18:03] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[04:18:29] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[04:23:05] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:23:34] *** Quits: tlaxkit (~hexchat@170.253.38.52) (Quit: Leaving)
[04:23:51] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:24:37] <webNET4> rollll on the F l'ing
[04:24:54] <webNET4> they don't ship it with a standard way to build
[04:26:59] <webNET4> is this treason?
[04:27:09] <webNET4> maybe just a mild case of mutiny
[04:28:42] *** Joins: quartz (~quartz@dyn-209-2-229-4.dyn.columbia.edu)
[04:28:53] <webNET4> sorry can't help you, i tried at least and that's what counts?
[04:29:03] *** Joins: euouae (~euouae@user/euouae)
[04:29:49] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[04:30:01] *** Joins: webNET4 (~0x100@32.211.211.39)
[04:31:55] *** Quits: quartz (~quartz@dyn-209-2-229-4.dyn.columbia.edu) (Client Quit)
[04:33:42] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 260 seconds)
[04:33:56] *** Joins: quartz (~quartz@dyn-209-2-229-4.dyn.columbia.edu)
[04:36:31] <pyzozord> webNET4: yes, you helped me even though explain my problem
[04:36:48] <pyzozord> and I was able to fix it now. It was bugging me for weeks
[04:38:10] *** Joins: paravida (~myChateau@71.215.86.34)
[04:38:18] <webNET4> cool, yeah C is tricky so wehn i look at others' C code i always notice a ton of things that feel "off" because i usually crank the warnings all the way up
[04:38:38] <webNET4> so i kind of go off on the wrong tangent sometimes
[04:39:27] *** Joins: sxm (~nerv@2600:8800:8282:b900:28:1068:df7:fea2)
[04:40:14] <pyzozord> yeah I understand, that's my first instinct as well "just fix the obvious shit first", with that out of the way we have clean slate to worry about the real problem
[04:40:28] <pyzozord> often turns out that fixing the obvious fixed the real problem already
[04:42:07] <pyzozord> this was a tricky situation because its a bug in sdl2@gnome3 and there is no elegant workaround so it sticks out in my code, but this time that wasn't it. I have more normal bugs blow that
[04:42:33] <quartz> PlanckWalk: Are you there?
[04:43:39] <pyzozord> need to check out valgrind's cachegrind I'm curious how is my code doing cache wise
[04:45:09] *** Quits: jaysicks (~jaysicks@188-143-64-68.pool.digikabel.hu) (Remote host closed the connection)
[04:45:38] *** Joins: jaysicks (~jaysicks@188-143-64-68.pool.digikabel.hu)
[04:48:54] *** Quits: jaysicks (~jaysicks@188-143-64-68.pool.digikabel.hu) (Remote host closed the connection)
[04:49:05] *** Quits: rany (~rany@user/rany) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[04:49:43] *** Joins: jaysicks (~jaysicks@188-143-64-68.pool.digikabel.hu)
[04:51:06] *** Quits: jaysicks (~jaysicks@188-143-64-68.pool.digikabel.hu) (Remote host closed the connection)
[04:52:01] *** Joins: rany (~rany@user/rany)
[04:52:49] *** Joins: normsaa (~normsaa@101.175.64.73)
[04:52:51] <quartz> Hello. I'm trying to do this hacker rank problem: https://i.ibb.co/1XcZ6Q4/image.png  I want to write a loop that starts from the first month and year and ends on the last month and year. The loop will use the "DaysInMonth" function to total the number of days, adding them into a int variable. I'm just not sure how to write the loop.
[04:52:51] <bayaz> Type: image/png Size: 50.7 kB 
[04:53:27] <euouae> quartz, did you read my solution?
[04:53:56] <quartz> euouae: Yes, but it went over my head, like most things ;(
[04:54:04] <euouae> What went over?
[04:54:16] <quartz> Sorry, do you mind sending me the link again?
[04:54:39] <quartz> I believe you used recursion?
[04:54:52] <euouae> Nope
[04:55:55] <pyzozord> quartz: it will take time, you need to be patient with yourself
[04:56:29] <quartz> pyzozord: Yes, but it bugs me how I can't get simple problems like this. Everyone has to spoon feed me the answer, and even when they do I still can't get it 
[04:57:04] <quartz> Sorry I just have no patience for my own stupidity
[04:57:09] <pyzozord> quartz: that's probably because you aren't ready for the problems you are approaching
[04:57:40] <quartz> pyzozord: THis is an easy problem. Most can do it in like 30 min or less. But yeah you're right
[04:57:43] <euouae> quartz read my solution and let me know if you need help with it 
[04:57:51] <quartz> It literally does not require any data structures
[04:57:58] <pyzozord> quartz: competetive programming problems can take litearlly weeks!
[04:58:01] <quartz> euouae: Sorry can You send the link again? I had to log out
[04:58:07] <euouae> I don't have the link 
[04:58:31] <pyzozord> quartz: the "easy" ones also take practice and experience. This is not normal "easy", this is "competetive programming easy".
[04:58:32] <euouae> it was on pastebin, check your browser history
[04:58:34] <quartz> pyzozord: Yeah that's like the top level
[04:58:43] <quartz> euouae: OK
[04:59:32] <pyzozord> quartz: for what it's worth, outside of FAANG you don't really need this skill to get a good job and be a "real" programmer
[05:01:01] <quartz> pyzozord: I just want to get better and not have people spoon feed me answers for easy problems. I swear if I could change my DNA or something to increase my IQ I would
[05:01:13] <quartz> Sorry I'm blowing up
[05:01:38] <euouae> It's not about spoon feeding
[05:01:40] <euouae> You're learning from others
[05:01:59] <euouae> Your DNA doesn't have anything to do with it, and IQ is a poor metric
[05:02:05] <gamah> hendrix didn't just pick up the guitar and become awesome....
[05:02:34] <euouae> Hard work means studying the programs of others, as well as their algorithms etc. It's not about "solving everything yourself". I recommend that you read my solution carefully
[05:03:03] *** Joins: b1101 (~b1101@pool-100-37-115-53.nycmny.fios.verizon.net)
[05:03:10] <gamah> what's the problem?
[05:03:53] <gamah> ah... days in month
[05:03:57] <gamah> that would be fun.... 
[05:04:13] <gamah> wait.. days between, daysinmonth is provided
[05:04:35] <quartz> euouae: https://pastebin.com/MubZXy6U Is that it?
[05:04:37] <bayaz> Title: How to compute the days between two dates:Let's assume months are given by 1 - Pastebin.com 
[05:05:55] *** Quits: src (~src@user/src) (Ping timeout: 260 seconds)
[05:06:01] *** Quits: Mangy_Dog (~Mange@user/mangy-dog/x-7397214) (Ping timeout: 252 seconds)
[05:06:31] *** Joins: seicho (~user@user/seicho)
[05:07:01] <euouae> yeah quartz
[05:07:12] <quartz> euouae: Yes, you use recursion on line 15
[05:07:29] <gamah> interesting solution, why not just loop daysInMonth in range((year,month),(endyear,month))?
[05:07:30] <euouae> It's funny when the first thing in your mind is to prove me wrong over a claim I made
[05:07:42] <euouae> gamah that's O(n) instead of O(1)_
[05:07:47] <gamah> fair
[05:08:01] <euouae> quartz, also it's not recursion, it's a reduction
[05:08:07] <gamah> i'm not sure i understand the year skip yet.... i'm wondering about leap year.
[05:09:03] <gamah> i don't think your solution works for a span of 5+ years
[05:09:12] *** Joins: zys (~zys@61.140.185.86)
[05:09:19] <gamah> or anything of over 1 year including a leap year
[05:09:45] <gamah> because 365 is a wrong assumption
[05:10:18] *** Joins: Macuser (~Macuser@216.30.159.201)
[05:12:08] <euouae> no leap years were assumed in the problem that was posed
[05:13:20] <gamah> so daysInMonth doesn't return 29 for (2,2020)?
[05:13:55] *** Quits: seicho (~user@user/seicho) (Quit: ERC (IRC client for Emacs 28.0.50))
[05:14:39] <gamah> (i'd check myself but i have no idea where this test problem is and i assume i'd have to register or something)
[05:19:32] <quartz> Wow this is a high IQ answer
[05:22:21] <quartz> euouae: Sorry, but can you explain line 15?
[05:22:35] * webNET4 hands quarts a rolex
[05:23:03] * TheArchitect intercepts webNET4 and flees with it
[05:23:03] * TheArchitect intercepts webNET4 and flees with it
[05:23:30] <webNET4> !!! did anyone see which way that architect went!?
[05:23:31] * TheArchitect intercepts webNET4 and flees with it
[05:23:33] <euouae> quartz if I want to find the days between 3 Feb 1980 and 10 May 1990 I can add 365 for each fo 1981 to 1989 
[05:23:43] <TheArchitect> all cool... doubled up there nice themeing $me
[05:23:50] <euouae> quartz and the then just find the days between 3 Feb 1980 and 10 May 1981
[05:23:50] <quartz> euouae: Ok...
[05:24:05] <TheArchitect> ok\
[05:24:50] <TheArchitect> heh
[05:25:07] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[05:26:02] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-0d98-43e6-93b2-0ad9.inf6.spectrum.com)
[05:26:28] <TheArchitect> heh
[05:26:44] <TheArchitect> lol
[05:26:55] <TheArchitect> ok
[05:26:55] *** Joins: seicho (~user@user/seicho)
[05:27:12] <TheArchitect> kool
[05:27:14] *** Joins: jazzy2 (~jaziz@2600:380:865d:911b:e5e1:b429:e129:6354)
[05:27:22] *** Joins: Izem (~Izem@8.6.144.177)
[05:28:08] <TheArchitect> heh
[05:28:31] <DarkTrick> webNET4, thank you very much for trying! 
[05:29:07] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:d98:43e6:93b2:ad9) (Ping timeout: 252 seconds)
[05:30:00] <euouae> quartz what do you think? 
[05:30:34] <quartz> euouae: I'm still trying to understand it, parts of it make sense
[05:33:08] <quartz> On line 15, why do you call days_between again with the same d1, m1, y1 parameters
[05:33:15] <quartz> And only do y + 1
[05:34:15] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[05:35:17] *** Quits: soulisson (~soulisson@user/soulisson) (Ping timeout: 265 seconds)
[05:37:05] *** Parts: seicho (~user@user/seicho) (ERC (IRC client for Emacs 28.0.50))
[05:39:38] *** Quits: spacecraft (~spacecraf@98.50.16.116) (Ping timeout: 265 seconds)
[05:40:37] <euouae> quartz, like I said  just find the days between 3 Feb 1980 and 10 May 1981
[05:40:44] <euouae> 1981 = 1980 + 1
[05:42:20] *** Joins: vykt_ (~vykt@cpc139324-aztw33-2-0-cust121.18-1.cable.virginm.net)
[05:43:53] *** Joins: spacecraft (spacecraft@98.50.16.116)
[05:44:11] *** Parts: vykt_ (~vykt@cpc139324-aztw33-2-0-cust121.18-1.cable.virginm.net) ()
[05:44:19] *** Joins: jamea (~jamea@177.239.87.39)
[05:44:25] *** Quits: paravida (~myChateau@71.215.86.34) (Ping timeout: 260 seconds)
[05:44:34] *** Joins: pulse (~pulse@user/pulse)
[05:45:44] <quartz> Sadly, the hacker rank won't let me enter multiple functions, but I'm beginning to see how your solution works.
[05:46:29] <quartz> I want to try my own solution, although I can see why you did what you did. As you said before, you want to get the O(1) runtime
[05:47:12] <quartz> Laptop is going to die, I have to move desks.
[05:47:28] *** Quits: quartz (~quartz@dyn-209-2-229-4.dyn.columbia.edu) (Quit: WeeChat 3.2)
[05:49:55] *** Quits: xff0x (~xff0x@2001:1a81:5337:500:1487:c5ae:272e:6220) (Ping timeout: 252 seconds)
[05:50:08] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:51:23] <PlanckWalk> I don't think there is an O(1) solution for the number of days given the constraint of an externally-supplied daysInMonth function.
[05:51:40] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 252 seconds)
[05:51:43] *** Joins: xff0x (~xff0x@2001:1a81:5374:7800:b91b:1969:510:c2ea)
[05:51:44] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[05:52:00] *** Quits: spacecraft (spacecraft@98.50.16.116) (Ping timeout: 260 seconds)
[05:52:21] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[05:52:49] <euouae> Yeah there is 
[05:52:57] <euouae> sum 1 to 12 daysInMonths(i) that's your constant 
[05:53:03] <euouae> if it's not 365
[05:53:10] *** TheArchitect is now known as TheArch
[05:53:52] *** TheArch is now known as TheArch1
[05:54:44] *** TheArch1 is now known as TheArch11
[05:55:04] *** TheArch11 is now known as TheArch111
[05:56:15] <PlanckWalk> euouae: Check the problem, there is no daysInMonth(i) function.
[05:56:31] <euouae> "I don't think there is an O(1) solution for the number of days given the constraint of an externally-supplied daysInMonth function." <- I replied to that 
[05:56:38] <PlanckWalk> I know
[05:56:57] <PlanckWalk> daysInMonth in the supplied problem has *two* parameters
[05:57:04] <PlanckWalk> Year and month numbers
[05:57:49] *** Quits: Klinda (~klinda@2.227.251.209) (Read error: Connection reset by peer)
[05:57:49] <euouae> Oh yeah definitely not then 
[05:57:55] <euouae> Sorry I didn't realize
[05:59:09] <PlanckWalk> But yeah, if it had one then you could just build a table.
[06:00:19] <euouae> PlanckWalk, daysInMonth is clearly an enumeration of the digits of pi :P  
[06:02:13] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[06:03:32] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[06:04:42] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 260 seconds)
[06:10:07] *** Quits: sxm (~nerv@2600:8800:8282:b900:28:1068:df7:fea2) (Quit: Leaving)
[06:11:27] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:11:34] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[06:12:34] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[06:12:34] *** brabrax_ is now known as brabrax
[06:13:22] *** Joins: quartz (~quartz@185.232.22.27)
[06:13:37] *** Joins: dld (~davidlowr@2601:197:600:1210:28c1:cdd6:e3ed:bb3d)
[06:14:13] *** Quits: DasBrain_ (~DasBrain@user/dasbrain) (Ping timeout: 252 seconds)
[06:14:40] *** Joins: paravida (~myChateau@71.215.86.34)
[06:15:28] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:15:40] *** [_] is now known as [itchyjunk]
[06:16:23] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:487c:c54c:deef:f9ac) (Read error: Connection reset by peer)
[06:16:28] *** Joins: dan64 (~dan64@dannyadam.com)
[06:17:00] *** Quits: quartz (~quartz@185.232.22.27) (Changing host)
[06:17:00] *** Joins: quartz (~quartz@user/quartz)
[06:17:13] *** Joins: Matt|home (~matt@adsl-74-233-58-48.mia.bellsouth.net)
[06:20:02] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[06:21:10] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[06:24:51] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2.1)
[06:25:32] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:159d:b657:2c01:6c27)
[06:30:17] <quartz> euouae: Still there?
[06:30:22] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[06:32:42] <euouae> yeha
[06:35:27] *** Quits: fdauihfu (~irado@189.40.101.97) (Read error: Connection reset by peer)
[06:35:34] *** Joins: irado (~irado@177.12.221.61)
[06:37:17] *** Quits: dan64 (~dan64@dannyadam.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[06:38:29] *** Joins: Cashlin (~hp@user/cashlin)
[06:40:09] *** Joins: dan64 (~dan64@dannyadam.com)
[06:40:38] *** Quits: Izem (~Izem@8.6.144.177) (Ping timeout: 260 seconds)
[06:41:01] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 265 seconds)
[06:43:01] <quartz> Nevermind I think I figured it out.
[06:43:14] <quartz> ALthough it does want me to write the entire thing in one function and not multiple
[06:44:35] <quartz> So with that understanding, I don't think I can get it down to O(1) because I'll have to loop through the entire time span using the given function DaysInMonth
[06:45:30] <euouae> yup 
[06:47:26] *** Joins: Izem (~Izem@8.6.144.177)
[06:47:54] *** Quits: dan64 (~dan64@dannyadam.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[06:49:54] *** Joins: dan64 (~dan64@dannyadam.com)
[06:52:52] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:58:28] *** Joins: zaher (~zaher@37.48.191.224)
[07:00:42] *** Quits: zaher_ (~zaher@37.48.190.87) (Ping timeout: 260 seconds)
[07:00:48] *** Joins: soulisson (~soulisson@160.178.4.65)
[07:01:21] *** Quits: soulisson (~soulisson@160.178.4.65) (Client Quit)
[07:02:07] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[07:04:40] *** Quits: paravida (~myChateau@71.215.86.34) (Ping timeout: 252 seconds)
[07:04:57] *** Joins: spacecraft (~spacecraf@98.50.16.116)
[07:05:13] *** Quits: Izem (~Izem@8.6.144.177) (Remote host closed the connection)
[07:05:33] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[07:05:42] *** Quits: znedw (~znedw@home.znedw.com) (Quit: The Lounge - https://thelounge.chat)
[07:07:33] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[07:09:13] *** Joins: znedw (~znedw@home.znedw.com)
[07:09:31] *** TheArch111 is now known as TheArchitect
[07:09:39] *** Joins: khanred (~khanred@45-17-211-63.lightspeed.okcbok.sbcglobal.net)
[07:09:39] *** Quits: khanred (~khanred@45-17-211-63.lightspeed.okcbok.sbcglobal.net) (Changing host)
[07:09:39] *** Joins: khanred (~khanred@user/khanred)
[07:09:55] *** Joins: Crescendo (~Crescendo@user/crescendo)
[07:10:09] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[07:11:58] *** Quits: snake (~snake@user/snake) (Quit: Namae nado nai, omae to onaji da..)
[07:13:12] *** Quits: TheArchitect (MrDuckHunt@27-33-13-108.tpgi.com.au) (Changing host)
[07:13:12] *** Joins: TheArchitect (MrDuckHunt@user/h4x0r)
[07:14:20] *** Pixi_ is now known as Pixi
[07:14:22] *** Quits: zaher (~zaher@37.48.191.224) (Ping timeout: 265 seconds)
[07:15:00] *** Joins: gggp (~textual@111.63.44.6)
[07:18:20] *** Quits: spacecraft (~spacecraf@98.50.16.116) (Ping timeout: 260 seconds)
[07:19:27] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[07:24:05] <normsaa> Can you crack Aaron’s password hash? He seems to like simple passwords. I’m sure he’ll use his name and birthday in it. Hint: Aaron writes important dates as YYYYMMDD rather than YYYY-MM-DD or any other special character separator. Hash: 7f4986da7d7b52fa81f98278e6ec9dcb. Author: moat, Pacific Northwest National Laboratory
[07:24:46] <arahael> normsaa: No we don't do such things here.
[07:24:53] <normsaa> who can bruteforce his birthday 4 digits and comparing to the md5 hash? in any language?
[07:25:51] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[07:26:04] *** Joins: webNET4 (~0x100@32.211.211.39)
[07:26:41] <arahael> !warn normsaa We don't encourage illegal activity, even if dressed up as a 'game'.
[07:26:41] * bayaz warns normsaa: We don't encourage illegal activity, even if dressed up as a 'game'.
[07:27:06] <normsaa> Its not illegal
[07:27:31] <arahael> In the context you have provided, it could very very easily be so.
[07:28:11] <normsaa> because dates are illegal?
[07:28:19] <arahael> No, because you're asking to crack someone's password!
[07:28:45] <normsaa> This is an algorithmic game
[07:28:53] <webNET4> https://en.wikipedia.org/wiki/Illegal_number
[07:28:54] <bayaz> Title: Illegal number - Wikipedia 
[07:28:57] <normsaa> Not cracking someones password
[07:29:06] <normsaa> I could use hashcat if i realy wanted to do that
[07:29:15] <normsaa> for nefarious purposes
[07:29:30] *** TheArchitect is now known as test123
[07:29:32] *** Parts: JimmyRustles (Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) ()
[07:29:53] *** test123 is now known as TheArchitect
[07:29:57] <arahael> > 12:54 normsa+| Can you crack Aaron’s password hash? <-- Helping with something like this is very ill-advised.
[07:30:03] *** TheArchitect is now known as Th|ef
[07:30:06] <arahael> normsaa: Sure, but we can't help with that.
[07:30:14] <InPhase> normsaa: Did you get this problem from a website?
[07:30:24] <normsaa> Yes
[07:30:34] <InPhase> normsaa: Okay, that's a different story then.  Lead with that next time.  :)
[07:30:44] <InPhase> normsaa: It differs from "my friend Aaron"...
[07:30:46] *** Th|ef is now known as TheArchitect
[07:30:57] <normsaa> My friend aaron is not a real person
[07:30:59] <InPhase> normsaa: Perhaps provide the link.
[07:31:05] <arahael> normsaa: There is no way we can know that.
[07:31:14] *** Joins: micrex22 (~quassel@user/micrex22)
[07:31:29] *** TheArchitect is now known as LastOneArch
[07:31:35] *** LastOneArch is now known as TheArchitect
[07:32:12] *** Joins: spacecraft (~spacecraf@98.50.16.116)
[07:32:44] *** TheArchitect is now known as WhyTorWhy
[07:32:44] *** Quits: gitgood (~gitgood@85.210.186.158) (Ping timeout: 265 seconds)
[07:33:10] *** Joins: Izem (~Izem@8.6.144.177)
[07:33:17] *** WhyTorWhy is now known as TheArchitect
[07:34:12] *** TheArchitect is now known as TheArchitect1
[07:34:15] *** TheArchitect1 is now known as TheArchitect
[07:34:31] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[07:34:38] <normsaa> InPhase arahael https://ibb.co/SvcNLhG
[07:34:39] <bayaz> Title: kil 
[07:34:46] *** Quits: gggp (~textual@111.63.44.6) (Ping timeout: 260 seconds)
[07:36:32] *** Joins: gggp (~textual@60.10.194.45)
[07:37:13] *** Joins: frost (~frost@59.71.242.61)
[07:38:45] *** Joins: reddishblue[m] (~reddishbl@2001:470:69fc:105::21eb)
[07:41:26] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[07:41:49] *** Joins: EmOwl- (~EmOwl-@2404:4402:17b3:bc00:2fed:62a0:e176:c11d)
[07:43:15] <arahael> normsaa: Sorry for being abrupt earlier, but in many juridictions breaking security is a *huge* deal, no matter how absurdely trivial it is.   I live in a country where "The law of mathematics is commendable, but the only law that applies is... the law..."  And things get truely absurd.  However, is there a reason you provided a screenshot, and not the actual link?
[07:43:29] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.2)
[07:43:38] <PlanckWalk> Screenshots are easier to edit? ;-)
[07:44:44] *** Quits: gggp (~textual@60.10.194.45) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:45:23] <PlanckWalk> More seriously, it's probably like a lot of competition-like sites where you have to sign up and complete challenges to even view many problems.
[07:45:28] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[07:45:45] *** Quits: spacecraft (~spacecraf@98.50.16.116) (Ping timeout: 260 seconds)
[07:46:18] <arahael> PlanckWalk: Yeah, what I was trying to hint at is they probably have a disclaimer, and permission granted to solving those problems for educational purposes, or whatever is required for the jurisdiction theyr'e in.
[07:46:24] <PlanckWalk> Yep
[07:46:45] <arahael> And since I can't view the original, I'm very unlikely to have signed off on that disclaimer, which means I can't help.
[07:47:07] <PlanckWalk> Also at least some level of accountability beyond "I am a random person on the Internet who wants to crack an MD5".
[07:47:08] *** Joins: codeminster (~codemin@69.167.44.173)
[07:47:14] <arahael> Right.
[07:50:32] *** Joins: spacecraft (~spacecraf@98.50.16.116)
[07:51:11] *** Quits: codeminster (~codemin@69.167.44.173) (Client Quit)
[07:52:34] *** Quits: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net) (Quit: WeeChat 3.2.1)
[07:52:49] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[07:53:22] <euouae> Yeah please pentest my friends website, totally my friend
[07:53:39] <euouae> I feel like today someone tried to trick me into giving up my host key in Zoom
[07:54:00] <euouae> ... which I didn't... they asked for the "password" but when I provided it they said "oh it's too large, can't type"
[07:54:07] <euouae> I guess they wanted the pin code insteaD! 
[07:55:25] *** Quits: spacecraft (~spacecraf@98.50.16.116) (Ping timeout: 252 seconds)
[07:56:21] <euouae> time to go home! Thanks for chat everyone
[07:56:31] *** Quits: euouae (~euouae@user/euouae) (Quit: euouae)
[07:57:30] <normsaa> More seriously, it's probably like a lot of competition-like sites where you have to sign up and complete challenges to even view many problems.
[07:57:30] <normsaa> That si correct
[07:57:30] <normsaa> Which is why I posted a screenshot
[07:58:48] <normsaa> I know the general idea of how to do it
[07:59:32] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[07:59:45] *** Joins: webNET4 (~0x100@32.211.211.39)
[08:01:11] <beaky> yes just use for loops i think
[08:01:39] <webNET4> the almighty forloop!
[08:02:16] *** Joins: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651)
[08:06:48] <webNET4> what is the most modern avdancement of the loop, has anything changed since the creation of the do {} while();   ?
[08:07:37] <leduyquang753> For-each loop.
[08:10:00] <PlanckWalk> for-each?  Bah.  We use functional programming constructs these days.
[08:10:56] *** Joins: sahasatvik (~sahasatvi@122.163.57.24)
[08:11:00] <leduyquang753> You cannot quite break in a forEach callback. :)
[08:11:11] <PlanckWalk> Good!
[08:12:12] <webNET4> who invented it?  php?
[08:12:32] <webNET4> or was perl first
[08:12:43] <PlanckWalk> Who invented which?
[08:12:58] <webNET4> for each
[08:14:10] <webNET4> or the ada for n in range
[08:14:11] <PlanckWalk> I guess it depends upon how you look at it
[08:14:19] <oldlaptop> webNET4: https://www.sqlite.org/tclsqlite.html#eval
[08:14:20] <bayaz> Title: The Tcl interface to the SQLite library 
[08:14:31] <oldlaptop> (I suppose you could call that a "for-each" loop, but it isn't quite.)
[08:14:31] *** Quits: irado (~irado@177.12.221.61) (Remote host closed the connection)
[08:14:41] <PlanckWalk> I mean, Lisp has something extremely similar
[08:15:03] <webNET4> if you go by standardization date for each comes even earlier (83) vbefore c89
[08:15:14] <webNET4> the do while
[08:16:17] <PlanckWalk> So ... at least 50 years ago.  Not that modern :)
[08:17:09] *** TheArchitect is now known as GolfAddict
[08:17:15] *** GolfAddict is now known as TheArchitect
[08:17:16] <InPhase> webNET4: Parallel for each is a thing that keeps trying to catch on, but hasn't quite hit its stride.
[08:18:50] <webNET4> yeah it should be possible i believe
[08:19:10] *** Quits: anton (anton@tloks.com) (Ping timeout: 240 seconds)
[08:19:31] *** Joins: h4x0r (~GodMode@user/h4x0r)
[08:19:34] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[08:19:52] *** TheArchitect is now known as WhereIsTor
[08:19:53] *** h4x0r is now known as TheArchitect
[08:20:05] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[08:20:12] <webNET4> oldlaptop  hmm sql 1979
[08:20:19] *** Quits: WhereIsTor (MrDuckHunt@user/h4x0r) (Remote host closed the connection)
[08:20:57] <oldlaptop> webNET4: I'm not interested in the sql language so much, but the semantics of tclsqlite's [$dbcmd eval] command/method/whatever-you-call-it.
[08:21:01] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[08:21:58] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[08:23:13] <oldlaptop> (which is in general a good example of the kind of useful thing that's possible with user-defined control structures in tcl - sqlite is of course a C extension, but the fundamental loop semantics could easily be implemented at the script level)
[08:26:31] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[08:26:34] * PlanckWalk did normsaa's challenge just for fun.  Took 6 lines of Java and less than a second runtime.
[08:26:40] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:c1f1:2555:cca3:62a0)
[08:31:04] *** Joins: anton (anton@tloks.com)
[08:35:32] *** Quits: wedr (~wedr___@8.21.13.19) (Read error: Connection reset by peer)
[08:35:55] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[08:36:30] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 260 seconds)
[08:37:22] *** Joins: gggp (~textual@60.10.23.169)
[08:38:10] *** Joins: qu4nt1n (~qu4nt1n@78.198.214.34)
[08:38:34] <khanred> now write it in x86 assembly
[08:38:58] <beaky> nice i like assembly
[08:39:12] <beaky> it is so fast and when i run assembly programs they use like kilobytes of space
[08:39:25] <beaky> whereas c programs use megabytes of space
[08:39:27] <webNET4> how much time with a shell script
[08:39:33] *** Quits: epolanski (uid312403@id-312403.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[08:40:16] <anton> do you know of good resources for learning x86 assembly?
[08:40:20] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[08:40:30] <khanred> Intel has some docs
[08:41:04] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[08:41:46] <beaky> yes i wish there were good resources to learn it than just the 5000-page intel x86 architecture reference manual i just yolo step by step for example i go 'right i need a loop here' and duckduckgo search 'loop in x86 assembler' and then 'right i need to allocate memory' then duckduckgo 'x86 mmap syscall' or 'x86 allocate from stack' etc
[08:41:51] <Izem> anton: books or web stuff?
[08:43:06] <beaky> or sometimes i do what i want to do in c++ and then dissassemble it in godbolt.org and use the assembly that the compilers generate
[08:43:19] <beaky> in -O3 so i am writing code as clever as a compiler
[08:44:06] <webNET4> just getting a basic assembly program compiled is like an epic saga 
[08:44:32] <khanred> its impossible
[08:45:08] <PlanckWalk> Real YOLOers just use CodePilot completions without review or tests.
[08:45:08] <webNET4> find one with really detailed setup instructions
[08:45:36] <khanred> I was just being an asshole about compilation/assemblers  
[08:45:43] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[08:45:49] <webNET4> example files, and the right software to go with it
[08:46:01] *** Quits: qu4nt1n (~qu4nt1n@78.198.214.34) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[08:46:16] <khanred> PlanckWalk, So it literally wouldn't work
[08:47:00] *** Quits: jamea (~jamea@177.239.87.39) (Ping timeout: 260 seconds)
[08:49:02] <webNET4> anton, https://nesdoug.com/2020/05/07/what-you-need-snesdev/
[08:49:03] <bayaz> Title: What you need, SNESdev 
[08:49:57] *** Joins: xiongxin8802 (~xiongxin@113.116.224.19)
[08:51:22] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 252 seconds)
[08:54:13] *** Joins: Caffeinated (~Caffeine@user/alexdelarge)
[08:58:22] *** Quits: xiongxin8802 (~xiongxin@113.116.224.19) (Quit: Konversation terminated!)
[08:58:45] *** Joins: xiongxin8802 (~xiongxin@119.123.102.140)
[08:59:54] *** Parts: Izem (~Izem@8.6.144.177) (Closing Window)
[09:01:32] <khanred> computers suck i'm going to go live on a farm
[09:04:22] <death916> good plan
[09:05:40] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[09:07:07] <dodo> they have computers on farms nowadays
[09:07:07] <PlanckWalk> A lot of farms make substantial use of computers
[09:07:19] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[09:07:21] <arahael> webNET4: Just use quickbasic. </troll> ;)
[09:08:01] <khanred> dodo, mine wont
[09:08:10] *** Joins: spacecraft (spacecraft@98.50.16.116)
[09:08:13] <khanred> i'll probably also starve to death
[09:08:51] <khanred> that is if i'm lucky
[09:08:51] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Read error: Connection reset by peer)
[09:09:31] <webNET4> you can eat most tree barks in  the middle layer it's edible. probably want to cook it though good luck
[09:09:54] <webNET4> just not cherry pacific yew or eucalyptis
[09:10:22] *** Quits: juliaEnv (~juliaEnv@ip-86-49-255-202.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[09:11:06] <arahael> No, not most trees here, then. ;)
[09:11:06] <webNET4> also don't ask me how mych energy to digest  vs caloric intake
[09:11:22] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 260 seconds)
[09:11:33] <khanred> I can eat dirt
[09:11:37] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[09:11:43] <webNET4> birch they said was the most sought after
[09:11:49] <khanred> birch please
[09:12:47] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[09:12:55] *** Joins: pulse (~pulse@user/pulse)
[09:14:20] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[09:15:16] <khanred> how does one become amish 
[09:15:34] *** Quits: xiongxin8802 (~xiongxin@119.123.102.140) (Ping timeout: 260 seconds)
[09:15:41] *** Quits: spacecraft (spacecraft@98.50.16.116) (Ping timeout: 265 seconds)
[09:16:24] *** Quits: anton (anton@tloks.com) (Quit: anton)
[09:16:55] *** Joins: anton (anton@tloks.com)
[09:17:55] <khanred> what's the gay scene like amongst the amish?
[09:18:41] <arahael> khanred: I don't think this is an appropriate topic for ##programming.
[09:19:38] <PlanckWalk> More like ... ##anti-programming
[09:20:15] *** Quits: gggp (~textual@60.10.23.169) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:22:21] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:c1f1:2555:cca3:62a0) (Read error: Connection reset by peer)
[09:23:32] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[09:24:00] <khanred> hm
[09:24:43] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[09:26:23] *** Joins: spacecraft (~spacecraf@98.50.16.116)
[09:28:43] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:09] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Quit: leaving)
[09:31:46] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:37:25] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[09:43:06] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:44:36] *** Joins: gggp (~textual@111.63.44.6)
[09:44:38] *** Joins: llanhmod (~developer@user/domhnall/x-2887755)
[09:47:30] *** Parts: llanhmod (~developer@user/domhnall/x-2887755) ()
[09:49:48] *** Joins: Doraemon (~NeoCron@p200300c4cf4f9c00198c896a0feeb747.dip0.t-ipconnect.de)
[09:50:10] <beaky> so i have figured out how to store 1 million 32-bit unsigned integers in under 1.8 megabytes of ram but how do i fit it under 1 megabyte is it even possible
[09:50:20] <beaky> will asymmetric number systems save me
[09:51:38] <beaky> maybe once i get the entire set in under 1.8MiB i can use sick compression to trim it even further
[09:51:45] *** Joins: TechTest (uid283215@id-283215.lymington.irccloud.com)
[09:51:54] <pulse> have you tried zipping it up
[09:52:01] *** Quits: neocron (~NeoCron@p200300c4cf3ba70012c3036b63257be6.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[09:53:23] <beaky> like gzpi?
[09:53:52] *** Quits: spacecraft (~spacecraf@98.50.16.116) (Ping timeout: 265 seconds)
[09:54:17] *** Quits: gggp (~textual@111.63.44.6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:56:15] <beaky> nice i will try to implement it in rust then
[09:58:14] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[10:01:22] <arahael> beaky: If you need random access that's much harder. But if your access pattern is linear, then that should be a nearly "trivial" solution.
[10:01:29] *** Joins: spacecraft (~spacecraf@98.50.16.116)
[10:02:32] <beaky> yes only linear
[10:03:29] *** AndrewYu is now known as xeroxIRC
[10:03:29] *** xeroxIRC is now known as Guest591
[10:04:00] *** Guest591 is now known as AndrewIRC
[10:04:02] <beaky> i must look into zstd the sick cool new compression algorithm
[10:05:58] *** Quits: spacecraft (~spacecraf@98.50.16.116) (Ping timeout: 260 seconds)
[10:06:35] *** Quits: khanred (~khanred@user/khanred) (Quit: Leaving)
[10:10:33] *** Joins: spacecraft (spacecraft@98.50.16.116)
[10:11:06] *** Quits: zys (~zys@61.140.185.86) (Ping timeout: 260 seconds)
[10:21:33] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[10:23:09] * dodo should do more caching
[10:32:21] *** Joins: mrig (~mrig@user/mrig)
[10:36:12] *** Joins: gggp (~textual@60.10.23.169)
[10:36:40] <beaky> nice i like caching
[10:36:48] *** Quits: gggp (~textual@60.10.23.169) (Client Quit)
[10:37:00] <paulo> i also like catching
[10:38:07] <xeno> what about cashing? that's the best :)
[10:39:19] *** Quits: spacecraft (spacecraft@98.50.16.116) (Ping timeout: 252 seconds)
[10:40:16] <beaky> so after looking into compression i feel like i have a very tight cpu and storage budget so that since i am already under 2 MiB i should not compress further 
[10:40:51] <beaky> now iw will just refactr my solution and then prove it correct in agda
[10:41:58] *** Joins: spacecraft (spacecraft@98.50.16.116)
[10:47:45] *** Joins: xumi (~nikola@93-86-197-190.dynamic.isp.telekom.rs)
[10:51:43] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[10:53:49] *** Quits: electr0n (~electr0n@about/security/founder/electr0n) (Remote host closed the connection)
[11:00:59] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[11:00:59] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[11:00:59] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[11:05:10] *** Quits: spacecraft (spacecraft@98.50.16.116) (Ping timeout: 252 seconds)
[11:08:36] <PlanckWalk> Proving a compression algorithm correct sounds like fun!
[11:09:21] *** Joins: Inari (~Pinkishu@p4fe7efa0.dip0.t-ipconnect.de)
[11:09:52] <PlanckWalk> What form of compression did you end up with?
[11:12:53] <beaky> golomb coding with m = 12 https://en.wikipedia.org/wiki/Golomb_coding 
[11:12:56] <bayaz> Title: Golomb coding - Wikipedia 
[11:13:16] <beaky> with m = 2^12*
[11:14:35] <PlanckWalk> For differences between successive numbers?
[11:14:37] *** Joins: chomwitt (~chomwitt@2a02:587:dc14:5d00:12c3:7bff:fe6d:d374)
[11:14:44] <beaky> yes using the differences only
[11:14:54] <beaky> (like delta encoding)
[11:15:22] <beaky> so the delta encoding makes the numbers smaller and the golomb coding makes it variable-width (thus levearging the smaller size)
[11:17:09] <beaky> and with mroe sophisticated compression im sure it can go down even more but i think im gonna stop there
[11:18:13] <arahael> *sigh*, the more I use SwiftUI, the more I wish I was just doing raw drawing instead.
[11:18:21] <arahael> Constantly fighting.
[11:19:25] *** Quits: LiftLeft (~LiftLeft@172.98.92.75) (Ping timeout: 265 seconds)
[11:20:01] <beaky> gotta try flutter the future of ui development according to google
[11:20:14] <beaky> featuring the dart virtual machine 
[11:20:33] <beaky> which was meant to be the future of the web back in 2011 but somehow it disappeared and then came back as flutter
[11:24:25] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 252 seconds)
[11:25:25] <beaky> like a faster electron
[11:26:48] <arahael> beaky: I know my colleagues are very excited about it.
[11:27:04] <arahael> beaky: But actually more excited about Jetbrain's Compose.
[11:27:06] *** Joins: spacecraft (~spacecraf@98.50.16.116)
[11:30:01] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[11:33:37] <beaky> yes jetbrains compoose came highly recommmended by being inspired by skia and i look forward to some rust based future 2d gui framework ones like druid or 60frames or whatever that other one was called
[11:33:46] *** Quits: xumi (~nikola@93-86-197-190.dynamic.isp.telekom.rs) (Quit: leaving)
[11:35:28] *** Joins: independent_ (~independe@95.144.68.39)
[11:35:31] <beaky> yes it is the sixtyfps though it is an immediate mode framework and there is also some elm-inspired ones like iced https://www.areweguiyet.com/
[11:35:34] <bayaz> Title: Are we GUI yet? 
[11:36:36] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[11:40:35] <arahael> Nice.  I've got sooo many things I want to learn - reflex-frp is still on my list. :(
[11:43:10] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[11:43:28] *** Joins: independent_ (~independe@95.144.68.39)
[11:49:34] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[11:50:10] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[11:50:28] *** Joins: independent_ (~independe@95.144.68.39)
[11:51:29] *** Joins: user51 (~user51@176.228.90.248)
[11:51:55] *** Joins: KeanuReeves (~dunkeln@94.128.205.199)
[11:54:30] *** Quits: jab416171 (~jab416171@c-174-52-53-66.hsd1.ut.comcast.net) (Quit: bye)
[11:57:19] *** Joins: jab416171 (~jab416171@c-174-52-53-66.hsd1.ut.comcast.net)
[11:59:37] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[12:02:10] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[12:02:25] *** Joins: webNET4 (~0x100@32.211.211.39)
[12:04:06] <webNET4> swift has some pretty advanced loop functionality
[12:05:42] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:07:15] <webNET4> closed range operator, and allows multiple types of "each" objects in for each
[12:07:52] <arahael> webNET4: Not as good as Haskell.
[12:11:12] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[12:12:26] *** Joins: Enitin (~Enitin@82.102.22.84)
[12:14:45] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[12:16:34] <webNET4> i can't read haskell
[12:17:44] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[12:17:56] *** Joins: webNET4 (~0x100@32.211.211.39)
[12:18:13] *** Quits: Thedarkb (~Thedarkb@2001:bb6:b403:d8dd:fa0e:a7e8:c2f:9285) (Ping timeout: 252 seconds)
[12:18:21] *** Joins: anovick_ (~anovick@2a0d:6fc0:1831:1500:98e9:2c6f:1a52:52c0)
[12:19:09] <Burkuf> webNET4: Don't use your mind... Use the Force
[12:20:10] *** Quits: caramel (~caramel@user/caramel) (Read error: Connection reset by peer)
[12:21:05] *** Quits: spacecraft (~spacecraf@98.50.16.116) (Ping timeout: 260 seconds)
[12:23:14] *** Joins: spacecraft (~spacecraf@98.50.16.116)
[12:23:53] * mrig cries trying to use inkscape.
[12:25:09] *** Quits: KeanuReeves (~dunkeln@94.128.205.199) (Ping timeout: 265 seconds)
[12:25:28] *** Quits: Doraemon (~NeoCron@p200300c4cf4f9c00198c896a0feeb747.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[12:27:40] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[12:28:17] *** Joins: xiongxin8802 (~xiongxin@113.116.224.71)
[12:29:13] <micrex22> mrig: oooh I love inkscape, it's real nice
[12:29:24] <micrex22> Kind of buggy on Windows, though
[12:29:34] <micrex22> I'd recommend usage only on Linux
[12:30:28] *** Quits: spacecraft (~spacecraf@98.50.16.116) (Ping timeout: 265 seconds)
[12:33:36] *** Joins: exvicesindaco_ (~exvicio@37.162.142.106)
[12:34:49] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Ping timeout: 265 seconds)
[12:34:52] *** exvicesindaco_ is now known as exvicesindaco
[12:34:58] *** Joins: spacecraft (~spacecraf@98.50.16.116)
[12:35:15] <arahael> It's pretty bad on macos, too.
[12:37:05] *** Joins: KeanuReeves (~dunkeln@94.128.205.199)
[12:37:10] *** Joins: lunarkitty (uid501895@user/pyra)
[12:37:57] <mrig> sigh, just trying an appimage of a newer version to see if that will work any better, but the appimage wont work.
[12:38:12] *** Joins: exvicesindaco_ (~exvicio@host-79-46-77-254.retail.telecomitalia.it)
[12:38:25] *** Quits: exvicesindaco (~exvicio@37.162.142.106) (Read error: Connection reset by peer)
[12:38:28] *** exvicesindaco_ is now known as exvicesindaco
[12:38:37] <mrig> Is crashed 3 times and frozen the system mouse all in one morning.
[12:38:39] <vdamewood> Personally, Inkscape looks to me like an example of open-source software going half-assed on the UI.
[12:39:26] <mrig> To have these bugs that are not fixable, must imply that the code structure is hard to work with.
[12:39:42] <mrig> I would assume anyhow.
[12:39:45] <arahael> Nobody said they're not fixable.
[12:40:07] <webNET4> if the whole system mouse is freezing something horrible is going on
[12:40:27] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[12:40:53] *** Joins: Rounin (~david@84.212.130.215)
[12:41:30] <mrig> grabbing and moving text in the xml editor shuts it down to.
[12:41:47] <mrig> you can create a crash straight away by doing this every time.
[12:41:58] *** Joins: Kre10s (~maximilia@ip5f5accb0.dynamic.kabel-deutschland.de)
[12:42:33] *** Quits: spacecraft (~spacecraf@98.50.16.116) (Ping timeout: 265 seconds)
[12:42:55] <mrig> UI requires cohesion, doubt that is very easy to achieve by comity.
[12:43:27] <mrig> not that I know how inkscape was developed, if there was one lead on it or not through its development.
[12:45:50] <Kre10s> mrig: what's wrong with the UI? I thought it was ok
[12:46:38] <mrig> It is ok, really it is the lack of support for text based editing.
[12:47:08] <mrig> that it adds transforms all the time when you want it to update the actual vectors.
[12:47:22] <mrig> adds all sorts of styling that you dont ask it to.
[12:47:53] *** Joins: trace987 (~trace@95.90.106.112)
[12:48:09] <mrig> will not stay in optimised mode, you have to keep scrolling all the way to the bottom of a big list to reset when you save.
[12:49:08] <mrig> The colour collection support is terrible, for swatches.
[12:49:27] <mrig> and the support for image assets that are reusable.
[12:49:57] *** Quits: trace987 (~trace@95.90.106.112) (Remote host closed the connection)
[12:50:13] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[12:51:08] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[12:51:27] <Kre10s> mrig: sounds like you know what you can contribute :D
[12:51:46] <mrig> I cant read C++ though.
[12:52:24] <arahael> mrig: Nobody can. ;)
[12:52:39] <mrig> Am learning the SVG specification at the moment, to try to better understand how such a program might work and learning about parsers.
[12:52:41] <Kre10s> it takes a while to get into those large projects and find your way around
[12:52:51] <mrig> Well the language too.
[12:53:37] <mrig> What epoque of C++ is it there? How are you supposed to know where to start with a language that does not distinguish its dialects?
[12:54:02] <arahael> mrig: Honestly, the way to learn C++ is with a couple of good books.
[12:54:06] <Kre10s> I was working with a python script at work where whoever wrote it trated import like a C programmer would #include.
[12:55:03] <Kre10s> So. you are not the only developer who doesn't understand the language used
[12:55:05] <mrig> arahael: seems more appealing to write an SVG tool in go.
[12:55:26] <arahael> Hmm.
[12:56:03] <mrig> Kre10s: I find the state of programming to be an embarrassment, am not likely to content my self in the knowledge that none can code nicely..
[12:57:31] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[12:57:32] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 245 seconds)
[12:57:38] <Kre10s> coding is hard. good code is expensive.
[12:57:54] <mrig> The other thing, before contributing more shiny shiny, I would not touch it for for further development until it stop crashing so often and in such blocking ways.
[12:58:04] <mrig> Kre10s: capitalism is dying.
[12:58:20] <mrig> value is that which has good taste.
[12:59:01] <Kre10s> I was at a training where we were literally told "the customer does not pay for testing"
[12:59:08] <mrig> those who know not what that is are not fit ... <- do much really
[12:59:12] *** Joins: jaysicks (~jaysicks@188-143-64-68.pool.digikabel.hu)
[12:59:20] <Kre10s> which is true. but also neglect the "the customer wants a working product"
[12:59:49] <mrig> if the customer is a squealing brat, better off doing something else.
[13:00:17] <mrig> If the market forces poor code, then it is not sustainable.
[13:01:06] <PlanckWalk> The customer does no pay for training either
[13:01:14] <PlanckWalk> But they do it anyway.
[13:01:15] <Kre10s> I don't know how well sustainability fits into capitalism
[13:01:35] <deniska> As with anything with a market, bad code is a balancing act. Cheaper to create, more expensive to maintain
[13:01:43] <deniska> Called "technical debt" for a reason
[13:01:57] <mrig> yes good point
[13:04:10] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[13:04:23] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:04:29] *** Joins: independent_ (~independe@95.144.68.39)
[13:05:25] *** Joins: spacecraft (~spacecraf@98.50.16.116)
[13:07:13] *** pizdets_ is now known as pizdets
[13:07:26] <mrig> Watching a lecture by Torvalds the other day which made me feel a little better about my coding, He mentioned that when he started work on Linux, he had already been coding for 10 years, and that at 21.
[13:07:46] <nitrix> Quite frequently, I refactor code to be prettier/cleaner, but the result ends up being more cumbersome (sometimes subtly dangerous) in more ways than initially.
[13:07:58] <mrig> The amount of training that goes in is enormous, years of work.
[13:08:10] <mrig> To really program.
[13:08:14] <PlanckWalk> It's sometimes to endup with a birlliant shining crittle crystal
[13:08:20] <PlanckWalk> soemtimes easy*
[13:08:33] <PlanckWalk> Ugh, cold fingers :(
[13:08:44] <PlanckWalk> It's sometimes easy to end up with a brilliant shining brittle crystal.
[13:09:04] <PlanckWalk> It works for your current requirements, but changing it in any direction will break it.
[13:09:12] <mrig> Right yes
[13:09:40] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[13:09:59] *** Joins: independent_ (~independe@95.144.68.39)
[13:10:02] <mrig> I am thinking about trying to code something in C in a modular way using dependency injection, after writing in go for a while, am intrigued as to how that might pat out.
[13:10:12] <nitrix> I personally no longer have subjective opinion about code. It's not always obvious how it ended up how it is, but very often, you discover the reasons further down the line of the refactor.
[13:10:14] <mrig> pan out rather.
[13:11:09] <mrig> Sure yes, I've no experience with old or large code bases, am just reeling at the UX really.
[13:11:24] *** Joins: rsx (~dummy@ppp-188-174-153-122.dynamic.mnet-online.de)
[13:12:25] *** Quits: spacecraft (~spacecraf@98.50.16.116) (Ping timeout: 260 seconds)
[13:12:58] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[13:13:56] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[13:14:16] *** Quits: menace (~someone@user/menace) (Quit: menace)
[13:14:39] <Kre10s> What document should I be reading if I wanted to decode an arm thumb instruction by hand? and where can I find it?
[13:15:49] <deniska> Kre10s: probably arm architecture reference manual?
[13:16:33] <GeDaMo> https://developer.arm.com/architectures/cpu-architecture/a-profile/exploration-tools
[13:16:36] <bayaz> Title: A-Profile Architectures | Exploration tools – Arm Developer 
[13:16:53] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 265 seconds)
[13:17:08] <GeDaMo> https://developer.arm.com/architectures/cpu-architecture/a-profile/docs
[13:17:09] <bayaz> Title: A-Profile Architectures | Documentation – Arm Developer 
[13:17:19] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[13:18:09] *** Joins: gggp (~textual@123.113.181.187)
[13:18:42] *** Quits: gggp (~textual@123.113.181.187) (Client Quit)
[13:19:57] <Kre10s> Thanks. I was googling for this exact document to no avail...
[13:21:03] <GeDaMo> There's an ##asm channel
[13:22:48] *** Joins: ddrtns^ (~ddrtns@68.101.54.227)
[13:25:08] *** Joins: spacecraft (~spacecraf@98.50.16.116)
[13:28:10] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[13:28:28] *** Joins: independent_ (~independe@95.144.68.39)
[13:29:52] <user51> is there a relationship between boolean algebra and parsing? or maybe i should just call it finite state machine instead?
[13:30:20] *** Joins: Inari|2 (~Pinkishu@p4fe7efa0.dip0.t-ipconnect.de)
[13:30:22] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Ping timeout: 260 seconds)
[13:32:34] *** Quits: Inari (~Pinkishu@p4fe7efa0.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[13:32:40] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[13:32:58] *** Joins: independent_ (~independe@95.144.68.39)
[13:33:54] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[13:34:13] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[13:36:23] *** Joins: magla (~gelignite@55d48887.access.ecotel.net)
[13:36:53] *** Joins: vysn (~vysn@user/vysn)
[13:38:34] *** Quits: uzee001 (~uzee@86.36.37.198) (Quit: Leaving)
[13:38:39] *** Joins: electr0n (~electr0n@about/security/founder/electr0n)
[13:38:41] <beaky> yes formulas in boolean algebra are representable as binary decision trees and binary decision diagrams
[13:39:26] *** Quits: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651) (Quit: WeeChat 3.2)
[13:42:11] *** Quits: KeanuReeves (~dunkeln@94.128.205.199) (Quit: leaving)
[13:42:25] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[13:45:54] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[13:48:26] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[13:49:05] *** Joins: gggp (~textual@111.63.44.6)
[13:51:22] *** Quits: TastyWiener95 (~uhhh3@user/tastywiener95) (Ping timeout: 260 seconds)
[13:52:14] *** Joins: eson123 (~eson123@118.69.128.37)
[13:52:41] <eson123> about data structure again pls, i don't really get it when someone says "implement a queue using a stack", like how and why shoukd we even do that
[13:52:53] <eson123> to me, both seems different tho, not sure what they mean by that
[13:54:36] <arahael> One assumes that in the assumed language you must be doing those excercises in, it might be possible to use a queue as a stack and vice versa.
[13:55:44] <pyzozord> yeah it sounds like there is no practical reason for the exercise other than practice implementing queues and using stacks
[13:56:50] *** Quits: gggp (~textual@111.63.44.6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:57:05] <pyzozord> Hmm let's see how would I do it. If I remember correctly it's not possible to implement a queue with just one stack, it must be at minimum two stacks
[13:57:54] <jinsun> and really inefficient
[13:58:26] <user51> might be doable in forth
[13:59:03] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[13:59:06] *** Quits: gitesh (uid423739@id-423739.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[13:59:58] <jinsun> for push just push into the stack, but for pop will have to pop out everything from one into another, take the head and then push the rest back in
[14:00:15] <user51> if it's lifo then it's simple to use a stack, fifo might require a bottom pointer, or you could perhaps store more than 1 thing in a stack entry.
[14:00:23] <arahael> Some languages have stacks with different queing policies.
[14:00:24] <user51> but now it feels like solving the wrong problem
[14:01:12] *** Quits: magla (~gelignite@55d48887.access.ecotel.net) (Quit: Stay safe!)
[14:01:27] <PlanckWalk> Implement a list using a BSP tree
[14:02:00] <user51> whoa, new data structure. thanks PlanckWalk 
[14:02:08] <user51> gotta code them all!
[14:02:12] <smallville7123> i need help with scaling
[14:03:18] <PlanckWalk> If you're scaling a mountain, you need different equipment than if you're scaling a fish.
[14:03:52] <pyzozord> It just takes advantage of the fact that moving things from one stack to the other stack reverses things. And that's what is needed since queue always goes one direction when adding and when removing, and stack must always go two directions when adding and deleting. So you can use two stacks to reverse one direction into the other direction and you got yourself adding and removing in the same 
[14:03:55] <user51> what if i need to scale a mountain of fish?
[14:03:58] <pyzozord> direction
[14:05:12] <PlanckWalk> You could allocate one stack per element and link them in a list
[14:05:43] <smallville7123> if my parent rectangle is 249, 232, and i draw to a virtual canvas of 100x100 and i am drawing from 0x0 to 100x100 in virtual canvas, how do i go about scaling it to my parent rectangle ?
[14:06:08] *** Joins: plastico (~plastico@neomutt/plastico)
[14:06:20] <PlanckWalk> smallville7123: Depends upon whether you want to preserve aspect ratio or not
[14:06:34] <pyzozord> smallville7123: https://en.wikipedia.org/wiki/Image_scaling#Algorithms
[14:06:36] <bayaz> Title: Image scaling - Wikipedia 
[14:06:39] <PlanckWalk> If you don't care, you can just multiply by different numbers for vertical & horizontal
[14:06:42] *** Quits: spacecraft (~spacecraf@98.50.16.116) (Ping timeout: 245 seconds)
[14:09:45] <smallville7123> as i tried scaling it to my parent size but it does not account for partial drawing position
[14:12:20] <pyzozord> "partial drawing position"?
[14:12:48] *** Joins: spacecraft (~spacecraf@98.50.16.116)
[14:12:50] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[14:12:50] *** Quits: audiocat (~audio@2603-8081-1800-6a6f-3385-4171-3f40-226b.res6.spectrum.com) (Ping timeout: 260 seconds)
[14:15:55] <eson123> jinsun: yea but isn't push and pop some operations belonging to the stack ?
[14:16:08] <eson123> jinsun: i mean i was trying to implement a queue instead
[14:16:49] <Kre10s> with python arrays you can push and pop from the front or that back.
[14:17:04] <eson123> oh
[14:17:28] <eson123> hm so what data structure does it really use then, a queue or a stack ?
[14:17:30] <Kre10s> so depending on how you use it it's a stack or a queue. But you are right. push and pop is traditionally associated with a stack.
[14:17:58] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 260 seconds)
[14:18:14] <Kre10s> maybe you can share some more context? like the full problem description you are working on.
[14:18:31] <smallville7123> im not 100% sure how drawing SHOULD work specifically
[14:18:36] *** Joins: Enitin (~Enitin@82.102.22.84)
[14:19:59] <pyzozord> smallville7123: you need to be more specific, drawing should work by putting pixels on the screen
[14:20:40] <eson123> Kre10s: not any content specifically, i am just researching about data structure and i came across some weird situations
[14:20:53] <eson123> Kre10s: like the one i asked just about a few minutes ago
[14:21:16] <Amadiro> smallville7123, you've been talking about this for days now. Just sit down with a piece of paper, and draw out your scenarios. in 30 minutes, you'll have total clarity about this
[14:21:48] <smallville7123> https://gist.github.com/mgood7123/528e79c0f22e97a06c287a710d588756 this is what i currently have
[14:21:49] <bayaz> Title: CoordinateHelper (View.cpp).cpp 
[14:22:09] <pyzozord> Amadiro: more like weeks really
[14:23:47] *** Joins: caramel (~caramel@user/caramel)
[14:24:02] <jtgd> eson123: In Lisp we do a stack as a SLL. You use two stacks for a queue, call them A and B. When you write you write to B. When you read you read from A. When A is empty you transfer all on B to A by popping B then pushing A. It's true that each element gets pushed twice and popped twice, but this is a fast operation on a SLL.
[14:24:07] <smallville7123> Amadiro: yea sure, just set everything as absolute positions with a fixed size window that should never be resized
[14:25:32] <jtgd> (2 machine instructions)
[14:27:06] <jtgd> readers and writers can do so without locking except reader locks for the loop.
[14:29:18] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[14:33:11] <smallville7123> how do i go about correctly scaling the position assuming these two things:
[14:33:27] <smallville7123>     // the drawPosition indicates the position and length of our draw
[14:33:27] <smallville7123>     //   drawPosition.topLeft = x,y position start
[14:33:27] <smallville7123>     //   drawPosition.bottomRight = x,y position end
[14:33:29] <smallville7123>     // the position indicates the maximum size we can be
[14:33:31] <smallville7123>     //   position.topLeft = x,y offset
[14:33:33] <smallville7123>     //   position.bottomRight = x,y maximum size
[14:34:02] <smallville7123> in which the position and padding are given in virtual coordinates
[14:34:41] *** Quits: spacecraft (~spacecraf@98.50.16.116) (Ping timeout: 265 seconds)
[14:35:24] <smallville7123> (drawPosition is also given in virtual coordinates)
[14:36:27] <smallville7123> the draw position itself should not need to be scaled right?
[14:38:57] *** Quits: Enitin (~Enitin@82.102.22.84) (Remote host closed the connection)
[14:39:02] <pyzozord> "how do I go about correctly scaling the position (...) the draw position itself should not need to be scaled right?"
[14:39:07] <pyzozord> it just doesn't make too much sense
[14:39:29] *** Joins: Enitin (~Enitin@82.102.22.84)
[14:39:32] *** Quits: Enitin (~Enitin@82.102.22.84) (Read error: Connection reset by peer)
[14:42:07] <smallville7123> so i should use the drawPosition as the position percentage instead of the position attribute?
[14:42:19] * smallville7123 needs better names ;-;
[14:42:58] <smallville7123> tho both technically mean the same thing ;-;
[14:43:18] <smallville7123> the position the view should be placed inside the view, eg its offset
[14:43:51] <smallville7123> and the size it should be placed at, eg its max size (if not required size)
[14:44:11] <smallville7123> which is equivilant to the drawing position
[14:45:09] *** Joins: isosterix (~isosterix@ip-95-222-34-30.hsi15.unitymediagroup.de)
[14:45:58] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[14:46:00] <smallville7123> but the drawing position is determined by how the view should be layed out in the parent, eg does the parent lay its children out in its own way such as a row/column or a grid, or does it let the user lay out the children manually
[14:46:00] <pyzozord> are you asking if all relative positions for nested tree of containers should be relative?
[14:46:11] <smallville7123> no
[14:46:20] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Client Quit)
[14:46:55] *** Joins: DasBrain (~DasBrain@user/dasbrain)
[14:46:59] <smallville7123> what would be better names for the two positions ;-;
[14:47:45] <pyzozord> Ok I give up. Can make sense of what he is saying.
[14:47:49] *** Joins: lemonsni- (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[14:47:50] <pyzozord> *Can't
[14:47:54] <smallville7123> as i can only think of layoutPosition and ... offsetPosition ?
[14:48:26] <smallville7123> i cannot use margins as the name as i do not "collapse margines" like web does
[14:49:18] <smallville7123> i hate naming stuff ;-;
[14:49:26] <mercenary> you are fast approaching the concept of a 'layout manager', where the parent provides a default layout manager and the user can override that with a custom one
[14:49:31] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Remote host closed the connection)
[14:49:37] <smallville7123> yea
[14:49:48] <smallville7123> thats basically what im doing
[14:49:50] *** Quits: lemonsni- (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Quit: ZNC 1.8.2 - https://znc.in)
[14:49:52] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[14:50:19] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[14:50:22] <smallville7123> but i need a way to clearly differenciate my variables so i dont confuse myself ;-;
[14:51:10] *** Joins: audiocat (~audio@2603-8081-1800-6a6f-7618-ec86-2f00-63d5.res6.spectrum.com)
[14:54:06] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[14:54:25] <arahael> Naming is so hard.  It'd be worth documenting this in an actual document.
[14:54:40] <mercenary> there's x0,y0, x1,y1, and xmax,ymax. All coming in different flavours depending on what coordinate system you are in: absolute, relative to parent, relative to sibling, relative to viewport, ...
[14:54:54] *** Joins: gggp (~textual@111.63.44.6)
[14:55:33] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:55:50] <arahael> Complex.
[14:57:55] <mercenary> new Window(0, 0, 100+5i, 200+8i)
[14:58:29] <user51> huh, woinder if there's al anguge that accepts such syntax
[14:58:46] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[14:58:56] <mercenary> imaginary windows? doubt it
[14:59:09] <GeDaMo> Doesn't C++ have a thing for user defined number suffixes?
[14:59:16] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[15:00:08] <user51> very nice
[15:00:31] <GeDaMo> https://en.cppreference.com/w/cpp/language/user_literal
[15:00:33] <bayaz> Title: User-defined literals (since C++11) - cppreference.com 
[15:00:44] *** Parts: TheArchitect (~GodMode@user/h4x0r) ()
[15:00:44] *** Joins: TheArchitect (~GodMode@user/h4x0r)
[15:00:49] <TheArchitect> sweet
[15:00:50] * smallville7123 breaks my drawing
[15:00:58] *** Quits: exvicesindaco (~exvicio@host-79-46-77-254.retail.telecomitalia.it) (Ping timeout: 252 seconds)
[15:01:22] *** Quits: audiocat (~audio@2603-8081-1800-6a6f-7618-ec86-2f00-63d5.res6.spectrum.com) (Ping timeout: 260 seconds)
[15:01:22] *** Parts: TheArchitect (~GodMode@user/h4x0r) ()
[15:01:22] *** Joins: TheArchitect (~GodMode@user/h4x0r)
[15:01:24] <GeDaMo> Of course, Forth can do that too :P
[15:01:32] <TheArchitect> GeDaMo ✓
[15:01:51] <user51> c++ sounds like parstopia :)
[15:02:02] <smallville7123> if my position percentage is calculated based on drawPosition / virtualCanvas, then should i scale my calculated percentages by drawPosition.bottomRight or virtualCanvas ?
[15:03:52] *** Quits: bolsonarogay (~bolsonaro@186.237.242.64) (Ping timeout: 252 seconds)
[15:04:38] <smallville7123> i guess i should scale to virtual canvas right? as the virtual canvas cannot be smaller than the drawing position, which should be confined to the region the virtual canvas is specified as, right?
[15:06:06] *** Joins: zaher (~zaher@37.48.180.249)
[15:07:29] <pyzozord> still not enough information
[15:08:26] <pyzozord> parent.drawPosition or child.drawPosition? Is drawPosition relative or absolute?
[15:08:50] <pyzozord> (but much better now, I almost could make sense of it now)
[15:10:59] *** Joins: fweht (uid404746@id-404746.lymington.irccloud.com)
[15:12:29] <mrig> lol, not sure what is worse, the program crash or the hacky work around to save your work when it happens :|
[15:12:34] *** Joins: juliaEnv (~juliaEnv@ip-86-49-255-202.net.upcbroadband.cz)
[15:12:44] * mrig [scratches head a little bemused by it all]
[15:13:23] <mrig> pyzozord: are you writing rouglikes in your terminal yet? :D
[15:13:24] *** Joins: bolsonarogay (~bolsonaro@186.237.242.64)
[15:13:40] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[15:14:53] <pyzozord> mrig: missing 24bit color still. But I tested my prototype I wrote few months ago. It seems my terminal is plenty fast even without glyph caching
[15:15:05] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[15:15:41] *** Joins: peteyboy1 (~peteyboy1@95.169.232.161)
[15:15:54] *** Quits: gggp (~textual@111.63.44.6) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:16:00] <pyzozord> honestly I think my apetite grew a bit and now that I can do any kind of ascii-based roguelike I want, I'm thinking about more graphical games
[15:16:10] <mrig> I've been pondering how to write modular C, using folders makefiles and code structure.
[15:16:14] * pyzozord chuckles a bit awkwardly
[15:16:37] <mrig> Ah into 2D tiling next I suppose?
[15:16:46] <arahael> pyzozord: The problem with doing graphical roguelikes instead of ascii is that you now have to do graphics. :)
[15:17:06] <mrig> me cracks open a can of worms.
[15:17:07] <pyzozord> Yeah I'm thinking follout 2/baldrus gate 2/factorio
[15:17:07] <GeDaMo> No reason your graphics can't be renders of ASCII characters :P
[15:17:39] <arahael> That's what Dwarf Fortress does!
[15:19:08] *** Quits: eson123 (~eson123@118.69.128.37) (Quit: Leaving)
[15:19:26] <pyzozord> mrig: recently I think I finally understood what Jonathan Blow means that his language doesn't have any kind of #include in his language. It's really cool to think about each .c file as sub-program/library that are linked together
[15:19:32] *** Joins: qaph (~weechat@user/qaph)
[15:19:49] <pyzozord> Linkers are cool
[15:20:22] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Ping timeout: 252 seconds)
[15:21:25] <pyzozord> But I think global objects in C should be file scope by default. Allowing linkage should be optin not optout
[15:21:31] <Amadiro> pyzozord, this approach comes with a bunch of really annoying limitations, however
[15:21:43] <Amadiro> (I don't know if/how Jonathans language solves these in particular)
[15:22:09] *** Joins: Tom_ (~Tom@2a01:e0a:2de:8130:edfb:9b5:53a1:9832)
[15:22:32] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 265 seconds)
[15:22:34] *** qaph is now known as kron
[15:23:20] <pyzozord> Amadiro: he is very opinionated, he writes 10k line source files, and he also thinkgs that this is the correct way to do it
[15:23:24] <mrig> pyzozord: well you can use the static key word for that.
[15:23:45] <mrig> Yes that sounds interesting not having the includes.
[15:23:47] <pyzozord> I'm not sure about the 10k files personally, that sounds little too much. I'd probably break it down and link them
[15:24:39] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:159d:b657:2c01:6c27) (Read error: Connection reset by peer)
[15:24:52] <pyzozord> I really find that the removing stuff can be a better design tool than adding stuff. Especially nowadays that the society has kept on adding so much
[15:25:24] <pyzozord> Remove heap. Remove includes. Remove colors. etc
[15:25:45] *** Joins: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net)
[15:25:46] *** Quits: Tom (~Tom@2a01:e0a:2de:8130:757a:5a07:312a:b9f7) (Ping timeout: 250 seconds)
[15:25:55] <GeDaMo> You should look more into Forth! :P
[15:26:14] <pyzozord> Yes that's on my short list now. I already dipped in a bit
[15:26:23] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:f557:7d:4fc8:416d) (Read error: Connection reset by peer)
[15:26:24] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[15:26:40] <user51> pyzozord: so basically, he is a practitioner of the art of cat(1)
[15:26:52] *** Quits: trevors (~trevors@c-65-96-171-157.hsd1.ma.comcast.net) (Client Quit)
[15:28:37] <pyzozord> well there is no "short list", but I just got more interested in it
[15:29:37] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 245 seconds)
[15:31:36] <user51> hm. i just realized my shell has no eliza command..
[15:32:47] <mrig> What does an eliza command do?
[15:33:06] <user51> https://en.wikipedia.org/wiki/ELIZA
[15:33:06] <bayaz> Title: ELIZA - Wikipedia 
[15:33:18] <user51> if you have emacs you can do C-x doctor
[15:33:43] *** Joins: xa0s (~xa0s@mab.sdf.org)
[15:33:44] <user51> might even help with rsi
[15:34:05] <mrig> oh cool, looks fun.
[15:34:23] <user51> as always, it doesn't handle empty input so well :D
[15:35:36] *** Joins: zaher_ (~zaher@37.48.153.94)
[15:36:07] <user51> does anyone have some good examples of the unix philosophy? or maybe i should just settle for esr's book
[15:36:20] <mrig> seems that it is a library rather than a program in the debian distro.
[15:36:46] *** Joins: Twipply (~Twipply@user/twipply)
[15:36:50] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[15:37:11] *** Quits: independent_ (~independe@95.144.68.39) (Read error: Connection reset by peer)
[15:38:00] *** Quits: zaher (~zaher@37.48.180.249) (Ping timeout: 265 seconds)
[15:39:25] *** Joins: independent56 (~independe@95.144.68.39)
[15:40:37] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[15:40:54] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Ping timeout: 265 seconds)
[15:49:29] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[15:50:41] *** Joins: Thedarkb (~Thedarkb@2001:bb6:b403:e042:b812:bb3f:25c8:9173)
[15:54:01] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:54:32] *** Quits: xiongxin8802 (~xiongxin@113.116.224.71) (Quit: Konversation terminated!)
[15:54:53] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[15:55:00] *** Joins: xiongxin8802 (~xiongxin@113.116.224.71)
[15:56:10] <pyzozord> mrig: why asking about rogelikes? Are you planning to write one? :)
[15:56:54] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[15:57:09] <pyzozord> I think my next project will be actually a mud server, to dabble a bit in networking and also a bit more in dynamic linking and trying to implement some kind of basic recovery from segvs etc
[15:57:36] <pyzozord> oh and a bit more in multithreading
[15:58:09] <pyzozord> I have to say that C is immensly fun to write
[15:58:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 265 seconds)
[15:59:21] *** Quits: inky_ (~inky@46.36.114.205) (Remote host closed the connection)
[16:00:32] *** Joins: gggp (~textual@60.10.23.169)
[16:00:45] <xeno> I wonder how many people who talk about rogue likes and rogue lite's have actually played rogue. I have not at least :)
[16:00:46] <TheArchitect> I wonder how many people who talk about rogue likes and rogue lite's have actually played rogue. I have not at least :)
[16:01:09] <xeno> uhm, is TheArchitect an echo bot? 
[16:01:10] <TheArchitect> uhm, is TheArchitect an echo bot?
[16:02:21] <pyzozord> xeno: I haven't play rogue. Does nethack count? I feel like nethack is pretty much rogue on steroids
[16:02:22] <TheArchitect> xeno: I haven't play rogue. Does nethack count? I feel like nethack is pretty much rogue on steroids
[16:02:37] <pyzozord> !q TheArchitect
[16:02:38] <TheArchitect> !q TheArchitect
[16:02:53] *** Joins: zaher (~zaher@37.48.152.117)
[16:03:14] <xeno> pyzozord: I dunno, I haven't played nethack either, so I dunno how similar it is to rogue :)
[16:03:15] <TheArchitect> pyzozord: I dunno, I haven't played nethack either, so I dunno how similar it is to rogue :)
[16:03:16] *** Parts: pyzozord (pyzozord@user/pyzozord) ()
[16:03:44] *** Joins: pyzozord_ (~pyzozord@user/pyzozord)
[16:04:25] *** bayaz sets mode: +q $a:h4x0r
[16:04:45] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[16:04:50] *** Quits: zaher_ (~zaher@37.48.153.94) (Ping timeout: 260 seconds)
[16:05:23] *** Joins: MarcoFe (~marcofe@93-36-161-108.ip60.fastwebnet.it)
[16:05:28] <mrig> pyzozord_: still figuring out what my next program will be, not sure as yet.
[16:06:06] *** Quits: pyzozord_ (~pyzozord@user/pyzozord) (Client Quit)
[16:06:08] *** Quits: gggp (~textual@60.10.23.169) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:06:15] *** Joins: pyzozord (pyzozord@user/pyzozord)
[16:06:19] <mrig> I do have to get back to some web stuff at some point, may take a look at that again for a while.
[16:06:40] *** Parts: TheArchitect (~GodMode@user/h4x0r) ()
[16:06:40] *** Joins: TheArchitect (~GodMode@user/h4x0r)
[16:10:26] *** Quits: inky (~inky_@46.36.114.205) (Ping timeout: 260 seconds)
[16:10:27] <pyzozord> xeno: looks like it was an echo bot
[16:10:59] <Thedarkb> I play rogue when bored, it's not weighed down by the needless complexity of NetHack or Angband.
[16:12:41] *** Joins: gitgood (~gitgood@85.210.186.158)
[16:13:48] *** jazzy2 is now known as jazzy
[16:15:07] *** Quits: juliaEnv (~juliaEnv@ip-86-49-255-202.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[16:16:34] *** Joins: pyzozord_ (~pyzozord@user/pyzozord)
[16:16:55] *** bayaz sets mode: -q $a:h4x0r
[16:17:13] *** Quits: pyzozord_ (~pyzozord@user/pyzozord) (Client Quit)
[16:18:45] *** Quits: Mathisen (mathisen@about/windows/staff/mathisen) (Ping timeout: 250 seconds)
[16:18:48] <xeno> closest thing I gotten to Rogue I guess is Hollow Night, Ori and the Blind Forest/Will of the Wisps and Dark Souls/Bloodborne :)
[16:19:21] <pyzozord> Oh yeah Hollow Night is super cool. Need to play that a bit more.
[16:19:21] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[16:20:03] *** Joins: Mathisen (mathisen@about/windows/staff/mathisen)
[16:21:27] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[16:22:55] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[16:25:29] *** Joins: src (~src@user/src)
[16:26:18] *** Quits: anovick_ (~anovick@2a0d:6fc0:1831:1500:98e9:2c6f:1a52:52c0) (Read error: Connection reset by peer)
[16:27:50] *** Joins: anovick_ (~anovick@2a0d:6fc0:1831:1500:98e9:2c6f:1a52:52c0)
[16:31:08] <beaky> nice i like factorio
[16:31:45] *** Joins: inky (~inky_@46.36.114.205)
[16:31:49] <beaky> though i am playing noita rite now it is a game where every pixel is simulated https://nollagames.itch.io/noita
[16:31:51] <bayaz> Title: Noita by Nolla Games 
[16:32:42] <beaky> i think if you simulate every pixel it is O(n^2)
[16:32:56] <beaky> but they use multithreading to simulate groups of pixels
[16:33:13] <arahael> I notice they have poor resolution, which would help. :)
[16:34:30] <beaky> yes the pixels are chunky squares even on a full hd display 
[16:35:57] <beaky> and on top of that they simulate only the pixels that need to update like if there is falling sand it just simulates the falling bits
[16:37:04] <arahael> I'll bet it's CPU bound.
[16:38:52] <beaky> yes very cpu bound especially with crazy wands that explode and send all the pixels flying
[16:39:07] *** Joins: dunkeln (~dunkeln@94.128.205.199)
[16:39:07] *** Quits: dunkeln (~dunkeln@94.128.205.199) (Changing host)
[16:39:07] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[16:43:58] <pyzozord> beaky: not O(n²), every pixel only affects pixels around it
[16:44:44] <pyzozord> (I think)
[16:45:54] <pyzozord> Eh, I just noticed my terminal emulator cpu usage is more like 4%-5% than 2%-3% on most gifs, especially when full screen
[16:48:32] *** Joins: snake (~snake@user/snake)
[16:49:25] *** Quits: inky (~inky_@46.36.114.205) (Ping timeout: 260 seconds)
[16:50:46] <smallville7123> god damn i knew it o.o IT DRAWS IT BACKWARDS
[16:51:25] <smallville7123> eg if top left is greater than bottom right then the texture is drawn flipped o.o
[16:52:14] <pyzozord> that could be a feature :P
[16:52:21] <smallville7123> lmao
[16:52:25] <smallville7123> XD
[16:52:35] <smallville7123> its not a bug, its a feature
[16:52:36] <smallville7123> :)
[16:55:55] <smallville7123> "frequent crashes are not a bug, their a feature" XD
[16:56:51] *** Joins: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c)
[16:57:08] <mrig> some kind of active pomodoro
[16:57:10] <mrig> :D
[16:57:24] *** Joins: DuckSeason (~DuckFace@user/h4x0r)
[16:57:46] <mrig> Just print "You need to get out more" every time it crashes.
[16:57:56] *** Joins: Brumaire (~quassel@81-64-14-121.rev.numericable.fr)
[16:57:57] <smallville7123> lmao
[16:59:03] *** Quits: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c) (Client Quit)
[16:59:26] *** Joins: DuckFace (~DuckFace@user/h4x0r)
[17:00:40] *** Quits: DuckFace (~DuckFace@user/h4x0r) (Client Quit)
[17:02:02] *** Joins: DuckFace (~DuckFace@user/h4x0r)
[17:02:10] <pyzozord> frequent crashes were a feature of first unixes :P
[17:02:30] *** Quits: DuckSeason (~DuckFace@user/h4x0r) (Remote host closed the connection)
[17:02:52] <pyzozord> the system booted so fast, that they were just crashing and restarting the computer rather than recovering, because it was so fast
[17:02:58] <pyzozord> *they
[17:04:04] *** Joins: inky (~inky_@5.77.141.67)
[17:04:29] <beaky> what is the best way to compress random identifiers https://lemire.me/blog/2021/09/11/random-identifiers-are-poorly-compressible/
[17:04:30] <bayaz> Title: Random identifiers are poorly compressible 
[17:05:53] *** Quits: xiongxin8802 (~xiongxin@113.116.224.71) (Quit: Konversation terminated!)
[17:06:20] *** Joins: xiongxin8802 (~xiongxin@113.116.34.37)
[17:08:10] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 252 seconds)
[17:10:27] *** Joins: aradesh (~aradesh@user/aradesh)
[17:12:10] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[17:14:35] *** Joins: Pickchea (~private@user/pickchea)
[17:15:44] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[17:16:08] *** Joins: independent56 (~independe@95.144.68.39)
[17:16:20] * mrig has a little panic about data integrity when connected to the internet.
[17:17:17] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:17:24] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[17:18:07] *** Joins: paravida (~myChateau@71.215.86.34)
[17:19:59] *** Quits: inky (~inky_@5.77.141.67) (Ping timeout: 265 seconds)
[17:24:03] *** Joins: alguien (~alguien@user/alguien)
[17:25:04] <beaky> is there something like cgroups on linux but for freebsd so that i can limit the resident set size of my processes (so i can be sure my solution to the sorting 1 million 32-bit unsigned integers in under 2 MiB of total ram actually does use less than 2 MiB)
[17:26:20] *** Joins: mishugana (~mishugana@user/mishugana)
[17:27:31] *** Quits: Guest9818 (~Guest98@132.24.115.87.dyn.plus.net) (Quit: Client closed)
[17:31:28] <Donitz> what is the term for phase shift over time?
[17:31:42] <Donitz> phase velocity?
[17:32:13] <Donitz> such a sine wave shifting forward with degrees per second
[17:33:21] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:33:58] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Ping timeout: 260 seconds)
[17:34:23] <mrig> drift I think
[17:34:40] <mrig> probably depends on context though.
[17:34:49] <Donitz> I suspect drift implies a negative effect
[17:34:53] <Donitz> such as clock drift
[17:35:27] <Donitz> in this case I'm naming a variable for how quickly a wave moves over time
[17:35:28] <mrig> yes would imagine so, not really negative though, on if your think that things ought to be linear :)
[17:36:08] <mrig> Donitz: is the wavelength increasing then?
[17:36:20] <Donitz> no
[17:36:26] <Donitz> only phase
[17:36:45] <pyzozord> beaky: I think limits, jails and maybe some other things
[17:36:45] <Donitz> phase offset is a good term for the current offset
[17:36:47] <Donitz> but not for velocity
[17:36:59] <beaky> nice i like jails
[17:37:43] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 252 seconds)
[17:37:53] <mrig> Donitz: phase modulation?
[17:38:00] <Donitz> that's a different thing
[17:38:07] <Donitz> that's usually when you use two signals together afaik
[17:38:09] <Donitz> one modulating the other
[17:39:38] <mrig> phase offset would be pretty explicit. 
[17:39:57] <Donitz> yes, but offset is static
[17:40:01] <beaky> what is the best way to prove my approach to compression correct
[17:40:05] <Donitz> I guess velocity is still the best in that case
[17:40:10] <mrig> variation?
[17:40:24] <Donitz> mm, kinda sounds like variance
[17:40:29] <beaky> i can prove it does compress correctly but how do i prove that it is guaranteed to be under 2 megabytes for all possible inputs
[17:40:31] <mrig> offset_variation
[17:40:33] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[17:45:28] *** Quits: Brumaire (~quassel@81-64-14-121.rev.numericable.fr) (Ping timeout: 252 seconds)
[17:46:54] *** Joins: Brumaire (~quassel@fr-poney6.204vpn.net)
[17:49:50] *** Quits: independent56 (~independe@95.144.68.39) (Ping timeout: 260 seconds)
[17:50:07] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[17:52:39] *** Joins: juliaEnv (~juliaEnv@ip-86-49-255-202.net.upcbroadband.cz)
[17:53:09] *** Joins: independent56 (~independe@95.144.68.39)
[17:53:37] *** Joins: eldritchcookie (~eldritchc@2804:7f4:8180:5fd7:ce88:3030:4531:d4ca)
[17:53:59] *** Joins: gareppa (~gareppa@user/gareppa)
[17:54:39] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[17:54:50] *** Joins: Atque (~Atque@user/atque)
[17:58:16] <beaky> i have also figured out the secret to improving programming productivity it is a good night's rest
[17:58:36] <beaky> ever since i have improved my sleep i have made better progress 
[17:59:08] <Donitz> (1 - (i % 2) * 2)
[17:59:12] <Donitz> can you simplify this?
[17:59:24] <Donitz> returns -1 1 -1 1
[18:00:14] *** Joins: frm (~frm@user/frm)
[18:00:55] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[18:01:30] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 260 seconds)
[18:01:50] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[18:02:09] *** Joins: independent56 (~independe@95.144.68.39)
[18:02:13] *** Joins: Crescendo (~Crescendo@user/crescendo)
[18:03:45] *** Joins: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651)
[18:03:53] *** Joins: sedeki (~textual@user/sedeki)
[18:04:22] *** Quits: DuckFace (~DuckFace@user/h4x0r) (Quit: Reconnecting)
[18:04:32] *** Joins: DuckFace (~DuckFace@user/h4x0r)
[18:04:44] *** Joins: gggp (~textual@123.113.181.187)
[18:05:11] *** Quits: DuckFace (~DuckFace@user/h4x0r) (Client Quit)
[18:05:21] *** Joins: DuckFace (~DuckFace@user/h4x0r)
[18:05:56] *** Quits: DuckFace (~DuckFace@user/h4x0r) (Client Quit)
[18:05:57] *** Quits: mishugana (~mishugana@user/mishugana) (Quit: leaving)
[18:06:06] *** Joins: DuckFace (~DuckFace@user/h4x0r)
[18:06:40] <mercenary> I would write it as ((i&1)<<1)-1, but that is still 3 operations
[18:06:57] *** Quits: frm (~frm@user/frm) (Quit: Textual IRC Client: www.textualapp.com)
[18:07:08] <Donitz> well that's not really simpler
[18:07:56] <mercenary> cheaper maybe, simpler no
[18:09:19] *** Quits: paravida (~myChateau@71.215.86.34) (Remote host closed the connection)
[18:09:24] *** Joins: Macuser (~Macuser@216.30.159.201)
[18:09:43] *** Joins: paravida (~myChateau@71.215.86.34)
[18:13:43] <pyzozord> I think I find the bitwise version simpler actually :P 
[18:14:11] <pyzozord> aka easier to think through
[18:15:18] *** Quits: Kre10s (~maximilia@ip5f5accb0.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[18:15:35] *** Quits: gggp (~textual@123.113.181.187) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:16:19] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[18:16:23] <beaky> yes if i is unsigned i think intel c compiler optimises the bitwise version to an and followed by an lea so only 2 instructions
[18:17:00] <GeDaMo> {1, -1}[i&1]
[18:17:08] <pyzozord> ah thanks
[18:17:23] <pyzozord> was about to ask what does load effective address do in arthemtical operations
[18:17:43] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:17:44] <GeDaMo> lea does an address calculation
[18:18:20] <pyzozord> but that also implies somewhere 1 and -1 in memory being preloaded
[18:18:28] *** Joins: pulse (~pulse@user/pulse)
[18:18:33] <GeDaMo> [displacement + baseReg + indexReg * scale] where scale is 1,2,4 or 8
[18:18:34] <pyzozord> meaning in data section not in code section
[18:20:38] *** Quits: Brumaire (~quassel@fr-poney6.204vpn.net) (Ping timeout: 260 seconds)
[18:20:45] <GeDaMo> The thing I showed was an idea for simplification, not what lea does
[18:21:06] <pyzozord> oh
[18:21:16] <GeDaMo> That is lea does [displacement + baseReg + indexReg * scale] where scale is 1,2,4 or 8
[18:21:18] *** Joins: Brumaire (~quassel@81-64-14-121.rev.numericable.fr)
[18:21:22] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[18:21:34] <GeDaMo> {1, -1}[i&1] was the alternate method
[18:21:56] <pyzozord> oh i see now, thanks
[18:22:09] <GeDaMo> Sorry, that was confusing :P
[18:22:41] <pyzozord> no no, I just assumed too much. I assumed that lea is used in the index lookup of the array
[18:22:46] *** Quits: xiongxin8802 (~xiongxin@113.116.34.37) (Quit: Konversation terminated!)
[18:23:00] <GeDaMo> It can be
[18:23:09] *** Joins: xiongxin8802 (~xiongxin@113.116.34.37)
[18:23:32] <beaky> i find intel c compiler even optimizes the naive 'i % 2 == 0 ? -1 : 1' version into an and followed by an lea
[18:24:07] *** Quits: frost (~frost@59.71.242.61) (Quit: Connection closed)
[18:25:03] <pyzozord> I assume they "abuse" lea because it has teeny-tiny hardware arthmetical pipeline so it's faster
[18:25:15] <pyzozord> in the beaky's idea
[18:25:42] <pyzozord> they use it to compute an address but they don't use the result as an address, the use the result as a number
[18:26:16] <beaky> yes abusing lea is the oldest trick in the compiler optimization book
[18:27:46] <independent56> I wish i could get back into programming, but i don
[18:27:56] <independent56> 't even know what langauge to code in
[18:28:18] <beaky> looking at the risc-v version they do something else: ((x & 1) - 1) | 1
[18:28:48] <pyzozord> independent56: depends on what do you want to get out of programming
[18:29:22] <independent56> I don't really know. I just want to do it as a hobby and maybe make some professional FOSS software
[18:29:31] *** Joins: chenxuezhao (~chenxuezh@120.244.238.36)
[18:29:38] <independent56> But learning a langauge is a huge ivnestment, andi learnt the basics of so many
[18:29:39] <beaky> i highly recommend the rust programming language it is a breath of fresh air in terms of language design oriented towards zero-overhead memory safety as rust features zero-cost abstractions, move semantics, guaranteed memory safety without garbage collection, threads without data races, trait-based generics, pattern matching, type inference, minimal runtime, and efficient c bindings
[18:30:00] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[18:30:33] <sedeki> beaky that's some list of features
[18:30:40] <independent56> I have, but it's got so much to learn, and does so much differently from any other langauegs. And therearen't even any good GUI libraries.
[18:30:56] <nitrix> Can it do tea databases?
[18:31:12] <beaky> yes gui support in rust is still a work in progress https://www.areweguiyet.com/
[18:31:13] <bayaz> Title: Are we GUI yet? 
[18:31:39] <sedeki> i like a Rust a lot, but i wouldn't recommend it to beginners
[18:31:53] <sedeki> independent56 looking into Python can't fail
[18:32:30] <sedeki> (i'm not a programming expert)
[18:32:33] <independent56> I did it as my first language, i enjoyed it.
[18:32:43] <beaky> if you need gui then maybe check out python indeed it has builtin gui support with tkinter
[18:32:56] <sedeki> python has official qt support too
[18:33:05] <independent56> but i would like freedom in how much lines i want my code to have. Python does not allow me.
[18:33:24] <sedeki> independent56 why don't you try poetry if you care about such things?
[18:33:25] <independent56> Because sometimes i need to obsuficate and putting everything in one unindented block is a great idea
[18:33:31] <beaky> what is poetry
[18:33:51] <sedeki> writing prose that rhymes every second line
[18:33:53] <beaky> if you need gui obfuscation then maybe check out javascript with electron
[18:34:02] <beaky> o prose i thought poetry was some python extension thing lol
[18:34:10] <sedeki> lol
[18:35:17] <beaky> rust can do tea databases just yesterday someone wrote a database client in rust 
[18:35:23] <beaky> my tea database project is now obsolete 
[18:35:33] <jinsun> independent56: it is really easy to de-obfuscate that kind of obfuscation though
[18:35:34] <beaky> https://github.com/TaKO8Ki/gobang
[18:35:36] <bayaz> Title: GitHub - TaKO8Ki/gobang: A cross-platform TUI database management tool written in Rust 
[18:35:56] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[18:36:55] <independent56> I know, just failed atcomingup for whenyou need free indenetation
[18:37:45] <independent56> https://www.youtube.com/watch?v=DEqXNfs_HhY
[18:37:49] <independent56> Case in point
[18:37:50] <beaky> plus if you really need obfuscation and want to use python just use lambdas with everything in a line
[18:37:50] <bayaz> Title: Donut-shaped C code that generates a 3D spinning donut 
[18:39:00] *** Quits: DuckFace (~DuckFace@user/h4x0r) (Quit: Reconnecting)
[18:39:02] *** Joins: dunkeln (~dunkeln@94.128.205.199)
[18:39:02] *** Quits: dunkeln (~dunkeln@94.128.205.199) (Changing host)
[18:39:02] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[18:39:09] *** Joins: DuckFace (~DuckFace@user/h4x0r)
[18:39:17] <independent56> I used c++ and it worked, until i realised how ugly, and terrible the alngauge is
[18:39:26] <jinsun> oh ok you want to take part in  https://www.ioccc.org/
[18:39:27] <bayaz> Title: The International Obfuscated C Code Contest 
[18:39:52] <|smlckz|> very interesting https://www.theatlantic.com/technology/archive/2021/08/dead-internet-theory-wrong-but-feels-true/619937/
[18:39:52] <bayaz> Title: Maybe You Missed It, but the Internet ‘Died’ Five Years Ago 
[18:40:04] <beaky> why did the internet died
[18:40:59] <jinsun> because everyone on the internet is a bot except you
[18:41:29] <leduyquang753> I love C++ because it offers something called utter flexibility.
[18:41:54] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[18:42:28] <leduyquang753> Rust: Wanna make a project? USE CARGO. Wanna make a small program? USE CARGO. Wanna just experiment around? USE CARGO.
[18:42:32] <independent56> c is too low level, c++ is becoming archaic, fortran is dead,
[18:42:36] <[itchyjunk]> you spelled udder wrong
[18:42:50] <leduyquang753> I mean "utter".
[18:42:53] <Brumaire> how many people are GPT-3 chatbots here ?
[18:42:56] <[itchyjunk]> udder*
[18:42:58] <leduyquang753> It's a word.
[18:43:01] * edk raises hand
[18:43:10] <beaky> yes just use rust bro
[18:43:14] * independent56 lowers hand to eart's mantle
[18:43:26] <[itchyjunk]> i'm GPT-neo chatbot
[18:43:39] <leduyquang753> [itchyjunk] https://en.wiktionary.org/wiki/utter
[18:43:40] <bayaz> Title: utter - Wiktionary 
[18:43:50] <independent56> https://gitlab.com/56independent/allcode/-/tree/master/languages/rust
[18:43:50] <bayaz> Title: languages/rust · master · Vitra Suchovich / almostAllCode 
[18:43:52] <independent56> I have
[18:44:00] <dunkeln> independent56: rust is ?
[18:44:05] <[itchyjunk]> udder*
[18:44:49] <independent56> And can you really trust mozzila with rust? https://gitlab.com/56independent/allcode/-/blob/master/languages/rust/memorial.md
[18:44:50] <bayaz> Title: languages/rust/memorial.md · master · Vitra Suchovich / almostAllCode 
[18:44:53] *** Joins: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[18:46:48] <dunkeln> independent56: well the language is still young right
[18:46:53] <leduyquang753> Yes.
[18:47:07] <independent56> It is, and i love it. It's just tedious to learn
[18:47:15] <dunkeln> most languages we are comparing with, they are over 2 decades old
[18:47:30] <dunkeln> ohh yeah, agree 100%
[18:47:49] <leduyquang753> I like its idea but I'm not going to make some actual use of it until there are more choices to do things. Specifically, I am waiting for its front end in GCC.
[18:47:53] <independent56> It's like learning hebrew after becoming fluent in romance languages. It's just alien
[18:47:57] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Remote host closed the connection)
[18:48:19] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[18:48:33] <leduyquang753> The current compiler is way too opinionated to me.
[18:48:53] <dunkeln> yeah, I am facing a hard time with it, wrapping my head around it. Currently banging my head on the desk over rw_locks
[18:48:55] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 265 seconds)
[18:49:10] <leduyquang753> An annoying example: it calls camelCase "bad style".
[18:49:14] <independent56> Which is why i ran to golang... whichc didn't work out at all. I kept on msisinglibraries i needed.
[18:49:22] *** Quits: smallvil_ (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Read error: Connection reset by peer)
[18:49:38] <[itchyjunk]> write em
[18:49:56] <independent56> 100%. I cannot belive they are that opinionated. Underlined_case is horrible! its an extra character you need an extra work.
[18:49:58] <independent56> *word
[18:50:24] <|smlckz|> i will only try rust if you have a compiler like tinycc for c
[18:50:54] <dunkeln> what about zig
[18:51:01] <dunkeln> ive heard a lot of praises
[18:51:16] <dunkeln> anyone tried it?
[18:52:00] <|smlckz|> i am patiently waiting for zig to become self hosted, to get rid of  llvm as a dependency
[18:52:21] <beaky> does zig have zero-cost abstractions, move semantics, guaranteed memory safety without garbage collection, threads without data races, trait-based generics,  pattern matching, type inference, minimal runtime, and efficient c bindings
[18:52:38] <beaky> yes i think soon they will complete their self hosting c ompiler
[18:52:42] <dunkeln> honestly, just my opinion, zig developers should have taken a better name. sounds more like a library than a language
[18:52:43] <beaky> zig compiler*
[18:52:57] <beaky> i like the name zig it's more exciting than 'go'
[18:53:26] <independent56> It seems too obscure for libraries and job oppurtuniets
[18:53:33] <leduyquang753> LUL came across this comment: So in Servo we use the Spidermonkey API (which has some all caps stuff), among other things. Compiling the crate gave us extremely helpful warnings that we should name our functions like j_s_c_l_a_s_s_h_a_s_r_e_s_e_r_v_e_d_s_l_o_t_s
[18:53:44] * leduyquang753 claps.
[18:53:46] <dunkeln> go sounds like something google would choose for a name :)
[18:53:56] <beaky> nice naming scheme
[18:54:44] <independent56> y_e_s_v_e_r_y_n_i_c_e_b_u_t_g_e_t_s_A_n_n_oying.
[18:56:00] <leduyquang753> A_n_d_t_h_a_t_s_w_h_y_I_h_a_t_e_r_u_s_t_c_a_t_i_s_c_u_r_r_e_n_t_s_t_a_t_e
[18:56:40] <independent56> Eh, idrc for consistency. I care for difficulty
[18:56:53] <independent56> I mean consistency as in compiler reccomendations
[18:57:15] <leduyquang753> J_u_s_t_f_u_c_k_i_n_g_l_e_a_v_e_m_e_a_l_o_n_e_l_i_k_e_h_o_w_C_P_P_c_o_m_p_i_l_e_r_s_j_u_s_t_d_o_n_t_g_i_v_e_a_s_h_i_t
[18:59:03] *** Joins: quartz (~quartz@user/quartz)
[19:00:06] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:00:37] <beaky> hello what is binary packing encoding and how does it differ from other approaches to compression
[19:00:44] *** Quits: fweht (uid404746@id-404746.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[19:01:31] <dunkeln> there was a good article saying how rustc is the manifestation of communism in compiler technologies
[19:01:34] <dunkeln> cant find it
[19:01:39] <dunkeln> was hilarious
[19:01:58] <independent56> I spend far too much time writing about what the program does inside it's docs rather then making those features
[19:03:07] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:03:40] *** Quits: paravida (~myChateau@71.215.86.34) (Ping timeout: 252 seconds)
[19:05:20] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[19:05:39] *** Joins: independent56 (~independe@95.144.68.39)
[19:07:20] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[19:07:39] *** Joins: independent56 (~independe@95.144.68.39)
[19:07:42] <mrig> dunkeln: go is a great name, pretty nifty command too.
[19:07:45] <mrig> :P
[19:08:42] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[19:08:44] <mawk> a
[19:09:20] <Stefan26> welcome mawk
[19:09:30] <mawk> lol
[19:09:31] <mawk> thanks
[19:09:35] <mrig> It's surprising how much effect not understanding escape characters has on your psyche when first coding in C, makes a massive difference when you do understand their quirks :D
[19:09:37] <beaky> alright i have figured out what google themselves use insteade of my approach to sort 4 megabytes of integers in under 2 megabytes they use PrefixVarint
[19:10:08] <beaky> the advantage is they dont have weird variable bit lengths so its more cpu friendly i guess
[19:10:30] <mrig> prefix trie?
[19:10:49] *** Quits: xff0x (~xff0x@2001:1a81:5374:7800:b91b:1969:510:c2ea) (Ping timeout: 252 seconds)
[19:10:55] <dunkeln> mrig: best name for a language, brainfuck. hands down, the best.
[19:11:18] <mrig> dunkeln: seems a little uncouth, don't you think? :p
[19:11:18] <beaky> it is not a trie it uses like a 128-bit variable encoding 
[19:11:36] <beaky> or maybe it is a trie becuase it caan be interpreted as a base128 number
[19:11:42] <beaky> and all numbers are tries
[19:11:56] <beaky> (or trie paths)
[19:12:08] <mrig> yes they are, cool really that.
[19:12:44] <dunkeln> mrig: https://media.giphy.com/media/hUm3VvUwQ9PrO/giphy.gif?cid=ecf05e47gw3l99nv9dvcjl63bf2w0nv4usl67kt4nd0tcokv&rid=giphy.gif&ct=g
[19:12:45] <bayaz> Type: image/gif Size: 1.6 MB 
[19:13:19] <beaky> the google approach seems much simpler than delta coding why didnt i think of it before
[19:14:08] *** Joins: jamea (~jamea@177.239.87.39)
[19:14:12] *** Quits: freakazoid12345 (~matt@2603-9000-cf0f-80e3-0d98-43e6-93b2-0ad9.inf6.spectrum.com) (Ping timeout: 245 seconds)
[19:15:39] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[19:15:42] <beaky> google comes up with the most brilliant memory-efficient and performant designs and in interviews grills every candidate about the most sophisticated efficient approaches to problems but then you use real google software like chrome and google chat and google cloud and kubernetes and its a resource hog 
[19:15:59] *** Quits: chenxuezhao (~chenxuezh@120.244.238.36) (Ping timeout: 265 seconds)
[19:16:12] *** Joins: p0g0 (~p0g0@216.211.152.181)
[19:16:26] <independent56> I have realised what i want to code in:  A sweet (non-verbose, ulike java), modern language, with plnety of libraries (including a great GUI one), and isn't obscure. 
[19:16:42] <independent56> I would also like it to look a bit like c, with braces and semicolons
[19:16:51] <dunkeln> javascript?
[19:17:07] <dunkeln> sounds like it
[19:17:26] *** Joins: absc (~absc@dynamic-adsl-94-34-168-109.clienti.tiscali.it)
[19:17:28] <independent56> Nice, but is it purely web-based, or can i use it to program programs like browsers or VScode or Hexchat?
[19:18:06] <dunkeln> u can, depends on the runtime for the task.
[19:18:16] <independent56> Hmm, i'll look into it
[19:18:17] *** Joins: chenxuezhao (~chenxuezh@120.244.238.36)
[19:18:25] *** Quits: p0g0__ (~p0g0@23.252.176.222) (Ping timeout: 252 seconds)
[19:18:32] <independent56> And i may be able to use a lot more of Fireship's videos!
[19:18:43] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[19:18:46] <dunkeln> someone made a terminal emulator in js...i was checking it out yesterday...so u can create a browser i guess
[19:19:04] <independent56> I mean a Vivaldi-type browser, not w3m XD
[19:20:07] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:212b:81a8:60e0:4eb8)
[19:20:09] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[19:20:28] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[19:20:54] <dunkeln> damn didnt knwo of vivaldi...very feature rich
[19:21:01] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:212b:81a8:60e0:4eb8) (Read error: Connection reset by peer)
[19:21:24] *** Quits: Brumaire (~quassel@81-64-14-121.rev.numericable.fr) (Remote host closed the connection)
[19:21:40] <independent56> I love it. I usedchrome until istopped, triedfirefox, and ended up using vivaldi. I love it
[19:22:08] <independent56> And i am going to advocate for it. And hey, i think the frontend (which  sits on top of chromium) is in Javascript.
[19:22:17] <beaky> yes just use javascript bro 
[19:22:38] <dunkeln> i guess u can create a vivaldi like browser with js...take with a grain of salt tho
[19:22:57] <dunkeln> dunno how ull implement the networking part
[19:23:07] <independent56> Hmm, thanks
[19:23:17] <independent56> Found on wikipedia: Not to be confused with Java (programming language) or Javanese script.
[19:23:29] <dunkeln> dunno bout vivaldi a lot...ill try. currently, I'm just loving brave
[19:24:09] <independent56> Ah, another obscure browser
[19:24:59] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:212b:81a8:60e0:4eb8)
[19:26:01] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:212b:81a8:60e0:4eb8) (Remote host closed the connection)
[19:26:47] *** Joins: poprostumieciek (~matthew@user/poprostumieciek)
[19:26:55] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:212b:81a8:60e0:4eb8)
[19:27:06] <independent56> Brave looks like a browser with focus on privacy, and Vivaldi looks like a browser focused on functionaliy 
[19:28:01] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:212b:81a8:60e0:4eb8) (Remote host closed the connection)
[19:28:11] <dunkeln> which would be less resource demanding?
[19:29:02] *** Joins: LiftLeft (~LiftLeft@172.98.92.55)
[19:29:33] *** Joins: magla (~gelignite@55d48887.access.ecotel.net)
[19:30:32] <independent56> 0-0
[19:30:58] <independent56> eh, my computer is modern. It focuses on speed, not archaicism
[19:31:51] <beaky> and they get to encode/decode the arrays using screaming-fast simd https://arxiv.org/pdf/1209.2137.pdf
[19:31:52] <bayaz> Type: application/pdf Size: 1.1 MB 
[19:32:55] <independent56> The tab stack is now a feature i can't live without. tab accordians are ok, but nothing is better then vivaldi's tab management
[19:34:45] <dunkeln> ohh..vivaldi isnt opensource!!
[19:35:36] <independent56> It is, just not the UI. But that makes sense
[19:35:40] <[itchyjunk]> Is this RSIC-V stuff worth learning?
[19:35:53] <[itchyjunk]> i hear a lot of people talking about it these days
[19:35:57] <independent56> I need to be constantly reminded that Propietary software is not doomand gloom.
[19:36:07] <dunkeln> [itchyjunk]: yeaaah, its definitely worth learning
[19:36:33] <dunkeln> independent56: hmm ok, I've put it for installation
[19:36:35] <[itchyjunk]> i'll have to google it up a bit here and there then
[19:37:23] <independent56> great! i have encouranged an innocent passer by to joinmy cult! /j
[19:37:44] <beaky> yes risc-v is the future of instruction set architecture design i look forward to pcs that use it
[19:37:47] *** Joins: Izem (~Izem@8.6.144.177)
[19:38:22] <beaky> otoh arm sve is the future of simd 
[19:38:39] <dunkeln> independent56: :-Þ
[19:39:18] <independent56> The only phrase i understood was "is the future of". 
[19:40:02] <[itchyjunk]> what is simd?
[19:40:14] *** Quits: pizdets (~pizdets@183.182.111.150) (Quit: pizdets)
[19:40:36] <independent56> Google's your friend
[19:40:45] <[itchyjunk]> not mine!
[19:40:58] *** Joins: pizdets (~pizdets@183.182.111.150)
[19:41:00] <Izem> single instruction multiple data
[19:41:04] *** Quits: src (~src@user/src) (Ping timeout: 252 seconds)
[19:41:13] <[itchyjunk]> oh like gpu doing same shit to different picture
[19:41:19] <[itchyjunk]> yes i remember discussing it
[19:41:33] *** Joins: qaph (~weechat@user/qaph)
[19:41:38] <Izem> If we googled everything there would be no discussion
[19:41:48] <[itchyjunk]> i wish i rememberd the notation but haskell fold thing was an example
[19:41:49] <dunkeln> [itchyjunk]: duckduckgo is your friend
[19:42:00] <[itchyjunk]> i've been killing ducks in a different  channel
[19:42:11] <dunkeln> ohh wait a min
[19:42:16] <[itchyjunk]> i wonder why people don't call it just duck 
[19:42:19] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[19:42:23] <beaky> simd is single instruction multiple data it is a style of instruction set architecture design that capitalizes on parallelism by enabling single instructions to operate on lots of data at once for example a single instruction to add an array of integers together at once
[19:42:28] <[itchyjunk]> since google gave duck.com to ddg
[19:43:12] *** Joins: paravida (~myChateau@23.31.187.1)
[19:43:19] *** Joins: xff0x (~xff0x@2001:1a81:5374:7800:b91b:1969:510:c2ea)
[19:44:20] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[19:44:38] *** Joins: independent56 (~independe@95.144.68.39)
[19:44:55] *** Quits: kron (~weechat@user/qaph) (Ping timeout: 252 seconds)
[19:44:58] *** qaph is now known as kron
[19:46:18] *** leonardus is now known as leonardus_
[19:47:11] <independent56> dunkeln, clicking on any link on any website is your friend, do it crawler style!
[19:48:00] <dunkeln> independent56: ;-)
[19:48:50] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[19:49:10] *** Joins: independent56 (~independe@95.144.68.39)
[19:50:10] <beaky> the future of simd through risc-v https://medium.com/swlh/risc-v-vector-instructions-vs-arm-and-x86-simd-8c9b17963a31
[19:50:12] <bayaz> Title: RISC-V Vector Instructions vs ARM and x86 SIMD 
[19:52:15] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[19:52:15] *** Quits: isosterix (~isosterix@ip-95-222-34-30.hsi15.unitymediagroup.de) (Read error: Connection reset by peer)
[19:52:15] <Izem> mimd seems more important, unless we have compilers that less people use simd easily
[19:52:15] <Izem> s/less/let/
[19:53:27] *** Quits: poprostumieciek (~matthew@user/poprostumieciek) (Ping timeout: 276 seconds)
[19:56:02] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:212b:81a8:60e0:4eb8)
[19:56:55] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:212b:81a8:60e0:4eb8) (Read error: Connection reset by peer)
[19:57:57] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:212b:81a8:60e0:4eb8)
[19:58:36] *** Joins: kerberos (~jezavala@187-177-34-208.dynamic.axtel.net)
[19:58:55] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:212b:81a8:60e0:4eb8) (Read error: Connection reset by peer)
[19:59:35] *** Quits: anovick_ (~anovick@2a0d:6fc0:1831:1500:98e9:2c6f:1a52:52c0) (Ping timeout: 260 seconds)
[19:59:39] *** Joins: freakazoid333 (~matt@2603-9000-cf0f-80e3-212b-81a8-60e0-4eb8.inf6.spectrum.com)
[20:01:11] <quartz> Is it possible to convert a string to a hash table in Java, so that the keys are the individual characters of the string, and the values are the number of instances of that character within the string?
[20:01:25] *** Quits: freakazoid333 (~matt@2603-9000-cf0f-80e3-212b-81a8-60e0-4eb8.inf6.spectrum.com) (Remote host closed the connection)
[20:01:33] <mawk> it doesn't really have to be a hash table, there are only 256 characters
[20:01:39] <mawk> unless it's ugly unicode
[20:02:43] *** Joins: poprostumieciek (~matthew@user/poprostumieciek)
[20:02:44] <quartz> mawk: What do you mean?
[20:03:00] <mawk> you can have a array of size 256 that represents how many times each character is counted
[20:03:07] <mawk> and the array is indexed by the ASCII value of the character
[20:04:06] <quartz> mawk: But that's a very large array, why not just use a hash table?
[20:04:14] <mawk> 256 is very small
[20:04:20] *** Quits: xiongxin8802 (~xiongxin@113.116.34.37) (Quit: Konversation terminated!)
[20:04:24] <quartz> Seriously?
[20:04:34] <GeDaMo> 256 is tiny :P
[20:04:34] <mawk> a hash table isn't light either, it's some machinery under the hood
[20:04:39] <mawk> an array is easy and fast to access
[20:04:53] <mawk> yes seriously quartz 
[20:04:57] <mawk> 256 is nothing
[20:05:04] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[20:05:28] <mawk> but if your string is unicode/utf8 whatever, you can't do it like that, you first need to convert your array to real unicode, or utf-32 or whatever it's called, and then count like this
[20:05:48] <mawk> but I'm pretty sure there are 4830943 corner cases about glyphs that are the same but different value, or about accentuations and so on
[20:05:55] <mawk> just forget doing that and go do a nicer exercise
[20:06:39] <quartz> Isn't search time complexity for hash tables O(1)?
[20:06:50] <mawk> it's amortized O(1) I think
[20:06:51] <mawk> I'm not sure
[20:06:54] <mawk> but array is real O(1)
[20:06:56] <mawk> can't be faster than it
[20:07:08] <GeDaMo> O(1) doesn't always mean fast, it just means a constant but it could be a big constant
[20:09:44] *** Quits: chenxuezhao (~chenxuezh@120.244.238.36) (Quit: Leaving...)
[20:10:08] <bjs> quartz: if you assume "well behaved" hash functions and a uniform distribution over the keys then yes
[20:10:32] <bjs> worst-case scenario can be O(n)
[20:10:36] <quartz> I just really wanted to use hash tables in this exercise, but I Guess that is not the best idea here
[20:10:51] <mawk> well you can quartz , there are often several ways to do it
[20:11:29] <quartz> This is the exercise: https://i.ibb.co/YcmmMWp/image.png
[20:11:30] <bayaz> Type: image/png Size: 108.8 kB 
[20:11:35] <quartz> https://i.ibb.co/xgh5wK7/image.png
[20:11:36] <bayaz> Type: image/png Size: 68.9 kB 
[20:12:02] <quartz> I thought, well, why not use hash tables, because it should be an easy one liner to convert the strings into hash tables in java, right?
[20:13:03] <quartz> But I'm looking at the Java API for hash tables and it does not look like I can just pass in a string into a constructor and make a hashtable
[20:13:17] <independent56> How many people make desktop apps in javascript as opposed to web users? 1%?
[20:13:18] <TJ-> quartz: for fun I did the Java version of your exercise yesterday, after writing it in BASH. (without using iteration so it's O(1) ):  https://termbin.com/j1ps
[20:13:19] <bayaz> Type: text/plain; charset=utf-8 
[20:13:45] <beaky> nice i like bash
[20:13:54] <mawk> but also don't forget what I said about unicode quartz , what you will do works on ASCII data but the english-speaking countries are not 100% of the world
[20:14:00] <mawk> yes me too beaky 
[20:14:02] <pyzozord> independent56: why do you want to learn programming if you don't want to do anything with it
[20:14:13] <beaky> yes you need it to work for emoji
[20:14:27] <mawk> yes exactly
[20:14:28] <independent56> pyzozord, ?? 
[20:14:37] <quartz> TJ-: Thank you, I kinda gave up on that exercise after I blew up on myself the other day because I couldn't figure it out. I'll look at your solution.
[20:14:55] <Izem> independent56: gnome and kde do
[20:15:14] <pyzozord> independent56: "I don't really know. I just want to do it as a hobby and maybe make some professional FOSS software"
[20:15:17] <mawk> beaky: in how many ways can you do 1€ with euro coins? try to compute it
[20:15:25] <Izem> and the memory usage of those apps seems to e high
[20:15:30] <GeDaMo> independent56: https://en.wikipedia.org/wiki/Electron_(software_framework)
[20:15:30] <bayaz> Title: Electron (software framework) - Wikipedia 
[20:15:32] <mawk> euro coin is 1¢, 2¢, 5¢, 10¢, 20¢, 50¢, 1€
[20:15:39] <Izem> s/e/be/
[20:15:47] <TJ-> quartz: re HashTables; Properties is a sub-class that handles key = value as strings
[20:15:49] <Izem> wow 2 cents
[20:16:04] <mawk> we also have 1 cent coins Izem 
[20:16:05] <Izem> actually that should not be new to me
[20:16:12] <mawk> but many EU countries do not use them anymore, the 1 and 2
[20:16:16] <mawk> they round all prices to 0.05€
[20:16:18] <Izem> I see
[20:16:51] <quartz> TJ-: Yes, but how do I get the string into a hashtable, so the values are the number of instances of a specific char in the string?
[20:17:01] <Izem> is there anything like digital cash?
[20:17:02] <quartz> Or maybe I should just do the array method
[20:17:03] <independent56> Look, i have programmed mahy projects... noneof them ever got finished because it was too hard (сыр compiler), or i kept on switching languages so i gave up porting (сыр compiler)
[20:17:05] <beaky> i like euro i wish languages would use €x instead of $x for variables
[20:17:24] <quartz> mawk: Yes, But I think this exericse does not account for that.
[20:17:39] <TJ-> quartz: sorry; I missed your initial problem definition :)
[20:17:49] <pyzozord> independent56: huh? if you can write compilers you do already know how to program, you don't have to learn it :P
[20:18:17] <independent56> I don't write compilers. The original plan was to do find and replace. 
[20:18:59] <mawk> no beaky in euro the symbol goes after the price
[20:19:00] <mawk> 1€
[20:19:33] <beaky> var x€ 
[20:19:54] <beaky> because € is not enough for the compiler to figure it out i must also prefix it with var
[20:20:28] <pyzozord> independent56: that's confusing, you were working on a compiler project but it was just find/replace but you don't know programming so you want to learn it but have no idea what to do with programming
[20:20:28] <beaky> var const x€ because variables must be mutable by default 
[20:20:51] <beaky> nice i like compilers
[20:21:18] <independent56> I learnt python, and made a series of miniprojects. They went well, but i was lacking the ideasfor a big project, whenever i cam up with them, they were abandoned.
[20:21:53] <independent56> tl;dr i know a handful of programming languages and have quit many projects. 
[20:22:19] *** Quits: alguien (~alguien@user/alguien) (Ping timeout: 252 seconds)
[20:22:23] <Izem> same, without many projects xD
[20:22:27] <pyzozord> so why do you say "I want to learn programming but it is such a big investment of time"
[20:22:45] <beaky> if you can't come up with projects you can work on other people's projects instead
[20:23:04] <pyzozord> that's like saying "I want to learn how to drive a car. I've been driving multiple cars in the past"
[20:23:05] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[20:23:12] <beaky> like the global project ot rewrite the world in rust
[20:23:20] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[20:24:00] <Stefan26> mawk, if you have infinite amount of two types of coins of integer values x>1 and y>1, respectively, with gcd(x,y)=1 ... then what is the largest total amount you cannot pay (without getting any change)? e.g. with x=2 and y=5 the answer would be 3
[20:24:09] <independent56> I didn't mean that. I meant that i want to learn yet another language, one that is reccomeneded
[20:24:43] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[20:24:57] <beaky> nice just learn javascript then and write a todo app the hello world of javascript
[20:25:15] *** Quits: vysn (~vysn@user/vysn) (Quit: WeeChat 3.2)
[20:25:29] <beaky> yes i think to find the coins you need to use chinese remainder theorem 
[20:25:33] <pyzozord> independent56: I don't think I can help. I think you need to find out what you want first. I suggest keep asking yourself "why" several times. For example "I want to learn programming? Why? Because I want to contribute to FOSS? Why because I want to work on a bigger project? Why because I'd like to experience some teamwork." or similar. You may find that programming have nothing to do with it
[20:25:39] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[20:26:48] <jinsun> rust is the recommended language to learn nowadays
[20:26:52] <independent56> I'm stuck at "Why do i want [lots of] money", from "why do i want to become famous from big software".
[20:26:54] <beaky> in rust we trust
[20:26:56] <independent56> Maybe i ask how
[20:27:29] <pyzozord> independent56: you don't need to be famous to have lots of money. Are you use those are related?
[20:28:03] <independent56> Well, i just want a piece of FOSS as popular as, say, Lightppd
[20:28:06] *** Joins: jokoon (~eio@2a01:e0a:542:e160:a439:2e93:90:56d0)
[20:28:14] <independent56> Nothing huge, just soemthing with my name on it as "first programmer"
[20:28:25] <pyzozord> actually, programmers don't get famous. Very few from massive field ever get famous. If normies know who Turing was that's already kind of a stretch.
[20:28:37] <pyzozord> They know Steve Jobs and Bill Gates.
[20:29:44] <pyzozord> if you want to get more like Jobs or Gets, maybe read up on thier biographies, study them? How did they get like that, what did they do etc
[20:29:48] <mawk> Stefan26: good question
[20:30:16] <|smlckz|> why do you think you need fame?
[20:30:23] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Read error: Connection reset by peer)
[20:30:42] <independent56> I mean programmers within circles
[20:30:57] <beaky> yes the idea of chiense remainder is that if you know the amounts you cannot pay (the remainder) then you can multiply those to find the number of ways to get 1 euro
[20:31:39] <mawk> the answer only has factors of 3 and 13
[20:31:43] <independent56> Within minetest, that's the likes of rubenwardy, vannesae, sfan5 are all quite famous. That's what i want to achive. Spectacularliking from within acommunitythanks to my effort in singlehandeldy making a big projec
[20:31:45] <mawk> beaky: 
[20:31:58] <dunkeln> RIP gary kildall.....just forgotten cuz he missed a fucking meeting
[20:32:57] <pyzozord> independent56: I think you are falling victim to some missconception
[20:33:36] <|smlckz|> do you want responsibility, respect, and/or fans/followers?
[20:33:44] <dunkeln> independent56: programming is no passion or job that brings glory, u need to be good at some other things too like be exceptional at marketing urself or an amazing product of urs. even then dunno if u get fame.
[20:33:47] <pyzozord> about how success looks. Success does not come singehandedly. Also it sounds like you just want status and respect. Doesn't really sound like anything to do with programming
[20:34:18] <independent56> .... I know some sysadmin. In fact, as we speak, i am running a sevrer
[20:34:32] *** Joins: poprostumieciek_ (~matthew@user/poprostumieciek)
[20:34:49] <dunkeln> independent56: may i suggest battling that twat jake paul...call him out. programmer turned fighter vs youtuber turned boxer. :)
[20:35:02] *** Quits: poprostumieciek (~matthew@user/poprostumieciek) (Ping timeout: 260 seconds)
[20:35:05] <pyzozord> independent56: but I guess you can try with some kind of competetive environment like competetive programming, demoscene, game jams. Things like this.
[20:35:20] *** Joins: ralinux (~saje@37.156.188.75)
[20:35:41] <pyzozord> just be prepared to put in more effort than 90% of the people if you want to be in the top 10%
[20:35:41] <independent56> Nah, imagine something like musescore. Their main contributor is famous within the technical aspects of musescore. That kind of famous.
[20:36:27] <dunkeln> pyzozord: exception: tiktok fame
[20:36:33] <independent56> dunkeln, I would if i didn't have a BMI of 100 (rounding up in all cases)
[20:36:55] <pyzozord> dunkeln: yeah I mean viral bombs are always a thing but you can't plan for them, they are random
[20:37:10] <|smlckz|> clan, cult, or something in between?
[20:37:25] <pyzozord> independent56: maybe just get good in some online game
[20:37:56] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) ()
[20:37:58] <independent56> http://56i.duckdns.org/dokuwiki/doku.php/orphaned_pages
[20:37:59] <bayaz> Title: orphaned_pages [56i-mtwiki] 
[20:38:05] <dunkeln> you can be a programming content creator if you wanna
[20:38:06] <independent56> I have written a few hundred  pages for my server wiki
[20:38:08] <dunkeln> like fireship
[20:38:12] <pyzozord> so annoying though, you want status and respect in a community but you don't want to put in an effort?
[20:38:12] <independent56> (it's hosted on my server)
[20:38:20] <Helmholtz> Guys is one cpu, 2 GB RAM, 25GB SSD enough for a cloud server (NixOS)
[20:38:24] <pyzozord> that's like the spoil rich kid mentality
[20:38:40] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[20:38:46] <independent56> pyzozord, I do, but it's my constant see-sawing between language swhich is killing my productivity
[20:39:12] <pyzozord> independent56: language doesn't matter, it's what you do with it
[20:39:14] <|smlckz|> Helmholtz: how much traffic load do you expect for your server?
[20:39:31] <dunkeln> language of choice is a trivial thing
[20:39:49] <Helmholtz> |smlckz|, not much except myself...This is kinda my first cloud 
[20:39:53] <independent56> pyzozord, It does. I use a language, then decide i can't use it for wahtever reason, and i end up moving on.
[20:39:57] <|smlckz|> dunkeln, if it were true..
[20:40:01] <independent56> To what often is a worse solution
[20:40:15] <dunkeln> |smlckz|: in independent56's case
[20:40:23] <Helmholtz> |smlckz|, I just want to ssh into it and do stuff
[20:40:37] <Helmholtz> not host websites or anything (at this moment)
[20:40:42] <Helmholtz> I can increase it later, right?
[20:41:05] <independent56> What i do with mys erver is leavea laptop running ubuntu server
[20:41:07] <|smlckz|> Helmholtz: you can go as low as 128 MiB of RAM, i think?
[20:41:11] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.2)
[20:41:12] <independent56> then i install various programs
[20:41:21] <independent56> My flagship is apache
[20:41:47] <independent56> httpd server
[20:41:48] <Helmholtz> |smlckz|, What is the difference between cloud SSD vs local storage SSD?
[20:41:54] <dunkeln> independent56: whats your age? if you dont mind
[20:41:57] <independent56> (it's like saying "i use google for documents")
[20:42:03] <Helmholtz> (I want to turn off my instance when I don't want to use it)
[20:42:05] <independent56> dunkeln, 15 and a month
[20:42:23] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[20:42:58] <dunkeln> ohh...then its alright..get the exposure you need. switch languages and do what all you do.
[20:43:03] <|smlckz|> Helmholtz: i don't know, cloud one is shared between my different users, i think
[20:43:10] <independent56> I started running the server in the second J month of the year, when i was 14
[20:43:19] <|smlckz|> s/my/many/
[20:43:27] <mawk> so you want to know when are bézout coefficient negatives Stefan26 
[20:43:28] <independent56> The inncessant language switching has lasted an entire year
[20:43:40] <Helmholtz> |smlckz|, so it isn't ephereal right?
[20:43:42] <independent56> I remember Kotlin. I moved away ebcause it just wouldn't work with me.
[20:43:49] <mawk> for a given n such that ux + vy = n; where u and v are the coefficients
[20:44:05] <Helmholtz> Like if I turn off my instance, it wouldn't get de-allocated?
[20:44:14] <Izem> no
[20:44:23] <Izem> you are still charged for it too
[20:44:25] <|smlckz|> Helmholtz: read the documentation carefully for all the details
[20:44:35] <Izem> I made that mistake
[20:44:40] * Izem facepalm
[20:44:43] <independent56> With servers, i am limited by laptops i ahveavailable¸so i only migrate oncea year
[20:45:15] <Helmholtz> Izem, Is it even a sensible thing to do (turning off the instance and turning it on only when I want to use it)?
[20:45:20] <Izem> no
[20:45:23] <|smlckz|> independent56: have you tried assembly?
[20:45:27] <Izem> it's usually a flat rate
[20:45:55] <Izem> a pay as you use cloud thingy would be interesting though
[20:46:00] <independent56> |smlckz|, i would if it was cross-platform
[20:46:09] <independent56>  .j
[20:46:17] <Izem> cross platform is a myth
[20:46:35] <|smlckz|> so you haven't, right?
[20:48:26] <|smlckz|> so, try webassembly or any other VMs like JVM bytecode etc.
[20:49:29] <independent56> Don't even get me started. I never used c because it was so low-level. I am not going to use assembly
[20:49:38] <dunkeln> is webassembly the right way to learn assembly tho?
[20:49:43] <Izem> no
[20:50:04] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[20:50:05] *** poprostumieciek_ is now known as poprostumieciek
[20:50:09] <Helmholtz> izak, so for pay-as-you-go (which charges flat rate only for disk) turning off makes sense?
[20:50:12] <Izem> retro computing is not  bad idea though
[20:50:32] *** poprostumieciek is now known as poprostumieciek_
[20:50:39] *** Quits: mven (~mven@072-179-001-159.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[20:50:42] *** poprostumieciek_ is now known as poprostumieciek
[20:50:44] <|smlckz|> dunkeln: whatever, just nearer to the hardware
[20:50:46] <Izem> Helmholtz: depends on the service, but to me yeah
[20:51:41] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 265 seconds)
[20:51:48] <dunkeln> i really wanna learn assembly but I'm having a hard time with nasm on osx
[20:51:51] <dunkeln> pain
[20:51:52] <Izem> still have not figured out how to turn my microbit into an assembly pad, I ended up just doing x64 instead
[20:52:03] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[20:52:10] <Izem> apple doesn't have an assembler?
[20:52:20] *** Joins: guest378 (~guest@2001:5b0:2a1b:caf8:9a53:bc2d:371:148f)
[20:52:24] <dunkeln> dunno if it has
[20:52:34] *** Joins: mrig (~mrig@user/mrig)
[20:52:36] <dunkeln> lemme check
[20:52:42] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:28d7:99e8:bb2b:6b2e)
[20:52:45] <Izem> I'd check if they do, apple seems to have good docs
[20:52:47] <|smlckz|> i myself was such a person, only cross-platform languages like python, javascript etc. but my teacher insisted me to learn c
[20:53:12] <|smlckz|> i am very thankful to my teacher for that advice
[20:53:26] *** Quits: MarcoFe (~marcofe@93-36-161-108.ip60.fastwebnet.it) (Read error: Connection reset by peer)
[20:53:32] <Izem> depends on your interests of course
[20:53:51] <dunkeln> Izem: there is, called 'as'. i recall now. in my course we were allowed to use nasm or tasm only so eventually forgot about as
[20:54:02] <Izem> tasm?
[20:54:06] *** Joins: independent56 (~independe@51.158.144.31)
[20:54:10] <dunkeln> tasm is for windows
[20:54:11] <Izem> in an emulator?
[20:54:15] <dunkeln> yucky stuff
[20:54:21] <Izem> yep
[20:54:32] <Izem> I did that the first time I learned it sucked
[20:54:35] <|smlckz|> turbo assembler
[20:54:45] <Izem> now though, I'd be cool with it
[20:54:55] <|smlckz|> from the great borland iirc
[20:55:01] <Izem> yeah
[20:55:07] <Stefan26> yeah that's sort of related mawk ... it's an old problem i just linked it if you liked it
[20:55:24] <dunkeln> again tho...writing assembly for linux and mac can be different experiences right,,,something about the section being different and also different syscalls ofcourse
[20:55:28] <Izem> dunkeln is he suplying tasm?
[20:55:37] <dunkeln> nope
[20:55:43] <Izem> lol
[20:55:46] *** Quits: snep (craftxbox@2001:bc8:654:1c02::1) (Ping timeout: 240 seconds)
[20:55:51] <Izem> yeah I'd just use nasm then
[20:55:53] <|smlckz|> here's me writing some [ linux aarch64 ] assembly: http://sprunge.us/4HI8l4
[20:56:25] <Izem> why _start instead of main?
[20:56:45] <|smlckz|> not linked to libc
[20:56:49] *** Joins: MarcoFe (~marcofe@93-36-161-108.ip60.fastwebnet.it)
[20:56:50] <Izem> oh ok
[20:56:57] <dunkeln> ohhhh
[20:57:03] *** Joins: password2 (~password@user/password2)
[20:57:19] <Izem> not a fan of using similar symbols but it doesn't matter
[20:57:37] <|smlckz|> specifically, the C runtime
[20:57:49] *** Quits: kerberos (~jezavala@187-177-34-208.dynamic.axtel.net) (Quit: Leaving)
[20:58:00] <dunkeln> are there libera channels for blockchain....cant find anything good thru alis
[20:58:11] <Izem> pretty sure there is a bitcoin channel
[20:58:22] *** Joins: craftxbox (craftxbox@natsuko.ninja)
[20:58:27] <dunkeln> but it wouldnt be as technical i believe
[20:58:34] <GeDaMo> ##altcoins
[20:58:39] <dunkeln> or beginner friendly
[20:59:18] <GeDaMo> Maybe ##econometrics
[20:59:20] <Izem> it was friendly on freenode, and it probably still is
[20:59:42] <dunkeln> GeDaMo: thanks
[20:59:50] <|smlckz|> also, on linux, you have different syscall numbers on different architectures
[21:00:44] <Izem> what's a syscall number?
[21:01:02] <independent56> Initally, the only reason i used ddg was because of bangs. Then i decided to start caring about internet privacy.
[21:01:33] <GeDaMo> Kernel functions are identified by number
[21:01:54] <GeDaMo> https://gist.github.com/yamnikov-oleg/454f48c3c45b735631f2#file-syscall_x86_64-md
[21:01:55] <bayaz> Title: Linux Syscalls Reference 
[21:01:56] *** Joins: Crescendo (~Crescendo@user/crescendo)
[21:02:24] *** Joins: zaher_ (~zaher@37.48.185.32)
[21:03:21] <Izem> Ok, so the kernel has a table of syscalls
[21:03:24] <GeDaMo> https://cs.lmu.edu/~ray/notes/syscalls/
[21:03:24] <bayaz> Title: syscalls 
[21:03:28] *** Quits: zaher (~zaher@37.48.152.117) (Ping timeout: 252 seconds)
[21:03:37] *** Quits: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi) (Quit: Leaving)
[21:03:39] <Izem> that guy has notes on everything, impressive
[21:03:56] <|smlckz|> https://en.wikipedia.org/wiki/System_call
[21:03:57] <bayaz> Title: System call - Wikipedia 
[21:03:57] <GeDaMo> x86 has a syscall instruction, you specify which actual function to call with the syscall number in rax
[21:04:17] *** Joins: Donitz (~Donitz@85-156-203-108.elisa-laajakaista.fi)
[21:04:37] <Izem> nothing for windows yet :/
[21:04:48] <Izem> oh ok, that's cool
[21:04:52] *** Quits: ralinux (~saje@37.156.188.75) (Quit: Leaving)
[21:05:12] *** Joins: independent_ (~independe@95.144.68.39)
[21:05:22] <GeDaMo> Windows doesn't have a stable syscall interface, you're meant to use DLLs (I'm not all that familiar with Windows)
[21:05:50] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[21:05:51] <Izem> ok
[21:06:02] <Izem> I will say windows loves indirection :P
[21:06:11] <Izem> it's almost unhealthy
[21:06:41] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:06:55] <Izem> now I wonder how they figured out how to avoid the interrupt overhead
[21:07:25] <Izem> was kinda weird when you mentioned they had such an instruction, but that makes it pretty usefull
[21:07:50] *** Quits: independent56 (~independe@51.158.144.31) (Ping timeout: 260 seconds)
[21:08:31] <GeDaMo> https://www.felixcloutier.com/x86/syscall
[21:08:31] <bayaz> Title: SYSCALL — Fast System Call 
[21:09:35] *** Quits: jamea (~jamea@177.239.87.39) (Ping timeout: 260 seconds)
[21:09:39] <Izem> what's the micro kernel overhead briefly?
[21:10:49] <Izem> also since people don't seem to use rings, do you think it's more up to the compiler and os to provide secure features?
[21:11:14] <|smlckz|> rings?
[21:11:21] <guest378> hello. im trying to compile an old version of make. https://bpa.st/UEMA am i getting this error message because my version of gcc is too new? 
[21:11:22] <bayaz> Title: View paste UEMA 
[21:11:26] <GeDaMo> Protection levels
[21:11:40] *** Quits: craftxbox (craftxbox@natsuko.ninja) (Ping timeout: 252 seconds)
[21:11:43] *** Quits: rsx (~dummy@ppp-188-174-153-122.dynamic.mnet-online.de) (Quit: rsx)
[21:12:02] <GeDaMo> Most current OSs on x86 use two rings: kernel and user
[21:12:27] <GeDaMo> Older x86 had 4 levels but they were seldom used
[21:12:32] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[21:12:49] *** Joins: Crescendo (~Crescendo@user/crescendo)
[21:12:54] <dunkeln> what were they called
[21:13:00] <GeDaMo> guest378: looks like you need to link a library
[21:13:17] <GeDaMo> They were just numbered 0 to 3
[21:13:27] *** Joins: craftxbox (craftxbox@natsuko.ninja)
[21:13:28] <JanC> there are also rings below the kernel...
[21:13:34] <dunkeln> ohhh ok
[21:14:23] <guest378> oh. that makes sense now after rereading the error. thanks. 
[21:14:28] <Izem> whaaa?
[21:14:34] <GeDaMo> https://en.wikipedia.org/wiki/Protection_ring
[21:14:34] <bayaz> Title: Protection ring - Wikipedia 
[21:14:36] <Izem> what do those do?
[21:15:03] <GeDaMo> I think the idea was that they would be used for device drivers
[21:15:34] <|smlckz|> __stat doesn't seem like a function you'd find outside the system's libc
[21:15:44] <GeDaMo> So that misbehaving drivers wouldn't bring down the kernel
[21:16:30] <Izem> I see, which is why people like microkernels?
[21:17:02] *** Parts: Caffeinated (~Caffeine@user/alexdelarge) ()
[21:17:15] <GeDaMo> Microkernels have very little in ring 0, kernel level
[21:17:30] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 260 seconds)
[21:17:33] <GeDaMo> Even things like device drivers exist at user level
[21:17:39] <Izem> I mean as in a driver can't bring down the kernel
[21:17:47] <GeDaMo> Yes, that's one of the advantages
[21:18:36] <Izem> so does hardware design influence os design or is it vice versa?
[21:18:56] <GeDaMo> Bit of both :P
[21:19:19] <Izem> I mean, it's interesting thinking you could try to design another security feature for the hardware
[21:19:20] <dunkeln> u got mars rovers whose hardware requires an RTOS
[21:19:27] <dunkeln> unlike our desktops
[21:19:46] <Izem> it uses linux doesn't it?
[21:19:52] <dunkeln> no it doesnt
[21:20:08] <JanC> hypervisors are ring -1 on x86_64, and SMM (System Management Mode) is sometimes called ring -2
[21:20:39] <dunkeln> VxWorks..the RTOS in mars rovers
[21:20:49] <Izem> yeah, interesting
[21:23:01] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:23:51] *** Joins: fanis30 (~fanis30@adsl-121.37.6.3.tellas.gr)
[21:24:33] *** Joins: pulse (~pulse@user/pulse)
[21:25:07] *** Joins: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com)
[21:25:54] *** Quits: jazzy (~jaziz@2600:380:865d:911b:e5e1:b429:e129:6354) (Ping timeout: 260 seconds)
[21:28:19] *** Quits: Izem (~Izem@8.6.144.177) (Quit: Going offline, see ya! (www.adiirc.com))
[21:30:34] <beaky> what is it like to use a microkernel
[21:30:40] <independent_> Is programming javascript like programming any regular programming langauge and linking it to the website, or it it like programming for the web and it feels like a hack to use desktop?
[21:31:11] *** Quits: sahasatvik (~sahasatvi@122.163.57.24) (Quit: leaving)
[21:31:26] <GeDaMo> independent_: did you look at the Electron link I posted earlier?
[21:31:58] <independent_> Yeah, didn't read any though (although i am now)
[21:32:22] <independent_> you mean the "Electron applications have been criticized for incurring significant overhead when compared with native applications with similar functionality. " Phrase?
[21:32:34] <GeDaMo> Electron is a system for building desktop apps using web technologies
[21:32:46] <password2> urg
[21:32:51] <independent_> Oh, makes sense now
[21:32:59] <password2> finding a linter that does what i want to do is tedious
[21:33:24] <Stefan26> meh
[21:33:54] <password2> i just want to test caseness of functions/variables
[21:34:26] <dunkeln> independent_: u use vscode?...thats electron based
[21:34:27] *** Quits: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c) (Remote host closed the connection)
[21:34:41] <independent_> Yeah, and i love it
[21:34:57] <independent_> And it isn't actually that slow for modern comptuers
[21:35:12] <independent_> 167 mb of memory (vscodium)
[21:35:57] <pulse> it's funny how the vast majority of complaints against electron come from people who have 16gb+ of RAM, newest CPUs, a 3090 GPU, ...
[21:36:21] <password2> meaning?
[21:36:31] <pulse> meaning people should realize they live in the year 2021
[21:36:36] <pulse> and stop complaining :p
[21:36:48] *** Joins: nostalgia (~nostalgia@2601:243:c600:95f0:22f1:3efe:9b37:299c)
[21:36:49] <password2> its 2021 where everyone complains
[21:36:55] <pulse> well, i guess that's true
[21:37:17] <independent_> yeah, but i may not get the audience i need from hogging memory, many of which may be running udnerpowered computers
[21:37:33] <pulse> the reason why electron is popular is because the old paradigm for UIs is a complete disaster
[21:38:34] <independent_> nice
[21:38:42] <independent_> VScode is a work of art
[21:38:51] <pulse> well, it's good. it's not as good as VS :p
[21:39:12] <independent_> Sometimes it feels like i'm using the mona lisa as tablecloth (analogy)
[21:40:46] <independent_> I just use it for editing latex files
[21:42:57] <dunkeln> vscode can get a bit bloated after some months of use
[21:43:19] <independent_> it's the best text editor i have ever used
[21:44:47] <dunkeln> why latex files? thats only for research publishings right
[21:45:22] <independent_> I am sick and tired of word processors with significant overhead. Latex can be edited anywhere, even n rocks
[21:45:31] <independent_> I use it as a personal word processor ;-)
[21:45:44] <independent_> Of course, in school, i am forced to use google docs. 
[21:46:59] <dunkeln> ohh damn...i dont like either of them. latex is a tedious and word processors are just shit like you said
[21:47:27] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[21:47:41] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[21:47:48] *** Quits: guest378 (~guest@2001:5b0:2a1b:caf8:9a53:bc2d:371:148f) (Quit: quit)
[21:47:51] <independent_> LaTeX is my compromise. I get to edit a sans-code, and i am happy
[21:48:06] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[21:48:08] *** Joins: duban[m] (~dubanmatr@2001:470:69fc:105::f5fe)
[21:48:21] <independent_> Sure, everything about it screams 90s IT, but i still enjoy it
[21:48:31] <independent_> (try looking at the tex lion, or website)
[21:48:52] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[21:48:54] *** Quits: DasBrain (~DasBrain@user/dasbrain) (Killed (NickServ (GHOST command used by DasBrain_)))
[21:49:00] *** Joins: DasBrain_ (~DasBrain@user/dasbrain)
[21:49:12] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[21:49:37] <beaky> the old paradigm for uis (delphi) is pretty good i think there's been nothing but glowing praise for delphi as being the best software development platform ever made by delphi users and a yearning for javascript to one day even begin to approach the sheer developability afforded by delphi
[21:50:10] <independent_> "Delphi, in legend previously called Pytho, in ancient times was a sacred precinct that served as the seat of Pythia" Nice.
[21:50:13] <independent_>  /j
[21:51:16] <independent_> Looks like a Chinese ripoff of VScode... might as well download and try it /s
[21:51:28] <GeDaMo> If you like Delphi, you might look at FreePascal / Lazarus
[21:51:31] *** Joins: LucaTM (~LucaTM@user/lucatm)
[21:51:46] <beaky> but i think delphi limited its reach by being a proprietary closed non-cross-platform platform so there's been like multiple generations of programmers who will not have known delphi but who will look into things like electron, flutter, etc
[21:51:58] <beaky> nice i have to try freepascal someday
[21:52:54] <independent_> I can't install it. it forces me to add personal details and subscribe to their stupid newsletter. 
[21:52:58] <independent_> I won'
[21:53:03] <independent_> *'t
[21:53:19] <dunkeln> independent_: whta is the chinese ripoff of vscode?
[21:53:26] <independent_> Delphi
[21:53:44] <dunkeln> ohhok
[21:53:50] <GeDaMo> Delphi is much older than VS Code
[21:53:54] <beaky> pascal and c were contemporaries back in the day as 'high level programming languages that a system would use' (c for unix, pascal for apple macintosh) but then over time c became known as the 'low-level' language people learned to undersatnd 'how the machine works' even as machines no longer work like a pdp-11, whereas pascal still retained its high-levelness, became turbopascal and then
[21:53:56] <beaky> delphi and then was just lost to time
[21:54:53] <user51> what about j
[21:55:08] <beaky> nice i like j i have to check out j too
[21:55:10] <dunkeln> delphi looks like part ms word and part vscode
[21:55:34] <independent_> Normally, i edit files in (order of use) VScode, Nano (for my webserver), or Ubuntu text editor.
[21:56:11] <beaky> not related to j but i think apl had a similar fate to delphi, neglected and forgotten (by ibm over the years)
[21:56:27] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[21:57:10] <beaky> with ibm announcing a 'withdrawal' of apl2 on january 
[21:57:38] <beaky> the end of an era
[21:58:48] <user51> prog lang history seems like a fine subject
[21:59:11] <user51> is there any software/hardware histroy in cs courses?
[21:59:29] <dunkeln> not in mine
[21:59:38] <GeDaMo> https://github.com/stereobooster/programming-languages-genealogical-tree
[21:59:39] <bayaz> Title: GitHub - stereobooster/programming-languages-genealogical-tree: Programming languages genealogical tree 
[21:59:52] <beaky> yes i think stanford university has one in their curriculum as cs242
[22:00:13] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[22:00:48] <user51> my god, how are you supposed to read that graph
[22:01:19] *** Quits: jokoon (~eio@2a01:e0a:542:e160:a439:2e93:90:56d0) (Ping timeout: 252 seconds)
[22:01:32] <beaky> i guess a lot of cs101 history goes 'so theres a guy called turing he invented computing and then afterwards ibm invented fortran and then came structured programming which banned goto and then now we have c and then java the ultimate programming language' and that's the only history we get 
[22:01:40] <GeDaMo> By zooming in :P
[22:02:04] <dunkeln> beaky: haha really fucking true
[22:02:08] <GeDaMo> https://github.com/e-n-f/if-then-else/blob/master/if-then-else.md
[22:02:08] <bayaz> Title: if-then-else/if-then-else.md at master · e-n-f/if-then-else 
[22:03:42] *** Quits: absc (~absc@dynamic-adsl-94-34-168-109.clienti.tiscali.it) (Remote host closed the connection)
[22:03:52] <user51> beaky: https://prog21.dadgum.com/121.html
[22:03:53] <bayaz> Title: A Programming Idiom You've Never Heard Of 
[22:03:56] <user51> here's a j teaser for you :)
[22:04:00] <beaky> 'oh and also tim berneres-lee invented the web and there's an organization called the w3c but then there's also html5 and css and javascript and php and python now go forth and develop webapps'
[22:05:37] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[22:06:10] <beaky> nice i like under i think many programming languages have something like it
[22:06:58] *** Joins: zaher (~zaher@37.48.148.34)
[22:07:12] <beaky> but very few programming langugages have a general 'inverse of <other operator>' operator
[22:07:16] *** Joins: Izem (~Izem@8.6.144.177)
[22:07:48] <beaky> (except haskell of course which has lens all the cool haskell people use lens)
[22:08:03] *** Quits: zaher_ (~zaher@37.48.185.32) (Ping timeout: 265 seconds)
[22:09:01] *** Quits: Andalu30 (~andalu30@85.137.21.37.dyn.user.ono.com) (Ping timeout: 265 seconds)
[22:09:17] <user51> #define close(fd) !open(fd) // :P
[22:09:54] *** Joins: lunarkitty (uid501895@user/pyra)
[22:10:00] *** Quits: poprostumieciek (~matthew@user/poprostumieciek) (Quit: poprostumieciek)
[22:10:44] <GeDaMo> Doesn't Python have 'with' which can be used to open a file, do stuff then close it afterwards?
[22:11:10] <Izem> yeah
[22:11:25] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[22:12:01] <spynxic> What kind of background do opengl folks have
[22:12:15] <Izem> Is there any other interesting ways people have dealt with memory as a data structure outside of cons cells and arrays?
[22:12:17] *** Joins: Akuli (~Akuli@82-203-160-226.bb.dnainternet.fi)
[22:12:42] <Izem> spynxic: computer graphics I hope
[22:13:03] <spynxic> The whole history?
[22:13:08] <GeDaMo> There are many different data structures :P
[22:13:19] <Izem> true
[22:13:30] *** Quits: fanis30 (~fanis30@adsl-121.37.6.3.tellas.gr) (Quit: WeeChat 3.2)
[22:13:43] <GeDaMo> spynxic: are you asking how to get started with OpenGL / graphics?
[22:14:01] <Izem> but these are two different ways that is easy to merge memory and use it in different ways I guess
[22:14:11] <spynxic> What to already be familiar with prior to learning the syntax
[22:14:16] *** Joins: thetourist108 (~thetouris@2001:470:69fc:105::3112)
[22:14:19] <beaky> yes the problem with with and with destructors and with lens is that they are adhoc whereas in j the idea is that with an inverse operator for all the primitives it's better somehow than having to specify it yourself
[22:14:26] <GeDaMo> Matrix operations / linear algebra
[22:14:29] <user51> Izem: please use correct language. those data structues are 'homoiconic'. :P
[22:15:14] <GeDaMo> Geometry in general, I suppose
[22:17:53] <GeDaMo> https://learnopengl.com/
[22:17:55] <bayaz> Title: Learn OpenGL, extensive tutorial resource for learning Modern OpenGL 
[22:18:51] <user51> Izem: joking aside, i think a better word is concatenative. i also like pointerative :)
[22:19:04] <beaky> outside of cons cells and arrays there is 'thunks' (past tense of think) for lazy evaluation which enables all sorts of things like 'call-by-need' evaluation, control flow  as just data, infinite data structures (i.e. codata), ...
[22:19:19] <Izem> interesting
[22:19:23] <beaky> the building block of haskell
[22:19:34] *** Quits: dunkeln (~dunkeln@user/dunkeln) (Ping timeout: 260 seconds)
[22:19:40] <Izem> cool, that's good to know
[22:19:54] <Izem> user51: yeah I could not describe it at all
[22:20:30] <beaky> you can try to implement it with memoery that you 'delay' and then eventually evaluate later on
[22:21:52] <beaky> whereas haskell does it by default it is the key feature of haskell (even tho haskell has become known more as the ultimate 'functional programming' language)
[22:22:09] <Izem> neat
[22:22:46] <user51> beaky: lazy evaluation eh. i wrote this silly factorial function yesterday: http://sprunge.us/w3546O
[22:23:40] <beaky> nice i like javascript
[22:23:57] <GeDaMo> Uh ... I don't think that would ever stop :P
[22:24:18] <Izem> would the dom be slow if it used lazy eval?
[22:24:29] <user51> that's awk :P
[22:24:37] <beaky> o
[22:25:12] <user51> that's why i said lazy evaluation :) don't evaluate the array member until called
[22:25:24] <user51> and it blows up, as GeDaMo said :)
[22:25:38] *** Quits: duban[m] (~dubanmatr@2001:470:69fc:105::f5fe) (Quit: Reconnecting)
[22:25:53] *** Joins: duban[m] (~dubanmatr@2001:470:69fc:105::f5fe)
[22:27:43] <user51> i used a lot of those "runtime tables" once
[22:28:17] <GeDaMo> Nothing wrong with lookup tables :P
[22:28:22] <beaky> the idea is that lazy evaluation is more computationally efficient than eager evaluation because no unnecessary computation is ever performed ever (and you can even share computation) so it would not necessarily be slow with lazy evaluation and there are some examples like the nix build system / nix package management system / nixos where the entire system is a giant lazily-evaluated map so
[22:28:25] <beaky> when you specify a derivation to be built it will use lazy evaluation to build exactly and only the dependencies (and use caching to reuse already-built dependencies)
[22:30:15] <user51> GeDaMo: http://sprunge.us/mR5E1N here's more
[22:30:46] <Izem> So lazy systems will have better load distribution?
[22:30:56] <user51> that's a function from an old 8080 emulator i did. since different instructions set the carry bit in a different way, i went with a table of each possibility
[22:31:59] <beaky> yes better sharing of computation
[22:32:32] <beaky> instead of computing everything possible (eager evaluation the opposite of lazy evaluation)
[22:32:35] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
[22:36:01] <Izem> that's great
[22:36:17] <Izem> too bad funtional people don't seem that interested in operating systems
[22:38:05] <beaky> there is an operating system specified in haskell seL4
[22:38:27] <beaky> but i think last year they lost funding so im not sure what will happen to the project
[22:38:49] <user51> they could always appeal to darpa
[22:39:00] <Izem> maybe not implemented in haskell per say, but a functional system
[22:39:04] <Izem> but yeah that's cool
[22:39:11] <GeDaMo> https://github.com/dls/house
[22:39:12] <bayaz> Title: GitHub - dls/house: Haskell Operating System 
[22:40:05] <beaky> yes the dream would be for me to write drivers in haskell
[22:40:17] <beaky> but soon linux will let you write drivers in rust i guess that's good enough
[22:40:36] *** Joins: dunkeln (~dunkeln@94.128.205.199)
[22:40:36] *** Quits: dunkeln (~dunkeln@94.128.205.199) (Changing host)
[22:40:36] *** Joins: dunkeln (~dunkeln@user/dunkeln)
[22:40:55] <Izem> haskell seems to bulky for that, but hey they write drivers in c++
[22:42:58] <Izem> curious, why does the driver language matter as much if these things get loaded as modules?
[22:43:12] <beaky> woah looks like even haskell has vulnerabilities anyway https://cs-syd.eu/posts/2021-09-11-json-vulnerability i guess it is about time we migrate to coq 
[22:43:13] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[22:43:13] <bayaz> Title: CS SYD - JSON Vulnerability in Haskell's Aeson library 
[22:43:22] *** Quits: Doffi (~doffi@91.132.197.188) (Ping timeout: 245 seconds)
[22:43:53] <beaky> classic hashtable denial of service vulnerability (hashtables are not necessarily O(1) as discussed earlier)
[22:44:39] <Izem> benefit of open source :)
[22:44:46] *** Quits: ChrisWarrick (kwpolska@user/kwpolska) (Ping timeout: 260 seconds)
[22:45:11] *** Quits: whatsupboy (~whatsupbo@user/scobydoo) (Remote host closed the connection)
[22:45:34] *** Joins: src (~src@user/src)
[22:45:44] *** Joins: whatsupboy (~whatsupbo@user/scobydoo)
[22:49:51] *** Joins: System123 (~System123@203-134-35-213.sta.estpak.ee)
[22:50:39] *** brandon_ is now known as brandon
[22:51:03] *** Joins: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c)
[22:51:32] *** Joins: webNET4 (~0x100@32.211.211.39)
[22:53:40] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[22:56:19] *** Quits: pavonia (~user@user/siracusa) (Read error: Connection reset by peer)
[22:56:58] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[22:57:30] *** Quits: MarcoFe (~marcofe@93-36-161-108.ip60.fastwebnet.it) (Quit: Konversation terminated!)
[22:57:36] *** Joins: ChrisWarrick (kwpolska@user/kwpolska)
[22:57:51] *** Quits: duban[m] (~dubanmatr@2001:470:69fc:105::f5fe) (Quit: Reconnecting)
[22:57:55] <user51> what's your guys latest craze?
[22:58:06] *** Joins: duban[m] (~duban@2001:470:69fc:105::f5fe)
[22:58:11] <user51> i've been thinking about a stringly typed language
[22:58:27] <webNET4> STRING TYPES!??  ahhhhhhhhhhhhhhh
[22:58:43] *** Joins: pavonia (~user@user/siracusa)
[23:00:01] *** Joins: Klinda (~klinda@2.227.251.209)
[23:01:05] <webNET4> should work, just a lot of parsing involved
[23:04:23] *** Quits: duban[m] (~duban@2001:470:69fc:105::f5fe) (Quit: Reconnecting)
[23:04:37] *** Joins: duban[m] (~duban@2001:470:69fc:105::f5fe)
[23:05:51] <poww0wmus1c> isn't that called unix?
[23:06:26] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: Ping timeout (120 seconds))
[23:06:32] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[23:06:44] *** Joins: webNET4 (~0x100@32.211.211.39)
[23:07:01] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[23:10:07] <Izem> latest craze for me has been economics I guess :P
[23:10:54] *** Joins: System12_ (~System123@ec2-52-61-197-79.us-gov-west-1.compute.amazonaws.com)
[23:11:06] *** Joins: shiza (~admin@ec2-52-208-131-13.eu-west-1.compute.amazonaws.com)
[23:11:50] <shiza> If a forest is an unordered set of trees, is an ordered set of trees a garden?
[23:11:50] <webNET4> i think you're a few thousand years too late on that craze
[23:12:18] <_dave> user51: could be worse. could be tcl.
[23:12:25] <webNET4> orchard
[23:14:04] *** Quits: duban[m] (~duban@2001:470:69fc:105::f5fe) (Quit: issued !quit command)
[23:14:10] *** Quits: System123 (~System123@203-134-35-213.sta.estpak.ee) (Ping timeout: 260 seconds)
[23:14:47] <shiza> Fine.
[23:16:53] *** Quits: ddrtns^ (~ddrtns@68.101.54.227) (Remote host closed the connection)
[23:17:47] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[23:18:04] *** Joins: duban (~duban@2001:470:69fc:105::f5fe)
[23:18:22] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[23:18:52] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) ()
[23:21:16] *** Quits: dan64 (~dan64@dannyadam.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[23:22:08] *** Joins: dan64 (~dan64@dannyadam.com)
[23:22:53] <user51> _dave: what's wrong with tcl?
[23:23:56] *** Trieste_ is now known as Trieste
[23:24:22] *** Quits: Izem (~Izem@8.6.144.177) (Ping timeout: 252 seconds)
[23:24:41] *** Joins: dstein64 (~dstein64@dannyadam.com)
[23:25:14] *** Quits: dan64 (~dan64@dannyadam.com) (Client Quit)
[23:25:35] *** Joins: inky (~inky_@46.36.114.205)
[23:26:13] *** Quits: dstein64 (~dstein64@dannyadam.com) (Client Quit)
[23:26:35] *** Joins: dstein64 (~dstein64@dannyadam.com)
[23:27:12] *** Quits: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651) (Quit: WeeChat 3.2)
[23:27:24] <_dave> user51: stringly typed and i used to know a shill that just wouldn't shut up about it at any given moment.
[23:29:24] *** Quits: dstein64 (~dstein64@dannyadam.com) (Client Quit)
[23:30:47] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[23:33:31] *** Quits: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c) (Remote host closed the connection)
[23:33:46] *** Joins: poww0wmus1c (~poww0wmus@gateway/tor-sasl/poww0wmus1c)
[23:34:08] <[itchyjunk]> Quick, there are five parts to a loop i vaguely remember my professo saying
[23:34:43] <[itchyjunk]> one of the was the name for "while" or "for". it's not called literals is it? there was some word for the special keywords
[23:34:44] <webNET4> only 5 ?
[23:34:58] <webNET4> keyword
[23:35:22] <shiza> one is the invariant, and the other 4 must be variant 
[23:35:50] <[itchyjunk]> oh it's just called keyword? so keyword, a boolean so know if you do the look again or not, expression that evluated to the boolean, a counter and the body of the code or somes such?
[23:36:06] <[itchyjunk]> loop*
[23:36:18] <webNET4> a counter involves a variable declaration, and initialization usually
[23:36:20] *** Joins: vysn (~vysn@user/vysn)
[23:36:37] *** Joins: dstein64 (~dstein64@dannyadam.com)
[23:36:43] *** Joins: Izem (~Izem@8.6.144.177)
[23:36:47] <[itchyjunk]> i can initialize it outside the loop
[23:36:49] *** Quits: Izem (~Izem@8.6.144.177) (Client Quit)
[23:36:50] <shiza> it depends on if the compiler is able to do a short jump optimization
[23:36:53] <[itchyjunk]> int a = 0; while (a) {}
[23:37:01] <webNET4>  you can also just use a jump label and no loop
[23:37:10] <webNET4> if we're going to split hairs  thats all you need
[23:37:29] <[itchyjunk]> porgramming languages don't have go to these days that much right?
[23:37:33] <[itchyjunk]>  i remember qbasic did
[23:38:13] <jinsun> C and C++ have it, but people don't use
[23:38:33] <webNET4> jmp exists on x86
[23:38:37] <webNET4> language.
[23:38:59] <shiza> and old adagio tells "people use deprecated features until they are removed"
[23:39:17] <[itchyjunk]> is that why i use my brain?
[23:40:06] <shiza> your brain is beautiful and magnific, so don't abuse beverages
[23:41:09] <[itchyjunk]> i only remember two things from class that seemed important, the loop stuff and "promotions", let me recall
[23:42:16] <[itchyjunk]> (for java) int -> float -> long, float -> long -> double, int -> char
[23:42:26] <[itchyjunk]> oh no.. i don't remember what happens to bytes..
[23:42:30] <[itchyjunk]> bytes -> int ?
[23:42:45] *** Joins: alguien (~alguien@user/alguien)
[23:46:08] * deniska pets python
[23:46:17] <deniska> roughly two number types to worry about :D
[23:49:33] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Remote host closed the connection)
[23:50:32] <jinsun> [itchyjunk]: byte -> short -> int it seems https://static.javatpoint.com/images/type2.JPG, and not float -> long but long -> float
[23:51:45] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[23:51:53] <mrig> [itchyjunk]: many of the encapsulation syntax is constructed to hide away goto, but uses it under the hood.
[23:52:04] <mrig> are constructed rather.
[23:52:27] <user51>  
[23:52:34] <shiza> some arithmetic on byte will autopromote to int and yield int
[23:52:43] <shiza> instead of just promoting to short
[23:52:55] <[itchyjunk]> oh no i forgot about short too ..
[23:53:13] <[itchyjunk]> disastorr. /o\
[23:53:20] * [itchyjunk] has a exam on wednesday
[23:53:21] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[23:55:01] <[itchyjunk]> byte -> short -> int -> long; float -> double; int -> long -> float -> double ; int -> char;
[23:55:12] *** Joins: Macuser (~Macuser@216.30.159.201)
[23:55:50] <jinsun> char -> int
[23:56:03] <[itchyjunk]> dohhhhh
[23:56:05] *** Joins: tdsltl^ (~tdsltl@68.101.54.227)
[23:56:07] <[itchyjunk]> char -> int, right
[23:56:17] <[itchyjunk]> if i add char and int, i get int back
[23:56:21] <mrig> I think I'd like to get a proper drafting.
[23:56:23] <[itchyjunk]> ascii sum of char plus the int
[23:56:27] <mrig> drafting table.
[23:56:36] <[itchyjunk]> What does drafting table mean?
[23:56:36] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Quit: Konversation terminated!)
[23:56:38] * [itchyjunk] googles
[23:56:40] <mrig> heh typing failure this evening.
[23:56:43] *** Joins: x003fgqwe (uid479614@id-479614.lymington.irccloud.com)
[23:57:06] <mrig> drawing board for making schema.
[23:57:34] <mrig> Think it could be the tool that i'm itching for at the moment.
[23:58:00] <mrig> for drafting my UNIX plumbing schema ;D
[23:58:34] <mrig> Would be ideal for flow charts and the likes,
