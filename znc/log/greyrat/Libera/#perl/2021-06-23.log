[05:25:28] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[05:28:43] *** Joins: Paladin` (~paladin@S0106c0eae42a785d.vc.shawcable.net)
[05:30:59] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 265 seconds)
[05:31:12] *** Joins: deadmarshal (~deadmarsh@95.38.114.200)
[05:32:29] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[05:35:26] *** Quits: deadmarshal (~deadmarsh@95.38.114.200) (Ping timeout: 252 seconds)
[05:39:37] *** Quits: nirnam (~nirnam@1.47.98.45) (Remote host closed the connection)
[05:40:08] *** Joins: nirnam (~nirnam@1.47.98.45)
[05:53:48] *** Joins: Su-Shee (~Susanne@p4ff494ec.dip0.t-ipconnect.de)
[05:57:04] *** Quits: Su-Shee_ (~Susanne@p4ff4989b.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[06:05:30] *** Quits: nirnam (~nirnam@1.47.98.45) (Ping timeout: 252 seconds)
[06:09:02] *** Quits: m6502 (~6502@2600:8805:d800:b3e::2a2) (Quit: Leaving)
[06:10:25] *** Joins: splatt9990 (~splatt999@dsl-74-83-232-141.fuse.net)
[06:11:17] *** Quits: splatt9990 (~splatt999@dsl-74-83-232-141.fuse.net) (Quit: Quit)
[06:12:33] *** Joins: nirnam (~nirnam@1.46.18.59)
[06:33:20] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 265 seconds)
[06:33:20] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[06:33:54] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[06:34:48] *** Quits: miojo (~u0_a236@191.253.158.67) (Ping timeout: 258 seconds)
[06:35:56] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Ping timeout: 252 seconds)
[06:37:13] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[06:53:59] *** Quits: nirnam (~nirnam@1.46.18.59) (Ping timeout: 268 seconds)
[06:55:11] *** Quits: Tempesta (Tempesta@user/tempesta) (Quit: See ya!)
[06:57:12] *** Joins: Guest55 (~Guest55@177.30.109.124)
[06:58:01] *** Quits: Guest55 (~Guest55@177.30.109.124) (Client Quit)
[07:01:46] * GumbyPAN CPAN Upload: Config-INI-0.027 by RJBS https://metacpan.org/release/RJBS/Config-INI-0.027
[07:01:46] * GumbyPAN CPAN Upload: Mixin-Linewise-0.110 by RJBS https://metacpan.org/release/RJBS/Mixin-Linewise-0.110
[07:05:20] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:05:20] *** FinnElija is now known as Guest3314
[07:05:20] *** Quits: Guest3314 (~finn_elij@user/finn-elija/x-0085643) (Killed (cadmium.libera.chat (Nickname regained by services)))
[07:05:20] *** finn_elija is now known as FinnElija
[07:05:34] *** Joins: nirnam (~nirnam@1.47.74.246)
[07:12:44] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! ðŸ‘‹)
[07:16:47] * GumbyPAN CPAN Upload: Net-FullAuto-1.0000599 by REEDFISH https://metacpan.org/release/REEDFISH/Net-FullAuto-1.0000599
[07:23:50] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca) (Quit: ZNC 1.8.2 - https://znc.in)
[07:24:09] *** Joins: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca)
[07:27:42] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 258 seconds)
[07:34:16] *** Joins: Martchus_ (~martchus@2a01:c23:b871:be00:d250:99ff:fe49:3cce)
[07:36:09] *** Quits: Martchus (~martchus@dynamic-077-002-116-126.77.2.pool.telefonica.de) (Ping timeout: 258 seconds)
[07:39:23] *** Joins: Tempesta (Tempesta@user/tempesta)
[08:00:34] *** justBull is now known as justK
[08:01:54] *** Quits: gce108 (~gce@user/gce108) (Ping timeout: 268 seconds)
[08:11:05] *** Joins: gce108 (~gce@user/gce108)
[08:14:37] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[08:16:27] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 244 seconds)
[08:18:24] *** Joins: deadmarshal (~deadmarsh@95.38.114.168)
[08:20:40] <Grinnz> oh boy, someone wrote another perl language server... using coro and anyevent, and PPI *and* PPR https://github.com/FractalBoy/perl-language-server
[08:20:41] <Paperbot> Link title(s): [ GitHub - FractalBoy/perl-language-server ]
[08:21:01] <Grinnz> nobody tell the nerd of leo
[08:26:55] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 265 seconds)
[08:27:30] <simcop2387> I ththink they were on irc a whwhile ago asking about a llanguage server.  The name sounds familiar anyway
[08:28:48] *** Joins: zakame (~zakame@user/zakame)
[08:28:50] *** Joins: furrymcgee (~devuan@31.179.186.66)
[08:31:14] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Write error: Connection reset by peer)
[08:48:47] *** Quits: SincereFox (uid337158@user/sincerefox) (Quit: Connection closed for inactivity)
[08:49:09] *** Quits: praxidyke (~praxidyke@107-219-53-104.lightspeed.lnngmi.sbcglobal.net) (Ping timeout: 265 seconds)
[08:51:58] * GumbyPAN CPAN Upload: Backblaze-B2V2Client-1.6 by ECHERNOF https://metacpan.org/release/ECHERNOF/Backblaze-B2V2Client-1.6
[08:52:20] *** Quits: EvanCarroll (~ecarroll@c-76-30-156-101.hsd1.tx.comcast.net) (Ping timeout: 252 seconds)
[09:03:26] *** Quits: logger56 (~Thunderbi@2.26.38.198) (Remote host closed the connection)
[09:03:48] *** Joins: logger56 (~Thunderbi@2.26.38.198)
[09:07:22] *** Quits: radu242 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[09:09:26] *** Joins: radu242 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[09:16:24] *** Joins: EvanCarroll (~ecarroll@c-76-30-156-101.hsd1.tx.comcast.net)
[09:18:00] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[09:18:16] <tm604> mildly puzzled as to how these new coro+ae things are being written, I thought they required a specific (maximum) version of perl
[09:25:51] <Grinnz> i think schmorp eventually unbroke his hacks at some point
[09:26:07] <Grinnz> though i may be thinking of a different hack
[09:26:42] <tm604> sounds like progress anyway!
[09:39:29] *** Quits: gamo (~Thunderbi@cm-93-156-61-102.telecable.es) (Quit: gamo)
[09:55:47] *** Joins: toretto (~0xe3b7@45.15.16.60)
[09:59:06] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:e12f:7bf7:4d5f:e3e1) (Ping timeout: 264 seconds)
[10:08:19] *** Joins: ufobat__ (~martin@dynamic-077-009-028-145.77.9.pool.telefonica.de)
[10:13:07] *** Quits: ufobat__ (~martin@dynamic-077-009-028-145.77.9.pool.telefonica.de) (Remote host closed the connection)
[10:14:01] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:17:14] *** Joins: gamo (~Thunderbi@cm-93-156-61-102.telecable.es)
[10:26:14] *** Quits: randir (~randir@95-25-113-192.broadband.corbina.ru) (Remote host closed the connection)
[10:27:08] * GumbyPAN CPAN Upload: Hustle-Table-v0.2.1 by DRCLAW https://metacpan.org/release/DRCLAW/Hustle-Table-v0.2.1
[10:29:02] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:29:37] *** Joins: mattil (~mattil@airio.portalify.com)
[10:32:17] *** Quits: pizdets_ (~pizdets@183.182.110.157) (Quit: pizdets)
[10:32:56] *** Joins: Martchus (~martchus@2a01:c23:c578:c000:d250:99ff:fe49:3cce)
[10:33:10] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Ping timeout: 252 seconds)
[10:33:26] *** Joins: pizdets (~pizdets@183.182.110.157)
[10:33:53] *** Quits: Martchus_ (~martchus@2a01:c23:b871:be00:d250:99ff:fe49:3cce) (Ping timeout: 252 seconds)
[10:38:52] *** Quits: EvanCarroll (~ecarroll@c-76-30-156-101.hsd1.tx.comcast.net) (Ping timeout: 265 seconds)
[10:40:08] *** Joins: randir (~randir@93.159.239.42)
[10:51:32] *** Joins: jplesnik (~jplesnik@83.240.60.17)
[10:54:55] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[11:02:35] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.2)
[11:02:45] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 258 seconds)
[11:05:46] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[11:07:19] *** Joins: EvanCarroll (~ecarroll@c-73-32-86-244.hsd1.tx.comcast.net)
[11:09:32] *** Joins: yzhernand (~yzhernand@38-73-255-174.starry-inc.net)
[11:11:09] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[11:11:11] *** Quits: humky (~humky@user/humky) (Ping timeout: 258 seconds)
[11:12:41] *** Quits: ueberall (ueberall_l@user/ueberall) (Remote host closed the connection)
[11:13:36] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[11:13:55] *** Quits: F[11:50:33] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[11:50:51] *** Joins: ufobat (~martin@dynamic-077-009-028-145.77.9.pool.telefonica.de)
[11:56:18] * GumbyPAN CPAN Upload: PICA-Data-1.27 by VOJ https://metacpan.org/release/VOJ/PICA-Data-1.27
[11:56:25] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[12:01:40] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[12:03:01] *** Quits: deadmarshal (~deadmarsh@95.38.114.168) (Ping timeout: 252 seconds)
[12:04:51] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 258 seconds)
[12:14:38] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 244 seconds)
[12:16:43] *** Joins: WinterStar (~IceLight@user/icelight)
[12:22:18] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 265 seconds)
[12:28:15] *** Joins: Pali (~pali@user/pali)
[12:35:06] <nirnam> is there a modules that I can just throw a sock with http request at it and it give be back param and ENV?
[12:35:08] *** Joins: deadmarshal (~deadmarsh@95.38.114.168)
[12:35:58] *** Joins: brtastic1 (~Thunderbi@185.24.91.138)
[12:36:25] *** Joins: humky (~humky@user/humky)
[12:37:02] <nirnam> right now I'm using open2 into CGI script, do $cgi->param out the param back, that dosen't feel right
[12:38:18] <Botje-> .oO(master gave Dobby a sock!)
[12:38:55] <nirnam> yeah dobby, look it has http request in it
[12:39:14] <Botje-> nirnam: can you explain what ENV you expect from a http request? that is only a CGI convention
[12:39:56] *** Quits: deadmarshal (~deadmarsh@95.38.114.168) (Ping timeout: 268 seconds)
[12:40:30] <Botje-> nirnam: you can do CGI->new($sock) apparently
[12:40:39] <nirnam> CGI rfc ENV is fine, REQUEST_METHOD REQUEST_URI QUERY_STRING like that, it doesn't have to tho
[12:41:10] * nirnam breathe
[12:41:26] <nirnam> yes my brain still functioning, dunno how much longer tho
[12:42:00] <Botje-> if CGI is not a strict requirement I'd probably just use Plack/PSGI.
[12:44:30] <Botje-> nirnam: any specific reason you're not using an HTTP server module?
[12:44:43] <Botje-> or something like HTTP::Server::PSGI that converts the request into a PSGI blob
[12:45:03] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[12:45:17] <nirnam> yes, I don't know how it will handle a client that we do not close sock and keep continuedly sending data over
[12:45:28] <nirnam> I'm making web irc client CGI:IRC like one
[12:46:20] <Botje-> what transport do you intend on using? Websockets?
[12:46:34] <Botje-> or really just an HTTP call that never ends?
[12:46:44] <nirnam> yup
[12:46:55] <nirnam> https://git.sr.ht/~nirnam/irc_webclient
[12:46:55] <Paperbot> Link title(s): [ ~nirnam/irc_webclient - sourcehut git ]
[12:47:55] <nirnam> I don't mind free code review
[12:48:00] <Botje-> most web frameworks can deal with that just fine.
[12:48:31] <nirnam> I'm considering hynotode at the moment
[12:49:07] <Botje-> that's just a web server for PSGI apps. 
[12:49:32] <Botje-> Consider at least using Plack to get some nice accessors  :)
[12:49:47] <Botje-> and, of course, websockets are the de facto standard approach for this.
[12:51:38] <nirnam> I really appreciate your help, will have to do eaier thing with PSGI and or some web frameworks first
[12:52:35] <nirnam> it not like I don't want to use it, just started with something i'm familiar with first
[12:52:38] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[12:53:12] *** Joins: mattil (~mattil@helsinki.portalify.com)
[12:55:09] *** Joins: deadmarshal (~deadmarsh@95.38.114.168)
[12:59:51] *** Joins: ray (~ray@user/re)
[13:01:15] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[13:01:56] *** Joins: mattil (~mattil@airio.portalify.com)
[13:02:25] *** Quits: brtastic1 (~Thunderbi@185.24.91.138) (Ping timeout: 265 seconds)
[13:05:25] *** Quits: Pali (~pali@user/pali) (Ping timeout: 258 seconds)
[13:06:31] *** Joins: gareppa (~gareppa@user/gareppa)
[13:07:17] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the con[13:42:47] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[13:44:12] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 252 seconds)
[13:48:31] *** Joins: koo555 (~koo6@89-24-13-235.customers.tmcz.cz)
[13:51:48] *** Quits: koo7 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 258 seconds)
[13:53:54] *** Joins: koo7 (~koo6@89-24-13-235.customers.tmcz.cz)
[13:57:10] *** Quits: koo555 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 258 seconds)
[14:03:18] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[14:03:54] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[14:06:21] <LeoNerd> Features I want in an email client: Send now | Save draft | Send in 60 minutes time if I haven't thought of anything else to add by then
[14:09:06] *** Joins: koo555 (~koo6@89-24-13-235.customers.tmcz.cz)
[14:11:20] *** Quits: koo7 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 252 seconds)
[14:20:33] *** Quits: koo555 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 258 seconds)
[14:28:42] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[14:32:22] *** Joins: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz)
[14:36:40] *** Quits: logger56 (~Thunderbi@2.26.38.198) (Ping timeout: 265 seconds)
[14:39:08] *** Joins: logger56 (~Thunderbi@2.26.38.198)
[14:45:14] <rindolf> LeoNerd: heh
[14:49:14] <xq> LeoNerd: https://addons.thunderbird.net/en-US/thunderbird/addon/send-later-3/
[14:49:15] <Paperbot> Link title(s): [ Send Later :: Add-ons for Thunderbird ]
[14:54:54] <vague> 'send unless I reset the timer every 60 minutes'
[14:55:30] <LeoNerd> Yes, that
[14:56:37] * GumbyPAN CPAN Upload: Graphics-TIFF-16 by RATCLIFFE https://metacpan.org/release/RATCLIFFE/Graphics-TIFF-16
[14:57:30] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[15:01:08] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Remote host closed the connection)
[15:04:46] *** Joins: miojo (~u0_a236@189.40.101.17)
[15:11:39] * GumbyPAN CPAN Upload: Geo-Coder-OpenCage-0.33 by EDF https://metacpan.org/release/EDF/Geo-Coder-OpenCage-0.33
[15:20:16] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 252 seconds)
[15:28:53] *** Quits: logger56 (~Thunderbi@2.26.38.198) (Remote host closed the connection)
[15:29:44] *** Joins: logger56 (~Thunderbi@2.26.38.198)
[15:32:00] *** Quits: feriman (~feriman@188.163.113.127) (Ping timeout: 252 seconds)
[15:35:38] *** Quits: dotandimet (~dotandime@evomr2.evogene.com) (Read error: Connection reset by peer)
[15:39:48] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:40:21] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:43:13] <Botje-> Send when I think of a crucial thing I forgot to include
[15:46:07] *** Joins: KnoP (~KnoP@p57b1920f.dip0.t-ipconnect.de)
[15:50:47] *** Quits: logger56 (~Thunderbi@2.26.38.198) (Remote host closed the connection)
[15:51:24] *** Joins: logger56 (~Thunderbi@2.26.38.198)
[15:52:01] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[15:53:07] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:53:18] *** Joins: mattil (~mattil@helsinki.portalify.com)
[15:54:20] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[15:59:00] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[15:59:31] *** Joins: mattil (~mattil@airio.portalify.com)
[16:01:13] *** Quits: logger56 (~Thunderbi@2.26.38.198) (Remote host closed the connection)
[16:02:07] *** Joins: logger56 (~Thunderbi@2.26.38.198)
[16:05:46] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[16:08:29] *** Quits: finsternis (~X@23.226.237.192) (Remote host closed the connection)
[16:08:59] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 268 seconds)
[16:20:08] *** Quits: logger56 (~Thunderbi@2.26.38.198) (Remote host closed the connection)
[16:20:19] *** Joins: SincereFox (uid337158@user/sincerefox)
[16:20:59] *** Joins: logger56 (~Thunderbi@2.26.38.198)
[16:26:17] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 258 seconds)
[16:28:39] *** Joins: dotandimet (~dotandime@evomr2.evogene.com)
[16:30:51] *** Joins: akaWolf (~akaWolf@akawolf.org)
[16:34:56] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[16:38:22] *** Joins: sverzel__ (~sverzel@h-155-4-128-136.NA.cust.bahnhof.se)
[16:39:27] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[16:39:59] *** Joins: mattil (~mattil@airio.portalify.com)
[16:41:01] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[16:42:00] *** Quits: sverzel_ (~sverzel@h-155-4-128-136.NA.cust.bahnhof.se) (Ping timeout: 258 seconds)
[16:42:37] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[16:42:56] *** Quits: logger56 (~Thunderbi@2.26.38.198) (Remote host closed the connection)
[16:43:40] *** Joins: logger56 (~Thunderbi@2.26.38.198)
[16:48:59] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 244 seconds)
[16:49:44] *** Quits: deadmarshal (~deadmarsh@95.38.114.168) (Ping timeout: 252 seconds)
[16:59:34] *** Joins: pizdets_ (~pizdets@183.182.111.67)
[17:00:13] *** Quits: pizdets (~pizdets@183.182.110.157) (Ping timeout: 265 seconds)
[17:02:10] *** Joins: pj (~pj@ghettoforge/pj)
[17:06:38] *** Joins: deadmarshal (~deadmarsh@95.38.114.168)
[17:07:34] *** Quits: a153 (~a153@user/a153) (Ping timeout: 268 seconds)
[17:09:18] *** Quits: Martchus_ (~martchus@2a01:c23:b979:9b00:d250:99ff:fe49:3cce) (Ping timeout: 264 seconds)
[17:09:52] <simcop2387> now this is a fun tool https://github.com/liamg/traitor
[17:09:53] <Paperbot> Link title(s): [ GitHub - liamg/traitor: Automatic Linux privesc via exploitation of low-hanging fruit e.g. gtfobi... ]
[17:09:54] *** Joins: Martchus (~martchus@dynamic-095-114-091-231.95.114.pool.telefonica.de)
[17:09:59] <simcop2387> gonna test it in the sandbox later
[17:10:33] *** Quits: nirnam (~nirnam@1.47.74.246) (Remote host closed the connection)
[17:10:44] *** Quits: logger56 (~Thunderbi@2.26.38.198) (Remote host closed the connection)
[17:11:00] <vague> It will disappoint you in the end, traitors always do
[17:11:40] *** Joins: logger56 (~Thunderbi@2.26.38.198)
[17:11:44] *** Joins: nirnam (~nirnam@1.47.74.246)
[17:11:52] * GumbyPAN welcomes ELLEDNERA - Raphael Jong Jun Jie to CPAN!
[17:11:59] <BinGOs> we are in your privilege, escalating
[17:12:17] *** Quits: yzhernand (~yzhernand@38-73-255-174.starry-inc.net) (Ping timeout: 258 seconds)
[17:12:31] *** Joins: yzhernand (~yzhernand@2607:fb90:7a43:c21d:5c19:b8ff:fe9e:e12e)
[17:12:50] *** Quits: logger56 (~Thunderbi@2.26.38.198) (Remote host closed the connection)
[17:17:06] *** Quits: yzhernand (~yzhernand@2607:fb90:7a43:c21d:5c19:b8ff:fe9e:e12e) (Ping timeout: 240 seconds)
[17:17:54] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[17:18:40] *** Joins: yzhernand (~yzhernand@64-18-144-8.starry-inc.net)
[17:20:45] *** Joins: a153 (~a153@185.191.177.22)
[17:23:02] *** Quits: yzhernand (~yzhernand@64-18-144-8.starry-inc.net) (Ping timeout: 258 seconds)
[17:23:02] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 258 seconds)
[17:23:14] *** Joins: yzhernand (~yzhernand@2607:fb90:7add:488d:e4bc:9cff:fe10:a8c0)
[17:26:53] * GumbyPAN CPAN Upload: App-DBBrowser-2.268 by KUERBIS https://metacpan.org/release/KUERBIS/App-DBBrowser-2.268
[17:30:47] *** Joins: pj (~pj@ghettoforge/pj)
[17:30:51] *** Joins: akaWolf (~akaWolf@akawolf.org)
[17:33:25] *** Quits: pizdets_ (~pizdets@183.182.111.67) (Ping timeout: 245 seconds)
[17:34:05] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 268 seconds)
[17:36:26] *** Quits: seoul_man (~meh@user/seoul-man/x-5066766) (Remote host closed the connection)
[17:42:48] *** Quits: yzhernand (~yzhernand@2607:fb90:7add:488d:e4bc:9cff:fe10:a8c0) (Ping timeout: 268 seconds)
[17:43:43] *** Joins: yzhernand (~yzhernand@2607:fb90:7add:488d:7cb4:9eff:fed5:1c97)
[17:43:47] *** Joins: Nahra` (~user@static.161.95.99.88.clients.your-server.de)
[17:45:06] *** Quits: Nahra (~user@static.161.95.99.88.clients.your-server.de) (Ping timeout: 252 seconds)
[17:46:52] *** Quits: woei (~woei@84-199-123-252.ifiber.telenet-ops.be) (Ping timeout: 246 seconds)
[17:47:02] *** Joins: pizdets (~pizdets@183.182.114.175)
[17:51:19] *** Joins: habamax (~habamax@user/habamax)
[17:54:13] *** Quits: mattil (~mattil@airio.portalify.com) (Remote host closed the connection)
[17:58:58] *** Joins: zakame (~zakame@user/zakame)
[18:06:43] *** Quits: yzhernand (~yzhernand@2607:fb90:7add:488d:7cb4:9eff:fed5:1c97) (Ping timeout: 240 seconds)
[18:06:57] *** Joins: yzhernand (~yzhernand@2607:fb90:7add:488d:48d8:9fff:fec1:2825)
[18:07:15] <simcop2387> Are there any known issues or things to watch for when using Mojo::Pg outside of Mojolicious directly? Specifically wanting to use it in an IO::Async program
[18:08:08] <simcop2387> I suspect I need to do a little finagling with the event loops at the start of the program to prevent them from causing trouble for eachother but other than that I don't know what else to watch out for.
[18:09:40] *** Quits: deadmarshal (~deadmarsh@95.38.114.168) (Ping timeout: 252 seconds)
[18:10:47] *** Joins: mattil (~mattil@airio.portalify.com)
[18:11:08] *** Quits: yzhernand (~yzhernand@2607:fb90:7add:488d:48d8:9fff:fec1:2825) (Ping timeout: 244 seconds)
[18:11:28] *** Joins: yzhernand (~yzhernand@129.85.9.189)
[18:12:07] *** Quits: mattil (~mattil@airio.portalify.com) (Remote host closed the connection)
[18:13:39] *** Quits: yzhernand (~yzhernand@129.85.9.189) (Read error: Connection reset by peer)
[18:13:58] *** Joins: seoul_man (~meh@user/seoul-man/x-5066766)
[18:14:32] *** Joins: yzhernand (~yzhernand@129.85.9.189)
[18:16:48] *** Quits: yzhernand (~yzhernand@129.85.9.189) (Read error: Connection reset by peer)
[18:17:45] *** Joins: yzhernand (~yzhernand@129.85.9.189)
[18:18:12] *** Joins: mattil (~mattil@dz6nywcm7c2rm9w-7yt-4.rev.dnainternet.fi)
[18:22:41] *** Quits: mattil (~mattil@dz6nywcm7c2rm9w-7yt-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:23:14] *** Joins: mattil (~mattil@airio.portalify.com)
[18:29:21] *** Quits: Tempesta (Tempesta@user/tempesta) (Quit: AdiIRC is updating to v4.1 Beta Build (2021/06/23 UTC) 64 Bit)
[18:29:35] *** Joins: Tempesta (Tempesta@user/tempesta)
[18:29:48] *** gordonfish- is now known as gordonfish
[18:30:03] *** Quits: SincereFox (uid337158@user/sincerefox) (Quit: Connection closed for inactivity)
[18:30:56] *** Quits: yzhernand (~yzhernand@129.85.9.189) (Ping timeout: 252 seconds)
[18:31:08] *** Joins: yzhernand (~yzhernand@129.85.9.189)
[18:31:51] *** Joins: mattil_ (~mattil@dz6nywcm7c2rm9w-7yt-4.rev.dnainternet.fi)
[18:33:17] *** Quits: mattil_ (~mattil@dz6nywcm7c2rm9w-7yt-4.rev.dnainternet.fi) (Remote host closed the connection)
[18:33:49] *** Joins: mattil_ (~mattil@airio.portalify.com)
[18:34:03] *** Quits: mattil (~mattil@airio.portalify.com) (Read error: Connection reset by peer)
[18:35:45] *** Joins: OnlineCop (~OnlineCop@user/onlinecop)
[18:41:50] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[18:43:08] <cornett> .
[18:43:15] <simcop2387> cornett: ,
[18:43:21] <El_Che> ;
[18:43:24] <El_Che> I win
[18:44:40] *** Quits: yzhernand (~yzhernand@129.85.9.189) (Ping timeout: 258 seconds)
[18:45:07] *** Joins: yzhernand (~yzhernand@129.85.9.189)
[18:45:14] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[18:45:32] *** Quits: mattil_ (~mattil@airio.portalify.com) (Remote host closed the connection)
[18:46:21] *** Joins: clf59 (~clf59@user/clf59)
[18:46:37] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[18:46:52] *** Joins: willthechill (~willthech@2600:1700:8c61:3ed0:429:e85:3a3a:a405)
[18:47:31] *** Joins: praxidyke (~praxidyke@107-219-53-104.lightspeed.lnngmi.sbcglobal.net)
[18:47:34] *** Joins: feriman (~feriman@188.163.113.127)
[18:51:27] *** Quits: clf59 (~clf59@user/clf59) (Quit: Textual IRC Client: www.textualapp.com)
[19:01:02] *** Joins: mattil (~mattil@dz6nywcm7c2rm9w-7yt-4.rev.dnainternet.fi)
[19:03:17] *** Quits: mattil (~mattil@dz6nywcm7c2rm9w-7yt-4.rev.dnainternet.fi) (Remote host closed the connection)
[19:03:23] *** Joins: mattil (~mattil@dz6nywcm7c2rm9w-7yt-4.rev.dnainternet.fi)
[19:03:45] *** Quits: mattil (~mattil@dz6nywcm7c2rm9w-7yt-4.rev.dnainternet.fi) (Remote host closed the connection)
[19:06:09] *** Joins: gast0n (~g4570n@user/gast0n)
[19:06:35] *** Quits: habamax (~habamax@user/habamax) (Ping timeout: 268 seconds)
[19:08:34] <pflanze> While writing the FunctionalPerl libraries, I'm finding myself writing methods that depend on another module very often. It's often relatively rarely used methods. I don't want to load all these dependencies via `use` upfront (due to memory and load time cost),
[19:08:55] <pflanze> so I'm `require`ing them. Also, often there are circular dependencies so `use` would be problematic anyway.
[19:09:26] <pflanze> But I still haven't benchmarked the cost of `require`. I *assume* that its just the cost of a hash lookup. Maybe I'm wrong?
[19:10:28] <pflanze> What is the right thing to do? I *could* move such methods out of Foo.pm to Foo/ExtendWithBar.pm, Foo/ExtendWithBaz.pm etc., so the user has to load those, which then monkey-patch the methods onto Foo, but I'm not sure that's the best solution.
[19:10:49] <simcop2387> circular dependencies will just happen to "work" most of the time, as far as the memory cost goes you probably won't notice any difference in anything long running.  what you will notice between the two is that require will cause a small hiccup at first use when it has to go load that code rather than at start time.  so you can end up with a trade off of faster start times but pay for the time
[19:10:55] <simcop2387> cost when you use it only.
[19:11:39] <simcop2387> the way that might use less memory might be to pull in those functions you use directly so that you don't need to use or require them and don't end up loading anything else there that you don't need or use
[19:11:41] <pflanze> Startup cost is pretty high when loading all of FunctionalPerl (~0.7 seconds on my work machine).
[19:12:03] <pflanze> And if I entangle everything that would be the cost even when loading 1 module :)
[19:13:10] <pflanze> "pull in those functions you use directly", not sure what you mean; I'm talking about methods, which is why the problem arises.
[19:13:17] <simcop2387> if you pull in that code that you use and then put it in a separate module that gets loaded when used (see AUTOLOAD to help you do this actually) then you can actually get most of the benefits of both.  What I'd do is make the Foo/ExtendWithBar.pm as capable of exporting the functions, and then in Foo.pm use AUTOLOAD to require and then call ->import() so that the functions get brought in
[19:13:23] <simcop2387> directly when used
[19:13:59] <pflanze> I could use AUTOLOAD to avoid loading the body of the method, yes. But it's usually small method bodies, the cost is in the dependency they use.
[19:14:01] <simcop2387> eval: package FOO; sub AUTOLOAD { say "AUTOLOAD METHOD IN FOO" }; $x = bless {}, 'FOO'; $x->method_that_doesnt_exist_yet()
[19:14:03] <perlbot> simcop2387: AUTOLOAD METHOD IN FOO AUTOLOAD METHOD IN FOO 
[19:14:15] <simcop2387> that happened twice because it also called DESTROY
[19:14:22] *** Joins: Martchus_ (~martchus@dynamic-095-118-160-096.95.118.pool.telefonica.de)
[19:14:29] *** Quits: a153 (~a153@185.191.177.22) (Quit: WeeChat 2.3)
[19:14:48] <pflanze> AUTOLOAD would just smoothen over the case of the Foo/ExtendWithBar approach.
[19:14:53] <simcop2387> yes
[19:15:40] <simcop2387> you can do the require and import parts inside AUTOLOAD so that it looks like a normal class/package/object, and then with the extended module just bring in only those few heavy things you actually need.  you could even split them up into separate dependency chains so that you don't always bring in everything at once too
[19:16:02] *** Quits: Martchus (~martchus@dynamic-095-114-091-231.95.114.pool.telefonica.de) (Ping timeout: 265 seconds)
[19:16:12] <simcop2387> that's actually sort of the purpose of AUTOLOAD (i believe it was really to aid in doing loading of XS stuff at run time for similar performance reasons)
[19:16:15] <pflanze> IIRC some people think AUTOLOAD should be avoided. I don't really know the reasoning there either though.
[19:17:25] <pflanze> I think if require is really as cheap as a test for $INC{"Foo.pm"} underneath then my current approach is probably the most light-weight and sensible.
[19:18:13] <simcop2387> generally using AUTOLOAD has overhead so doing it for everything can be an issue since it all happens at runtime too.  *but* if you're using it to avoid loading something that might not be used and only load it when needed that's kinda the point of it existing.  you do give up some of the basic perl stuff of it knowing which methods actually exist, so ->can() won't work until you first call one
[19:18:19] <simcop2387> of those methods.  so you have to redo a bit of the work perl does for you to do things properly.  but if the costs of loading that are high then it can be worth it
[19:19:38] *** Joins: a153 (~a153@user/a153)
[19:19:56] <simcop2387> you can probably also do a bunch of stub methods that call the loading code and replace them but i'm not sure how well that works
[19:20:22] <pflanze> Ah, that's an idea I'm actually using in some places (to avoid circular dependencies).
[19:20:35] <pflanze> Good to keep in mind, right.
[19:20:43] <simcop2387> like with all perl things there's more than one way to do it :)
[19:20:49] <pflanze> Hehe:)
[19:21:33] <Adura> Including "do"-ing it.
[19:21:35] <simcop2387> the issue with doing that is that then you must always know which methods are going to be loadable before hand so it doesn't work if you're plugging things in at run time usually.
[19:28:19] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[19:30:01] *** Quits: wesm (~wes@firewall.mitsi.com) (Ping timeout: 268 seconds)
[19:31:12] <pflanze> The topic is related to extending functionality of class Foo without changing Foo.pm (by other authors). If there were a way to do this without risk of being destructive (monkey patching) that would also be the way to solve my issue.
[19:31:58] <pflanze> I'm still pondering writing a method dispatch infrastructure that allows for local extensibility.
[19:32:34] *** Quits: Martchus_ (~martchus@dynamic-095-118-160-096.95.118.pool.telefonica.de) (Ping timeout: 250 seconds)
[19:33:44] *** Joins: Martchus (~martchus@2a01:c22:6e7b:7800:d250:99ff:fe49:3cce)
[19:33:47] <pflanze> (re "loading code and replace them", this is what I mean / I'm doing: `sub null() { require FP::List; no warnings "redefine"; *null = \&FP::List::null; goto \&FP::List::null }`)
[19:34:30] *** Quits: yzhernand (~yzhernand@129.85.9.189) (Ping timeout: 258 seconds)
[19:34:44] *** Joins: yzhernand (~yzhernand@2607:fb90:7add:488d:2472:c3ff:fe1b:bef1)
[19:35:05] *** Joins: tcohen (~tcohen@186.12.104.80)
[19:35:27] <genio> I think my main objection to AUTOLOAD is that it was used fairly frivolously in some of the things I worked with. 
[19:36:42] *** Joins: deadmarshal (~deadmarsh@95.38.114.168)
[19:36:59] <pflanze> I really think I don't need AUTOLOAD for the cases I'm talking about and the "replace them" approach above (basically manual, explicit autoloading) is the better approach. Could use a module that abstracts this idiom so it's less to write, though.
[19:37:39] *** Joins: thrig (~thrig@65.113.153.50)
[19:41:34] <Altreus> AUTOLOAD makes it very hard to reason about code in future so it really has to be front-and-centre of any module that uses it
[19:41:49] <Altreus> ctags won't find it, that's for sure
[19:43:54] <pflanze> Good point.
[19:45:30] <pflanze> Which ctags implementation do you recommend, and is it extensible? Because then it would find my "def foo=> ..." thing that defines *foo, and likewise if I make a module to define proxies such as the null one above, it could find those, too.
[19:45:38] <simcop2387> pflanze: yea that replace code is basically the right thing.  I *think* it can be made more generalized so that there's less boilerplate per function though
[19:45:58] <Altreus> I just have whatever's in apt: exuberant-ctags I think
[19:46:05] <Altreus> actually I have no control over what's installed at work
[19:46:14] <Altreus> I just do :!ctags -R whenever vim says not found
[19:46:32] <pflanze> OK, will have to look into that.
[19:46:47] <Altreus> I'm sure it's extensible because it needed to be taught about sub foo and package Foo in the first place
[19:46:58] *** Quits: feriman (~feriman@188.163.113.127) (Ping timeout: 265 seconds)
[19:47:11] <Altreus> I have vague memories of hearing that someone already taught it about moose ... I should look into that
[19:48:10] <Altreus> hrm it's a feature request on universal-ctags, whatever that is. https://github.com/universal-ctags/ctags/issues/2067
[19:48:11] <Paperbot> Link title(s): [ Feature Request: Perl Attributes with (has) Â· Issue #2067 Â· universal-ctags/ctags Â· GitHub ]
[19:48:32] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:49:07] *** Joins: wesm (~wes@firewall.mitsi.com)
[19:49:28] <xenu> exuberant-ctags is dead, universal-ctags is its maintained fork
[19:49:38] <Altreus> aha
[19:50:30] <Altreus> haven't used it anywhre but at work for quite some time
[19:50:36] <zgu> was its exuberance too irrational?
[19:50:48] <thrig> fascinating
[19:51:06] <simcop2387> pflanze: sub _replace_fp_list { my ($pack, $filename, $line, $sub) = caller(); require 'FP::List'; no warnings "redefine"; no strict 'refs'; my $symbol = "$pack::$sub"; *{$symbol} = \&{"FP::List::$sub"}; }; sub null {_replace_fp_list(); goto &FP::List::null}
[19:51:22] <simcop2387> I *think* that's roughly how you could generalize it so there's less boilerplate in each function
[19:51:30] <simcop2387> but it's been a while since i've done that kind of thing
[19:52:48] <Altreus> Replacing a function with a loaded version the first time it is called should be commonplace
[19:52:52] <pflanze> I think I'd do something that allows me to write `def_proxy null => "FP::List::null";`
[19:53:13] <Altreus> I guess that's what JIT parsing is
[19:53:21] <Altreus> er, compiling
[19:54:04] <pflanze> Or even `def_proxies_to "FP::List", qw(null cons list);`
[19:54:29] <pflanze> But again, this will need an extension for ctags so it finds those.
[19:54:51] <simcop2387> pflanze: yea you could make a helper that does that too.  the main thing is that you'll also give up things like ctags and ides seeing the function still.  though it'll be a hell of a lot less boiler plate for you.  i'd make it take a list of functions.  def_proxy null => "FP::List::null", notnull => "FP::List::notnull", ...;
[19:55:05] <pflanze> (OTOH, maybe you don't *need* to find the aliases, just the original FP::List::* ones.)
[19:55:27] <Altreus> A Moose answer to this is to have a lazy property that handles => [qw/foo bar baz/] and default => sub { require 'Module'; Module->new }
[19:57:52] <simcop2387> Altreus: oh that's a neat way to do it yea
[19:59:22] <Altreus> requires Moose though, so you probably lose the load times you save if you're not already using it
[20:01:38] *** Quits: tcohen (~tcohen@186.12.104.80) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[20:06:53] <daxim> any advice/expertise about hiring programmers on fiverr?  traps or anything I should know about?  how do the goods get typically delivered?
[20:09:25] <Altreus> I expect "don't" features a lot in the answer
[20:09:36] <simcop2387> i know upwork (nee odesk) used to be alright for short contract stuff, never seen fiverr used for it but i imagine it can work alright for that.
[20:09:54] *** Quits: yzhernand (~yzhernand@2607:fb90:7add:488d:2472:c3ff:fe1b:bef1) (Ping timeout: 264 seconds)
[20:10:21] *** Joins: yzhernand (~yzhernand@129.85.9.189)
[20:10:23] <vanfanel64> There was that fellow in the news a couple years before that kept his mother in a cage for 19 years, feeding her tofu and cat food and forcing her to use a sandbox
[20:10:40] <simcop2387> vanfanel64: wat
[20:10:42] <Altreus> was he a developer?
[20:10:59] <vanfanel64> Oh wrong window, focus error
[20:11:11] <Altreus> ok granted, but don't leave now
[20:11:20] <simcop2387> yea that raises too many questions
[20:17:38] *** Quits: randir (~randir@93.159.239.42) (Ping timeout: 252 seconds)
[20:19:52] <daxim> yes, like "austria?" or "belgium?"
[20:21:28] <thrig> what is the airspeed of an unladen belgium?
[20:22:46] <vanfanel64> Altreus, I believe that he was a veternarian that lost his job for selling animals that he intentionally misdiagnosed as needing to be put to sleep.
[20:24:40] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 265 seconds)
[20:28:28] *** Parts: art1 (~romeyke@p200300ccdf0908006b13cb28d384c5f3.dip0.t-ipconnect.de) ()
[20:30:08] <Altreus> The ruthlessness is horrific but the ingenuity is amazing
[20:30:32] *** Joins: finsternis (~X@23.226.237.192)
[20:31:11] <simcop2387> i can't imagine that the mother would be anything like a functional person after that long with that kind of treatment.  i don't know what if anything could really be done to help her (beyond of course getting her out of there)
[20:31:39] *** Joins: randir (~randir@95-25-113-192.broadband.corbina.ru)
[20:33:53] <vanfanel64> I agree. I also cannot imagine how some one can survive on that diet.
[20:35:50] <gordonfish> When Edward DantÃ¨s imprisoned in Chateau d'If looks like better treatment, you know it's bad
[20:35:57] <simcop2387> probably badly since it wouldn't have much vitamin c if any.  so i'd expect at least scurvy which would make any healing/wounds an issue
[20:37:14] <vanfanel64> Oh definitely
[20:37:16] <huf> isnt that Edmund?
[20:37:33] <huf> mond?
[20:38:36] <gordonfish> Yes Edmond, thanks
[20:38:39] *** Joins: woei (~woei@84-199-123-252.ifiber.telenet-ops.be)
[20:38:45] <pragma-> Speaking of "Yet another Perl Language Server", I'm really hoping the tree-sitter library GitHub uses for its jump-to-symbol and see-what-is-referencing-this-symbol feature finally finishes its Perl support (https://github.com/ganezdragon/tree-sitter-perl). I was just browsing a Go repo the other day and the jump-to-definition/find-all-references thing was incredibly useful and interesting.
[20:38:46] <Paperbot> Link title(s): [ GitHub - ganezdragon/tree-sitter-perl: a perl parser for javascript ]
[20:39:28] <pragma-> "a perl parser for javascript"
[20:40:33] <pragma-> screenshots of it in action here: https://docs.github.com/en/github/managing-files-in-a-repository/managing-files-on-github/navigating-code-on-github
[20:40:34] <Paperbot> Link title(s): [ Navigating code on GitHub - GitHub Docs ]
[20:40:55] <Grinnz> pflanze: the usual problems with AUTOLOAD are 1) it is significantly slower than calling a method that actually exists, 2) people do it wrong a *lot* and it's not easy to do it right
[20:41:00] * pragma- gestures sadly at the lack of "Perl" in the "Supported languages" list.
[20:41:08] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Remote host closed the connection)
[20:41:25] <Grinnz> https://metacpan.org/pod/Autoload::AUTOCAN is meant to solve 2, if you need it, but I struggle to think of cases where one should use it
[20:41:25] <Paperbot> Link title(s): [ Autoload::AUTOCAN - Easily set up autoloading - metacpan.org ]
[20:41:54] *** Quits: yzhernand (~yzhernand@129.85.9.189) (Ping timeout: 250 seconds)
[20:42:22] <Grinnz> usually, it's better with a layer that installs the loaded sub after the first time it's generated and not have the overhead of AUTOLOAD on subsequent calls, hence the install_subs option there
[20:43:18] <Grinnz> (also feel free to dig through its source to adapt what you actually need)
[20:43:55] <vanfanel64> What is a language server?
[20:44:22] <mst> Altreus: top of the line for the next reiserfs maintainer
[20:44:23] <thrig> the people who bring out the languages at a restaurant
[20:44:46] *** Joins: tcohen (~tcohen@192.141.149.57)
[20:44:48] <vanfanel64> Oh
[20:45:12] <thrig> (aparrently it's some complication with some softare used to edit code?)
[20:46:02] <Grinnz> 11:01:12 <pflanze> The topic is related to extending functionality of class Foo without changing Foo.pm (by other authors).
[20:46:06] <Grinnz> i use roles for this.
[20:46:29] *** Joins: rwbrambler (~Thunderbi@65.183.138.202)
[20:46:46] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:46:47] <Grinnz> my $patched_class = Some::Class->with::roles('+Foo');
[20:47:01] <Grinnz> Some::Class is not altered, but it returns a subclass that is
[20:47:02] <genio> vanfanel64: in a very hand-wavy explanation, a language server allows the editor to kind of know what's going on so that the editor can help you help yourself while writing code.
[20:47:14] * GumbyPAN CPAN Upload: Robots-Validate-v0.2.4 by RRWO https://metacpan.org/release/RRWO/Robots-Validate-v0.2.4
[20:47:36] <Grinnz> and alternatively and most useful: $obj->with::roles('Some::Class::Role::Foo'); just that object has the altered subclass now
[20:48:42] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 240 seconds)
[20:48:56] <Grinnz> genio++ # actually answering the question
[20:49:12] *** Joins: kensanata (~user@user/kensanata)
[20:49:44] <Altreus> genio++ # I didn't know the answer myself
[20:50:21] <thrig> so, Clippy?
[20:50:48] <Altreus> It looks like you're writing a spambot
[20:53:16] *** Quits: ufobat (~martin@dynamic-077-009-028-145.77.9.pool.telefonica.de) (Ping timeout: 268 seconds)
[20:53:25] <vanfanel64> Writing a spambot? Bing can help! Use it with Edge!
[20:54:01] <pragma-> Of course, any generic symbol-lookup provider is going to have a fun time with AUTOLOAD and other Perl tricks. Sigh.
[20:55:05] *** Joins: yzhernand (~yzhernand@129.85.9.189)
[20:55:10] *** Joins: Pali (~pali@user/pali)
[20:55:11] <gchristensen> vanfanel64, Altreus: the page for the language server protocol is a pretty good, succinct explanation of the problem and proposed solution: https://langserver.org/
[20:55:12] <Paperbot> Link title(s): [ Langserver.org ]
[20:55:34] <Altreus> interesting!
[20:55:40] <Altreus> I will add it to the list of things to get around to
[20:55:56] <gchristensen> I mean, I wouldn't worry about it
[20:56:47] <Altreus> I like knowing stuff
[20:56:53] <daxim> also worth knowing, top detractor's (jon blow) opinion of the concept:  https://youtu.be/pW-SOdj4Kkk?t=2547
[20:56:53] <Paperbot> YouTube video linked by daxim: Jonathan Blow - Preventing the Collapse of Civilization (English only) - published by Alexander Bus
[20:56:54] <Paperbot> Link title(s): [ Jonathan Blow - Preventing the Collapse of Civilization (English only) - YouTube <https://www.youtube.com/watch?t=2547&v=pW-SOdj4Kkk&feature=youtu.be> ]
[20:59:16] *** Joins: akaWolf (~akaWolf@akawolf.org)
[21:00:17] *** Quits: pizdets (~pizdets@183.182.114.175) (Quit: pizdets)
[21:01:05] *** Joins: pj (~pj@ghettoforge/pj)
[21:02:57] *** Joins: pizdets (~pizdets@183.182.114.175)
[21:03:04] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Quit: leaving)
[21:03:56] *** apathor_ is now known as apathor
[21:17:21] *** Quits: brtastic (~Thunderbi@185.24.91.138) (Ping timeout: 265 seconds)
[21:17:32] <simcop2387> daxim: i can't say i entirely agree with him on that because he's glossing over and ignoring the problem that he just goes, "oh that's just re-inventing a library".  making a library that works in Javascript, Java, C#, ObjC, C, C++, Lisp, etc. all at the same time and be maintainable is so completely non-trivial that it's just not even funny to suggest that it's an alternative
[21:18:36] <simcop2387> yea you end up with a distributed system, but the trade off is that you can now use a "library" for whatever language from whatever editor where everything can have first class support in your editor
[21:20:11] *** Quits: tcohen (~tcohen@192.141.149.57) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:24:10] <daxim> leave out the functionality, assume it's the same for approach "language server" and approach "language introspection libraries".  the difference is in the interface.  I have doubts that json-over-rpc is better than what we had since the 1990s? 1980s?
[21:25:09] <simcop2387> generally back then you had separate editors for different languages if you wanted that kind of thing
[21:25:21] <simcop2387> or you didn't have the same functionality
[21:25:49] <thrig> sounds like the language server implementations have different functionality, depending on the language
[21:26:10] <simcop2387> thrig: they tend to yes
[21:26:41] <simcop2387> daxim: That's why you had IDEs like the ones shipped with Borland Turbo{C,C++,Pascal} and I'm sure there's dozens of others I wasn't exposed to
[21:30:02] <mst> daxim: a JSON-over-RPC protocol that everybody mostly agrees on is still a huge win - the tech itself isn't necessarily better than the tech we had before, but the 'rough consensus and running code' part is valuable in and of itself
[21:30:42] <mst> daxim: also the C ABI doesn't really scale well to integrating e.g. multiple garbage collected runtimes within a single process
[21:31:26] <mst> basically, the language server protocol is a "success by worse is better" story to my mind
[21:33:44] <Altreus> what is RPC that JSON can be sent over? As opposed to JSON-RPC, which is RPC-over-JSON?
[21:33:51] <Altreus> or via, I suppose
[21:34:03] <Altreus> usually -over-HTTP
[21:34:10] <xenu> tree-sitter is an interesting alternative to *some* of the problems that LSP is trying to solve
[21:35:23] <xenu> s/ive \Kto/for/
[21:35:59] <Altreus> Thanks, now I'm overthinking the difference between "alternative to" and "alternative for"
[21:36:50] <xenu> lol
[21:37:13] <Altreus> ah I see it now
[21:37:18] <Altreus> had to background-process for a while
[21:37:36] <Altreus> yes, it would be a bit mean to just describe tree-sitter as a problem
[21:37:52] <Altreus> Mind you, programming is like maths: a new problem is progress
[21:38:36] <thrig> "problem: java is big and slow. how can we create competition for that?"
[21:40:13] <Altreus> instead of reading this article and watching that video I'm going to watch A Crap Guide To D&D
[21:40:25] <Altreus> Probably tells me the same amount, but is better presented
[21:40:47] <thrig> not sure why Carp are involved
[21:41:32] <Altreus> seems fishy, I agree
[21:42:31] <thrig> so to hit the platonic ideal carp (crap #0) we roll what is called THAC0, and use that to...
[21:43:18] <LeoNerd> Oh, people discussing langserve again
[21:43:45] <LeoNerd> Has anyone made me a good "start from here" point yet? I recall buu made a beginning but that's still miles away from where I can really take over from
[21:43:58] <LeoNerd> Who do I have to pay to write that for me?
[21:45:49] *** Quits: nuclightq (~quasselxp@broadband-77-37-180-193.ip.moscow.rt.ru) (Quit: quassel-irc.org - client with remote GUI)
[21:49:24] *** choroba is now known as choroba_
[21:49:33] <simcop2387> xenu: if i ever have the time i'm planning on working on a perl version of that tree-sitter perl parser and see how well it can parse most perl stuff.  if it gets good enough i think it'd work well as a better parser for an LSP for perl (along with making one that doesn't fucking use Coro)
[21:49:45] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[21:50:03] *** Quits: choroba_ (~E.Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[21:50:09] <simcop2387> LeoNerd: dunno who to pay but as long as it's an LS that doesn't use Coro it'll be an improvement
[21:52:11] *** Quits: jplesnik (~jplesnik@83.240.60.17) (Quit: Leaving)
[21:52:21] <xenu> first we have to implement a new threading system
[21:54:23] *** Joins: nuclightq (~quasselxp@broadband-77-37-180-193.ip.moscow.rt.ru)
[21:54:26] *** Quits: bs338 (~pi@host109-153-209-171.range109-153.btcentralplus.com) (Ping timeout: 252 seconds)
[21:54:44] *** Joins: tcohen (~tcohen@192.141.149.57)
[21:56:11] *** Joins: bs338 (~pi@host217-44-229-46.range217-44.btcentralplus.com)
[21:56:22] *** Quits: nuclightq (~quasselxp@broadband-77-37-180-193.ip.moscow.rt.ru) (Client Quit)
[21:56:59] *** Quits: johnjay (~pi@38.120.10.99) (Ping timeout: 265 seconds)
[21:57:33] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[21:57:56] <Altreus> surely you don't have to write the LSP for perl in perl
[21:58:23] <Altreus> write it in java, what could go wrong
[21:58:37] *** Joins: johnjay (~pi@38.120.10.99)
[21:58:45] <thrig> the shell script to stand up the jvm could be buggy, the jvm could be buggy, the java could be buggy, 
[22:00:02] <Altreus> I wasn't expecting an answer :P
[22:00:09] <Altreus> I don't think it needed one
[22:00:23] <thrig> I've dealt with all of the above in production
[22:05:06] *** Joins: nuclightq (~quasselxp@broadband-77-37-180-193.ip.moscow.rt.ru)
[22:10:38] *** Quits: rwbrambler (~Thunderbi@65.183.138.202) (Quit: rwbrambler)
[22:17:11] *** Quits: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) (Quit: Leaving.)
[22:30:57] *** Joins: magla (~gelignite@55d434ed.access.ecotel.net)
[22:35:39] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 265 seconds)
[22:36:28] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[22:48:24] *** Joins: akaWolf (~akaWolf@akawolf.org)
[22:48:48] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[22:57:32] *** Quits: yzhernand (~yzhernand@129.85.9.189) (Ping timeout: 250 seconds)
[22:58:22] *** Joins: yzhernand (~yzhernand@2607:fb90:7adf:9ceb:48dd:afff:fe87:1b6)
[22:59:14] *** Parts: ray (~ray@user/re) (WeeChat 3.1)
[23:01:27] * GumbyPAN CPAN Upload: Archive-Libarchive-Peek-0.03 by PLICEASE https://metacpan.org/release/PLICEASE/Archive-Libarchive-Peek-0.03
[23:04:06] *** Quits: a153 (~a153@user/a153) (Quit: WeeChat 2.3)
[23:06:33] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[23:11:42] *** Joins: a153 (~a153@user/a153)
[23:15:29] *** Joins: clf59 (~clf59@user/clf59)
[23:26:28] *** Quits: brunoramoslu (~brunoramo@94.252.122.169) (Ping timeout: 252 seconds)
[23:39:26] *** Joins: brunoramoslu (~brunoramo@94.252.122.12)
[23:40:20] *** Joins: mattil (~mattil@87-92-27-13.bb.dnainternet.fi)
[23:40:59] *** Quits: deadmarshal (~deadmarsh@95.38.114.168) (Ping timeout: 258 seconds)
[23:44:46] *** Quits: mattil (~mattil@87-92-27-13.bb.dnainternet.fi) (Ping timeout: 250 seconds)
[23:47:06] <genio> perl 5.16.  *cries*
[23:54:38] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[23:55:34] <Grinnz> hey you get __SUB__ and keywords!
[23:56:20] <curdlesnoot> keywords were in 5.14, weren't they?
[23:56:33] * GumbyPAN CPAN Upload: App-perlimports-0.000012 by OALDERS https://metacpan.org/release/OALDERS/App-perlimports-0.000012
[23:56:47] <curdlesnoot> oh, 5.12 even.
[23:57:20] <Grinnz> curdlesnoot: depends, 5.12 keyword support wasn't really complete
[23:57:29] <curdlesnoot> oh.
[23:58:14] *** Joins: Guest9 (~Guest9@43.241.144.49)
[23:59:25] <Grinnz> the thing about the keyword API is it's XS... so there isn't so much API as "what internal functions are available and supported for your use in that version of perl"
[23:59:52] <curdlesnoot> I see.
