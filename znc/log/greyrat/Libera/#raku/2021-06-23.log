[05:25:27] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[05:27:41] *** Quits: japhb (~geoff@mugs/japhb) (Quit: leaving)
[05:29:42] <SmokeMachine> Does anyone know a fix for this? https://github.com/raku-community-modules/Test-Output/issues/6
[05:31:59] *** Joins: japhb (~geoff@mugs/japhb)
[05:32:45] <moon-child> probably the api should be redesigned to take an array of lines for 'expected' and call .lines on the result of the function
[05:35:09] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[05:40:39] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 265 seconds)
[05:54:33] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[05:59:01] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 265 seconds)
[05:59:11] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[06:00:54] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[06:09:02] *** Quits: m6502 (~6502@2600:8805:d800:b3e::2a2) (Quit: Leaving)
[06:10:50] <codesections> guifa: that looks like about the most readable nqp I've seen :D
[06:12:16] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[06:16:54] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 265 seconds)
[06:20:24] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[06:25:07] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 265 seconds)
[06:26:21] <rassoc> noob question regarding that code: why bother with nqp::if when the regular if would be more readable? perf seems to be the same, according to this answer: https://stackoverflow.com/questions/55107267/what-is-the-difference-between-nqpif-and-if-in-an-nqp-file/55107548#55107548
[06:30:01] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[06:33:20] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[06:33:53] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[06:34:28] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 252 seconds)
[06:38:18] <codesections> Wait, I think I'm missing something, rassoc.  What in that answer tells us that there's no perf difference? 
[06:40:16] <rassoc> wouldn't perf be listed under notable differences if it was significant?
[06:42:58] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[06:46:27] <codesections> Hmm, I'm not sure.  That seems like some evidence, but not 100%.  In particular, I thought that some (all?) of the perf cost of an `if` came from building a new lexical scope, which is the second bullet 
[06:47:48] <codesections> (the perf cost of it versus other conditionals, I mean – obviously branching code is going to lead to branch prediction misses/less optimized code in general, but that goes for any branching/condititioal)
[06:54:38] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 252 seconds)
[06:55:41] <rassoc> well, what the heck do i know. all my raku stuff runs like arse, not yet qualified to contribute on that front ;)
[06:56:07] <codesections> well, don't take my word for it, that's for sure!
[07:27:29] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[07:32:02] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 252 seconds)
[07:42:40] *** Quits: rassoc (~rassoc@139.174.228.245) (Ping timeout: 252 seconds)
[07:45:11] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[07:47:46] <moon-child> I want to pass a Buf into a nativecall function.  Is there a way to do that?
[07:48:51] <moon-child> looks like nativecast(Pointer) will do it
[07:50:44] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 252 seconds)
[08:14:37] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[08:16:27] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 244 seconds)
[08:31:14] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Write error: Connection reset by peer)
[08:32:44] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[08:33:43] <moon-child> m: use NativeCall; my Pointer $x; say nativecast(size_t, $x)
[08:33:44] <camelia> rakudo-moar 2a13c31b8: OUTPUT: «(signal SEGV)»
[08:33:45] *** Joins: frost (~frost@59.71.242.236)
[08:33:53] <moon-child> ^ is that right?  Shouldn't it print 0?
[08:37:18] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 252 seconds)
[08:50:18] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[08:54:32] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[08:54:43] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 258 seconds)
[09:17:58] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[09:21:47] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[09:26:09] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 258 seconds)
[09:43:21] <tonyo> what is your Buf of?
[09:43:28] <tonyo> Buf[uint8] ?
[09:44:01] <moon-child> yeah
[09:45:26] <tonyo> you likely just want to pass uint8[] and the size
[09:46:21] <tonyo> whatever func(unsigned int xs[], int xl) 
[09:47:02] <tonyo> or whatever your actual compiler type is func(uint8_t xs[] ..)
[09:47:27] <moon-child> no, it's a string
[09:47:54] <moon-child> Str on raku side, buffer (not nul-terminated) on c side
[09:48:07] <tonyo> buffer of unsigned chars, then?
[09:48:31] <tonyo> or wide chars?
[09:48:57] <moon-child> regular size chars
[09:49:27] <moon-child> nativecast(Pointer) seems to do the job
[09:49:41] <tonyo> oh, those fools. you can cast pointer but you'll still want the length
[09:49:55] <tonyo> unless it's always fixed
[09:49:57] <moon-child> well, yeah, but that's easy
[09:50:18] <tonyo> not if you can't count
[09:50:44] *** Quits: codesections (~user@2600:1700:1650:1faf:cd98:5950:7676:3fc4) (Remote host closed the connection)
[10:08:19] *** Joins: ufobat__ (~martin@dynamic-077-009-028-145.77.9.pool.telefonica.de)
[10:13:07] *** Quits: ufobat__ (~martin@dynamic-077-009-028-145.77.9.pool.telefonica.de) (Remote host closed the connection)
[10:19:03] <guifa> oof
[10:19:37] <guifa> I did something that's slowing down my dateish.fmt code.  Suddenly got to be an order of magnitude slower =\
[10:21:07] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[10:25:34] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 258 seconds)
[10:28:34] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-243.092.076.pools.vodafone-ip.de)
[10:29:51] <guifa> But … I'm a good 50% faster than sprintf generating a similar string, so I guess it's not terrible then given I'm handling all the same padding features.
[10:31:22] <moon-child> maybe you should submit a patch to improve sprintf's performance!
[10:32:51] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:34:20] *** Joins: reportable6 (~rep-able@ns306169.ip-94-23-219.eu)
[10:37:09] <guifa> moon-child: there's probably a little bit more going on under the hood with sprintf
[10:37:37] <guifa> but lizmat has been working on optimizing sprintf via caching the formatters, I don't think that's in the master branch just yet
[10:39:47] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[10:40:07] <guifa> I'll do the same to my code once that's done and given that doing .&{ .year ~ '-' ~ .month ~ '-' .day } is currently about 30x faster than .fmt('%Y-%m%d') and about 60x faster than sprintf('%d-%d-%d', $date.year, $date.month, $date.day), I'd imagine the cached method will bear some pretty substantially improvements
[10:40:18] <guifa> s/once that's done/once RakuAST is done
[10:44:10] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 252 seconds)
[10:45:35] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[10:50:10] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 268 seconds)
[10:54:55] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[10:58:06] *** Quits: Eddward (~Eddward@207.138.204.132) (Ping timeout: 252 seconds)
[11:33:39] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[11:38:04] *** Quits: _ed ([11:50:32] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[11:50:51] *** Joins: ufobat (~martin@dynamic-077-009-028-145.77.9.pool.telefonica.de)
[11:50:52] *** Joins: leah2 (~leah@vuxu.org)
[12:01:47] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[12:15:28] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 252 seconds)
[12:26:00] *** Joins: dakkar (~dakkar@home.thenautilus.net)
[12:34:16] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[12:38:35] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 258 seconds)
[12:45:03] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[12:50:32] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[12:55:04] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 258 seconds)
[13:06:24] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[13:10:50] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 252 seconds)
[13:37:46] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[13:42:13] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 258 seconds)
[13:42:46] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[14:03:18] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Remote host closed the connection)
[14:03:51] *** Joins: rassoc (~rassoc@139.174.228.245)
[14:03:53] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[14:06:44] *** Quits: squashable6 (~squ-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[14:07:37] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[14:07:44] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[14:12:26] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 268 seconds)
[14:40:29] *** Quits: b2gills (~brad@64.191.7.0) (Ping timeout: 258 seconds)
[14:40:45] *** gfldex is now known as gfldex_
[14:40:48] *** gfldex_ is now known as gfldex
[14:41:58] *** gfldex is now known as gfldex_
[14:42:02] *** gfldex_ is now known as gfldex
[14:43:57] *** gfldex is now known as gfldex_
[14:44:06] *** gfldex_ is now known as gfldex
[14:47:22] *** Joins: Doc_Holliwood (~holli@dslb-092-076-011-243.092.076.pools.vodafone-ip.de)
[14:55:33] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[14:56:36] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[14:57:30] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[14:59:03] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[14:59:20] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[14:59:40] <gfldex> Discord bridge test.
[15:00:21] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 265 seconds)
[15:05:57] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[15:06:55] *** Joins: patrickb (~patrickb@85-22-61-234.ip.dokom21.de)
[15:10:30] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 265 seconds)
[15:13:25] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[15:13:39] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[15:13:50] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:15:20] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-243.092.076.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[15:16:33] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[15:16:55] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[15:19:44] *** Joins: Doc_Holliwood (~holli@dslb-178-010-216-099.178.010.pools.vodafone-ip.de)
[15:23:02] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 258 seconds)
[15:24:45] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[15:25:33] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[15:26:04] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-de[15:54:19] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[16:02:54] *** Quits: Doc_Holliwood (~holli@dslb-178-010-216-099.178.010.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[16:19:43] *** Quits: patrickb (~patrickb@85-22-61-234.ip.dokom21.de) (Ping timeout: 246 seconds)
[16:21:48] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[16:26:17] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 258 seconds)
[16:32:51] *** Quits: reportable6 (~rep-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[16:33:30] *** Joins: reportable6 (~rep-able@ns306169.ip-94-23-219.eu)
[16:34:56] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[16:41:01] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (Read error: Connection reset by peer)
[16:42:36] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[16:44:31] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[16:47:18] *** Joins: Doc_Holliwood (~holli@dslb-178-010-216-099.178.010.pools.vodafone-ip.de)
[16:47:40] *** Quits: MasterDuke (~MasterDuk@94.7.197.239) (Ping timeout: 272 seconds)
[16:50:03] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 258 seconds)
[17:00:30] *** Joins: jdporter (~jdporter@ip68-100-27-173.dc.dc.cox.net)
[17:02:52] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[17:04:42] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[17:07:34] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 268 seconds)
[17:07:57] *** Quits: frost (~frost@59.71.242.236) (Quit: Connection closed)
[17:11:03] *** Quits: jdporter (~jdporter@ip68-100-27-173.dc.dc.cox.net) (Quit: Connection closed)
[17:11:44] *** Joins: nirnam (~nirnam@1.47.74.246)
[17:18:46] *** Parts: nirnam (~nirnam@1.47.74.246) ()
[17:31:46] *** Joins: Eddward (~Eddward@207.138.204.132)
[17:37:47] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[17:44:16] *** Quits: jast (jast@zoidberg.org) (Ping timeout: 244 seconds)
[17:45:33] *** Quits: timo (~timo@shells.aperture-labs.org) (Ping timeout: 252 seconds)
[17:46:37] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 265 seconds)
[17:47:10] *** Joins: timo (~timo@shells.aperture-labs.org)
[17:47:59] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[17:50:15] *** Joins: jast (jast@zoidberg.org)
[17:53:08] *** Joins: b2gills (~brad@64.191.7.0)
[18:29:48] *** gordonfish- is now known as gordonfish
[18:29:52] *** Quits: smarton (~smarton@2a01:4f9:c010:4e92::1) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[18:32:41] *** Joins: smarton (~smarton@121407.xyz)
[18:41:16] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[18:43:49] *** Joins: Sgeo (~Sgeo@user/sgeo)
[18:56:47] *** Quits: rassoc (~rassoc@139.174.228.245) (Quit: Quit)
[18:59:40] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[19:04:13] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 258 seconds)
[19:06:44] *** Joins: suman (~suman@27.34.50.64)
[19:07:08] <suman> m:my $num = 20129201828;my @arr= 2018..2020;if $num ~~/@arr.any/ { say "Matches"}
[19:07:09] <evalable6> suman, rakudo-moar ad94ef1d6: OUTPUT: «»
[19:09:12] <suman> m:my $num = 2012920128282020;my @arr= 2018..2020;if $num ~~/2018|2019|2020/ { say "Matches"}
[19:09:13] <evalable6> suman, rakudo-moar ad94ef1d6: OUTPUT: «Matches␤»
[19:10:05] <suman> m: my $num = 2012920128282020;my @arr= 2018..2020;if $num ~~/{2018..2020}/ { say "Matches"}
[19:10:05] <camelia> rakudo-moar ad94ef1d6: OUTPUT: «Matches␤»
[19:12:06] <suman> m: my $num = 2012920128;if $num ~~/{2018..2020}/ { say "Matches"}
[19:12:06] <camelia> rakudo-moar ad94ef1d6: OUTPUT: «Matches␤»
[19:12:10] *** Quits: Doc_Holliwood (~holli@dslb-178-010-216-099.178.010.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[19:12:30] <suman> Why is this code matching? Isn't it supposed to not match?
[19:12:44] <suman> m: my $num = 2012920128;if $num ~~/{2018..2020}/ { say "Matches"}
[19:12:44] <camelia> rakudo-moar ad94ef1d6: OUTPUT: «Matches␤»
[19:22:59] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[19:23:28] <moritz> you never told raku that you want to match a full string
[19:23:36] <moritz> so it searches for a substring
[19:24:13] <moritz> m: my $num = 20129201828; my @range = 2018...2020; say $/ if $num ~~ /^@range$/
[19:24:13] <camelia> rakudo-moar ad94ef1d6: ( no output )
[19:24:17] <moritz> m: my $num = 20129201828; my @range = 2018...2020; say $/ if $num ~~ /^@range/
[19:24:17] <camelia> rakudo-moar ad94ef1d6: ( no output )
[19:24:29] <moritz> m: my $num = 2029201828; my @range = 2018...2020; say $/ if $num ~~ /^@range/
[19:24:29] <camelia> rakudo-moar ad94ef1d6: ( no output )
[19:24:36] <moritz> m: my $num = 2019201828; my @range = 2018...2020; say $/ if $num ~~ /^@range/
[19:24:36] <camelia> rakudo-moar ad94ef1d6: OUTPUT: «｢2019｣␤»
[19:24:39] <moritz> m: my $num = 2019201828; my @range = 2018...2020; say $/ if $num ~~ /^@range$/
[19:24:39] <camelia> rakudo-moar ad94ef1d6: ( no output )
[19:24:54] <moritz> but if you just want to check a number, no need to go for a regex
[19:25:06] <moritz> m: say 2019 ~~ 2018..2020
[19:25:06] <camelia> rakudo-moar ad94ef1d6: OUTPUT: «True␤»
[19:25:11] <moritz> m: say 201933 ~~ 2018..2020
[19:25:11] <camelia> rakudo-moar ad94ef1d6: OUTPUT: «False␤»
[19:25:34] *** Joins: Doc_Holliwood (~holli@dslb-178-010-216-099.178.010.pools.vodafone-ip.de)
[19:28:10] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 268 seconds)
[19:33:05] <suman> m: my $num = 2019201828; my @range = 2018...2020; say $/ if $num ~~ /@range/;
[19:33:05] <camelia> rakudo-moar ad94ef1d6: OUTPUT: «｢2019｣␤»
[19:33:17] <suman> m: my $num = 2019201828; say $/ if $num ~~ /{2018...2020}/;
[19:33:17] <camelia> rakudo-moar ad94ef1d6: OUTPUT: «｢｣␤»
[19:34:02] <suman> Is it possible to keep raku expression within regex?
[19:34:05] <suman> m: my $num = 2019201828; say $/ if $num ~~ /{2018...2020}/;
[19:34:06] <camelia> rakudo-moar ad94ef1d6: OUTPUT: «｢｣␤»
[19:34:38] <suman> in this example range within regex directly
[19:41:31] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[19:42:43] <moritz> m: my $num = 2019201828; say $/ if $num ~~ /<{2018...2020}>/
[19:42:43] <camelia> rakudo-moar ad94ef1d6: OUTPUT: «｢2019｣␤»
[19:43:08] <moritz> see https://docs.raku.org/language/regexes#Regex_interpolation
[19:49:11] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[19:49:14] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[19:49:27] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 258 seconds)
[19:50:11] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[19:51:42] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[20:00:04] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[20:01:32] <gfldex> Discord bridge test.
[20:02:03] <RandalSchwartz> seriously?  I can get rid of adium and just use discord?
[20:02:15] <gfldex> not quite yet
[20:02:45] <gfldex> For now I only implemented IRC -> Discord. IRC <-> Discord needs more thinking.
[20:03:15] <gfldex> Those Dicord Inc folk really like their rate limiting. :-/
[20:16:40] *** Quits: Doc_Holliwood (~holli@dslb-178-010-216-099.178.010.pools.vodafone-ip.de) (Ping timeout: 258 seconds)
[20:25:39] *** Quits: suman (~suman@27.34.50.64) (Quit: Client closed)
[20:33:10] *** Joins: amishpa (~amishpa@c-71-58-227-202.hsd1.pa.comcast.net)
[20:39:22] *** Quits: amishpa (~amishpa@c-71-58-227-202.hsd1.pa.comcast.net) (Quit: Connection closed)
[20:51:42] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[20:53:16] *** Quits: ufobat (~martin@dynamic-077-009-028-145.77.9.pool.telefonica.de) (Ping timeout: 268 seconds)
[20:56:08] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 252 seconds)
[21:06:27] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[21:10:56] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 250 seconds)
[21:15:42] *** Quits: dakkar (~dakkar@home.thenautilus.net) (Ping timeout: 258 seconds)
[21:21:01] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[21:25:28] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 252 seconds)
[21:29:27] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[21:33:57] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[21:34:03] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[21:34:27] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[21:40:28] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[21:42:18] *** Joins: notzmv (~zmv@user/notzmv)
[21:45:23] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 265 seconds)
[21:50:44] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[21:53:47] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[21:57:25] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[22:01:38] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 250 seconds)
[22:07:51] *** Joins: MoC (~moc@user/moc)
[22:17:11] *** Quits: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) (Quit: Leaving.)
[22:32:51] *** Quits: reportable6 (~rep-able@ns306169.ip-94-23-219.eu) (Remote host closed the connection)
[22:33:26] *** Joins: reportable6 (~rep-able@ns306169.ip-94-23-219.eu)
[22:43:47] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[22:55:45] *** Joins: Doc_Holliwood (~holli@dslb-178-010-216-099.178.010.pools.vodafone-ip.de)
[23:06:14] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[23:07:13] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:10:38] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[23:14:52] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 250 seconds)
[23:20:40] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[23:21:06] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:22:09] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[23:22:31] *** Joins: MasterDuke (~MasterDuk@94.7.197.239)
[23:22:31] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:27:39] *** Joins: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net)
[23:31:00] *** Joins: discord-raku-bot (~RakuIRC@95.90.183.34)
[23:31:52] <gfldex> TIL sub EXPORT can be a multi
[23:32:02] *** Quits: discord-raku-bot (~RakuIRC@95.90.183.34) (Remote host closed the connection)
[23:32:10] *** Quits: _ed (~ed@c-73-54-198-101.hsd1.ga.comcast.net) (Ping timeout: 258 seconds)
[23:32:32] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[23:33:23] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:36:23] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[23:37:38] *** Joins: abraxxa-home (~alex@2a01:100:2000:2500::22)
[23:41:38] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:42:00] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[23:42:00] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:42:31] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
