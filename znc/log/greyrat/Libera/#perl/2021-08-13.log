[00:05:58] <LeoNerd> What do you mean "shared backend"? 
[00:07:04] <gchristensen> using Hash::SharedMem, like https://metacpan.org/pod/Prometheus::Tiny::Shared, as I'm assuming Net::Prometheus is not compatible with exposing the metrics in a forked sidecar
[00:07:06] <Paperbot> Link title(s): [ Prometheus::Tiny::Shared - A tiny Prometheus client with a shared database behind it - metacpan.org ]
[00:08:09] <LeoNerd> It provides a PSGI app, you can make that accessible over HTTP by any method you choose
[00:08:16] <LeoNerd> I usually do it by Net::Async::HTTP
[00:08:50] <gchristensen> yeah, I posted the pickle about an hour ago
[00:10:23] <LeoNerd> Right, yes we're basically back onto things others have already suggested
[00:11:15] <gchristensen> right. so, Child (and before that Parallel::ForkManager) works fine with Prometheus::Tiny::Shared, but I am wishing Net::Prometheus had a Hash::SharedMem backend so I could use it instead
[00:11:41] <LeoNerd> That's not really going to work for "acive" gauges though
[00:12:19] <gchristensen> by "active" do you mean high churn?
[00:12:45] <LeoNerd> No, I mean the ones that run active code to determine their value
[00:13:09] <LeoNerd> https://metacpan.org/pod/Net::Prometheus::Gauge#set_function  -- these
[00:13:10] <Paperbot> Link title(s): [ Net::Prometheus::Gauge - a snapshot value-reporting metric - metacpan.org ]
[00:13:25] <gchristensen> gotcha, indeed
[00:19:02] <LeoNerd> I suspect some code adjustment to IaFunction wouldn't be too difficult. Would likely make that much simpler
[00:21:23] *** Quits: habamax (~habamax@user/habamax) (Ping timeout: 268 seconds)
[00:23:19] *** Quits: magla (~gelignite@55d4ac4e.access.ecotel.net) (Quit: Stay safe!)
[00:32:30] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[00:33:00] *** Joins: humky (~humky@user/humky)
[00:35:15] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[00:40:47] <gchristensen> LeoNerd: I am not sure what IaFunction is, but I'm interested in putting in some work if you think this is feasible? 
[00:43:03] <Grinnz> shorthand for IO::Async::Function
[00:47:14] *** Quits: brunoramoslu (~brunoramo@94.252.121.40) (Ping timeout: 256 seconds)
[00:50:07] *** Joins: v` (~v@user/ctrl)
[00:52:12] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[00:52:39] *** Quits: voegelas (~voegelas@www.andreasvoegele.com) (Remote host closed the connection)
[00:56:32] *** Joins: voegelas (~voegelas@www.andreasvoegele.com)
[00:57:32] *** Quits: clscott (~clscott@bras-base-otwaon0150w-grc-07-184-147-147-88.dsl.bell.ca) (Quit: clscott)
[01:00:31] *** Quits: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[01:00:52] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[01:01:46] *** Joins: YaoNai (~YaoNai@user/yaonai)
[01:02:08] *** Quits: gloin (~gloin@user/gloin) (Remote host closed the connection)
[01:02:12] *** Joins: diskin (~diskin@87.117.51.113)
[01:13:01] *** Joins: anthk_ (~anthk_@92.176.105.30)
[01:14:55] <ether> Parallel::PreFork is so much better than Parallel::ForkManager
[01:15:02] <ether> I don't know why it never gets any love
[01:16:41] <Grinnz> its interface/docs are designed to appeal to a slightly different use case, but yeah
[01:17:29] <Grinnz> if you actually want to write a persistent daemon that managed preforked processes, Parallel::Prefork does a lot for you
[01:17:41] *** Joins: whynot (~whynot@37.73.56.162)
[01:18:01] <Grinnz> if you just want to write a script that forks workers and then is done, Parallel::ForkManager's interface may be quicker to pick up
[01:18:35] <Grinnz> (personally i use IO::Async::Function instead of either, and use Daemon::Control or systemd for service management)
[01:19:50] *** Quits: nshp (hi@my.domain.is.better.thanyours.com) (Remote host closed the connection)
[01:20:00] *** Joins: nshp (~hi@my.domain.is.better.thanyours.com)
[01:20:04] *** Quits: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070) (Quit: I Break D Ert)
[01:21:54] *** Quits: arcanez (~arcanez@warpedreality.org) (Ping timeout: 240 seconds)
[01:23:23] *** Joins: arcanez (~arcanez@warpedreality.org)
[01:24:26] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[01:25:46] *** Parts: mason (~mason@redhat/mason) ()
[01:27:06] * GumbyPAN CPAN Upload: Test2-Harness-1.000066 by EXODIST https://metacpan.org/release/EXODIST/Test2-Harness-1.000066
[01:33:22] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[01:34:18] *** Quits: jlenz__ (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[01:41:09] *** Quits: EGD (~egd@user/egd) ()
[01:59:26] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 268 seconds)
[02:00:52] *** Quits: R2robot (~R2robot@user/r2robot) (Quit: Pull the lever, Kronk.  Wrong leverrrrrrr!)
[02:03:44] *** Joins: krismatrix (~krismatri@38.80.149.51)
[02:12:37] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[02:16:18] *** Quits: judabuda (kowbunga@user/judabuda) (Ping timeout: 240 seconds)
[02:22:52] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 268 seconds)
[02:24:42] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 268 seconds)
[02:27:42] *** Joins: R2robot (~R2robot@user/r2robot)
[02:42:40] *** Joins: gast0n (~g4570n@user/gast0n)
[02:45:31] *** Parts: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) ()
[02:52:16] * GumbyPAN CPAN Upload: Binance-API-1.07 by TASKULA https://metacpan.org/release/TASKULA/Binance-API-1.07
[03:00:38] *** Joins: anthk_ (~anthk_@92.176.105.30)
[03:08:43] *** Quits: silug (~silug@068-188-018-154.biz.spectrum.com) (Quit: The Lounge - https://thelounge.chat)
[03:22:07] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[03:23:24] *** Joins: eax (~eax@c-73-171-208-229.hsd1.fl.comcast.net)
[03:24:32] *** Quits: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz) (Ping timeout: 268 seconds)
[03:26:12] *** Joins: FastJack (~fastjack@b2b-78-94-22-14.unitymedia.biz)
[03:27:37] *** Quits: Pali (~pali@user/pali) (Ping timeout: 248 seconds)
[03:28:06] *** Quits: eax (~eax@c-73-171-208-229.hsd1.fl.comcast.net) (Quit: leaving)
[03:31:21] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Remote host closed the connection)
[03:34:20] <Grinnz> genio: https://www.nntp.perl.org/group/perl.perl5.porters/2021/08/msg261250.html
[03:34:21] <Paperbot> Link title(s): [ Pre-RFC: Configure option for whether to include taint support -  nntp.perl.org ]
[03:35:05] <Adura> Taint removal sounds painful.
[03:47:56] *** Quits: whynot (~whynot@37.73.56.162) (Quit: leaving)
[03:51:43] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[03:54:16] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[03:59:23] *** Joins: judabuda (kowbunga@kowbunga.thunderirc.net)
[04:04:13] *** Joins: riceandbeans (~zach@dev07.raasta.org)
[04:04:13] *** Quits: riceandbeans (~zach@dev07.raasta.org) (Changing host)
[04:04:13] *** Joins: riceandbeans (~zach@user/riceandbeans)
[04:07:05] *** Quits: riceandb1ans (~zach@dev07.raasta.org) (Ping timeout: 248 seconds)
[04:12:04] *** Joins: gloin (~gloin@user/gloin)
[04:24:34] *** Quits: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2) (Ping timeout: 240 seconds)
[04:24:41] *** Joins: dbo (select@fosshost/director/corwin)
[04:25:06] *** Quits: MikeGeorge[m] (~onesuitsa@2001:470:69fc:105::1f88) (Ping timeout: 252 seconds)
[04:25:06] *** Quits: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a) (Ping timeout: 252 seconds)
[04:25:16] *** Quits: latk (~latk@2001:470:69fc:105::255) (Ping timeout: 276 seconds)
[04:25:23] *** Quits: Rubin (~rubin@2001:470:69fc:105::17e) (Ping timeout: 272 seconds)
[04:25:49] *** Quits: entonian[m] (~entonianm@2001:470:69fc:105::7ac0) (Ping timeout: 268 seconds)
[04:25:54] *** Quits: kesa4[m] (~kesa4matr@2001:470:69fc:105::d723) (Ping timeout: 276 seconds)
[04:25:54] *** Quits: ilmari_ (~ilmari@user/ilmari) (Ping timeout: 276 seconds)
[04:25:54] *** Quits: gordonfish[m] (~gordonfis@2001:470:69fc:105::31) (Ping timeout: 276 seconds)
[04:26:01] *** Quits: usr1 (select@fosshost/director/corwin) (Ping timeout: 272 seconds)
[04:27:46] *** Joins: PaulFranz (~pfranz@c-73-187-178-34.hsd1.pa.comcast.net)
[04:30:00] *** Quits: jdrab (~jdrab@user/jdrab) (Quit: jdrab)
[04:31:00] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 272 seconds)
[04:31:54] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[04:52:02] *** Joins: krismatrix (~krismatri@38.80.149.51)
[04:59:53] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 248 seconds)
[05:08:18] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[05:18:00] *** Joins: grenada (~grenada@167.86.186.21)
[05:21:31] * GumbyPAN CPAN Upload: Getopt-EX-Hashed-0.9912 by UTASHIRO https://metacpan.org/release/UTASHIRO/Getopt-EX-Hashed-0.9912
[05:23:45] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 276 seconds)
[05:25:55] *** Quits: sevvie_ (~sevvie@vps-6df5f188.vps.ovh.net) (Quit: leaving)
[05:26:07] *** Joins: sevvie (~sevvie@vps-6df5f188.vps.ovh.net)
[05:28:32] *** Joins: Darkcoal (~user@167.86.186.21)
[05:28:32] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[05:28:59] *** Joins: NoGare[m] (~nogaremat@2001:470:69fc:105::35f2)
[05:32:17] *** Joins: anthk_ (~anthk_@92.176.105.30)
[05:32:43] *** sdk is now known as Guest8977
[05:32:43] *** Quits: Guest8977 (~x@shell.codevoid.de) (Killed (mercury.libera.chat (Nickname regained by services)))
[05:33:24] *** Joins: sdk_ (~x@shell.codevoid.de)
[05:34:58] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[05:35:01] *** Joins: humky_ (~humky@user/humky)
[05:39:03] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Quit: mogad0n)
[05:40:12] *** Quits: humky_ (~humky@user/humky) (Read error: Connection reset by peer)
[05:40:19] *** Joins: humky (~humky@user/humky)
[05:40:25] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 248 seconds)
[05:42:19] *** Joins: WinterStar (~IceLight@user/icelight)
[05:44:52] *** Quits: Darkcoal (~user@167.86.186.21) (Quit: Darkcoal)
[05:45:59] *** Joins: Darkcoal (~user@2001:16a2:7a89:9800:ed38:2f2:29ab:fb07)
[05:51:44] *** Quits: Darkcoal (~user@2001:16a2:7a89:9800:ed38:2f2:29ab:fb07) (Quit: Darkcoal)
[05:51:47] *** Quits: grenada (~grenada@167.86.186.21) (Quit: ZNC 1.8.2 - https://znc.in)
[05:56:25] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[05:57:19] *** Joins: humky (~humky@user/humky)
[06:04:39] *** Joins: krismatrix (~krismatri@38.80.149.51)
[06:10:41] *** Joins: Su-Shee (~Susanne@p4ffc786e.dip0.t-ipconnect.de)
[06:13:59] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[06:14:07] *** Quits: Su-Shee_ (~Susanne@p4ffc795b.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[06:17:07] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[06:22:12] *** Joins: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[06:25:26] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 252 seconds)
[06:26:48] *** Joins: MikeGeorge[m] (~onesuitsa@2001:470:69fc:105::1f88)
[06:28:55] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[06:31:51] *** Joins: bmeneg_ (~bmeneg@2001:1284:f016:3657:8b23:dd71:3b07:13a0)
[06:32:20] *** Quits: bmeneg (~bmeneg@2001:1284:f016:9a56:9992:d93c:23e3:2b56) (Ping timeout: 256 seconds)
[06:42:12] *** Quits: rorx (~rorx@cpe-65-24-160-111.columbus.res.rr.com) (Ping timeout: 245 seconds)
[06:46:00] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:46:12] *** Joins: entonian[m] (~entonianm@2001:470:69fc:105::7ac0)
[06:47:51] *** Joins: latk (~latk@2001:470:69fc:105::255)
[06:53:07] *** Joins: kesa4[m] (~kesa4matr@2001:470:69fc:105::d723)
[06:53:47] *** Joins: gordonfish[m] (~gordonfis@2001:470:69fc:105::31)
[06:55:41] *** Joins: rorx (~rorx@cpe-65-24-160-111.columbus.res.rr.com)
[06:55:42] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:55:42] *** FinnElija is now known as Guest800
[06:55:42] *** finn_elija is now known as FinnElija
[06:58:49] *** Quits: Guest800 (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 248 seconds)
[07:00:25] *** Quits: pucara (~i@host123.190-136-88.telecom.net.ar) (Ping timeout: 248 seconds)
[07:02:39] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[07:11:24] *** Joins: ehuelsmann[m] (~ehuelsman@2001:470:69fc:105::169a)
[07:14:58] *** Joins: ilmari_ (~ilmari@user/ilmari)
[07:22:00] *** Quits: G_Sabino1ullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 272 seconds)
[07:33:03] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 268 seconds)
[07:37:32] *** Joins: Martchus_ (~martchus@2a01:c22:76cf:2a00:d250:99ff:fe49:3cce)
[07:39:13] *** Quits: Martchus (~martchus@dynamic-077-002-056-189.77.2.pool.telefonica.de) (Ping timeout: 268 seconds)
[07:46:42] *** Quits: rbraun (SONwJy0T@user/rbraun) (Ping timeout: 240 seconds)
[07:54:19] *** Quits: krismatrix (~krismatri@38.80.149.51) (Quit: Leaving)
[08:11:49] * GumbyPAN CPAN Upload: App-MechaCPAN-0.28 by ATRODO https://metacpan.org/release/ATRODO/App-MechaCPAN-0.28
[08:29:52] *** Quits: Norkle (~norkle@admin.nasa-g0v.com) (Quit: Lost terminal)
[08:30:24] *** Joins: shlomif (~shlomif@87.68.242.72.adsl.012.net.il)
[08:34:12] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 272 seconds)
[08:35:33] *** Joins: WinterStar (~IceLight@user/icelight)
[08:41:48] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 272 seconds)
[08:42:17] *** Quits: gloin (~gloin@user/gloin) (Read error: Connection reset by peer)
[08:42:30] *** Joins: gloin (~gloin@user/gloin)
[08:50:18] <mst> ehuelsmann[m]: btw, dude got back to me thanking me for helping him and saying he'd be delighted to clean up his cpan dir
[08:50:34] <mst> ehuelsmann[m]: "Thank you for great supporting! Will delete all unnecessary files."
[08:51:54] * GumbyPAN CPAN Upload: Carp-Assert-More-2.0.0 by PETDANCE https://metacpan.org/release/PETDANCE/Carp-Assert-More-2.0.0
[09:03:45] *** Quits: bmeneg_ (~bmeneg@2001:1284:f016:3657:8b23:dd71:3b07:13a0) (Remote host closed the connection)
[09:19:15] <shlomif> mst: splendid! mst++
[09:33:44] *** Joins: rbraun (xJSrtCKn@user/rbraun)
[09:34:37] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:35:08] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[09:36:44] *** Joins: mattil (~mattil@helsinki.portalify.com)
[09:38:56] *** Joins: furrymcgee (~devuan@31.179.186.66)
[09:39:05] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[09:40:12] *** Joins: ztx (~ztx@user/ztx)
[09:42:00] *** Joins: Norkle (~norkle@admin.nasa-g0v.com)
[09:42:40] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[10:19:36] *** Joins: jplesnik (~jplesnik@93.89.107.222)
[10:19:49] *** Quits: jplesnik (~jplesnik@93.89.107.222) (Remote host closed the connection)
[10:31:31] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[10:34:17] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[10:34:50] *** Joins: mattil (~mattil@airio.portalify.com)
[10:36:13] *** Joins: diskin_ (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com)
[10:36:13] *** diskin is now known as Guest9013
[10:36:13] *** diskin_ is now known as diskin
[10:38:33] *** Quits: Guest9013 (~diskin@87.117.51.113) (Ping timeout: 248 seconds)
[10:43:23] <genio> Grinnz: \o/
[10:45:06] *** Joins: habamax (~habamax@user/habamax)
[10:58:54] *** Quits: randir (~randir@195.175.18.98) (Remote host closed the connection)
[10:59:11] *** Joins: habamax_ (~habamax@vpn.avast.com)
[10:59:21] *** Quits: habamax_ (~habamax@vpn.avast.com) (Changing host)
[10:59:21] *** Joins: habamax_ (~habamax@user/habamax)
[10:59:22] *** habamax is now known as Guest5222
[10:59:22] *** Quits: Guest5222 (~habamax@user/habamax) (Killed (calcium.libera.chat (Nickname regained by services)))
[10:59:22] *** habamax_ is now known as habamax
[10:59:26] *** Joins: randir (~randir@195.175.18.98)
[11:01:38] *** Joins: anthk_ (~anthk_@92.176.105.30)
[11:03:37] *** Quits: randir (~randir@195.175.18.98) (Ping timeout: 248 seconds)
[11:04:30] <genio> Hopefully Neil can get movement on it this time. I’ll stay out of the way and silent
[11:14:58] *** Quits: anthk_ (~anthk_@92.176.105.30) (Quit: nyaa~)
[11:15:20] *** Joins: anthk_ (~anthk_@92.176.105.30)
[11:24:11] *** Joins: jplesnik (~jplesnik@93.89.107.222)
[11:25:31] *** rjsalts_ is now known as rjsalts
[11:27:02] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[11:33:31] *** Joins: KnoP (~KnoP@p57b21b3f.dip0.t-ipconnect.de)
[11:36:21] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[11:44:39] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 268 seconds)
[11:56:11] *** Joins: ufobat_ (~martin@dynamic-077-007-103-187.77.7.pool.telefonica.de)
[12:00:29] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[12:04:25] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 248 seconds)
[12:06:08] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[12:21:01] *** Joins: Tier (~tier@37.214.52.86)
[12:22:13] *** Quits: judabuda (kowbunga@kowbunga.thunderirc.net) (Changing host)
[12:22:13] *** Joins: judabuda (kowbunga@user/judabuda)
[12:28:47] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[12:29:20] *** Joins: mattil (~mattil@airio.portalify.com)
[12:31:10] *** Joins: Pali (~pali@user/pali)
[12:40:57] *** Joins: TweetiePooh (~richard@cpc75386-sotn16-2-0-cust456.15-1.cable.virginm.net)
[12:41:18] * GumbyPAN CPAN Upload: Time-Zone-Olson-0.39_01 by DDICK https://metacpan.org/release/DDICK/Time-Zone-Olson-0.39_01
[12:44:42] *** Quits: rbraun (xJSrtCKn@user/rbraun) (Ping timeout: 240 seconds)
[12:46:35] *** Joins: kensanata (~user@user/kensanata)
[12:50:24] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[12:53:29] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 248 seconds)
[12:56:20] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[12:58:20] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[12:58:53] *** Joins: mattil (~mattil@airio.portalify.com)
[13:03:54] *** Quits: celphi (uid97751@user/celphi) (Quit: Connection closed for inactivity)
[13:10:50] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.2)
[13:15:43] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[13:18:33] *** Quits: jplesnik (~jplesnik@93.89.107.222) (Ping timeout: 248 seconds)
[13:30:15] *** Joins: horsepatat (~horsepata@80.89.73.99)
[14:00:50] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 252 seconds)
[14:01:33] *** Joins: ztx (~ztx@user/ztx)
[14:09:58] *** Joins: gggp (~gggp@60.10.194.45)
[14:11:59] *** Joins: gggp_ (~gggp@60.10.23.162)
[14:16:09] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 248 seconds)
[14:16:12] *** Quits: gggp (~gggp@60.10.194.45) (Ping timeout: 272 seconds)
[14:18:27] *** Quits: anthk_ (~anthk_@92.176.105.30) (Read error: Connection reset by peer)
[14:18:44] *** Joins: ztx (~ztx@user/ztx)
[14:21:54] *** Quits: horsepatat (~horsepata@80.89.73.99) (Ping timeout: 268 seconds)
[14:22:13] <depesz> is there some simple-ish tutorial on how to write perl wrapper for c library?
[14:23:12] <shlomif> depesz: hi
[14:23:51] *** Quits: ztx (~ztx@user/ztx) (Quit: ztx)
[14:23:54] <shlomif> depesz: using which framework?
[14:24:40] <depesz> framework?
[14:24:53] *** Joins: ztx (~ztx@user/ztx)
[14:24:59] <depesz> never did it, have 0 knowledge about it. am open to any directions
[14:25:04] <shlomif> depesz: xs, Inline::C, etc
[14:25:36] <depesz> shlomif: how do I choose which to use?
[14:25:51] <lopid> research
[14:26:21] <shlomif> depesz: there is https://metacpan.org/pod/FFI::Platypus too
[14:26:22] <Paperbot> Link title(s): [ FFI::Platypus - Write Perl bindings to non-Perl libraries with FFI. No XS required. - metacpan.org ]
[14:26:50] <depesz> lopid: how do I research? I thought asking in here is start of research.
[14:27:15] <lopid> well, now you've some options
[14:27:22] <depesz> for now, I learned that there are multiple ways. i'd rather not try multiple ways just to learn, 3 months later, that 2 of them were absolutely worst possible ways.
[14:27:31] *** Joins: gggp__ (~gggp@60.10.23.162)
[14:27:33] <LeoNerd> Unless the C library is *particualrly* simple you're likely to need some XS anyway though
[14:27:43] <lopid> research ≠ doing the final project
[14:27:47] <depesz> https://github.com/pganalyze/libpg_query - this is the c library
[14:27:48] <Paperbot> Link title(s): [ GitHub - pganalyze/libpg_query: C library for accessing the PostgreSQL parser outside of the serv... ]
[14:28:01] <xenu> XS is more complicated than FFI, but much, much more powerful
[14:30:17] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:30] <depesz> i don't know if I need more powerful. Simple should be better.
[14:30:47] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[14:30:50] *** Quits: gggp_ (~gggp@60.10.23.162) (Ping timeout: 272 seconds)
[14:30:54] <depesz> I'll look into the FFI first then, maybe it will be sufficient.
[14:30:55] <LeoNerd> It depends entirely what the library is, though
[14:31:02] *** Joins: csrf (~csrf@user/csrf)
[14:31:18] <LeoNerd> If *all* you need to do is call a few isolated functions with no stored state or callbacks or anything remotely tricky, then maybe FFI will do it
[14:31:42] <depesz> LeoNerd: well, that might be true, btu given that I don't write C, and never did any kind of wrapping, I don't even know what "what the library is" means.
[14:31:43] <LeoNerd> But if you ever need to store context aroudn things, or... basically do anything even slightly more interesting you'll be needing some XS in there
[14:32:11] <LeoNerd> Well you started by naming it, so that was useful
[14:32:21] <depesz> as far as I can tell, from cursory glance, it just bunch of functions that take string and return somewhat complciated data structure based on this string.
[14:32:30] <depesz> LeoNerd: sorry, not sure what you mean.
[14:33:03] <depesz> LeoNerd: are you asking about name of the c library that I want to wrap?
[14:33:20] <LeoNerd> Yes, but you provided a link so that's fine
[14:33:25] <LeoNerd> I'm just looking it over now
[14:33:35] <LeoNerd> It has some lifetime management stuff which might be fun
[14:33:45] <depesz> "lifetime management"?
[14:34:03] <LeoNerd> Yes, all the "free" functions below
[14:34:41] <LeoNerd> lines 96 to 103
[14:34:42] <depesz> ah.
[14:34:58] <depesz> sorry, lines 96 to 103 of which file?
[14:35:03] <LeoNerd> the .h file
[14:35:10] <LeoNerd> Where surely you'd start by looking
[14:35:26] <depesz> I would, if I was C programmer. I'm not.
[14:36:00] <depesz> the thing is that there is nothing like this in perl. and I'm not too keep on moving my coding to ruby or python
[14:36:31] <LeoNerd> OK
[14:37:22] *** Joins: gggp_ (~gggp@114.245.111.216)
[14:37:30] <depesz> keen. not keep. i hate laptop keyboards
[14:39:56] <LeoNerd> Well anyhow, I'd just wrap some XS around that... probably not more than a couple of hours work in there..
[14:40:09] *** Quits: gggp__ (~gggp@60.10.23.162) (Ping timeout: 248 seconds)
[14:43:38] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 256 seconds)
[14:44:30] *** Joins: ztx (~ztx@user/ztx)
[14:50:15] <depesz> couple of hours if you know what you're doing. i'm not
[14:50:36] *** Joins: rbraun (Eig5RsvW@user/rbraun)
[14:50:48] <LeoNerd> Wellsure, that's true of *any* task ;)
[14:51:50] <LeoNerd> I'd suggest take something similar and copy it, rip out the specific parts and write new parts for this task
[14:51:55] <LeoNerd> I have *tonnes* of things you can copy
[14:51:59] <LeoNerd> I can walk you through them
[14:58:33] <depesz> if you have working example of code that would be great.
[14:59:08] <depesz> unfortuantley i rarely have lots of time in long streteches to work on things, or even talk, so I don't want to take your time for explaining. will try to figure out how to gut it, and replace bits to make it work for me.
[14:59:31] *** Quits: gggp_ (~gggp@114.245.111.216) (Ping timeout: 268 seconds)
[15:01:44] <LeoNerd> Not -particularly- recent, but here's a CPAN dist that wraps a smallish C library that's not too far away from your example:  https://metacpan.org/dist/Term-TermKey
[15:01:44] <Paperbot> Link title(s): [ Term-TermKey-0.17 - perl wrapper around libtermkey - metacpan.org ]
[15:01:57] <LeoNerd> I have some other newer ones but I think all the newer bits are muuuch bigger
[15:02:24] *** Joins: choroba (~E.Choroba@88.146.255.106)
[15:05:04] *** Joins: Darkcoal (~user@2001:16a2:7a89:9800:ed38:2f2:29ab:fb07)
[15:07:55] *** habamax is now known as Guest4536
[15:07:55] *** Quits: Guest4536 (~habamax@user/habamax) (Killed (sodium.libera.chat (Nickname regained by services)))
[15:08:12] *** Joins: habamax_ (~habamax@vpn.avast.com)
[15:10:08] <depesz> LeoNerd: thanks a lot. once I'll get to moment in time when I can look into it, will use this as base.
[15:10:13] <LeoNerd> :)
[15:12:20] *** Quits: Darkcoal (~user@2001:16a2:7a89:9800:ed38:2f2:29ab:fb07) (Ping timeout: 252 seconds)
[15:12:34] *** Quits: habamax_ (~habamax@vpn.avast.com) (Client Quit)
[15:14:03] *** Joins: Darkcoal (~user@167.86.186.21)
[15:16:25] *** Joins: habamax (~maksim.ki@user/habamax)
[15:20:07] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[15:22:38] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) ()
[15:24:42] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 245 seconds)
[15:25:57] *** Joins: ztx (~ztx@user/ztx)
[15:26:14] *** Quits: Affliction (affliction@user/affliction) (Quit: Read error: Connection reset by beer)
[15:27:15] *** Joins: Affliction (affliction@user/affliction)
[15:27:47] *** Quits: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net) (Quit: Leaving)
[15:33:10] *** Joins: gggp_ (~gggp@114.245.111.216)
[15:34:40] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 268 seconds)
[15:37:32] *** Joins: gggp__ (~gggp@221.219.67.34)
[15:39:05] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-7-29.prtc.net)
[15:40:25] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 248 seconds)
[15:40:49] *** Quits: gggp_ (~gggp@114.245.111.216) (Ping timeout: 268 seconds)
[15:41:27] *** Joins: ztx (~ztx@user/ztx)
[15:44:46] *** Joins: gggp_ (~gggp@60.10.194.45)
[15:45:03] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[15:48:56] *** Quits: gggp__ (~gggp@221.219.67.34) (Ping timeout: 258 seconds)
[15:49:16] *** Joins: gggp (~gggp@123.113.188.221)
[15:50:25] *** Joins: gggp__ (~gggp@60.10.23.162)
[15:51:50] *** Quits: gggp_ (~gggp@60.10.194.45) (Ping timeout: 272 seconds)
[15:52:24] *** Joins: gggp_ (~gggp@60.10.23.162)
[15:53:54] *** Quits: gggp (~gggp@123.113.188.221) (Ping timeout: 256 seconds)
[15:55:53] *** Quits: gggp__ (~gggp@60.10.23.162) (Ping timeout: 248 seconds)
[16:02:27] *** Quits: kensanata (~user@user/kensanata) (Remote host closed the connection)
[16:09:43] *** Quits: mattil (~mattil@airio.portalify.com) (Read error: Connection reset by peer)
[16:10:12] *** Joins: mattil (~mattil@airio.portalify.com)
[16:10:40] *** Joins: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[16:11:52] *** Joins: gggp (~gggp@125.33.224.44)
[16:12:56] *** Quits: gggp (~gggp@125.33.224.44) (Read error: Connection reset by peer)
[16:13:19] *** Joins: gggp (~gggp@60.10.23.162)
[16:13:27] *** Quits: gggp_ (~gggp@60.10.23.162) (Ping timeout: 245 seconds)
[16:14:20] *** Joins: gggp_ (~gggp@125.33.224.44)
[16:15:55] <shlomif> depesz: hi, any luck?
[16:16:04] <shlomif> LeoNerd++
[16:16:16] <depesz> shlomif:  with pg_query wrapper?
[16:16:42] *** Quits: gggp_ (~gggp@125.33.224.44) (Read error: Connection reset by peer)
[16:17:01] <depesz> shlomif: I will, optimistically, start reading LeoNerd code, within next 10 days. whether I will be able to convert it to do what I need, I'll see then :/
[16:17:45] *** Quits: gggp (~gggp@60.10.23.162) (Ping timeout: 248 seconds)
[16:17:56] <shlomif> depesz: ah
[16:25:50] <depesz> thanks for reaching back. I do appreciate it :)
[16:27:21] *** Quits: pizdets (~pizdets@183.182.114.167) (Ping timeout: 248 seconds)
[16:27:51] *** Joins: pizdets_ (~pizdets@183.182.111.17)
[16:31:37] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 248 seconds)
[16:33:58] *** Joins: zakame (~zakame@user/zakame)
[16:42:06] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-7-29.prtc.net) (Quit: Client closed)
[16:46:44] * GumbyPAN CPAN Upload: Data-Table-Text-20210813 by PRBRENAN https://metacpan.org/release/PRBRENAN/Data-Table-Text-20210813
[16:46:44] * GumbyPAN CPAN Upload: Nasm-X86-20210815 by PRBRENAN https://metacpan.org/release/PRBRENAN/Nasm-X86-20210815
[16:50:51] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[16:54:10] <leitz> Anyone do Functional Programming with Perl?
[16:54:31] <leitz> I'm reading "Grokking Simplicity" and FP finally makes sense.
[16:54:50] <LeoNerd> Er, sure? Lots of perl style is functional in places. E.g. many of the List::Util functions
[16:54:58] <LeoNerd> Or List::UtilsBy
[16:54:59] *** Quits: Tier (~tier@37.214.52.86) (Quit: Leaving)
[16:55:30] <leitz> LeoNerd, I'm more thinking of using FP disciplines in the code we write.
[16:56:00] <leitz> My own code was starting to get a bit convoluted, and I'm trying to understand how to make it simpler and more robust.
[16:56:26] <LeoNerd> functional can help with that.. or it can make it worst
[16:56:28] <LeoNerd> *worse
[16:56:35] <leitz> Once I understand, I can take the skills back to work and apply them to a much larger and more convoluted code base.
[16:56:45] * GumbyPAN CPAN Upload: Template-Plugin-AutoDate-0.01 by NERDVANA https://metacpan.org/release/NERDVANA/Template-Plugin-AutoDate-0.01
[16:56:46] <LeoNerd> I tend to find that code that is *religiously* sticking to any particular style gets quite awkward in places where that style doesn't fit
[16:56:53] <LeoNerd> Use functional where it makes sense, and not where it doesn't
[16:57:53] <leitz> Understood. I've hit issues where one bit of code would make a decision and then act. But later needs required different actions based on the decisions.
[16:58:05] <leitz> Splitting up the decision and the action will help.
[16:58:31] <LeoNerd> "mechanism vs policy" split can be useful yeah
[17:00:22] <shlomif> leitz: FP is just about not having side effects
[17:00:38] <LeoNerd> It's about a lot more than that
[17:01:07] <LeoNerd> The core is really more about "code can be data".. allowing to to pass behaviour around into other functions, as easily as data
[17:05:48] *** Quits: rando25902 (~sthk@c-98-240-233-64.hsd1.mn.comcast.net) (Quit: leaving)
[17:14:48] <shlomif> LeoNerd: what?
[17:15:01] *** Joins: silug (~silug@068-188-018-154.biz.spectrum.com)
[17:15:27] <djerius> depesz: I suggest you try Platypus::FFI. It is quite nice to work with.  There are a number of example on CPAN; you can look at https://metacpan.org/dist/UUID-FFI as an example, (or peruse the reverse dependencies on it.  Also ask on #native on irc.perl.org.  FFI folks hang out there.
[17:15:28] <Paperbot> Link title(s): [ UUID-FFI-0.10 - Universally Unique Identifiers FFI style - metacpan.org ]
[17:16:31] <djerius> depesz: XS is powerful, but has a very steep learning curve, and can have very sharp edges to cut yourself on.
[17:16:33] <LeoNerd> djerius: last time I looked it didn't really have anything for the lifetime management stuf
[17:17:00] <shlomif> https://github.com/shlomif/Freenode-programming-channel-FAQ/blob/master/FAQ_with_ToC__generated.md#what-does-functional-programming--fp--mean
[17:17:01] <Paperbot> Link title(s): [ Freenode-programming-channel-FAQ/FAQ_with_ToC__generated.md at master · shlomif/Freenode-programm... ]
[17:17:22] <shlomif> leitz: ^^^
[17:18:51] <djerius> LeoNerd: I'm not quite sure what that means; if the C code manages the objects, then a destructor tied to the C cleanup routine works, otherwise, no.  But maybe not what you mean?
[17:19:11] <depesz> djerius: well, given that I have 0 experience with it, and that LeoNerd authored the module he was talkinga bout, for now I'll try to follow his footsteps :)
[17:19:14] <LeoNerd> Yeah kindof, stuff like that...
[17:19:19] <depesz> *when* i'll get to it
[17:20:06] *** Quits: silug (~silug@068-188-018-154.biz.spectrum.com) (Ping timeout: 268 seconds)
[17:20:51] <djerius> depesz: Ok. 
[17:21:19] *** Joins: silug (~silug@068-188-018-154.biz.spectrum.com)
[17:22:33] <djerius> LeoNerd: Same problem with XS, though.  Sometimes you can pass a Perl allocated struct to C and then have Perl clean it up, but often not.
[17:22:54] <LeoNerd> Right. It's more that there you can actually write code to handle it properly
[17:23:12] <LeoNerd> Whereas I couldn't where in FFI you had the *opportunity* to write the corrrect code even if you wanted to
[17:23:48] <djerius> LeoNerd: Will have to check my FFI code;  dunno if Plicease is around here, but he's on #native.  He of course knows all.
[17:28:06] *** Quits: mattil (~mattil@airio.portalify.com) (Remote host closed the connection)
[17:29:21] <leitz> shlomif, the book "Grokking Simplicity" gives two keys to functional thinking. 1. Separate Actions, Calculations, and Data, with preferences for Data over Calculations, and Calculations over Actions.
[17:29:52] <leitz> shlomif, and 2. Using first class abstractions.  Still working to understand this bit.
[17:30:29] <shlomif> leitz: sounds complicated ;)
[17:31:08] <leitz> shlomif, the book makes it very practical. If *I* can understand most of it, you shouldn't have any problems with it.  ;)
[17:34:13] <shlomif> leitz: https://grokkingsimplicity.com/ seems like a closed book - https://www.shlomifish.org/philosophy/philosophy/closed-books-are-so-19th-century/
[17:34:14] <Paperbot> Link title(s): [ Grokking Simplicity - A book on Functional Programming ] [ Why Closed Books are So 19th-Century - Shlomi Fish’s Homesite ]
[17:34:15] <leitz> Google is failing me. What env variable do I set to trigger release tests.
[17:34:38] <shlomif> leitz: AUTHOR_TESTS?
[17:35:02] <shlomif> "dzil test --all"
[17:35:38] <leitz> shlomif, how many books have you written?
[17:36:10] <leitz> And what was the cost in time, research material, editorial services, art services, etc?
[17:36:22] <shlomif> leitz: i have .epubs and .pdfs on my site
[17:37:51] <leitz> You got the 10 million euro?
[17:38:07] <shlomif> leitz: i'm unemployed and a geek/neo-amateur: https://www.shlomifish.org/philosophy/culture/case-for-commercial-fan-fiction/indiv-nodes/hacking_and_amateur__vs__conformism_and_professional.xhtml
[17:38:08] <Paperbot> Link title(s): [ Commercial Real Person Fan Fiction (RPFs), crossovers and parodies as 2021 geek/hacker imperative... ]
[17:38:46] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[17:38:51] <shlomif> leitz: i suspect i have much more
[17:41:37] <leitz> shlomif, as a coder I make personal software for other's use. I also get help from the community so it's a win-win.
[17:42:11] <leitz> shlomif, the next book I'm looking to write is probably a two year effort, and will cost me USD 500 or so in services to produce.
[17:42:19] <shlomif> leitz: ok, and...?
[17:42:51] <leitz> Why should I be expected to spend two years and some money so that someone else doesn't have to spend time or money?
[17:43:47] <shlomif> leitz: because you're not a jerk and a miser?
[17:44:25] <leitz> shlomif, I'm a jerk and a miser because I think if someone wants a book to be freely available then they should write that book?
[17:45:14] <shlomif> leitz: people *will* pirate your book if it's any good
[17:45:35] <leitz> shlomif, they have the choice to commit crime, true. 
[17:46:10] <leitz> shlomif, and I'm not going to get upset when they do, it's not worth my energy to try and protect everything.
[17:46:52] <shlomif> leitz: sharing is not a crime: https://www.youtube.com/watch?v=-qTIGg3I5y8
[17:46:52] <Paperbot> YouTube video linked by shlomif: Sesame Street: Share It Maybe - published by Sesame Street
[17:46:56] <leitz> shlomif, but the real issue is that so many people, and a lot of coders, seem to expect others to work for free so they (they coders) don't have to do work or thinking.
[17:47:45] <leitz> shlomif, that expectation is a less desirable side effect of the open source movement.
[17:48:30] <leitz> shlomif, communal sharing by the author is fine, pirating and entitlement expecations aren't fine.
[17:48:44] <shlomif> leitz: and "open content" and "open music"
[17:49:53] <leitz> shlomif, true. If we go into it with an "open content" mindset, then great. If an author or composer spends years and funds to create, then why should they not get paid for their work?
[17:50:43] <shlomif> leitz: whatever, your book will likely be worthless and  unpopular anyway
[17:51:19] <leitz> A-ha!  export RELEASE_TESTING=1
[17:51:56] <shlomif> leitz: i patented that code! pirate...
[17:53:03] <shlomif> leitz: BTW: https://www.shlomifish.org/__mp3s/ - arrrrrrr
[17:53:03] <Paperbot> Link title(s): [ Index of /__mp3s ]
[17:54:10] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[17:54:31] *** Joins: mito (~mito@ip-78-45-104-223.net.upcbroadband.cz)
[17:55:28] * leitz feels rather disappointed.
[17:56:51] * GumbyPAN CPAN Upload: TOML-Tiny-0.15 by JEFFOBER https://metacpan.org/release/JEFFOBER/TOML-Tiny-0.15
[17:59:28] <shlomif> https://en.wikipedia.org/wiki/Streisand_effect ; https://en.wikipedia.org/wiki/Youtube-dl
[17:59:29] <Paperbot> Link title(s): [ Streisand effect - Wikipedia ] [ youtube-dl - Wikipedia ]
[18:03:58] *** Joins: gryphn (~gryphon@191.96.106.177)
[18:05:13] *** Joins: vrilles (~vrilles@user/aman)
[18:06:52] * GumbyPAN CPAN Upload: Template-Plugin-AutoDate-0.90 by NERDVANA https://metacpan.org/release/NERDVANA/Template-Plugin-AutoDate-0.90
[18:07:27] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[18:16:14] *** Quits: mito (~mito@ip-78-45-104-223.net.upcbroadband.cz) (Quit: Client closed)
[18:17:18] *** Joins: celphi (uid97751@user/celphi)
[18:20:46] *** Joins: EGD (~egd@user/egd)
[18:22:47] *** Joins: Su-Shee_ (~Susanne@p4ffc7a54.dip0.t-ipconnect.de)
[18:24:17] *** Quits: Su-Shee (~Susanne@p4ffc786e.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[18:40:12] * gordonfish wonders if this is a good day to visit camp crystal lake
[18:40:57] *** Joins: anthk_ (~anthk_@92.176.105.30)
[18:42:49] *** Joins: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi)
[18:43:49] *** Quits: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi) (Remote host closed the connection)
[18:44:11] *** Joins: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi)
[18:45:20] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Remote host closed the connection)
[18:55:09] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[18:58:04] *** Quits: Linux77 (~kvirc@187-126-71-30.user3p.veloxzone.com.br) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[18:58:37] *** Quits: habamax (~maksim.ki@user/habamax) (Quit: Leaving)
[19:03:06] *** Quits: Pixi (~Pixi@user/pixi) (Quit: Leaving)
[19:03:55] <simcop2387> everyone, please have a happier friday, https://v.redd.it/oh8s28ri54h71
[19:03:59] <Paperbot> Link title(s): [ when you have heated tile flooring and kittens : aww <https://www.reddit.com/r/aww/comments/p3ls80/when_you_have_heated_tile_flooring_and_kittens/> ]
[19:06:58] * GumbyPAN CPAN Upload: PDL-2.057 by ETJ https://metacpan.org/release/ETJ/PDL-2.057
[19:11:59] * GumbyPAN CPAN Upload: App-Tac_n-0.0.2 by SHLOMIF https://metacpan.org/release/SHLOMIF/App-Tac_n-0.0.2
[19:12:43] *** Joins: Pixi (~Pixi@user/pixi)
[19:13:26] *** Joins: anthk__ (~anthk_@92.176.105.30)
[19:15:26] *** Quits: anthk_ (~anthk_@92.176.105.30) (Ping timeout: 268 seconds)
[19:15:45] *** Joins: randir (~randir@195.175.18.98)
[19:16:59] * GumbyPAN CPAN Upload: Google-Ads-GoogleAds-Client-9.0.0 by WFANSH https://metacpan.org/release/WFANSH/Google-Ads-GoogleAds-Client-9.0.0
[19:22:00] *** Joins: Su-Shee (~Susanne@p4ffc7588.dip0.t-ipconnect.de)
[19:22:00] * GumbyPAN CPAN Upload: RT-Extension-REST2-1.14 by BPS https://metacpan.org/release/BPS/RT-Extension-REST2-1.14
[19:23:53] *** Quits: Su-Shee_ (~Susanne@p4ffc7a54.dip0.t-ipconnect.de) (Ping timeout: 248 seconds)
[19:29:06] *** Quits: rbraun (Eig5RsvW@user/rbraun) (Ping timeout: 240 seconds)
[19:31:01] *** Joins: rbraun (Wi2AVgob@user/rbraun)
[19:33:20] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Quit: Leaving)
[19:35:17] <Altreus> simcop2387: yay!
[19:35:21] <Altreus> happier than what?
[19:36:29] <choroba> happier than before
[19:39:50] *** Joins: thrig (~thrig@65.113.153.50)
[19:42:02] * GumbyPAN CPAN Upload: JMAP-Tester-0.101 by RJBS https://metacpan.org/release/RJBS/JMAP-Tester-0.101
[19:46:07] <Altreus> kittens help
[19:46:46] *** Joins: gast0n (~g4570n@user/gast0n)
[19:49:35] *** Quits: Manderson (~manderson@047-028-019-189.res.spectrum.com) (Read error: Connection reset by peer)
[19:50:20] <shlomif> Altreus: sup?
[19:50:24] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:50:51] *** Joins: krismatrix (~krismatri@38.80.149.51)
[19:51:34] <Altreus> tired ... nothing new :P
[19:54:09] <shlomif> Altreus: ah
[19:57:48] <shlomif> Altreus: i'm trying to get myself to work on this essay: https://github.com/shlomif/shlomif-tech-diary/blob/master/multiverse-cosmology-v0.2.x.asciidoc
[19:57:49] <Paperbot> Link title(s): [ shlomif-tech-diary/multiverse-cosmology-v0.2.x.asciidoc at master · shlomif/shlomif-tech-diary · ... ]
[19:58:15] <Altreus> go for a walk and let your brain think about it a bit, and you might get back with some motivation!
[19:58:30] <thrig> especially if a pit bull chases you
[20:07:22] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[20:07:48] *** Quits: thowe (~thowe@66.39.169.133) (Remote host closed the connection)
[20:08:13] *** Joins: thowe (~thowe@66.39.169.133)
[20:08:28] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[20:10:01] *** Quits: ufobat_ (~martin@dynamic-077-007-103-187.77.7.pool.telefonica.de) (Quit: Leaving)
[20:10:14] <shlomif> thrig: heh
[20:10:26] *** Quits: cation (cation@user/cation) (Ping timeout: 252 seconds)
[20:10:54] <shlomif> Altreus: my father has a spinning head today
[20:11:11] <ehuelsmann[m]> does that hurt?
[20:11:45] <Altreus> like Chucky?
[20:12:10] <shlomif> Altreus: and i added a new section now. \o/
[20:12:56] *** Joins: cation (cation@user/cation)
[20:14:16] <Altreus> \o/
[20:37:48] <djerius> LeoNerd: See this for one way of getting FFI to clean up a C struct allocation: https://gitlab.com/djerius/ciao-lib-region/-/blob/main/lib/CIAO/Lib/Region.pm#L71
[20:37:49] <Paperbot> Link title(s): [ lib/CIAO/Lib/Region.pm · main · Diab Jerius / CIAO-Lib-Region · GitLab ]
[20:39:17] *** Quits: Darkcoal (~user@167.86.186.21) (Quit: Darkcoal)
[20:39:31] *** Joins: Darkcoal (~user@167.86.186.21)
[20:39:40] *** Quits: Darkcoal (~user@167.86.186.21) (Remote host closed the connection)
[20:39:42] *** Quits: bit4bit (~bit4bit@190.128.123.78) (Read error: Connection reset by peer)
[20:39:53] *** Joins: Darkcoal (~user@167.86.186.21)
[20:40:05] *** Joins: bit4bit (~bit4bit@190.128.123.78)
[20:41:19] <shlomif> djerius: ah
[21:04:13] <djerius> The library I'm linking to doesn't cleanly separate who gets control of memory, so sometimes I can have Perl do the destruction via DESTROY, otherwise I have to wrap the library's functions (in C) and return a copy of the struct that Perl can manage on its own.  That works here, but in general, there is no in general.
[21:05:35] <Altreus> There is no in general in Ba Sing Se
[21:05:45] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 248 seconds)
[21:09:26] <djerius> Altreus: Thanks for the rabbit hole.
[21:16:10] <Altreus> careful :)
[21:16:53] <thrig> why, did the general come out?
[21:17:12] * GumbyPAN CPAN Upload: OPCUA-Open62541-0.029 by BLUHM https://metacpan.org/release/BLUHM/OPCUA-Open62541-0.029
[21:25:21] *** Quits: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi) (Read error: Connection reset by peer)
[21:28:37] *** Joins: praet (~praet@wsip-68-15-32-50.ri.ri.cox.net)
[21:32:13] * GumbyPAN CPAN Upload: Carp-Assert-More-2.0.1 by PETDANCE https://metacpan.org/release/PETDANCE/Carp-Assert-More-2.0.1
[21:32:37] *** Joins: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi)
[21:34:04] *** Joins: ology (~gene@user/ology)
[21:36:17] *** Joins: jetchisel (jetchisel@user/jetchisel)
[21:37:13] <praet> Can anyone help find an object in an array matching on an attribute? grep ...name eq 'John'..  @people
[21:37:31] <Grinnz> grep { $_->name eq 'John' } @people
[21:38:20] <Grinnz> if you're doing it many times, consider putting the objects in a hash keyed by the name attribute
[21:38:30] <ology> https://metacpan.org/pod/List::Util#any maybr too :)
[21:38:30] <Paperbot> Link title(s): [ List::Util - A selection of general-utility list subroutines - metacpan.org ]
[21:39:22] <praet> ok so hash it by the "name" then just grep again
[21:40:18] <Grinnz> you don't need grep if you can do a hash lookup
[21:40:39] <Grinnz> my $john = $objects_by_name{John}
[21:40:48] <praet> oh right 
[21:41:07] <thrig> assuming names are unique, or other such complications
[21:41:26] <zgu> like a schwarzian transform but for searching. and with hashes. so not really the same thing
[21:42:06] <praet> is map the right way -> my %objects_by_name = map { $_->name => $_ } @people;
[21:42:26] <Grinnz> there's plenty of right ways, but that would work yes
[21:42:30] <shlomif> praet: yes
[21:42:41] <Grinnz> i would put () around the list inside the map block, as sometimes the parser gets confused
[21:42:49] <Grinnz> and tries to make it a hashref
[21:43:26] *** Quits: Darkcoal (~user@167.86.186.21) (Ping timeout: 268 seconds)
[21:45:29] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 268 seconds)
[21:47:37] *** Joins: Manderson (~manderson@66.228.19.117)
[21:48:23] <mst> my %objects_by_name = map +($_->name => $_), @people;
[21:50:51] *** Quits: choroba (~E.Choroba@88.146.255.106) (Quit: Leaving)
[21:58:37] *** Quits: ology (~gene@user/ology) (Quit: leaving)
[22:06:12] <praet> How would you tighten up this: my $person = $person_by_name{'John'} if exists($person_by_name{'John'});   if ($person) {...}
[22:06:37] <praet> btw thanks for the answers everyone...
[22:07:21] <Grinnz> well first, don't use a postfix if on a my declaration, it causes bugs
[22:07:34] <Grinnz> the condition is unnecessary, if it doesn't exist it will just assign undef anyway
[22:08:37] <praet> can this be a oneliner then? like if (my $p = $person_by_name{'John'}) { $p.. }
[22:09:36] <Grinnz> sure
[22:10:18] <Grinnz> just make sure the object can't be false (it's best practice to make sure objects never overload to false, but some do)
[22:11:37] *** Joins: akaWolf (~akaWolf@akawolf.org)
[22:13:20] <thrig> semipredicate problem to see you on line #2 sir
[22:13:21] *** Quits: autopsy (~autopsy@2600:8800:ff0d:400:802e:52a3:5fa9:b1e2) (Remote host closed the connection)
[22:21:47] <gordonfish> if ( defined(my $p = $person_by_name{'John'}) ) { $p.. }
[22:23:02] <gordonfish> Or: my $p = $person_by_name{'John'}; if (defined $p) { ... } # Makes it easier to add other conditions in the if based on $p.
[22:23:27] <gordonfish> (or based on other things)
[22:32:51] *** Quits: smitop (~smitop@user/smitop) (Quit: Ping timeout (120 seconds))
[22:33:34] *** Joins: smitop (~smitop@user/smitop)
[22:36:06] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[22:41:57] *** Joins: YaoNai (~YaoNai@user/yaonai)
[22:45:01] *** Quits: EGD (~egd@user/egd) ()
[22:45:40] *** Quits: anthk__ (~anthk_@92.176.105.30) (Quit: nyaa~)
[22:45:50] *** Joins: anthk_ (~anthk_@92.176.105.30)
[22:46:10] *** Joins: EGD (~egd@user/egd)
[22:47:44] <djerius> Can anyone suggest a module to parse and resolve queries against X Window resource files (other than shelling out to xrdb)?
[22:49:16] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[22:51:01] <shlomif> djerius: oh, they are a blast from the past
[22:52:24] <djerius> yeah. and much abused.  a colleague embedded a lua interpreter in his code and embedded lua code in the resource file.  I didn't ask why.
[22:54:34] <djerius> they have a nice hierarchical structure with easy ways to specify defaults for mutiple levels.  that's the part I want to nick.  I wrote something horribley similar many years back (https://metacpan.org/pod/Config::Wild), but don't want to look at it again.
[22:54:34] <Paperbot> Link title(s): [ Config::Wild - parse an application configuration file with wildcard keywords - metacpan.org ]
[22:55:13] <ehuelsmann[m]> djerius: a colleague of mine shipped a Common Lisp compiler as "the program" and then shipped the code as "the configuration file".
[22:55:26] <ehuelsmann[m]> much easier to get new config to production than a new application...
[22:56:11] <djerius> ehuelsmann[m]: that's brilliant!
[22:57:49] <djerius> somehow I find that appropriately lispish, and I don't know why.
[23:02:10] <ehuelsmann[m]> the sysadmin couldn't tell the difference anyway.
[23:02:45] <praet> ehuelsmann[m]: thats amazing
[23:03:29] <ehuelsmann[m]> There's a smile on my face everytime I think about it.
[23:06:15] <Altreus> ancient Perl FUD discovered https://github.com/Droogans/unmaintainable-code#avoid-
[23:06:16] <Paperbot> Link title(s): [ GitHub - Droogans/unmaintainable-code: A more maintainable, easier to share version of the infamo... ]
[23:06:46] <Altreus> conveniently omitting that postfix if is the ONLY way you can omit braces in Perl, and therefore you can only do this to minimal effect
[23:13:09] <djerius> now I understand why I could never get my X resources to work: https://x.org/releases/X11R7.7/doc/libX11/libX11/libX11.html#Resource_Manager_Matching_Rules
[23:13:12] <Paperbot> Link title(s): [ Xlib - C Language X Interface ]
[23:13:31] <djerius> it's too complicated for me.
[23:13:45] *** Quits: shlomif (~shlomif@87.68.242.72.adsl.012.net.il) (Ping timeout: 248 seconds)
[23:17:33] *** Joins: Darkcoal (~user@2001:16a2:7a89:9800:ed38:2f2:29ab:fb07)
[23:18:15] <Harzilein> Altreus: i'm sure in the theme of the text it'd be a valid technique though. but yeah, bit too much liberty taken in trying to sound cool.
[23:19:55] <zgu> i have far more memories of Modelines from my early x11 days than i do of xrdb
[23:20:44] <vanfanel64> I have a couple questions about the following
[23:20:47] <vanfanel64> sweval $_ = "# Stuff\n#before\n\n# Foo heading\n#bar 1\n# blah\n#bar 2\n\n# Stuff\n#after\n"; [ m/^ ( \s* \# \s+ Foo .* \R ) ( (?: \s* \# .*? \R )* )/mx ];
[23:21:01] <vanfanel64> perlbot sweval $_ = "# Stuff\n#before\n\n# Foo heading\n#bar 1\n# blah\n#bar 2\n\n# Stuff\n#after\n"; [ m/^ ( \s* \# \s+ Foo .* \R ) ( (?: \s* \# .*? \R )* )/mx ];
[23:21:02] <perlbot> vanfanel64: ["\n# Foo heading\n","#bar 1\n# blah\n#bar 2\n\n# Stuff\n#after\n"]
[23:21:09] *** Quits: anthk_ (~anthk_@92.176.105.30) (Quit: nyaa~)
[23:21:38] <vanfanel64> 1. Why is $1 starting with a \n when it should start matching after the begining of a line due to ^ ?
[23:21:40] *** Quits: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi) (Remote host closed the connection)
[23:22:04] <vanfanel64> 2. Why is $2 going beyond "#bar 2\n" ?
[23:22:53] <vanfanel64> $2 should only be matching lines with a # in the beginning, with optional leading spaces
[23:23:04] <vanfanel64> I am very confused
[23:24:25] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[23:25:48] <gordonfish> vanfanel64: I believe you want \h instead of \s (See https://perldoc.pl/perlre#Character-Classes-and-other-Special-Escapes -> \h)
[23:25:49] <Paperbot> Link title(s): [ perlre - Perl regular expressions - Perldoc Browser ]
[23:26:12] <gordonfish> sweval: $_ = "# Stuff\n#before\n\n# Foo heading\n#bar 1\n# blah\n#bar 2\n\n# Stuff\n#after\n"; [ m/^ ( \h* \# \h+ Foo .* \R ) ( (?: \h* \# .*? \R )* )/mx ];
[23:26:14] <perlbot> gordonfish: ["# Foo heading\n","#bar 1\n# blah\n#bar 2\n"]
[23:27:00] <vanfanel64> gordonfish, thank you. I did not know about \h. Why does \s match \n after a ^ though? That still bugs me
[23:28:15] *** Quits: dimbag (~dimbag@pppoe246h31.ppp.kmv.ru) (Read error: Connection reset by peer)
[23:28:54] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[23:30:31] <gordonfish> \n is a whitespace character, which \s matches
[23:32:06] <vanfanel64> I know, but I do not understand why $1 had \n at the start, when that is from the line before it. I had understood that with /m modifer, ^ was the beginning of the line, so that \n should not be matchable there, since it is not the beginning of the line. What is going on, anyone?
[23:34:12] *** Joins: wilk (~wilk@user/wilk)
[23:34:43] <vanfanel64> m/^ ( \s* \# \s+ Foo .* \R ).../m <--< This is what I am referring to. \s* came after ^, and ^ should anchor to the start of the line, so $1 should have started with "#" not "\n", that line feed is not of that line. This feels like a bug?
[23:40:35] <Harzilein> zgu: i have more memories of xrdb, plus all in all there's less variation around my experiences w/ modelines (usually okay, sometimes it needed too many attempts but it "merely" took patience) than there was with x resources matching.
[23:40:36] *** Quits: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net) (Quit: Leaving)
[23:41:51] <vanfanel64> Anyone?
[23:41:58] <djerius> zgu: I started with SunOS; no modelines required. hardware just worked.
[23:42:14] <vanfanel64> If this is really a bug I want to help verify it, though my skills are limited
[23:42:15] <Harzilein> zgu: i really loved that that knowing _some_ modelines theory allowed for amazing settings for svgatextmode.
[23:42:21] <Harzilein> -redundant that
[23:44:14] <djerius> actually, SunOS had SunWindows, not X.  ouch. that's ancient. I remember the cool looking MIT colors the first time I ran X.  
[23:46:27] * GumbyPAN CPAN Upload: Mojolicious-9.21 by SRI https://metacpan.org/release/SRI/Mojolicious-9.21
[23:46:33] <praet> \j javascript
[23:46:45] <praet> ignore that
[23:46:53] * praet 
[23:50:38] *** Quits: Darkcoal (~user@2001:16a2:7a89:9800:ed38:2f2:29ab:fb07) (Ping timeout: 272 seconds)
[23:52:23] *** Joins: Darkcoal (~user@167.86.186.21)
[23:53:50] *** Joins: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[23:56:28] * GumbyPAN CPAN Upload: Text-Tabs+Wrap-2021.0813 by ARISTOTLE https://metacpan.org/release/ARISTOTLE/Text-Tabs+Wrap-2021.0813
[23:57:08] *** Joins: xenial-user10 (~androirc@20014C4C17E1D200A93DDBE5315E3613.catv.pool.telekom.hu)
