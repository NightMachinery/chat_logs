[00:13:00] <lotuseater> good argument
[00:13:16] *** Joins: zacts (~zacts@user/zacts)
[00:25:28] <gilberth> pjb: Indeed, but somehow it must hurt, doesn't it? Perhaps it's just some psychological pain? Who knows?
[00:27:26] <gilberth> pjb: Energy costly? A lot of people could use some extra burning of calories. So instead of doing sport, perhaps the recommendation should be "Think!" :)
[00:33:54] *** Quits: silasfox (~sbv@xdsl-87-78-183-74.nc.de) (Ping timeout: 240 seconds)
[00:36:30] <pjb> gilberth: definitely.  On the other hand, convering fat into sugar for the brain is also metabolically costly.  When you get lean, muscles are the first thing to disappear.  You're left with fat and brain (which is itself fat).
[00:36:54] <pjb> metabolism is a bitch.
[00:37:28] <pjb> You need to make muscles from fat, and then burn the muscles for the brain.
[00:38:26] <pjb> Hence the spine split neuralink technology, which lets a "trainer" use your body, while your brain can control computers in a virtual environment.
[00:53:46] *** Quits: zos (~zosthegoa@ool-457a8044.dyn.optonline.net) (Quit: WeeChat 2.8)
[01:13:22] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 246 seconds)
[01:14:13] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[01:24:44] *** Quits: christophergray (~christoph@190.148.52.48) (Ping timeout: 265 seconds)
[01:31:03] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 250 seconds)
[02:32:12] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[02:33:08] <dave0> maw
[02:35:41] <hayley> https://www.reddit.com/r/lisp/comments/osqgqe/common_lisp_still_beats_java_rust_julia_dart_in/h7013ds/
[02:35:42] -ixelp- Common Lisp still beats Java, Rust, Julia, Dart in 2021 on benchmarks based on phone number encoding from the famous pap [...]
[02:35:54] <hayley> This thread is more of an exercise in learning how dumb people think compilers are.
[02:42:11] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[02:43:58] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[02:51:26] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[03:05:46] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[03:15:00] *** Joins: dra (~dra@2a04:4540:6405:900:a44e:4de8:8d9b:c72f)
[03:15:03] <dra> Hello!
[03:15:46] <hayley> Hello dra.
[03:16:46] <dra> Good to be back. I kind of missed the whole FreeNode thing.
[03:17:08] <hayley> https://www.youtube.com/watch?v=HOCrm6jH_8g
[03:17:09] -ixelp- One of These Days (Live At Pompeii 2016 Remix) - YouTube
[03:17:16] *** Quits: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net) (Ping timeout: 272 seconds)
[03:45:53] *** Quits: dra (~dra@2a04:4540:6405:900:a44e:4de8:8d9b:c72f) (Quit: Leaving)
[03:57:33] *** Joins: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net)
[03:58:51] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 276 seconds)
[04:36:31] *** Quits: ec (~ec@gateway/tor-sasl/ec) (Quit: ec)
[04:55:08] *** Joins: zacts (~zacts@user/zacts)
[04:55:35] *** Joins: zacts40 (~zacts@user/zacts)
[04:56:05] *** Joins: zacts47 (~zacts@user/zacts)
[04:56:10] *** Quits: zacts47 (~zacts@user/zacts) (Write error: Broken pipe)
[04:59:49] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 246 seconds)
[05:00:10] *** Quits: zacts40 (~zacts@user/zacts) (Ping timeout: 246 seconds)
[05:00:32] *** Quits: lotuseater (~user@p200300e7871b3f0034ed9e810c3724ce.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[05:39:36] *** Quits: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd) (Ping timeout: 276 seconds)
[06:04:41] <hayley> https://www.youtube.com/watch?v=M3SvAhjhbpA TIL David Bowie tried to have Numan thrown off this TV show
[06:04:42] -ixelp- Gary Numan (TV, Live and Rarities) [06]. I Die: You Die (Kenny Everett) - YouTube
[06:19:37] *** Joins: zacts (~zacts@user/zacts)
[06:26:00] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[06:27:28] *** Joins: zacts (~zacts@user/zacts)
[06:27:39] *** Quits: zacts (~zacts@user/zacts) (Write error: Broken pipe)
[06:31:54] *** Joins: nihaal (~nihaal@106.201.177.18)
[06:42:16] *** Joins: zacts (~zacts@user/zacts)
[06:46:04] <hayley> https://www.pine64.org/2021/06/15/june-update-new-hardware-and-more-on-the-way/ So we have a 4-core ARM machine with an embedded 32-bit RISC-V core too. Do they need it that much?
[06:46:05] -ixelp- June update: new hardware and more on the way | PINE64
[06:48:39] <hayley> "A RISC-V soldering iron running open firmware - your next project companion." what the fuck
[06:48:40] <White_Flame> pine is about bootstrapping support, not necessarily super commercializable stuff
[06:49:19] <hayley> Right. But TIL I needed a user programmable soldering iron.
[06:49:26] <White_Flame> heh
[06:50:25] <hayley> After one which is just an iron rod connected to mains (which ripped through a prototyping board), the one I have now is probably all analog. It works fine.
[06:56:32] <hayley> Seems I may have to gather up all the magic numbers in SICL which are offsets for some slot from a tagged pointer. Like what is an offset of 5? Well, it's the second slot if you have a low-tag of 3...
[06:57:39] <hayley> I forgot what the actual case was (3 is the immediate object tag, so that doesn't have slots) but that's not obvious, or I'm an idiot. Probably both.
[07:17:01] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 246 seconds)
[07:29:07] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[07:29:11] *** Joins: zacts (~zacts@user/zacts)
[07:31:15] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[08:05:19] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 246 seconds)
[08:10:14] *** Quits: makomo (~makomo@user/makomo) (Quit: WeeChat 3.0.1)
[08:53:11] <hayley> https://www.youtube.com/watch?v=XktZ4Os7kwE
[08:53:11] -ixelp- CALLING THE TF2 SNIPER AT 3AM! (VERY SCARY) - YouTube
[09:16:00] * hayley contemplates parallelizing QL:REGISTER-LOCAL-PROJECTS
[09:17:42] <hayley> It's kinda slow if it's not in disk cache. But then again we are just scanning inodes (or equivalent; btw I use btrfs) so there might not be disk scheduling tricks there.
[09:21:20] *** Quits: waaron (~aaron@194.110.112.10) (Quit: WeeChat 3.0.1)
[09:35:53] <hayley> Though in 2021 I wonder why we can't just put a write barrier on the file system, so that .asd files are logged in the index. But that might be possible, idk.
[09:37:08] <hayley> Aha, there is incrond for that kind of thing.
[09:42:31] *** Joins: selwyn (~selwyn@user/selwyn)
[10:13:22] *** Joins: silasfox (~sbv@2001-4dd6-abca-0-de39-b264-6870-a7ee.ipv6dyn.netcologne.de)
[10:13:47] <sm2n> why btrfs
[10:14:03] <sm2n> I am still salty because I lost a bunch of data to it years ago
[10:14:22] <sm2n> being an early adopter for a filesystem is not a good idea, unless you have backups
[10:28:08] <hayley> It hasn't eaten my data yet.
[10:28:24] <hayley> But IIRC I liked the compression and ZFS was more of a hassle to set up.
[10:37:53] *** Joins: shka (~herr@109.231.62.239)
[10:44:27] *** Quits: silasfox (~sbv@2001-4dd6-abca-0-de39-b264-6870-a7ee.ipv6dyn.netcologne.de) (Ping timeout: 276 seconds)
[10:55:17] <pjb> sm2n: we should have a  FUSE file system that uses the new file system in parallel to the stable file system, comparing results, until we're satisfied the new file system is stable.
[10:55:36] <pjb> sm2n: kind of RAID-1 mirror but at the file system API level.
[11:08:16] *** Quits: nihaal (~nihaal@106.201.177.18) (Quit: nihaal)
[11:12:23] *** Joins: rain3 (~rain3___@79.115.250.43)
[11:12:51] <MichaelRaskin> BtrFS has stopped eating my data years ago
[11:26:52] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[11:28:21] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[11:32:46] *** Quits: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net) (Ping timeout: 265 seconds)
[11:42:53] <hayley> I haven't lost anything since 2015 or so. /me suspects the drive will die first.
[12:02:53] *** Quits: eschaton (~eschaton@li541-49.members.linode.com) (Quit: ZNC 1.8.x-git-16-0982d826 - https://znc.in)
[12:27:26] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[12:28:11] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[12:29:24] *** Joins: recordgroovy (~recordgro@c-67-185-152-122.hsd1.wa.comcast.net)
[12:33:42] <hayley> https://www.youtube.com/watch?v=U1VgpWBs-FM
[12:33:42] -ixelp- Heikki's Suburbia Bus Tour - YouTube
[12:38:11] <gilberth> Good morning #lispcafe!
[12:38:58] <gilberth> I never had a drive failing for me. Never.
[12:39:47] <hayley> Good morning gilberth!
[12:40:14] * hayley is told she misread Appel's GC faster than stack allocation paper. Right, he doesn't say the GC is free, but in the damn abstract he says you can make it arbitrarily cheap.
[12:44:31] <hayley> And never mind the experimental evidence that Click just didn't care for more than Java's normal escape analysis, given the GC was that good. Appel never said it was free - never mind that my oh so holy stack isn't free either.
[12:45:09] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[12:46:42] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[12:48:11] <hayley> At some point I'd just say "if we weren't pissing about comparing papers with numbers, I'd just write some shit that goes faster than thee" but I was already bitten with something similar by someone who thought that *orders of magnitude* difference were insignificant, so I don't want to look like that kind of idiot.
[12:51:54] <hayley> As gilberth would say, the great hacker in the sky was cheap on intelligence.
[12:52:48] <gilberth> Indeed.
[12:54:11] <gilberth> But I am olde. I don't care anymore what others believe or what inferior tools they use.
[12:54:47] <hayley> https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.39.8219&rep=rep1&type=pdf Based on even the first page, I am convinced that Appel describes how to make GC arbitrarily cheap, surpassing even stack allocation with enough memory for a copying GC.
[12:55:41] <gilberth> If they wish, they could spend ten times the time to hack their stuff, buffer overflows, integer overflows and memory management bugs included. Fine with me.
[12:55:43] <hayley> He never says "free" though, merely saying that you can run cheaper than anything else (in CPU time, not memory of course).
[12:56:07] <gilberth> As long has my Emacs and my CL run in any way, I have all I need.
[12:56:54] * gilberth builds all cm fonts meanwhile.
[12:57:33] <gilberth> Takes a while as I still have full type checking in place.
[12:59:40] * hayley resists calling everyone she doesn't like a game programmer again. The last one was, but there's no evidence this time.
[12:59:47] <gilberth> Anyhow, GC is a tricky topic. People tend to see the pause time only. What they forget is that freeing is a NOP and allocation is cheap. The time spend in a traditional malloc/free allocator is just not seen. Worse with RC.
[13:00:21] <hayley> The standard here seems to be using the stack, which of course doesn't work in the general case, but I assume whoever wants the stack isn't doing anything fun.
[13:00:54] <gilberth> Right. They could as well solve the halting problem.
[13:01:05] <hayley> And as Appel said (again), you do have to fiddle with stack frames, and so the stack isn't free either.
[13:01:20] *** Joins: lotuseater (~user@p200300e7871b3f0034ed9e810c3724ce.dip0.t-ipconnect.de)
[13:01:59] * gilberth doesn't like stack allocation at all.
[13:02:11] <lotuseater> ohai gilberth :)
[13:02:15] <lotuseater> why that?
[13:02:39] <gilberth> Because then, I can't take pointers to those objects in a safe way. That is why.
[13:02:51] <lotuseater> sometimes i wanted to use DYNAMIC-EXTENT but it seems tricky. sometimes it's okay
[13:02:54] <hayley> https://www.youtube.com/watch?v=y-E7_VHLvkE
[13:02:54] -ixelp- Pink Floyd -"Echoes" Pompeii - YouTube
[13:03:00] <lotuseater> ah I see
[13:03:08] <lotuseater> ohai to you too hayley :)
[13:03:29] <hayley> I'd rather the compiler prove it, but then (repeating myself again) it doesn't seem to be worth it most of the time.
[13:03:45] <gilberth> If the compiler could prove that an object may not escape -- fine. But in presence of a debugger that will never be the case.
[13:03:54] <lotuseater> cool location such an amphitheatre
[13:04:46] <hayley> The last guy was so confident he wouldn't fuck up his stack pointers, and kept complaining that we ran safe. If he made anything actually useful, I might be able to say he could kill someone with such an attitude.
[13:04:59] <lotuseater> i could use it when having a LOOP and then LET bindings in the do clause
[13:05:18] <gilberth> Which is a corollary of the fact that CL does not cover up every evidence in case of a runtime error. That is: We don't unwind the stack before calling condition handlers.
[13:05:42] <lotuseater> in every implementation?
[13:05:55] <gilberth> Sure.
[13:06:23] <selwyn> you have to keep the stack right
[13:06:30] <hayley> n.b. if you want to inspect the stack in a handler, HANDLER-CASE unwinds and HANDLER-BIND doesn't. But when you see a debugger, it isn't unwound yet.
[13:06:39] <gilberth> It's specified that way.
[13:08:51] <hayley> "Simula [Dahl66] started a revolution in computer languages which is not yet finished. It proposed the equivalence "programs = physical objects with behavior", but forgot to throw away the previous equivalence (of a mathematical metaphor). Smalltalk [Goldberg83] picked up the ball, but the mathematical expressionists then converted the metaphor of physical objects into polymorphic mathematical type systems--i.e., C++ [Stroustrup86]. The elegance
[13:08:51] <hayley> of the mechanical metaphor was thus buried underneath mathematical mysticism." - Henry Baker
[13:09:24] <hayley> Still, where's the damn ACM letter I wanted to find?
[13:09:43] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[13:09:52] <hayley> https://plover.com/~mjd/misc/hbaker-archive/letters/CACM-DubiousAchievement.html
[13:09:53] -ixelp- "Dubious Achievement", Comm. of the ACM 34, 4 (April 1991), 18.
[13:10:23] <lotuseater> pff polymorphism in C++ is a lie :D
[13:12:40] <lotuseater> this "every corner optimized" destroys elegance
[13:13:05] <lotuseater> "in which bad programming style can kill people"
[13:16:17] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[13:16:36] <hayley> I still have to figure out my damn linear-tag regular expressions, which I still think is nicer in some aesthetic way. But I have had to be careful with explicit duplication points up till now, and now I want to tear most of them down.
[13:22:41] <lotuseater> they don't want me for the job
[13:24:11] <shka> damn mathiness destroys all of the IT
[13:27:43] <hayley> At least I know what "tags appearing in Q' but not Q" means with linearity, and I don't even bother with that.
[13:27:48] <lotuseater> sorry
[13:28:25] <hayley> What job?
[13:28:33] <lotuseater> that AutoLISP job
[13:29:05] <lotuseater> was just with a mediation company so don't get the difference even less
[13:29:13] <hayley> (The quote was from an algorithm in gilberth's paper, which IIRC he does some side channeling to get. So this is nicer.)
[13:29:19] <lotuseater> so they'll just end up with someone knowing C#
[13:29:33] <hayley> A pity, though you don't have to inflict with Autolisp still.
[13:29:46] <lotuseater> yeah that's good on the other site
[13:29:56] <lotuseater> but when do I get my chance?
[13:30:26] <lotuseater> sorry
[13:30:46] <hayley> I got my job from fortunate timing when I needed to work and when beach was hiring.
[13:31:11] * selwyn angry math noises
[13:31:43] <lotuseater> yes I need someone who knows stuff and recognizes my value
[13:32:03] <lotuseater> so I'm a bit down now
[13:32:06] <hayley> And try to shitpost on IRC for as long as possible.
[13:32:35] <lotuseater> yes I'll do. even thought on making a hackersnews account
[13:32:41] * hayley also had not one but two Ravenpack employees PM her.
[13:32:58] <lotuseater> yes but YOU are a real expert in things
[13:33:27] <lotuseater> should i write them back "good luck with one only knowing C#"? :D
[13:33:50] <selwyn> hayley: what did they ask
[13:34:19] <hayley> Me? An expert? Come on, I can barely pass bachelor's degree courses apparently.
[13:34:31] <hayley> selwyn: Just if I wanted a job.
[13:34:35] <selwyn> oh 
[13:34:41] <lotuseater> had another funny idea i wanted to share with you. when they say in Game of Thrones "By the old gods and the new." we could say with honor "By the old dialects and the new."
[13:34:54] <selwyn> it´s nice to get unsolicited offers like that
[13:35:27] <lotuseater> they seem to do analytics
[13:35:48] <hayley> As they say in Dancing with the Moonlit Knight, "They eat without a sound, diiiiigesting Lisp by the pound"
[13:35:50] <selwyn> lotuseater: i had a half-stupid idea of making a high fantasy work based on the lisp world
[13:36:23] <hayley> Yeah, news goes in, signals for traders goes out.
[13:36:23] <selwyn> i.e. common lisp implementations can be kingdoms of men, for example, and scheme dialects can be elves
[13:36:40] <lotuseater> selwyn: we could make more awesome stuff like the comics in land of lisp :)
[13:36:45] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Read error: Connection reset by peer)
[13:36:46] * hayley would rather Smalltalk than Scheme.
[13:36:58] <selwyn> clojure = dwarves (i guess)
[13:37:13] <lotuseater> haha. like at one book cover!
[13:37:14] <selwyn> or orcs if you want to be unkind
[13:37:27] <lotuseater> it was ... let me think ... "Clojure for the brave and true"
[13:37:37] <selwyn> oh yeah
[13:37:40] <shka> clojure dwarves
[13:37:45] <lotuseater> haha so "Orc Battle" version 2
[13:37:46] <shka> but java goblins
[13:37:48] <hayley> Wageslave Scheme has wageslaves
[13:37:55] <lotuseater> or making a text adventure from it
[13:37:58] <shka> so they live next to each other
[13:38:25] <selwyn> orcs = c++
[13:38:32] <lotuseater> thanks you all, now I'm not so down anymore
[13:38:46] <shka> selwyn: c++ should be some kind of lovecraftian creatures
[13:38:48] <lotuseater> i thought C++ are the mammots
[13:38:59] <lotuseater> Cuthulu?
[13:39:13] <shka> great race of yith comes to mind
[13:39:29] <shka> https://comicvine.gamespot.com/a/uploads/scale_small/12/128795/6531975-mike-bukowski-yithian.jpg
[13:40:05] <shka> or the dimensional shambler
[13:40:14] * hayley plans to desert this roleplay with Gnuxie by hot air balloon
[13:40:19] <lotuseater> this gets me thinking if we should also have something like Yggdrasil the world tree
[13:40:54] <lotuseater> or traveling to another reality/universe "yes of course we have Common Lisp too"
[13:41:33] <lotuseater> i should stick more to #lispcafe when my depression comes up again
[13:41:52] <selwyn> well, i am glad that the idea amuses you
[13:41:59] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[13:42:05] <lotuseater> it does indeed, and much potential
[13:42:22] <shka> land of lisp, the video game
[13:42:37] <lotuseater> I'm not soo bad at creative writing :)
[13:43:34] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[13:45:06] <lotuseater> if i would know what company that is which needs AutoLISP I would contact them directly
[13:47:01] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[13:49:24] <lotuseater> selwyn: and the TVA from Marvel is at us the authority outside the universe which governs the sticking to the CLHS standard
[13:50:02] <lotuseater> so not "Time Variance Authority" but "Standard Variance Authority" or "HyperSpec Variance Authority"
[13:53:28] <lotuseater> By the old dialects and the new!
[13:53:36] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[13:54:09] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[14:05:48] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[14:10:14] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[14:11:16] <lotuseater> or rewriting this song https://www.youtube.com/watch?v=WA4fWO7JHMY to "Don't mess with King Lisp" :D
[14:11:17] -ixelp- Cuphead - Die House [Electro Swing Remix (ft. OR3O)] - YouTube
[14:20:06] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[14:24:14] *** Joins: zacts (~zacts@user/zacts)
[14:31:10] *** Joins: kevingal (~quassel@2a02:8084:4140:f300:5:7c36:6d3c:3648)
[14:36:25] <lotuseater> did you see the new asdfmovie already?
[14:39:32] *** Joins: selwyn (~selwyn@user/selwyn)
[14:42:33] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[14:48:20] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[14:51:15] <lotuseater> fuzzy find string search algorithm
[14:51:32] <lotuseater> oh damn sry, that should have gone to startpage.com :D
[14:55:31] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 246 seconds)
[14:55:40] *** Joins: random-nick (~random-ni@87.116.182.181)
[15:15:28] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[15:50:27] * hayley uploaded an image: (89KiB) < https://libera.ems.host/_matrix/media/r0/download/matrix.org/KOPRIdbiikAZbohYxVKwDZIY/directness-principle.jpeg >
[15:53:16] <contrapunctus> Didn't someone want an SICP VN too? 😄
[15:55:50] <hayley> I want Smalltalk-80 the Language and its Implementation visual novel
[15:56:24] <hayley> Bits of History, Words of Advice is a manga imho
[15:57:02] <hayley> gilberth would you rather Scheme or Smalltalk
[16:06:46] *** Joins: silasfox (~sbv@xdsl-87-78-183-74.nc.de)
[17:23:50] *** Quits: rain3 (~rain3___@79.115.250.43) (Quit: Leaving)
[17:24:39] *** Joins: selwyn (~selwyn@user/selwyn)
[17:48:14] *** Joins: waleee (~waleee@2001:9b0:216:8200:d457:9189:7843:1dbd)
[17:56:19] *** Joins: Cathrinus (~meow@vyos/developer/Lulu)
[18:00:20] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[18:04:08] *** Quits: Lulu (~meow@vyos/developer/Lulu) (*.net *.split)
[18:05:16] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[18:10:45] *** Quits: selwyn (~selwyn@user/selwyn) (Read error: Connection reset by peer)
[18:25:58] *** Joins: zacts (~zacts@user/zacts)
[18:45:01] <hayley> Why did Freenode go kaput on https://netsplit.de/networks/history/top10_2021u.png?
[18:51:21] <aeth> hayley: there's actually a public error log so you can see for yourself: https://netsplit.de/networks/status.php?net=freenode
[18:51:48] <aeth> hayley: you can see when freenode introduced the registered-accounts-only restriction on the chart tracker that's still up/connected: https://www.hinner.com/ircstat/Socip_F.html
[18:51:48] -ixelp- Kajetan Hinner, IRC Statistics Freenode
[18:59:57] <hayley> So you have to register outside IRC now?
[19:00:11] <aeth> yes
[19:00:25] <hayley> Crikey!
[19:00:30] <aeth> rasengan is... quite possibly the worst person to have ever run an IRC network of any notable size, mainly because he bought and then drove away the audience
[19:01:03] <aeth> and for someone who wants everyone to do everything in IRC instead of the web (jobs, bbs, "chit" twitter clone, etc.)...
[19:01:13] *** Quits: zacts (~zacts@user/zacts) (Ping timeout: 246 seconds)
[19:01:14] <lotuseater> phew
[19:01:17] <aeth> he sure didn't think that external-registration-only thing through
[19:01:49] <ck_> that discrepancy is very fascinating.. all the talk of how super awesome the inclusivity of IRC is, and next to that "what really happened"
[19:03:11] <hayley> Sadly they deleted my "looking for admins" job post and my forum post asking if someone could check my TLA+ code got nowhere.
[19:13:26] * hayley expects to have been told to just use a borrow checker to disallow data races in this day and age.
[19:24:33] *** Joins: zacts (~zacts@user/zacts)
[19:32:18] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[19:55:23] *** Joins: nihaal (~nihaal@106.201.177.18)
[19:57:23] *** Quits: zacts (~zacts@user/zacts) (Quit: Client closed)
[19:58:54] *** Joins: selwyn (~selwyn@user/selwyn)
[20:00:28] *** Quits: nihaal (~nihaal@106.201.177.18) (Quit: nihaal)
[20:14:28] * gilberth searches Amazon for the GC Handbook and gets this <https://www.amazon.de/-/en/DWD-Company-separation-separator-practical-transport/dp/B00TK0RM2K/ref=sr_1_7?dchild=1&keywords=garbage+collection+handbook&qid=1627659718&sr=8-7>
[20:16:40] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[20:18:24] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[20:22:38] <gilberth> Does anybody know whether the Dragon book has a chapter about LALR(1)? Or would I need Hopcroft for that?
[20:31:21] *** Joins: aeth_ (~aeth@user/aeth)
[20:31:27] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[20:31:32] *** aeth_ is now known as aeth
[20:53:45] *** Quits: silasfox (~sbv@xdsl-87-78-183-74.nc.de) (Quit: WeeChat 3.2)
[20:54:05] *** Joins: silasfox (~sbv@2001-4dd6-abca-0-de39-b264-6870-a7ee.ipv6dyn.netcologne.de)
[20:58:54] <gilberth> I still would prefer TeX being documented properly.
[21:07:24] <pjb> gilberth: is it not? I though it was written as literate programming. There's a whole book of documentation from which the code is extracted!
[21:08:23] <pjb> Or do you mean literate programming doesn't work, in the age of github?
[21:13:15] <gilberth> pjb: I don't consider that documentation. For the DVI and GF format you'd either read the source and decipher it, or you find old TUGboat articles about it, with some handwaving, too.
[21:13:52] <gilberth> And: I have not yet seen a reference about all TeX commands. The is the TeXbook, sure, but that is prose and not a reference manual.
[21:16:44] *** Quits: silasfox (~sbv@2001-4dd6-abca-0-de39-b264-6870-a7ee.ipv6dyn.netcologne.de) (Ping timeout: 252 seconds)
[21:17:09] <gilberth> E.g. GF (font) files have some dx, dy for a char in "scaled pixels". What exactly. Other quantities are a "fix_word", you need to read the source, to figure the obfuscated description, as it just is 12.20 signed fixed point.
[21:17:51] <gilberth> As a multiple of the design size. *sigh*
[21:20:04] <gilberth> I also needed quite some time to figure out how to actually run METAFONT.
[21:44:41] *** Joins: aeth_ (~aeth@user/aeth)
[21:44:46] *** Quits: aeth (~aeth@user/aeth) (Killed (NickServ (GHOST command used by aeth_)))
[21:44:49] *** aeth_ is now known as aeth
[22:05:06] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[22:06:41] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[22:10:10] *** Quits: pjb (~pjb@user/pjb) (Ping timeout: 240 seconds)
[22:20:53] *** Parts: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1) ()
[22:21:05] *** Joins: contrapunctus (a75f5b1571@2a00:c70:1:178:170:40:189:1)
[22:31:50] <ck_> shka: I like abandoned places a lot as well. Here is one of my favourite sets of images https://web.archive.org/web/20080621070111/http://home.f01.itscom.net/spiral/akh/akh01.html
[22:36:12] <shka> ck_: thanks
[22:52:26] <shka> gosh, adding Nauka ISS module turned to be very exciting 
[22:53:05] <ck_> what does it mean?
[22:53:09] <ck_> (the word)
[22:53:21] <shka> "Science"
[22:54:31] <selwyn> shka: what happened
[22:55:39] <selwyn> gilberth: how much work would it be to port metafont to common lisp
[22:55:40] <shka> well, for starters, the initial launch plan was for 2021
[22:55:44] <shka> sorry
[22:55:46] <shka> 2007
[22:56:45] <shka> and there was apparently bug in the module software 
[22:57:15] <shka> and thruster after docking were ignited
[22:57:51] <shka> and this delayed boeing starliner test
[23:13:37] *** Quits: nckx (~nckx@tobias.gr) (Ping timeout: 268 seconds)
[23:22:34] *** Quits: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de) (Ping timeout: 240 seconds)
[23:23:01] <MichaelRaskin> Where is my headline «Progress had to fix Science mistakes»??
[23:23:20] *** Joins: edgar-rft (~edgar-rft@HSI-KBW-109-193-249-223.hsi7.kabel-badenwuerttemberg.de)
[23:23:58] <MichaelRaskin> For all clickbait people write, here a clickbait headline writes itself… and nobody uses it?
[23:24:57] <gilberth> selwyn: Once you make all the macros in the source into real macro or functions and you define the data structures, not that much. TeX and/or METAFONT uses no pointers, no structs and all are references to a large 'mem' array. I am after it for TeX. I plan to figure out automatically which macros are functions and plan to do some semi-automatic refactoring to have pointers to real objects instead of some offsets into the core.
[23:27:52] <selwyn> what do you mean, you are after it for tex
[23:27:59] <selwyn> you are interested in it only for tex purposes?
[23:28:24] <gilberth> selwyn: <http://clim.rocks/gilbert/tex/memory-word.lisp> is all there is the Pascal compiler sees in terms of datastructurs. Macros define the real structs/records with @d foo(x) == mem[x+5].qqqq.b0 sorta macros.
[23:29:09] <selwyn> right
[23:29:29] <gilberth> selwyn: I want to turn TeX into actually readable source code. Same techniques could be applied for METAFONT, which I am not so much interested in personally.
[23:31:03] <gilberth> I mean, look at <http://clim.rocks/gilbert/tex/tex.lisp> could as well be uncommented assembler code.
[23:31:20] <selwyn> i am interested in metafont for virtual reality purposes
[23:31:36] <gilberth> Sure, stay tuned then :)
[23:31:47] <selwyn> but using it would be something of a remote prospect anyway
[23:32:56] <selwyn> there are many things to sort out before that
[23:33:16] <gilberth> Anyhow, my idea is to look at, say this foo(x) macro of mine, and parse the WEB/Pascal assuming it's a function and see if that works out. Not all macros are like that, Knuth also plays some "tricks" on that they are purely textual replacements. As for TeX itself.
[23:51:37] <lotuseater> nice gilberth, what surely TeX is excellent at is the rendering
[23:53:26] <lotuseater> and of course laying out documents/formula correctly
