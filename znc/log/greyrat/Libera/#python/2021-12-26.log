[00:02:50] *** Joins: AsenMx (~AsenMx@user/asenmx)
[00:03:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[00:05:27] <bjs> raxor2k: because they work fine?  note that we've had threads forever and the "sync" libraries have always worked with threads, and they've always had some kinds of asynchronous APIs. It's not just "oh asyncio was invented, time to throw away all our libraries and start from scratch" :P
[00:14:55] *** Quits: aniketgm (~Aniket@49.36.109.81) (Quit: leaving)
[00:16:52] *** Quits: shuck (~shuck@user/shuck) (Read error: Connection reset by peer)
[00:17:20] <imp> What is the canonical reference for python language. I'm looking for definition and explanation of arithmetic and logical operators, but looking on google I just receive those bullshit sites as TutorialsPoint, Geeks, w3fools.
[00:17:47] <bjs> imp: https://docs.python.org/3/
[00:17:48] <imp> I thin I find at docs.python.org/3/
[00:17:57] <imp> @bjs thanks
[00:18:12] <SnoopJ> docs.python.org +1, that is the most canonical source of information
[00:18:22] <bjs> imp: if you want help finding anything in the docs we can also point out where they would be,  after you use the docs for a while it becomes easier to figure out where things will be
[00:18:34] <bjs> it also has versions you can download to use offline
[00:19:03] <imp> @bjs I think I can figure out. I'm just doing some canonical referencies for a bullshit textbook used in my university that do some stupid claims.
[00:19:04] *** Quits: BlueSky (~BlueSky@user/bluesky) (Quit: Leaving)
[00:20:11] <imp> @bjs Thanks for point out. For example the text book says !== and <> are  the operators for not equality.  The first can be a typo ok, but still wrong. But the second..
[00:20:32] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Remote host closed the connection)
[00:20:40] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[00:20:40] <bjs> The first is clearly a typo (!= not !==)
[00:21:03] <bjs> as for the second, how old is your textbook :)
[00:21:06] <avu> JS trauma :)
[00:21:15] <bjs> <> hasn't been valid Python syntax for a long time now
[00:21:45] <imp> bjs: pretty new. They have copied from a non canonical source that propagate errors through time. I found some those BS websites as Tutorials point that claim <> are not equality operator in python.
[00:22:00] <bjs> imp: it was (or used to be).
[00:23:27] <imp> @bjs yes. My point is, they are just replicating, from wrong sources without any validation or factual references. Hence I'm looking for the official references. They thin that write a textbook is just copy and paste from any source on internet. And that is far from right.
[00:23:45] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[00:23:52] <bjs> imp: sure,  the official docs will always be the best/most correct resource
[00:24:01] <emerent> bjs: was this in the mythical python 1 times?
[00:24:05] <bjs> but it's not really written as a textbook, so it's sometimes hard
[00:24:12] <bjs> emerent: and Python 2
[00:24:16] <bjs> was removed in 3.0
[00:24:32] <emerent> wow, I have never seen that before
[00:24:50] *** Quits: ps_ (~ps@2a02:810b:f3f:f0d1:ccd2:3fff:72d0:ccfd) (Ping timeout: 268 seconds)
[00:24:57] <imp> @bjs what is the last python version that used <> as not equal?
[00:25:06] <bjs> imp: Python 2
[00:25:28] <bjs> would've been 2.7.something
[00:25:34] <imp> does python 2.7 supports <> (I don't even have py2 here to test, and neither willing to install it)
[00:25:38] <bjs> Yes
[00:25:42] <imp> @bjs thanksl
[00:25:44] <bjs> but nobody used it, and it was the same as !=
[00:25:52] <bjs> so it got removed in 3.0 https://docs.python.org/3/whatsnew/3.0.html#removed-syntax
[00:25:56] <bjs> (see docs.python.org says all!)
[00:25:59] <Puriime> used it unironically rather
[00:26:43] <SnoopJ> You can technically bring <> back with a __future__ import, but it's not really something you ought to do :P
[00:26:53] <bjs> SnoopJ: it's a joke import not a real one
[00:26:54] <bjs> but yes
[00:27:03] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[00:27:07] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[00:27:34] <emerent> SnoopJ: is time a circle that we can get the past back from the future?
[00:27:35] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[00:28:39] *** Joins: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[00:28:41] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Read error: Connection reset by peer)
[00:28:51] *** Quits: spithash (~spithash@user/spithash) (Ping timeout: 276 seconds)
[00:29:39] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[00:29:56] <imp> @SnoopJ __future__ import? should be __past__ import =)
[00:30:16] *** Joins: spithash (~spithash@user/spithash)
[00:30:39] <SnoopJ> https://www.python.org/dev/peps/pep-0401/
[00:30:45] <SnoopJ> (note the date)
[00:31:21] * bjs looks at the date
[00:31:25] <bjs> obligatory https://gist.github.com/bensimner/fce2aa0a87807fe53285d6a2771c7a62
[00:32:24] <Puriime> I am not running that
[00:33:58] <SnoopJ> it "just" prints some stuff
[00:34:01] <SnoopJ> bjs, very nice :)
[00:34:16] <bjs> SnoopJ: I've been building up a set of obfuscated code techniques
[00:34:17] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[00:35:07] <SnoopJ> bjs, I was wondering how much of that you did by hand, or whether you'd written some clever tool to help you transform the program to fit your need here :)
[00:35:35] <bjs> SnoopJ: 1/2 and 1/2,  not sure if that makes it better or worse
[00:35:53] *** Joins: sleepingforest (~sleepingf@user/sleepingforest)
[00:35:56] <SnoopJ> <ep1>Now THIS is HCI!</ep1>
[00:36:20] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[00:36:55] <bjs> I had another idea;  but maybe I'll save that for next year
[00:37:09] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[00:38:32] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:3d04:ca5e:4c19:f931)
[00:38:38] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[00:40:31] <bjs> SnoopJ: also, -1 points for running untrusted code you don't understand from the internet
[00:40:32] <bjs> very bad
[00:41:02] <SnoopJ> I did look at the list of functions at least, but I also missed 'exec' in there ¯\_(ツ)_/¯
[00:41:32] <bjs> the list of functions is a red herring :D
[00:42:42] <SnoopJ> oh boy, black really does a number on that
[00:42:46] <raxor2k> bjs: so when i googled "python sqlalchemy" last year, i wasnt referred to async sqlalchemy, but to normal sqlalchemy. Thats bad
[00:42:55] <bjs> why is that bad?
[00:43:27] <raxor2k> because obviously my program needs async sqlalchemy, and i suppose 9999 other programs out there also need?
[00:43:41] <ChrisWarrick> 999999 other programs do not need async sqlalchemy
[00:43:54] <bjs> raxor2k: I see, *your* program needs async sqlachemy, so screw everyone else all search engines should do what you need
[00:43:54] <ChrisWarrick> if you need async, ask for it explicitly
[00:44:12] <raxor2k> bjs: search engines ?
[00:44:19] <bjs> raxor2k: do you know how google works? :P
[00:44:25] *** Quits: azzazzel (~qwerty@2804:c30:c24d:f101:3b07:beff:afc7:2ff4) (Quit: WeeChat 2.8)
[00:44:27] <bjs> you see the results everyone else clicks on
[00:44:41] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[00:44:58] *** Joins: hackers (~self@user/hackers)
[00:44:58] <SnoopJ> which is famously why SEO is so ineffective ;)
[00:45:01] *** Joins: bayman (~bayman@c-73-15-245-176.hsd1.ca.comcast.net)
[00:45:21] <bjs> SnoopJ: :P
[00:45:34] <raxor2k> bjs: i mean, sqlalchemy is old, async sqlalchemy is new, and what "all programs and servers nowadays" probably need, and im not saying this just because i need it but you know yourself you need it
[00:45:45] <bayman> I just installed python3.10 on Ubuntu, how do I install pip3.10?
[00:45:55] <SnoopJ> raxor2k, new/old has nothing to do with sync/async, really.
[00:46:00] <bjs> raxor2k: you're saying, you know better than me what i need? :P
[00:46:07] <raxor2k> its likke googling "i want a nice new car", do you get referred to old cars from the 1980s ? no, you get referred to the new ones the last couple of years
[00:46:10] <SnoopJ> bayman, how did you install 3.10?
[00:46:16] <SnoopJ> and which release of Ubuntu is this?
[00:46:19] <ChrisWarrick> raxor2k: you didn’t google that
[00:46:29] <ChrisWarrick> raxor2k: google "python async sqlalchemy" next time
[00:46:32] <bjs> ^
[00:46:45] <SnoopJ> you even said it yourself: you got normal sqlalchemy because it's...erm, normal
[00:47:20] <raxor2k> Chriswarrick: i didnt know about async sqlalchemy, all i knew was sqlalchemy
[00:47:27] <bayman> SnoopJ: sudo add-apt-repository ppa:deadsnakes/ppa --yes && sudo apt install -y python3.10 python3.10-distutils
[00:47:31] *** Quits: idontnee_ (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Quit: Leaving...)
[00:47:33] <raxor2k> i didnt knew it was 2 different kinds of
[00:47:52] <ChrisWarrick> raxor2k: if you’re doing async stuff, then you must remember to include that in your google searches.
[00:48:07] <bjs> raxor2k: well, lots of libraries have extensions and/or async versions available.  You need to make sure to look for them if you want them
[00:48:45] <raxor2k> Sure, and everything is my fault
[00:48:48] <raxor2k> as usual
[00:49:06] <bjs> raxor2k: well... yes?
[00:49:45] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[00:50:39] <ntome> is it possible with asyncio to wrap an already running process and its stdin/stdout? rather than calling asyncio.create_subprocess_exec
[00:51:17] <SnoopJ> bayman, hmm, I can never remember how deadsnakes works because it's a headache, but I think they don't provide a separate package, you install python3-pip and it just uses that
[00:51:45] * SnoopJ usually installs interpreters on Ubuntu using pyenv
[00:51:45] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[00:52:13] <bjs> ntome: if by "possible" you mean "possible and someone has already written a library to do it" the answer is sadly not that i know of.
[00:52:13] <SnoopJ> ah, yea, a quick test removing python3-pip seems to confirm it
[00:53:13] *** Joins: izzyi2d (~izzyi2d@184.63.217.100)
[00:53:19] <izzyi2d> hello everyone!
[00:53:42] <ntome> bjs: :(
[00:53:44] <ChrisWarrick> ntome: I doubt asyncio can do it out of the box
[00:54:07] <ChrisWarrick> ntome: perhaps you’d need to figure out how to do that in general on your OS first
[00:54:09] <izzyi2d> im having some errors with my script when trying to use keypress anyone avail for a few questions pls?
[00:54:13] *** Joins: djapo (~archangel@user/djapo)
[00:54:25] <ChrisWarrick> izzyi2d: please ask your questions to the channel
[00:54:27] *** Joins: vitali64 (~notrealvi@2001:470:69fc:105::c1bf)
[00:54:38] <izzyi2d> can paste code? or?
[00:55:01] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[00:55:20] <ChrisWarrick> izzyi2d:  https://bpa.st/+python 
[00:55:33] *** Joins: tejr (~tejr@user/tejr)
[00:56:13] *** Joins: csm3105 (~csm3105@static-90-220-24-46.ipcom.comunitel.net)
[00:57:10] <ntome> ChrisWarrick: why my os? without async i simply can use select() on fds
[00:57:54] <izzyi2d> https://bpa.st/ZBBQ
[00:57:57] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[00:58:58] *** Quits: TypeError (~TypeError@2.133.161.196) (K-Lined)
[00:58:59] <izzyi2d> when i hit the + button i get all errors
[00:59:11] <bjs> izzyi2d: UnboundLocalErrors ?
[00:59:51] <izzyi2d> i do not know what that means or the errors sorry, just looking for alittle guidance not the exact answer
[00:59:53] <bjs> izzyi2d: i think you want to put a line that says `global count` at the top of your macro function.
[01:00:01] *** Joins: foxbox (~cammy@user/cammy)
[01:00:03] *** Joins: zebrag (~chris@user/zebrag)
[01:00:06] <bjs> izzyi2d: does the error say UnboundLocalError ?  If so, the error is because of what I said above
[01:00:49] <izzyi2d> https://bpa.st/QCJQ
[01:01:00] *** Quits: BinaryWave (~binarywav@ip68-2-121-39.ph.ph.cox.net) (Quit: Ciao!)
[01:01:41] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[01:02:43] *** Joins: xkuru (~xkuru@user/xkuru)
[01:04:14] <izzyi2d> any idea why that error please?
[01:04:45] <izzyi2d> i think it is "lambda"
[01:04:46] <bjs> izzyi2d: yes, it's an UnboundLocalError because your function is missing the line: "global count" from it
[01:04:51] <bjs> izzyi2d: no it's what i said earlier :)
[01:05:15] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[01:05:30] <izzyi2d> do i pout the global count inside of the macro function?
[01:05:57] <bjs> izzyi2d: yes, at the top of the function
[01:06:43] <izzyi2d> woot got it ty!
[01:07:41] <izzyi2d> so it seems every time i press the + key it will not cycle through the loop , is there a function that when i press the + key it will run that entire function?
[01:08:38] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[01:08:43] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[01:08:59] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[01:09:25] <bjs> izzyi2d: why do you have time.sleep ?
[01:09:36] <bjs> do you find it works once every ~5 seconds?
[01:09:50] <izzyi2d> just so it pauses for 5 sec then hit z again
[01:10:17] <bjs> izzyi2d: well if it pauses for 5 seconds then it won't do anything if you hit + again, as it's paused
[01:10:37] <izzyi2d> alright
[01:10:48] *** Quits: bayman (~bayman@c-73-15-245-176.hsd1.ca.comcast.net) (Remote host closed the connection)
[01:11:42] <izzyi2d> so then im confused back to 0 lol
[01:12:01] <izzyi2d> if im just trying to run that function every time + is his what would i do?
[01:12:29] *** Quits: hackers (~self@user/hackers) (Quit: leaving)
[01:12:33] <bjs> izzyi2d: well, that's what you do but your time.sleep is making the whole Python program wait 5 seconds before continuing.
[01:12:43] <bjs> I didn't quite understand why you wanted the sleep, does the program work without it?
[01:13:37] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[01:13:58] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[01:14:00] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[01:14:05] <izzyi2d> when i run that code it just runs the function without me pressing the + key
[01:14:41] <izzyi2d> https://bpa.st/3RWA
[01:15:00] <bjs> izzyi2d: why does this code suddenly have a `while` in it
[01:15:16] <izzyi2d> i wanted it to run only 5 times idk
[01:15:25] <bjs> izzyi2d: maybe you wanted it to be an `if` ?
[01:15:41] <izzyi2d> ok that makes sense if not while
[01:15:49] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[01:16:23] <izzyi2d> now it only prints 1 time the count of 1
[01:16:39] *** Joins: LimeOn (~user@user/limeon)
[01:17:12] <bjs> izzyi2d: even when you press multiple times?
[01:17:31] <izzyi2d> yes
[01:17:34] <izzyi2d> nothing happens
[01:17:44] <izzyi2d> 1
[01:17:45] <izzyi2d> This is count
[01:17:45] <izzyi2d> z++++
[01:17:45] *** Joins: Pickchea (~private@user/pickchea)
[01:18:08] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[01:18:14] <bjs> hmm, i don't know how this library works.  is it supposed to call the function every time?
[01:18:28] *** Quits: zer0bitz (~zer0bitz@196.244.192.54) (Ping timeout: 268 seconds)
[01:18:36] *** Joins: Nact (~l@host-85-27-123-35.dynamic.voo.be)
[01:18:46] <izzyi2d> would you suggest a different library?
[01:19:08] <izzyi2d> im trying to be watching a movie and hit the + button and the script execute a key press
[01:20:23] *** Quits: waxfire (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[01:20:59] <izzyi2d> so i flipped it so the keypress is on top but now i get this
[01:21:03] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[01:21:04] *** Joins: waxfire (~waxfire@65.119.2.240)
[01:21:08] <raxor2k> 'numpy.float64' object has no attribute 'translate'
[01:21:08] <Puriime> in the last paste (3RWA) the while loop i outside the macro function
[01:21:12] *** Joins: BinaryWave (~binarywav@ip68-2-121-39.ph.ph.cox.net)
[01:21:13] <Puriime> not sure if that is intentional
[01:21:13] <raxor2k> someone can explain what that is?
[01:21:49] <izzyi2d> Puriime no i dont know what im doing lol
[01:22:26] *** Quits: blub1 (~slave_blo@pd9fd1418.dip0.t-ipconnect.de) (Remote host closed the connection)
[01:22:27] <izzyi2d> https://bpa.st/U3BQ
[01:22:37] *** Quits: csm3105 (~csm3105@static-90-220-24-46.ipcom.comunitel.net) (Ping timeout: 240 seconds)
[01:23:01] <izzyi2d> gives this errors
[01:23:02] <izzyi2d> https://bpa.st/CR4Q
[01:23:25] *** Joins: Timvde (~tim@towely.vdeynde.com)
[01:23:38] <izzyi2d> so now its waiting for me to hit the + key but when i do ,it looks like it can not find the macro function
[01:24:44] *** Joins: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126)
[01:25:02] <Timvde> I finally decided to read a bit more about slots. Is there any reason *not* to use them by default? (i.e. unless I have a particular reason, such as multiple inheritance conflicts, which should be rare)
[01:26:45] <ChrisWarrick> Timvde: if you’re writing “modern” python code, then slots are nice — and attrs can help you with them too
[01:27:00] <Puriime> izzyi2d: you are calling the keyPress function at line 12 before the macro function has been defined, the macro function should probably be defined earlier
[01:27:18] <ChrisWarrick> (“modern” = typed and without abusing the dynamic nature of python)
[01:27:33] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[01:27:35] <Timvde> ChrisWarrick: we've been mostly using @dataclass(frozen=True) for most objects, with 3.10 I was thinking of using @dataclass(slots=True, frozen=True)
[01:27:48] <Timvde> ChrisWarrick: and we aim for decent type coverage as well, yes :)
[01:28:09] <Timvde> (The addition of slots to dataclasses is the main reason why I started reading into them)
[01:28:18] *** Quits: nichlas (uid374954@id-374954.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[01:28:19] <raxor2k> if i have a number like: 0.83287423427, how can i round it to show only: 0.8328 ?
[01:28:42] <ChrisWarrick> Timvde: yeah, my usual attrs definition would include slots, frozen, and also kw_only
[01:29:00] <Puriime> raxor2k: the round() function takes a second argument that is the number of digits to round to
[01:29:26] <Timvde> ChrisWarrick: I also heard about attrs, would you recommend it over dataclasses?
[01:30:11] *** Quits: {4144} (~{4144}@46.56.65.237) (Ping timeout: 268 seconds)
[01:30:25] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[01:30:32] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[01:30:35] <Timvde> I haven't looked into it mostly because it's yet another library, and the extra features didn't really seem worth it at first sight (at least for our use case)s
[01:30:37] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-200.home.otenet.gr) (Ping timeout: 240 seconds)
[01:31:10] <ChrisWarrick> Timvde: yes, dataclasses are less powerful — but if you’re okay with the feature set, and don’t mind limiting yourself to 3.10+ to get slots, they’re fine
[01:32:21] *** Quits: waxfire (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[01:32:34] <gjvc> raxor2k: x = 0.83287423427; f'{x:.4f}' or round( 0.83287423427, 4 )
[01:33:05] *** Joins: waxfire (~waxfire@65.119.2.240)
[01:33:11] <SnoopJ> Timvde, attrs is well worth trying, but as ChrisWarrick says, dataclasses is also good, it's "attrs lite"
[01:33:17] <Timvde> Well, I may be living in a blub paradox :) I'll look into it a bit more, you made me curious
[01:33:33] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-200.home.otenet.gr)
[01:33:43] *** Joins: moog (~moog@107.126.53.93)
[01:33:54] <raxor2k> gjvc: ty
[01:33:59] <Timvde> Python 3.10+ is not really an issue, as we only have very few public libaries, most of it is in-house for our own use
[01:34:39] <Timvde> We usually lag new Python releases with a couple of months (basically I start looking into it as soon as my distro python updates :P)
[01:34:58] <Timvde> Also match. I want it.
[01:35:54] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[01:35:54] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Client Quit)
[01:36:12] <Timvde> I see that dataclasses in 3.10 also have a kw_only argument, I'm going to try to push for that as well :D
[01:36:13] *** Quits: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[01:36:26] <Timvde> (sorry for the monologue, I easily get excited learning about new features I can use)
[01:38:43] *** Quits: Cyp (~cyp@213.237.85.9) (Read error: Connection reset by peer)
[01:39:11] *** Joins: Cyp (~cyp@213.237.85.9)
[01:40:30] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 265 seconds)
[01:40:34] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[01:41:17] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:6fd:5920:5ca6:e627) (Ping timeout: 268 seconds)
[01:41:20] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[01:41:43] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[01:41:46] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:8457:b60:84d8:5378)
[01:42:27] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[01:42:50] *** Joins: csm3105 (~csm3105@static-90-220-24-46.ipcom.comunitel.net)
[01:44:46] *** Joins: medium_cool (~medium_co@2605:a601:a9aa:f800:f531:51fd:a6f3:42a5)
[01:46:59] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[01:48:38] <raxor2k> man.. how can i fix this "'numpy.float64' object has no attribute 'translate'"  ??
[01:48:48] <raxor2k> taking the p*ss outta me
[01:48:59] *** Joins: fikran (~fikran@user/fikran)
[01:49:08] <bjs> raxor2k: why are you trying to call translate on a numpy float64 object
[01:50:06] <raxor2k> ehm.. i all i have is alist with numbers: the_list=  [2, 5, 2, 0.1 ,2 ,4]  and i am using = np.average(the_list) and then trying to push to db
[01:50:32] <bjs> raxor2k: okay, so np.average returned a numpy.float64 object?
[01:51:08] <raxor2k> bjs: well it seems so
[01:51:17] *** Quits: parv (~quass@user/parv) (Ping timeout: 240 seconds)
[01:51:23] <raxor2k> it has something to do with the version of numpy i think
[01:51:25] <ntome> is there someone knowing pexpect here?
[01:51:30] <bjs> raxor2k: what does "push to db" mean exactly, does the database library want you to have strings not numbers?
[01:51:45] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[01:51:45] <bjs> raxor2k: version of numpy?
[01:52:26] *** Quits: izzyi2d (~izzyi2d@184.63.217.100) (Quit: Client closed)
[01:52:52] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: Textual IRC Client: www.textualapp.com)
[01:52:53] <Puriime> bjs: I checked mine (1.21.5) and it returns numpy.float64 too for type(np.mean([12,2,3,4]))
[01:52:56] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:53:09] <Puriime> oh and np.average
[01:53:11] <Puriime> sorry I tried both
[01:53:31] *** Quits: magla (~gelignite@55d48f64.access.ecotel.net) (Quit: Stay safe!)
[01:54:40] *** Quits: waxfire (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[01:54:51] <raxor2k> bjs: https://bpa.st/FS7A
[01:55:05] *** Quits: Nact (~l@host-85-27-123-35.dynamic.voo.be) (Quit: Konversation terminated!)
[01:56:36] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[01:56:42] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 268 seconds)
[01:57:11] <raxor2k> i should try to convert that float64 to a float then
[01:57:35] *** Quits: jdmark (~jdmark@user/jdmark) (Read error: Connection reset by peer)
[01:58:12] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[02:00:03] *** Joins: waxfire (~waxfire@65.119.2.240)
[02:00:12] <raxor2k> seems like that worked perfectly. But why i "suddently has to do this change now", its strange tho.
[02:00:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:03:40] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[02:03:48] <aphysically> jinsun: wow I get terrible type inference with numpy code
[02:03:55] <aphysically> I wonder if this is just a numpy thing I guess?
[02:08:13] <raxor2k> aphysically: share code
[02:08:33] <jinsun> numpy is typed nowadays but a bit too flexible, so possibly numpy thing, it gets worse with the other science libraries
[02:09:05] <aphysically> e.g I was reviewing some code somone posted in discord: https://bpa.st/I2SA
[02:09:24] <aphysically> it should be strictly typed but pyright understands almost none of the variables
[02:09:35] <aphysically> moving_east is straight up unknown, for example
[02:09:36] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[02:09:51] *** Joins: Nact (~l@host-85-27-123-35.dynamic.voo.be)
[02:10:41] *** Joins: parv (~quass@user/parv)
[02:11:47] <SnoopJ> aphysically, that sounds like it's not aware of what numpy's going to do
[02:12:45] <jinsun> unrelated to numpy, but mypy complaining there "Unpacking a string is disallowed", why?
[02:12:49] *** Quits: parv (~quass@user/parv) (Client Quit)
[02:13:14] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-200.home.otenet.gr) (Quit: Konversation terminated!)
[02:13:19] *** Quits: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[02:14:12] <SnoopJ> jinsun, I guess it's considered poor form? https://github.com/python/mypy/issues/6406
[02:14:54] <jinsun> okay it is being a linter
[02:14:56] *** Joins: zepolen (~zepolen@ppp-94-66-223-200.home.otenet.gr)
[02:14:58] *** Joins: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net)
[02:15:11] *** Joins: {4144} (~{4144}@46.56.64.187)
[02:15:21] <aphysically> does mypy figure out the types better?
[02:16:25] <jinsun> mypy does Any instead of unknown, so it complains less
[02:17:50] *** Quits: Nact (~l@host-85-27-123-35.dynamic.voo.be) (Remote host closed the connection)
[02:20:07] *** Joins: izzyi2d (~izzyi2d@184.63.217.100)
[02:20:12] <izzyi2d> hello!! is there a way to make this script stay on even after it executes its function, say i press + and then it prints 5 times is there a way to have it ready to repeat that function again if i press + ?
[02:20:17] *** Quits: csm3105 (~csm3105@static-90-220-24-46.ipcom.comunitel.net) (Ping timeout: 240 seconds)
[02:20:17] <izzyi2d> https://bpa.st/YU5Q
[02:20:44] <aphysically> jinsun: does it figure out the type of FLOOR at least?
[02:21:10] *** Quits: raxor2k (~raxor2k@ti0121a400-2736.bb.online.no) (Remote host closed the connection)
[02:21:15] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:22:20] <aphysically> it looks like numpy doesn't resolve the type of x = np.array([5,3])
[02:22:27] <aphysically> err, pyright I mean
[02:22:29] <izzyi2d> maybe like a return function?
[02:22:49] *** Joins: bluedust (~bluedust@59.89.212.159)
[02:23:51] <jinsun> aphysically: both figure out the types here, mypy does numpy.ndarray[Any, Any], pyright does numpy.ndarray[Unknown, Unknown]
[02:24:20] <aphysically> why doesn't it figure out what it's generic of?
[02:24:34] <jinsun> why ndarray is generic with 2 parameters I didn't understand
[02:24:55] <aphysically> i tried googling what ndarray is a generic of and I got no results
[02:25:19] <aphysically> then I got distracted looking for other stuff before I tried tofind its type stub or built in typing
[02:25:57] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[02:26:57] *** Quits: bluedust (~bluedust@59.89.212.159) (Ping timeout: 240 seconds)
[02:27:50] <aphysically> np.array's constructor is presumably very overloaded so I'd forgive completely giving up on typing it, but surely the documentation for how to do it manually is *somewhere* :P
[02:28:36] <izzyi2d> anyone?
[02:29:02] <jinsun> too much difference between the version I have on disk and numpy main branch, so maybe it is getting better
[02:29:23] *** Joins: Betal (~Betal@user/betal)
[02:30:43] <jinsun> aphysically: yeah for version 1.21.5 the annotation is just bad https://github.com/numpy/numpy/blob/v1.21.5/numpy/__init__.pyi#L3506
[02:31:19] *** Joins: Feuermagier (~Feuermagi@user/feuermagier)
[02:31:29] <jinsun> in the main branch it is in a different file with too many overloads, https://github.com/numpy/numpy/blob/main/numpy/core/multiarray.pyi#L170
[02:31:45] <izzyi2d> hello!! is there a way to make this script stay on even after it executes its function, say i press + and then it prints 5 times is there a way to have it ready to repeat that function again if i press + ?
[02:31:52] <izzyi2d> https://bpa.st/YU5Q
[02:32:12] <aphysically> wait so which is the two generic types
[02:32:19] *** Quits: imp (~imp@192-141-191-232.alternativaip.net.br) (Quit: imp)
[02:33:08] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:33:35] <jinsun> those annoations in the main branch put only one parameter, so dunno why pyright wants two
[02:33:43] <jinsun> (and mypy)
[02:34:05] <aphysically> okay I *think* I figured it out
[02:34:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[02:34:35] <jinsun> the docs do show two generic parameters https://numpy.org/devdocs/reference/typing.html#numpy.typing.NDArray
[02:34:37] *** Quits: infernix (nix@spirit.infernix.net) (Quit: ZNC - http://znc.sourceforge.net)
[02:34:50] *** Joins: KvL (~KvL@45.248.78.202)
[02:34:50] *** Quits: KvL (~KvL@45.248.78.202) (Client Quit)
[02:34:54] <aphysically> it's a generic over the shape, which doesn't do anything, and a np.dtype
[02:35:29] *** Joins: KvL (~KvL@45.248.78.202)
[02:35:43] <jinsun> so what happens if only one is given, like NDArray[float64]
[02:35:44] *** Joins: newpy (~newpy@206.168.231.90)
[02:36:21] <aphysically> so the type of np.array([5,5]) is np.ndarray[Any, np.dtype[int]) maybe?
[02:36:34] <Puriime> izzyi2d: maybe set the counter to 0 inside the function right before the loop so that it starts at 0 each time the function is called (instead of using counter as a global variable)
[02:36:36] <aphysically> I'm not an expert on numpy dtypes I never thought about them much before
[02:36:53] <jinsun> aphysically: ah just doing FLOOR: NDArray[np.float64] makes pyright happier, it infers ndarray[Any, dtype[float64]]
[02:36:58] <Puriime> (or replace the while loop with a for loop)
[02:37:47] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[02:37:48] <aphysically> jinsun: yeah, I think NDArray is just a helper for that, which is generic over shape
[02:37:52] *** Joins: lidless (lidless@2600:3c02::f03c:92ff:fe1d:6a82)
[02:37:54] <jinsun> still complains about the bad annotation of np.array, that result type is partially unnow
[02:37:55] <aphysically> and numpy doesn't actually support shape typing (yet)
[02:38:12] <aphysically> jinsun: it should be a type of integer and not a float I believe
[02:38:12] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[02:38:14] <jinsun> s/unnow/unknown
[02:38:23] <jinsun> (how do I type so bad)
[02:38:25] <aphysically> I think, wait let me read the code snippet again for what they actually did
[02:38:54] <jinsun> should be strings I guess
[02:39:01] *** Quits: brentaarnold (~brentaarn@32.132.115.46) (Ping timeout: 240 seconds)
[02:39:05] <aphysically> a list of lists of strings actually
[02:39:17] <aphysically> err, and ndarray of lists of strings
[02:39:19] <aphysically> an*
[02:39:51] <aphysically> but numpy recursively converts to ndarray don't it?
[02:39:57] <aphysically> so it's an ndarray of ndarray of strings
[02:40:05] <aphysically> or rather, a 2d ndarray of strings
[02:40:41] <aphysically> so since we're generic over the shape, the dtype is just....string? of some sort? I don't know if we need to import a special numpy type for that
[02:41:06] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[02:41:18] <izzyi2d> ty
[02:41:36] <jinsun> can't do NDArray[str] so have to get something from np I guess
[02:42:04] <jinsun> Could not specialize type "NDArray[ScalarType@NDArray]"
[02:42:12] <aphysically> I figured it out
[02:42:15] <aphysically> print(FLOOR.dtype)
[02:42:23] <aphysically> <U1
[02:42:27] <jinsun> NDArray[np.str_] works
[02:43:04] *** Quits: upsala (~zcb@185.209.196.169) (Quit: WeeChat 3.4)
[02:43:08] <jinsun> not sure how to write <U1 in annotation
[02:43:12] <aphysically> when the variadic type vars become a thing I assume numpy will have actual shape typing and it would be able to be specified
[02:43:44] *** Joins: dre_ (~dre@2001:8003:c932:c301:d3de:95f8:8fd3:f662)
[02:45:08] <aphysically> okay I did print(type(np.dtype("<U1")))
[02:45:17] <aphysically> <class 'numpy.dtype[str_]'> so you were right
[02:46:20] <jinsun> yeah seems like they designed with assumption that some shape typing will be there in the future
[02:47:14] <aphysically> yeah so I think my summary from this is, revisit this in the future when shape typing is implemented and see what the status is this
[02:47:16] <aphysically> then*
[02:47:18] <jinsun> but pep 646 got sort of deferred it seems after being almost approved
[02:47:46] <jinsun> or was there any new communication about that
[02:47:49] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Quit: IRC Bouncer crashed ...)
[02:47:53] <aphysically> yeah, it's in approved-deferred limbo and I haven't heard anything since
[02:48:29] <aphysically> we probably have to wait for the update from the next SC meeting to know
[02:48:57] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:8457:b60:84d8:5378) (Ping timeout: 240 seconds)
[02:49:49] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:7a18:e84d:783d:8d45)
[02:50:55] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[02:51:17] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[02:51:48] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[02:51:51] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[02:51:54] <Yhg1s> It's still on the table for 3.11. https://github.com/python/steering-council/issues/59 is the current status.
[02:54:09] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[02:56:46] <jinsun> ah, thanks for the info
[02:56:55] *** Parts: akk (~akk@174-28-122-47.albq.qwest.net) (+++)
[02:57:08] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 268 seconds)
[02:58:12] *** Quits: viaSanctus (~viaSanctu@user/viasanctus) (Quit: Leaving)
[02:58:32] <aphysically> ya, thanks for the update
[03:01:49] *** Quits: cliluw (~cliluw@47.147.73.223) (Remote host closed the connection)
[03:02:14] *** Joins: cliluw (~cliluw@47.147.73.223)
[03:03:43] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9ea-abca-3b0d-a0e2.res6.spectrum.com)
[03:04:55] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[03:07:01] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:7a18:e84d:783d:8d45) (Ping timeout: 240 seconds)
[03:07:26] *** Quits: dre_ (~dre@2001:8003:c932:c301:d3de:95f8:8fd3:f662) (Ping timeout: 245 seconds)
[03:08:12] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[03:09:31] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[03:10:28] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Quit: They told me they fixed it. I trusted them to fix it. It's not my fault!)
[03:10:32] *** Navidad is now known as Sargento
[03:11:25] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[03:11:45] *** Quits: sazawal (~sazawal@122.161.92.186) (Quit: Leaving)
[03:12:59] *** Joins: JingleJazzy (~jaziz@user/jaziz)
[03:13:05] *** Quits: reset (~reset@user/reset) (Quit: reset)
[03:17:25] *** Quits: killown (~killown@user/killown) (Quit: Leaving)
[03:17:27] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:17:55] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9ea-abca-3b0d-a0e2.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:20:02] *** Quits: MajorBiscuit (~MajorBisc@c-001-017-030.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.3)
[03:20:26] *** Joins: MajorBiscuit (~MajorBisc@c-001-017-030.client.tudelft.eduvpn.nl)
[03:21:45] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[03:22:32] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 240 seconds)
[03:23:40] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 268 seconds)
[03:24:23] *** Joins: Xano (~Xano@host31-48-104-97.range31-48.btcentralplus.com)
[03:24:26] *** Quits: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[03:25:40] *** Joins: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net)
[03:26:11] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[03:27:21] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 268 seconds)
[03:27:51] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9ea-abca-3b0d-a0e2.res6.spectrum.com)
[03:28:05] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9ea-abca-3b0d-a0e2.res6.spectrum.com) (Client Quit)
[03:30:02] *** Joins: ST47 (~ST47@wikimedia/st47)
[03:30:06] *** Quits: waxfire (~waxfire@65.119.2.240) (Quit: The Lounge - https://thelounge.chat)
[03:30:18] *** Joins: waxfire (~waxfire@65.119.2.240)
[03:32:27] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9ea-abca-3b0d-a0e2.res6.spectrum.com)
[03:33:58] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Quit: ThePhilgrim)
[03:34:17] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[03:34:17] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[03:36:01] *** Quits: nomn (nomn@user/nomn) (Quit: WeeChat 3.3)
[03:36:25] *** Joins: Wulf (~Wulf@user/wulf)
[03:37:59] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[03:38:12] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 240 seconds)
[03:41:27] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[03:41:40] *** Quits: MajorBiscuit (~MajorBisc@c-001-017-030.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.3)
[03:41:54] <izzyi2d> is there a command to make the jump to beginning of loop?
[03:42:17] <izzyi2d> make the loop jump*
[03:43:00] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[03:43:26] <ChrisWarrick> izzyi2d: continue
[03:43:53] <Puriime> continue goes to the next iteration of the loop, but it does not reset any counters nor restart the loop
[03:44:27] <izzyi2d> yes i would like to do the second option and press a different key that will reset the script basically waiting for another command
[03:44:43] *** Joins: Vonter (~Vonter@user/vonter)
[03:44:56] <izzyi2d> so couldnt i def another function then in that function it resets the script?
[03:45:54] <Jong> I'm making a CLI argument that determines whether to use np.float32 or np.float64 throughout the script.   How would you do this?  I'm thinking parser.add_argument("--use-float64", action="store_true", default=False)
[03:46:06] <Puriime> izzyi2d: it would probably be helpful to post the code that has the wrong behaviour
[03:46:11] <Jong> but what about parser.add_argument("--dtype", type=int, default=32)
[03:46:30] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:47:03] <izzyi2d> https://bpa.st/BBJQ
[03:48:57] *** Quits: shailangsa (~shailangs@host109-159-108-207.range109-159.btcentralplus.com) (Ping timeout: 240 seconds)
[03:49:03] <izzyi2d> sometimes i want to just stop the loop and just be at the beginning waiting for me to executew function agaig
[03:50:36] <Puriime> izzyi2d: I do not think there is an (easy/clean) way to interactively stop in the middle of one iteration of the while loop, if you are trying to interrupt it with a new keypress.
[03:51:58] <izzyi2d> yes thats what im looking to do
[03:52:21] *** Joins: Techcable (~Techcable@168.235.93.147)
[03:52:27] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[03:52:28] <izzyi2d> maybe i need to move around and i cancel the current loop and restart with the keypress
[03:52:45] <izzyi2d> but i cant figure out a way to stop it
[03:54:21] <izzyi2d> i have found this but having many errors trying compile
[03:54:22] <izzyi2d> https://bpa.st/2MHQ
[03:56:11] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[03:57:09] <ChrisWarrick> izzyi2d: what errors?
[03:58:20] *** Joins: fikran (~fikran@user/fikran)
[03:58:46] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[03:59:08] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-0992-69e8-c32c-99a5.res6.spectrum.com) (Quit: jarthur)
[03:59:17] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Client Quit)
[04:00:02] *** Quits: unyu (~pyon@user/pyon) (Ping timeout: 268 seconds)
[04:01:05] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[04:01:17] *** Joins: miique (~miique@181.46.139.166)
[04:02:31] *** Quits: jwhisnant (~jwhisnant@user/jwhisnant) (Client Quit)
[04:02:56] *** Joins: reset (~reset@user/reset)
[04:02:59] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 256 seconds)
[04:03:06] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9ea-abca-3b0d-a0e2.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:03:39] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[04:05:41] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[04:07:57] *** Quits: KvL (~KvL@45.248.78.202) (Ping timeout: 240 seconds)
[04:08:41] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[04:08:52] *** Joins: jwhisnant (~jwhisnant@user/jwhisnant)
[04:09:26] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[04:10:19] *** Joins: shailangsa (~shailangs@host109-159-108-207.range109-159.btcentralplus.com)
[04:10:32] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9ea-abca-3b0d-a0e2.res6.spectrum.com)
[04:12:25] <Puriime> this is maybe not too helpful, but - I am not familiar with the keyboard module. Can events captured in a separate thread call callbacks while the main program is busy/not in an event loop? It sounds pretty comple if that is possible.
[04:12:46] *** Joins: KvL (~KvL@124.188.202.131)
[04:13:54] *** Joins: jazzy2 (~jaziz@user/jaziz)
[04:14:12] *** Joins: dre_ (~dre@2001:8003:c932:c301:4b55:68b7:565f:5e8e)
[04:16:09] *** Quits: harwiltz (~harwiltz@modemcable212.231-202-24.mc.videotron.ca) (Quit: WeeChat 3.3)
[04:16:57] *** Quits: JingleJazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[04:17:18] *** Joins: jaggz (~jaggz@user/jaggz)
[04:19:45] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[04:20:15] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[04:22:36] *** jazzy2 is now known as JingleJazzy
[04:23:19] *** Quits: laksith (~laksith@laksith.dev) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[04:23:23] *** Quits: KvL (~KvL@124.188.202.131) (Ping timeout: 256 seconds)
[04:24:51] *** Quits: izzyi2d (~izzyi2d@184.63.217.100) (Quit: Client closed)
[04:25:13] *** Joins: KvL (~KvL@37.120.213.100)
[04:30:30] <bparker> how can I unflatten nested data that looks like this: [{"id": "1", "parent_id": "1"}, {"id": "2", "parent_id": "1"}, {"id": "3", "parent_id": "1"}] so that I can do e.g. dict["1"] and have ["2", "3"] inside it and so on down to further levels also
[04:30:34] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[04:31:04] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[04:31:09] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:31:17] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:31:26] <bparker> doesn't have to be with lists
[04:32:44] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[04:33:01] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 256 seconds)
[04:33:39] *** Joins: brabrax (~brabrax@user/brabrax)
[04:34:23] *** Joins: Wulf (~Wulf@user/wulf)
[04:34:49] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Read error: Connection reset by peer)
[04:34:51] *** Joins: unyu (~pyon@user/pyon)
[04:34:55] *** Quits: medium_cool (~medium_co@2605:a601:a9aa:f800:f531:51fd:a6f3:42a5) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[04:35:09] *** Joins: Pickchea (~private@user/pickchea)
[04:36:01] *** Quits: cozmo (~user@c-73-235-114-131.hsd1.ca.comcast.net) (Quit: WeeChat 2.8)
[04:36:06] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[04:40:47] <SnoopJ> bparker, https://bpa.st/2YCQ
[04:41:29] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[04:44:37] *** Quits: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net) (Ping timeout: 240 seconds)
[04:45:30] *** Joins: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net)
[04:46:50] <bparker> interesting
[04:47:26] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[04:47:37] *** Quits: KvL (~KvL@37.120.213.100) (Ping timeout: 240 seconds)
[04:47:49] <bparker> thanks
[04:48:29] <bparker> and this will work even if the ids/parents are out of order?
[04:49:43] <SnoopJ> that will insert them in the order seen at input
[04:49:58] *** Joins: KvL (~KvL@185.9.18.165)
[04:50:40] <SnoopJ> if anything's unclear about what it's doing, just ask, but the defaultdict(list) trick is frequently useful for something like this if scanning the whole input is okay
[04:51:11] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[04:53:50] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[04:53:55] <bparker> SnoopJ: so how would I find all the top-level items? the ones whose parents are themselves
[04:54:05] <bparker> to be able to descend further down
[04:54:18] <SnoopJ> bparker, those would be the ones being skipped: the ones for which `thisobj == parent`
[04:54:54] <bparker> would it be easier to just put those in a separate list or something and go from there?
[04:55:36] <bparker> and wouldn't this not handle leaf items at all?
[04:55:47] <bparker> e.g. items that aren't top-level but also have no children
[04:56:07] *** Quits: ThomasJ (~ThomasJ@user/thomasj) (Quit: Meeeelting)
[04:56:08] <bparker> or really anything with no children
[04:56:25] <sleepingforest> cant really tell that from the data you posted
[04:56:37] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[04:56:48] <bparker> or would just removing the if fix that
[04:58:34] *** Joins: ThomasJ (~ThomasJ@user/thomasj)
[05:01:18] <sleepingforest> if you remove the if and just had result[parent].append(thisobj), then you would have result[1] = [1,2,3] and could have a result[4] = [4]
[05:01:55] <sleepingforest> up to you if that makes sense though
[05:02:10] *** Joins: driib27 (~driib@185.65.135.247)
[05:02:14] <sleepingforest> child is its own parent
[05:02:46] <sleepingforest> or thing is its own parent
[05:03:02] <sleepingforest> i guess we can be our own parents if we need
[05:03:17] *** Quits: schumaml (~schumaml@p200300e2ef1de00053c1821a43d17d29.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[05:03:33] <SnoopJ> bparker, the code I shared will handle anything with "id" and "parent_id" defined
[05:04:28] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9ea-abca-3b0d-a0e2.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:04:45] *** Quits: driib2 (~driib@185.195.233.156) (Ping timeout: 256 seconds)
[05:04:45] *** driib27 is now known as driib2
[05:05:30] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[05:05:36] <SnoopJ> except the ones where the value is the same; since you omitted id=1 from your sample output, I figured this was what you wanted to do
[05:07:49] *** Quits: d1b_ (~db@user/d1b) (Ping timeout: 250 seconds)
[05:07:53] <maplefinger> Sedaris xmas elf story on
[05:08:01] <maplefinger> forgot about his Billie Holiday impersonation :D
[05:08:43] *** Quits: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com) (Ping timeout: 256 seconds)
[05:08:54] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9ea-abca-3b0d-a0e2.res6.spectrum.com)
[05:10:11] *** Joins: d1b (~db@user/d1b)
[05:12:37] *** Joins: alzgh (alzgh@user/alzgh)
[05:14:02] <bparker> sleepingforest: yea that's fine I think, my only issue is I've got to now add these items into a sortof GUI tree widget, where I need to start by adding the top-level items first, then each of their children and so on
[05:14:43] *** Joins: txhc4life (~txhc4life@cpe-70-117-20-42.satx.res.rr.com)
[05:15:26] <bparker> but the data is not ordered and I cannot add e.g. tree items where its parent hasn't been added yet already
[05:15:51] <bparker> so I'm not sure how best to track and deal with all that
[05:18:37] *** Quits: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com) (Ping timeout: 240 seconds)
[05:19:07] *** Joins: Matheo_bis (~matheo@user/matheo-bis/x-4309430)
[05:19:24] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[05:21:26] *** Quits: dre_ (~dre@2001:8003:c932:c301:4b55:68b7:565f:5e8e) (Ping timeout: 268 seconds)
[05:22:03] *** Quits: Matheo_bis (~matheo@user/matheo-bis/x-4309430) (Client Quit)
[05:22:53] *** Quits: KvL (~KvL@185.9.18.165) (Ping timeout: 256 seconds)
[05:23:21] *** Joins: Haxxa (~Haxxa@122-199-29-168.ip4.superloop.com)
[05:24:45] *** Joins: KvL (~KvL@124.188.202.131)
[05:24:57] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[05:25:50] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[05:25:52] *** Joins: NeilRG (~NeilRG@bras-vprn-toroon4834w-lp130-03-142-113-139-83.dsl.bell.ca)
[05:26:21] <NeilRG> Am I doing something wrong here? https://github.com/python/mypy/issues/11846
[05:29:23] *** Joins: dre_ (~dre@2001:8003:c932:c301:4ac5:c2f4:60c3:ddf6)
[05:29:33] *** Quits: alzgh (alzgh@user/alzgh) (Ping timeout: 256 seconds)
[05:31:23] *** Quits: KvL (~KvL@124.188.202.131) (Ping timeout: 256 seconds)
[05:33:11] *** Joins: KvL (~KvL@195.216.219.57)
[05:36:53] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[05:39:23] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:6b63:2604:dd58:4554)
[05:41:00] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[05:41:09] *** Joins: alzgh (alzgh@user/alzgh)
[05:41:13] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[05:42:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:43:26] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[05:43:27] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[05:48:34] *** Quits: flyback (~flyback@2601:540:8201:1e60::1b5d) (Quit: Leaving)
[05:48:54] *** Joins: flyback (~flyback@2601:540:8201:1e60::1b5d)
[05:52:13] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 250 seconds)
[05:53:28] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[05:54:10] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[05:58:44] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[06:00:03] *** Quits: burakcank (~burakcank@has.arrived.and.is.ready-to.party) (Quit: fBNC - https://bnc4free.com)
[06:00:17] *** Quits: qpdb (~qpdb@user/qpdb) (Ping timeout: 256 seconds)
[06:00:34] *** Joins: burakcank (~burakcank@has.arrived.and.is.ready-to.party)
[06:01:16] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:02:17] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[06:02:17] *** brabrax_ is now known as brabrax
[06:04:57] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 240 seconds)
[06:05:34] *** Joins: aesophod (~aesophod@2601:5c8:4300:4:e8fa:dece:acf3:47f4)
[06:05:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[06:06:36] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:07:03] *** Joins: backthen (~Thunderbi@c-76-103-177-91.hsd1.ca.comcast.net)
[06:07:14] <backthen> what's the difference between python build and python build_ext
[06:07:22] *** Joins: junebug (~junebug@2600:1700:3db0:2540:f3a3:f5ef:cfb3:e630)
[06:07:41] *** Joins: fikran (~fikran@user/fikran)
[06:08:11] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[06:08:17] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[06:09:11] *** Quits: junebug (~junebug@2600:1700:3db0:2540:f3a3:f5ef:cfb3:e630) (Client Quit)
[06:11:29] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[06:13:02] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[06:13:31] *** Quits: ThomasJ (~ThomasJ@user/thomasj) (Quit: Meeeelting)
[06:14:24] *** Joins: qpdb (~qpdb@user/qpdb)
[06:14:29] *** Parts: aesophod (~aesophod@2601:5c8:4300:4:e8fa:dece:acf3:47f4) (Cheers!)
[06:17:12] *** Joins: bluedust (~bluedust@117.204.152.129)
[06:18:18] *** Joins: ThomasJ (~ThomasJ@user/thomasj)
[06:18:23] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[06:19:42] *** Quits: NeilRG (~NeilRG@bras-vprn-toroon4834w-lp130-03-142-113-139-83.dsl.bell.ca) (Remote host closed the connection)
[06:21:17] *** Quits: bluedust (~bluedust@117.204.152.129) (Ping timeout: 240 seconds)
[06:22:27] *** Quits: newpy (~newpy@206.168.231.90) (Quit: Leaving)
[06:23:16] <Jong> backthen  I searched and found this: https://discuss.python.org/t/the-difference-between-python-setup-py-build-ext-i-and-pip-install-e/3716
[06:23:31] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: btc donations: bc1qt3chy4rqtzjny2h7qt47cy7nmu6th9sr66wa02)
[06:23:50] <Jong> "python setup.py build_ext -i will build extension modules (ie modules written in C or C++, and Cython) in-place."
[06:24:15] <backthen> thanks. Was looking at that one too. It doesn't seem to differentiate the two so much
[06:25:38] *** Quits: backthen (~Thunderbi@c-76-103-177-91.hsd1.ca.comcast.net) (Remote host closed the connection)
[06:25:44] *** Quits: BinaryWave (~binarywav@ip68-2-121-39.ph.ph.cox.net) (Quit: Ciao!)
[06:26:02] *** Joins: backthen (~Thunderbi@c-76-103-177-91.hsd1.ca.comcast.net)
[06:26:31] <Jong> what about this? https://www.cac.cornell.edu/wiki/index.php?title=Python_Distutils_Tips
[06:26:39] <Jong> search for this part:  build_ext        build C/C++ extensions (compile/link to build directory)
[06:27:18] <Jong> it describes build, build_py, build_ext, build_clib, and build_scripts
[06:28:20] *** Joins: BinaryWave (~binarywav@ip68-2-121-39.ph.ph.cox.net)
[06:28:46] <Jong> just found this: https://docs.python.org/3/distutils/apiref.html search for 9.34. distutils.command.build_ext
[06:29:12] <Jong> 9.32. distutils.command.build — Build all files of a package
[06:29:18] <Jong> 9.33. distutils.command.build_clib — Build any C libraries in a package¶
[06:30:31] *** Joins: buzzard (~quassel@23.19.141.120)
[06:31:52] <Jong> backthen  if you still haven't found your answer, I'd search in ebooks the terms build_py, build_ext, build_clib, and build_scripts
[06:32:19] *** Joins: infernix (~nix@spirit.infernix.net)
[06:33:35] *** Quits: dre_ (~dre@2001:8003:c932:c301:4ac5:c2f4:60c3:ddf6) (Ping timeout: 268 seconds)
[06:34:17] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[06:35:09] *** Joins: TuxicPolar_ (~irc@user/TuxicPolar)
[06:35:59] *** Quits: TuxicPolar (~irc@user/TuxicPolar) (Ping timeout: 250 seconds)
[06:36:45] *** TuxicPolar_ is now known as TuxicPolar
[06:37:59] <backthen> ok. I tried both and both seem to generate the same .so files so far
[06:41:08] *** Joins: dre_ (~dre@2001:8003:c932:c301:5789:64a6:ecde:50e0)
[06:47:14] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[06:47:29] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:49:34] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 260 seconds)
[06:49:35] *** Joins: Guest22 (~textual@216.49.7.141.res-cmts.pnt2.ptd.net)
[06:50:16] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[06:51:47] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[06:54:55] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:56:38] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9ea-abca-3b0d-a0e2.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[07:01:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:04:08] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[07:04:38] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:04:38] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:04:38] *** finn_elija is now known as FinnElija
[07:05:10] *** Quits: Guest22 (~textual@216.49.7.141.res-cmts.pnt2.ptd.net) (Quit: Textual IRC Client: www.textualapp.com)
[07:05:57] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 240 seconds)
[07:07:27] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-61d5-221b-08ad-1848.res6.spectrum.com)
[07:09:01] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[07:09:32] *** Joins: bluedust (~bluedust@117.204.152.129)
[07:11:27] *** Quits: alzgh (alzgh@user/alzgh) (Remote host closed the connection)
[07:11:32] *** Quits: Lukky (~Lukky@modemcable248.39-20-96.mc.videotron.ca) (Remote host closed the connection)
[07:11:47] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[07:11:47] *** Joins: alzgh (alzgh@user/alzgh)
[07:15:00] *** Quits: dre_ (~dre@2001:8003:c932:c301:5789:64a6:ecde:50e0) (Remote host closed the connection)
[07:16:23] *** Quits: locrian9 (~mike@99-153-255-194.lightspeed.irvnca.sbcglobal.net) (Quit: leaving)
[07:18:46] *** Joins: esv (~esv@74.124.178.154)
[07:21:51] *** Joins: adeliktas8 (~adeliktas@i59F5F176.versanet.de)
[07:22:57] *** Quits: adeliktas (~adeliktas@i59F5F5F7.versanet.de) (Ping timeout: 240 seconds)
[07:22:57] *** adeliktas8 is now known as adeliktas
[07:26:17] *** Quits: Xano (~Xano@host31-48-104-97.range31-48.btcentralplus.com) (Ping timeout: 240 seconds)
[07:28:57] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[07:30:39] *** Quits: progGuyx01 (~nites@98.42.83.50) (Read error: Connection reset by peer)
[07:31:58] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[07:32:46] *** Joins: Colt_ (~Colt@user/colt)
[07:32:55] *** Joins: djapo (~archangel@user/djapo)
[07:34:13] *** Quits: alzgh (alzgh@user/alzgh) (Ping timeout: 256 seconds)
[07:34:39] *** Quits: Colt (~Colt@user/colt) (Ping timeout: 268 seconds)
[07:35:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:40:27] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[07:48:02] *** Joins: cheater (~Username@user/cheater)
[08:01:57] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 240 seconds)
[08:02:42] *** Joins: Guest22 (~textual@216.49.7.141.res-cmts.pnt2.ptd.net)
[08:02:43] *** Parts: TuxicPolar (~irc@user/TuxicPolar) (bye)
[08:09:40] *** Quits: Guest22 (~textual@216.49.7.141.res-cmts.pnt2.ptd.net) (Quit: Textual IRC Client: www.textualapp.com)
[08:12:52] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[08:14:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[08:14:48] *** Joins: parv (~quass@user/parv)
[08:14:53] *** Joins: KevChang (~kev@216.49.7.141.res-cmts.pnt2.ptd.net)
[08:17:02] *** Joins: fikran (~fikran@user/fikran)
[08:21:49] *** KevChang is now known as KevChang2020
[08:26:43] *** Quits: KevChang2020 (~kev@216.49.7.141.res-cmts.pnt2.ptd.net) (Quit: Textual IRC Client: www.textualapp.com)
[08:28:32] *** Joins: frost (~frost@user/frost)
[08:29:04] *** Joins: NeilRG (~NeilRG@bras-vprn-toroon4834w-lp130-03-142-113-139-83.dsl.bell.ca)
[08:29:13] <NeilRG> is there a nice way to convert a dataclass into a dict without recursion?
[08:29:15] <NeilRG> something like this: {f.name: getattr(ies, f.name) for f in fields(ies)}
[08:29:49] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[08:30:22] *** Quits: sreve_ (~quassel@p54a71969.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[08:30:29] *** Quits: djhankb (~djhankb@208.113.164.68) (Read error: Connection reset by peer)
[08:30:45] *** Joins: sreve (~quassel@p54a71d29.dip0.t-ipconnect.de)
[08:31:12] *** Joins: djhankb (~djhankb@208.113.164.68)
[08:32:08] *** Joins: nomic (~nomic@85.203.46.91)
[08:33:40] <jarthur> NeilRG there likely is, using a stack-like data structure to iterate
[08:34:25] <jarthur> The standard dataclasses.asdict in cpython is recursive at the moment.
[08:36:51] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[08:42:18] *** Quits: nomic (~nomic@85.203.46.91) (Remote host closed the connection)
[08:43:09] <NeilRG> jarthur: yeah, that's the problem
[08:43:14] <NeilRG> I guess I just write a function
[08:44:53] *** Joins: nomic (~nomic@85.203.34.29)
[08:47:54] *** Quits: nomic (~nomic@85.203.34.29) (Client Quit)
[08:50:21] *** Joins: whanake (~whanake@116.251.196.106)
[08:50:41] *** Joins: nomic (~nomic@51.52.78.152)
[08:51:21] *** Parts: KvL (~KvL@195.216.219.57) ()
[08:51:35] *** Joins: nomic2 (~nomic@185.198.243.18)
[08:51:48] *** Quits: nomic2 (~nomic@185.198.243.18) (Client Quit)
[08:52:10] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[08:52:34] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:54:16] *** Joins: nomic2 (~nomic@185.198.243.174)
[08:54:32] <jarthur> NeilRG you probably already saw, but you could start with the standard:  https://github.com/python/cpython/blob/078abb676cf759b1e960f78390b6e80f256f0255/Lib/dataclasses.py#L1244
[08:54:43] <jarthur> dict_factory is just dict
[08:55:09] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[08:56:02] *** Quits: nomic (~nomic@51.52.78.152) (Ping timeout: 268 seconds)
[08:57:05] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[09:03:39] *** nomic2 is now known as nomic
[09:05:26] *** Quits: NeilRG (~NeilRG@bras-vprn-toroon4834w-lp130-03-142-113-139-83.dsl.bell.ca) (Remote host closed the connection)
[09:06:43] *** Quits: buzzard (~quassel@23.19.141.120) (Ping timeout: 256 seconds)
[09:07:14] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[09:14:04] *** Joins: kdc (~kdc@196.211.197.159)
[09:16:21] *** Joins: KvL (~KvL@user/KvL)
[09:16:40] *** Quits: CombatVet (~c4@user/combatvet) (Quit: suck it)
[09:16:54] *** Joins: CombatVet (~c4@user/combatvet)
[09:19:49] *** Joins: ravan (~ravan@user/ravan)
[09:20:12] *** Quits: CombatVet (~c4@user/combatvet) (Client Quit)
[09:21:12] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[09:21:23] *** Joins: CombatVet (~c4@user/combatvet)
[09:21:30] *** Joins: ccldarjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net)
[09:22:56] *** Quits: reset (~reset@user/reset) (Quit: reset)
[09:22:57] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[09:23:02] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[09:25:42] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[09:26:33] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 256 seconds)
[09:27:38] *** Quits: Haxxa (~Haxxa@122-199-29-168.ip4.superloop.com) (Quit: Haxxa flies away.)
[09:27:56] *** Quits: bluedust (~bluedust@117.204.152.129) (Remote host closed the connection)
[09:29:16] *** Joins: Haxxa (~Haxxa@122-199-29-168.ip4.superloop.com)
[09:32:38] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:34:41] *** Parts: maplefinger (~maplefing@user/lindis) ()
[09:36:28] *** Quits: KvL (~KvL@user/KvL) (Quit: KvL)
[09:38:22] *** Joins: KvL (~KvL@user/KvL)
[09:48:39] *** Quits: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com) (Ping timeout: 256 seconds)
[09:50:17] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[09:51:49] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[09:52:03] *** Joins: han-solo (~han-solo@user/han-solo)
[09:52:08] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[10:00:36] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Quit: Client closed)
[10:02:38] *** Quits: Oddity (~Oddity@user/oddity) (Ping timeout: 268 seconds)
[10:04:08] *** Quits: whanake (~whanake@116.251.196.106) (Remote host closed the connection)
[10:05:26] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[10:05:55] *** Joins: CombatVet (~c4@user/combatvet)
[10:06:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[10:08:36] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[10:09:11] *** Joins: CombatVet (~c4@user/combatvet)
[10:14:41] *** Colt_ is now known as Colt
[10:22:55] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[10:22:57] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[10:24:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[10:26:23] *** Joins: fikran (~fikran@user/fikran)
[10:28:38] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-61d5-221b-08ad-1848.res6.spectrum.com) (Quit: jarthur)
[10:30:17] *** Quits: ccldarjun (~textual@c-24-130-140-187.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:33:16] *** Quits: nomic (~nomic@185.198.243.174) (Quit: Leaving)
[10:34:02] *** Joins: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126)
[10:35:11] *** Joins: delvian (~delvian@41.13.224.164)
[10:37:20] *** Joins: nomic (~nomic@185.217.117.90)
[10:39:22] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Quit: Leaving)
[10:45:39] *** Joins: manti7 (~manti7@176.10.104.94)
[10:51:28] *** Joins: jmd (~user@de.cellform.com)
[10:52:14] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[10:55:08] *** Quits: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Quit: The Lounge - https://thelounge.chat)
[10:55:25] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[10:55:37] *** Quits: CombatVet (~c4@user/combatvet) (Quit: suck it)
[10:56:00] *** Joins: CombatVet (~c4@user/combatvet)
[10:59:21] *** Joins: jmd (~user@de.cellform.com)
[10:59:45] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:59:52] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[11:00:40] *** Joins: thurs80601421053 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[11:00:42] *** Joins: seednode (~seednode@user/seednode)
[11:03:32] *** Joins: jmd (~user@de.cellform.com)
[11:03:52] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[11:09:36] *** Joins: jmd (~user@de.cellform.com)
[11:10:55] *** Joins: roman_ (~roman@mob-194-230-147-129.cgn.sunrise.net)
[11:11:04] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[11:13:53] <roman_> help! so frustrated about python3 in Ubuntu.. (xenial, focal)... basic packages like python3-pip, python3-virtualenv always giving me SyntaxError: invalid syntax errors...
[11:16:25] <han-solo> roman_: can we see the error in a paste ? https://bpa.st/+python
[11:18:04] <roman_> in xenial I have update-alternatives --config python3 configured for Python 3.5.2 and in focal for 3.7.12.. both seem to have 'python3 -m pip' somehow broken..
[11:18:05] <roman_> https://bpa.st/B65Q
[11:19:02] <han-solo> you are going to need a newer python, or manually install the old pip and stuff
[11:19:15] <han-solo> and i would suggest the former
[11:19:56] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[11:19:57] <han-solo> can we see the error when you ran it in focal ?
[11:20:13] <roman_> of course, willing to go with a python3.9 and xenial don't matter (focal is the LTS to go and has it)
[11:20:36] <han-solo> 3.6+ should be fine, i think
[11:21:34] <han-solo> also don't mess with the system pythons..
[11:21:56] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:e3ad:4ed1:5636:ab41)
[11:26:15] <roman_> yes, on the 3.7.12 i cleaned the /usr/local now and attempt to 'pip install streamlink' worked now... it seems the suggested 'pip upgrade' would always mess with the system python
[11:26:16] <roman_> https://bpa.st/EM2A
[11:26:41] <han-solo> don't upgrade your system pip
[11:26:54] <han-solo> use a venv and update the pip in that if required
[11:28:22] *** Quits: infernix (~nix@spirit.infernix.net) (Quit: ZNC - http://znc.sourceforge.net)
[11:28:37] <han-solo> `python3 -m venv .env_dir && .env_dir/bin/pip install -U pip`
[11:30:14] <roman_> makes sense... still curious, what is it what makes so basic packages unparsable, most of the time already in __main__.. is it just latest pip & venv requiring >= 3.7 or a thing the ubuntu system pythons break?
[11:31:30] <han-solo> newer pip dropped support for 3.5, i think
[11:31:41] *** Joins: fbiagent_ (~fbiagent@user/fbiagent)
[11:32:15] <han-solo> https://pip.pypa.io/en/stable/news/#v21-0
[11:33:02] *** Joins: grooverman (~grooverma@177.102.117.95)
[11:34:03] *** Quits: fbiagent (~fbiagent@user/fbiagent) (Ping timeout: 256 seconds)
[11:34:17] *** Quits: grooverman_ (~grooverma@177.102.117.95) (Ping timeout: 240 seconds)
[11:34:27] *** Joins: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[11:34:58] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[11:39:17] *** Quits: sudomann_ (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[11:43:16] *** Joins: weedmic (~weedmic@5.102.235.240)
[11:43:56] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[11:44:40] *** Quits: onichomp666 (~onichomp@2806:264:4404:81d9:604e:48fe:c10c:4320) (Read error: Connection reset by peer)
[11:45:42] *** Joins: jmd (~user@de.cellform.com)
[11:46:09] *** Joins: upsala (~zcb@185.209.196.169)
[11:46:33] *** Joins: onichomp (~onichomp@2806:264:4404:81d9:604e:48fe:c10c:4320)
[11:46:59] *** Joins: eson123 (~sss@118.69.128.37)
[11:47:18] *** Quits: onichomp (~onichomp@2806:264:4404:81d9:604e:48fe:c10c:4320) (Client Quit)
[11:47:37] <eson123> is it possible to like restart a python script from within itself ?
[11:49:36] <KirkMcDonald> eson123: You could have the process exec itself, I suppose. But could you just, you know... write a loop?
[11:50:01] <eson123> oh no i am not intending to do an infinite loop, rather then the user click a button to restart
[11:50:04] <eson123> let's me try that
[11:50:29] <KirkMcDonald> That could still be done as a loop, I imagine.
[11:51:16] <eson123> yea but it requires more tasks since my program first read configuration from a config file then load them into flask to run a webserver, if a restart means doesn't calling anything that restart the script, i will be writing extra codes
[11:51:21] <eson123> and it could be more messy
[11:53:20] *** Joins: rendar (~rendar@user/rendar)
[11:59:58] *** Joins: sudomannn (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33)
[12:02:59] *** Quits: eirian (uid533172@user/eirian) ()
[12:03:08] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:03:13] *** Joins: buzzard (~quassel@23.19.141.119)
[12:03:17] *** Quits: sudomann (~sudomann@2601:155:8402:4960:456d:3861:4d00:d8bd) (Ping timeout: 240 seconds)
[12:04:23] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:3d04:ca5e:4c19:f931) (Quit: Leaving)
[12:05:05] *** Joins: kosh (~kosh@user/kosh)
[12:07:07] <eson123> KirkMcDonald: ok here is what i tried so far https://pastebin.com/N4dYdU8y but it doesn't seem to work, instead it gave me "can't open file 'restart': [Errno 2] No such file or directory"
[12:07:29] *** Quits: buzzard (~quassel@23.19.141.119) (Ping timeout: 256 seconds)
[12:08:17] *** Joins: bluedust (~bluedust@117.204.152.129)
[12:09:53] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[12:10:41] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[12:11:53] *** Joins: zaquest (~notzaques@5.130.79.72)
[12:11:59] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:12:48] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:13:14] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[12:13:44] *** Joins: CombatVet (~c4@user/combatvet)
[12:15:34] *** Joins: palasso (~palasso@user/palasso)
[12:16:09] *** Quits: Sargento (uid523534@wikipedia/Sargento-de-Hierro) (Quit: Connection closed for inactivity)
[12:16:37] *** Joins: onichomp (~onichomp@2806:264:4404:81d9:ddc9:3576:93d1:b14)
[12:17:07] *** Quits: apteryx (~maxim@dsl-10-129-179.b2b2c.ca) (Ping timeout: 256 seconds)
[12:17:28] *** Quits: onichomp (~onichomp@2806:264:4404:81d9:ddc9:3576:93d1:b14) (Read error: Connection reset by peer)
[12:20:10] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[12:20:46] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 268 seconds)
[12:21:22] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[12:23:01] <eson123> KirkMcDonald: oh nvm, i got it :P
[12:25:25] *** Parts: ntome (~ntome@user/ntome) (WeeChat 3.0.1)
[12:27:51] *** Joins: slav0nic (slav0nic@python.su)
[12:28:21] *** Joins: BlueSky (~BlueSky@user/bluesky)
[12:30:49] *** Joins: apteryx (~maxim@dsl-10-128-55.b2b2c.ca)
[12:31:19] *** Joins: infernix (nix@2a02:22a0:bbb1:d500::2)
[12:33:15] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[12:34:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[12:35:25] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Quit: Client closed)
[12:35:44] *** Joins: fikran (~fikran@user/fikran)
[12:37:25] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[12:37:54] *** Quits: weedmic (~weedmic@5.102.235.240) (Quit: Konversation terminated!)
[12:39:06] *** Joins: rexbinary_ (~rexbinary@user/rexbinary)
[12:39:45] *** Joins: Sargento (uid523534@wikipedia/Sargento-de-Hierro)
[12:40:30] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Ping timeout: 268 seconds)
[12:40:30] *** rexbinary_ is now known as rexbinary
[12:42:28] *** Joins: tobybl (~tobybl@213.31.132.151)
[12:44:03] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[12:44:11] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[12:45:34] *** Quits: parv (~quass@user/parv) (Quit: parv)
[12:49:02] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[12:49:03] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[12:51:09] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[12:51:23] *** Joins: CombatVet (~c4@user/combatvet)
[12:51:54] *** Quits: azidhaka (~azidhaka@user/azidhaka) (Quit: azidhaka)
[12:53:57] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[12:57:47] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Ping timeout: 256 seconds)
[12:58:31] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[12:59:29] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[12:59:44] *** Quits: eson123 (~sss@118.69.128.37) (Quit: Leaving)
[13:03:00] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[13:03:10] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[13:06:57] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 240 seconds)
[13:09:19] <nvz> I'm apparently on the wrong side of ballmer peak here, this is a pretty trivial issue.. I added lines 56-68 and this traceback occurs.. I can't understand how/why as the code I added modifies none of the object (book) which is being operated on when the key error occurs nor has it modified any of the vars used to slice this object. https://bpa.st/E3WQ
[13:09:58] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[13:10:06] <nvz> all I did was to correct the API suddenly giving me more than I ask for, modify a seperate object which is iterated over to get the number of verses cited
[13:10:14] *** Joins: ano (~ano@user/ano)
[13:10:29] <nvz> and somehow this is generating a key error in a totally different object
[13:10:37] <nvz> that didn't occur without this new code
[13:12:34] <nvz> hmm I think that new code may be modifying the type of verses
[13:12:47] <nvz> and its masked by the fact that python is (now) treating strings as lists
[13:15:13] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[13:15:37] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[13:17:16] *** Quits: bluedust (~bluedust@117.204.152.129) (Remote host closed the connection)
[13:21:20] *** Joins: pepper (~pepper@user/pepper)
[13:21:59] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 252 seconds)
[13:22:17] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[13:22:46] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[13:23:03] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[13:24:40] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[13:27:57] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[13:28:37] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[13:29:57] *** Quits: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[13:32:00] *** Joins: Goodbye_Vincent (cyvahl@freakshells.net)
[13:32:29] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 256 seconds)
[13:34:45] *** Joins: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859)
[13:37:22] *** Joins: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126)
[13:38:08] *** Joins: badsektor (~badsektor@user/badsektor)
[13:38:34] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[13:38:41] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[13:42:25] *** JingleJazzy is now known as jazzy
[13:42:32] *** Joins: shabius (~shabius@2a0e:1c80:1:1042::1009)
[13:43:58] *** Joins: emx (~emx@adsl-84-226-68-198.adslplus.ch)
[13:45:39] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[13:47:50] <nvz> oh well, it works again .. heh https://github.com/enveezee/duckit/commit/0243a39172654e3ab1fbbc15c4839438eb806885
[13:48:29] <nvz> idk if they recently broke their API or what, I only recently noticed I was getting more than I was asking for
[13:48:55] *** Quits: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[13:49:07] <nvz> hmm thats the wrong link xD https://github.com/enveezee/INRI/commit/3a320c038aa98bc758f61c50a5f73e24967a28cf
[13:49:34] *** Joins: reset (~reset@user/reset)
[13:51:58] *** Joins: bluedust (~bluedust@117.204.152.129)
[13:53:11] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:54:19] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[13:54:43] *** Joins: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126)
[13:55:46] *** Joins: TuxicPolar (~irc@user/TuxicPolar)
[13:56:02] *** Lord_of_Life_ is now known as Lord_of_Life
[13:59:32] *** Joins: zer0bitz (~zer0bitz@196.244.192.59)
[13:59:37] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[14:00:03] *** Quits: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 268 seconds)
[14:00:37] *** Joins: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126)
[14:03:21] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[14:03:51] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[14:07:57] *** Quits: bim9262 (~bim9262@user/bim9262) (Ping timeout: 240 seconds)
[14:09:53] *** Quits: mat001 (~mat001@c-69-181-158-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[14:10:32] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Ping timeout: 268 seconds)
[14:12:21] *** Joins: mat001 (~mat001@c-69-181-158-251.hsd1.ca.comcast.net)
[14:12:58] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[14:13:18] *** Joins: badsektor (~badsektor@user/badsektor)
[14:15:56] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[14:16:22] *** Joins: tobybl (~tobybl@213.31.132.151)
[14:18:02] *** Quits: badsektor (~badsektor@user/badsektor) (Ping timeout: 260 seconds)
[14:20:55] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[14:21:49] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[14:26:53] *** Quits: delvian (~delvian@41.13.224.164) (Ping timeout: 256 seconds)
[14:27:09] *** Quits: bluedust (~bluedust@117.204.152.129) (Remote host closed the connection)
[14:27:45] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[14:28:39] *** Joins: delvian (~delvian@41.13.212.88)
[14:29:38] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[14:30:15] *** Parts: TuxicPolar (~irc@user/TuxicPolar) (bye)
[14:30:30] *** Joins: schumaml (~schumaml@p200300e2ef1de00053c1821a43d17d29.dip0.t-ipconnect.de)
[14:31:43] *** Joins: parv (~quass@user/parv)
[14:32:33] *** Quits: emx (~emx@adsl-84-226-68-198.adslplus.ch) (Ping timeout: 256 seconds)
[14:33:43] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:36:47] *** Joins: zer0bitz_ (~zer0bitz@196.244.192.56)
[14:39:17] *** Quits: zer0bitz (~zer0bitz@196.244.192.59) (Ping timeout: 240 seconds)
[14:39:27] *** Joins: aniketgm (~Aniket@49.36.109.81)
[14:39:27] *** Quits: fstd (~fstd@xdsl-84-44-230-164.nc.de) (Read error: Connection reset by peer)
[14:39:40] *** Joins: fstd (~fstd@xdsl-84-44-230-164.nc.de)
[14:40:43] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:448c:d273:19c0:41c1)
[14:41:57] *** Joins: arinov (~arinov@178.240.175.124)
[14:43:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[14:44:17] *** Quits: zer0bitz_ (~zer0bitz@196.244.192.56) (Ping timeout: 240 seconds)
[14:44:53] *** Quits: fstd (~fstd@xdsl-84-44-230-164.nc.de) (Read error: Connection reset by peer)
[14:45:05] *** Joins: fikran (~fikran@user/fikran)
[14:45:43] *** Joins: linux_dream (~linux_dre@2a01:e0a:19:5e70:4ecc:6aff:feb9:b25b)
[14:45:57] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[14:45:59] *** Joins: fstd (~fstd@xdsl-84-44-230-164.nc.de)
[14:46:48] <linux_dream> hello cpu junkies I have a question about dictionaries. I am trying to create a new entry, right after defining, say d = {}.   I do d['some_key'] = 'monster' but I get KeyError as if 'some_key' doesn't exists, which I am trying to create
[14:47:05] *** Joins: Enitin (~Enitin@82.102.22.86)
[14:47:39] <deniska> linux_dream: that shouldn't be a key error, can you show the full code?
[14:48:27] <linux_dream> deniska here's my code https://bpa.st/KS6Q
[14:48:48] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[14:48:59] <linux_dream> I get KeyError: 'test'    for the 3rd line
[14:49:50] <deniska> linux_dream: you're not setting `fees_dict['test']
[14:49:52] <deniska> to anything
[14:49:56] <nvz> because you're not assiginging anything to it
[14:50:01] <Wulf> linux_dream: of course line 3 will fail
[14:50:15] <nvz> you're attempting to call up something that doesnt exist
[14:50:59] <linux_dream> my bad
[14:51:00] <Wulf> linux_dream: in the future, please make your test cases as small as possible. Lines 2 + 3 would have sufficed and you might have seen the bug on by yourself too
[14:51:16] <linux_dream> remove line 3
[14:51:22] <linux_dream> I get the error for line 8
[14:51:27] <linux_dream> and this is what I don't understand
[14:51:40] <linux_dream> I just added line 3 in the last moment to test something.
[14:51:47] <Wulf> linux_dream: += for a key that doesn't exist.
[14:51:47] <linux_dream> I understand why it doesn't work but not line 8
[14:52:06] <Wulf> linux_dream: maybe you want a collections.defaultdict
[14:52:10] <linux_dream> but shouldn't it create it?
[14:52:19] <linux_dream> Why is the answer at https://stackoverflow.com/questions/1024847/how-can-i-add-new-keys-to-a-dictionary working?
[14:52:22] *** Quits: schumaml (~schumaml@p200300e2ef1de00053c1821a43d17d29.dip0.t-ipconnect.de) (Quit: WeeChat 3.3)
[14:52:29] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 268 seconds)
[14:52:33] <linux_dream> I don't see how I do anything different than in the answer
[14:52:57] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 256 seconds)
[14:53:11] <Wulf> linux_dream: fees["key"] += 123  is (almost) the same as fees["key"] = fees["key"] + 123.
[14:53:11] <nvz> when you say x[y] you are attempting to index the object x by y
[14:53:20] <linux_dream> I want to check if the key exists in the dict. if not, create a key
[14:53:31] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 256 seconds)
[14:53:50] <nvz> when you say x[y] = z, you are assigning z to the x object as the value for the key y
[14:53:53] <linux_dream> ah I see Wulf
[14:54:19] <linux_dream> just changed the += to =, seems to work
[14:54:57] <linux_dream> awesome, thanks a lot guys
[14:55:00] <Wulf> linux_dream: https://docs.python.org/3/library/collections.html#collections.defaultdict  You might want defaultdict(int) or defaultdict(float)
[14:55:31] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[14:56:11] *** Joins: djhankb (~djhankb@208.113.164.68)
[14:56:29] <Wulf> linux_dream: https://ideone.com/wsDIsd
[14:56:47] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[14:56:52] *** Joins: zer0bitz_ (~zer0bitz@196.244.192.59)
[14:57:08] <linux_dream> i've fixed my code, it works as expected now
[14:57:18] <Wulf> excellent!
[14:57:35] <linux_dream> see you guys :)   thanks
[14:57:38] *** Quits: linux_dream (~linux_dre@2a01:e0a:19:5e70:4ecc:6aff:feb9:b25b) (Quit: Client closed)
[15:00:29] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:448c:d273:19c0:41c1) (Ping timeout: 268 seconds)
[15:00:39] <petaflot> hello! I have an issue that's been bothering me for a while now : when using asyncio.create_task(myfunc()) ; exceptions in myfunc() make the task crash but are not displayed! how can I fix this?
[15:02:05] <petaflot> .... for ow my workaround has been to add print("fooxyz") statements between every line to see exactly where myfunc() crashes and guess what is making the exception to occur. this is no longer viable.
[15:02:23] *** Quits: remolej (~kenoba@user/kenoba) (Quit: The Lounge - https://thelounge.chat)
[15:02:55] *** Quits: zer0bitz_ (~zer0bitz@196.244.192.59) (Read error: Connection reset by peer)
[15:03:16] <Wulf> petaflot: best fix: s/asyncio/trio/g
[15:03:30] *** Joins: remolej (~kenoba@user/kenoba)
[15:05:57] *** Quits: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[15:06:07] *** Joins: s33ker (~s33ker@89-212-68-200.dynamic.t-2.net)
[15:07:05] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[15:07:06] <petaflot> Wulf: ... and is there another fix? because trio is.... well... imho it's just an additional layer that makes things go wrong more easily
[15:07:07] *** Quits: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:07:25] *** Joins: zer0bitz (~zer0bitz@196.244.192.57)
[15:07:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:08:33] <Wulf> petaflot: it's not an "additional layer" but an alternative to asyncio.
[15:08:52] <Wulf> petaflot: you can wrap your task in an exception handler and dump the exception.
[15:09:09] <Wulf> not sure if there's a better way with asyncio. Haven't used it for a while.
[15:09:44] <petaflot> Wulf: not sure what you mean by "wrap" : my task starts with `try: ....`
[15:11:32] *** Quits: gossie (~gossie@2001:1c02:18d:2900:ab04:8a13:19b2:197e) (Ping timeout: 240 seconds)
[15:12:15] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:12:19] *** Joins: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859)
[15:12:34] <Wulf> petaflot: got a test case? I made a short one and the exception is displayed for me.
[15:12:34] <petaflot> .. and I see trio has no {,Lifo}Queue
[15:13:00] *** Quits: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859) (Client Quit)
[15:13:44] <petaflot> Wulf: test case? I'd have to trim my code down... I notice it happens "somewhere in the process".. I get my exceptions when I start coding, and with more and more nesting they "suddenly" disappear
[15:13:50] <Wulf> Ah, found a way.
[15:14:48] <petaflot> but "suddenly" is not really objective here... because unless I *try* to introduce errors to see when it happens, at some poit in the coding process I realize my exceptions are "gone"
[15:15:02] <Wulf> https://ideone.com/NlbP0c
[15:15:18] *** Joins: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859)
[15:15:40] *** Quits: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859) (Client Quit)
[15:15:47] <petaflot> Wulf: can you comment on the difference that makes it work or not work?
[15:16:20] <Wulf> https://ideone.com/Elro6N prints the exception in line 17.
[15:16:55] <Wulf> petaflot: If I don't assign the result of create_task to a variable, the garbage collector kicks in and then the exception is printed.
[15:17:12] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[15:17:25] *** Joins: gulzar (~gulzar@123.201.116.72)
[15:18:43] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[15:19:07] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:19:09] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[15:19:20] <petaflot> Wulf: I just removed the task assignation to a variable, no exception raised but task still crashes
[15:19:42] *** Joins: tmm88 (~tmm88@user/tmm88)
[15:20:50] *** Joins: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859)
[15:21:31] <Wulf> petaflot: and similar code with trio: https://ideone.com/ge30dp
[15:22:32] <gulzar> Hi. Web scrapping help. On this website http://cospi.iiserpune.ac.in/TSpred/Predict.html  , in "PDB code" input 1mvt and submit.  It waits for few seconds and give a result page like this http://cospi.iiserpune.ac.in/TSpred/workspace/1640524063_36/TS_output.html     . I need to submit suc ids and get the table from the page. Any ideas what I can do please
[15:23:09] *** Joins: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126)
[15:24:36] <Wulf> gulzar: consider not scrapping (typo intended) them. The query looks costly to me, so if you scrape them, it might incur a high cost to them.
[15:26:30] *** Joins: stockholm (~Andreas@p200300d2c73a4100098fa5cc81c28e2d.dip0.t-ipconnect.de)
[15:27:59] <gulzar> Wulf: leave the work scrap. I need to submit an id and get the table from the output page :)
[15:28:18] <stockholm> I write code with several classes spawning several different processes. Does it make sense to have the include statements only needed in some of the processes in the respective classes instead of on top of everything else?
[15:28:22] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:28:23] <gulzar> word*
[15:28:41] *** Quits: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[15:29:13] <petaflot> Wulf: I need to rewrite quite a bit of my code when usig trio instead of asyncio... AttributeError: get_event_loop
[15:30:01] <Wulf> gulzar: In general I'm all pro scraping. But in this particular case I think it might be a bad idea. Not going to help you, sorry. Go ask for their permission first or even start cooperate fully with them. E.g. they let you use their data/service for your research, you provide them back with your results.
[15:30:38] *** PJBoy is now known as Guest7659
[15:30:39] *** Quits: Guest7659 (~PJBoy@user/pjboy) (Killed (calcium.libera.chat (Nickname regained by services)))
[15:30:41] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[15:30:49] *** Joins: PJBoy (~PJBoy@user/pjboy)
[15:33:07] <gulzar> Wulf: I have permission. I have the code also. But code is in cgi, can't put it on my machinie
[15:33:17] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 240 seconds)
[15:33:26] *** Quits: kdc (~kdc@196.211.197.159) (Remote host closed the connection)
[15:33:34] *** Joins: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859)
[15:33:40] *** Joins: lalitmee_ (~lalitmee@180.94.33.150)
[15:33:41] <nedbat> stockholm: do you import instead of include? and modules instead of processes?
[15:33:56] *** Quits: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859) (Client Quit)
[15:33:58] <Wulf> stockholm: import statements should always be at the top, unless there are really special circumstances.
[15:34:09] <nedbat> stockholm: *do you mean
[15:34:23] *** Joins: alzgh (~alzgh@user/alzgh)
[15:35:17] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[15:35:45] *** Joins: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859)
[15:35:57] *** Quits: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859) (Client Quit)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:10] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:40] *** Joins: BlueSky (~BlueSky@user/bluesky)
[15:36:44] *** Quits: nyuszika7h (nyuszika7h@lykos/dev/nyuszika7h) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[15:37:39] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[15:38:05] *** Joins: Julian (~tos9@python/site-packages/Julian)
[15:38:39] *** Joins: AlanMD (~AlanMD@213.233.88.85)
[15:39:30] *** Joins: BlueSky (~BlueSky@user/bluesky)
[15:40:09] *** Quits: BlueSky (~BlueSky@user/bluesky) (Remote host closed the connection)
[15:40:27] *** Joins: bluedust (~bluedust@117.204.152.129)
[15:40:28] <stockholm> netbat I mean regular import statements for matplotlib, struct, socket etc. And i do mean processes. I am using multiprocessing. So far i am still in just one file. I think I might split it up into several files later.
[15:40:46] *** Quits: aniketgm (~Aniket@49.36.109.81) (Read error: No route to host)
[15:40:59] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Ping timeout: 256 seconds)
[15:41:02] <gulzar> Wulf: anything :)
[15:41:08] *** Joins: BlueSky (~BlueSky@user/bluesky)
[15:41:18] <petaflot> right. it seems I must really be missing something https://bpa.st/GJLQ when standardColorPad(possible_colorcodes) raises a exception
[15:41:39] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[15:41:47] <stockholm> Wulf, I hear you suggesting splitting up the code into several files, if i feel the need to place my import statements near the classes instead of in top of the file
[15:41:53] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[15:42:29] <gulzar> gtg /quit
[15:42:30] *** Joins: BlueSky (~BlueSky@user/bluesky)
[15:42:31] <gulzar> \quit
[15:42:33] *** Quits: gulzar (~gulzar@123.201.116.72) (Quit: Konversation terminated!)
[15:43:02] *** Quits: AlanMD (~AlanMD@213.233.88.85) (Ping timeout: 240 seconds)
[15:43:37] *** Parts: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) ()
[15:44:09] *** Quits: BlueSky (~BlueSky@user/bluesky) (Remote host closed the connection)
[15:44:24] <Wulf> petaflot: as for the queues, there is https://trio.readthedocs.io/en/stable/reference-core.html#trio.open_memory_channel  for normal FIFOs and building a simple LIFO wouldn't be hard either.
[15:45:03] <Wulf> petaflot: it raises some other exception.
[15:45:21] <Wulf> petaflot: the else: runs iff nothing was raised.
[15:46:11] *** Joins: BlueSky (~BlueSky@user/bluesky)
[15:46:17] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[15:46:34] *** Joins: aniketgm (~Aniket@49.36.109.81)
[15:46:40] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[15:46:48] <Wulf> petaflot: and the Exception classes (e.g. AccessGranted) sound like you're building your program flow on top of Exceptions. Might sound like fun, but Exceptions should only be used for errors, not for success.
[15:47:00] *** Quits: Affliction (affliction@idlerpg/player/affliction) (Ping timeout: 260 seconds)
[15:47:13] *** Joins: BlueSky (~BlueSky@user/bluesky)
[15:47:13] *** Quits: aniketgm (~Aniket@49.36.109.81) (Read error: Connection reset by peer)
[15:47:22] <Wulf> stockholm: of course you should split your code into modules/files ;-)
[15:48:03] <stockholm> Wulf, i was told my project was too small for that, still.
[15:48:09] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[15:48:11] *** Joins: bluedust_ (~bluedust@185.248.85.25)
[15:48:26] *** Joins: nyuszika7h (~nyuszika7@lykos/dev/nyuszika7h)
[15:48:39] <Wulf> stockholm: how many lines?
[15:48:42] *** Joins: BlueSky (~BlueSky@user/bluesky)
[15:48:50] *** Quits: Julian (~tos9@python/site-packages/Julian) (Quit: leaving)
[15:49:39] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[15:49:53] <stockholm> 270, right now, but i expect it to go up to 700 at least
[15:50:12] *** Joins: BlueSky (~BlueSky@user/bluesky)
[15:50:36] <petaflot> Wulf: do you know if it's possible to shew the exception that was raised if "none of the specified exceptions or no exception is raised" ?
[15:50:50] <Wulf> stockholm: sounds like you should split it ;)
[15:51:07] <Wulf> petaflot: except Exception as ex: ...
[15:51:09] *** Quits: BlueSky (~BlueSky@user/bluesky) (Read error: Connection reset by peer)
[15:51:11] <stockholm> yes, i will
[15:51:15] <Wulf> petaflot: or perhaps even BaseException
[15:51:19] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[15:51:30] *** Joins: BlueSky (~BlueSky@user/bluesky)
[15:51:37] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[15:51:37] *** Quits: bluedust (~bluedust@117.204.152.129) (Ping timeout: 240 seconds)
[15:51:54] *** Joins: Affliction (affliction@idlerpg/player/affliction)
[15:53:21] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:53:32] *** Quits: odrling (~odrling@korone.aidoru.agency) (Quit: see you space cowboy)
[15:54:01] <petaflot> Wulf: "Exceptions should only be used for errors, not for success" : what kind of theory is that? I'm a hacker, I use things in whatever way I can use them to make other things simpler
[15:54:18] <ChrisWarrick> petaflot: exceptions are meant for exceptional situations, i.e. errors
[15:54:47] <nedbat> stockholm: idk if you had your answer: you need to repeat your imports in every process
[15:54:58] <petaflot> ChrisWarrick: in my case AuthentificationSuccessfull" is exceptional
[15:55:16] <ChrisWarrick> petaflot: no, successful authentication is part of the happy path.
[15:55:17] <petaflot> .. so that does sound like "an error"
[15:55:51] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[15:56:11] <petaflot> ChrisWarrick: not when you're thinking on the hardware side. you have glitches all over the place, so a sequence of glitches that triggers AuthentificationSuccessfull is really unlikely
[15:56:24] *** Joins: odrling (~odrling@korone.aidoru.agency)
[15:56:36] <ChrisWarrick> petaflot: I don’t think I understand your argument.
[15:57:13] *** Quits: s33ker (~s33ker@89-212-68-200.dynamic.t-2.net) (Quit: Client closed)
[15:57:15] <ChrisWarrick> petaflot: what are glitches? do you need to glitch your hardware somehow to get a successful authentication?
[15:57:16] <petaflot> ChrisWarrick: I'm building a door that is supposedly secure : _unless_ the conditions for that door to open are met, the door should remain closed.
[15:57:43] <petaflot> ChrisWarrick: in "glitches" I include punks trying to crack the lock
[15:57:48] <hexnewbie> At least once in my life I've built an exception-like hierarchy of statuses to describe non-exceptional situations. And while I'm not sure if that's a bad or a good pattern, I did return those as a return value, as opposed to exceptions (they would have fit nice with the new match syntax)
[15:57:52] <ChrisWarrick> petaflot: their cracking attempts should be an exception
[15:58:21] <nedbat> petaflot: i would use a return for the success
[15:59:00] <petaflot> ChrisWarrick: they also are. but in the rare case there are not enough "glitches" for them to be labelled as a cracking attempt, that series of glitches should still ot open the door
[15:59:57] *** Quits: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[16:00:20] <nedbat> i'm trying to understand how to use numpy to compute a transformation matrix from one set of points to another.  I'm not getting it. Anyone know a resource for it? (or know how to do it?)
[16:00:48] <hexnewbie> (Actually, looking at the code, mine was a bad pattern: in my attempt to badly re-implement twisted inlineCallbacks *without* twisted, I was yielding classes that told my caller what to do)
[16:00:54] <petaflot> er... return values are "obsolete" , ie `raise returnValue(True)` is functionally the same as "return True"
[16:00:56] <ChrisWarrick> petaflot: the happy path (https://en.wikipedia.org/wiki/Happy_path) should not be an exception. The exceptional paths should be. (https://en.wikipedia.org/wiki/Exception_handling#Definition)
[16:01:03] <ChrisWarrick> petaflot: obsolete?
[16:01:25] <nedbat> petaflot: that is a strange convention.
[16:01:34] <petaflot> ChrisWarrick: the "happy path" in my case is the door remains closed, I have no visitors and my peace is kept as it was.
[16:02:53] <petaflot> nedbat: it might seem strange but it is some for of factorization. "return" can be made obsolete if the wrappig code supports exceptions
[16:03:05] <ChrisWarrick> petaflot: how do you handle the closed-door case?
[16:03:42] <nedbat> petaflot: can you link us to your code?
[16:03:58] <petaflot> ChrisWarrick: that's the point: the door is closed. I had this sort-of discussion here earlier on.. I still have to explain something
[16:04:17] *** Quits: arinov (~arinov@178.240.175.124) (Ping timeout: 240 seconds)
[16:04:47] *** Quits: alzgh (~alzgh@user/alzgh) (Ping timeout: 256 seconds)
[16:05:01] <petaflot> ChrisWarrick: the door is locked, there is a physical switch (it adds a state to None/True/False)
[16:08:20] <petaflot> as long as the physical switch is "locked", all is normal, all is as expected. as soon as the physical switch is "open", it should trigger a exception/warning/alarm _unless_ there is a valid reason for the door to be open
[16:09:24] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[16:09:38] <petaflot> when I start my program, oe of the first thing it does is check "is the door locked" ; if not, it asks the admin if the door should be closed (and locked).
[16:10:17] <petaflot> "door locked" is the normal state of the door. or I wouldn't put a door there in the first place
[16:11:08] <petaflot> so unless there's an exception that says "AccessGranted", whenever the door is open triggers an alarm.
[16:11:19] <petaflot> is this clear enough?
[16:11:48] <ChrisWarrick> petaflot: which of these looks cleaner to you? https://bpa.st/AJXQ
[16:12:18] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[16:12:19] *** Joins: trace (~trace@ip5b429834.dynamic.kabel-deutschland.de)
[16:13:24] *** Quits: trace (~trace@ip5b429834.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:13:25] *** Quits: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[16:13:48] *** Joins: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de)
[16:13:50] <petaflot> ChrisWarrick: pow(b,2)*4*a*c looks cleaner
[16:13:54] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[16:14:15] <ChrisWarrick> petaflot: huh?
[16:14:18] <petaflot> .. aalthough I'm not sure it's computationally more efficient
[16:14:54] *** Quits: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:15:17] *** Joins: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de)
[16:15:21] <nedbat> petaflot: what brings you here today? it feels like ChrisWarrick and you are talking past each other about exception styles.
[16:15:54] <petaflot> ChrisWarrick: I mean your exampleis too simplistif to express the complexity of my code. I do understand that exceptions are usually used for the non-ideal workflows, but my case is a case of "--" and where "--" you get "+"
[16:16:12] <petaflot> nedbat: ^
[16:16:23] <bjs> successful and exceptional aren’t mutually exclusive
[16:16:39] *** Joins: Xano (~Xano@2a00:23c4:4204:700:5297:fb41:1ad0:9314)
[16:16:44] <bjs> and neither mean “non-ideal”.
[16:17:14] <petaflot> hey bjs :-) how are you? did you figure anything out of this FIFO.put() nonsense?
[16:17:24] *** Quits: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:17:38] <bjs> petaflot: what nonsense?
[16:17:49] *** Joins: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de)
[16:17:57] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 240 seconds)
[16:18:31] *** Quits: Xano (~Xano@2a00:23c4:4204:700:5297:fb41:1ad0:9314) (Remote host closed the connection)
[16:18:45] <petaflot> bjs: where it takes a function DELAY to be able to asyncio.Queue.get() when there is a timeout set on asyncio.Queue.put()
[16:18:50] *** Joins: alzgh (alzgh@user/alzgh)
[16:19:25] *** Quits: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:20:42] *** Joins: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de)
[16:20:51] <nedbat> petaflot: to answer your original question: it's not uncommon to catch exceptions at the top of a task and print them.
[16:21:11] <ChrisWarrick> petaflot: I can’t see a timeout in asyncio queues?
[16:21:25] <nedbat> petaflot: though i agree that a function shouldn't always raise an exception. it's good to have a return also.
[16:21:35] *** Joins: kdc (~kdc@196.211.197.159)
[16:21:51] <ChrisWarrick> petaflot: https://docs.python.org/3/library/asyncio-queue.html is pointing to wait_for to do a timeout
[16:23:29] <petaflot> I have a feeling some people are just missing my point: https://bpa.st/LANQ
[16:24:00] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[16:24:10] <petaflot> nedbat: yes it returns None if it "fails"
[16:24:49] <nedbat> petaflot: ok, in your real program, what does line 9 indicate?
[16:24:54] <ChrisWarrick> petaflot: could you show some example code for your asyncio queue issue?
[16:26:56] <petaflot> nedbat: lie 9 says `raise AccessDenied`
[16:27:36] <nedbat> petaflot: can you show us some real code? That might make this easier
[16:27:42] *** Joins: jdmark (~jdmark@user/jdmark)
[16:28:21] *** Quits: hook (~hook@user/silver-hook/x-9987513) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[16:28:44] <petaflot> .. which line is supposedly caught just before line 10 with an `except AccessDenied: ...` clause
[16:29:11] *** Joins: bluedust (~bluedust@117.204.152.129)
[16:29:16] <petaflot> nedbat: ChrisWarrick: I would love to... but I need to trim it down first
[16:29:47] <nedbat> petaflot: well, i'm getting confused about what function is raising exceptions, what function is catching exceptions, etc.
[16:30:00] <nedbat> petaflot: you might not need to trim it down if you can just point us to the lines we're talking about
[16:30:15] <petaflot> and I need to get some food too. So I will trim the code down... but it won't happe before at two hours or so
[16:31:09] <nedbat> petaflot: if you don't mind me asking, why do you need to trim down the code?
[16:31:36] * petaflot needs to wash some dishes before fetching the food, or it will be too late
[16:31:50] <petaflot> nedbat: because I'm.. paranoid?
[16:32:01] <nedbat> petaflot: are there secrets in the code?
[16:32:06] <jmd> petaflot: You can do some of mine if you like.
[16:32:17] *** Quits: bluedust_ (~bluedust@185.248.85.25) (Ping timeout: 240 seconds)
[16:32:47] <petaflot> nedbat: also because there are some libraries involved which *do* include secrets
[16:32:58] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[16:33:08] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[16:33:27] <nedbat> petaflot: i was just hoping to see your code that was doing this exception dance to understand how you were approaching them.  you can leave out the libraries if they aren't involved.
[16:33:28] <petaflot> so i need to make sure you have a code that 1) works 2) does not require me to send over some 10 files
[16:33:31] *** Joins: aniketgm (~Aniket@49.36.109.81)
[16:33:40] <nedbat> petaflot: we don't run the code.
[16:33:50] <petaflot> right
[16:34:18] <nedbat> petaflot: for example, the implementation of is_the_door_locked() doesn't matter
[16:35:04] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:35:19] *** Quits: parv (~quass@user/parv) (Quit: parv)
[16:36:43] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[16:37:13] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 256 seconds)
[16:37:54] *** Joins: stonkey (~stonkey@user/stonkey)
[16:39:27] <petaflot> https://bpa.st/W5QA this should be enough for you to do something... I basically removed everything that was unrelevant
[16:39:58] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[16:40:03] <petaflot> (also because really I don't think you should read junk)
[16:40:22] <braxas> should rollbacks to wiki changes not be discussed first?
[16:40:23] *** Quits: Haxxa (~Haxxa@122-199-29-168.ip4.superloop.com) (Ping timeout: 268 seconds)
[16:40:54] <montpol> is there a way with scipy.gaussian to get the values at a specific sampling rate? It just seems you give an interval rather than an actual sampling rate: https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.gausspulse.html
[16:41:05] *** Quits: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 252 seconds)
[16:41:10] <bjs> braxas: wiki changes?
[16:41:11] <braxas> I added rankings to WebFrameworks page: https://wiki.python.org/moin/WebFrameworks?action=info - in part so that it is clear if frameworks are fringe frameworks or actually mainstream frameworks - but someone rolled it back
[16:41:15] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[16:43:23] <Wulf> petaflot: 12 levels of indentation... :(
[16:43:40] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[16:43:57] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 240 seconds)
[16:44:02] <braxas> like for example, I would like to know that gitto is hardly used by anyone, and that Tornado is one of the top 500 packages when considering web frameworks for python
[16:44:10] *** Joins: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126)
[16:44:27] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[16:44:29] <braxas> but instead they appear next to each other with no clear discerning characteristics
[16:44:44] <hogarius> braxas: did someone discuss your additions before you added them?
[16:44:58] <braxas> hogarius: no - it is a wiki
[16:45:33] *** Joins: tobybl (~tobybl@213.31.132.151)
[16:45:54] *** Quits: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:46:16] <nedbat> braxas: i would suggest opening a thread on discuss.python.org about it
[16:46:22] *** Joins: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de)
[16:46:41] <braxas> okay good idea
[16:46:42] <braxas> thanks
[16:46:43] *** Joins: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com)
[16:48:04] *** Joins: Auron (~Auron956@user/auron)
[16:48:21] *** Joins: ice9 (~ice9@user/ice9)
[16:49:24] *** Quits: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:49:49] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[16:49:53] *** Joins: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de)
[16:50:07] *** Joins: ravan (~ravan@user/ravan)
[16:50:16] <petaflot> Wulf: 12? yeah... how should this matter? is there a magical limit where python goes berserk?
[16:50:42] <aniketgm> hi
[16:50:52] <aniketgm> petaflot: is that advent of code ?
[16:50:54] *** Quits: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:51:42] <nedbat> petaflot: i agree with Wulf that these functions are too long and deep, it would be easier to understand if you made smaller pieces
[16:51:50] *** Joins: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de)
[16:51:54] <Wulf> petaflot: python is fine with it, but people reading your code might not be
[16:52:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[16:54:03] *** Joins: hook (~hook@user/silver-hook/x-9987513)
[16:54:26] *** Joins: fikran (~fikran@user/fikran)
[16:55:24] *** Quits: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:55:26] *** Joins: Vonter (~Vonter@user/vonter)
[16:55:55] *** Joins: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de)
[16:57:02] *** Quits: stockholm (~Andreas@p200300d2c73a4100098fa5cc81c28e2d.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[16:57:24] *** Quits: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[16:57:53] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[16:59:58] *** Joins: fury_ (~fury@znc.v6.codexterous.com)
[17:00:55] <Wulf> aniketgm: it's not, unless that submarine got trapped behind some door
[17:01:50] *** Quits: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 260 seconds)
[17:02:38] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[17:03:45] *** Joins: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126)
[17:04:15] *** Joins: Rum (~bourbon@user/rum)
[17:04:20] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:07:02] <petaflot> aniketgm: what do you mean by "advent"? forme advet is something that happens before christmas when kids open tiy doors in calendars
[17:07:10] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[17:07:51] <deniska> petaflot: https://adventofcode.com/ same, but programmers instead of kids, and small puzzles instead of doors
[17:07:59] <nedbat> aniketgm: it's not
[17:09:43] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:6b63:2604:dd58:4554) (Quit: Leaving)
[17:12:13] * petaflot confirms it's not advent of code. also... I didn't count the levels of indentation. it just happened.
[17:12:29] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:12:30] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:6b63:2604:dd58:4554)
[17:12:47] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[17:17:13] *** Quits: sandb0y (~pirate@user/sandb0y) (Quit: Time for another great escape)
[17:19:04] *** Joins: lethu (~lethu@user/lethu)
[17:19:09] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 256 seconds)
[17:19:46] *** Joins: SanchoPanza (~rose@2a03:ef42:4002:d75f:bcc6:bc6a:c141:ec68)
[17:20:16] <SanchoPanza> Shell for UNKNOWN_VIRTUAL_ENVIRONMENT already activated.
[17:20:18] <SanchoPanza> No action taken to avoid nested environments.
[17:20:53] <SanchoPanza> Hi- I deactivated it but I don't know why this error occurs
[17:21:13] <nedbat> SanchoPanza: can you pastebin all the things you did?
[17:21:25] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 256 seconds)
[17:22:12] <SanchoPanza> nedbat : first I run the pipenv from absolute path
[17:22:28] <nedbat> SanchoPanza: if you could pastebin the actual commands, that would be better
[17:22:44] <SanchoPanza> pip3 install pipenv
[17:22:59] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Ping timeout: 256 seconds)
[17:23:24] <SanchoPanza> /home/username/.local/bin/pipenv install django==3.0
[17:23:33] <SanchoPanza> but it didn't work
[17:23:44] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[17:23:55] <SanchoPanza> because I should have used the sudo to install pipenv
[17:24:07] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[17:24:15] <grym> SanchoPanza: you definetly should not use sudo to install pipenv
[17:24:26] <grym> (or anything else with pip or pip3)
[17:24:43] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:6b63:2604:dd58:4554) (Quit: Leaving)
[17:25:02] <nedbat> i'm trying to understand how to use numpy to compute a transformation matrix from one set of points to another.  I'm not getting it. Anyone know a resource for it? (or know how to do it?)
[17:25:09] <SanchoPanza> but this fixed the problem and I could see Pipfile and Pipefile.lock
[17:25:40] <SanchoPanza> but when I run pipenv shell in the directory
[17:25:47] <SanchoPanza> the error occured
[17:26:00] <Wulf> nedbat: got example code with input + desired output?
[17:26:01] *** Quits: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 268 seconds)
[17:26:10] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:6b63:2604:dd58:4554)
[17:26:38] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 268 seconds)
[17:26:39] <nedbat> Wulf: anything that can represent a point as [x,y,z] and then have a transformation matrix to produce [x', y', z'] would be great
[17:26:40] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[17:27:43] *** Parts: SanchoPanza (~rose@2a03:ef42:4002:d75f:bcc6:bc6a:c141:ec68) (WeeChat 2.8)
[17:28:55] <grym> nedbat: given a transformatio matrix T, it's just np.matmul(T,points), right?
[17:29:42] <nedbat> grym: the points are the rows? so `points` has 3 columns?
[17:30:44] *** Joins: badsektor (~badsektor@user/badsektor)
[17:30:46] <Wulf> nedbat: you've got x,y,z,x',y',z' and want a 3x3 matrix as result?
[17:30:52] <nedbat> i also need to compute a matrix given src and dest points, which is twisting my head. I know linalg.solve is in the mix somehow
[17:30:55] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:6b63:2604:dd58:4554) (Client Quit)
[17:31:04] <grym> nedbat: https://bpa.st/MPHQ  e.g, in 2d because i'm laaaazy
[17:31:32] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 240 seconds)
[17:31:34] <grym> (that just scales x by a factor of two)
[17:32:09] <bjs> nedbat: what kind of transformation?
[17:32:09] *** Joins: nyah (~nyah@94.6.71.219)
[17:32:35] <bjs> if you're looking for translations as well perhaps the information you're missing is that you want an affine transformation
[17:32:46] <nedbat> bjs: i do need translations also
[17:32:49] <petaflot> Wulf: would it not be better to read the code instead of counting te levels of identation? I hadn't realiszed it was 12 util you mentionned it.
[17:32:57] *** Joins: DPA- (~DPA@75-128-16-94.static.cable.fcom.ch)
[17:33:07] <nedbat> petaflot: the point is that it's hard to read the code because of the size of the functions
[17:33:25] <Wulf> petaflot: counting levels and then complaining about it takes less time ;-)
[17:34:16] <bjs> nedbat: here's a general form of an affine transform https://bpa.st/TOEA
[17:34:23] <bjs> grym already showed how to scale
[17:34:48] <bjs> eh the bottom row should be 1s
[17:35:02] *** Quits: DPA- (~DPA@75-128-16-94.static.cable.fcom.ch) (Client Quit)
[17:35:11] *** Joins: ice9 (~ice9@user/ice9)
[17:35:16] <bjs> at the end I mean, like an identity, [0,0,0,1]
[17:35:33] *** Joins: BlueSky (~BlueSky@user/bluesky)
[17:35:51] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Ping timeout: 276 seconds)
[17:36:08] <petaflot> nedbat: well. I could write C and use {} instead of indents... it wouldn't change the complexity of my thinking. I feel it's like I'm playing chess with too many moves in my mind and that people are going like "naah... you can't play chess like that"
[17:36:28] <bjs> nedbat: see https://en.wikipedia.org/wiki/Affine_transformation#Augmented_matrix  this is probably the easiest way to represent it in numpy
[17:37:47] <nedbat> bjs: i understand the general ideas (years of PostScript work helped), but computing the transform from a set of src/dest points is confusing me
[17:37:51] *** Quits: stonkey (~stonkey@user/stonkey) (Ping timeout: 256 seconds)
[17:37:53] *** Joins: gulzar (~gulzar@123.201.116.72)
[17:38:05] *** Joins: thiras (~thiras@user/thiras)
[17:38:08] <Wulf> nedbat: how many src/dst pairs you've got?
[17:38:11] <bjs> nedbat: if it's a single datapoint isn't it always just a translation?
[17:38:17] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[17:38:20] <bjs> yes as Wulf says, how many are you trying to fit to
[17:38:30] *** Joins: DPA (~DPA@2a05:41c0:0:8104::a3c:10d)
[17:38:46] <Wulf> nedbat: I think with len(p) == 3 you'd need 3 translations to be able to get a unique solution
[17:38:47] <nedbat> Wulf: i have plenty 10/11/12? (btw, this is advent of code)
[17:38:57] <Wulf> nedbat: which one?
[17:38:57] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:6b63:2604:dd58:4554)
[17:39:09] <nedbat> Wulf: 2021/19
[17:39:49] *** Joins: the_lanetly_052 (~the_lanet@194.135.152.13)
[17:40:34] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[17:42:59] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[17:43:20] *** Joins: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126)
[17:43:54] *** Joins: ethrl (~ethereal@user/doforlove33)
[17:46:15] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[17:46:21] *** Quits: KvL (~KvL@user/KvL) (Ping timeout: 256 seconds)
[17:46:22] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 268 seconds)
[17:47:00] *** Quits: Rum (~bourbon@user/rum) (Quit: WeeChat 3.4)
[17:48:22] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[17:49:03] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[17:49:51] *** Joins: lethu (~lethu@user/lethu)
[17:49:57] *** Joins: ano (~ano@user/ano)
[17:50:44] *** Joins: esv (~esv@74.124.178.154)
[17:50:51] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2d3b-cffd-943a-eda6.res6.spectrum.com)
[17:50:53] *** Quits: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[17:51:03] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[17:51:17] *** Quits: yitz (~yitz@exercism/yitz) (Ping timeout: 240 seconds)
[17:51:19] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Ping timeout: 268 seconds)
[17:51:22] *** Joins: ice9 (~ice9@user/ice9)
[17:52:46] *** Joins: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126)
[17:52:57] <gulzar> Wulf: anything please
[17:54:15] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[17:54:23] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Client Quit)
[17:55:31] *** Joins: yitz (~yitz@exercism/yitz)
[17:56:37] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:6b63:2604:dd58:4554) (Ping timeout: 240 seconds)
[17:57:12] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[17:57:37] *** Quits: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net) (Ping timeout: 240 seconds)
[17:58:04] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[17:58:18] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[18:01:48] *** Joins: dvyd (~dvyd@2a0d:6fc2:47b0:1800:b587:3b73:7799:4284)
[18:04:03] <emerent> Wulf: all the sets of positions you have in that problem are relative to some point per set you don't know
[18:04:51] <emerent> so you can only know that two sets could be overlapping for a given offset and rotation
[18:04:52] *** Quits: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 268 seconds)
[18:04:54] *** Quits: aniketgm (~Aniket@49.36.109.81) (Read error: No route to host)
[18:05:10] <emerent> and you have the additional information that if at least 12 could be overlapping, then they do actually overlap
[18:05:45] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[18:06:41] *** Joins: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126)
[18:06:43] *** Quits: ice9 (~ice9@user/ice9) (Ping timeout: 268 seconds)
[18:09:16] *** Joins: ano (~ano@user/ano)
[18:12:35] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-71e3-edb6-520a-8c68.res6.spectrum.com)
[18:13:04] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Remote host closed the connection)
[18:13:24] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[18:14:21] <dvyd> I'm struggling to run as many simulations as possible at once on a 40-core machine without running out of memory (128GB). Since I could originally run only 4 simulations at a time, I changed the code to write to disk periodically. But, too much writing and disk becomes a bottleneck. Is there a best practice here? For example, what file format or
[18:14:21] <dvyd> library is fastest? I'm appending to CSV files line by line in a for loop, which I suspect is part of my problem! What should I be doing instead?
[18:15:24] <Wulf> dvyd: try to not use the disk.
[18:16:12] <Wulf> dvyd: or are you writing only the results?
[18:17:21] <dvyd> Wulf: we are only recording the data we need to analyze. but there is a lot.
[18:17:24] *** Joins: stockholm (~Andreas@p200300d2c73a4100098fa5cc81c28e2d.dip0.t-ipconnect.de)
[18:17:51] *** Quits: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:18:08] <dvyd> Perhaps I could use more efficient data structures and fit more into memory. But, we'd probably then try to run bigger simulations  :)
[18:18:39] *** Quits: BlueSky (~BlueSky@user/bluesky) (Remote host closed the connection)
[18:18:53] <tmm88> get 1000 raspberry pis, make a pi cluster, plug there extra ram and get some graphics cards
[18:18:56] *** Joins: Onepamopa (Onepamopa@78.83.17.196)
[18:19:18] <tmm88> and then either use opensource software
[18:19:24] <tmm88> or use windows for arm
[18:19:54] *** Quits: grawity (grawity@star.nullroute.lt) (Remote host closed the connection)
[18:20:02] <tmm88> or mac os big sur running on qemu kvr
[18:20:23] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Quit: Leaving)
[18:20:25] *** Joins: esther (~esther@2607:fb90:20d2:ecbd:d269:c419:3dc4:79e7)
[18:20:47] <dvyd> I was hoping there were some libraries or file formats (perhaps binary, compressed) that are used for this sort of thing?
[18:21:18] <dvyd> HDF5?
[18:22:00] *** Joins: grawity (grawity@star.nullroute.lt)
[18:22:01] <Wulf> nedbat: perhaps this helps: https://bpa.st/L5XQ
[18:22:27] *** Joins: rickybob2 (~rickybob@gateway/vpn/pia/rickybob)
[18:22:32] <nedbat> Wulf: thanks, i have to wait to look at it in detail
[18:22:51] <ChrisWarrick> dvyd: hdf5 is one idea
[18:23:47] <ChrisWarrick> dvyd: perhaps another option would be to increase the size of swap. That might or might not help, depending on your memory usage patterns, but it’s quick to try
[18:24:02] <Wulf> dvyd: What's the bottleneck? Writing speed of disk, or CPU when python serializes data?
[18:24:37] *** Quits: esther (~esther@2607:fb90:20d2:ecbd:d269:c419:3dc4:79e7) (Ping timeout: 240 seconds)
[18:25:30] *** Quits: grawity (grawity@star.nullroute.lt) (Remote host closed the connection)
[18:25:36] <dvyd> When I keep data in memory, I can only use 4 cores out of 40 cores. When I write to disk, disk quickly becomes the bottleneck
[18:26:01] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[18:26:11] <Wulf> dvyd: which OS?
[18:26:31] *** Joins: grawity (~grawity@star.nullroute.lt)
[18:26:36] <dvyd> (CPU usage drops during writing, and Windows reports 100% disk usage (it can't write any faster).
[18:26:38] *** Joins: aniketgm (~Aniket@49.36.107.251)
[18:26:44] <dvyd> Windows 10
[18:27:08] *** Joins: shuck (~shuck@user/shuck)
[18:27:11] <Wulf> dvyd: how much data do you write per second, and what kind of disc is that?
[18:27:24] *** Quits: shuck (~shuck@user/shuck) (Remote host closed the connection)
[18:27:49] *** Joins: shuck (~shuck@user/shuck)
[18:27:52] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[18:27:59] <dvyd> The data disk is physical/mechanical (not SSD).
[18:28:00] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[18:28:59] <dvyd> I don't know the write speed. I allow each list to grow to a defined MAX_SIZE, write it all to CSV, and then reset the list.
[18:29:39] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[18:30:03] <Wulf> dvyd: make a simulation where you don't actually write but compute how fast you would write with an infinitely fast disk
[18:30:26] <dvyd> Our work doesn't fit easily within the Dask framework, but I wonder how Dask seems to use memory and CPU so efficiently.
[18:30:48] <dvyd> My code is ... much worse.
[18:32:01] *** Joins: hemstock (~hemstock@93-51-179.internethome.cytanet.com.cy)
[18:32:13] <gulzar> Hi. Web scrapping help. On this website http://cospi.iiserpune.ac.in/TSpred/Predict.html  , in "PDB code" input 1mvt and submit.  It waits for few seconds and give a result page like this http://cospi.iiserpune.ac.in/TSpred/workspace/1640524063_36/TS_output.html     . I need to submit 20 such ids and get the table from the page. bs4 and pandas can format the table. request can submit the job. How to wait for few seconds and get the new url?  I have
[18:32:14] <gulzar> permission to use the server.
[18:32:20] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[18:32:34] *** Quits: hemstock (~hemstock@93-51-179.internethome.cytanet.com.cy) (Client Quit)
[18:32:57] *** Joins: b_jonas (~x@catv-176-63-3-122.catv.broadband.hu)
[18:33:36] <Wulf> dvyd: one of my server disks can write up to 255 MiB/s according to specs. If you've got only a single disk, it's easy to generate more data than it could write.
[18:34:04] <dvyd> Wulf, that seems like a good idea! If I have a data structure, how would I proceed? measure the size of the data structure at periodic intervals?
[18:34:33] *** Joins: glik22 (~glik22@99-36-164-253.lightspeed.snjsca.sbcglobal.net)
[18:34:54] <dvyd> Wulf, so you have multiple disks? And you plan writes so that you write simultaneously to different disks?
[18:35:01] <ChrisWarrick> gulzar: what did you try?
[18:35:16] *** Joins: chuck_ (~shuck@user/shuck)
[18:35:26] <Wulf> dvyd: you could create some io.* sub class which doesn't write but only measure. You would use this instead of a real file when writing.
[18:35:37] <ChrisWarrick> gulzar: it’s quite likely that if you just made the post request, you’d get the correct page back, or a link to the desired page in an easily scrape-able way
[18:35:48] <Wulf> dvyd: just using a RAID and hoping that OS + Raid Controller do their job :)
[18:36:15] <gulzar> ChrisWarrick: I am here https://paste.debian.net/1224808/
[18:36:32] <ChrisWarrick> gulzar: what results do you get?
[18:36:37] *** Quits: shuck (~shuck@user/shuck) (Ping timeout: 240 seconds)
[18:36:49] <ChrisWarrick> gulzar: also, it looks like you’re mixing selenium and requests here?
[18:37:02] *** Quits: Liexei (~Liexei@user/liexei) (Ping timeout: 240 seconds)
[18:37:10] <gulzar> ChrisWarrick:  selenium can't submit as the id for buttono is missing. request is able to submit but it returns the home page only. The next url is not returned
[18:37:36] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[18:37:39] <gulzar> ChrisWarrick: I was trying both, selenium is not working, it opens firefox, enters the id, but then can't submit as no id on the button
[18:37:42] <ChrisWarrick> gulzar: are you sure you’re POST'ing to the correct URL? are you sure you aren’t missing any required form fields?
[18:38:21] <gulzar> ChrisWarrick: I only need to enter one data into textbox. others can be empty
[18:38:30] <bjs> nedbat: I had a bit of fun doing some linear algebra https://bpa.st/L2YQ
[18:38:31] <gulzar> ChrisWarrick: try submitting one job on browser
[18:38:38] <gulzar> it takes like 10secc
[18:38:48] <dvyd> Wulf, thank you. you've given me some avenues of investigation.
[18:39:02] <ChrisWarrick> gulzar: how about my first question?
[18:39:21] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[18:39:38] <gulzar> ChrisWarrick: the url is correct, http://cospi.iiserpune.ac.in/TSpred/ , http://cospi.iiserpune.ac.in/TSpred/Predict.html   both urls work
[18:39:43] <bjs> nedbat: given an N-dimensional transformation and (N+1) datapoints, this calculation (afaik) should be able to give you back some (N+1, N+1)-shaped affine transformation matrix. I have no idea if this solution is unique :s
[18:39:45] <Wulf> dvyd: and you should really not use csv but some other format. Maybe json or some binary format.
[18:39:55] <ChrisWarrick> gulzar: the URL you access in the browser is not necessarily the URL the form POSTs to
[18:40:06] <gulzar> oh
[18:40:47] <bjs> nedbat: I have no idea if this is a good idea, but it was fun to write :P
[18:41:21] <gulzar> ChrisWarrick: it's cgi wewbste, the form action poinnts to action="/TSpred_cgi/TS_main.py"
[18:41:23] *** Quits: kosh (~kosh@user/kosh) (Read error: Connection reset by peer)
[18:41:35] <ChrisWarrick> gulzar: okay, what if you try POSTing to that URL?
[18:41:36] <BtbN> Did something recently change with how pyenv handles building packages? I'm trying to install numpy, and it fails because it can't find Python.h. Python.h is very much there though.
[18:41:45] <BtbN> The exact same Build-Script worked a few weeks ago
[18:41:53] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[18:41:56] *** Joins: Mattiaslndstrm (~Mattiasln@c-73a0225c.018-449-6e6b701.bbcust.telenor.se)
[18:41:56] <Wulf> BtbN: you need some os package for it, e.g. python3-dev on debian
[18:42:10] <BtbN> That'll install the wrong Python.h
[18:42:16] <BtbN> Python is supplied by pyenv after all.
[18:42:22] <BtbN> Including Python.h.
[18:42:27] <Wulf> BtbN: oh, right.
[18:42:37] <gulzar> ChrisWarrick: there is not other url :(   or I am mising something  .  It's just cgi submission
[18:42:51] <ChrisWarrick> gulzar: I don’t understand?
[18:43:00] <ChrisWarrick> gulzar: /TSpred_cgi/TS_main.py is the path it posts to
[18:43:02] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[18:43:04] <BtbN> The weird thing is, it's not even gcc complaining about the header. But some numpy internal setup.py script
[18:43:26] *** Quits: dvyd (~dvyd@2a0d:6fc2:47b0:1800:b587:3b73:7799:4284) (Quit: Client closed)
[18:43:32] *** Quits: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 240 seconds)
[18:43:39] <Wulf> BtbN: perhaps numpy does something special which won't work with pyenv. Tried compiling an easier package?
[18:43:52] <BtbN> This literally worked not even two weeks ago
[18:44:00] <BtbN> Nothing on my end changed. Not even the numpy version.
[18:44:02] <BtbN> Hence my confusion
[18:44:28] <gulzar> ChrisWarrick: yes, that's not a url, its a cgi script
[18:44:30] <Wulf> BtbN: can you post the full output of your build process?
[18:44:34] <ChrisWarrick> gulzar: that is a URL
[18:45:04] <BtbN> https://bpa.st/HSHQ
[18:45:07] <BtbN> it doesn't even get to building
[18:46:22] *** Joins: BlueSky (~BlueSky@user/bluesky)
[18:46:24] <gulzar> ChrisWarrick: how to pass data to a cgi-script ? I tried http://cospi.iiserpune.ac.in/TSpred_cgi/TS_main.py in browserr, it says no inpput
[18:46:28] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[18:46:41] <ChrisWarrick> gulzar: try sending a POST request with requests to that URL
[18:46:47] <ChrisWarrick> gulzar: also, there is nothing special about CGI scripts
[18:46:54] *** Joins: Colt (~Colt@user/colt)
[18:47:26] *** Joins: ice9 (~ice9@user/ice9)
[18:47:41] <Wulf> BtbN: does it work with other python versions, e.g. recent cpython?
[18:47:52] <BtbN> Yeah
[18:48:12] <BtbN> Mostly because it'd just fetch a wheel there. But also forcing it to build works just fine
[18:48:55] <Wulf> BtbN: I assume you're trying to build a docker container. Can you finish the Dockerfile before that numpy installation and investigate if there is a Python.h?
[18:49:13] <gulzar> ChrisWarrick: will try
[18:49:23] <BtbN> Wulf, I did. Python.h is right where I'd expect it.
[18:49:28] *** Joins: buzzard (~quassel@23.19.141.120)
[18:49:49] *** Quits: buzzard (~quassel@23.19.141.120) (Client Quit)
[18:49:53] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[18:50:17] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 240 seconds)
[18:50:19] *** Joins: Colt (~Colt@user/colt)
[18:50:37] <BtbN> And if I dump the python include paths, it also shows the curret path where it resides
[18:51:24] <badsektor> i am solving adventofcode in C, not because i am a masochist, but because i dont know any python or anything else other than c
[18:51:28] <BtbN> it'd seem like something broke try_compile(). And I can't even tell where try_compile comes from. numpy does not define it
[18:52:11] <BtbN> Like, it's this function, called with "Python.h", that's failing: https://github.com/numpy/numpy/blob/623bc1fae1d47df24e7f1e29321d0c0ba2771ce0/numpy/distutils/command/config.py#L167
[18:54:21] *** Joins: Betal (~Betal@user/betal)
[18:55:54] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[18:56:04] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[18:56:30] *** Joins: Colt (~Colt@user/colt)
[18:56:35] *** Joins: arinov (~arinov@213.194.126.155)
[18:57:55] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[18:57:59] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:58:34] *** Joins: By3way (~byeway@2001:448a:50e0:8c8a:5de9:9ff3:594a:6dfa)
[18:59:59] <BtbN> Wulf, seems like a recent setuptools update broke this. Downgrading to setuptools<60 fixes the build.
[19:00:41] <aniketgm> hi
[19:00:48] <aniketgm> gule gulzar...
[19:02:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[19:02:26] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 252 seconds)
[19:02:41] *** Joins: jamea (~jamea@177.239.81.39)
[19:02:43] <jamea> hi all
[19:03:06] <jamea> any advice/guide for connect to sql server  with python ?
[19:03:07] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[19:03:08] <aniketgm> gulzar: Khabar sabko this mere kacche makaan ki, phir bhi logo ne duvaao me barsaat maangi. -- Gulzar
[19:03:29] *** Joins: Rum (~bourbon@user/rum)
[19:03:33] *** Quits: ultera (~ultera@ec2-18-118-193-22.us-east-2.compute.amazonaws.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[19:03:47] *** Joins: fikran (~fikran@user/fikran)
[19:03:57] *** Quits: badsektor (~badsektor@user/badsektor) (Remote host closed the connection)
[19:04:13] <ChrisWarrick> jamea: sql server as in microsoft? google "python mssql" and review the libraries you find
[19:04:19] *** Joins: Forsaken87 (~quassel@ip-109-43-115-176.web.vodafone.de)
[19:04:25] *** Quits: By3way (~byeway@2001:448a:50e0:8c8a:5de9:9ff3:594a:6dfa) (Quit: Leaving)
[19:04:26] *** Joins: ultera (~ultera@ec2-18-118-193-22.us-east-2.compute.amazonaws.com)
[19:05:06] <aniketgm> jamea: check 'pyodbc'
[19:05:06] *** Joins: Colt (~Colt@user/colt)
[19:05:37] <gulzar> aniketgm: hey
[19:05:50] <gulzar> aniketgm: wah, wah
[19:05:56] *** Quits: Colt (~Colt@user/colt) (Read error: Connection reset by peer)
[19:06:22] <gulzar> the reality of today's world and relations
[19:06:54] <gulzar> jamea: there are mysql, postgesql connectors too use with python
[19:08:32] *** Quits: chuck_ (~shuck@user/shuck) (Read error: Connection reset by peer)
[19:08:33] <aniketgm> gulzar: so true..
[19:09:12] <jamea> thanks
[19:09:39] <gulzar> aniketgm:  इन अँधेरों से ही सूरज कभी निकलेगा 'नज़ीर',    रात के साए ज़रा और निखर जाने दे
[19:09:44] <jamea> https://paste.debian.net/1224813/  i try and try install pyodbc   and of course installed Microsoft C++ Build Tools  official web.. restarted pc and continue the error any advice?
[19:10:27] <aniketgm> gulzar: bohot khoob!!
[19:10:40] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[19:10:59] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Read error: Connection reset by peer)
[19:11:16] <gulzar> jamea: you need to ugrade visual c++ version
[19:11:43] <aniketgm> jamea: the error contains the solution too.
[19:11:48] <aniketgm> error: Microsoft Visual C++ 14.0 or greater is required. Get it with "Microsoft C++ Build Tools": https://visualstudio.microsoft.com/visual-cpp-build-tools/
[19:12:03] <gulzar> jamea: the link is given in the errro code to get the latest version
[19:12:07] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Quit: Client closed)
[19:12:47] <jamea> yes
[19:12:53] <jamea> install and install
[19:13:05] <jamea> not fixed... (i try so so 6 times download and isntall)
[19:13:40] <gulzar> jamea: lower the version of pyodbc . Try creating a venv or conda env with older versions
[19:14:24] <jamea> pip install pyodbc
[19:14:30] <jamea> how to ispecify the version?
[19:17:06] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: restarting client)
[19:17:37] *** Quits: Forsaken87 (~quassel@ip-109-43-115-176.web.vodafone.de) (Ping timeout: 240 seconds)
[19:17:40] *** Quits: twofingersneat (~twofinger@174-080-036-228.res.spectrum.com) (Read error: Connection reset by peer)
[19:17:55] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[19:18:05] <aniketgm> jamea: i'm sure the answer to that question is just a google search away. however, you specify with 'package_name==version#'. so here pyodbc==version#.
[19:18:12] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Lost terminal)
[19:18:25] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[19:18:50] <aniketgm> but that won't solve the problem. goto https://visualstudio.microsoft.com/visual-cpp-build-tools/ and setup the build tool
[19:18:56] *** Joins: bindu (~bindu@user/bindu)
[19:19:40] *** Joins: By3way (~byeway@2001:448a:50e0:8c8a:5de9:9ff3:594a:6dfa)
[19:20:12] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[19:20:24] <aniketgm> gulzar: कौन कहता हैं कि हम झूठ नहीं बोलते, एक बार खैरियत तो पूछ के देखियें।
[19:21:07] <aniketgm> gulzar: aapka naam gulzar hai, ya just an irc name ?
[19:21:14] *** Joins: agonhajdari (~textual@user/agonhajdari)
[19:22:34] *** Quits: ethrl (~ethereal@user/doforlove33) (Ping timeout: 268 seconds)
[19:23:11] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 268 seconds)
[19:24:29] *** Joins: Forsaken87 (~quassel@ip-109-43-115-176.web.vodafone.de)
[19:24:46] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[19:24:54] <jamea> again same error
[19:25:17] *** Joins: ethrl (~ethereal@user/doforlove33)
[19:27:49] *** Joins: georgios (~georgios@user/georgios)
[19:28:00] *** Joins: goepsilongo (~goepsilon@2806:263:c404:8000:ec3a:2574:2f9:e2db)
[19:28:45] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-61d5-221b-08ad-1848.res6.spectrum.com)
[19:29:21] *** Quits: Forsaken87 (~quassel@ip-109-43-115-176.web.vodafone.de) (Ping timeout: 268 seconds)
[19:29:23] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[19:29:23] *** Joins: kosh (~kosh@user/kosh)
[19:31:53] *** Joins: atrigent (~atrigent@c-73-69-68-26.hsd1.ma.comcast.net)
[19:34:09] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[19:34:56] <nedbat> bjs: thanks. I'll puzzle through it later today
[19:34:58] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[19:36:02] *** Joins: ano (~ano@user/ano)
[19:37:56] *** Joins: Naan (~naan@user/naan)
[19:38:30] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[19:39:07] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[19:43:16] *** Quits: Rum (~bourbon@user/rum) (Quit: WeeChat 3.4)
[19:44:04] <jamea> aniketgm: "Try installing using pip install pyodbc If you are unable to install or getting cl.exe error, then you could change import pyodbc to import pypyodbc" try: pip install pypyodbc
[19:44:09] *** Quits: By3way (~byeway@2001:448a:50e0:8c8a:5de9:9ff3:594a:6dfa) (Quit: Leaving)
[19:44:14] <jamea> now i installed: pip install pypyodbc
[19:46:07] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[19:46:55] *** Joins: Liexei (~Liexei@user/liexei)
[19:49:19] *** Quits: gulzar (~gulzar@123.201.116.72) (Ping timeout: 256 seconds)
[19:49:21] <dob1> if the libraries you are going to use are available on the system is preferabble to use them instead of virtualenv ?
[19:50:43] *** Joins: gulzar (~gulzar@123.201.100.198)
[19:51:16] <gulzar> aniketgm:  दीवार क्या गिरी मिरे ख़स्ता मकान की , लोगों ने मेरे सेहन में रस्ते बना लिए
[19:51:28] <gulzar> aniketgm: hope we don't get blocked here
[19:51:33] <ChrisWarrick> dob1: not really
[19:51:36] *** Quits: gulzar (~gulzar@123.201.100.198) (Client Quit)
[19:51:51] *** Joins: gulzar (~gulzar@123.201.100.198)
[19:51:53] <ChrisWarrick> dob1: venvs help separate different projects with different dependency versions required
[19:51:55] <montpol> How can I make the I quadrature of a gaussian pulse that samples every 50ns?
[19:52:10] <ChrisWarrick> dob1: your system may have a version of the library that’s too old for your needs
[19:52:51] <dob1> ChrisWarrick, ok I was thinking this too, but you have the advantage that they are updated by the system (security updates at least)
[19:53:12] <ChrisWarrick> dob1: that depends on your system, and such updates might break your code at random
[19:53:13] <grym> dob1: why is that an advantage
[19:53:32] <jamea> now: Successfully installed pyodbc-4.0.32
[19:53:52] <grym> (over venv/bin/pip install --upgrade, or similar)
[19:54:21] <dob1> grym, if you have several projects on a system a dist-upgrade will fix a security problem for all of them, instead with virtualenv you have to go project by project to do this, correct me if I am wrong
[19:56:10] *** Joins: arinov (~arinov@213.194.126.155)
[19:57:39] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[19:57:50] <aniketgm> gulzar: no we won't. we are not spamming. and helping is first before anything else. so a little bit the Great Gulzar is no issues.
[19:57:55] <ChrisWarrick> dob1: it might be slightly faster, or it might completely break your code with no easy way to undo
[19:59:10] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Remote host closed the connection)
[19:59:14] *** Quits: aniketgm (~Aniket@49.36.107.251) (Read error: No route to host)
[19:59:30] <dob1> ChrisWarrick, you right.  there are pro and cons imho
[19:59:30] *** Joins: pepper (~pepper@user/pepper)
[19:59:53] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:00:31] <ChrisWarrick> dob1: I can't see many pros of that
[20:00:35] *** Joins: aniketgm (~Aniket@49.36.107.251)
[20:00:49] *** Joins: zer0bitz_ (~zer0bitz@185.112.82.230)
[20:01:11] <gulzar> ChrisWarrick: that trick worked. It gave me https://paste.debian.net/1224818/  , now i need to get this url, extract data
[20:02:11] <dob1> ChrisWarrick, for example consider a service with cherrypi, you have to check if there are cherrypi cve and you need to upgrade it. if you use a system libs of cherrypi the maintainer of the package will do it for you
[20:02:13] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 250 seconds)
[20:03:24] <dob1> it will be an old version, this is the cons and you get slow updates to new version
[20:03:50] *** Quits: zer0bitz (~zer0bitz@196.244.192.57) (Ping timeout: 260 seconds)
[20:03:52] *** Joins: By3way (~byeway@36.84.39.219)
[20:03:55] <ChrisWarrick> dob1: there are services that notify about outdated stuff in requirements.txt, eg. githubs dependabot
[20:04:03] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[20:04:48] <dob1> ChrisWarrick, I take a look, I didn't know it
[20:05:40] <bjs> nedbat: here's a much nicer and better way to do it I think https://bpa.st/D35Q
[20:06:14] <bjs> also {expr=} is really nice.
[20:06:15] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[20:07:35] *** Joins: ano (~ano@user/ano)
[20:07:38] <bjs> My linear algebra has failed me to not spot that `T @ P = Q` can be re-written as `P.T @ T.T = Q`
[20:07:55] *** Joins: Colt (~Colt@user/colt)
[20:08:33] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.4)
[20:08:50] <bjs> Q.T *
[20:09:09] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[20:09:24] *** Quits: By3way (~byeway@36.84.39.219) (Quit: Lost terminal)
[20:09:49] <bjs> and doing that transformation means the problem is magically in the right shape for np.linalg.solve
[20:10:25] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:11:02] *** Quits: holgersson (~quassel@user/holgersson) (Quit: “Format C:........[Done]“)
[20:11:26] <gulzar> ChrisWarrick: thank you
[20:11:40] <Wulf> bjs: did you see my solution?
[20:12:35] *** Joins: ice9 (~ice9@user/ice9)
[20:12:55] *** Joins: plastico (~plastico@neomutt/plastico)
[20:12:56] *** Joins: pingpongball (~pingpongb@user/pingpongball)
[20:13:29] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[20:14:54] <bjs> Wulf: no, what did you do
[20:15:02] *** Joins: agonhajdari (~textual@user/agonhajdari)
[20:15:58] <Wulf> bjs: https://bpa.st/L5XQ  but not sure which one fits the problem better
[20:17:36] *** Joins: nos0u1 (nosoul@gateway/vpn/protonvpn/nosoul)
[20:19:04] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[20:19:11] *** Quits: ice9 (~ice9@user/ice9) (Read error: Connection reset by peer)
[20:19:57] *** Quits: Oco[A]de (~OCode@user/Ocode) (Ping timeout: 240 seconds)
[20:21:25] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[20:21:49] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[20:22:46] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[20:24:45] *** Joins: Auron (Auron956@user/auron)
[20:24:48] *** Joins: maplefinger (~maplefing@user/lindis)
[20:26:14] *** Joins: rsx (~dummy@ppp-188-174-151-184.dynamic.mnet-online.de)
[20:27:21] *** Joins: holgersson (~quassel@user/holgersson)
[20:27:37] *** Quits: the_lanetly_052 (~the_lanet@194.135.152.13) (Ping timeout: 240 seconds)
[20:28:13] *** Joins: ice9 (~ice9@user/ice9)
[20:28:18] *** Quits: ice9 (~ice9@user/ice9) (Client Quit)
[20:28:45] *** Joins: ice9 (~ice9@user/ice9)
[20:28:48] *** Quits: ice9 (~ice9@user/ice9) (Remote host closed the connection)
[20:29:15] <jamea> python --version   give me: 2.7.13
[20:29:32] <jamea> is possible upgrade or better remove and reinstall new version 3.10 ?
[20:30:37] *** Quits: rjwiii (~mr-rich@idlerpg/player/mr-rich) (Ping timeout: 240 seconds)
[20:30:49] <bjs> Wulf: hmm,  not sure if/how yours represents translations
[20:32:26] *** Quits: miique (~miique@181.46.139.166) (Read error: Connection reset by peer)
[20:33:20] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Read error: Connection reset by peer)
[20:33:48] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[20:34:38] *** Quits: ethrl (~ethereal@user/doforlove33) (Ping timeout: 260 seconds)
[20:36:01] <nedbat> bjs: thanks, this will go into the pile :)
[20:36:12] <bjs> nedbat: linear algebra is fun :D
[20:36:17] <bjs> and i'm clearly very rusty
[20:36:32] *** Quits: nomic (~nomic@185.217.117.90) (Remote host closed the connection)
[20:36:56] <vitali64> #Python-doesnt-suck
[20:37:54] <bjs> vitali64: okay
[20:39:20] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[20:40:11] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[20:40:16] *** Quits: lalitmee_ (~lalitmee@180.94.33.150) (Ping timeout: 268 seconds)
[20:40:27] *** Quits: maplefinger (~maplefing@user/lindis) (Ping timeout: 276 seconds)
[20:40:51] *** Joins: maplefinger (~maplefing@user/lindis)
[20:42:17] *** Quits: akk (~akk@174-28-122-47.albq.qwest.net) (Ping timeout: 240 seconds)
[20:43:01] *** Quits: alzgh (alzgh@user/alzgh) (Ping timeout: 256 seconds)
[20:43:04] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2d3b-cffd-943a-eda6.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:44:35] *** Joins: ano (~ano@user/ano)
[20:45:05] *** Joins: nomic (~nomic@185.217.117.90)
[20:45:32] *** Quits: shabius (~shabius@2a0e:1c80:1:1042::1009) (Quit: Leaving)
[20:45:41] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Quit: ThePhilgrim)
[20:45:49] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 268 seconds)
[20:45:56] *** Joins: ntome (~ntome@user/ntome)
[20:46:02] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[20:46:09] *** Quits: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com) (Client Quit)
[20:46:17] <ntome> is there a way to detect EOF on stdin with (asyncio) loop.add_reader?
[20:46:28] *** Joins: ThePhilgrim (~ThePhilgr@81-229-131-166-no257.tbcn.telia.com)
[20:46:33] <jamea> python --version   give me: 2.7.13  is possible upgrade or better remove and reinstall new version 3.10 ?
[20:46:48] <gulzar> jamea: whats python3
[20:47:12] *** Joins: alzgh (alzgh@user/alzgh)
[20:47:49] <gulzar> python3 --version
[20:49:24] <jamea> python3 --version    Python 3.5.3
[20:50:23] <jamea> is possible upgrade to 3.10 ?
[20:51:19] <dba> jamea, you need to downgrade not upgrade. and yes it is possible
[20:51:50] <jamea> downgrade?
[20:51:52] *** Quits: aniketgm (~Aniket@49.36.107.251) (Read error: No route to host)
[20:53:26] <ChrisWarrick> jamea: you could install another python version with pyenv (also, consider upgrading your OS first)
[20:53:37] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[20:54:48] *** Quits: upsala (~zcb@185.209.196.169) (Quit: WeeChat 3.4)
[20:55:20] <Peng> jamea: Didn't you install 3.10.1 two days ago?
[20:55:42] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 268 seconds)
[20:55:58] *** Joins: Enitin (~Enitin@82.102.22.86)
[20:57:01] *** Joins: aniketgm (~Aniket@49.36.107.251)
[21:00:00] *** Joins: BlueSky_ (~BlueSky@user/bluesky)
[21:00:05] *** Quits: dharrigan (~dharrigan@user/dharrigan) (Quit: ZNC - https://znc.in)
[21:01:04] <jamea> Peng yes on my windows.... i need have same versions here and in linux server production
[21:01:27] *** Joins: dharrigan (~dharrigan@user/dharrigan)
[21:02:25] *** Quits: BlueSky (~BlueSky@user/bluesky) (Ping timeout: 256 seconds)
[21:02:34] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2d3b-cffd-943a-eda6.res6.spectrum.com)
[21:05:49] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 256 seconds)
[21:06:01] *** Joins: rajkosto (~rajkosto@79-101-216-201.dynamic.isp.telekom.rs)
[21:07:04] *** Joins: bloody (~bloody@user/bloody)
[21:08:21] <jamea> -bash: pyenv: command not found
[21:08:38] <ChrisWarrick> jamea: you need to install it first
[21:09:13] *** Quits: Mattiaslndstrm (~Mattiasln@c-73a0225c.018-449-6e6b701.bbcust.telenor.se) (Ping timeout: 256 seconds)
[21:09:57] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[21:10:25] *** Joins: Mattiaslndstrm (~Mattiasln@c-73a0225c.018-449-6e6b701.bbcust.telenor.se)
[21:10:59] <jamea> -bash: pip3: command not found also -bash: pip: command not found
[21:11:15] *** Quits: pingpongball (~pingpongb@user/pingpongball) (Quit: Client closed)
[21:11:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[21:11:39] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[21:11:53] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[21:13:08] *** Joins: fikran (~fikran@user/fikran)
[21:13:34] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 268 seconds)
[21:13:53] *** Joins: ano (~ano@user/ano)
[21:14:05] <ChrisWarrick> jamea: https://github.com/pyenv/pyenv#installation
[21:15:23] *** Joins: saunders (~nicholas@172.103.152.184)
[21:17:48] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[21:19:06] *** Joins: lethu (~lethu@user/lethu)
[21:20:11] *** Joins: DaNeenjah (~jake@adsl-74-230-9-185.hsv.bellsouth.net)
[21:20:34] *** Joins: Deana (~aidelon@2a01:540:6f06:9700:11e8:a40f:6b9b:ade1)
[21:20:40] <gitesh> I'm doing opencv . I'm converting png image to grayscale image but it's not finding faces
[21:23:34] *** Quits: gulzar (~gulzar@123.201.100.198) (Quit: Konversation terminated!)
[21:24:26] <aphysically> nedbat: I did all 25 days and saved christmas
[21:24:47] <aphysically> but it's a bit bittersweet, because it means I'm gonna drill down now for applying to jobs
[21:25:38] *** Quits: Deana (~aidelon@2a01:540:6f06:9700:11e8:a40f:6b9b:ade1) (Quit: Konversation terminated!)
[21:27:40] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[21:28:17] *** Quits: zer0bitz_ (~zer0bitz@185.112.82.230) (Ping timeout: 240 seconds)
[21:28:34] *** Joins: zer0bitz (~zer0bitz@196.244.192.56)
[21:28:35] *** Joins: brabrax (~brabrax@user/brabrax)
[21:28:45] <jamea> curl https://pyenv.run | bash   installed then   exec $SHELL
[21:28:52] <jamea> now: pyenv update
[21:28:58] <jamea> pyenv command not found
[21:29:17] <bjs> gitesh: finding faces? what does that have to do with "convert to grayscale"
[21:29:36] <petaflot> maybe someone has a explanation why https://bpa.st/IP7Q doesn't show anything about the interruption raised at lines 31 (6) ?
[21:29:53] <bjs> petaflot: can I make a special request?  stop using tabs :P
[21:30:07] *** Quits: brabrax (~brabrax@user/brabrax) (Client Quit)
[21:30:31] <gitesh> bjs: convert to grayscale for better results
[21:30:54] <bjs> gitesh: you mean, the conversion works fine but your opencv code that "detects faces" stops working?
[21:31:02] *** Joins: brabrax (~brabrax@user/brabrax)
[21:31:16] <gitesh> bjs: it's working just not detecting faces
[21:31:20] <gitesh> Accurate
[21:31:33] <petaflot> bjs: maybe you have a decent vim config to suggest so that spaces are not such a pain? ad a config that allows me to `:set ts=2` when I have a many, many levels of indentation? or I can suggest `%s/\ \ \ \ \ \ \ /<whatever>/g`
[21:31:58] <bjs> petaflot: I'm a little confused,  why do you expect the `raise SystemExit` to run at all?
[21:32:10] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[21:32:20] <ChrisWarrick> petaflot: what makes spaces a pain to you?
[21:32:38] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[21:32:49] <petaflot> bjs: forget lines 27 and 33, they are not relevant here.
[21:32:50] *** Quits: pepper (~pepper@user/pepper) (Quit: Leaving)
[21:32:53] <bjs> petaflot: for very good reasons the pastebin sites do not auto-convert tabs
[21:33:06] <petaflot> ChrisWarrick: because I am no vim master
[21:33:19] <ChrisWarrick> petaflot: be more specific?
[21:33:55] <bjs> petaflot: but still,  I'm not sure what you're asking about this code.  The `raise SystemExit` line doesn't look like it should be executed at all
[21:34:17] <bjs> petaflot: oh okay, what "interruption" then?
[21:34:25] <bjs> line 31 is just creating a task
[21:34:27] <petaflot> ChrisWarrick: when using tabs, navigation is easy when in the "preceding space" range. when using spaces, I need to press 4 times as many times on "left" or "right" to get where I want to be
[21:34:40] <bjs> petaflot: have you ever pressed the 'w' key in vim? :P
[21:35:18] <petaflot> bjs: oh yes I have. but not suitable to "browse" through indents
[21:35:52] *** Joins: cthulchu (~Cthulchu@184-090-172-137.res.spectrum.com)
[21:36:03] <ChrisWarrick> petaflot: perhaps what you really want is to go to the start of the line (^)
[21:36:07] *** Joins: azzazzel (~qwerty@2804:c30:c24d:f101:3b07:beff:afc7:2ff4)
[21:36:14] <ntome> maybe this tabs vs spaces debate is off-topic
[21:36:42] <petaflot> 'w' will get be to the start of next word. 'arrow_right' will get me to the start if the next char ; if it's a tab, it's the equivalent of pressing "arrow_right" 4 times in a row for the pep8 equivalent in spaces.
[21:36:48] <bjs> ARORWS?
[21:37:02] <bjs> oh my
[21:37:38] <petaflot> ntome: thank you. I disagree with part of PEP-8 for some reasons and I'm not here to debate it.
[21:37:50] <bjs> petaflot: anyway, I'll just say that 4-spaces-per-indent is *the* standard in Python, and back when I used vim I didn't really have any problems so you'll have to figure that out or just accept that your code is going to look a bit weird to read for Python programmers
[21:38:18] <petaflot> bjs: yes they are part of the keyboard. and I could use other keys to achieve the same result. you have a better suggestion? be my guest.
[21:39:43] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2d3b-cffd-943a-eda6.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:39:53] <bluss> petaflot: the nice vim spaces config is to never change ts and just set et sts=4 sw=4  " and it works well. Just in case it wasn't answered.
[21:40:32] <petaflot> bjs: I cat my program to the term (cat replaces tabs with 8 spaces) so I can copy and paste it. this is just ot the question
[21:40:54] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[21:41:26] <bjs> Yes had you replaced tabs with 4 spaces instead of 8 I wouldn't have noticed at all,  I'm not sure what the point is.
[21:41:33] <bjs> petaflot: anyway,  what about my question about your question about your code?
[21:41:57] *** Quits: waveclaw_ (~quassel@ip98-162-237-241.ok.ok.cox.net) (Ping timeout: 268 seconds)
[21:42:38] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[21:42:53] <petaflot> bluss: thank you. someting that might help me get rid of these nuisances
[21:43:11] *** Quits: stockholm (~Andreas@p200300d2c73a4100098fa5cc81c28e2d.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:43:23] *** Joins: stockholm (~Andreas@p200300d2c73a4100098fa5cc81c28e2d.dip0.t-ipconnect.de)
[21:44:07] <petaflot> bjs: EOFError raised on line 6 through raiseException() called on line 13 should display "Oops (I expect an exception here): EOFError" instead of just "Oops (I expect an exception here):""
[21:44:18] <petaflot> on line 15
[21:44:27] *** Parts: jmd (~user@de.cellform.com) (ERC (IRC client for Emacs 27.1))
[21:44:33] <bjs> petaflot: but you have a try/except that catches it
[21:45:00] <petaflot> bjs on which line?
[21:45:12] <bjs> petaflot: 11 and 14?
[21:45:30] <petaflot> bjs: yes that's the point
[21:45:43] <bjs> petaflot: what is the point? I'm confused
[21:46:12] <petaflot> all I get is "Oops (I expect an exception here):" and there is nothing else added to the line.. is. 'e' is empty
[21:46:14] *** Quits: raek (~raek@37.250.253.86.bredband.tre.se) (Quit: raek)
[21:46:23] <petaflot> ^is.^ie.
[21:46:39] <bjs> petaflot: yes
[21:46:43] <bjs> EOFError has no messsage
[21:47:13] <bjs> try `raise EOFError("some message here")` (or print the `repr(e)`)
[21:47:55] *** Joins: raek (~raek@37.250.253.86.bredband.tre.se)
[21:48:05] <bjs> but either way, the EOFError is being catched by the try/except inside _some_func, so _some_func isn't propagating it outside of the function
[21:48:14] <bjs> but even if it was, line 31 (the create_task) wouldn't catch it
[21:48:44] <petaflot> bjs: oh.... so that's the way it goes. I somewhat see clearer but I'm still confused
[21:48:51] <bjs> petaflot: what part is confusing you?
[21:48:59] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[21:49:10] <petaflot> how an exception gets translation to an "exception message"
[21:49:11] *** Joins: Lukky (~Lukky@modemcable248.39-20-96.mc.videotron.ca)
[21:49:15] <bjs> You `raise EOFError`, inside a try ... except Exception:` which catches it.
[21:49:17] <petaflot> ^tion^ted
[21:49:32] <bjs> petaflot: translated?  no, print(some_exception_object) prints out the exceptions message
[21:49:49] <petaflot> "except Exception as e:".... so I expect 'e' to be EOFError if I raise EOFError
[21:49:56] <bjs> petaflot: it was
[21:50:06] <bjs> print(EOFError())  # this line is blank
[21:50:08] <petaflot> now I see my mistake with the print and repr()
[21:50:23] <bjs> print(ValueError("foo bar")) # prints "foo bar"
[21:51:20] <petaflot> each showing a different |side of,viewpoint on| the same object ;-)
[21:53:21] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[21:54:40] <petaflot> ... I may be askig too much, but having a default string for exceptions might be of help?
[21:55:28] <bjs> not really
[21:56:32] <bjs> petaflot: I mean your code *did* print out the Oops I expect an exception line, so it clearly caught something.  Would it really have helped if there some was some default random string on the end as well?
[21:56:58] *** Joins: medium_cool (~medium_co@136.36.128.48)
[21:57:29] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[21:58:05] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:58:22] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[21:59:25] <petaflot> bjs: because in real life my code crashes and I would like to know where/how.
[21:59:42] <bjs> petaflot: well, you're literally catching and hiding the thing that tells you where/how :P
[21:59:55] <petaflot> bjs: although, in tis light I don't understand how I get https://bpa.st/GOCQ (always the same output)
[22:00:19] <jinsun> you should print the entire traceback with traceback.print_exc (or just don't catch the exception to just print it)
[22:00:27] <bjs> there *is* a default mechanism to show that information,  and there are also ways to produce the same output from within Python (the traceback module);  you're just doing it wrong and there's no universal defence against that
[22:00:41] <bjs> petaflot: `raise Exception` creates an instance of the exception.
[22:00:44] <bjs> (with no message)
[22:01:14] <petaflot> bjs I totally believe you whe you say I'm doing it wrong
[22:01:41] <bjs> then, you catch it, and print out the (non-existent) message (because you created it using the "I dont want a message" variant) and got no message.  The culprit here isn't the lack of message in the no-message-please variation of `raise` it's really print() being a terrible debugging tool
[22:02:01] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 250 seconds)
[22:02:03] <bjs> print very often is lossy. see print(5) vs print("5")
[22:02:29] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 256 seconds)
[22:02:45] <petaflot> print() is indeed terrible but when you get no exceptions printed it's the last resort. remember I come from the uC and ASM world....
[22:02:51] <bjs> so if you're printing things (or logging things) you should apply a judicial use of !r and repr
[22:02:54] *** Joins: Enitin (~Enitin@82.102.22.84)
[22:03:13] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[22:03:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[22:03:50] <bjs> if it's for a human programmer to read.
[22:04:01] <bjs> (and I personally always thought print() should *default* to repr...)
[22:04:03] *** Quits: alzgh (alzgh@user/alzgh) (Ping timeout: 256 seconds)
[22:04:11] <bjs> sadly it does not, so whatever
[22:04:11] *** Quits: saunders (~nicholas@172.103.152.184) (Ping timeout: 256 seconds)
[22:05:09] <bjs> petaflot: btw print(f"Oops I got an exception: {e!r}")  is probably the nicest/easiest way to write that debugging line
[22:05:19] <petaflot> bjs: hehe... "sadly" we don't all have the same opinion on things ;-)
[22:05:19] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[22:05:37] *** Quits: zepolen (~zepolen@ppp-94-66-223-200.home.otenet.gr) (Ping timeout: 240 seconds)
[22:05:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:05:50] <petaflot> bjs: I will try this in my actual code....
[22:06:03] *** Joins: zepolen (~zepolen@2a02:1388:2096:52af:5a5:477:a137:ce70)
[22:06:06] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[22:06:17] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[22:06:18] <bjs> petaflot: well, the number of times confusion has been caused because of print-printing-the-str rather than the repr
[22:07:11] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Client Quit)
[22:07:15] *** Joins: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net)
[22:07:34] <petaflot> bjs: somewhat reminds me of the number of times confusion has been caused before python3 when "foo" and b"foo" were not noticably distinct things
[22:07:39] <bjs> or maybe there should be a builtin log() or debug() call that looks like print but goes to stderr and uses repr by default
[22:07:51] <bjs> petaflot: you mean, they were the same things.
[22:08:04] <bjs> Yes
[22:08:22] *** Joins: alzgh (alzgh@user/alzgh)
[22:08:33] <hexnewbie> petaflot: try: ...; except SomeException: traceback.print_exc()
[22:08:54] <petaflot> bjs: yes they "were the same thing" when in fact they were not. I had trouble sleeping while I was waiting for python3 to come out for this reason!
[22:09:07] <hexnewbie> My only issue with exceptions is that there isn't something builtin to give you '{}: {}'.format(type(exc).__name__, exc) if you don't want the whole traceback
[22:09:17] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[22:09:33] <bjs> petaflot: in python2 they were the same thing
[22:09:50] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Client Quit)
[22:10:28] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[22:11:10] * petaflot spent more hours - no, days! -- no, months! -- - that he dares count because of this "<python3 colorBlindnessToStringsAndBytes"
[22:11:32] *** Joins: Enitin (~Enitin@82.102.22.84)
[22:12:41] *** Joins: lethu (~lethu@user/lethu)
[22:13:05] *** Joins: yusraDev (~yusraDev@37.17.135.86)
[22:13:15] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[22:13:22] *** Joins: audiobirb (~audio@user/audio)
[22:13:23] *** Quits: rajkosto (~rajkosto@79-101-216-201.dynamic.isp.telekom.rs) (Ping timeout: 268 seconds)
[22:13:28] <petaflot> bjs: they "were" the same thing because some programmers never really made a difference between them until some other programmers realized it was crucial to make the difference
[22:14:16] *** Quits: aniketgm (~Aniket@49.36.107.251) (Quit: leaving)
[22:14:20] *** Joins: redrum88 (~redrum88@user/redrum88)
[22:14:29] <bjs> petaflot: no in Python 2 b"abc" and "abc" really were *the same thing*
[22:14:43] <bjs> Python literally saw the b"" and went (let me ignore that b and continue as if it's not there)
[22:14:45] *** Quits: redrum88 (~redrum88@user/redrum88) (Client Quit)
[22:15:08] *** Joins: redrum88 (~redrum88@user/redrum88)
[22:15:32] <petaflot> bjs: yeah that's what I'm saying. but IRL the are _not_ the same thing. you should read isbn://9782070307050
[22:15:44] <bjs> petaflot: https://docs.python.org/2/reference/lexical_analysis.html#literals  "A prefix of 'b' or 'B' is ignored in Python 2"
[22:16:00] <bjs> not sure what you mean by "IRL", in Python 2 *they were exactly the same thing*, Python 2 literally ignored the b
[22:16:17] <hexnewbie> Next up: The difference between 2.0 and 1.9999...
[22:16:28] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Ping timeout: 268 seconds)
[22:16:28] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[22:16:35] *** Joins: pepper (~pepper@user/pepper)
[22:16:46] <bjs> there is no sense that before Python 3, "abc" and b"abc" were different. Maybe you're thinking of "abc" and u"abc" in Python 2, where the text type was unicode not str
[22:17:07] *** Joins: rajkosto (~rajkosto@93-87-176-118.dynamic.isp.telekom.rs)
[22:17:28] <petaflot> IRL as "in real life"? we definitely do know now that b"" is not the same as "" because the former is just a string-of-bytes while the latter has been encoded somehow
[22:17:42] *** Quits: Titore (~Titore@user/titore) (Ping timeout: 268 seconds)
[22:17:49] <yusraDev> Hello guys, my question is about Django, Does django-allauth library support rest framework?
[22:17:52] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[22:17:57] <bjs> petaflot: no they are the same thing in Python 2.  Python literally ignored the b
[22:18:34] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:18:36] <petaflot> yes because somehow python2 was "colorblind"
[22:18:39] <bjs> what?
[22:18:42] <bjs> petaflot: no
[22:19:05] <bjs> because in Python 2 the text type was called unicode and you wrote them with u"strings"
[22:19:17] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[22:19:19] <bjs> u"strings" (text) were different from "strs" and b"strings" (bytes)
[22:19:29] <petaflot> was it u8 or u16 then?
[22:19:35] <bjs> petaflot: what?
[22:19:42] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[22:19:48] *** Quits: Lukky (~Lukky@modemcable248.39-20-96.mc.videotron.ca) (Ping timeout: 240 seconds)
[22:20:05] <petaflot> unicode exists in at least 8-bit and 16-bit variants
[22:20:54] <petaflot> bjs: can I ask where you are from, geographically (or linguistally)?
[22:21:02] <BrenBarn> those are unicode encodings, which would be byte strings
[22:21:09] <bjs> petaflot: I don't know how to say this harder,  in Python 2. b"" and normal "" strings were *the same thing*, and they were both bytes. No unicode here. The source .py file may have been encoded in some format of course, but that encoding doesn't change what characters the lexer/parser would parse
[22:21:43] *** Quits: BlueSky_ (~BlueSky@user/bluesky) (Quit: Leaving)
[22:22:15] <petaflot> bjs: so what you're saying is that there was really no point in introducing this backawards-incompatible change?
[22:22:18] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[22:22:38] <bjs> petaflot: no there was a point, the point was that default type (str) was not text, it was bytes.
[22:22:38] *** Quits: rajkosto (~rajkosto@93-87-176-118.dynamic.isp.telekom.rs) (Ping timeout: 268 seconds)
[22:22:55] <bjs> This was confusing and caused lots of problems,  in Python 3 the default type (str) is text, and bytes are a different type.
[22:23:14] <BrenBarn> wasn't the b prefix only introduced in Py2.7?  or maybe 2.6?
[22:24:59] <petaflot> bjs: I have been struggling with the bytes/strigs issue so much in Python2.7 you can't imagine. With Python3 my code basically "just worked" because this confusion did not exist anymore. Maybe I was "doing it wrong", or maybe it was a limitation with python. if it was me doing it wrong... then why python3?
[22:25:42] <bjs> petaflot: things probably worked in Python 3 because the default type is now text and most people use strings to store text
[22:26:09] <perrierjouet> any comment on nongil ?
[22:26:31] <bjs> if everyone used the Python 2 text type (unicode) in the same places they now use the Python 3 str type, nothing would have changed
[22:27:00] <perrierjouet> is it too late to remove the gil ? considering rewrite of the packages ?
[22:28:34] <petaflot> now I'm struggling working around the fact that things such as keyboard pressed (which are on a very low-level and at least with PS/2 hardware treated as interruptions) somehow in the line fo the kernel and the task scheduler this goes back to polling. so 1) IMHO this is really ugly 2) the python team has nothign to be ashamed about
[22:28:55] <BrenBarn> The situation was that Python 2 had byte strings (written `"like this"`) and unicode strings (written `u"like this"`) but then they realized they wanted to migrate to a future where there would be byte strings written `b"like this"` and unicode strings written `"like this"`, so they added the `b` prefix in Python 2.7 to allow migration, so that there would be a way to write a byte string in Python 2 that would still be a byte string in Python 3
[22:29:56] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[22:30:33] *** Joins: teut (~teut@2401:4900:1c68:f055:81ec:22e8:7a3:5559)
[22:30:52] <nedbat> perrierjouet: i think they will eventually remove the gil
[22:31:13] <teut>         order  = dict(enumerate(order))
[22:31:14] <teut> the following gives  {1:"a" , 2:"b", ...}   , instead how to get  {"a":1, "b":2...}  ?
[22:31:20] *** Joins: upsala (~zcb@185.209.196.169)
[22:31:40] <petaflot> bjs: you might have seen in some of the code I pasted references to dec(....) ; dec() is just a shortcut to bytestr.decode(UTF_FORMAT) where UTF_FORMAT is one of 'utf-8', 'utf-16' or 'utf-32'
[22:31:55] *** Joins: rajkosto (~rajkosto@77-46-180-100.dynamic.isp.telekom.rs)
[22:31:56] <hexnewbie> petaflot: Some hardware interrupts involve polling
[22:32:08] <petaflot> ^ because I really had to make up my mind on which encoding to use
[22:32:46] <petaflot> hexnewbie: I don't agree. read more about MCUs and get back to me
[22:32:47] *** Joins: magla (~gelignite@55d4171c.access.ecotel.net)
[22:33:34] <petaflot> hexnewbie: https://www.youtube.com/watch?v=OpLU__bhu2w
[22:33:55] <hexnewbie> petaflot: I'm not watching 20 Marvel movies to learn that some interrupt implementation involve the CPU polling them
[22:34:03] <jinsun> teut: `{v: k for k, v in enumerate(order)}` ?
[22:34:09] <BrenBarn> teut: you can do `{value: ix for ix, value in enumerate(order)}`
[22:34:10] *** Joins: stonkey (~stonkey@user/stonkey)
[22:34:14] <teut> hmm
[22:34:34] <teut> no shorter way?
[22:34:34] <BrenBarn> but note that it will overwrite if the same thing appears multiple times in `order`
[22:34:53] <teut> order has the alphabets permuted
[22:34:56] *** Quits: Liexei (~Liexei@user/liexei) (Ping timeout: 245 seconds)
[22:35:00] *** Parts: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Leaving)
[22:35:02] *** Quits: crackerjack (~crackerja@pear.bnc4free.com) (Ping timeout: 240 seconds)
[22:35:09] *** Quits: rsx (~dummy@ppp-188-174-151-184.dynamic.mnet-online.de) (Quit: rsx)
[22:35:15] <teut> so a 26 letters shuffled string of alphabets in lowercase
[22:35:30] <BrenBarn> why do you need it to be shorter?
[22:35:44] <petaflot> hexnewbie: well before you learn how it works you won't be able to understand how hardware interrupts really work.
[22:35:50] <teut> no reasons, just like that
[22:36:14] <petaflot> hexnewbie: and it's nothing like a marvel movie.
[22:36:26] <teut>         order  = dict(map(reversed, enumerate(order)))
[22:36:53] <teut> just wanted a declarative programming wat
[22:36:56] <teut> way
[22:37:09] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-2d3b-cffd-943a-eda6.res6.spectrum.com)
[22:38:48] <petaflot> hexnewbie: this is totally in the order of "how computer work (or don't)" and stuff like delay-line memories such as https://www.youtube.com/watch?v=N9cUbYII5RY
[22:39:02] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[22:39:36] <Timvde> According to what I can find, x += y is translated to x = x.__iadd__(y). Why is the assignment necessary if __iadd__ is supposed to do inline addition?
[22:39:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[22:40:04] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[22:40:09] <ChrisWarrick> Timvde: because not all types can or want to mutate themselves
[22:40:20] <Timvde> (Case where you can see it: x = ([],); x[0] += ['foo'], which throws an error, yet still mutates the list)
[22:40:31] <bjs> Timvde: consider `n += 1` for an integer n
[22:41:18] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[22:41:35] *** Joins: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126)
[22:42:01] <Timvde> But if a type doesn't implement __iadd__, += falls back to __add__ (if I understand correctly), and it *does* make sense to assign, of course.
[22:42:30] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[22:42:42] <Timvde> Or is it not translated like that, but the default for __iadd__ is calling __add__?
[22:43:13] <petaflot> bjs: that {e!r} probably helped :-) I need to investigate things now
[22:43:22] <deniska> Timvde: python doesn't know beforehand whether __iadd__ of the object is capable of mutating it
[22:43:23] <Timvde> so __iadd__ is still called, but when generating the bytecode, cpython doesn't know if it was actually changed inline or not, so it generates the extra assignment to be sure?
[22:43:40] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Client Quit)
[22:43:43] <bjs> Timvde: but when it generates the bytecode it doesn't know whether to fall back to __add__ yet or not.
[22:43:48] <bjs> because that's decided at runtime
[22:44:30] <bjs> Timvde: the bytecode doesn't actually "call __iadd__" it has a INPLACE_ADD instruction, which when the INPLACE_ADD bytecode instruction runs then decides whether to call __iadd__ or __add__ or whatever
[22:45:06] *** Quits: Haxxa (~Haxxa@202-144-174-197.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:45:08] *** Quits: cheater (~Username@user/cheater) (Quit: Killed (BlackJac (Requested by panasync)))
[22:45:22] <Timvde> bjs: Aha, it does make sense that way :)
[22:45:49] <Timvde> I have a severe lack of bytecode knowledge, sadly (not surprisingly, I generally don't need it unless I'm tinkering with stuf)
[22:45:52] <Timvde> stuff*
[22:46:13] *** Quits: burakcank (~burakcank@has.arrived.and.is.ready-to.party) (Ping timeout: 240 seconds)
[22:47:06] <bjs> Timvde: additionally, there's no reason for __iadd__ to return the same object, but I'm not sure of any objects that do that
[22:47:10] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:47:15] *** Quits: jay-m1261 (~jay-m@gateway/vpn/pia/jay-m126) (Ping timeout: 256 seconds)
[22:47:35] <Timvde> bjs: well, my gut said that __iadd__ wouldn't need to return anything at all
[22:47:55] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 268 seconds)
[22:47:57] <bjs> Timvde: I guess, it could have been defined that way
[22:47:57] <Timvde> x = []; y = x.__iadd__(['foo']) still modifies x
[22:50:00] *** Joins: xkuru (~xkuru@user/xkuru)
[22:50:28] *** Joins: parv (~quass@user/parv)
[22:51:14] <petaflot> I believe I see where my mistake was : exceptions are not being propagated (unless it's explicitly specified)
[22:51:19] *** Joins: bluedust_ (~bluedust@185.206.227.136)
[22:51:31] *** Joins: djapo (~archangel@user/djapo)
[22:51:39] *** Joins: Titore (~Titore@user/titore)
[22:52:25] *** Joins: cheater (~Username@user/cheater)
[22:52:25] *** Quits: tdsmith (~tdsmith@kvm.kumokasumi.org) (Read error: Connection reset by peer)
[22:52:54] *** Joins: Valeria (~Valeria@user/valeria)
[22:54:13] *** Quits: bluedust (~bluedust@117.204.152.129) (Ping timeout: 240 seconds)
[22:54:37] <nedbat> petaflot: propagated where?
[22:54:47] <bjs> I assume you mean in the code you were asking about ~way back
[22:54:55] <petaflot> with `except MyException as e: raise e` or sth like this
[22:55:05] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[22:55:05] <perrierjouet> nedbat: the sooner the better ?
[22:55:11] <nedbat> petaflot: i don't know why you would need that.
[22:55:20] <nedbat> perrierjouet: sure, but it's complicated to accomplish
[22:55:29] *** Joins: tdsmith (~tdsmith@kvm.kumokasumi.org)
[22:55:44] <sleepingforest> is there a correct way to manage dependencies and dev/test dependencies? I want to use tox with flake8, mypy, pytest. But im confused on how to properly manage requirements for production / testing
[22:56:22] <perrierjouet> nedbat: how come with all the major corporations backing python there is no more funding to advance this topic ?
[22:56:34] <nedbat> perrierjouet: in what way are they backing it?
[22:56:40] <petaflot> nedbat: if I don't then I definitely did something wrong :-/
[22:56:52] <nedbat> petaflot: can you pastebin the code?
[22:56:54] <gjvc> using != backing
[22:56:57] <perrierjouet> nedbat: I meant major corporation using python
[22:57:11] *** Joins: burakcank (~burakcank@has.arrived.and.is.ready-to.party)
[22:57:11] <petaflot> nedbat: too many dependencies...
[22:57:21] <nedbat> petaflot: we don't run the code. we read the code.
[22:57:29] *** Joins: bluedust (~bluedust@194.37.96.152)
[22:57:36] <nedbat> perrierjouet: gjvc has it: using doesn't mean funding.
[22:58:23] <nedbat> perrierjouet: if you can think of a way to get a for-profit company to give money in return for nothing, i'm all ears
[22:58:29] <petaflot> nedbat: thanks a lot for your suggestion... with all the light you've shed on this problem I'll try to fix it on my own first ;-)
[22:58:46] <gjvc> sleepingforest i use pip and a single requirement.txt file for all environments
[22:59:01] <gjvc> sleepingforest: (+venv)
[22:59:40] *** Quits: zepolen (~zepolen@2a02:1388:2096:52af:5a5:477:a137:ce70) (Quit: Konversation terminated!)
[23:00:11] <sleepingforest> gjvc: thats what ive been doing. Im learning tox since it seems useful to standardize actions and surrounding information. I've seen alot of people splitting prod/dev/test requirements and it seems like it could be a pain to manage
[23:00:28] *** Joins: crackerjack (~crackerja@pear.bnc4free.com)
[23:00:52] *** Quits: bluedust_ (~bluedust@185.206.227.136) (Ping timeout: 268 seconds)
[23:01:17] <nedbat> sleepingforest: i don't find it hard to manage. it requires a little thought when a new package is added, to put it in the right environment
[23:01:58] <sleepingforest> nedbat: so do you have multiple venvs and then switch between them to freeze them?
[23:02:22] <nedbat> sleepingforest: i don't use pip freeze to manage the requirements.
[23:02:34] <sleepingforest> nedbat: what do you use?
[23:03:03] <nedbat> sleepingforest: i use pip-compile to compile .in files to .txt files: https://github.com/nedbat/coveragepy/blob/master/Makefile#L67-L78
[23:03:08] *** Joins: Liexei (~Liexei@user/liexei)
[23:03:38] *** Quits: yusraDev (~yusraDev@37.17.135.86) (Quit: Client closed)
[23:03:42] <nedbat> (oops, to .pip files)
[23:03:43] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[23:04:59] <sleepingforest> ive never seen this before. so maybe i have a gap in knowledge here.
[23:05:11] <nedbat> sleepingforest: it's not the most-used technique
[23:05:39] <gjvc> nedbat: suggest "find . -type f -delete" etc for the "clean" recipe :-)
[23:05:56] *** Joins: modlin (modlin@user/modlin)
[23:06:25] <nedbat> gjvc: that target has been like that since the Windows days
[23:06:29] <gjvc> ah
[23:07:09] <phy1729> (fwiw -delete isn't POSIX, but it's basically everywhere)
[23:07:32] <gjvc> phy1729, good to know
[23:07:41] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[23:08:10] <nedbat> gjvc: ... which doesn't mean i should leave it like that, but i would like it to work on windows
[23:08:31] <gjvc> fair enough then
[23:08:38] *** Quits: Mattiaslndstrm (~Mattiasln@c-73a0225c.018-449-6e6b701.bbcust.telenor.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:09:18] <sleepingforest> nedbat: are there any significant reasons for doing it that way or does that workflow just work for you
[23:09:43] <nedbat> sleepingforest: it lets me maintain separate requirements files, and pin the transitive dependencies.
[23:09:51] *** Joins: LimeOn (~user@user/limeon)
[23:09:57] <sleepingforest> i assume there is no definitive right way to manage deps on python given pip venv poetry pdm etc
[23:10:07] *** Quits: montybanksnyc (~montybank@pool-108-5-238-57.nwrknj.fios.verizon.net) (Ping timeout: 268 seconds)
[23:10:24] <nedbat> sleepingforest: there is no One True Way
[23:10:45] <sleepingforest> figured lol
[23:10:58] <sleepingforest> ill look over that makefile and experiement
[23:11:03] <sleepingforest> thank you
[23:13:14] <gjvc> i have been down this rabbit hole and come up with a minimal-but-complete solution which works for me (rm -rf .venv/; create venv; pip upgrade from root dependencies;  pip freeze resulting dependencies into a seperate requirement.txt file for the current python version; done. subsequent runs look for the second requirement.txt file and use that if one exists, in preference to the root requirement.txt.  both
[23:13:20] <gjvc> requirement.txt and resulting requirement.txt.cpython.3.9 files are checked into git)
[23:13:57] <gjvc> but as nedbat says, there is no universally accepted best way (my metric was "fewest lines of bash" required to pull this off)
[23:14:22] <nedbat> gjvc: does that handle dev vs production?
[23:14:31] <gjvc> it does not.
[23:14:48] <sleepingforest> where does poetry fit into any of this, if it even does? It seems widely used based off the nuber of gh stars
[23:14:49] <gjvc> i have not seen a need for that thus far
[23:15:22] <nedbat> sleepingforest: that's the other problem: everyone has different needs
[23:15:34] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[23:15:36] <gjvc> what nedbat said 100x
[23:15:49] <dodo> sleepingforest: i use pip-tools as well. it's mostly awesome. deterministic installs..
[23:15:57] <sleepingforest> i guess im wondering if i need it lol
[23:16:43] <sleepingforest> my needs are simple though, frozen deps, split deps between production and dev (for docs, tests, typing, linting)
[23:17:21] <sleepingforest> so im surveying the area again and hopefully dont succumb to shiny new toy syndrome
[23:17:42] *** Joins: bluedust_ (~bluedust@103.165.167.220)
[23:18:41] <nedbat> sleepingforest: btw, that pip-compile technique is what we use at work at edx also
[23:20:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[23:20:28] <sleepingforest> gotcha. ill play around with it. thanks all
[23:20:59] *** Quits: goepsilongo (~goepsilon@2806:263:c404:8000:ec3a:2574:2f9:e2db) (Quit: Textual IRC Client: www.textualapp.com)
[23:21:15] *** Quits: bluedust (~bluedust@194.37.96.152) (Ping timeout: 256 seconds)
[23:22:29] *** Joins: fikran (~fikran@user/fikran)
[23:26:31] *** Joins: cosimone (~user@93-47-231-248.ip115.fastwebnet.it)
[23:26:38] *** Quits: Valeria (~Valeria@user/valeria) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:27:30] *** Quits: maplefinger (~maplefing@user/lindis) (Ping timeout: 276 seconds)
[23:28:12] *** Joins: Brocker (~NoBody@user/brocker)
[23:28:16] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-61d5-221b-08ad-1848.res6.spectrum.com) (Ping timeout: 245 seconds)
[23:28:26] *** Joins: Warped (~Warped@user/warped)
[23:28:34] *** Joins: bmr (~bmr@84-216-138-100.customers.ownit.se)
[23:29:10] *** Joins: bluedust (~bluedust@185.248.85.10)
[23:29:38] *** Quits: bmr (~bmr@84-216-138-100.customers.ownit.se) (Changing host)
[23:29:38] *** Joins: bmr (~bmr@user/bmr)
[23:30:34] *** Joins: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu)
[23:31:46] *** Quits: rajkosto (~rajkosto@77-46-180-100.dynamic.isp.telekom.rs) (Quit: Leaving)
[23:32:26] *** Quits: bluedust_ (~bluedust@103.165.167.220) (Ping timeout: 260 seconds)
[23:33:57] *** Quits: nomic (~nomic@185.217.117.90) (Quit: Leaving)
[23:34:15] *** Joins: Valeria (~Valeria@user/valeria)
[23:35:16] *** Joins: a0z1 (~a0z1@185.209.196.144)
[23:35:47] *** BuddyTheElf is now known as launchd
[23:36:38] <Omega037> so, I have been out of the loop the past few months
[23:36:46] <Omega037> Any new packages that are getting a lot of hype?
[23:37:17] *** Joins: p3lim (~p3lim@ti0006q161-2971.bb.online.no)
[23:37:19] *** Joins: maplefinger (~maplefing@user/lindis)
[23:39:19] *** Quits: stockholm (~Andreas@p200300d2c73a4100098fa5cc81c28e2d.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[23:41:20] *** Parts: jfcaron (~jfcaron@192.252.229.166) ()
[23:41:40] *** Joins: Pickchea (~private@user/pickchea)
[23:43:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[23:44:15] <nedbat> Omega037: have you seen rich?
[23:44:15] *** Joins: esther (~esther@2607:fb90:5fe8:3d66:643c:30dd:65d7:eadf)
[23:45:13] <Omega037> nedbat, I think I did
[23:45:25] <Omega037> I don't use the console much
[23:45:41] <Omega037> What can it do for me?
[23:46:07] <Omega037> Does it impact Jupyter cells
[23:47:05] <nedbat> Omega037: no idea :) i don't use Jupiter much :)
[23:47:39] *** Joins: ExeciN (~ExeciN@user/nicexe)
[23:47:51] <Omega037> Python is such a diverse ecosystem
[23:48:12] <Omega037> Kinda great in that it can do so many things, but it also means there is a ton of stuff that isn't relevant
[23:48:15] *** Quits: bluedust (~bluedust@185.248.85.10) (Remote host closed the connection)
[23:48:16] *** Joins: netpipe (~netpipe@user/netpipe)
[23:48:33] <Omega037> I'm in data science and have to argue against R and JMP/SAS users a lot
[23:48:37] <netpipe> quick question im doing cython on windows but cannot seem to find itertools.py anywhere
[23:48:43] <netpipe> python 2.7
[23:48:55] <deniska> in python world the word "lately" means "two years", it's unlikely you missed anything important in a few months :)
[23:49:17] <Omega037> Almost all of their "advantages" over Python stem from being only focused on statistical programming
[23:49:32] <bjs> netpipe: are you expecting to find one?
[23:50:13] <netpipe> sortof because its missing
[23:50:37] <ChrisWarrick> netpipe: itertools is written in C
[23:50:50] <bjs> netpipe: why do you expect there to be an itertools.py , itertools is built-in
[23:50:55] <netpipe> oh
[23:51:10] <netpipe> my script works on linux not windows then
[23:51:37] <ChrisWarrick> netpipe: how does it not work?
[23:51:53] <netpipe>  import itertools works on linux but on windows cython it says its missing
[23:52:03] <ChrisWarrick> netpipe: windows cython?
[23:52:07] <netpipe> the python included with mingw64 codeblocks
[23:52:21] <ChrisWarrick> that’s not cython
[23:52:30] <ChrisWarrick> netpipe: consider using the python.org installer and consider using python 3.10
[23:52:37] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 240 seconds)
[23:53:14] *** Quits: moto (~moto@user/moto) (Read error: Connection reset by peer)
[23:54:02] *** Quits: agonhajdari (~textual@user/agonhajdari) (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
[23:59:45] *** Parts: exarkun (~exarkun@user/exarkun) (WeeChat 3.3)
