[00:01:28] <Tach> I'm looking for some examples to remove specific matching lines from a textfile, does anyone know some ?
[00:02:46] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[00:03:14] *** Joins: rvt (~rvt@librecad/rvt)
[00:04:22] <bpalmer> the simplest way is to read in a file line by line, check if each line matches; if not, print it out again to a new file.
[00:04:41] *** Quits: frm (~frm@user/frm) (Quit: Textual IRC Client: www.textualapp.com)
[00:04:48] *** Quits: arinov (~arinov@213.194.126.155) (Quit: WeeChat 3.3)
[00:05:16] <bookworm> s/print/write/
[00:05:26] <bookworm> (we are 8n go, not python)
[00:06:57] * bpalmer shrugs and taps the fmt.Fprint sign.
[00:07:24] <Tach> bpalmer yes but the issue is that I trigger something when the file changes so it would be nice to do it in mem, I can also use a tmp file
[00:07:57] <Tach> bookworm what do you mean by that ?
[00:08:24] <bookworm> ignore it
[00:08:33] *** Joins: isflavior (~isflavior@2001:8a0:5dd8:4100:1d4b:5fac:1c04:e99f)
[00:08:43] <Tach> I don't understand, what did you mean by it ?
[00:08:53] <bpalmer> Tach: it was addressed to my verb choice. It doesn't matter.
[00:09:14] <Tach> bpalmer in other words a "brainfart" ?
[00:10:30] <bpalmer> No, just not directly relevant to your question.
[00:10:51] <Tach> ok, never mind I have brains and farts too :D
[00:11:21] <bpalmer> Tach: so you can do the exact same thing but instead write to a buffer in memory (see, e.g., bytes.Buffer) ,and then open the file for writing and write it all at once.
[00:11:47] <bpalmer> ...
[00:11:57] <Tach> bpalmer yes good idea. What to use to match and replace ?
[00:12:41] <bookworm> depends on how complicated the query is (suffix / prefix matching vs full on regex)
[00:12:46] <j416> ==
[00:14:11] *** Quits: rvt (~rvt@librecad/rvt) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[00:16:16] *** Joins: mooff (mooff@awful.cooking)
[00:20:20] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[00:24:11] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:79a8:3e93:e7b7:e2ce)
[00:25:15] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-70b2-1b29-14df-adcf.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:26:07] <Tach> bookworm pretty simple I actually need to add a line with an \n (so 2 lines) above ### User Rules ### and need to be able to remove a line like this where 0.0.0.0/0 will be 1.2.3.4/32 ### tuple ### allow tcp 4444 0.0.0.0/0 any 0.0.0.0/0 in \n-A ufw-user-input -p tcp --dport 4444 -j ACCEPT
[00:31:26] *** Quits: strubbl891941988 (~strubbl@ipbcc1859d.dynamic.kabel-deutschland.de) (Quit: The Lounge - https://thelounge.github.io)
[00:32:50] *** Joins: strubbl891941988 (~strubbl@ipbcc1859d.dynamic.kabel-deutschland.de)
[00:34:12] <b0nn> hmm that file change - it depends how big the file is, and how much memory you have
[00:34:43] *** Quits: mooff (mooff@awful.cooking) (Quit: Quit)
[00:34:53] <b0nn> option 2 might be a temp file that gets moved over when complete (ASSUMING that you have complete ownership and orig file isn't allowed to be written to by any other process)
[00:35:47] *** Joins: mooff (mooff@awful.cooking)
[00:36:10] <b0nn> You can double check by taking a hash of the orig at the start, then when you have completed your task (and ignoring the race condition between the second check and the move
[00:37:55] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[00:38:03] *** Joins: jla (~jordi@64.225.79.195)
[00:38:57] *** Quits: km1 (~km@185.203.114.222) (Quit: WeeChat 3.3)
[00:43:53] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[00:49:05] <foobaz> ignoring the race condition is a bad idea, it's better to trigger the event unnecessarily than to risk missing an event
[00:49:17] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:79a8:3e93:e7b7:e2ce) (Ping timeout: 240 seconds)
[00:49:28] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[00:50:57] *** Quits: shka (~herr@109.231.0.226) (Ping timeout: 240 seconds)
[00:52:10] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[00:52:30] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:53:50] <b0nn> best of luck with file systems
[00:53:51] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[00:54:03] *** Quits: isflavior (~isflavior@2001:8a0:5dd8:4100:1d4b:5fac:1c04:e99f) (Quit: isflavior)
[00:54:22] *** Joins: arcatech_ (~arcatech@user/arcatech)
[00:57:37] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 240 seconds)
[00:58:18] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-3538-b015-ba08-d9e4.res6.spectrum.com)
[01:01:48] *** Joins: teasea (~teasea@user/teasea)
[01:06:59] *** Quits: arcatech_ (~arcatech@user/arcatech) (Quit: Bye.)
[01:08:31] *** Joins: arcatech (~arcatech@user/arcatech)
[01:10:18] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:79a8:3e93:e7b7:e2ce)
[01:11:28] *** Joins: isflavior (~isflavior@2001:8a0:5dd8:4100:1d4b:5fac:1c04:e99f)
[01:12:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[01:13:51] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[01:14:27] *** Joins: fikran (~fikran@user/fikran)
[01:16:04] *** Joins: dg (~dgl@dg.wtf)
[01:18:57] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-3538-b015-ba08-d9e4.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[01:19:42] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[01:21:17] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:79a8:3e93:e7b7:e2ce) (Ping timeout: 240 seconds)
[01:21:48] *** Joins: fikran (~fikran@user/fikran)
[01:22:09] *** Joins: arcatech (~arcatech@user/arcatech)
[01:23:35] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[01:24:23] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 250 seconds)
[01:27:54] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Remote host closed the connection)
[01:32:42] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:79a8:3e93:e7b7:e2ce)
[01:38:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[01:41:09] *** Joins: fikran (~fikran@user/fikran)
[01:41:47] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:42:00] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[01:45:38] *** Quits: bch (~bch@S01069050ca2cbf63.ok.shawcable.net) (Quit: rebooter)
[01:46:38] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:79a8:3e93:e7b7:e2ce) (Ping timeout: 268 seconds)
[01:47:16] *** Quits: attila_lendvai (~alendvai@2a02:ab88:3700:b180:6072:12a9:8472:9a8f) (Ping timeout: 268 seconds)
[01:48:53] *** Joins: bch (~bch@S01069050ca2cbf63.ok.shawcable.net)
[02:04:39] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-3538-b015-ba08-d9e4.res6.spectrum.com)
[02:09:35] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:09:46] *** Joins: rcernin (~rcernin@124.190.149.221)
[02:17:24] *** Joins: jjonah (~jjonah@p200300d5d7245f00dea632fffeb3342f.dip0.t-ipconnect.de)
[02:20:01] *** Quits: jjonah (~jjonah@p200300d5d7245f00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:20:01] *** Quits: isflavior (~isflavior@2001:8a0:5dd8:4100:1d4b:5fac:1c04:e99f) (Quit: isflavior)
[02:22:06] *** Joins: dead1 (~dead1@user/dead1)
[02:30:08] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[02:31:17] *** Quits: pztrn (~pztrn@user/pztrn) (Ping timeout: 240 seconds)
[02:39:55] *** Joins: pztrn (~pztrn@user/pztrn)
[02:41:54] <hdm> Tach: a couple options, if you want to do it all in memory, os.ReadFile() -> bytes.Split() -> iterate and build a new slice -> bytes.Join() -> os.WriteFile is the easy path; if you need to get fancy you can use regexps or a string scanner
[02:42:37] <hdm> also, :) at the 4444
[02:44:58] *** Joins: paulgrmn__ (~paulgrmn@user/paulgrmn)
[02:45:57] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:81c1:fdbc:2b2:4c4a) (Read error: Connection reset by peer)
[02:50:05] <Tach> hdm what do you advise ?
[02:51:00] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-3538-b015-ba08-d9e4.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:57:24] *** Joins: codebam (~codebam@user/codebam)
[02:57:49] *** Joins: isflavior (~isflavior@2001:8a0:5dd8:4100:1d4b:5fac:1c04:e99f)
[02:59:53] *** Quits: moog (~moog@107.126.53.64) (Remote host closed the connection)
[03:03:48] *** Quits: smach (~savio@177.12.49.3) (Read error: Connection reset by peer)
[03:05:50] *** Quits: isflavior (~isflavior@2001:8a0:5dd8:4100:1d4b:5fac:1c04:e99f) (Quit: isflavior)
[03:10:15] *** Joins: kupi (uid212005@id-212005.hampstead.irccloud.com)
[03:10:17] *** Quits: paulgrmn__ (~paulgrmn@user/paulgrmn) (Ping timeout: 240 seconds)
[03:10:32] *** Joins: isflavior (~isflavior@2001:8a0:5dd8:4100:1d4b:5fac:1c04:e99f)
[03:14:51] *** Joins: rvt (~rvt@librecad/rvt)
[03:15:17] *** Quits: monoxane (~monoxane@user/monoxane) (Read error: Connection reset by peer)
[03:15:40] <hdm> Tach: what i suggested, especially if the file is small
[03:17:19] *** Joins: monoxane (~monoxane@user/monoxane)
[03:31:52] *** Quits: MrElendig (~Urist@archlinux/op/MrElendig) (Quit: ww3 starting)
[03:32:57] *** Quits: beholders_eye (~weechat@2804:1b3:70c2:d7e4:2dd:3e29:fd7e:314) (Ping timeout: 240 seconds)
[03:33:28] *** Joins: MrElendig (~Urist@archlinux/op/MrElendig)
[03:45:00] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[03:46:10] *** Quits: isflavior (~isflavior@2001:8a0:5dd8:4100:1d4b:5fac:1c04:e99f) (Quit: isflavior)
[03:48:16] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 245 seconds)
[03:48:48] *** Joins: isflavior (~isflavior@2001:8a0:5dd8:4100:1d4b:5fac:1c04:e99f)
[03:50:30] *** Joins: fikran (~fikran@user/fikran)
[03:55:59] *** Joins: roshanavand_ (~roshanava@185.209.196.145)
[03:58:44] *** Quits: roshanavand (~roshanava@194.36.25.25) (Ping timeout: 252 seconds)
[04:00:25] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com)
[04:01:31] *** Joins: roshanavand__ (~roshanava@193.27.14.120)
[04:04:02] *** Quits: roshanavand_ (~roshanava@185.209.196.145) (Ping timeout: 256 seconds)
[04:06:26] *** Quits: isflavior (~isflavior@2001:8a0:5dd8:4100:1d4b:5fac:1c04:e99f) (Quit: isflavior)
[04:07:02] *** Quits: krux02__ (~krux02@p200300e8172499004cdf065c4ed80e7b.dip0.t-ipconnect.de) (Remote host closed the connection)
[04:08:30] *** Joins: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225)
[04:08:41] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[04:14:57] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 240 seconds)
[04:34:39] *** Quits: internut (~internut@2601:280:4e00:7b70:9c7b:d0f0:3f87:bb2c) (Remote host closed the connection)
[04:36:22] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[04:37:06] *** Joins: bindu (~bindu@user/bindu)
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:35] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:47:57] *** Quits: roshanavand__ (~roshanava@193.27.14.120) (Ping timeout: 240 seconds)
[04:48:10] *** Joins: nvk011 (~nvk011@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com)
[04:50:53] *** Joins: internut (~internut@2601:280:4e00:7b70:9c7b:d0f0:3f87:bb2c)
[04:51:33] *** Joins: aseo (~aaron@cpe-172-91-79-38.socal.res.rr.com)
[04:52:20] *** Quits: aseo (~aaron@cpe-172-91-79-38.socal.res.rr.com) (Client Quit)
[05:06:28] *** Joins: arcatech (~arcatech@user/arcatech)
[05:07:30] *** Quits: rcernin (~rcernin@124.190.149.221) (Ping timeout: 256 seconds)
[05:09:08] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:10:30] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[05:12:42] *** Joins: arcatech (~arcatech@user/arcatech)
[05:17:24] *** Joins: rcernin (~rcernin@124.190.149.221)
[05:19:31] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[05:21:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[05:23:51] *** Joins: fikran (~fikran@user/fikran)
[05:24:19] *** Joins: arcatech (~arcatech@user/arcatech)
[05:26:35] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[05:36:18] *** Joins: smach (~savio@177.12.49.3)
[05:36:41] *** Quits: smach (~savio@177.12.49.3) (Remote host closed the connection)
[05:37:07] *** Quits: wim (~wim@42.be) (Ping timeout: 265 seconds)
[05:37:07] *** Joins: smach (~savio@177.12.49.3)
[05:38:26] *** Quits: smach (~savio@177.12.49.3) (Client Quit)
[05:50:45] *** Joins: momlive (~momlive@208.104.196.205)
[05:50:56] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[05:51:34] *** Quits: momlive (~momlive@208.104.196.205) (Client Quit)
[05:51:53] *** Joins: momlive (~momlive@208.104.196.205)
[05:52:03] *** Quits: momlive (~momlive@208.104.196.205) (Client Quit)
[05:55:20] *** Quits: alphasierra (~alphasier@2405:201:e:4d:a21f:bc:3e70:2225) (Remote host closed the connection)
[05:59:49] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[06:04:02] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a0a:70e8:f833:825f:1115) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:05:36] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:16:47] *** Joins: roshanavand__ (~roshanava@185.209.196.175)
[06:17:47] *** Joins: darkapex (~darkapex@user/darkapex)
[06:19:12] *** Quits: darkapex_ (~darkapex@user/darkapex) (Ping timeout: 268 seconds)
[06:24:34] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 256 seconds)
[06:31:17] *** Joins: rockyh (~rockyh@user/rockyh)
[06:32:03] *** Joins: wim (~wim@42.be)
[06:33:40] *** Joins: andlabs (~andlabs@2604:ca00:14a:817f:d8d4:fe98:ba75:b988)
[06:36:20] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:a1e1:617f:5617:eda3)
[06:39:17] *** Quits: andlabs (~andlabs@2604:ca00:14a:817f:d8d4:fe98:ba75:b988) (Ping timeout: 240 seconds)
[06:40:39] *** Joins: andlabs (~andlabs@64.9.247.38)
[06:40:55] *** Quits: andlabs (~andlabs@64.9.247.38) (Read error: Connection reset by peer)
[06:41:19] *** Joins: andlabs (~andlabs@2604:ca00:14c:8251:f1f1:5c59:d25b:ef93)
[06:43:57] *** Quits: imm_ (~imm_@user/imm/x-3405860) (Ping timeout: 240 seconds)
[06:46:05] *** Joins: imm_ (~imm_@user/imm/x-3405860)
[06:50:11] *** Joins: DM430784214951 (~DM4307@047-234-129-039.res.spectrum.com)
[06:50:22] *** Joins: andlabs_ (~andlabs@64.9.247.38)
[06:52:17] *** Quits: andlabs (~andlabs@2604:ca00:14c:8251:f1f1:5c59:d25b:ef93) (Ping timeout: 240 seconds)
[06:57:40] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[06:57:43] *** Quits: andlabs_ (~andlabs@64.9.247.38) (Read error: Connection reset by peer)
[06:58:01] *** Joins: andlabs (~andlabs@2604:ca00:14c:8251:a8b4:6b09:71aa:425f)
[07:02:59] *** Joins: c10l8 (~c10l@user/c10l)
[07:06:41] *** Quits: c10l (~c10l@user/c10l) (Ping timeout: 268 seconds)
[07:06:41] *** c10l8 is now known as c10l
[07:07:31] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com)
[07:08:32] *** Joins: andlabs_ (~andlabs@64.9.247.38)
[07:09:25] *** Joins: arcatech (~arcatech@user/arcatech)
[07:09:32] *** Quits: lilgopher (~textual@2601:241:8000:38f0:6d8c:fef2:66e4:637f) (Quit: Textual IRC Client: www.textualapp.com)
[07:11:17] *** Quits: andlabs (~andlabs@2604:ca00:14c:8251:a8b4:6b09:71aa:425f) (Ping timeout: 240 seconds)
[07:12:18] *** Joins: roshanavand_ (~roshanava@194.36.25.25)
[07:15:00] *** Quits: roshanavand__ (~roshanava@185.209.196.175) (Ping timeout: 256 seconds)
[07:17:38] *** Quits: bindu (~bindu@user/bindu) (Quit: Leaving)
[07:18:15] *** Joins: bindu (~bindu@user/bindu)
[07:20:08] *** Quits: kupi (uid212005@id-212005.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:22:30] *** Quits: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca) (Quit: Textual IRC Client: www.textualapp.com)
[07:26:06] *** Quits: bindu (~bindu@user/bindu) (Ping timeout: 276 seconds)
[07:27:51] *** Joins: bindu (~bindu@user/bindu)
[07:31:22] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[07:33:13] *** Joins: fikran (~fikran@user/fikran)
[07:40:37] *** Quits: roshanavand_ (~roshanava@194.36.25.25) (Ping timeout: 240 seconds)
[07:42:18] *** Quits: andlabs_ (~andlabs@64.9.247.38) (Read error: Connection reset by peer)
[07:42:24] *** Joins: andlabs (~andlabs@2604:ca00:14c:8251:acc8:f33a:5ae:e836)
[07:46:49] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:48:36] *** Quits: andlabs (~andlabs@2604:ca00:14c:8251:acc8:f33a:5ae:e836) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:58:31] *** Joins: bt-01 (~bt-01@49.207.0.191)
[07:58:43] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[08:03:01] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 240 seconds)
[08:03:13] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[08:04:07] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[08:04:50] *** Joins: bindu_ (~bindu@user/bindu)
[08:04:57] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[08:05:27] *** Quits: bindu (~bindu@user/bindu) (Quit: Leaving)
[08:06:09] *** Joins: darkapex (~darkapex@user/darkapex)
[08:06:36] *** bindu_ is now known as bindu
[08:10:40] *** Joins: veegee (~veegee@ipagstaticip-469c2903-2b07-6dc3-3bc2-98748da5ca77.sdsl.bell.ca)
[08:18:00] *** Joins: andlabs (~andlabs@70.107.171.168)
[08:24:46] *** Quits: dead1 (~dead1@user/dead1) (Quit: Leaving)
[08:29:05] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[08:29:26] *** Quits: jimeh (~jimeh@51.15.210.236) (Remote host closed the connection)
[08:29:52] *** Joins: jimeh (~jimeh@51.15.210.236)
[08:30:35] *** Quits: c10l (~c10l@user/c10l) (Quit: The Lounge - https://thelounge.chat)
[08:30:48] *** Joins: c10l (~c10l@user/c10l)
[08:33:26] *** Joins: sagax (~sagax_nb@user/sagax)
[08:40:29] *** Joins: eruditass (uid248673@id-248673.uxbridge.irccloud.com)
[08:43:54] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[09:23:03] *** Joins: dsrt^ (~dsrt@64.253.22.77)
[09:37:53] *** Joins: novns (~novns@user/novns)
[09:40:38] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[09:42:33] *** Joins: fikran (~fikran@user/fikran)
[09:44:04] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Quit: https://kn100.me :))
[09:44:36] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[09:49:29] *** Joins: shka (~herr@109.231.0.226)
[10:00:24] *** Quits: codebam (~codebam@user/codebam) (Remote host closed the connection)
[10:09:01] *** Joins: andreisamoila (~andreisam@79.118.113.132)
[10:13:58] *** Quits: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi) (Quit: mikoto-chan)
[10:16:33] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Read error: Connection reset by peer)
[10:16:43] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[10:23:30] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[10:23:53] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[10:27:22] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[10:27:37] *** Quits: cim (~cim@205.185.117.110) (Quit: Ping timeout (120 seconds))
[10:27:44] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[10:27:52] *** Joins: cim (~cim@205.185.117.110)
[10:31:17] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[10:31:40] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[10:42:29] *** Quits: andreisamoila (~andreisam@79.118.113.132) (Remote host closed the connection)
[10:43:05] *** Joins: andreisamoila (~andreisam@79.118.113.132)
[10:43:54] *** Joins: attila_lendvai (~alendvai@2a02:ab88:3700:b180:6072:12a9:8472:9a8f)
[10:43:55] *** Quits: rcernin (~rcernin@124.190.149.221) (Quit: WeeChat 3.3)
[10:44:27] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:45:03] *** Joins: rcernin (~rcernin@124.190.149.221)
[10:47:07] *** Quits: andreisamoila (~andreisam@79.118.113.132) (Remote host closed the connection)
[10:52:10] *** Joins: andreisamoila (~andreisam@79.118.113.132)
[11:00:25] *** Joins: rendar (~rendar@user/rendar)
[11:08:19] *** Joins: Tach_ (~Tach@lfbn-lyo-1-869-115.w86-194.abo.wanadoo.fr)
[11:10:44] *** Quits: Tach (~Tach@user/tach) (Ping timeout: 256 seconds)
[11:12:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[11:13:21] *** Quits: bt-01 (~bt-01@49.207.0.191) (Ping timeout: 268 seconds)
[11:15:55] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:17:22] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[11:17:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[11:22:59] *** Joins: mrig (~AdiIRC@user/mrig)
[11:23:10] *** Quits: rvalue (~rvalue@user/rvalue) (Quit: ZNC - https://znc.in)
[11:23:17] *** Quits: rcernin (~rcernin@124.190.149.221) (Ping timeout: 240 seconds)
[11:25:03] *** Joins: rcernin (~rcernin@124.190.149.221)
[11:30:29] *** Joins: bt-01 (~bt-01@49.207.0.191)
[11:36:40] *** Quits: bt-01 (~bt-01@49.207.0.191) (Remote host closed the connection)
[11:37:01] *** Joins: bt-01 (~bt-01@49.207.0.191)
[11:43:31] *** Quits: bt-01 (~bt-01@49.207.0.191) (Quit: Leaving)
[11:49:50] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[11:51:41] *** Joins: rvalue (~rvalue@user/rvalue)
[11:51:53] *** Joins: fikran (~fikran@user/fikran)
[11:53:16] *** Joins: danmurf (uid480399@user/danmurf)
[12:01:38] *** Quits: Compy (compy@2600:3c00::f03c:91ff:fe83:6d49) (Remote host closed the connection)
[12:03:00] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[12:12:40] *** Quits: jespada (~jespada@87.74.33.157) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:16:16] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[12:29:54] *** Joins: jespada (~jespada@87.74.33.157)
[12:30:11] *** Quits: pulsepoint433[m] (~pulsepoin@2001:470:69fc:105::1:1f25) (Quit: You have been kicked for being idle)
[12:30:11] *** Quits: darkskiez[m] (~darkskiez@2001:470:69fc:105::1:2a27) (Quit: You have been kicked for being idle)
[12:30:36] *** Joins: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl)
[12:31:00] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[12:31:25] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[12:32:01] *** Quits: ewintr (~ewintr@46.23.91.175) (Quit: Lost terminal)
[12:35:43] *** Quits: Kyros (~kyros@user/kyros) (Quit: ZNC 1.8.2 - https://znc.in)
[12:35:55] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Quit: WeeChat 3.3)
[12:36:06] *** Joins: Kyros (~kyros@user/kyros)
[12:38:43] *** Quits: jkovac1 (~jkovac1@user/jkovac1) (Quit: Ping timeout (120 seconds))
[12:39:00] *** Joins: jkovac1 (~jkovac1@user/jkovac1)
[12:57:25] *** Joins: arinov (~arinov@213.194.126.155)
[12:59:01] *** Joins: kjmz14 (~karol@84-10-191-232.static.chello.pl)
[13:05:45] *** Parts: kjmz14 (~karol@84-10-191-232.static.chello.pl) ()
[13:13:46] *** Joins: neurocyte0132889 (~neurocyte@IP-185117070150.dynamic.medianet-world.de)
[13:13:46] *** Quits: neurocyte0132889 (~neurocyte@IP-185117070150.dynamic.medianet-world.de) (Changing host)
[13:13:46] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[13:17:56] *** Joins: jla (~jordi@212.161.114.203)
[13:18:17] *** Quits: dsrt^ (~dsrt@64.253.22.77) (Ping timeout: 240 seconds)
[13:22:17] *** Quits: jla (~jordi@212.161.114.203) (Ping timeout: 240 seconds)
[13:23:30] *** Joins: jla (~jordi@64.225.79.195)
[13:29:43] *** Quits: rvt (~rvt@librecad/rvt) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[13:32:37] *** Joins: rvt (~rvt@librecad/rvt)
[13:41:58] *** Quits: rvt (~rvt@librecad/rvt) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[13:43:02] *** Quits: cobber (~protorom@213.240.182.77) (Quit: cobber)
[13:44:33] *** Joins: saschagrunert (~saschagru@46.128.124.48)
[13:45:05] *** Joins: rvt (~rvt@librecad/rvt)
[13:45:54] *** Quits: hwm4rgs (~hwm4rgs@user/hwm4rgs) (Remote host closed the connection)
[13:46:44] *** Quits: rvt (~rvt@librecad/rvt) (Client Quit)
[13:48:58] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[13:51:24] *** Joins: hwm4rgs (~hwm4rgs@user/hwm4rgs)
[13:59:20] *** Joins: azidhaka (~azidhaka@user/azidhaka)
[13:59:36] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[14:01:13] *** Joins: fikran (~fikran@user/fikran)
[14:05:21] *** Quits: jla (~jordi@64.225.79.195) (Ping timeout: 245 seconds)
[14:07:40] *** Joins: jla (~jordi@64.225.79.195)
[14:14:00] *** Joins: mikoto-chan (~mikoto-ch@2a00:1d50:3:0:d35c:a450:4ccc:94ac)
[14:14:02] <mikoto-chan> https://go.dev/play/p/au8oKJW_r3B
[14:14:03] *** Quits: mva (znc@gentoo/developer/mva) (Ping timeout: 268 seconds)
[14:14:33] <mikoto-chan> how would I make this code concurrent? as you can see it can get extremely slow with big numbers
[14:14:45] <mikoto-chan> https://go.dev/play/p/z_Co0pqvhHB
[14:15:09] <mikoto-chan> I tried sync.WaitGroup but it doesn't seem to work anymore ...
[14:18:44] <sztanpet> you wait for a single goroutine right after launching it, that makes no sense
[14:19:18] <bookworm> rather than throwing more goroutines at the problem stop recalculating the same results over and over again
[14:19:50] <bookworm> you recalculate every Sum(i) j times for absolutely no reason
[14:20:32] <bookworm> not even speaking of Sum which also calculates all prior steps even though it already knew the result from other calculation steps
[14:21:44] <bookworm> you have an algorithm problem, not a concurrency issue
[14:22:37] <mikoto-chan> bookworm: I thought so too :(
[14:30:22] <sztanpet> btw the basic idea when breaking up sequential loops is to break them down into chunks and work on the chunks in parallel, at the end re-combining the separate results into one
[14:31:55] <sztanpet> also the idea behind MapReduce
[14:33:50] *** Quits: nortoh (~nortoh@user/nortoh) (Quit: this is not importent)
[14:34:42] *** Joins: nortoh (~nortoh@bishop.xerrero.com)
[14:34:42] *** Quits: nortoh (~nortoh@bishop.xerrero.com) (Changing host)
[14:34:42] *** Joins: nortoh (~nortoh@user/nortoh)
[14:35:51] *** Joins: rvt (~rvt@librecad/rvt)
[14:37:33] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[14:45:31] <mikoto-chan> bookworm: https://go.dev/play/p/SFU94bDz7X2
[14:45:36] <mikoto-chan> is this better?
[14:45:53] <mikoto-chan> I save the calculated values in a map and check whether they exist before calculating ...
[14:46:19] <mikoto-chan> but it still takes forever for it to finish
[14:47:08] *** Quits: andreisamoila (~andreisam@79.118.113.132) (Remote host closed the connection)
[14:47:31] <bookworm> you are still calculating the same things over and over again in Sum
[14:48:14] <bookworm> also your algorithm is still quadratic, that won't change anytime soon
[14:49:24] <mikoto-chan> bookworm: so you're saying sum can be optimized too?
[14:49:30] <mikoto-chan> I don't see how
[14:50:16] <bookworm> what's the difference between Sum(100) and Sum(99) ? And I don't mean number wise, waök me through the code
[14:50:19] <bookworm> walk*
[14:52:19] <bookworm> also, I'm fairly sure there's a mathematical approach that gives the answer much quicker than your brute force approach in any case
[14:53:29] <mikoto-chan> bookworm: I just ran the Sum function for 99 and 100 but the divisors differ heavily
[14:53:56] <mikoto-chan> what point are you trying to make?
[14:54:47] <bookworm> just look at Sum, not the full output
[14:55:14] <bookworm> and as siad, ignore actual numbers, look at the code
[14:56:44] <mikoto-chan> bookworm: I see nothing wrong with Sum, I just checked the internet and this seems to be how everyone finds divisors
[14:59:21] <bookworm> you are calculating Sum from scratch $limit times, however  Sum($limit) only differs from Sum($limit-1) by a single test and addition. You can memoize prior results and simply do the calculation once and then use those values
[14:59:52] <bookworm> You are doing way too much work that you already know the answer of
[15:00:15] *** Joins: cobber (~protorom@213.240.182.77)
[15:00:16] <mikoto-chan> now I understand what you mean, 100's divisors are also 1000's divisors because 100 is a divisor of 1000
[15:00:21] <mikoto-chan> great finding
[15:00:38] <mikoto-chan> was that what you wanted to point out?
[15:03:13] <bookworm> even simpler than that actually
[15:04:46] <bookworm> do me a favor, use Sum(2) and Sum(3) and manually unroll the loop, as in make the code strictly top down without loops. Then look at the diff between them and try to figure out if you could reuse parts of the former to short circuit the latter
[15:05:36] <mikoto-chan> sure, I'm heading home now though so if there's anything else please let me know but I can promise you that I will follow your advice :)
[15:06:45] *** Quits: mikoto-chan (~mikoto-ch@2a00:1d50:3:0:d35c:a450:4ccc:94ac) (Quit: mikoto-chan)
[15:08:28] *** Joins: andreisamoila (~andreisam@79.118.113.132)
[15:11:24] *** Joins: cmj (~cmj@68.207.254.124)
[15:11:47] <bookworm> well, the other thing is simply do prime factorization with a better algorithm than brute force... Wikipedia has a list
[15:20:56] *** Joins: JosefHolzmayrThe (~theyoctoj@2001:470:69fc:105::e785)
[15:27:43] *** Joins: menace (~someone@ppp-93-104-175-20.dynamic.mnet-online.de)
[15:27:43] *** Quits: menace (~someone@ppp-93-104-175-20.dynamic.mnet-online.de) (Changing host)
[15:27:43] *** Joins: menace (~someone@user/menace)
[15:27:52] *** menace is now known as Deknos
[15:30:49] *** Quits: dalan (~dalan@194-193-164-106.tpgi.com.au) (Quit: dalan)
[15:31:15] *** Joins: dalan (~dalan@194-193-164-106.tpgi.com.au)
[15:32:32] *** Quits: nvk011 (~nvk011@cpef81d0fa691a3-cmf81d0fa691a0.sdns.net.rogers.com) (Ping timeout: 256 seconds)
[15:41:18] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[15:44:54] *** Quits: ztx (~ztx@user/ztx) (Quit: ztx)
[15:51:16] *** Joins: fef (~thedawn@user/thedawn)
[15:52:50] *** Joins: beholders_eye (~weechat@2804:1b3:70c2:d7e4:2dd:3e29:fd7e:314)
[15:52:56] *** Quits: danmurf (uid480399@user/danmurf) (Quit: Connection closed for inactivity)
[15:55:37] *** Quits: bch (~bch@S01069050ca2cbf63.ok.shawcable.net) (Ping timeout: 240 seconds)
[16:02:43] *** Joins: vigumnov (~victori@cpe-76-174-179-126.socal.res.rr.com)
[16:02:59] *** Quits: victori (~victori@cpe-76-174-179-126.socal.res.rr.com) (Read error: Connection reset by peer)
[16:08:17] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[16:10:34] *** Joins: fikran (~fikran@user/fikran)
[16:21:05] *** Quits: andreisamoila (~andreisam@79.118.113.132) (Quit: Leaving...)
[16:21:10] *** Joins: mva (znc@gentoo/developer/mva)
[16:25:48] *** Joins: evocatus (~evocatus@62.182.78.42)
[16:27:15] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[16:32:17] *** Joins: rusty (~rustyboy@82.77.225.165)
[16:35:38] *** Quits: Jmainguy (~Jmainguy@phy01.standouthost.com) (Quit: I quit yo)
[16:36:29] *** Joins: Jmainguy (~Jmainguy@phy01.standouthost.com)
[16:39:02] *** Quits: evocatus (~evocatus@62.182.78.42) (Ping timeout: 240 seconds)
[16:46:42] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[16:55:06] *** Quits: dr0n (~nabromov@94.11.23.235) (Quit: WeeChat 3.3)
[17:19:32] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:33:39] *** Quits: demsh (ldka1uktst@hermod.demsh.org) (Quit: nyaa~)
[17:35:53] *** Quits: rusty (~rustyboy@82.77.225.165) (Quit: Leaving)
[17:36:24] *** Joins: demsh (b86gbgex0y@hermod.demsh.org)
[17:43:37] *** Quits: strubbl891941988 (~strubbl@ipbcc1859d.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[18:02:10] *** Joins: strubbl891941988 (~strubbl@ipbcc1859d.dynamic.kabel-deutschland.de)
[18:02:11] *** Joins: moog (~moog@107.126.53.64)
[18:08:56] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[18:10:13] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 268 seconds)
[18:11:14] *** Quits: cobber (~protorom@213.240.182.77) (Quit: cobber)
[18:11:16] <dostoyevsky2> For UIs I have now made up my mind that I'd write them as native clients (not in Go) and then communicate with a go binary e.g. via socket...  So I can keep all my go code crosscompiling from one docker container on linux, without needing to bother with cgo.  And even when using the GUI libraries with cgo, they just don't look as appealing, so not worth the hassle
[18:13:36] *** Joins: rickybobby (~rickybob@gateway/vpn/pia/rickybob)
[18:16:26] *** Joins: rockyh (~rockyh@user/rockyh)
[18:17:48] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[18:19:32] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:a1e1:617f:5617:eda3) (Ping timeout: 240 seconds)
[18:19:54] *** Joins: fikran (~fikran@user/fikran)
[18:22:49] *** Joins: mikoto-chan (~mikoto-ch@esm-84-240-99-143.netplaza.fi)
[18:24:20] *** Joins: evocatus (~evocatus@62.182.78.42)
[18:25:17] *** Quits: rickybobby (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybobby)
[18:27:39] *** Joins: kulak (~kulak@user/kulak)
[18:37:40] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[18:38:21] *** Joins: neurocyte0132889 (~neurocyte@IP-185117070150.dynamic.medianet-world.de)
[18:38:21] *** Quits: neurocyte0132889 (~neurocyte@IP-185117070150.dynamic.medianet-world.de) (Changing host)
[18:38:21] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[18:38:27] *** Quits: evocatus (~evocatus@62.182.78.42) (Quit: Leaving)
[18:42:26] *** Joins: arinov (~arinov@178.240.190.167)
[18:50:59] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[18:51:21] *** Joins: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de)
[18:51:21] *** Quits: tane (~tane@dslb-002-201-234-223.002.201.pools.vodafone-ip.de) (Changing host)
[18:51:21] *** Joins: tane (~tane@user/tane)
[18:56:02] *** Joins: tiago (~tiago@170.11.63.94.rev.vodafone.pt)
[18:56:45] *** Quits: tiago (~tiago@170.11.63.94.rev.vodafone.pt) (Changing host)
[18:56:45] *** Joins: tiago (~tiago@user/tiago)
[18:57:15] *** Joins: darkapex_ (~darkapex@user/darkapex)
[18:57:40] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 256 seconds)
[18:58:52] *** Joins: fling (~fling@user/fling)
[19:02:46] *** Quits: rockyh (~rockyh@user/rockyh) (Ping timeout: 256 seconds)
[19:02:53] *** Joins: cobber (~protorom@213.240.182.77)
[19:04:30] <sztanpet> i had some success with fyne.io not being as much of a pain in the ass in that regard but yea
[19:05:30] <tiago> Hi all, I've got an optimisation question here with a solution that's not obvious for me.
[19:05:30] <tiago> I'm processing many structs per second, and I want to know if one of the fields starts with a string in a list of 1k small strings (~15 chars each) and discard the struct in that case with no further processing.
[19:05:31] <tiago> What would be the obvious way of solving this for you? Build a huge regex? Build a tree by hand? Simply use a map of struct{}?
[19:05:43] <tiago> Hi all, I've got an optimisation question here with a solution that's not obvious for me.
[19:05:43] <tiago> I'm processing many structs per second, and I want to know if one of the fields starts with a string in a list of 1k small strings (~15 chars each) and discard the struct in that case with no further processing.
[19:05:44] <tiago> What would be the obvious way of solving this for you? Build a huge regex? Build a tree by hand?
[19:05:48] <tiago> Sorry for the double message
[19:06:26] <tiago> I'm thinking the map of struct{} doesn't work because I need to know HasPrefix, not 1:1 match
[19:07:23] <sztanpet> if you are dealing with structs, your paying for the price of reflection already so you are limiting yourself from the outset, its just microoptimization
[19:08:56] <sztanpet> i would begin wit ha regex, measure and see if you need more complexity because its a deep rabbit hole
[19:08:56] <tiago> I'm receiving a pointer to a struct from a channel, then I want to know if a specific field in that struct begins with a string in the big list. I don't need to know which one
[19:09:05] *** Joins: hackers (~self@user/hackers)
[19:09:16] <tiago> I'll run a small benchmark
[19:09:29] <siXy> If you know the chars of the string, I'd avoid a regex.
[19:09:35] *** Joins: rockyh (~rockyh@user/rockyh)
[19:09:40] <tiago> What do you mean by that?
[19:10:06] <sztanpet> you could generate some go code from your strings too if you really need the speed
[19:10:31] <siXy> regexs in go aren't as bad as some other langs, but they still come with some penalty. If you can just compare mystruct.fieldname[0:15] == "foobar" that'll be faster.
[19:10:58] <sztanpet> thousands of prefixes tho, that will be a pain to hand-role
[19:12:26] <siXy> oh I missed that line, yeah. That would be a pain. You could make the matches map keys and do a _, ok := mymap[mystruct.fieldname[0:15]] though
[19:12:29] <tiago> Even doing it 1000x times for each string? My intuition is this is the kind of thing for something like a binary tree, but I'm quite out of my zone of comfort. My understanding is a compiled (simple) regex like "(a|aab|aac)" will work sort of like that
[19:12:42] <crowbar> do you have the naive implementation working? nested loop with HasPrefix?
[19:12:46] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[19:12:48] <tiago> many of the strings in the list start with the same chars
[19:12:51] <siXy> tiago: see map key thing ^, I think that'll be faster.
[19:13:09] <tiago> not all strings have the same length
[19:13:34] <tiago> so that probably won't work
[19:13:37] *** Quits: arinov (~arinov@178.240.190.167) (Ping timeout: 240 seconds)
[19:15:09] <sztanpet> how many unique prefix lengths do you have tho
[19:15:13] <cobber> I would go with a map[string]bool like siXy - take the prefix from each struct, it gets hashed once and returns a bool
[19:15:37] <siXy> no need for the bool. But you would need a smallish set of prefix lengths to make it reasonable
[19:16:57] <tiago> The lengths are between 4 and 39
[19:17:09] *** Joins: arinov (~arinov@178.240.190.167)
[19:17:34] <cobber> but a map hast to map to something, doesn't it? what would be the smallest "thing" to put in the map?
[19:17:34] <sztanpet> equally distributed? doubtful
[19:17:35] <tiago> So I would need to check the map 35 times for each string
[19:17:54] <tiago> not equally distributed, most are around 6 to 19
[19:18:15] <cobber> do the prefixes have any "known qualities", e.g.: punctuation terminator etc.?
[19:18:26] *** hackers is now known as remote
[19:19:41] <tiago> There's a separator indeed. Perhaps a map of maps would work?
[19:19:48] <tiago> But then I would need to split the string
[19:20:11] <tiago> I'm building a benchmark right now with a bunch of options
[19:20:15] <cobber> just read today - go 1.18 has strings.Cut(), might be an option
[19:21:21] <cobber> splitting a string is basically just text[:n], once you know where n is :-)
[19:25:27] <siXy> tiago: https://go.dev/play/p/yLYgkPwD0md is roughly what I was thinking of
[19:25:58] <tiago> Thank you siXy, I'll add that test case
[19:26:05] <tiago> I'll report back once I have results
[19:27:23] <siXy> please do, I'd be interested to hear how it pans out in practice.
[19:33:52] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca) (Remote host closed the connection)
[19:35:17] <cobber> assuming you have a fixed separator or terminator, you could try something like https://go.dev/play/p/IR-8hrJnMsX?v=gotip - not sure if struct{} is faster/smaller than bool - perhaps worth a try :-)
[19:36:05] *** Quits: saschagrunert (~saschagru@46.128.124.48) (Remote host closed the connection)
[19:37:50] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[19:42:48] <siXy> cobber: yes, an empty struct is smaller than bool.
[19:43:54] <siXy> But yes that would be another worthwhile comparison.
[19:44:41] <cobber> surprising - doesn't the empty struct need to know that it's an empty struct? I don't recall seeing that specified anywhere (interface{} sure, but not struct{})
[19:47:29] <siXy> cobber: to be specific - struct{} is 0 bytes, bool is 1 byte.
[19:48:10] <cobber> something new every day - I guess it makes sense...
[19:48:59] *** Quits: jaca122 (~Thunderbi@89-65-136-254.dynamic.chello.pl) (Quit: jaca122)
[19:50:57] <pjs> for a new app I'm using 1.18 (gotip) but gopls/golint won't stop complaining about 1.18 features (ie, using `any`). When installing gotip, do the additional tools not also come with it?
[19:53:34] <siXy> pjs: Follow these instructions: https://github.com/golang/tools/blob/master/gopls/doc/advanced.md
[19:55:34] <explodes> Where do I post my mapreduce library
[19:55:50] <explodes> It has generics and uses any
[19:56:25] <explodes> Just kidding around, I'm really surprised I haven't seen a lot of posts with these titles (yet?)
[19:56:47] <explodes> I imagined a cambrian explosion of generic libraries
[19:57:25] <cmj> they're coming I'm sure
[19:58:19] <borring> Cambrian explosions are good! Then I just have to wait for other people to curate the libraries for me 😆
[20:01:59] <pjs> siXy: thanks!
[20:01:59] <bookworm> explodes: there's a gazillion of those on Reddit, not sure which corner of the internet you hang out in
[20:02:25] <explodes> exclusively neopets and libera
[20:02:52] <pjs> bookworm: yea, like 4 posted in the last week lol
[20:03:54] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[20:06:39] *** Joins: mrig (~mrig@user/mrig)
[20:18:14] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:499c:186d:f10d:6a24)
[20:20:02] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com)
[20:22:00] *** Joins: et_ (~et@user/et)
[20:22:37] *** Quits: et (~et@user/et) (Ping timeout: 240 seconds)
[20:22:37] *** et_ is now known as et
[20:23:38] *** Quits: tiago (~tiago@user/tiago) (Quit: Client closed)
[20:26:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[20:27:29] *** Joins: tiago (~tiago@170.11.63.94.rev.vodafone.pt)
[20:27:33] *** Quits: tiago (~tiago@170.11.63.94.rev.vodafone.pt) (Changing host)
[20:27:33] *** Joins: tiago (~tiago@user/tiago)
[20:29:15] *** Joins: fikran (~fikran@user/fikran)
[20:33:48] <tiago> siXy and others, I've got results!
[20:33:59] <tiago> BenchmarkLoop-8                     	57102790	      1318 ns/op
[20:33:59] <tiago> BenchmarkMap-8                      	408443359	       177.8 ns/op
[20:34:00] <tiago> BenchmarkMapNestedSplit-8           	568299326	       127.0 ns/op
[20:34:00] <tiago> BenchmarkMapNestedSplitAsNeeded-8   	1000000000	        19.45 ns/op
[20:34:01] <tiago> BenchmarkRegexp-8                   	  289986	    218322 ns/op
[20:34:15] <tiago> I'll send a playground
[20:37:10] <siXy> It's not 100% clear to me what the variations are from the names, so yeah a playground would be nice.
[20:39:01] <siXy> Not surprised that regex is significantly worse though.
[20:43:09] <tiago> Ok, there were problems here, consider those results invalid
[20:46:59] <cobber> you know the 90-90 rule right? the first 90% takes 90% of the effort, the rest takes the other 90% :-)
[20:49:10] *** Joins: philbert (~philbert@63.162.123.38)
[20:49:10] *** Joins: tewrvd^ (~tewrvd@64.253.22.77)
[20:57:56] *** Quits: flynn (~mcbloch@user/flynn) (Quit: The Lounge - https://thelounge.chat)
[20:59:59] *** Joins: flynn (~mcbloch@user/flynn)
[21:01:17] *** Joins: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[21:02:17] *** Joins: jla (~jordi@64.225.79.195)
[21:03:50] *** Joins: esro (~esro@nat1.krakowskiinternet.pl)
[21:06:25] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[21:06:43] <ash_worksi> what do typical grpc endpoints look like?
[21:10:26] *** Joins: NyaaTheKitten (~CalculusC@user/calculuscat)
[21:10:37] *** Parts: NyaaTheKitten (~CalculusC@user/calculuscat) (Channel connection terminated)
[21:11:20] *** Joins: arcatech (~arcatech@user/arcatech)
[21:12:27] *** Joins: saschagrunert (~saschagru@46.128.124.48)
[21:12:27] *** Quits: saschagrunert (~saschagru@46.128.124.48) (Read error: Connection reset by peer)
[21:13:20] *** Joins: saschagrunert (~saschagru@46.128.124.48)
[21:25:00] *** Quits: arinov (~arinov@178.240.190.167) (Ping timeout: 256 seconds)
[21:26:39] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-19-70-31-33-162.dsl.bell.ca)
[21:28:17] *** Joins: tuskkk____ (uid18470@id-18470.tinside.irccloud.com)
[21:35:45] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[21:36:50] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[21:51:43] *** Quits: saschagrunert (~saschagru@46.128.124.48) (Quit: Leaving)
[21:52:41] *** Joins: arcatech (~arcatech@user/arcatech)
[21:54:25] *** Joins: The_Loko (~The_Loko@86.127.232.141)
[21:54:42] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[21:58:42] <tiago> siXy: https://go.dev/play/p/QWUfjagVIii
[21:58:45] <tiago> not the prettiest
[21:59:12] <tiago> using Split() makes it significantly slower, as going to the end of the string is most times not needed
[22:00:07] <tiago> the latest benchmark results are in that playground, the data used is not the example one in the playground, but 1k prefixes, and 10k test strings
[22:01:07] <tiago> also, the nested maps are quite a bit faster than just a regular map, mostly because I forgot to mention "aaa.bbb" as a prefix should only match "aaa.bbb" and "aaa.bbb.ccc" but not "aaa.bbbb"
[22:01:20] *** Joins: findiggle (~user@2601:601:9f00:5c60:dfe7:ec34:7bba:73c5)
[22:04:59] *** Joins: arcatech (~arcatech@user/arcatech)
[22:08:15] *** Quits: tewrvd^ (~tewrvd@64.253.22.77) (Remote host closed the connection)
[22:22:24] *** Quits: tiago (~tiago@user/tiago) (Quit: Client closed)
[22:23:05] *** Joins: Led_Zeppelin2 (~user@cpe-68-172-241-89.nj.res.rr.com)
[22:23:06] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[22:23:26] <Led_Zeppelin2> I am trying to setup a ctrl+c handler. I have this https://go.dev/play/p/U1ZbG68LbTj. But for some reason, when I run this code, ctrl+c is keep getting triggered. Not sure why!
[22:24:09] <seebs> i mean, i'd expect that program to just exit instantly
[22:24:18] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[22:24:53] <seebs> you might want to specify the signal you care about, otherwise you get ALL signals.
[22:25:20] <foobaz> you need more arguments to signal.Notify, i call it like this: signal.Notify(c, os.Interrupt, syscall.SIGTERM)
[22:25:25] <seebs> 	signal.Notify(c, os.Interrupt)
[22:25:33] <Led_Zeppelin2> https://go.dev/play/p/9IyvILG8xfw, later on I have stuff there.
[22:26:17] <Led_Zeppelin2> ugg!
[22:26:23] <Led_Zeppelin2> you are right. that was it.
[22:26:25] *** Joins: arcatech (~arcatech@user/arcatech)
[22:30:28] <bloony> When I run this I get this same error that the playground gives me.. with gopls in nvim I get "cannot call pointer method Run on A"  .. this last one seems more correct.. but anyway is there a way to get this working?  https://go.dev/play/p/mCMzjT0d5jJ
[22:36:58] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[22:37:26] <bloony> hmm.. I realized if New returns a pointer it works.. but is there a way to not return a pointer from  New?
[22:38:36] *** Joins: fikran (~fikran@user/fikran)
[22:42:37] <bpalmer> It's very conventional that something named "New" or "NewFoo" returns a pointer (compare to the built-in function new()).
[22:43:12] <bpalmer> but fundamentally, to call a method with a pointer receiver, the thing has to be addressable, and you can't take the address of a return value until you assign it somewhere.
[22:43:24] *** Quits: jla (~jordi@64.225.79.195) (Quit: Leaving.)
[22:44:01] <bloony> Right I see
[22:44:04] <fizzie> Of course the specific `Run` method there doesn't _need_ a pointer receiver.
[22:44:48] <bloony> I use New like that quiet often though.. making new struct types.. and avoiding pointer if I don't have to use it.
[22:45:37] <bloony> fizzie:  yes thats true.. but I need one in the code I am working on.. should have made a more relevant testcase :)
[22:47:10] <bpalmer> bloony: you'll lightly confuse other go programmers. I suggest coming up with a new naming scheme (perhaps Build or Create)
[22:48:26] <bloony> yes, I'll go with Create I think..
[22:49:07] <bpalmer> nothing stops a user from creating it themselves, btw, e.g., 'var a A' <-- they'll get a zero-initialized value.
[22:49:49] *** Quits: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Quit: dalek-caan)
[22:49:57] *** Quits: remote (~self@user/hackers) (Ping timeout: 240 seconds)
[22:50:21] *** Joins: rbn (~rbn@user/rbn)
[22:50:47] <bloony> yes, I use New for when some fields aren't initilalized at first or if there is a make or something to create fields..
[22:51:53] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[22:53:49] *** Quits: cobber (~protorom@213.240.182.77) (Read error: Connection reset by peer)
[22:55:22] <bloony> hmm.. look like Make() is conventional name for it?
[22:55:40] <bloony> for when not returning a pointer
[22:56:40] <bpalmer> Yeah, particularly when there is a make() or something for internal fields involved.
[22:58:35] <tuskkk____> can someone recommend a source to hire dev with good go dev experience?
[22:59:15] <b0nn> Tech recruitment is broken, from the interviewers pov, and from the interviewees
[22:59:25] <tuskkk____> oh
[23:00:16] <noord> b0nn: which part is broken?
[23:00:20] <tuskkk____> this one is a one time project, its greenfield, has a potential impact
[23:00:21] <b0nn> You can advertise on the slack channels. and your locations slack channels (eg. Australians tend to advertise in the go jobs, and australia, and melbourne, sydney, brisbane channels
[23:01:16] <tuskkk____> yeah go slack is on my mind, it seems more for jobs though, not projects
[23:02:10] <b0nn> There's no reason a project based contract cannot be advertised
[23:02:18] <b0nn> I mean, just be upfront
[23:02:32] <tuskkk____> yeah, will try
[23:02:54] <b0nn> There's a couple of reddit channels too, no idea on their efficacy
[23:03:06] <b0nn> er go job subreddits
[23:03:11] <b0nn> sorry channels on the brain
[23:03:41] <tuskkk____> I see, thanks, will try that!
[23:04:09] <b0nn> noord: when you hire a plumber, or a lawyer, how do you know how to identify the quality of that person(s) skills
[23:06:07] <noord> am I plumber to hire another plumber ?
[23:07:01] <b0nn> Right now, what about an Uber driver if that makes it better
[23:07:47] <b0nn> The point is, largely, it's a random lottery on their skills, you mostly base it on the references of other people who have no idea on the abilities
[23:07:48] <noord> I prefer them observing while they are working
[23:08:06] *** Quits: szahid (~szahid@srv09.mikr.us) (Changing host)
[23:08:06] *** Joins: szahid (~szahid@user/szahid)
[23:08:12] <noord> I prefer observing them*
[23:08:24] <b0nn> right, so, on to tech recruitment, how long are you going to be observing before you know the level of their skills
[23:09:00] <b0nn> 30 minutes? 30 days? 180 days?
[23:09:10] <noord> 2 hours
[23:09:26] <noord> b0nn: two interviewers 1 hour sessions
[23:09:37] <b0nn> yeah - that's a disaster
[23:09:47] *** Quits: szahid (~szahid@user/szahid) (Quit: leaving)
[23:09:58] <b0nn> All those do is assess anxiety
[23:10:26] <b0nn> https://www.sciencedaily.com/releases/2020/07/200714101228.htm
[23:12:11] <noord> b0nn: also, good engineers resumes contains hints
[23:13:02] <b0nn> what you are mostly saying is "I have a hunch" - which is really a lottery
[23:13:33] <b0nn> I mean, we've all made bad hires
[23:13:39] <b0nn> and we've all hit gold
[23:13:49] <b0nn> but it's been luck more than skill
[23:14:18] <noord> b0nn: `designed xx subsystem from scratch, improved latency, throughtput, memory footprint, etc`
[23:14:18] *** Joins: steerpike (~echelon@gateway/tor-sasl/steerpike)
[23:14:25] <noord> than expect to explain the details
[23:14:30] <steerpike> hi, how do i make goreleaser invoke the gccgo toolchain?
[23:14:52] <b0nn> noord: All that is is "Can they talk the talk"
[23:15:04] <b0nn> I refer you back to the axiety test
[23:15:16] <b0nn> anxiety paper*
[23:15:45] <noord> b0nn: algo questions also helps
[23:16:24] <b0nn> I mean, how many times do I need to say "You're only testing anxiety" before you'll stop and think about it
[23:16:32] <noord> b0nn: it doesn't have to be hard
[23:16:46] <b0nn> And recency whilst I'm at it
[23:17:20] <b0nn> steerpike: sorry I don't use goreleaser so I don't know
[23:17:32] <b0nn> ^ I didn't want you to think that you'd been ignored
[23:18:56] <seebs> strong agreement on the general issue of whiteboard interviews being awful.
[23:19:28] *** Joins: tiago (~tiago@170.11.63.94.rev.vodafone.pt)
[23:19:41] <seebs> you can improve them somewhat if you are specifically training interviewers on being calming and you take steps to try to mitigate the anxiety, and things like "let people use whatever tools they're comforrtable with".
[23:19:45] <b0nn> I've been trying to think of a good way to do it, because whoever figures it out is onto a billion dollar winner
[23:20:12] <steerpike> b0nn: thanks
[23:20:26] <seebs> triplebyte's been focusing on quizzes which they think are doing a decent job of evaluating people better, anyway.
[23:20:29] <bpalmer> after doing a lot of VC interviews, though ... are whiteboard interviews really so bad?
[23:20:30] <seebs> and they have pretty solid numbers.
[23:20:42] <seebs> they're bad at giving accurate information about programming ability.
[23:20:59] <bpalmer> yes, but I'm just comparing to VC interviews.
[23:21:06] <seebs> ohhh
[23:21:07] <seebs> well yeah
[23:21:11] <noord> b0nn: pushing someone to answer all questions is meaningless, there is no point to ask someone who already admitted, doesn't know
[23:21:39] <seebs> the famous one i remember is Paul Graham, i think, having a thing of providing people with snacks, and having some nuts and stuff and some candy, and never ever investing in anyone who takes candy because that implies "lack of self-control"
[23:22:09] <foobaz> whiteboard interviews are fine, the goal should be to get the person talking about something they are skilled in and that is relevant to the job
[23:22:09] <seebs> gosh that sure is a completely nondiscriminatory test of actual business acumen right there, good job
[23:22:39] *** Quits: tiago (~tiago@170.11.63.94.rev.vodafone.pt) (Client Quit)
[23:22:54] <foobaz> how is that discriminatory?
[23:23:09] <foobaz> it sounds like the marshmallow test
[23:23:09] <b0nn> ask anyone with a nut allergy
[23:23:16] <seebs> yeah, the marshmallow test is idiotic also
[23:23:23] <seebs> it turns out not to test anything like what it's supposedly testing
[23:23:35] <seebs> for instance, say you're bored and you sort of want a marshmallow, but don't actually particularly want two
[23:23:35] *** Joins: isflavior (~isflavior@2001:8a0:5dd8:4100:5918:fc97:aab5:e6ef)
[23:24:00] <seebs> that's not "lack of self control", that's "i'm going to be bored for 15 minutes with nothing to do unless i play with this marshmallow, and then i'll have stuff going on and not really care whether i have another marshmallow"
[23:24:50] <seebs> or like, with adults: what if you're diabetic and took insulin but then your day has been more active than you expected and you've burned too much sugar and you think you need to top up a bit to avoid having Too Much Insulin Not Enough Sugar, which *can kill you*?
[23:25:07] <seebs> then you should *probably have sugar*.
[23:25:15] *** Joins: jla (~jordi@64.225.79.195)
[23:26:02] <seebs> And the thing is, it's likely to be at least somewhat preference, habit, upbringing, various other things, none of which are actually the same as "lack of self-control".
[23:26:04] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:26:23] <seebs> It's lack of self-control if you actually believe you should do a thing but don't because you don't have the self-control to refrain from doing something that feels better in the short term.
[23:26:23] <b0nn> yeah cultural factors are huge in those situations
[23:26:35] <seebs> But maybe you just *like candy*, and there's not actually a problem with that.
[23:26:47] <noord> b0nn: another way is giving self evaluation form to candidate score itself from 0 to 10
[23:26:53] <seebs> Maybe you grew up poor and you still take calories when you can get them. That's not necessarily a bad sign in someone running a startup!
[23:27:37] <b0nn> noord: you might as well be asking people their star signs
[23:27:58] <noord> 0 I hear it first time, 9 I wrote a book about it, 10 I designed and implemented it
[23:28:15] <b0nn> 6 I'm humble
[23:28:43] <noord> 6-7 range contains lots of good developers
[23:28:46] <b0nn> 5 I compare myself to Rob Pike and Dave Cheney
[23:29:17] <b0nn> 10 I have an ego the size of christmas
[23:29:30] <b0nn> You've not evaluated anything
[23:30:05] <noord> the questions changes according to stars
[23:30:38] <b0nn> what's your ability to cook
[23:30:42] <b0nn> 1-10
[23:30:47] <noord> 3-4
[23:30:57] <b0nn> compared to who?
[23:31:06] <noord> chiefs
[23:31:32] <noord> I can follow simple instructions
[23:31:53] <noord> sometimes I need guidance
[23:32:07] <b0nn> from that does anyone here have any idea on your true level of ability?
[23:33:23] <noord> b0nn: the meaning stars also explained in evaluation form
[23:33:29] <bpalmer> I'll just say , that sort of question to me is more about how strictly to evaluate somebody and what questions to ask.
[23:34:11] <b0nn> noord: am I a better cook than you, or are you better than I?
[23:34:29] <noord> b0nn: I am not chief so I can not evaluate it
[23:34:33] <b0nn> chef
[23:34:40] <noord> whatever
[23:34:46] <b0nn> you eat though, don't you?
[23:35:14] <bpalmer> If somebody says they're an intermediate go programmer, I'm probably not going to bother asking about garbage collector implementation strategies or deadlock detection; if they say they're rob pike, I might.
[23:35:23] <wnd> If only cooking instructions were not only simple, but also clear and unambiguous. Something unlike "cook until soft", "cook until light brown", and "add salt to taste".
[23:35:53] <b0nn> I think the key problem is, it's subjective
[23:36:09] <b0nn> my idea of an intermediate might not match someone elses
[23:36:11] <noord> wnd: someone which is good at it could identify problems in recipe
[23:36:50] <tuskkk____> I kind of like where the discussion is going. What would be your idea interview process b0nn?
[23:36:59] <tuskkk____> ideal*
[23:37:00] <b0nn> I honestly don't know
[23:37:11] <b0nn> I've been looking for a solution for about 5 years
[23:37:16] <b0nn> maybe longer
[23:37:22] <tuskkk____> Ok, then what do you use right now when hiring?
[23:37:37] <b0nn> homework and chat
[23:38:02] <noord> bpalmer: exactly
[23:38:14] <b0nn> but all the chat ever shows me is how nervous/anxious people are
[23:38:33] <b0nn> (although it does weed out the over-confident types)
[23:38:45] <tuskkk____> I see, because I was having this exact chat about anxiety with some of my colleagues, then we came up with the idea of pair programming over the interview, after having couple of those, its all the same thing.
[23:39:47] <tuskkk____> then also there is this tradeoff of time with having a homework, if you are in a hiring rush, you have to allocate engineers to grade it, which becomes a bottleneck.
[23:39:49] <seebs> https://twitter.com/chordbug/status/1471599769780994051
[23:39:55] <seebs> you really want "I can do it a little"
[23:40:43] <b0nn> tuskkk____: yes
[23:40:54] <seebs> I did once have a company skip technical evaluation when I applied to them, because one of their senior people knew what "pseudo" was and they didn't see any point in trying to evaluate my technical chops at that point.
[23:40:55] <tuskkk____> that's deep, I am personally at the stage of "I don't understand it at all"
[23:40:59] <b0nn> seebs: and figuring out which side of the curve they're on :)
[23:41:22] <noord> b0nn: think about it, why would someone ask reflection/generics/introspection questions to new grad? that is waste of time
[23:41:46] <b0nn> grads are normally really good on theory - because it's fresh in their minds
[23:43:36] <noord> in theory there is no difference between theory and practice, in practice ...
[23:44:36] <b0nn> yeah - wonder which one you're seeing in a whiteboard interview...
[23:45:54] <seebs> someone had an Interesting question, for C devs: write a function which adds 1 to an integer but does not use the + or - characters at all.
[23:50:04] *** Quits: Cork (~Cork@user/cork) (Ping timeout: 256 seconds)
[23:53:03] <b0nn> what's the answer.. and gates?
[23:53:33] <b0nn> er, by that I meansome combintation of and, not, and whatever else
[23:53:33] *** Joins: dalek-caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[23:53:40] <noord> b0nn: bit twiddling
[23:53:53] <bloony> https://go.dev/play/p/MuLguXKZSh2
[23:53:59] <bloony> I cheated though :p
[23:54:35] <ikke> I see + characters :)
[23:54:47] <bloony> :'(
[23:54:52] <b0nn> noord: what is and, not referring to?
[23:54:58] <bloony> oh wait
[23:55:02] <bpalmer> Many stupid bit twiddling tricks in C are actually invoking implementation defined behavior.
[23:55:26] <noord> b0nn: it mean bit operations and,or,xor etc
[23:55:31] <bpalmer> As they assume two's complement representation, and depending on types may ignore padding and illegal epresentations
[23:56:16] <bpalmer> (although recent C++ versions do mandate two's complement)
[23:57:19] <noord> b0nn: for example this means multiplying by 7,  (n << 3) - n
[23:57:28] *** Quits: amk (~amk@109.255.169.126) (Remote host closed the connection)
[23:58:06] *** Joins: amk (~amk@109.255.169.126)
[23:58:17] * bloony sent a code block: https://libera.ems.host/_matrix/media/r0/download/libera.chat/287f3095208fa7e1d757b998302d5b09df467ec1
[23:58:27] <bloony>  * ```... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/715cc04de93b01f02e8a137167edf32623c43b4b)
[23:59:36] <bpalmer> bloony: better to make i a uint there rather than int.
