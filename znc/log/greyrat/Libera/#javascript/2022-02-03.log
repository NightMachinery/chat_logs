[00:00:10] <systemfault> flughafen: Maybe there's an await missing... maybe you don't totally understand async functions in JS and it hasn't resolved at the point where you're filtering... maybe the predicate you use to filter is wrong... could be so many things.
[00:00:51] <systemfault> flughafen: As long as you don't show us a snippet of code... preferably something that we can run on a "live pastebin" like jsfiddle/codesandbox/etc
[00:01:04] <systemfault> It's really difficult to help...
[00:01:34] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[00:02:05] <flughafen> https://bpa.st/IOGQ
[00:02:37] *** Joins: ssiyad (~ssiyad@user/ssiyad)
[00:02:49] <systemfault> flughafen: What are you expecting .filter to do?
[00:02:50] <austincheney> test automation with puppeteer
[00:03:10] <flughafen> I want to just return the objects that end with the string
[00:03:28] <austincheney> flughafen, how do you mean end with string?
[00:03:38] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:03:48] <systemfault> flughafen: And that console.log at line 36, it it printing what you expect?
[00:03:49] <austincheney> flughafen, do you mean the last value on the object is of type string?
[00:04:10] <flughafen> endsWith() like someurl/foo/bar/$my-string-here-filter
[00:04:42] <systemfault> flughafen: Because 'ans' should be an array, and arrays don't have a .url() function
[00:06:33] <austincheney> !mdn endswith @ flughafen
[00:06:34] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:60a3:a532:ba52:cb9d)
[00:06:34] <jellobot> flughafen, endsWith() method determines whether a string ends with the characters of a specified string, returning true or false as appropriate. https://mdn.io/endswith
[00:06:39] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 250 seconds)
[00:06:52] <austincheney> endswith is a string method, and so it cannot be used on an object
[00:07:09] <ljharb> objects can't "end with" a string, only strings can
[00:07:45] *** Quits: Albright (~Albright@149.28.13.173) (Quit: ZNC 1.8.2 - https://znc.in)
[00:07:45] <flughafen> But I'm comparing the page.url().endsWith
[00:07:49] *** Joins: audiobirb (~audio@user/audio)
[00:08:08] <austincheney> flughafen, page.url() returns a string value
[00:08:45] <flughafen> yes.
[00:08:48] *** Joins: heatwave (~heatwave@103.248.94.247)
[00:08:55] *** Joins: Albright (~Albright@149.28.13.173)
[00:09:41] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 250 seconds)
[00:10:03] <systemfault> Doesn't change the fact that .filter returns an array... and that arrays don't have .url()
[00:11:35] *** Joins: eXtr3m0 (~eXtr3m0@p4fd3aa8f.dip0.t-ipconnect.de)
[00:12:05] *** Joins: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[00:12:52] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:14:07] *** Quits: eXtr3m0 (~eXtr3m0@p4fd3aa8f.dip0.t-ipconnect.de) (Changing host)
[00:14:07] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[00:14:39] <flughafen> yeah i tried something like this as a test  openPages[i].url().endsWith('.com'))   and that didn't return anything.
[00:15:01] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:16:41] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:17:01] *** Joins: SchmoSeph (uid530771@tinside.irccloud.com)
[00:17:10] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[00:18:20] <austincheney> I am looking at https://chromedevtools.github.io/devtools-protocol/tot/Page/ and do not see page.url() so that must be something puppeteer specific.  CDP is the standard on which browser automation tools are based.
[00:18:21] <systemfault> Line 34 for example.. doesn't have "return"
[00:18:29] <systemfault> So many small things that are wrong...
[00:18:40] <systemfault> Update your code... let us look at it again.
[00:18:47] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[00:20:10] *** Quits: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Quit: Leaving.)
[00:20:39] *** Joins: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[00:21:17] *** Quits: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Client Quit)
[00:21:31] *** Joins: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[00:23:27] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:25:19] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[00:25:58] *** Quits: dan01 (~dan01@2a02:2f0f:311c:1500:b44a:f768:9ead:27f) (Read error: Connection reset by peer)
[00:26:34] <flughafen> systemfault: it's just printing out [] en empty array
[00:27:37] *** Joins: pluri (~pluri@user/pluri)
[00:27:54] <systemfault> flughafen: But arrayOfObject is not empty? And you're sure that one of the urls has 'signature-request' at its end, without extra-space or other character?
[00:29:29] <flughafen> chrome-extension://nkbihfbeogaeaoehlefnkodbefgpgknn/notification.html#confirm-transaction/4725363618388538/signature-request
[00:29:39] <flughafen>  <- from the loop of all the page urls
[00:38:13] *** Quits: deniska (~deniska@user/deniska) (Remote host closed the connection)
[00:41:32] *** Quits: Tempesta (~Tempesta@user/tempesta) (*.net *.split)
[00:41:32] *** Quits: kinabalu (~kinabalu@about/java/kinabalu) (*.net *.split)
[00:41:32] *** Quits: JayDoubleu_ (sid339529@id-339529.hampstead.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: Ownix (sid11917@id-11917.helmsley.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: patchie (sid504252@id-504252.ilkley.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: merced (merced@user/merced) (*.net *.split)
[00:41:32] *** Quits: Spr0cket (sprocket@user/Spr0cket) (*.net *.split)
[00:41:32] *** Quits: c4017w_ (~c4017@209.52.68.8) (*.net *.split)
[00:41:32] *** Quits: trevors (~trevors@user/trevors) (*.net *.split)
[00:41:32] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: Betal (~Betal@user/betal) (*.net *.split)
[00:41:32] *** Quits: skillbot1 (~skillbot@user/skillbot) (*.net *.split)
[00:41:32] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (*.net *.split)
[00:41:32] *** Quits: mat001 (~mat001@72.28.108.216) (*.net *.split)
[00:41:32] *** Quits: MootPoot (uid444585@ilkley.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: hughrawlinson_ (sid11243@ilkley.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: daoumilseitek (~daoumilse@164.96.146.77.rev.sfr.net) (*.net *.split)
[00:41:32] *** Quits: keypusher (keypusher@user/keypusher) (*.net *.split)
[00:41:32] *** Quits: abraham (~abraham@143.244.185.86) (*.net *.split)
[00:41:32] *** Quits: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz) (*.net *.split)
[00:41:32] *** Quits: chovy (chovy@tilde.club) (*.net *.split)
[00:41:33] *** Quits: Relms-Wah (Relms@user/relms) (*.net *.split)
[00:41:33] *** Quits: \mSg (mSg@user/msg/x-0285936) (*.net *.split)
[00:41:33] *** Quits: AJTJ (~AJTJ@d205-234-49-159.yt.northwestel.net) (*.net *.split)
[00:41:33] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (*.net *.split)
[00:41:33] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (*.net *.split)
[00:41:33] *** Quits: robyn (~robyndrak@user/robyndrake) (*.net *.split)
[00:41:33] *** Quits: The_Tablet (~tablet@user/the-tablet) (*.net *.split)
[00:41:33] *** Quits: ttys000 (~ttys000@user/ttys000) (*.net *.split)
[00:41:33] *** Quits: APic (~apic@apic.name) (*.net *.split)
[00:41:33] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) (*.net *.split)
[00:41:33] *** Quits: lefteye (~wbrawner@c-67-190-106-99.hsd1.co.comcast.net) (*.net *.split)
[00:41:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (*.net *.split)
[00:41:33] *** Quits: Tabmow (~tabmow@user/tabmow) (*.net *.split)
[00:41:33] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (*.net *.split)
[00:41:33] *** Quits: erry (~erry@errietta.me) (*.net *.split)
[00:41:33] *** Quits: sheetjs (~sheetjs@user/sheetjs) (*.net *.split)
[00:41:33] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (*.net *.split)
[00:41:33] *** Quits: vbgunz (~vbgunz@35.141.71.47) (*.net *.split)
[00:41:33] *** Quits: Stanley (~stanley@d66-183-88-69.bchsia.telus.net) (*.net *.split)
[00:41:33] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (*.net *.split)
[00:41:33] *** Quits: Nnnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com) (*.net *.split)
[00:41:33] *** Quits: Joel (~jjshoe@user/joel) (*.net *.split)
[00:41:33] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (*.net *.split)
[00:41:33] *** Quits: Alexendoo (~Alex@144.21.50.247) (*.net *.split)
[00:41:33] *** Quits: dskull (~dskull@user/dskull) (*.net *.split)
[00:41:33] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (*.net *.split)
[00:41:33] *** Quits: kcrk (~kcrk@user/kcrk) (*.net *.split)
[00:41:33] *** Quits: monokrome| (~monokrome@50.215.11.140) (*.net *.split)
[00:41:33] *** Quits: justGhost (~justache@user/justache) (*.net *.split)
[00:41:33] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (*.net *.split)
[00:41:33] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (*.net *.split)
[00:41:33] *** Quits: sunyour (~sunyour@129.226.182.99) (*.net *.split)
[00:41:33] *** Quits: coc0nut (~coc0nut@user/coc0nut) (*.net *.split)
[00:41:33] *** Quits: hassoon__ (~hassoon@triton.blinkenshell.org) (*.net *.split)
[00:41:33] *** Quits: webstran- (~webstrand@user/webstrand) (*.net *.split)
[00:41:33] *** Quits: philivey9426 (~polarizin@188.166.72.81) (*.net *.split)
[00:41:33] *** Quits: cryocaustik7 (~cryocaust@user/cryocaustik) (*.net *.split)
[00:41:34] *** Quits: scoobydoo (~scooby@user/scoobydoo) (*.net *.split)
[00:41:34] *** Quits: Swant (~swant@libera/staff/swant) (*.net *.split)
[00:41:34] *** Quits: jellobot (~jellobot@li334-26.members.linode.com) (*.net *.split)
[00:41:34] *** Quits: llorllale (~llorllale@198.98.119.85) (*.net *.split)
[00:41:34] *** Quits: ethoxy (~root@bison.alphaw0lf.xyz) (*.net *.split)
[00:41:34] *** Quits: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (*.net *.split)
[00:41:34] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[00:41:34] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (*.net *.split)
[00:41:34] *** Quits: hassoon_ (hassoon@user/hassoon) (*.net *.split)
[00:41:34] *** Quits: Unfixed (~Jake@64.31.33.140) (*.net *.split)
[00:41:34] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[00:41:34] *** Quits: gjvc (~gjvc@user/gjvc) (*.net *.split)
[00:41:34] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[00:41:34] *** Quits: dlam (~dlam@dlam.me) (*.net *.split)
[00:41:34] *** Quits: les_ (~whome@user/les) (*.net *.split)
[00:41:34] *** Quits: Lewix__ (sid158496@tinside.irccloud.com) (*.net *.split)
[00:41:34] *** Quits: AlbertLast (~nix@0exclusive.de) (*.net *.split)
[00:41:34] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (*.net *.split)
[00:41:34] *** Quits: fweht (uid404746@lymington.irccloud.com) (*.net *.split)
[00:41:34] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (*.net *.split)
[00:41:34] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (*.net *.split)
[00:41:34] *** Quits: hax (~hax@user/hax) (*.net *.split)
[00:41:34] *** Quits: Akiva (~Akiva@user/Akiva) (*.net *.split)
[00:41:34] *** Quits: sgen (~sgen@2607:fea8:7ce1:c8e0:f141:ba0b:da0:3c4d) (*.net *.split)
[00:41:34] *** Quits: sudomann (~sudomann@98.219.211.182) (*.net *.split)
[00:41:34] *** Quits: realies (~realies@user/realies) (*.net *.split)
[00:41:34] *** Quits: MassDebates_ (~MassDebat@2600:1700:1184:4510:815:9af6:dd18:89ff) (*.net *.split)
[00:41:34] *** Quits: gproto23 (~gproto23@user/gproto23) (*.net *.split)
[00:41:34] *** Quits: Koopz (~Koopz@koopz.rocks) (*.net *.split)
[00:41:34] *** Quits: bobdobbs (~user@2406:5a00:4456:db00:f9b1:3765:d0cf:c4b9) (*.net *.split)
[00:41:35] *** Quits: ThePendulum (~znc@user/ThePendulum) (*.net *.split)
[00:41:35] *** Quits: kmh_ (~kmh@94.31.106.215) (*.net *.split)
[00:41:35] *** Quits: Linkandzelda (~Linkandze@cloudirc.laz.li) (*.net *.split)
[00:41:35] *** Quits: pizdets (~pizdets@183.182.111.120) (*.net *.split)
[00:41:35] *** Quits: mdemo (~mdemo@user/mdemo22) (*.net *.split)
[00:41:35] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (*.net *.split)
[00:41:35] *** Quits: dmanto (~dmanto@181.110.128.9) (*.net *.split)
[00:41:35] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (*.net *.split)
[00:41:35] *** Quits: Isthmusi (~Isthmus@user/isveni) (*.net *.split)
[00:41:35] *** Quits: b-rex (van@down.by.the.river.lol) (*.net *.split)
[00:41:35] *** Quits: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001) (*.net *.split)
[00:41:35] *** Quits: baakeydow (~baake@2001:41d0:203:b12c::) (*.net *.split)
[00:41:35] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:117c:703e:db5f:c029) (*.net *.split)
[00:41:35] *** Quits: raj_ (raj@2600:3c03::f03c:91ff:feae:498) (*.net *.split)
[00:41:35] *** Quits: jw_dungeon (~quassel@2601:44:4380:4a10:4587:3637:b23f:ed34) (*.net *.split)
[00:41:35] *** Quits: dan_berg_pub_ (2c6463a49d@2604:bf00:561:2000::1c) (*.net *.split)
[00:41:35] *** Quits: Anonamy (~Anonamy@2001:569:7b8c:5300:43ca:5acf:d440:6416) (*.net *.split)
[00:41:35] *** Quits: themaxdavitt_ (sid433050@id-433050.hampstead.irccloud.com) (*.net *.split)
[00:41:35] *** Quits: jwpapi (sid502614@id-502614.uxbridge.irccloud.com) (*.net *.split)
[00:41:35] *** Quits: notchris (sid181145@id-181145.hampstead.irccloud.com) (*.net *.split)
[00:41:35] *** Quits: llinguini (sid257922@id-257922.hampstead.irccloud.com) (*.net *.split)
[00:41:35] *** Quits: chowmeined (~chowmeine@user/chowmeined) (*.net *.split)
[00:41:35] *** Quits: doji (~doji@user/doji) (*.net *.split)
[00:41:35] *** Quits: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net) (*.net *.split)
[00:41:35] *** Quits: m_antis (~znc_admin@ool-44c09a21.dyn.optonline.net) (*.net *.split)
[00:41:35] *** Quits: qwedfg_ (~qwedfg@user/qwedfg) (*.net *.split)
[00:41:35] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (*.net *.split)
[00:41:35] *** Quits: blezz (~blez@213-130-92-213.ip.btc-net.bg) (*.net *.split)
[00:41:35] *** Quits: pragma- (~chaos@user/pragmatic-chaos) (*.net *.split)
[00:41:35] *** Quits: edr (~edr@user/edr) (*.net *.split)
[00:41:35] *** Quits: kzootech (~contact@kzoo.tech) (*.net *.split)
[00:41:35] *** Quits: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4) (*.net *.split)
[00:41:35] *** Quits: Talon (~Talon@172.77.106.63) (*.net *.split)
[00:41:35] *** Quits: g2anj (~v@58.228.230.4) (*.net *.split)
[00:41:35] *** Quits: davlefou (~davlefou@5.183.213.164) (*.net *.split)
[00:41:35] *** Quits: systemfault (sid267009@id-267009.uxbridge.irccloud.com) (*.net *.split)
[00:41:35] *** Quits: graingert (sid128301@id-128301.tinside.irccloud.com) (*.net *.split)
[00:41:35] *** Quits: Kol (~Kol@75.157.122.186) (*.net *.split)
[00:41:36] *** Quits: DK3 (~DK3@user/DK3) (*.net *.split)
[00:41:36] *** Quits: OverCoder (~OverCoder@user/overcoder) (*.net *.split)
[00:41:36] *** Quits: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9) (*.net *.split)
[00:41:36] *** Quits: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070) (*.net *.split)
[00:41:36] *** Quits: winlundn (nick@2600:3c01::f03c:92ff:fe32:c297) (*.net *.split)
[00:41:36] *** Quits: croraf (croraf@croraf.ircforever.org) (*.net *.split)
[00:41:36] *** Quits: avu (~jan@user/avu) (*.net *.split)
[00:41:36] *** Quits: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net) (*.net *.split)
[00:41:36] *** Quits: k_sze (~k_sze@mail2.kalunite.net) (*.net *.split)
[00:41:36] *** Quits: shreyasminocha (51fdc93eda@user/shreyasminocha) (*.net *.split)
[00:41:36] *** Quits: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf) (*.net *.split)
[00:41:36] *** Quits: sm2n (ae95cb1267@user/sm2n) (*.net *.split)
[00:41:36] *** Quits: nemesit (~nemesit@myriadvisuals.com) (*.net *.split)
[00:41:36] *** Quits: Sol3 (~Sol3@user/sol3) (*.net *.split)
[00:41:36] *** Quits: pagios (~pagios@life.is-a.beauty) (*.net *.split)
[00:41:36] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (*.net *.split)
[00:41:36] *** Quits: bayleaf (~bayleaf@192.249.60.20) (*.net *.split)
[00:41:36] *** Quits: lucerne (~lucerne@ip202.ip-51-178-215.eu) (*.net *.split)
[00:41:36] *** Quits: lewisje (~lewisje@72.49.207.113) (*.net *.split)
[00:41:36] *** Quits: H4Z3 (~H4ZE@165.227.36.29) (*.net *.split)
[00:41:36] *** Quits: hackdash (h@user/hackdash) (*.net *.split)
[00:41:36] *** Quits: petril (~petril@user/petril) (*.net *.split)
[00:41:36] *** Quits: jsatk__ (sid304796@id-304796.helmsley.irccloud.com) (*.net *.split)
[00:41:36] *** Quits: PanamaCity3003 (~PanamaCit@skylab/user/panamacity3003) (*.net *.split)
[00:41:36] *** Quits: mishiranu (~mishiranu@78.129.171.229) (*.net *.split)
[00:41:36] *** Quits: silly (silly@user/silly) (*.net *.split)
[00:41:36] *** Quits: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr) (*.net *.split)
[00:41:36] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (*.net *.split)
[00:41:36] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (*.net *.split)
[00:41:36] *** Quits: Albright (~Albright@149.28.13.173) (*.net *.split)
[00:41:36] *** Quits: heatwave (~heatwave@103.248.94.247) (*.net *.split)
[00:41:36] *** Quits: audiobirb (~audio@user/audio) (*.net *.split)
[00:41:36] *** Quits: ssiyad (~ssiyad@user/ssiyad) (*.net *.split)
[00:41:37] *** Quits: teear (~teear@cbharraste.eu) (*.net *.split)
[00:41:37] *** Quits: edk (edk@libera/staff/edk) (*.net *.split)
[00:41:37] *** Quits: syg_ (~syg@flamebot.net) (*.net *.split)
[00:41:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (*.net *.split)
[00:41:37] *** Quits: deltab (~deltab@user/deltab) (*.net *.split)
[00:41:37] *** Quits: LIERO (~no@user/liero) (*.net *.split)
[00:41:37] *** Quits: Svitkona (~Svitkona@157.245.38.135) (*.net *.split)
[00:41:37] *** Quits: lilmonkey` (~lilmonkey@user/lilmonkey) (*.net *.split)
[00:41:37] *** Quits: haniaF (~haniaF@83.24.206.88.ipv4.supernova.orange.pl) (*.net *.split)
[00:41:37] *** Quits: Axy (~Axy@user/axy) (*.net *.split)
[00:41:37] *** Quits: eMBee (~eMBee@realss.com) (*.net *.split)
[00:41:37] *** Quits: niko (~niko@libera/staff/niko) (*.net *.split)
[00:41:37] *** Quits: codingcampbell (~codingcam@user/codingcampbell) (*.net *.split)
[00:41:37] *** Quits: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com) (*.net *.split)
[00:41:37] *** Quits: simius (~simius@user/simius) (*.net *.split)
[00:41:37] *** Quits: devslash (~devslash@46.232.211.210) (*.net *.split)
[00:41:37] *** Quits: zer0 (~zer0@user/zer0) (*.net *.split)
[00:41:37] *** Quits: monoxane (~monoxane@user/monoxane) (*.net *.split)
[00:41:37] *** Quits: slaughter (~slaughter@europa.whatbox.ca) (*.net *.split)
[00:41:37] *** Quits: hendrikpern (~hendrikpe@host-176-36-13-171.b024.la.net.ua) (*.net *.split)
[00:41:37] *** Quits: dvanloon (~dvanloon@user/dvanloon) (*.net *.split)
[00:41:37] *** Quits: nelubit (~nelubit@user/nelubit) (*.net *.split)
[00:41:37] *** Quits: tccki (~tccki@box.webslate.co.nz) (*.net *.split)
[00:41:37] *** Quits: xsznix95 (~xsznix@104-14-31-126.lightspeed.austtx.sbcglobal.net) (*.net *.split)
[00:41:37] *** Quits: mrdata (~mrdata@user/mrdata) (*.net *.split)
[00:41:37] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (*.net *.split)
[00:41:37] *** Quits: tempest (~ashe@user/tempestdawn) (*.net *.split)
[00:41:37] *** Quits: Cyp (~cyp@213.237.88.120) (*.net *.split)
[00:41:37] *** Quits: evulish (~evulish@cpe-72-231-26-248.nyc.res.rr.com) (*.net *.split)
[00:41:37] *** Quits: ox1eef (~0x1eef@user/ox1eef) (*.net *.split)
[00:41:37] *** Quits: calcmandan (~quassel@user/calcmandan) (*.net *.split)
[00:41:37] *** Quits: Decker (~d3x0r@user/d3x0r) (*.net *.split)
[00:41:37] *** Quits: Senz (whoa@ool-ad0244e9.dyn.optonline.net) (*.net *.split)
[00:41:37] *** Quits: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[00:41:37] *** Quits: Neuromancer (~Neuromanc@user/neuromancer) (*.net *.split)
[00:41:37] *** Quits: minto (~mintograd@47.201.5.61) (*.net *.split)
[00:41:37] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (*.net *.split)
[00:41:37] *** Quits: Flonk (~Flonk@vps-zap441517-1.zap-srv.com) (*.net *.split)
[00:41:37] *** Quits: nickel715 (~nickel715@user/nickel715) (*.net *.split)
[00:41:37] *** Quits: em (~em@user/emnode) (*.net *.split)
[00:41:37] *** Quits: msfninja (~kali@user/msfninja) (*.net *.split)
[00:41:37] *** Quits: BUSY (~BUSY@user/busy) (*.net *.split)
[00:41:37] *** Quits: hamess (~hamess@user/hamess) (*.net *.split)
[00:41:37] *** Quits: YoungFrog (~youngfrog@39.129-180-91.adsl-dyn.isp.belgacom.be) (*.net *.split)
[00:41:37] *** Quits: zwei (~Zweihande@znc.ext.zweihander.me) (*.net *.split)
[00:41:37] *** Quits: ChanServ (ChanServ@services.libera.chat) (*.net *.split)
[00:41:37] *** Quits: litharge (litharge@libera/bot/litharge) (*.net *.split)
[00:41:37] *** Quits: pluri (~pluri@user/pluri) (*.net *.split)
[00:41:37] *** Quits: SchmoSeph (uid530771@tinside.irccloud.com) (*.net *.split)
[00:41:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (*.net *.split)
[00:41:37] *** Quits: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation) (*.net *.split)
[00:41:37] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (*.net *.split)
[00:41:37] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (*.net *.split)
[00:41:37] *** Quits: de-facto (~de-facto@user/de-facto) (*.net *.split)
[00:41:37] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (*.net *.split)
[00:41:37] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (*.net *.split)
[00:41:37] *** Quits: rcoote (~rcoote@2a02:908:690:a140:647b:9d11:b52b:c420) (*.net *.split)
[00:41:37] *** Quits: brw (~bas@haring.bas.sh) (*.net *.split)
[00:41:37] *** Quits: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb) (*.net *.split)
[00:41:38] *** Quits: ericson2314 (~ericson23@2001:470:69fc:105::70c) (*.net *.split)
[00:41:38] *** Quits: rosseaux (~BeRo@2a00:1828:2000:859::2) (*.net *.split)
[00:41:38] *** Quits: mexen (uid495612@user/mexen) (*.net *.split)
[00:41:38] *** Quits: adar (uid1346@user/adar) (*.net *.split)
[00:41:38] *** Quits: bodicceaII (~bodiccea@user/bodiccea) (*.net *.split)
[00:41:38] *** Quits: FightingFalcon (~none@user/fightingfalcon) (*.net *.split)
[00:41:38] *** Quits: naeluh___ (sid95128@id-95128.lymington.irccloud.com) (*.net *.split)
[00:41:38] *** Quits: redrambles (sid319583@id-319583.tinside.irccloud.com) (*.net *.split)
[00:41:38] *** Quits: relipse (sid16131@id-16131.tinside.irccloud.com) (*.net *.split)
[00:41:38] *** Quits: Covrus (~Covrus@user/covrus) (*.net *.split)
[00:41:38] *** Quits: koolazer (~koo@user/koolazer) (*.net *.split)
[00:41:38] *** Quits: azizLIGHT (~azizLIGHT@user/azizlight) (*.net *.split)
[00:41:38] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (*.net *.split)
[00:41:38] *** Quits: xisop (~xisop@bnull.net) (*.net *.split)
[00:41:38] *** Quits: tabakhase (tabakhase@user/tabakhase) (*.net *.split)
[00:41:38] *** Quits: davve (davve@bsd.douchedata.com) (*.net *.split)
[00:41:38] *** Quits: Kays (Kays@user/kays) (*.net *.split)
[00:41:38] *** Quits: thumbs (1000@apache/committer/thumbs) (*.net *.split)
[00:41:38] *** Quits: jushi (~j@2a01:4f9:c010:8455::1) (*.net *.split)
[00:41:39] *** Quits: alystair (~alystair@user/alystair) (*.net *.split)
[00:41:39] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (*.net *.split)
[00:41:39] *** Quits: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9) (*.net *.split)
[00:41:39] *** Quits: kadoban (~kadoban@user/kadoban) (*.net *.split)
[00:41:39] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (*.net *.split)
[00:41:39] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (*.net *.split)
[00:41:39] *** Quits: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a) (*.net *.split)
[00:41:39] *** Quits: voltage_ (voltage@user/voltage) (*.net *.split)
[00:41:39] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (*.net *.split)
[00:41:39] *** Quits: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b) (*.net *.split)
[00:41:39] *** Quits: nicoty (~nicoty@user/nicoty) (*.net *.split)
[00:41:39] *** Quits: ormaaj (~ormaaj@user/ormaaj) (*.net *.split)
[00:41:39] *** Quits: thykka (~thykka@2a01:4f8:c0c:e335::1) (*.net *.split)
[00:41:39] *** Quits: arash- (arash@thinks.life.is-a.beauty) (*.net *.split)
[00:41:39] *** Quits: _0x1d3 (sid43116@id-43116.tinside.irccloud.com) (*.net *.split)
[00:41:39] *** Quits: adas (adas@adas.shelltalk.net) (*.net *.split)
[00:41:39] *** Quits: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net) (*.net *.split)
[00:41:39] *** Quits: Bish (~arne@ip-037-024-001-041.um08.pools.vodafone-ip.de) (*.net *.split)
[00:41:39] *** Quits: Dorward (~dorward@2001:8b0:683:6dc5:56b2:3ff:fe9c:2b78) (*.net *.split)
[00:41:39] *** Quits: c17r (~c17r@c17r.com) (*.net *.split)
[00:41:39] *** Quits: wyre (~wyre@user/wyre) (*.net *.split)
[00:41:39] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[00:41:40] *** Quits: Selicre (~x@hello.i.am.selic.re) (*.net *.split)
[00:41:40] *** Quits: DCTWD (~dc@uz.utmappro.com) (*.net *.split)
[00:41:40] *** Quits: theskillwithin (~theskillw@user/theskillwithin) (*.net *.split)
[00:41:40] *** Quits: corwin (someone@fosshost/director/corwin) (*.net *.split)
[00:41:40] *** Quits: gkatsev (~gkatsev@spacecompute.com) (*.net *.split)
[00:41:40] *** Quits: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com) (*.net *.split)
[00:41:40] *** Quits: The_Blod- (~Blode@user/the-blode/x-7164444) (*.net *.split)
[00:41:40] *** Quits: off^ (~off@128-092-174-141.biz.spectrum.com) (*.net *.split)
[00:41:40] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (*.net *.split)
[00:41:40] *** Quits: goddard (~goddard@user/goddard) (*.net *.split)
[00:41:40] *** Quits: glider (~glider@user/glider) (*.net *.split)
[00:41:40] *** Quits: wovixo (~wovixo@128.104.205.49) (*.net *.split)
[00:41:40] *** Quits: defn (~n0b0dy@user/defn) (*.net *.split)
[00:41:40] *** Quits: pmercado_ (~pmercado@190.22.160.49) (*.net *.split)
[00:41:40] *** Quits: moldorcoder7 (~moldorcod@188.95.55.24) (*.net *.split)
[00:41:40] *** Quits: aLeSD (~aLeSD@139.47.114.114) (*.net *.split)
[00:41:40] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (*.net *.split)
[00:41:40] *** Quits: noarb (~noarb@user/noarb) (*.net *.split)
[00:41:40] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (*.net *.split)
[00:41:40] *** Quits: bliminse (~bliminse@host86-188-36-166.range86-188.btcentralplus.com) (*.net *.split)
[00:41:40] *** Quits: m5zs7k (aquares@web10.mydevil.net) (*.net *.split)
[00:41:40] *** Quits: nepeat (~nepeat@79.110.170.60) (*.net *.split)
[00:41:40] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (*.net *.split)
[00:41:40] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (*.net *.split)
[00:41:40] *** Quits: EdFletcher (~PKD@user/edfletcher) (*.net *.split)
[00:41:40] *** Quits: PowaBanga (~PowaBanga@user/powabanga) (*.net *.split)
[00:41:40] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (*.net *.split)
[00:41:40] *** Quits: mven (~mven@ip68-104-39-54.lv.lv.cox.net) (*.net *.split)
[00:41:40] *** Quits: tazle (tazle@kapsi.fi) (*.net *.split)
[00:41:40] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (*.net *.split)
[00:41:40] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (*.net *.split)
[00:41:40] *** Quits: jochum (~quassel@user/jochum) (*.net *.split)
[00:41:40] *** Quits: duds- (~duds-@user/duds) (*.net *.split)
[00:41:40] *** Quits: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr) (*.net *.split)
[00:41:40] *** Quits: Byteflux (~byte@byteflux.net) (*.net *.split)
[00:41:40] *** Quits: simpleauthority (~simpleaut@user/simpleauthority) (*.net *.split)
[00:41:40] *** Quits: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net) (*.net *.split)
[00:41:40] *** Quits: SpiceMan (~Don_Spice@user/SpiceMan) (*.net *.split)
[00:41:40] *** Quits: dka (~code-is-a@ns3059207.ip-193-70-33.eu) (*.net *.split)
[00:41:40] *** Quits: phenom (~primus@user/phenom) (*.net *.split)
[00:41:40] *** Quits: shayr_ (shayr@ip62.ip-91-134-189.eu) (*.net *.split)
[00:41:40] *** Quits: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net) (*.net *.split)
[00:41:40] *** Quits: znf (ibm86@blender.linge-ma.ro) (*.net *.split)
[00:41:40] *** Quits: OneMirror (~far@onegrandcircle.com) (*.net *.split)
[00:41:40] *** Quits: klys (~mdasoh@show.op8.us) (*.net *.split)
[00:41:40] *** Quits: rick123 (~rick123@157.245.192.96) (*.net *.split)
[00:41:40] *** Quits: fkrauthan (~fkrauthan@user/fkrauthan) (*.net *.split)
[00:41:40] *** Quits: blank (~info@li2021-150.members.linode.com) (*.net *.split)
[00:41:40] *** Quits: Pabc1_ (~Pabc1@45.77.53.54) (*.net *.split)
[00:41:40] *** Quits: bradp- (~bradp@cpe-70-92-7-182.wi.res.rr.com) (*.net *.split)
[00:41:40] *** Quits: dante443 (~dante443@99-88-166-99.lightspeed.milwwi.sbcglobal.net) (*.net *.split)
[00:41:40] *** Quits: a1paca (~a1paca@user/a1paca) (*.net *.split)
[00:41:40] *** Quits: percY- (~percY@138.68.239.19) (*.net *.split)
[00:41:40] *** Quits: yolo (~xxiao@li1120-73.members.linode.com) (*.net *.split)
[00:41:40] *** Quits: cluelessperson (~cluelessp@user/cluelessperson) (*.net *.split)
[00:41:40] *** Quits: shantaram (shan@cyblog/maintainer/shan) (*.net *.split)
[00:41:40] *** Quits: Pajus (~Pajus@user/pajus) (*.net *.split)
[00:41:40] *** Quits: Woet (~me@irc.woet.me) (*.net *.split)
[00:41:40] *** Quits: _var (~kdy@kiana.kdy.ch) (*.net *.split)
[00:41:40] *** Quits: seed0 (~seed0@user/seed0) (*.net *.split)
[00:41:41] *** Quits: eldritch_ (~eldritch@user/eldritch/x-9272577) (*.net *.split)
[00:41:41] *** Quits: jonifen (~jonifen@user/jonifen) (*.net *.split)
[00:41:41] *** Quits: pulse (~pulse@user/pulse) (*.net *.split)
[00:41:41] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (*.net *.split)
[00:41:41] *** Quits: nb-ben (~ben@user/nb-ben) (*.net *.split)
[00:41:41] *** Quits: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com) (*.net *.split)
[00:41:41] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (*.net *.split)
[00:41:41] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (*.net *.split)
[00:41:41] *** Quits: aesth[m] (~aesthmatr@2001:470:69fc:105::1:57c1) (*.net *.split)
[00:41:41] *** Quits: andersaloof (~anders@251.92-221-169.customer.lyse.net) (*.net *.split)
[00:41:41] *** Quits: bailon (~gizzard@saturn.whatbox.ca) (*.net *.split)
[00:41:41] *** Quits: Enissay (~Enissay@user/enissay) (*.net *.split)
[00:41:41] *** Quits: phryk (~totallyno@user/phryk) (*.net *.split)
[00:41:41] *** Quits: dfg (dfg@user/dfg) (*.net *.split)
[00:41:41] *** Quits: rickbutton (sid410078@id-410078.helmsley.irccloud.com) (*.net *.split)
[00:41:41] *** Quits: supercool (supercool@2600:3c01::f03c:91ff:fee5:c75e) (*.net *.split)
[00:41:41] *** Quits: marienz__ (~marienz@libera/staff/marienz) (*.net *.split)
[00:41:41] *** Quits: s1b1 (~s1b1@user/s1b1) (*.net *.split)
[00:41:41] *** Quits: kogepan (~kogepan@user/kogepan) (*.net *.split)
[00:41:41] *** Quits: sveinse (~sveinse@2a01:799:55e:1000:c23f:d5ff:fe69:c6fb) (*.net *.split)
[00:41:41] *** Quits: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net) (*.net *.split)
[00:41:41] *** Quits: orkim (~orkim@user/orkim) (*.net *.split)
[00:41:42] *** Quits: mkbloke (~mkbloke@vps.cammo.me.uk) (*.net *.split)
[00:41:42] *** Quits: Exa (exa@irc.moe) (*.net *.split)
[00:41:42] *** Quits: Benett (~Benett@xnetx.de) (*.net *.split)
[00:41:42] *** Quits: jaawerth (~jaawerth@104.131.115.202) (*.net *.split)
[00:41:42] *** Quits: seanBE (~seanBE@ec2-34-243-193-160.eu-west-1.compute.amazonaws.com) (*.net *.split)
[00:41:42] *** Quits: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (*.net *.split)
[00:41:42] *** Quits: Harlin (~DonQixote@75-163-148-159.clsp.qwest.net) (*.net *.split)
[00:41:42] *** Quits: flughafen (~flughafen@p5de8ed0b.dip0.t-ipconnect.de) (*.net *.split)
[00:41:42] *** Quits: xse (~xse@user/xse) (*.net *.split)
[00:41:42] *** Quits: Geenirvana (~root@151-236-220-136.ip.linodeusercontent.com) (*.net *.split)
[00:41:42] *** Quits: BSaboia (~bsaboia@95.179.154.99) (*.net *.split)
[00:41:42] *** Quits: henry40408 (~henry4040@175.181.155.165) (*.net *.split)
[00:41:42] *** Quits: remolej (~kenoba@user/kenoba) (*.net *.split)
[00:41:42] *** Quits: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk) (*.net *.split)
[00:41:42] *** Quits: root__ (~root@157.245.144.252) (*.net *.split)
[00:41:42] *** Quits: NoiseEee (~NoiseEee@178.128.153.219) (*.net *.split)
[00:41:42] *** Quits: nortoh (~nortoh@user/nortoh) (*.net *.split)
[00:41:42] *** Quits: sybariten (~jake@157.90.217.120) (*.net *.split)
[00:41:42] *** Quits: rvgate (~rvgate@user/rvgate) (*.net *.split)
[00:41:42] *** Quits: Henry151 (~bishop@user/henry151) (*.net *.split)
[00:41:42] *** Quits: futs (~nico@142.93.239.247) (*.net *.split)
[00:41:42] *** Quits: betterOn1 (~user@vmi489242.contaboserver.net) (*.net *.split)
[00:41:42] *** Quits: richardwh1uk (richardwhi@scarlet.richardwhiuk.com) (*.net *.split)
[00:41:42] *** Quits: siyb (~siyb@h081217185055.dyn.cm.kabsi.at) (*.net *.split)
[00:41:42] *** Quits: Dev0n (~Dev0n@user/dev0n) (*.net *.split)
[00:41:42] *** Quits: quesker (~idnet@mail.89vx.net) (*.net *.split)
[00:41:42] *** Quits: MrBurns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com) (*.net *.split)
[00:41:42] *** Quits: _nderscore (~nderscore@silentf.art) (*.net *.split)
[00:41:42] *** Quits: WizJin (~z0rbaznc@78.141.221.79) (*.net *.split)
[00:41:42] *** Quits: rdrg109 (~rdrg109@user/rdrg109) (*.net *.split)
[00:41:42] *** Quits: laris (undead@37.221.209.36) (*.net *.split)
[00:41:42] *** Quits: mekeor[m] (~mekeormat@2001:470:69fc:105::17e4) (*.net *.split)
[00:41:42] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (*.net *.split)
[00:41:43] *** Quits: aolko[m] (~aolko93ma@2001:470:69fc:105::68ec) (*.net *.split)
[00:41:43] *** Quits: kirk (kirk@kirk.shelltalk.net) (*.net *.split)
[00:41:43] *** Quits: Jaran (~mail@user/jaran) (*.net *.split)
[00:41:43] *** Quits: fury__ (~fury@znc.codexterous.com) (*.net *.split)
[00:41:43] *** Quits: cythrawll (sid384410@id-384410.ilkley.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: Argorok (sid195487@id-195487.hampstead.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: SrPx (sid108780@id-108780.uxbridge.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: victor__ (sid208353@id-208353.tinside.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: Slade (uid128877@user/slade) (*.net *.split)
[00:41:43] *** Quits: dirigible_ (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990) (*.net *.split)
[00:41:43] *** Quits: cebor (~cebor@user/cebor) (*.net *.split)
[00:41:43] *** Quits: kadobanana (~mud@user/kadoban) (*.net *.split)
[00:41:43] *** Quits: Jigsy (~Jigsy@user/jigsy) (*.net *.split)
[00:41:43] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (*.net *.split)
[00:41:43] *** Quits: AciD (~fu@user/acid/x-5205451) (*.net *.split)
[00:41:43] *** Quits: ninjabanjo (~ninjabanj@107.150.45.163) (*.net *.split)
[00:41:43] *** Quits: zitter (~danilodim@93-57-35-194.ip162.fastwebnet.it) (*.net *.split)
[00:41:43] *** Quits: twiclo (~twiclo@2604:7b80:2000:1069:52fc:cedd:fbeb:10c) (*.net *.split)
[00:41:43] *** Quits: Ducki (~ducki@user/ducki) (*.net *.split)
[00:41:43] *** Quits: xsperry (~xs@user/xsperry) (*.net *.split)
[00:41:43] *** Quits: ljharb (sid43720@user/ljharb) (*.net *.split)
[00:41:43] *** Quits: lebster (sid17131@id-17131.hampstead.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: celphi (sid97751@user/celphi) (*.net *.split)
[00:41:43] *** Quits: DrAnything (uid538291@id-538291.lymington.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (*.net *.split)
[00:41:43] *** Quits: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi) (*.net *.split)
[00:41:43] *** Quits: packet_lozenge_ (~packet_lo@user/packet-lozenge/x-7125090) (*.net *.split)
[00:41:43] *** Quits: austincheney (~austinche@104-189-235-24.lightspeed.rcsntx.sbcglobal.net) (*.net *.split)
[00:41:43] *** Quits: happymeal (~happymeal@user/happymeal) (*.net *.split)
[00:41:43] *** Quits: TheStormsOfFury (~StormsOfF@wsip-207-162-134-107.tu.ok.cox.net) (*.net *.split)
[00:41:43] *** Quits: eqw (~eqw@31.134.178.99) (*.net *.split)
[00:41:43] *** Quits: Pilum (~JKM@user/pilum) (*.net *.split)
[00:41:43] *** Quits: biberu (~biberu@user/biberu) (*.net *.split)
[00:41:43] *** Quits: FlannelKing (~flannel@cpe-76-175-193-181.socal.res.rr.com) (*.net *.split)
[00:41:43] *** Quits: mdel (~mdel@user/mdel) (*.net *.split)
[00:41:43] *** Quits: hendry (~hendry@210.23.22.2) (*.net *.split)
[00:41:43] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (*.net *.split)
[00:41:43] *** Quits: PigDude (~PigDude@159.203.16.199) (*.net *.split)
[00:41:43] *** Quits: symm (symmetry@user/sym) (*.net *.split)
[00:41:43] *** Quits: fakuve (~fakuve@192.210.243.250) (*.net *.split)
[00:41:43] *** Quits: theglass (~glass@user/theglass) (*.net *.split)
[00:41:43] *** Quits: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de) (*.net *.split)
[00:41:43] *** Quits: Moyst_ (~moyst@user/moyst) (*.net *.split)
[00:41:43] *** Quits: mcfrdy (~mcfrdy@user/mcfrdy) (*.net *.split)
[00:41:43] *** Quits: Emil (emil@emil.fi) (*.net *.split)
[00:41:43] *** Quits: ringo__ (~ringo@157.230.117.128) (*.net *.split)
[00:41:43] *** Quits: magga (magga@ti0036a400-1042.bb.online.no) (*.net *.split)
[00:41:43] *** Quits: pax_os__ (uid535114@ilkley.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: sagax (~sagax_nb@user/sagax) (*.net *.split)
[00:41:43] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (*.net *.split)
[00:41:43] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:9151:64f9:5c4c:ad39) (*.net *.split)
[00:41:43] *** Quits: stagas (~stagas@2a02:587:c40c:7fd2:27e5:9579:b326:6aba) (*.net *.split)
[00:41:43] *** Quits: chronon (~chronon@user/chronon) (*.net *.split)
[00:41:44] *** Quits: Deide (~deide@user/deide) (*.net *.split)
[00:41:44] *** Quits: WillPittenger (~willpitte@2001:470:69fc:105::1bf) (*.net *.split)
[00:41:44] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (*.net *.split)
[00:41:44] *** Quits: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9) (*.net *.split)
[00:41:44] *** Quits: Fusl (fusl@1.0.0.127.in-addr.arpa.li) (*.net *.split)
[00:41:44] *** Quits: cyberbanjo (mksybr@tilde.team) (*.net *.split)
[00:41:44] *** Quits: mogad0n (~mogad0n@user/mogad0n) (*.net *.split)
[00:41:44] *** Quits: Jck_true (~jcktrue@user/jck-true/x-0200799) (*.net *.split)
[00:41:44] *** Quits: machuga (~machuga@104.236.124.225) (*.net *.split)
[00:41:44] *** Quits: cis (cis@user/cis) (*.net *.split)
[00:41:44] *** Quits: tcsc (sid145321@id-145321.lymington.irccloud.com) (*.net *.split)
[00:41:44] *** Quits: shurane (sid132556@id-132556.helmsley.irccloud.com) (*.net *.split)
[00:41:44] *** Quits: gendl (sid100083@id-100083.hampstead.irccloud.com) (*.net *.split)
[00:41:44] *** Quits: ekl (~ekl@user/ekl) (*.net *.split)
[00:41:44] *** Quits: newton (james@user/newton) (*.net *.split)
[00:41:44] *** Quits: con3 (~con3@143.198.53.32) (*.net *.split)
[00:41:44] *** Quits: joepie91 (~joepie91p@user/joepie91) (*.net *.split)
[00:41:44] *** Quits: Stx (stx@libera/staff/stx) (*.net *.split)
[00:41:44] *** Quits: Sherpard2 (~VPard@user/sherpard2) (*.net *.split)
[00:41:44] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (*.net *.split)
[00:41:44] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:60a3:a532:ba52:cb9d) (*.net *.split)
[00:41:44] *** Quits: SOMBRIO (~SOMBRIO@177.137.113.71) (*.net *.split)
[00:41:44] *** Quits: funhouse (~funhouse@user/funhouse) (*.net *.split)
[00:41:44] *** Quits: stenno (~stenno@user/stenno) (*.net *.split)
[00:41:44] *** Quits: paulcarroty (~paulcarro@2001:470:69fc:105::216) (*.net *.split)
[00:41:44] *** Quits: Darvesh[m] (~drvshmatr@2001:470:69fc:105::1:6c1e) (*.net *.split)
[00:41:44] *** Quits: greggerz (~greggerzm@2001:470:69fc:105::da2) (*.net *.split)
[00:41:44] *** Quits: boris[m]12 (~borisruna@2001:470:69fc:105::32f3) (*.net *.split)
[00:41:45] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (*.net *.split)
[00:41:45] *** Quits: assemblylang[m] (~assemblyl@2001:470:69fc:105::1:7012) (*.net *.split)
[00:41:45] *** Quits: loke[m] (~loke@2001:470:69fc:105::237) (*.net *.split)
[00:41:45] *** Quits: mynickisregister (~mynickisr@2001:1af8:4700:b0e0:fa00::) (*.net *.split)
[00:41:45] *** Quits: BinarySavior (~BinarySav@idlerpg/player/BinarySavior) (*.net *.split)
[00:41:45] *** Quits: gwn (00597634f8@2604:bf00:561:2000::390) (*.net *.split)
[00:41:45] *** Quits: lockdown_ (~lockdown@ec2-3-236-147-4.compute-1.amazonaws.com) (*.net *.split)
[00:41:45] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (*.net *.split)
[00:41:45] *** Quits: entropygain (levitate@user/entropygain) (*.net *.split)
[00:41:45] *** Quits: prime (~prime@user/prime) (*.net *.split)
[00:41:45] *** Quits: burakcank (~burakcank@has.arrived.and.is.ready-to.party) (*.net *.split)
[00:41:45] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (*.net *.split)
[00:41:45] *** Quits: fkm (~fkm@user/fkm) (*.net *.split)
[00:41:45] *** Quits: purphoroff (purphoros@devforge.org) (*.net *.split)
[00:41:45] *** Quits: VectorX (~sunilaiya@user/vectorx) (*.net *.split)
[00:41:45] *** Quits: drew (~drew@user/drew) (*.net *.split)
[00:41:45] *** Quits: ldlework (~hexeme@user/hexeme) (*.net *.split)
[00:41:45] *** Quits: ross (sid305269@user/ross) (*.net *.split)
[00:41:45] *** Quits: merpnderp (sid16744@id-16744.hampstead.irccloud.com) (*.net *.split)
[00:41:45] *** Quits: snek (sid280155@id-280155.lymington.irccloud.com) (*.net *.split)
[00:41:45] *** Quits: jakesyl__ (sid56879@id-56879.hampstead.irccloud.com) (*.net *.split)
[00:41:45] *** Quits: sunarch (uid526836@user/sunarch) (*.net *.split)
[00:41:45] *** Quits: kraih (sid17075@mojo/destroy-all-humans/kraih) (*.net *.split)
[00:41:45] *** Quits: ingo (~ingo@user/ingo) (*.net *.split)
[00:41:45] *** Quits: Manouchehri (sid384576@id-384576.hampstead.irccloud.com) (*.net *.split)
[00:41:45] *** Quits: Guest8414 (riotz@is.only.here.for-some.fun) (*.net *.split)
[00:41:45] *** Quits: SoF (~skius@user/skius) (*.net *.split)
[00:41:45] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (*.net *.split)
[00:41:45] *** Quits: robertparkerx (~robertpar@user/robertparkerx) (*.net *.split)
[00:41:45] *** Quits: itok (sid418430@id-418430.ilkley.irccloud.com) (*.net *.split)
[00:41:45] *** Quits: Cork (~Cork@user/cork) (*.net *.split)
[00:41:45] *** Quits: Sqaure (~a@user/square) (*.net *.split)
[00:41:45] *** Quits: andreas303 (andreas303@ip227.orange.bnc4free.com) (*.net *.split)
[00:41:45] *** Quits: mosh3k21 (~mosh3k21@user/mosh3k21) (*.net *.split)
[00:41:45] *** Quits: Kobaz (~libera@its.kobaz.net) (*.net *.split)
[00:41:45] *** Quits: ashnur (~rak@user/ashnur) (*.net *.split)
[00:41:45] *** Quits: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com) (*.net *.split)
[00:41:45] *** Quits: IceMichael (~IceMichae@h2878436.stratoserver.net) (*.net *.split)
[00:41:45] *** Quits: Teckla (uid172075@user/teckla) (*.net *.split)
[00:41:45] *** Quits: Kabouik (~Kabouik@user/kabouik) (*.net *.split)
[00:41:46] *** Quits: davidv7 (~davidv7@user/videogameenjoyer) (*.net *.split)
[00:41:46] *** Quits: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de) (*.net *.split)
[00:41:46] *** Quits: enyc (~enyc@user/enyc) (*.net *.split)
[00:41:46] *** Quits: samsch (~samsch@171.ip-192-99-69.net) (*.net *.split)
[00:41:46] *** Quits: ozymandias (~ozymandia@libre.theyareafter.us) (*.net *.split)
[00:41:46] *** Quits: wolfshappen (~waff@irc.furworks.de) (Max SendQ exceeded)
[00:44:10] *** Joins: AlbertLast (~nix@0exclusive.de)
[00:44:10] *** Joins: Lewix__ (sid158496@tinside.irccloud.com)
[00:44:10] *** Joins: les_ (~whome@user/les)
[00:44:10] *** Joins: dlam (~dlam@dlam.me)
[00:44:10] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[00:44:10] *** Joins: gjvc (~gjvc@user/gjvc)
[00:44:10] *** Joins: Spydar007 (~spydar007@user/spydar007)
[00:44:10] *** Joins: Unfixed (~Jake@64.31.33.140)
[00:44:10] *** Joins: hassoon_ (hassoon@user/hassoon)
[00:44:10] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[00:44:10] *** Joins: [R] (~rs@genoce.org)
[00:44:10] *** Joins: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[00:44:10] *** Joins: ethoxy (~root@bison.alphaw0lf.xyz)
[00:44:10] *** Joins: llorllale (~llorllale@198.98.119.85)
[00:44:10] *** Joins: jellobot (~jellobot@li334-26.members.linode.com)
[00:44:10] *** Joins: Swant (~swant@libera/staff/swant)
[00:44:10] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[00:44:10] *** Joins: cryocaustik7 (~cryocaust@user/cryocaustik)
[00:44:10] *** Joins: hassoon__ (~hassoon@triton.blinkenshell.org)
[00:44:10] *** Joins: philivey9426 (~polarizin@188.166.72.81)
[00:44:10] *** Joins: webstran- (~webstrand@user/webstrand)
[00:44:10] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[00:44:10] *** Joins: sunyour (~sunyour@129.226.182.99)
[00:44:10] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[00:44:10] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[00:44:10] *** Joins: justGhost (~justache@user/justache)
[00:44:10] *** Joins: monokrome| (~monokrome@50.215.11.140)
[00:44:10] *** Joins: kcrk (~kcrk@user/kcrk)
[00:44:10] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[00:44:10] *** Joins: dskull (~dskull@user/dskull)
[00:44:10] *** Joins: Alexendoo (~Alex@144.21.50.247)
[00:44:10] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[00:44:10] *** Joins: Joel (~jjshoe@user/joel)
[00:44:10] *** Joins: Nnnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com)
[00:44:10] *** Joins: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[00:44:10] *** Joins: Stanley (~stanley@d66-183-88-69.bchsia.telus.net)
[00:44:10] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[00:44:10] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[00:44:10] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[00:44:10] *** Joins: erry (~erry@errietta.me)
[00:44:10] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[00:44:10] *** Joins: Tabmow (~tabmow@user/tabmow)
[00:44:10] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[00:44:10] *** Joins: lefteye (~wbrawner@c-67-190-106-99.hsd1.co.comcast.net)
[00:44:10] *** Joins: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[00:44:10] *** Joins: APic (~apic@apic.name)
[00:44:10] *** erbium.libera.chat sets mode: +v jellobot
[00:44:10] *** Joins: ttys000 (~ttys000@user/ttys000)
[00:44:10] *** Joins: The_Tablet (~tablet@user/the-tablet)
[00:44:10] *** Joins: robyn (~robyndrak@user/robyndrake)
[00:44:10] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[00:44:10] *** Joins: kalen (~kalen@gateway/vpn/pia/kalen)
[00:44:10] *** Joins: AJTJ (~AJTJ@d205-234-49-159.yt.northwestel.net)
[00:44:10] *** Joins: \mSg (mSg@user/msg/x-0285936)
[00:44:10] *** Joins: chovy (chovy@tilde.club)
[00:44:10] *** Joins: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz)
[00:44:10] *** Joins: abraham (~abraham@143.244.185.86)
[00:44:10] *** Joins: keypusher (keypusher@user/keypusher)
[00:44:10] *** Joins: daoumilseitek (~daoumilse@164.96.146.77.rev.sfr.net)
[00:44:10] *** Joins: hughrawlinson_ (sid11243@ilkley.irccloud.com)
[00:44:10] *** Joins: MootPoot (uid444585@ilkley.irccloud.com)
[00:44:10] *** Joins: mat001 (~mat001@72.28.108.216)
[00:44:10] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[00:44:10] *** Joins: skillbot1 (~skillbot@user/skillbot)
[00:44:10] *** Joins: Betal (~Betal@user/betal)
[00:44:10] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[00:44:10] *** Joins: trevors (~trevors@user/trevors)
[00:44:10] *** Joins: mikrosis (~mikrosis@dynamic-046-114-173-011.46.114.pool.telefonica.de)
[00:44:10] *** Joins: jushi (~j@2a01:4f9:c010:8455::1)
[00:44:10] *** Joins: Kays (Kays@user/kays)
[00:44:10] *** Joins: davve (davve@bsd.douchedata.com)
[00:44:10] *** Joins: tabakhase (tabakhase@user/tabakhase)
[00:44:10] *** Joins: xisop (~xisop@bnull.net)
[00:44:10] *** Joins: thumbs (1000@apache/committer/thumbs)
[00:44:10] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[00:44:10] *** Joins: azizLIGHT (~azizLIGHT@user/azizlight)
[00:44:10] *** Joins: koolazer (~koo@user/koolazer)
[00:44:10] *** Joins: Covrus (~Covrus@user/covrus)
[00:44:10] *** Joins: redrambles (sid319583@id-319583.tinside.irccloud.com)
[00:44:10] *** Joins: relipse (sid16131@id-16131.tinside.irccloud.com)
[00:44:10] *** Joins: naeluh___ (sid95128@id-95128.lymington.irccloud.com)
[00:44:10] *** Joins: bodicceaII (~bodiccea@user/bodiccea)
[00:44:10] *** Joins: adar (uid1346@user/adar)
[00:44:10] *** Joins: mexen (uid495612@user/mexen)
[00:44:10] *** Joins: rosseaux (~BeRo@2a00:1828:2000:859::2)
[00:44:10] *** Joins: ericson2314 (~ericson23@2001:470:69fc:105::70c)
[00:44:10] *** Joins: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb)
[00:44:10] *** Joins: FightingFalcon (~none@user/fightingfalcon)
[00:44:10] *** Joins: brw (~bas@haring.bas.sh)
[00:44:10] *** Joins: rcoote (~rcoote@2a02:908:690:a140:647b:9d11:b52b:c420)
[00:44:10] *** Joins: ozymandias (~ozymandia@libre.theyareafter.us)
[00:44:10] *** Joins: samsch (~samsch@171.ip-192-99-69.net)
[00:44:10] *** Joins: enyc (~enyc@user/enyc)
[00:44:10] *** erbium.libera.chat sets mode: +v skillbot1
[00:44:10] *** Joins: matthewcroughan (~quassel@static.211.38.12.49.clients.your-server.de)
[00:44:10] *** Joins: davidv7 (~davidv7@user/videogameenjoyer)
[00:44:10] *** Joins: IceMichael (~IceMichae@h2878436.stratoserver.net)
[00:44:10] *** Joins: ravish0007 (~quassel@ec2-65-0-45-121.ap-south-1.compute.amazonaws.com)
[00:44:10] *** Joins: ashnur (~rak@user/ashnur)
[00:44:10] *** Joins: Kobaz (~libera@its.kobaz.net)
[00:44:10] *** Joins: mosh3k21 (~mosh3k21@user/mosh3k21)
[00:44:10] *** Joins: andreas303 (andreas303@ip227.orange.bnc4free.com)
[00:44:10] *** Joins: Sqaure (~a@user/square)
[00:44:10] *** Joins: Cork (~Cork@user/cork)
[00:44:10] *** Joins: itok (sid418430@id-418430.ilkley.irccloud.com)
[00:44:10] *** Joins: robertparkerx (~robertpar@user/robertparkerx)
[00:44:10] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[00:44:10] *** Joins: SoF (~skius@user/skius)
[00:44:10] *** Joins: Guest8414 (riotz@is.only.here.for-some.fun)
[00:44:10] *** Joins: Manouchehri (sid384576@id-384576.hampstead.irccloud.com)
[00:44:10] *** Joins: ingo (~ingo@user/ingo)
[00:44:10] *** Joins: kraih (sid17075@mojo/destroy-all-humans/kraih)
[00:44:10] *** Joins: snek (sid280155@id-280155.lymington.irccloud.com)
[00:44:10] *** Joins: ross (sid305269@user/ross)
[00:44:10] *** Joins: merpnderp (sid16744@id-16744.hampstead.irccloud.com)
[00:44:10] *** Joins: sunarch (uid526836@user/sunarch)
[00:44:10] *** Joins: drew (~drew@user/drew)
[00:44:10] *** Joins: ldlework (~hexeme@user/hexeme)
[00:44:10] *** Joins: jakesyl__ (sid56879@id-56879.hampstead.irccloud.com)
[00:44:10] *** Joins: purphoroff (purphoros@devforge.org)
[00:44:10] *** Joins: fkm (~fkm@user/fkm)
[00:44:10] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[00:44:10] *** Joins: burakcank (~burakcank@has.arrived.and.is.ready-to.party)
[00:44:10] *** Joins: prime (~prime@user/prime)
[00:44:10] *** Joins: VectorX (~sunilaiya@user/vectorx)
[00:44:10] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[00:44:10] *** Joins: lockdown_ (~lockdown@ec2-3-236-147-4.compute-1.amazonaws.com)
[00:44:10] *** Joins: Kabouik (~Kabouik@user/kabouik)
[00:44:10] *** Joins: entropygain (levitate@user/entropygain)
[00:44:10] *** Joins: gwn (00597634f8@2604:bf00:561:2000::390)
[00:44:10] *** Joins: BinarySavior (~BinarySav@idlerpg/player/BinarySavior)
[00:44:10] *** Joins: mynickisregister (~mynickisr@2001:1af8:4700:b0e0:fa00::)
[00:44:10] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[00:44:10] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[00:44:10] *** Joins: boris[m]12 (~borisruna@2001:470:69fc:105::32f3)
[00:44:10] *** Joins: assemblylang[m] (~assemblyl@2001:470:69fc:105::1:7012)
[00:44:10] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[00:44:10] *** Joins: Darvesh[m] (~drvshmatr@2001:470:69fc:105::1:6c1e)
[00:44:10] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[00:44:10] *** Joins: Teckla (uid172075@user/teckla)
[00:44:10] *** Joins: stenno (~stenno@user/stenno)
[00:44:10] *** Joins: Tempesta (~Tempesta@user/tempesta)
[00:44:10] *** Joins: seanBE (~seanBE@ec2-34-243-193-160.eu-west-1.compute.amazonaws.com)
[00:44:10] *** Joins: jaawerth (~jaawerth@104.131.115.202)
[00:44:10] *** Joins: Benett (~Benett@xnetx.de)
[00:44:10] *** Joins: Exa (exa@irc.moe)
[00:44:10] *** Joins: mkbloke (~mkbloke@vps.cammo.me.uk)
[00:44:10] *** Joins: orkim (~orkim@user/orkim)
[00:44:10] *** Joins: spynxic (~spynxic@spynxic.powered.by.lunarbnc.net)
[00:44:10] *** Joins: kogepan (~kogepan@user/kogepan)
[00:44:10] *** Joins: marienz__ (~marienz@libera/staff/marienz)
[00:44:10] *** Joins: s1b1 (~s1b1@user/s1b1)
[00:44:10] *** Joins: supercool (supercool@2600:3c01::f03c:91ff:fee5:c75e)
[00:44:10] *** Joins: rickbutton (sid410078@id-410078.helmsley.irccloud.com)
[00:44:10] *** Joins: sveinse (~sveinse@2a01:799:55e:1000:c23f:d5ff:fe69:c6fb)
[00:44:10] *** Joins: phryk (~totallyno@user/phryk)
[00:44:10] *** Joins: Enissay (~Enissay@user/enissay)
[00:44:10] *** Joins: bailon (~gizzard@saturn.whatbox.ca)
[00:44:10] *** Joins: andersaloof (~anders@251.92-221-169.customer.lyse.net)
[00:44:10] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[00:44:10] *** Joins: aesth[m] (~aesthmatr@2001:470:69fc:105::1:57c1)
[00:44:10] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[00:44:10] *** Joins: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com)
[00:44:10] *** Joins: nb-ben (~ben@user/nb-ben)
[00:44:10] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[00:44:10] *** Joins: pulse (~pulse@user/pulse)
[00:44:10] *** Joins: jonifen (~jonifen@user/jonifen)
[00:44:10] *** Joins: eldritch_ (~eldritch@user/eldritch/x-9272577)
[00:44:10] *** Joins: onosendi (~onosendi@ip70-162-92-63.ph.ph.cox.net)
[00:44:10] *** Joins: off^ (~off@128-092-174-141.biz.spectrum.com)
[00:44:10] *** Joins: zwei (~Zweihande@znc.ext.zweihander.me)
[00:44:10] *** Joins: YoungFrog (~youngfrog@39.129-180-91.adsl-dyn.isp.belgacom.be)
[00:44:10] *** Joins: hamess (~hamess@user/hamess)
[00:44:10] *** Joins: BUSY (~BUSY@user/busy)
[00:44:10] *** Joins: Flonk (~Flonk@vps-zap441517-1.zap-srv.com)
[00:44:10] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[00:44:10] *** Joins: nickel715 (~nickel715@user/nickel715)
[00:44:10] *** Joins: minto (~mintograd@47.201.5.61)
[00:44:10] *** Joins: Neuromancer (~Neuromanc@user/neuromancer)
[00:44:10] *** Joins: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de)
[00:44:10] *** Joins: Senz (whoa@ool-ad0244e9.dyn.optonline.net)
[00:44:10] *** Joins: Decker (~d3x0r@user/d3x0r)
[00:44:10] *** Joins: calcmandan (~quassel@user/calcmandan)
[00:44:10] *** Joins: ox1eef (~0x1eef@user/ox1eef)
[00:44:10] *** Joins: evulish (~evulish@cpe-72-231-26-248.nyc.res.rr.com)
[00:44:10] *** Joins: Cyp (~cyp@213.237.88.120)
[00:44:10] *** Joins: tempest (~ashe@user/tempestdawn)
[00:44:10] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[00:44:10] *** Joins: mrdata (~mrdata@user/mrdata)
[00:44:10] *** Joins: xsznix95 (~xsznix@104-14-31-126.lightspeed.austtx.sbcglobal.net)
[00:44:10] *** Joins: tccki (~tccki@box.webslate.co.nz)
[00:44:10] *** Joins: nelubit (~nelubit@user/nelubit)
[00:44:10] *** Joins: dvanloon (~dvanloon@user/dvanloon)
[00:44:10] *** Joins: hendrikpern (~hendrikpe@host-176-36-13-171.b024.la.net.ua)
[00:44:10] *** Joins: slaughter (~slaughter@europa.whatbox.ca)
[00:44:10] *** Joins: monoxane (~monoxane@user/monoxane)
[00:44:10] *** Joins: zer0 (~zer0@user/zer0)
[00:44:10] *** Joins: devslash (~devslash@46.232.211.210)
[00:44:10] *** Joins: simius (~simius@user/simius)
[00:44:10] *** Joins: simon816 (~simon816@ec2-35-178-246-72.eu-west-2.compute.amazonaws.com)
[00:44:10] *** Joins: codingcampbell (~codingcam@user/codingcampbell)
[00:44:10] *** Joins: niko (~niko@libera/staff/niko)
[00:44:10] *** Joins: eMBee (~eMBee@realss.com)
[00:44:10] *** Joins: Axy (~Axy@user/axy)
[00:44:10] *** Joins: haniaF (~haniaF@83.24.206.88.ipv4.supernova.orange.pl)
[00:44:10] *** Joins: lilmonkey` (~lilmonkey@user/lilmonkey)
[00:44:10] *** Joins: Svitkona (~Svitkona@157.245.38.135)
[00:44:10] *** Joins: LIERO (~no@user/liero)
[00:44:10] *** Joins: deltab (~deltab@user/deltab)
[00:44:10] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[00:44:10] *** Joins: em (~em@user/emnode)
[00:44:10] *** Joins: syg_ (~syg@flamebot.net)
[00:44:10] *** Joins: edk (edk@libera/staff/edk)
[00:44:10] *** Joins: msfninja (~kali@user/msfninja)
[00:44:10] *** Joins: teear (~teear@cbharraste.eu)
[00:44:10] *** Joins: ssiyad (~ssiyad@user/ssiyad)
[00:44:10] *** Joins: audiobirb (~audio@user/audio)
[00:44:10] *** Joins: heatwave (~heatwave@103.248.94.247)
[00:44:10] *** Joins: Albright (~Albright@149.28.13.173)
[00:44:10] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[00:44:10] *** Joins: Sherpard2 (~VPard@user/sherpard2)
[00:44:10] *** Joins: Stx (stx@libera/staff/stx)
[00:44:10] *** Joins: joepie91 (~joepie91p@user/joepie91)
[00:44:10] *** Joins: con3 (~con3@143.198.53.32)
[00:44:10] *** Joins: newton (james@user/newton)
[00:44:10] *** Joins: ekl (~ekl@user/ekl)
[00:44:10] *** Joins: shurane (sid132556@id-132556.helmsley.irccloud.com)
[00:44:10] *** Joins: tcsc (sid145321@id-145321.lymington.irccloud.com)
[00:44:10] *** Joins: gendl (sid100083@id-100083.hampstead.irccloud.com)
[00:44:10] *** Joins: cis (cis@user/cis)
[00:44:10] *** Joins: machuga (~machuga@104.236.124.225)
[00:44:10] *** Joins: Jck_true (~jcktrue@user/jck-true/x-0200799)
[00:44:10] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[00:44:10] *** Joins: cyberbanjo (mksybr@tilde.team)
[00:44:10] *** Joins: Fusl (fusl@1.0.0.127.in-addr.arpa.li)
[00:44:10] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[00:44:10] *** Joins: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9)
[00:44:10] *** Joins: Deide (~deide@user/deide)
[00:44:10] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[00:44:10] *** Joins: chronon (~chronon@user/chronon)
[00:44:10] *** Joins: stagas (~stagas@2a02:587:c40c:7fd2:27e5:9579:b326:6aba)
[00:44:10] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:9151:64f9:5c4c:ad39)
[00:44:10] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[00:44:10] *** Joins: sagax (~sagax_nb@user/sagax)
[00:44:10] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[00:44:10] *** Joins: pax_os__ (uid535114@ilkley.irccloud.com)
[00:44:10] *** Joins: Dev0n (~Dev0n@user/dev0n)
[00:44:10] *** Joins: richardwh1uk (richardwhi@scarlet.richardwhiuk.com)
[00:44:10] *** Joins: futs (~nico@142.93.239.247)
[00:44:10] *** Joins: betterOn1 (~user@vmi489242.contaboserver.net)
[00:44:10] *** Joins: Henry151 (~bishop@user/henry151)
[00:44:10] *** Joins: rvgate (~rvgate@user/rvgate)
[00:44:10] *** Joins: sybariten (~jake@157.90.217.120)
[00:44:10] *** Joins: nortoh (~nortoh@user/nortoh)
[00:44:10] *** Joins: NoiseEee (~NoiseEee@178.128.153.219)
[00:44:10] *** Joins: root__ (~root@157.245.144.252)
[00:44:10] *** Joins: prawnsalad (~prawnsala@82-71-13-185.dsl.in-addr.zen.co.uk)
[00:44:10] *** Joins: remolej (~kenoba@user/kenoba)
[00:44:10] *** Joins: henry40408 (~henry4040@175.181.155.165)
[00:44:10] *** Joins: BSaboia (~bsaboia@95.179.154.99)
[00:44:10] *** Joins: Geenirvana (~root@151-236-220-136.ip.linodeusercontent.com)
[00:44:10] *** Joins: siyb (~siyb@h081217185055.dyn.cm.kabsi.at)
[00:44:10] *** Joins: xse (~xse@user/xse)
[00:44:10] *** Joins: flughafen (~flughafen@p5de8ed0b.dip0.t-ipconnect.de)
[00:44:10] *** Joins: Harlin (~DonQixote@75-163-148-159.clsp.qwest.net)
[00:44:10] *** Joins: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[00:44:10] *** Joins: c4017w__ (~c4017@209.52.68.8)
[00:44:10] *** Joins: szkl (uid110435@uxbridge.irccloud.com)
[00:44:10] *** Joins: dysfigured (~dfg@dfg.rocks)
[00:44:10] *** Joins: _var (~kdy@kiana.kdy.ch)
[00:44:10] *** Joins: Woet (~me@irc.woet.me)
[00:44:10] *** Joins: Pajus (~Pajus@user/pajus)
[00:44:10] *** Joins: shantaram (shan@cyblog/maintainer/shan)
[00:44:10] *** Joins: cluelessperson (~cluelessp@user/cluelessperson)
[00:44:10] *** Joins: yolo (~xxiao@li1120-73.members.linode.com)
[00:44:10] *** Joins: percY- (~percY@138.68.239.19)
[00:44:10] *** Joins: a1paca (~a1paca@user/a1paca)
[00:44:10] *** Joins: dante443 (~dante443@99-88-166-99.lightspeed.milwwi.sbcglobal.net)
[00:44:10] *** Joins: bradp- (~bradp@cpe-70-92-7-182.wi.res.rr.com)
[00:44:10] *** Joins: Pabc1_ (~Pabc1@45.77.53.54)
[00:44:10] *** Joins: fkrauthan (~fkrauthan@user/fkrauthan)
[00:44:10] *** Joins: rick123 (~rick123@157.245.192.96)
[00:44:10] *** Joins: klys (~mdasoh@show.op8.us)
[00:44:10] *** Joins: OneMirror (~far@onegrandcircle.com)
[00:44:10] *** Joins: znf (ibm86@blender.linge-ma.ro)
[00:44:10] *** Joins: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[00:44:10] *** Joins: shayr_ (shayr@ip62.ip-91-134-189.eu)
[00:44:10] *** Joins: phenom (~primus@user/phenom)
[00:44:10] *** Joins: dka (~code-is-a@ns3059207.ip-193-70-33.eu)
[00:44:10] *** Joins: SpiceMan (~Don_Spice@user/SpiceMan)
[00:44:10] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[00:44:10] *** Joins: simpleauthority (~simpleaut@user/simpleauthority)
[00:44:10] *** Joins: Byteflux (~byte@byteflux.net)
[00:44:10] *** Joins: shokohsc (~shokohsc@lfbn-idf2-1-1472-129.w92-169.abo.wanadoo.fr)
[00:44:10] *** Joins: duds- (~duds-@user/duds)
[00:44:10] *** Joins: jochum (~quassel@user/jochum)
[00:44:10] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[00:44:10] *** Joins: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com)
[00:44:10] *** Joins: tazle (tazle@kapsi.fi)
[00:44:10] *** Joins: mven (~mven@ip68-104-39-54.lv.lv.cox.net)
[00:44:10] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[00:44:10] *** Joins: PowaBanga (~PowaBanga@user/powabanga)
[00:44:10] *** Joins: EdFletcher (~PKD@user/edfletcher)
[00:44:10] *** Joins: junktext (~junktext@gateway/vpn/pia/junktext)
[00:44:10] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[00:44:10] *** Joins: nepeat (~nepeat@79.110.170.60)
[00:44:10] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[00:44:10] *** Joins: bliminse (~bliminse@host86-188-36-166.range86-188.btcentralplus.com)
[00:44:10] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[00:44:10] *** Joins: noarb (~noarb@user/noarb)
[00:44:10] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[00:44:10] *** Joins: aLeSD (~aLeSD@139.47.114.114)
[00:44:10] *** Joins: moldorcoder7 (~moldorcod@188.95.55.24)
[00:44:10] *** Joins: pmercado_ (~pmercado@190.22.160.49)
[00:44:10] *** Joins: defn (~n0b0dy@user/defn)
[00:44:10] *** Joins: wovixo (~wovixo@128.104.205.49)
[00:44:10] *** Joins: glider (~glider@user/glider)
[00:44:10] *** Joins: goddard (~goddard@user/goddard)
[00:44:10] *** Joins: Reign (~Username@ip98-161-226-10.ph.ph.cox.net)
[00:44:10] *** Joins: The_Blod- (~Blode@user/the-blode/x-7164444)
[00:44:10] *** Joins: Haxxa (~Haxxa@125-253-30-213.ip4.superloop.com)
[00:44:10] *** Joins: ArchNoob (~archnoob@41.59.4.196)
[00:44:10] *** Joins: funhouse (~funhouse@user/funhouse)
[00:44:10] *** Joins: SOMBRIO (~SOMBRIO@177.137.113.71)
[00:44:10] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:60a3:a532:ba52:cb9d)
[00:44:10] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[00:44:10] *** Joins: wolfshappen (~waff@irc.furworks.de)
[00:44:10] *** Joins: SchmoSeph (uid530771@tinside.irccloud.com)
[00:44:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[00:44:10] *** Joins: litharge (litharge@libera/bot/litharge)
[00:44:14] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Max SendQ exceeded)
[00:44:14] *** Quits: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4) (Max SendQ exceeded)
[00:44:27] *** Joins: Spr0cket (sprocket@user/Spr0cket)
[00:44:29] *** Quits: jmcantrell (~jmcantrel@user/jmcantrell) (Max SendQ exceeded)
[00:44:29] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[00:44:29] *** Joins: fweht (uid404746@lymington.irccloud.com)
[00:44:29] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[00:44:29] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[00:44:29] *** Joins: hax (~hax@user/hax)
[00:44:29] *** Joins: Akiva (~Akiva@user/Akiva)
[00:44:29] *** Joins: sgen (~sgen@2607:fea8:7ce1:c8e0:f141:ba0b:da0:3c4d)
[00:44:29] *** Joins: sudomann (~sudomann@98.219.211.182)
[00:44:29] *** Joins: realies (~realies@user/realies)
[00:44:29] *** Joins: MassDebates_ (~MassDebat@2600:1700:1184:4510:815:9af6:dd18:89ff)
[00:44:29] *** Joins: gproto23 (~gproto23@user/gproto23)
[00:44:29] *** Joins: Koopz (~Koopz@koopz.rocks)
[00:44:29] *** Joins: bobdobbs (~user@2406:5a00:4456:db00:f9b1:3765:d0cf:c4b9)
[00:44:29] *** Joins: ThePendulum (~znc@user/ThePendulum)
[00:44:29] *** Joins: kmh_ (~kmh@94.31.106.215)
[00:44:29] *** Joins: Linkandzelda (~Linkandze@cloudirc.laz.li)
[00:44:29] *** Joins: pizdets (~pizdets@183.182.111.120)
[00:44:29] *** Joins: mdemo (~mdemo@user/mdemo22)
[00:44:29] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[00:44:29] *** Joins: dmanto (~dmanto@181.110.128.9)
[00:44:29] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:44:29] *** Joins: Isthmusi (~Isthmus@user/isveni)
[00:44:29] *** Joins: jw_dungeon (~quassel@2601:44:4380:4a10:4587:3637:b23f:ed34)
[00:44:29] *** Joins: b-rex (van@down.by.the.river.lol)
[00:44:29] *** Joins: Fossil (~Fossil@2a03:b0c0:0:1010::398:b001)
[00:44:29] *** Joins: baakeydow (~baake@2001:41d0:203:b12c::)
[00:44:29] *** Joins: EgonX (~EgonX@2601:2c6:47f:879e:117c:703e:db5f:c029)
[00:44:29] *** Joins: raj_ (raj@2600:3c03::f03c:91ff:feae:498)
[00:44:29] *** Joins: dan_berg_pub_ (2c6463a49d@2604:bf00:561:2000::1c)
[00:44:29] *** Joins: Anonamy (~Anonamy@2001:569:7b8c:5300:43ca:5acf:d440:6416)
[00:44:29] *** Joins: themaxdavitt_ (sid433050@id-433050.hampstead.irccloud.com)
[00:44:29] *** Joins: jwpapi (sid502614@id-502614.uxbridge.irccloud.com)
[00:44:29] *** Joins: notchris (sid181145@id-181145.hampstead.irccloud.com)
[00:44:29] *** Joins: llinguini (sid257922@id-257922.hampstead.irccloud.com)
[00:44:29] *** Joins: pragma- (~chaos@user/pragmatic-chaos)
[00:44:29] *** Joins: chowmeined (~chowmeine@user/chowmeined)
[00:44:29] *** Joins: doji (~doji@user/doji)
[00:44:29] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[00:44:29] *** Joins: m_antis (~znc_admin@ool-44c09a21.dyn.optonline.net)
[00:44:29] *** Joins: qwedfg_ (~qwedfg@user/qwedfg)
[00:44:29] *** Joins: ezzieyguywuf (~Unknown@user/ezzieyguywuf)
[00:44:29] *** Joins: blezz (~blez@213-130-92-213.ip.btc-net.bg)
[00:44:29] *** Joins: pagios (~pagios@life.is-a.beauty)
[00:44:29] *** Joins: edr (~edr@user/edr)
[00:44:29] *** Joins: kzootech (~contact@kzoo.tech)
[00:44:29] *** Joins: mattf (mattf@2600:3c03::f03c:92ff:fea6:56a4)
[00:44:29] *** Joins: Talon (~Talon@172.77.106.63)
[00:44:29] *** Joins: g2anj (~v@58.228.230.4)
[00:44:29] *** Joins: davlefou (~davlefou@5.183.213.164)
[00:44:29] *** Joins: systemfault (sid267009@id-267009.uxbridge.irccloud.com)
[00:44:29] *** Joins: graingert (sid128301@id-128301.tinside.irccloud.com)
[00:44:29] *** Joins: Kol (~Kol@75.157.122.186)
[00:44:29] *** Joins: DK3 (~DK3@user/DK3)
[00:44:29] *** Joins: OverCoder (~OverCoder@user/overcoder)
[00:44:29] *** Joins: fruitypunk (~user@2a01:7c8:aaaa:12:5054:ff:fe69:1df9)
[00:44:29] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[00:44:29] *** Joins: winlundn (nick@2600:3c01::f03c:92ff:fe32:c297)
[00:44:29] *** Joins: croraf (croraf@croraf.ircforever.org)
[00:44:29] *** Joins: avu (~jan@user/avu)
[00:44:29] *** Joins: ryzenda (~ryzenda@pool-74-109-246-70.pitbpa.fios.verizon.net)
[00:44:29] *** Joins: k_sze (~k_sze@mail2.kalunite.net)
[00:44:29] *** Joins: shreyasminocha (51fdc93eda@user/shreyasminocha)
[00:44:29] *** Joins: sm2n (ae95cb1267@user/sm2n)
[00:44:29] *** Joins: b0o (0e4a0bf4c9@2604:bf00:561:2000::1bf)
[00:44:29] *** Joins: nemesit (~nemesit@myriadvisuals.com)
[00:44:29] *** Joins: Sol3 (~Sol3@user/sol3)
[00:44:29] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[00:44:29] *** Joins: bayleaf (~bayleaf@192.249.60.20)
[00:44:29] *** Joins: lucerne (~lucerne@ip202.ip-51-178-215.eu)
[00:44:29] *** Joins: lewisje (~lewisje@72.49.207.113)
[00:44:29] *** Joins: H4Z3 (~H4ZE@165.227.36.29)
[00:44:29] *** Joins: hackdash (h@user/hackdash)
[00:44:29] *** Joins: petril (~petril@user/petril)
[00:44:29] *** Joins: jsatk__ (sid304796@id-304796.helmsley.irccloud.com)
[00:44:29] *** Joins: PanamaCity3003 (~PanamaCit@skylab/user/panamacity3003)
[00:44:29] *** Joins: mishiranu (~mishiranu@78.129.171.229)
[00:44:29] *** Joins: silly (silly@user/silly)
[00:44:29] *** Joins: olspookishmagus (~pookie@snf-137798.vm.okeanos.grnet.gr)
[00:44:29] *** Quits: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb) (Max SendQ exceeded)
[00:44:39] *** Joins: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de)
[00:44:40] <systemfault> Holy....
[00:44:49] *** Joins: alystair (~alystair@user/alystair)
[00:44:49] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[00:44:49] *** Joins: kadoban (~kadoban@user/kadoban)
[00:44:49] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[00:44:49] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[00:44:49] *** Joins: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a)
[00:44:49] *** Joins: voltage_ (voltage@user/voltage)
[00:44:49] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[00:44:49] *** Joins: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b)
[00:44:49] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[00:44:49] *** Joins: nicoty (~nicoty@user/nicoty)
[00:44:49] *** Joins: thykka (~thykka@2a01:4f8:c0c:e335::1)
[00:44:49] *** Joins: arash- (arash@thinks.life.is-a.beauty)
[00:44:49] *** Joins: _0x1d3 (sid43116@id-43116.tinside.irccloud.com)
[00:44:49] *** Joins: adas (adas@adas.shelltalk.net)
[00:44:49] *** Joins: LtHummus (~lthummus@97-126-121-3.tukw.qwest.net)
[00:44:49] *** Joins: Bish (~arne@ip-037-024-001-041.um08.pools.vodafone-ip.de)
[00:44:49] *** Joins: Dorward (~dorward@2001:8b0:683:6dc5:56b2:3ff:fe9c:2b78)
[00:44:49] *** Joins: c17r (~c17r@c17r.com)
[00:44:49] *** Joins: wyre (~wyre@user/wyre)
[00:44:49] *** Joins: Artea (~Lufia@artea.com.pt)
[00:44:49] *** Joins: Selicre (~x@hello.i.am.selic.re)
[00:44:49] *** Joins: DCTWD (~dc@uz.utmappro.com)
[00:44:49] *** Joins: theskillwithin (~theskillw@user/theskillwithin)
[00:44:49] *** Joins: gkatsev (~gkatsev@spacecompute.com)
[00:44:50] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Max SendQ exceeded)
[00:44:56] *** Quits: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b) (Ping timeout: 245 seconds)
[00:44:56] *** Quits: kadoban (~kadoban@user/kadoban) (Max SendQ exceeded)
[00:45:01] *** Joins: JohnComputation2 (~JohnCompu@gateway/tor-sasl/johncomputation)
[00:45:01] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[00:45:01] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[00:45:01] *** Joins: de-facto (~de-facto@user/de-facto)
[00:45:01] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[00:45:01] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[00:45:01] *** Quits: WillPittenger (~willpitte@2001:470:69fc:105::1bf) (Ping timeout: 250 seconds)
[00:45:01] *** Quits: bitonic (~bitonic@2001:470:69fc:105::1812) (Ping timeout: 250 seconds)
[00:45:01] *** Quits: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9) (Ping timeout: 250 seconds)
[00:45:01] *** Joins: quesker (~idnet@mail.89vx.net)
[00:45:01] *** Joins: MrBurns (~japa@ec2-13-48-124-121.eu-north-1.compute.amazonaws.com)
[00:45:01] *** Joins: _nderscore (~nderscore@silentf.art)
[00:45:01] *** Joins: WizJin (~z0rbaznc@78.141.221.79)
[00:45:01] *** Joins: rdrg109 (~rdrg109@user/rdrg109)
[00:45:01] *** Joins: laris (undead@37.221.209.36)
[00:45:01] *** Joins: kinabalu (~kinabalu@about/java/kinabalu)
[00:45:01] *** Joins: JayDoubleu_ (sid339529@id-339529.hampstead.irccloud.com)
[00:45:01] *** Joins: Ownix (sid11917@id-11917.helmsley.irccloud.com)
[00:45:01] *** Joins: patchie (sid504252@id-504252.ilkley.irccloud.com)
[00:45:01] *** Joins: merced (merced@user/merced)
[00:45:02] *** Quits: paulcarroty (~paulcarro@2001:470:69fc:105::216) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: Darvesh[m] (~drvshmatr@2001:470:69fc:105::1:6c1e) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: assemblylang[m] (~assemblyl@2001:470:69fc:105::1:7012) (Ping timeout: 240 seconds)
[00:45:08] *** Quits: rdrg109 (~rdrg109@user/rdrg109) (Max SendQ exceeded)
[00:45:08] *** Quits: aesth[m] (~aesthmatr@2001:470:69fc:105::1:57c1) (Ping timeout: 252 seconds)
[00:45:18] *** Joins: aolko[m] (~aolko93ma@2001:470:69fc:105::68ec)
[00:45:18] *** Joins: mekeor[m] (~mekeormat@2001:470:69fc:105::17e4)
[00:45:18] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[00:45:18] *** Joins: kirk (kirk@kirk.shelltalk.net)
[00:45:18] *** Joins: Jaran (~mail@user/jaran)
[00:45:18] *** Joins: fury__ (~fury@znc.codexterous.com)
[00:45:18] *** Joins: victor__ (sid208353@id-208353.tinside.irccloud.com)
[00:45:18] *** Joins: SrPx (sid108780@id-108780.uxbridge.irccloud.com)
[00:45:18] *** Joins: cythrawll (sid384410@id-384410.ilkley.irccloud.com)
[00:45:18] *** Joins: Argorok (sid195487@id-195487.hampstead.irccloud.com)
[00:45:18] *** Joins: Slade (uid128877@user/slade)
[00:45:18] *** Joins: dirigible_ (~dirigible@2607:9000:0:3:36a4:cf80:2f7b:6990)
[00:45:18] *** Joins: cebor (~cebor@user/cebor)
[00:45:18] *** Joins: kadobanana (~mud@user/kadoban)
[00:45:18] *** Joins: Jigsy (~Jigsy@user/jigsy)
[00:45:18] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[00:45:18] *** Joins: AciD (~fu@user/acid/x-5205451)
[00:45:18] *** Joins: ninjabanjo (~ninjabanj@107.150.45.163)
[00:45:18] *** Joins: zitter (~danilodim@93-57-35-194.ip162.fastwebnet.it)
[00:45:18] *** Joins: twiclo (~twiclo@2604:7b80:2000:1069:52fc:cedd:fbeb:10c)
[00:45:18] *** Joins: Ducki (~ducki@user/ducki)
[00:45:18] *** Joins: xsperry (~xs@user/xsperry)
[00:45:18] *** Joins: ljharb (sid43720@user/ljharb)
[00:45:18] *** Joins: lebster (sid17131@id-17131.hampstead.irccloud.com)
[00:45:18] *** Joins: celphi (sid97751@user/celphi)
[00:45:18] *** Joins: DrAnything (uid538291@id-538291.lymington.irccloud.com)
[00:45:18] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[00:45:18] *** Joins: Donitz (~Donitz@88-115-149-215.elisa-laajakaista.fi)
[00:45:18] *** Joins: symm (symmetry@user/sym)
[00:45:18] *** Joins: packet_lozenge_ (~packet_lo@user/packet-lozenge/x-7125090)
[00:45:18] *** Joins: austincheney (~austinche@104-189-235-24.lightspeed.rcsntx.sbcglobal.net)
[00:45:18] *** Joins: happymeal (~happymeal@user/happymeal)
[00:45:18] *** Joins: TheStormsOfFury (~StormsOfF@wsip-207-162-134-107.tu.ok.cox.net)
[00:45:18] *** Joins: eqw (~eqw@31.134.178.99)
[00:45:18] *** Joins: Pilum (~JKM@user/pilum)
[00:45:18] *** Joins: biberu (~biberu@user/biberu)
[00:45:18] *** Joins: FlannelKing (~flannel@cpe-76-175-193-181.socal.res.rr.com)
[00:45:18] *** Joins: mdel (~mdel@user/mdel)
[00:45:18] *** Joins: hendry (~hendry@210.23.22.2)
[00:45:18] *** Joins: CuriousErnestBro (~CuriousEr@user/curiousernestbro)
[00:45:18] *** Joins: fakuve (~fakuve@192.210.243.250)
[00:45:18] *** Joins: PigDude (~PigDude@159.203.16.199)
[00:45:18] *** Joins: theglass (~glass@user/theglass)
[00:45:18] *** Joins: since_ (d1cb7284cb@ircbox.informatik.uni-erlangen.de)
[00:45:18] *** Joins: Moyst_ (~moyst@user/moyst)
[00:45:18] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[00:45:18] *** erbium.libera.chat sets mode: +o ljharb
[00:45:18] *** Joins: Emil (emil@emil.fi)
[00:45:18] *** Joins: ringo__ (~ringo@157.230.117.128)
[00:45:19] *** Quits: saltrocklamp[m] (~hexology@user/hexology) (Ping timeout: 245 seconds)
[00:45:19] *** Quits: aolko[m] (~aolko93ma@2001:470:69fc:105::68ec) (Ping timeout: 245 seconds)
[00:45:19] *** Quits: hendry (~hendry@210.23.22.2) (Max SendQ exceeded)
[00:45:19] *** Quits: boris[m]12 (~borisruna@2001:470:69fc:105::32f3) (Max SendQ exceeded)
[00:45:21] *** Quits: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a) (Ping timeout: 245 seconds)
[00:45:25] *** Quits: loke[m] (~loke@2001:470:69fc:105::237) (Ping timeout: 240 seconds)
[00:45:25] *** Quits: Deide (~deide@user/deide) (Ping timeout: 250 seconds)
[00:45:41] *** Quits: graingert[m] (~graingert@2001:470:69fc:105::653) (Ping timeout: 252 seconds)
[00:45:46] *** Quits: nicoty (~nicoty@user/nicoty) (Ping timeout: 245 seconds)
[00:45:49] *** Quits: greggerz (~greggerzm@2001:470:69fc:105::da2) (Ping timeout: 240 seconds)
[00:46:06] *** Quits: ericson2314 (~ericson23@2001:470:69fc:105::70c) (Ping timeout: 260 seconds)
[00:46:15] *** Quits: mekeor[m] (~mekeormat@2001:470:69fc:105::17e4) (Ping timeout: 268 seconds)
[00:46:15] *** Quits: szkl (uid110435@uxbridge.irccloud.com) (Client Quit)
[00:46:17] *** Quits: SOMBRIO (~SOMBRIO@177.137.113.71) (Ping timeout: 256 seconds)
[00:46:21] *** Joins: Relms-Wah (Relms@104-48-80-112.lightspeed.irvnca.sbcglobal.net)
[00:47:09] *** Quits: mogad0n (~mogad0n@user/mogad0n) (Ping timeout: 250 seconds)
[00:47:11] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Read error: Connection reset by peer)
[00:47:13] *** Quits: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de) (Client Quit)
[00:47:27] *** Joins: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de)
[00:47:28] <flughafen> systemfault: feel free to punch me
[00:47:29] *** Quits: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net) (Ping timeout: 254 seconds)
[00:47:38] *** Joins: hendry (~hendry@210.23.22.2)
[00:47:41] <jaawerth> n> Object('orly') @ljharb
[00:47:41] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:47:42] *** Joins: szkl (uid110435@uxbridge.irccloud.com)
[00:47:42] <jellobot> ljharb, [String: 'orly']
[00:47:49] *** Quits: NiKaN (sid385034@id-385034.helmsley.irccloud.com) (Ping timeout: 240 seconds)
[00:47:49] *** Quits: itok (sid418430@id-418430.ilkley.irccloud.com) (Ping timeout: 240 seconds)
[00:47:58] *** Joins: mogad0n (~mogad0n@mph.monster)
[00:48:04] *** Quits: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de) (Client Quit)
[00:48:22] *** Joins: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de)
[00:48:27] *** Quits: JayDoubleu_ (sid339529@id-339529.hampstead.irccloud.com) (Ping timeout: 264 seconds)
[00:48:38] *** Quits: funhouse (~funhouse@user/funhouse) (Quit: Client closed)
[00:48:49] *** Joins: funhouse (~funhouse@207.216.155.249)
[00:49:25] *** Joins: JayDoubleu_ (sid339529@hampstead.irccloud.com)
[00:49:41] *** Joins: touti (~under@102.157.108.149)
[00:49:59] *** Joins: NiKaN (sid385034@helmsley.irccloud.com)
[00:50:50] *** Joins: itok (sid418430@ilkley.irccloud.com)
[00:51:36] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[00:51:54] *** Quits: c4017w__ (~c4017@209.52.68.8) (Quit: Leaving)
[00:52:41] *** Joins: c4017w (~c4017@209.52.68.8)
[00:53:33] *** Quits: szkl (uid110435@uxbridge.irccloud.com) ()
[00:54:17] *** Quits: c4017w (~c4017@209.52.68.8) (Client Quit)
[00:54:36] *** Joins: c4017w (~c4017@209.52.68.8)
[00:56:44] <jaawerth> flughafen: ok, step one, let's pass it through a formatter, it's easier to figure stuff out when it's easer to read it http://ix.io/3Otc/js
[00:56:54] <jaawerth> now, if you look at line 38
[00:57:20] *** Joins: seed0 (~seed0@li1647-214.members.linode.com)
[00:57:29] <jaawerth> keep in mind that .filter takes an array and returns an array of passing values, so in order to get the URLs from all of the passing values...
[00:57:47] <jaawerth> you'll need to use another array method :)
[01:01:08] *** Quits: seed0 (~seed0@li1647-214.members.linode.com) (Client Quit)
[01:01:14] <stenno> riding the libera rollercoaster since 2021
[01:01:17] *** Joins: seed0 (~seed0@li1647-214.members.linode.com)
[01:01:17] <devslash> has anyone here converted a React typescript app to JSX
[01:01:31] *** Joins: ChanServ (ChanServ@services.libera.chat)
[01:01:31] *** erbium.libera.chat sets mode: +o ChanServ
[01:01:32] <devslash> stenno I found out that Ionic uses typescript by default
[01:01:50] *** mogad0n is now known as Guest7176
[01:01:52] <devslash> I changed useStrict to false in tsconfig.json
[01:01:53] *** Joins: pluri (~pluri@user/pluri)
[01:01:55] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[01:01:56] *** Quits: seed0 (~seed0@li1647-214.members.linode.com) (Changing host)
[01:01:56] *** Joins: seed0 (~seed0@user/seed0)
[01:02:00] <stenno> err ok?
[01:02:07] <stenno> are you sure you are talking to the right person?
[01:02:18] *** Joins: corwin (someone@fosshost/director/corwin)
[01:02:44] <devslash> no sorry should have said onosendi
[01:02:52] <stenno> ok np
[01:03:15] *** Quits: Relms-Wah (Relms@104-48-80-112.lightspeed.irvnca.sbcglobal.net) (Changing host)
[01:03:15] *** Joins: Relms-Wah (Relms@user/relms)
[01:03:21] *** Joins: deniska (~deniska@user/deniska)
[01:03:29] *** Quits: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de) (Quit: leaving)
[01:03:37] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[01:03:41] <ljharb> jaawerth: not a nice person, you
[01:03:41] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[01:03:48] <ljharb> onosendi: you need to auth
[01:04:03] *** Quits: onosendi (~onosendi@ip70-162-92-63.ph.ph.cox.net) (Quit: WeeChat 3.4)
[01:04:22] *** Joins: onosendi (~onosendi@user/onosendi)
[01:04:29] <onosendi> ljharb: thanks
[01:04:46] <jaawerth> haha it's your own fault, I'm pretty sure it was you who pointed out that particularly quirk to me like 5 years ago
[01:05:15] <onosendi> devslash: ah, so it does use TypeScript. There's no flag to use JavaScript? Kind of weird a library forces TypeScript on someone. That's excluding a big chunk of users.
[01:05:25] <jaawerth> it's best not to show me things, I will only use them to cause trouble
[01:05:28] <jaawerth> well, too late now
[01:05:33] *** Quits: pmercado_ (~pmercado@190.22.160.49) (Ping timeout: 256 seconds)
[01:05:37] <ljharb> jaawerth: lol fair
[01:05:47] <devslash> onosendi, i read that you can change strict to false in tsconfig.json
[01:05:48] <ljharb> onosendi: if a package is published as raw typescript, it's broken
[01:05:52] <ljharb> devslash: and you shouldn't do that
[01:05:57] <ljharb> in TS, strict should always be true
[01:06:02] *** Joins: rdrg109 (~rdrg109@user/rdrg109)
[01:06:49] *** Joins: w0ng (~w0ng@103.1.212.158)
[01:06:53] *** Parts: Guest7176 (~mogad0n@mph.monster) ()
[01:07:29] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:60a3:a532:ba52:cb9d) (Quit: Client closed)
[01:08:42] <stenno> wb ChanServ
[01:08:53] <systemfault> Wee... about time.
[01:10:51] <hassoon_> what happened
[01:10:52] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[01:11:09] <stenno> hassoon_: see global notice
[01:11:27] <devslash> but when i try to pass a value  down to a child, <ShoppingListPage activecomponent={activeComponent} I am getting an error because its still trying to render typescript apparently
[01:11:51] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:9151:64f9:5c4c:ad39) (Ping timeout: 250 seconds)
[01:11:54] <hassoon_> stenno: connectivity issues with libera ?
[01:12:21] <stenno> services were awol shortly because of networking issues
[01:12:33] <hassoon_> i see
[01:12:41] *** Quits: EdFletcher (~PKD@user/edfletcher) (Remote host closed the connection)
[01:12:54] <onosendi> devslash: Have you tried to change all ts files to js, and tsx files to jsx?
[01:12:57] *** Quits: seed0 (~seed0@user/seed0) (Ping timeout: 250 seconds)
[01:13:15] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:9926:39c3:76e4:f1da)
[01:13:42] *** Joins: ezio (~ezio@cpe688f2ec706e3-cm688f2ec706e0.cpe.net.cable.rogers.com)
[01:15:18] *** Joins: EdFletcher (~PKD@user/edfletcher)
[01:15:42] *** Joins: seed0 (~seed0@li1647-214.members.linode.com)
[01:15:42] *** Quits: seed0 (~seed0@li1647-214.members.linode.com) (Changing host)
[01:15:42] *** Joins: seed0 (~seed0@user/seed0)
[01:15:58] <buu> Augh, passdown!
[01:16:48] *** Quits: deniska (~deniska@user/deniska) (Remote host closed the connection)
[01:19:58] *** Joins: kadoban (~kadoban@user/kadoban)
[01:20:51] <devslash> onosendi, not yet. I read on a site specific to ionic and react that disabling strict should be enough without renaming them but maybe I do need to do that
[01:21:16] *** Joins: mekeor[m] (~mekeormat@2001:470:69fc:105::17e4)
[01:21:59] *** Joins: aolko[m] (~aolko93ma@2001:470:69fc:105::68ec)
[01:22:09] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:22:12] <devslash> I renamed App.tsx to App.js and the error went away because its treating the file as a js not typescript
[01:22:15] <devslash> thanks onosendi
[01:22:45] <devslash> I was about to scrap this project if I was going to be forced to use TypeScript
[01:23:44] <devslash> I'm going to rename all of the other TypeScript files and that should fix my issue
[01:30:02] *** Joins: paule32 (~paul@nat-91-137-17-17.net.encoline.de)
[01:30:02] *** Quits: paule32 (~paul@nat-91-137-17-17.net.encoline.de) (Changing host)
[01:30:02] *** Joins: paule32 (~paul@user/paule32)
[01:30:16] *** Joins: WillPittenger (~willpitte@2001:470:69fc:105::1bf)
[01:31:08] *** Joins: MichaelLaRosa[m] (~michaelbi@2001:470:69fc:105::1:6ac9)
[01:31:10] *** Joins: aesth[m] (~aesthmatr@2001:470:69fc:105::1:57c1)
[01:31:11] *** Joins: assemblylang[m] (~assemblyl@2001:470:69fc:105::1:7012)
[01:31:12] *** Joins: f33d1[m] (~g0nkstead@2001:470:69fc:105::1:320b)
[01:31:14] *** Joins: bitonic (~bitonic@2001:470:69fc:105::1812)
[01:33:03] *** Joins: moldorcoder7_ (~moldorcod@37.120.143.29)
[01:33:19] *** Quits: moldorcoder7 (~moldorcod@188.95.55.24) (Ping timeout: 256 seconds)
[01:37:36] *** Quits: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Quit: Leaving.)
[01:37:51] *** Joins: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[01:42:17] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[01:42:39] *** Joins: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net)
[01:42:45] *** Quits: funhouse (~funhouse@207.216.155.249) (Quit: Client closed)
[01:43:12] *** Joins: SOMBRIO (~SOMBRIO@177.137.113.71)
[01:44:35] *** Joins: paulcarroty (~paulcarro@2001:470:69fc:105::216)
[01:44:50] *** Joins: loke[m] (~loke@2001:470:69fc:105::237)
[01:44:51] *** Joins: Deide (~deide@user/deide)
[01:44:59] *** Joins: Hansuke[m] (~hansukema@2001:470:69fc:105::1:86bb)
[01:45:23] *** Joins: ericson2314 (~ericson23@2001:470:69fc:105::70c)
[01:45:30] *** Joins: boris[m]12 (~borisruna@2001:470:69fc:105::32f3)
[01:45:31] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[01:45:31] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[01:45:31] *** Joins: wroathe (~wroathe@user/wroathe)
[01:45:34] *** Joins: nicoty (~nicoty@user/nicoty)
[01:45:35] *** Joins: graingert[m] (~graingert@2001:470:69fc:105::653)
[01:46:18] *** Joins: greggerz (~greggerzm@2001:470:69fc:105::da2)
[01:48:02] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:53:02] *** Quits: EdFletcher (~PKD@user/edfletcher) (Remote host closed the connection)
[01:53:49] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:60a3:a532:ba52:cb9d)
[01:54:27] *** Joins: EdFletcher (~PKD@user/edfletcher)
[01:55:17] *** Joins: c4017w_ (~c4017@209.52.68.8)
[01:55:25] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[01:56:25] *** Joins: hsiktas[m] (~hsiktasm]@2001:470:69fc:105::30d4)
[01:56:59] *** Joins: jmcantrell (~jmcantrel@user/jmcantrell)
[01:57:00] *** Joins: banana__ (~banana_@cpe-65-29-184-109.wi.res.rr.com)
[01:57:05] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[01:57:06] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:60a3:a532:ba52:cb9d) (Client Quit)
[01:58:27] *** Quits: flughafen (~flughafen@p5de8ed0b.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[01:58:53] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[01:59:20] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[01:59:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[02:00:17] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Ping timeout: 256 seconds)
[02:00:51] *** Quits: mikrosis (~mikrosis@dynamic-046-114-173-011.46.114.pool.telefonica.de) (Ping timeout: 256 seconds)
[02:01:05] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 256 seconds)
[02:01:35] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[02:05:15] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Remote host closed the connection)
[02:05:36] *** Joins: undefined_bob (~undefined@user/undefined-bob/x-5411918)
[02:06:53] <relipse> https://www.irccloud.com/pastebin/QMPoDSmO/
[02:06:59] <relipse> What is wrong with my code?
[02:07:06] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[02:07:06] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[02:07:06] *** Joins: wroathe (~wroathe@user/wroathe)
[02:07:13] <relipse> when i drag the element changes width height
[02:07:24] <austincheney> relipse, you tell us.  What problem are you encountering?
[02:08:01] <austincheney> relipse, are you wanting to change the size or location of the element?
[02:08:14] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:3409:1e75:e0d1:26a7)
[02:08:18] <relipse> hold on
[02:08:23] <relipse> i'll come up with an example
[02:10:37] *** Quits: eXtr3m0 (~eXtr3m0@user/eXtr3m0) (Ping timeout: 240 seconds)
[02:11:51] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[02:15:57] *** Joins: N4buc0 (~N4buc0@2804:7f4:348a:fff2:a7a8:cb6e:faf0:c957)
[02:16:58] *** Joins: h274f[m] (~h274fmatr@2001:470:69fc:105::1:6a8a)
[02:17:58] *** Quits: N4buc0 (~N4buc0@2804:7f4:348a:fff2:a7a8:cb6e:faf0:c957) (Remote host closed the connection)
[02:18:06] *** Joins: N4buc0 (~N4buc0@191.250.117.129)
[02:18:16] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Ping timeout: 245 seconds)
[02:18:21] *** Quits: maret (~maret@nat-88-212-37-89.antik.sk) (Quit: maret)
[02:18:50] *** Joins: Darvesh[m] (~drvshmatr@2001:470:69fc:105::1:6c1e)
[02:18:59] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Read error: Connection reset by peer)
[02:22:09] *** Quits: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Quit: Leaving.)
[02:22:38] *** Quits: daoumilseitek (~daoumilse@164.96.146.77.rev.sfr.net) (Quit: Leaving)
[02:23:34] *** Joins: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com)
[02:23:59] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[02:26:18] *** Joins: saltrocklamp[m] (~hexology@user/hexology)
[02:27:10] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[02:28:35] *** Joins: nomic (~nomic@185.192.69.3)
[02:29:03] <relipse> ok if you go to cworklog.com/eingame2/level_editor.php and you click and drag the mouse on the game area, it like flickers to a different position, try dragging slowly
[02:29:30] <relipse> it is supposed to work like normal drag area select objects
[02:30:01] *** Quits: Sven_vB (~sven@user/sven-vb/x-2094958) (Remote host closed the connection)
[02:30:08] *** Joins: kakashiA1 (~kakashi@ip-037-201-196-020.um10.pools.vodafone-ip.de)
[02:30:13] *** Quits: APic (~apic@apic.name) (Ping timeout: 256 seconds)
[02:30:26] *** Joins: Sven_vB (~sven@user/sven-vb/x-2094958)
[02:30:30] *** Joins: goddard (~goddard@user/goddard)
[02:31:56] *** Joins: APic (apic@apic.name)
[02:33:13] *** Quits: heatwave (~heatwave@103.248.94.247) (Quit: WeeChat 3.4)
[02:33:49] *** Joins: pizdets_ (~pizdets@183.182.110.216)
[02:34:26] *** Quits: pizdets (~pizdets@183.182.111.120) (Ping timeout: 250 seconds)
[02:35:22] <relipse> austincheney: did you see it
[02:35:53] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[02:37:06] *** Joins: mikey_p (uid129477@uxbridge.irccloud.com)
[02:37:35] *** Joins: advanced_malform (~nuke@189.5.58.77)
[02:37:55] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[02:37:58] *** Joins: jj_attaq (~jj_attaq@95.180.91.76)
[02:38:24] *** Quits: pluri (~pluri@user/pluri) (Quit: Textual IRC Client: www.textualapp.com)
[02:39:00] *** Joins: gambl0re (~gambl0re@cpe688f2e1852a3-cm688f2e1852a0.cpe.net.cable.rogers.com)
[02:40:19] *** Quits: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se) (Client Quit)
[02:41:26] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:44:03] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[02:45:48] *** Parts: jj_attaq (~jj_attaq@95.180.91.76) ()
[02:45:57] *** Joins: geowiesnot (~user@5-51-190-244.abo.bbox.fr)
[02:46:16] *** Joins: trevors (~trevors@user/trevors)
[02:52:53] *** Quits: paule32 (~paul@user/paule32) (Quit: Leaving)
[02:53:02] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[02:53:57] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 240 seconds)
[02:54:00] <ljharb> kirk: yes. but you need to auth with nickserv for non-ops to see what you say. see the last link in the topic
[02:55:44] *** Joins: CoolerX (~CoolerX@user/coolerx)
[02:55:48] *** Quits: AJTJ (~AJTJ@d205-234-49-159.yt.northwestel.net) (Quit: Leaving...)
[02:55:49] *** Joins: c4017w__ (~c4017@209.52.68.8)
[02:55:58] *** Parts: kirk (kirk@kirk.shelltalk.net) ()
[02:56:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[02:56:27] *** Joins: barkle (kirk@kirk.shelltalk.net)
[02:56:38] <barkle> is it generally bad practice to use inline onclick= argument ?
[02:56:41] <barkle> and one with 'function handler(e) { ... }; handler(event);' inside of it too ?
[02:57:09] <barkle> or should I use $(document).ready() instead?
[02:57:27] *** Quits: advanced_malform (~nuke@189.5.58.77) (Quit: Leaving.)
[02:58:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[02:59:31] *** Quits: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:00:48] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 256 seconds)
[03:02:26] <systemfault> Yes, it's bad practice, you should be using addEventListener + <script defer> or the DOMContentLoaded event (.on an .ready/$(function() {}) in jQuery)
[03:02:55] <systemfault> Having JS sprinkled into your HTML files everywhere isn't great for maintainability
[03:03:04] <systemfault> Better have separate .js files
[03:03:43] <systemfault> There's also the fact that there's only one handler that can be added "inline", with addEventListener, you can add as many as you want
[03:03:59] <ljharb> !inline @ barkle
[03:04:00] <jellobot> barkle, Inline event handlers are essentially `eval` inside HTML markup - they're bad practice and result in poorly factored, hard-to-manage code. Seriously consider attaching your events with JavaScript, instead, eg: https://developer.mozilla.org/en/DOM/element.addEventListener
[03:04:02] <ljharb> !onfoo @ barkle
[03:04:02] <jellobot> barkle, Using ".onclick", ".onchange", or "on" anything is bad practice and results in poorly factored, hard-to-manage code; as well as limiting you to one event listener per event. Consider attaching your events with addEventListener, instead, eg: https://developer.mozilla.org/en/DOM/element.addEventListener
[03:04:06] *** Joins: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au)
[03:04:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[03:04:21] <systemfault> I really need to learn those bot commands..
[03:06:37] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[03:07:09] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 256 seconds)
[03:10:17] *** Quits: banana__ (~banana_@cpe-65-29-184-109.wi.res.rr.com) (Ping timeout: 240 seconds)
[03:12:09] *** Joins: rustyshackleford (uid236774@helmsley.irccloud.com)
[03:12:15] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[03:12:59] *** Joins: advanced_malform (~nuke@189.5.58.77)
[03:13:52] *** Joins: sickdyd (~sickd@FL1-133-209-71-249.tky.mesh.ad.jp)
[03:16:18] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:17:13] *** Joins: banana__ (~banana_@2603-6000-b500-9ce3-3db9-83d9-00cd-92d5.res6.spectrum.com)
[03:18:49] *** Joins: mat001 (~mat001@213.143.69.121)
[03:20:11] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[03:20:22] *** Quits: off^ (~off@128-092-174-141.biz.spectrum.com) (Remote host closed the connection)
[03:20:29] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[03:21:19] *** Quits: geowiesnot (~user@5-51-190-244.abo.bbox.fr) (Ping timeout: 256 seconds)
[03:21:33] *** Joins: pavonia (~user@user/siracusa)
[03:24:38] *** Joins: trevors (~trevors@user/trevors)
[03:28:07] *** Parts: pavonia (~user@user/siracusa) ()
[03:28:15] *** Joins: pavonia (~user@user/siracusa)
[03:29:27] <pavonia> Is there an dedicated ops-channel?
[03:30:33] *** Quits: advanced_malform (~nuke@189.5.58.77) (Quit: Leaving.)
[03:30:40] <ljharb> pavonia: if there were, why would non-ops know about it
[03:30:50] <jaawerth> I've been an op for years and I don't know about it
[03:31:03] <jaawerth> mind you even if people tried to tell me about it I still wouldn't know about it
[03:31:39] <ljharb> lol
[03:31:42] <pavonia> ljharb: To discuss op-related things. For example in ##programming you get banned if you dicuss those things in the main channel
[03:31:47] <ljharb> jaawerth: i was being mysterious, damnit
[03:31:54] <ljharb> pavonia: that's what PM is for
[03:32:38] <ljharb> pavonia: there's no reason a non-op would need to talk to multiple ops at once, since one op's permanent ban will never be overturned by another op.
[03:33:40] <pavonia> Even if you know who an op is, they might not be available at that time, so it can be useful to inform all ops about an issue
[03:34:15] *** Joins: goddard (~goddard@user/goddard)
[03:34:16] *** Joins: kli_ (~kli@ip-89-177-122-45.net.upcbroadband.cz)
[03:34:59] <ljharb> pavonia: sure. like what kind of issue?
[03:35:21] <ljharb> if it's something happening in-channel, either they'll notice, or you can just highlight people
[03:35:51] *** Quits: kli_ (~kli@ip-89-177-122-45.net.upcbroadband.cz) (Remote host closed the connection)
[03:36:04] *** Joins: Guest94 (~Guest94@2601:640:8300:14c0:a942:37b1:725a:391f)
[03:36:07] <jaawerth> ljharb: I'm just saying one could very well have existed this whole time and I'd be blissfully ignorant
[03:37:16] <relipse> Why would my mouse position function return weird results
[03:37:31] *** touti was kicked by ljharb (touti)
[03:38:11] *** Quits: Guest94 (~Guest94@2601:640:8300:14c0:a942:37b1:725a:391f) (Client Quit)
[03:40:17] <Tabmow> I have a JSON object like this that I need to post to an API (https://dpaste.org/FuBU) - what's the best way to work with that in javascript? I have all the data I just need to essentially build that JSON in an easy to populate the arrays etc.
[03:43:05] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 256 seconds)
[03:45:45] <stenno> i know channels with bots that react to !ops trigger which would send a notice to channel ops
[03:46:04] * Maxdamantus is triggered.
[03:47:08] * sheetjs triggers Maxdamantus
[03:47:18] <Maxdamantus> ow
[03:47:38] *** Quits: ox1eef (~0x1eef@user/ox1eef) (Quit: Leaving)
[03:48:12] *** Joins: ox1eef (~0x1eef@user/ox1eef)
[03:49:03] *** Quits: gxt (~gxt@gateway/tor-sasl/gxt) (Ping timeout: 276 seconds)
[03:49:15] <sheetjs> is there a proposal for 128 bit floating point support?
[03:49:22] *** Joins: onosendi (~onosendi@user/onosendi)
[03:49:25] <ljharb> stenno: the problem is that the factoid isn't up to date, and also it's not the same op list for the three channels it's in
[03:49:40] <ljharb> sheetjs: there's a proposal for Decimal. it's unclear if it'll be Decimal128, or just unbounded Decimal
[03:49:43] <ljharb> i hope the latter
[03:49:51] <stenno> bot could check channel flags
[03:50:00] <ljharb> true, that's nice and fancy
[03:50:08] <ljharb> that'd be a good pr to jellobot
[03:50:15] <stenno> imma do it
[03:50:30] <stenno> err
[03:50:42] *** Joins: gxt (~gxt@gateway/tor-sasl/gxt)
[03:50:48] <sheetjs> if there is a proposal, please advise against the ios approach
[03:50:49] <pragma-> thing is, every irc network has their own subtle variation of channl services
[03:50:50] <stenno> sudden rush of confidence at 1h30 AM
[03:51:13] *** Quits: ArchNoob (~archnoob@41.59.4.196) (Remote host closed the connection)
[03:51:23] <ljharb> sheetjs: which is what
[03:51:27] <stenno> good point pragma-
[03:51:47] <sheetjs> "Each 128-bit long double is made up of two IEEE doubles (head and tail).  The value of the long double is the sum of the values of the two parts (unless the head double has value -0.0, in which case the value of the long double is -0.0).  The value of the head is required to be the value of the long double rounded to the nearest double.
[03:52:09] *** Joins: goddard (~goddard@user/goddard)
[03:52:21] <ljharb> pragma-: sure but no irc network but libera matters
[03:52:27] <sheetjs> "The 128-bit long double format provides 106 significant bits ... It has the same exponent range as double"
[03:52:40] <ljharb> sheetjs: sounds like Decimal128 yeah. why is that bad?
[03:52:43] <sheetjs> all you really need to know is
[03:52:55] <sheetjs> "There are many 128-bit bit patterns that are not valid as long doubles."
[03:53:35] <sheetjs> the format theoretically doubles the number of mantissa bits but preserves the number of exponent bits
[03:54:02] <sheetjs> decimal128 actually uses all 128 bits
[03:56:41] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[03:59:38] *** Joins: MadcapJake (~MadcapJak@2600:6c44:257f:e1f7::1a29)
[04:00:09] <ljharb> sheetjs: ok so i'm still not clear on what the downside is
[04:00:27] <ljharb> sheetjs: but if you want to file an issue detailing it on https://github.com/tc39/proposal-decimal that'd be helpful
[04:00:30] <sheetjs> there are 128 bits in a 128 bit number
[04:00:39] <ljharb> potentially, yes
[04:00:50] <ljharb> it doesn't require 128 bits to store most of the numbers
[04:02:48] <sheetjs> apple's 128-bit format uses 1 bit sign, 11 bits exponent, 106 bits mantissa
[04:02:55] <sheetjs> if you do the math,
[04:02:58] <sheetjs> n> 106+11+1
[04:02:59] <jellobot> (okay) 118
[04:03:52] <sheetjs> tho i was asking more about binary128
[04:03:53] *** Joins: crashrep (~crashrep@user/crashrep)
[04:03:57] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[04:04:04] <ljharb> so i still don't see the problem
[04:04:10] <sheetjs>  / binary256
[04:04:22] <ljharb> there's no proposal for any binary anything in js
[04:04:29] <sheetjs> out of 128 bits, the apple version does not use 10
[04:05:11] *** Quits: Reign (~Username@ip98-161-226-10.ph.ph.cox.net) (Quit: Going offline, see ya! (www.adiirc.com))
[04:05:46] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[04:06:20] <ljharb> and?
[04:06:52] <Maxdamantus> Hmm.. unbounded decimal seems weird.
[04:07:04] <ljharb> it's floating point numbers, "every number" isn't going to be representable no matter what
[04:07:04] <Maxdamantus> what would happen if you do 1d/3d? error
[04:07:12] <Maxdamantus> s/$/?/
[04:07:15] <ljharb> Maxdamantus: it'd give you 0.33333 repeating
[04:07:26] <ljharb> obv that "repeating" thing would have to be handled somehow
[04:07:27] <Maxdamantus> So it's a rational?
[04:07:28] <sheetjs> rational would make more sense
[04:07:38] <Maxdamantus> Rationals have additional issues.
[04:07:41] <sheetjs> but you can kinda do that now with bigints
[04:07:43] <ljharb> i guess if it's not a rational, then sure, it'd throw
[04:08:14] <ljharb> not sure why "unbounded" changes anything there
[04:08:20] <Maxdamantus> And practically, people aren't going to use the unbounded decimal representation of rationals.
[04:08:58] <Maxdamantus> if you look at the decimal representation of something like 1/1234567, it'll have a period of 800 or so.
[04:10:11] <Maxdamantus> actually, 34020, so much bigger than I though.
[04:10:15] <Maxdamantus> https://www.wolframalpha.com/input?i=1%2F1234567
[04:10:16] <ljharb> the point is to use the number, it doesn’t matter if the toString is very long
[04:10:22] <ljharb> bigints can also be arbitrarily long
[04:10:35] <Maxdamantus> Yeah, I'm in favour of unbounded bigints.
[04:10:48] <Maxdamantus> because it's clear what the representation of a bigint is, and how it's useful.
[04:11:05] <ljharb> how is it less clear for numbers?
[04:11:08] <ljharb> it’d just math
[04:11:30] *** Quits: DrAnything (uid538291@id-538291.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[04:11:34] <Maxdamantus> integers are more important in programming, since counting is a very common thing there.
[04:11:58] <Maxdamantus> fractions are more usage-specific, and different usages might want different things.
[04:12:21] <Maxdamantus> if people use rationals for graphics, they'll run into serious performance issues.
[04:12:33] <jaawerth> honestly let them abstract it away with rationals and power series so you can just evaluate at the precision you need. the alternative is just to present flotas are good enough anyway
[04:12:40] <jaawerth> *pretend
[04:13:18] <ljharb> money is pretty important
[04:13:19] *** Joins: szutt (~szutt@116.37.2.145)
[04:13:19] <Maxdamantus> (by serious performance issues, I mean something like memory consumption that becomes quadratic or exponential or something over time)
[04:13:26] <ljharb> and crypto means 128 bits isn’t near enough precision
[04:13:39] <jaawerth> half-joking, but not only half. JS already abstracts and does weird optimizations and all kinds of stuff under the hood, if you want control over what's going on with your math cpu cycles then use another language
[04:14:00] <jaawerth> (ok I don't REALLY mean that. part of me does, but part of me doesn't)
[04:14:40] <Maxdamantus> at least in the crypto case, you're almost definitely still going to be counting things.
[04:15:15] <Maxdamantus> people are just going to decide to multiply the balances every now and then to account for deflation.
[04:16:48] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:17:01] <jaawerth> well far be it from me to prevent high-precision money-laundering heyoooo
[04:17:08] <Maxdamantus> I suspect you can probably always quantise real money too, and most people are going to want to divide into tens, which is why a floating binary point could be unsuitable.
[04:18:32] <jaawerth> the sumerians had it right
[04:18:54] *** Quits: rcoote (~rcoote@2a02:908:690:a140:647b:9d11:b52b:c420) (Ping timeout: 260 seconds)
[04:18:56] <Maxdamantus> (that is, I suspect business transactions are unlikely to be defined in terms like $(1/3))
[04:19:31] <jaawerth> that will be 20 dollars, 27 minutes, and 12 secconds please
[04:19:38] <Maxdamantus> (if a $1m business deal gets split three ways, someone's just going to agree to take $1 less)
[04:20:15] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:22:43] <jaawerth> come on that minutes and seconds joke was gold
[04:23:09] <jaawerth> https://p.jaawerth.com/garak.gif
[04:23:26] <Maxdamantus> So $20.45[3]?
[04:23:49] *** Joins: src (~src@user/src)
[04:24:19] *** Quits: MadcapJake (~MadcapJak@2600:6c44:257f:e1f7::1a29) (Quit: MadcapJake)
[04:24:41] <Maxdamantus> n> 20 + (27*60 + 12)/3600
[04:24:42] <jellobot> (okay) 20.453333333333333
[04:25:59] <Maxdamantus> Actually, I guess that wouldn't be right.
[04:26:25] <jaawerth> first you'd need to decide what the monetary value of a degree is
[04:26:48] <jaawerth> like, a 360th of a dollar doesn't make sense. a 360th of a million?
[04:27:16] <jaawerth> 360th of a thousand? then $333.3333333 would just be 120 degrees
[04:27:29] <Maxdamantus> I was assuming a dollar would equate to a turn, but apparently a minute is 1/60 degree rather than 1/60 turn as I thought.
[04:27:51] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 256 seconds)
[04:27:51] * Maxdamantus doesn't do much astronomy.
[04:27:54] <jaawerth> yeah that system is actually ridiculously precise haha
[04:27:58] <jaawerth> I mean, it has to be
[04:28:26] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[04:28:28] <jaawerth> but also the whole 12/60/360 etc just.. works out really well in terms of factors
[04:29:15] <jaawerth> plus if you count the digits you can count to 12 on one hand and 144 on two, it works out great
[04:29:21] <Maxdamantus> I'm still sceptical.
[04:29:39] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[04:30:02] <Maxdamantus> I think the relationships between hours/minutes/seconds is still based on pre-SI logic.
[04:30:08] <jaawerth> I am admittedly being somewhat facetious. it's all artifacts of how we express things anyway, and there's always going to be repeating digits *somewhere*. it's just that the phonecian-based system works for a lot of practical ratios
[04:30:39] *** Quits: banana__ (~banana_@2603-6000-b500-9ce3-3db9-83d9-00cd-92d5.res6.spectrum.com) (Quit: Leaving)
[04:31:01] <jaawerth> (and nobody bring up the whole binary finger counting thing, that is just uncomfortable :P )
[04:31:17] *** Quits: kakashiA1 (~kakashi@ip-037-201-196-020.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[04:31:32] *** Joins: banana_ (~banana_@user/banana/x-2944094)
[04:31:57] <Maxdamantus> Fine, I'll bring it up.
[04:31:58] <Maxdamantus> https://drive.google.com/file/d/15eyfRPhuUU-z3cPU64IK-ybP54SZrgxa/view
[04:32:11] <banana_> newb Promise question: when building an async function, async as in a function that returns a promise, do you generally not provide an error callback so the programming RerferenceError's aren't silenced in the log, at least not until you resolve your programming bugs.
[04:32:29] <banana_> in the console I meant
[04:33:49] <banana_> just wondering thanks. this has been a pain more than lately, but always kind of an issue with promise objects.
[04:33:52] *** Joins: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417)
[04:37:07] <jaawerth> Maxattax: lol, yes yes but adopting the 12-based one takes no effort at all ;-). it is cool though
[04:37:17] <jaawerth> banana_: you mean not adding a .catch or a second callback to .then?
[04:37:17] *** Quits: Anonamy (~Anonamy@2001:569:7b8c:5300:43ca:5acf:d440:6416) (Read error: Connection reset by peer)
[04:37:29] <banana_> yep
[04:37:41] *** Joins: Anonamy (~Anonamy@node-1w7jr9qsmpnqx5s3vo4msg2dy.ipv6.telus.net)
[04:38:47] <jaawerth> banana_: if there's no immmediate good way for you to do it that isn't annoying you can always make use of
[04:38:50] <jaawerth> !mdn unhandledrejection
[04:38:52] <jellobot> jaawerth, unhandledrejection event is sent to the global scope of a script when a JavaScript Promise that has no rejection handler is rejected; typically, this is the window, but may also be a Worker. https://mdn.io/unhandledrejection
[04:39:08] <jaawerth> with something sensible that will stop you from properly handling things later
[04:39:19] <jaawerth> er, that will ensure you properly handle things, rather
[04:39:26] *** Quits: advanced_malform (~nuke@2804:14d:90bd:8c0c:87ae:425f:8f1a:2417) (Quit: Leaving.)
[04:39:40] <jaawerth> !ciu unhandledrejection
[04:39:41] <jellobot> jaawerth, unhandledrejection/rejectionhandled events (Edge 79, FF 69, Chrome 49, Opera 36, Safari 11, iOS 11.3-11.4, Android 97) 93.74% https://caniuse.com/unhandledrejection
[04:39:44] <jaawerth> not bad
[04:39:58] <banana_> what I'm saying is in javascript code where there's no try...catch or error callback you have errors automatically logged to the browsers dev console
[04:40:32] <jaawerth> did you read that link?
[04:40:37] <banana_> but if you provide a try..catch or error callback you lose that feature on the browser console. idk thought I'd ask
[04:40:46] <banana_> no not yet.
[04:41:28] <jaawerth> so basically a promise eats the error and turns it into a rejection, and if you don't add an onError handler before that's one to handle, the reason you get that output in the console it because that event is emitted
[04:41:41] <jaawerth> but you can intercept it howevet you want using window.addEventListener
[04:41:49] <jaawerth> (or let it yell at you)
[04:42:28] <jaawerth> or you could like check based on NODE_ENV or whatever other param so that it does what's convenient but stops you from letting unhnadled rejections make it into prod
[04:42:41] <jaawerth> (except where applicable)
[04:43:54] <banana_> jaawerth: yeah but asking a situation where you do set an rejection handler
[04:44:24] <banana_> https://developer.mozilla.org/en-US/docs/Web/API/Window/unhandledrejection_event seems like this event is triggered when a rejection handles and there's no rejection handler
[04:44:40] <jaawerth> what features? logging to console?
[04:44:48] <banana_> I think I need another event type like this that's triggered regardless if there's a rejection handler
[04:45:09] <jaawerth> the point of that event handler is to take the default behavior and replace it with your own defined behavior
[04:45:14] <jaawerth> if you dont' want to define behavior you can leave it be
[04:45:17] <banana_> yeah pretty much logging to consoles when doing FE development
[04:45:44] <jaawerth> what other event are you looking for? I guess I don't follow
[04:46:14] <deltab> banana_: you have the option of rethrowing an exception if it's not been fully handled, and you can log an error to the console (with console.error etc.) regardless
[04:46:16] <banana_> unhandledrejection event is only triggered when your promise object doesn't have a rejection handler right??
[04:46:23] <deltab> yes
[04:46:54] <deltab> the debugger can intercept throws even if caught
[04:47:07] <jaawerth> yep. you can use it as a fallback and still handle them on-site wherever you reasonably can
[04:47:17] <jaawerth> yeah plus that with the debugger
[04:47:42] <jaawerth> I like stuff like that better htan just "log and eat the rejection," people do that a lot and don't think enough about how it changes the behavior, since now the promise will look resolved to the outside caller
[04:48:00] <banana_> wait
[04:48:06] <jaawerth> generally one wants to try to recover from their errors, or blow things up, etc
[04:48:23] <banana_> "the debugger can intercept throws even if caught"
[04:49:31] <banana_> yeah I want to blow things up. as in the console shows an error log for referenceError's but was thinking I didn't have to rethrow or console.error(...) in every rejection handler
[04:50:28] <banana_> especially if I'm working on a new async function or adding onto an existing one
[04:50:45] <banana_> maybe this is another reason to have a bunch of unit tests
[04:52:17] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[04:52:17] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[04:52:17] *** Joins: wroathe (~wroathe@user/wroathe)
[04:52:39] <jaawerth> that event is great for tests since you can use it to ensure you're not missing any errors that should have been handled properly
[04:53:00] <jaawerth> but yeah it should be the final catch-all, not unlike the final error middleware in express
[04:53:24] <jaawerth> from the perspective a the caller of a promise-returning function, there there should be a concept of "we failed to get this value"
[04:53:51] <jaawerth> or you make failure impossible by doing like p.catch(always(fallbackValue))
[04:53:59] <jaawerth> a little FP also goes a long way here :)
[04:54:51] *** Joins: goddard (~goddard@user/goddard)
[04:57:54] *** Joins: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net)
[04:58:27] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[04:58:57] *** Quits: goddard (~goddard@user/goddard) (Ping timeout: 240 seconds)
[04:59:21] *** Quits: cotko (~cotko@188-230-251-153.dynamic.t-2.net) (Ping timeout: 250 seconds)
[05:00:22] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:02:58] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[05:03:48] <banana_> youre saying there should always be a rejection handler
[05:04:05] <banana_> and if you missed some use that even type
[05:04:10] <banana_> event type*
[05:05:14] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:3409:1e75:e0d1:26a7) (Quit: Client closed)
[05:05:18] *** Joins: MadcapJake (~MadcapJak@2600:6c44:257f:e1f7::1a29)
[05:06:16] *** Quits: SchmoSeph (uid530771@tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:06:35] *** MassDebates_ is now known as MassDebates
[05:08:36] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[05:10:13] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:11:17] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[05:14:03] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:15:26] <systemfault> Every promise chain should have a catch (Either in .catch or 'try/catch" form)
[05:16:09] <jaawerth> unless the intended behavior is for it to bubble up and wreak havoc
[05:16:12] <jaawerth> which can happen
[05:16:14] <systemfault> If you use an async function as a callback to something that is not promise-friendly, then you need a try/catch...
[05:16:24] <jaawerth> what you don't want to do is just not do anythin and hope for the best. which is what most people do
[05:16:41] <jaawerth> that or, yes, try/catch everywhere, which just makes me sad
[05:17:13] *** Joins: off^ (~off@128-092-174-141.biz.spectrum.com)
[05:17:17] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:17:23] <systemfault> myElement.addEventListener('click', async (event) => { try { const data = await fetch(url).then(r => r.json()) } catch(e) { console.error(e); }})
[05:17:35] <systemfault> In this case, addEventListener is not promise-friendly...
[05:17:40] <banana_> i think my question was more of a browser app development question
[05:17:56] <austincheney> why not just pass a regular function in as the callback.  Why bother with an async function for a callback?
[05:17:59] <systemfault> So, if I want to use await, I should wrap the code in a try catch so it's impossible to have an unhandledrejection
[05:18:29] <systemfault> austincheney: Depends on the case, that just an example code
[05:18:57] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[05:19:00] *** Quits: off^ (~off@128-092-174-141.biz.spectrum.com) (Remote host closed the connection)
[05:19:04] <jaawerth> austincheney: it's not like they're mutually exclusive
[05:19:49] <banana_> I was just asking if everyone just creates a rejection handler for everything and add console.error(e) at the bottom of their handler block
[05:19:49] <jaawerth> I tend to use regular promise code to not need try/catch and sprinkle in some async/await as needed to clean up bits that would be simpler when imperative
[05:19:57] <austincheney> at any rate I have personally moved away from callbacks on HTTP responses for transmission handling.  I found it to be a form of tight coupling when you are in a distributed/decentralized environment where each point is a peer
[05:20:00] <banana_> *adds
[05:20:26] <jaawerth> I reject the idea that you can't mix them freely :)
[05:20:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[05:21:02] <jaawerth> async function iDoAsIPlease(f) { const result = await f().catch(handleError); return awyiss; }
[05:21:12] <banana_> I really hope I didn't start something else haha. so I'm talking just do console.error(e) in your rejection handler
[05:21:43] *** Quits: sgt_chuckles (~sgt_chuck@pool-71-190-209-205.nycmny.fios.verizon.net) (Quit: Client closed)
[05:21:48] <jaawerth> you can do that, just remember if you do it in a .catch that unless you re-throw you're going to trick whatever's next up the chain into thinking the promise has resolved
[05:21:49] <banana_> have your VSC autocomplete that line in for you everytime you create a rejection handler, or a catch block
[05:21:52] <austincheney> network handling is far more liberating when everything is a push and there is no round trip.  Just handle the data as it comes in.
[05:21:52] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[05:22:19] *** Quits: stagas (~stagas@2a02:587:c40c:7fd2:27e5:9579:b326:6aba) (Ping timeout: 250 seconds)
[05:22:23] <jaawerth> unless you have TCO and you can do recursive state machines
[05:22:28] <banana_> jaawerth: yeah but didn't you just say you should always provide a rejection handler?
[05:22:44] <jaawerth> the crux is that the behavior shoudl be explicit
[05:23:00] <jaawerth> generally yes, you should. but the "well I'll just console.log it" is papering over the problem
[05:23:02] <banana_> I guess idk what you mean or am ssuper confused now
[05:23:09] <banana_> "should be explicit"
[05:23:46] <jaawerth> like, if you put p.catch(err => console.error('oops', err)) all over the place, it wont' reaise that event anymore, sure. but now when I try to await or .then on the promise, I'll see it resolve to undefined
[05:23:54] <jaawerth> it's up to you whether that is acceptable behavior in the app
[05:24:10] <banana_> jaawerth: I'm talking about like a reusable function but the callers of this function would have to use the return promise properly
[05:24:11] <austincheney> explicit means assumptions are likely defects (unintended behaviors)
[05:24:11] <jaawerth> but it's not uncommon to just toss that everywhere and deal with the fallout later
[05:24:24] <jaawerth> ^ what austincheney said
[05:25:25] <austincheney> a primitive example of explicit:   if (x) {}  this is not explicit    this is explicit  if (x === true) {}
[05:25:43] <austincheney> that line of thinking should extend beyond syntax to network and messaging handling
[05:25:44] <jaawerth> I mean I do genreally keep varous little helpers around like `const tap = onValue => val => { onValue(val); return val; }, errorTap = onError => err => { onError(err); throw err; }` etc so I can intercept things without breaking the chain. plus various higher-order methods so I'm not inlining all kinds of callbacks
[05:26:04] <jaawerth> because then I can do like doAthing.catch(tryAgainWithBackoffAlgo).then(win)
[05:26:13] *** Quits: skillbot1 (~skillbot@user/skillbot) (Remote host closed the connection)
[05:26:20] <jaawerth> I mean, not always
[05:26:30] *** Joins: skillbot (~skillbot@user/skillbot)
[05:26:30] *** ChanServ sets mode: +v skillbot
[05:26:51] *** Quits: szutt (~szutt@116.37.2.145) (Quit: Client closed)
[05:26:58] <jaawerth> point being - you can definitely build up some utils, so long as you don't just use them to forget about thinking about how your code should resond to errors, async or not
[05:27:54] <Tabmow> If I have a datetime string like so - 202202011507 - is there an existing Date method out there that will give me something like '01-02-2022 15:07'?
[05:28:37] <banana_> jaawerth: yeah I don't think I'm overlooking that aspect
[05:29:13] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[05:29:55] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:9926:39c3:76e4:f1da) (Ping timeout: 250 seconds)
[05:30:20] <banana_> unless I am and i'm a pleb, I'd have to probably work with better devs to get pwned, but makes sense that you use utils like your example `errorTap = onError => err => { onError(err); throw err; }`
[05:30:45] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[05:31:25] <banana_> in my lexicon I think that's called a factory function, a function that returns a function
[05:32:47] <banana_> higher order functions
[05:32:48] <systemfault> Your lexicon is not ours though...
[05:32:56] <systemfault> A factory function is one that returns an object
[05:33:12] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:9926:39c3:76e4:f1da)
[05:33:13] <banana_> ah fuck sorry, I think I mean higher order function
[05:33:23] <banana_> a function that returns another function, whatever that's called
[05:33:43] <systemfault> Then yeah, a HOF is a function that either takes a function as parameter and/or returns one
[05:33:48] *** Joins: EvanCarroll (~ecarroll@50.222.187.218)
[05:33:52] <EvanCarroll> Anyone familiar with this problem https://stackoverflow.com/q/70965110/124486
[05:34:34] <banana_> thanks
[05:36:15] <jaawerth> yeah there are many terms. "thunks" are a subset of those too. anyway, you're in good company, it's really easy to overlook the error handling and JS doesn't do you many favors in giving you convenient tools to coordinate it
[05:36:20] <jaawerth> not out of the box, at least
[05:36:34] <jaawerth> but hey at least functions are first class values so you can pass them in, return them, etc etc
[05:37:11] <banana_> jaawerth, austincheney: thanks maybe if I saw some code expanding that primitive example of explicit behavior expanded to async callbacks (network and messaging handing mentioned) I would "get it more"
[05:37:17] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 240 seconds)
[05:37:33] <banana_> maybe there's a medium article out there.
[05:39:19] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Quit: Reconnecting)
[05:39:31] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[05:41:07] <banana_> unless, I'm an idiot, could be possible, jaawerth you were saying use a higher-order function in the rejection handler but don't mess up the promise chain
[05:42:09] <jaawerth> it's just one of those things anyone can be tempted to do
[05:42:12] <jaawerth> especially on a deadline
[05:42:51] <banana_> like avoid this
[05:42:53] <banana_> n> Promise.reject().catch((e) => { return; }).then((data) => console.log(data))
[05:42:54] <jellobot> (okay) undefined
[05:42:54] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:43:13] <banana_> stuff like that
[05:44:40] <jaawerth> Tabmow: this is one of the areas where the JS builtins are sadly limited. I would suggest looking at the date-fns library, which is small and module and has lots of convenience functions, such as https://date-fns.org/v2.28.0/docs/parse which will look very familiar from.. many other langs, plus the unix `date` command. that said, you can whip up something similar using template tag functions
[05:44:49] <banana_> jaawerth: just because I'm interested :) you're saying someone could be tempted to silently fail a rejection event
[05:45:16] <banana_> but then as a consequence break their promise chain
[05:46:12] *** Joins: vysn (~vysn@user/vysn)
[05:47:12] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:9926:39c3:76e4:f1da) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:47:43] <relipse> I wrote up a fiddle: https://jsfiddle.net/5fs1aov3/https://jsfiddle.net/5fs1aov3/ does anyone know why it is choking when trying to select?
[05:47:46] *** Quits: DrowningElysium (uid190788@user/drowningelysium) (Quit: Connection closed for inactivity)
[05:47:49] <relipse> https://jsfiddle.net/5fs1aov3/
[05:47:59] <banana_> I think I get it though, unless I don't but all good
[05:50:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[05:51:48] <jaawerth> it's just easy to overlook
[05:54:24] <banana_> jaawerth: that was responding to me right?
[05:54:57] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[05:58:35] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[05:58:35] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[05:58:35] *** Joins: wroathe (~wroathe@user/wroathe)
[06:03:03] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[06:03:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[06:05:03] *** Quits: fweht (uid404746@lymington.irccloud.com) (Quit: Connection closed for inactivity)
[06:06:52] *** Quits: CoolerX (~CoolerX@user/coolerx) (Remote host closed the connection)
[06:07:16] *** Joins: CoolerX (~CoolerX@user/coolerx)
[06:14:37] <Tabmow> jaawerth: I don't see a method in that lib that will help me... unless I'm overlooking it.
[06:17:48] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:18:14] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[06:20:57] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[06:25:10] <sheetjs> 𝄢 can't lint this 𝄢 my-my-my-my typescript hits me, so hard, makes me say, oh my var 𝄢
[06:25:28] <sheetjs> is there an eslint default for the esbuild subset of typescript?
[06:25:40] <jaawerth> Tabmow: I linked the method - you'd use it like parse('yyyyMMddHHmmss' '202202011507')
[06:25:58] <jaawerth> banana_: with the "easy to overlook?" yes
[06:26:42] <banana_> jaawerth: ah ok, yeah but that's why devs get fired for stuff like that. it keeps us in check
[06:27:23] <banana_> it's harder to overlook when you're given motivation to not overlook
[06:27:27] <jaawerth> Tabmow: you can also build something similar using Date.UTC for your specific example https://devdocs.io/javascript/global_objects/intl/datetimeformat/datetimeformat (the datetimeformat part you can take or leave depending on whether you need to format it special)
[06:33:22] <banana_> but interested in making Promise resolve values more explicit, if that's what you guys meant
[06:36:29] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[06:41:57] *** Quits: EvanCarroll (~ecarroll@50.222.187.218) (Ping timeout: 240 seconds)
[06:43:31] *** Joins: programmar (~whatever@118.69.128.37)
[06:44:04] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[06:44:28] <cthulchu> my wonderful folks, the back and forth in browsers... I mean the navigation, when we can go back. Does it use history for that? So if a site is an SPA that doesn't change url, title and history on navigations, we won't be able to go back seamlessly?
[06:44:36] <cthulchu> I mean, it would go back too far
[06:48:04] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[06:50:09] <deltab> cthulchu: yes, that is history. A spage can push entries onto the stack, or replace the top entry, and receive a popstate event when back is used
[06:50:47] <cthulchu> oh, so a page can hijack the back and override default?
[06:50:55] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[06:51:03] <deltab> https://developer.mozilla.org/en-US/docs/Web/API/History_API
[06:51:17] <deltab> to some extent, yes
[06:51:37] *** Joins: mihael (~mihael@180.190.181.71)
[06:52:42] *** Joins: spronkey (~spronkey@122-58-75-76-adsl.sparkbb.co.nz)
[06:52:59] <banana_> yep because javascript apps are better than webpages
[06:53:00] *** Quits: crashrep (~crashrep@user/crashrep) (Ping timeout: 276 seconds)
[06:53:24] <banana_> I think that was the browsers spec gods' rationale
[06:55:00] *** Quits: EdFletcher (~PKD@user/edfletcher) (Quit: Quit.)
[06:56:15] *** Quits: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz) (Remote host closed the connection)
[06:56:40] *** Joins: EdFletcher (~PKD@user/edfletcher)
[06:57:01] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[06:57:04] *** Joins: jazzy (~jaziz@user/jaziz)
[06:59:05] *** Joins: EvanCarroll (~ecarroll@67-200-246-226.static.logixcom.net)
[07:03:21] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[07:06:35] <programmar> guys about service worker please, so i have been registering this file which stays in the same directory as my index.html file https://pastebin.com/6amHGXjh, at first it works so good but after i tried to "unregister" it manually through the chrome devtools "Application" tab, after a refresh, it suddenly says "ServiceWOrker script evaluation failed", i checked the status code and it's "#15 redundant"
[07:06:44] <programmar> i mean how is that redundant, i have already unregistered it previously ?
[07:07:00] *** Joins: Rockwood (~Rocky@user/rocky)
[07:08:33] <Rockwood> KevinX, o/ there?
[07:12:44] *** Joins: ferdna (~ferdna@user/ferdna)
[07:13:10] *** Joins: jmdaemon (~jmdaemon@user/jmdaemon)
[07:13:33] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[07:15:49] *** Joins: crashrep (~crashrep@user/crashrep)
[07:16:28] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[07:18:18] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:18:55] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:18:55] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:18:55] *** Joins: wroathe (~wroathe@user/wroathe)
[07:20:27] *** Quits: sickdyd (~sickd@FL1-133-209-71-249.tky.mesh.ad.jp) (Ping timeout: 256 seconds)
[07:20:50] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:21:37] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[07:21:41] *** Quits: mihael (~mihael@180.190.181.71) (Quit: Client closed)
[07:23:51] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[07:25:01] *** Quits: nomic (~nomic@185.192.69.3) (Quit: Leaving)
[07:26:41] <deltab> programmar: semicolon on line 49?
[07:30:45] <Rockwood> app.js:45319 Uncaught TypeError: Cannot read properties of null (reading 'length')
[07:31:07] <Rockwood> its like fatal error but it shouldn't
[07:34:08] <Rockwood> but its not null in network tab
[07:35:14] <Rockwood> const result = await Fetch("topplayerlist", { method: "get" }); i am getting in network tab ["bn","cyberia","de","fc","hj"]
[07:36:01] <Rockwood> and in console its throwing {responseData?.length: undefined}
[07:36:30] <Rockwood>             const result = await Fetch("topplayerlist", { method: "get" });
[07:36:30] <Rockwood>             console.log({"responseData?.length": result} );
[07:39:17] *** Quits: programmar (~whatever@118.69.128.37) (Ping timeout: 240 seconds)
[07:39:31] <Rockwood> oops
[07:39:45] <Rockwood> my mistake of destructing
[07:40:23] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[07:40:23] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[07:40:23] *** Joins: wroathe (~wroathe@user/wroathe)
[07:41:00] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[07:42:51] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[07:44:55] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Remote host closed the connection)
[07:45:16] *** Joins: rewrit3 (~rewrit3@user/rewrit3)
[07:46:09] *** Quits: trevors (~trevors@user/trevors) (Quit: trevors)
[07:49:18] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[07:49:22] *** Quits: beencubed (~beencubed@209.131.238.248) (Quit: Leaving)
[07:49:55] *** Joins: beencubed (~beencubed@209.131.238.248)
[07:55:32] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 250 seconds)
[07:59:31] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[08:00:37] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[08:03:27] *** Joins: sickdyd (~sickd@FL1-133-209-71-249.tky.mesh.ad.jp)
[08:04:12] <Rockwood> oops
[08:04:14] <Rockwood> https://dpaste.com/FC2KETPA2
[08:06:13] *** Quits: mikey_p (uid129477@uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[08:08:17] *** Quits: sickdyd (~sickd@FL1-133-209-71-249.tky.mesh.ad.jp) (Ping timeout: 256 seconds)
[08:08:30] *** Quits: voltage_ (voltage@user/voltage) (Quit: Leaving)
[08:09:45] *** Joins: sudomann (~sudomann@98.219.211.182)
[08:09:59] *** Quits: SOMBRIO (~SOMBRIO@177.137.113.71) (Ping timeout: 256 seconds)
[08:12:15] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[08:13:57] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[08:15:48] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[08:15:48] *** Quits: Rockwood (~Rocky@user/rocky) (Read error: Connection reset by peer)
[08:15:49] *** Joins: programmar (~whatever@118.69.128.37)
[08:16:20] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[08:18:49] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:19:43] *** Joins: Rockwood (~Rocky@user/rocky)
[08:22:27] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[08:25:38] *** Joins: sudomann (~sudomann@98.219.211.182)
[08:26:02] *** Quits: gambl0re (~gambl0re@cpe688f2e1852a3-cm688f2e1852a0.cpe.net.cable.rogers.com) (Ping timeout: 252 seconds)
[08:27:09] *** Quits: Rockwood (~Rocky@user/rocky) (Quit: The Time is Over)
[08:28:10] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:28:10] *** Joins: stagas (~stagas@2a02:587:c40c:7fd2:51c3:c0d2:e2de:930c)
[08:29:30] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[08:30:10] *** Quits: pmwals09 (~pmwals09@c-73-218-223-243.hsd1.ma.comcast.net) (Remote host closed the connection)
[08:30:23] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[08:31:06] *** Joins: sudomann (~sudomann@98.219.211.182)
[08:32:06] <KevinX> You should use the fetch().then syntax there instead of async/await
[08:33:21] <KevinX> You probably also want to ensure the component is still mounted when you update the response data
[08:34:31] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[08:35:49] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[08:36:48] *** Joins: sickdyd (~sickd@FL1-133-209-71-249.tky.mesh.ad.jp)
[08:36:54] *** Joins: sudomann (~sudomann@98.219.211.182)
[08:37:36] *** Joins: matsaman (~matsaman@user/matsaman)
[08:39:23] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[08:40:06] *** Joins: yagamilito (~yagamilit@2601:642:4600:34b0:d1f8:9048:c21d:6c34)
[08:40:47] *** Joins: deniska (~deniska@user/deniska)
[08:40:57] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[08:43:35] *** Quits: rewrit3 (~rewrit3@user/rewrit3) (Quit: rewrit3)
[08:50:00] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[08:52:17] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[08:54:31] *** Joins: sudomann (~sudomann@98.219.211.182)
[08:55:53] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[08:56:20] *** Quits: MadcapJake (~MadcapJak@2600:6c44:257f:e1f7::1a29) (Quit: MadcapJake)
[08:58:37] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[09:04:38] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[09:04:38] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[09:04:38] *** Joins: wroathe (~wroathe@user/wroathe)
[09:07:35] *** Joins: mihael (~mihael@180.190.164.152)
[09:07:57] *** Quits: N4buc0 (~N4buc0@191.250.117.129) (Ping timeout: 240 seconds)
[09:09:29] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[09:12:04] *** Joins: sudomann (~sudomann@98.219.211.182)
[09:16:17] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 240 seconds)
[09:19:18] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:23:05] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:30:49] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[09:31:06] *** Quits: \mSg (mSg@user/msg/x-0285936) (Read error: Connection reset by peer)
[09:31:32] *** Joins: \mSg (mSg@user/msg/x-0285936)
[09:36:04] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:117c:703e:db5f:c029) (Ping timeout: 250 seconds)
[09:40:24] *** Quits: MassDebates (~MassDebat@2600:1700:1184:4510:815:9af6:dd18:89ff) (Ping timeout: 250 seconds)
[09:46:28] *** Joins: maret (~maret@nat-88-212-37-89.antik.sk)
[09:51:21] *** Quits: CoolerX (~CoolerX@user/coolerx) (Quit: Leaving)
[09:56:02] *** Quits: mihael (~mihael@180.190.164.152) (Quit: Client closed)
[10:01:23] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[10:02:43] *** Joins: EgonX (~EgonX@c-73-115-70-244.hsd1.tx.comcast.net)
[10:04:50] <rick123> Is there any channel, discord group you guys aware of that could help me with a few questions around multimedia containers and encoding ?
[10:04:59] *** Joins: masoudd (~masoudd@user/masoudd)
[10:05:38] *** Joins: han-solo (~hanish@user/han-solo)
[10:05:47] *** Joins: kakashiA1 (~kakashi@ip-037-201-196-020.um10.pools.vodafone-ip.de)
[10:06:06] *** Parts: programmar (~whatever@118.69.128.37) ()
[10:08:05] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[10:08:42] <matsaman> rick123: you could start here
[10:10:19] *** Quits: banana_ (~banana_@user/banana/x-2944094) (Quit: Leaving)
[10:14:25] <maret> Hi I am thinking about use of depdency injection in JS, in projects like Angular or Nest.js. My understading is that they use DI mainly because they rely on OOP where you end up with lot of objects passed around , creating a problem for testing  and tight coupling if not handled properly. The solution is therefore use some form of DI, with angular using relatively heavy handed or rely more on functional programming and monkey patching when
[10:14:25] <maret>  testing?
[10:14:50] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[10:16:46] *** Joins: vysn (~vysn@user/vysn)
[10:18:24] <maret> + with Angular the argument for using DI with IOC seems to be  that you configure depedencies for a module in once place, thus creating a one place where you can see all dependencies across multiple fiels
[10:19:37] *** Quits: EvanCarroll (~ecarroll@67-200-246-226.static.logixcom.net) (Ping timeout: 240 seconds)
[10:19:49] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:22:13] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[10:23:29] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:23:58] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Remote host closed the connection)
[10:24:15] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:30:40] *** Quits: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k) (Read error: Connection reset by peer)
[10:30:55] *** Joins: daniel-k3 (~daniel-k@fsf/emeritus/daniel-k)
[10:31:08] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[10:31:22] *** Joins: de-facto (~de-facto@user/de-facto)
[10:34:04] <rick123> matsaman: ok
[10:34:15] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Quit: Leaving...)
[10:34:32] <rick123> How does a tool like ffmpeg calculate the duration of a video file ? Is it mentioned somewhere in some headers/meta data or is it calculated by reading the entire contents ?
[10:35:07] <rick123> Also does video file actually have any headers/meta-data that I could read quickly ? Generally ffprobe/ffmpeg seems to wait a while while passing a video file of say 2mins. That means its reading the input.
[10:36:01] <undefined_bob> I dont know how that tool is doing it but I know that the lenght can be manipulated. So I guess its in the head/meta-data
[10:36:49] <undefined_bob> like you can manipulate a video in a way that a video player show its lenght = 10000000 hours but its only 10 sec
[10:36:57] <undefined_bob> for example ^^
[10:37:04] *** Quits: spronkey (~spronkey@122-58-75-76-adsl.sparkbb.co.nz) (Quit: you are feeeling very sleeeeeepyy......)
[10:37:30] <undefined_bob> I'm sure there are docs about video file headers
[10:39:45] <matsaman> rick123: I mean you can't really trust the metadata
[10:40:27] *** Joins: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9)
[10:40:40] <matsaman> rick123: what're you trying to do broadly?
[10:41:02] *** Quits: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9) (Max SendQ exceeded)
[10:41:23] *** Joins: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9)
[10:41:42] *** Joins: EvanCarroll (~ecarroll@68-78-105-35.lightspeed.hstntx.sbcglobal.net)
[10:42:12] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[10:45:07] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Remote host closed the connection)
[10:45:15] *** Joins: sam_1 (~sam_1@87.51.251.118)
[10:49:02] *** Quits: matsaman (~matsaman@user/matsaman) (Quit: leaving)
[10:49:08] *** Joins: spronkey (~spronkey@122-58-75-76-adsl.sparkbb.co.nz)
[10:51:49] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[10:54:50] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:a82b:45ec:56a1:f24)
[10:55:52] *** Quits: kinabalu (~kinabalu@about/java/kinabalu) (*.net *.split)
[10:55:52] *** Quits: Ownix (sid11917@id-11917.helmsley.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: patchie (sid504252@id-504252.ilkley.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: merced (merced@user/merced) (*.net *.split)
[10:55:52] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: Betal (~Betal@user/betal) (*.net *.split)
[10:55:52] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (*.net *.split)
[10:55:52] *** Quits: MootPoot (uid444585@ilkley.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: hughrawlinson_ (sid11243@ilkley.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: keypusher (keypusher@user/keypusher) (*.net *.split)
[10:55:52] *** Quits: abraham (~abraham@143.244.185.86) (*.net *.split)
[10:55:52] *** Quits: chovy (chovy@tilde.club) (*.net *.split)
[10:55:52] *** Quits: kalen (~kalen@gateway/vpn/pia/kalen) (*.net *.split)
[10:55:52] *** Quits: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net) (*.net *.split)
[10:55:52] *** Quits: robyn (~robyndrak@user/robyndrake) (*.net *.split)
[10:55:52] *** Quits: The_Tablet (~tablet@user/the-tablet) (*.net *.split)
[10:55:52] *** Quits: ttys000 (~ttys000@user/ttys000) (*.net *.split)
[10:55:52] *** Quits: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net) (*.net *.split)
[10:55:52] *** Quits: lefteye (~wbrawner@c-67-190-106-99.hsd1.co.comcast.net) (*.net *.split)
[10:55:52] *** Quits: Tabmow (~tabmow@user/tabmow) (*.net *.split)
[10:55:52] *** Quits: Alina-malina (~Alina-mal@user/alina-malina) (*.net *.split)
[10:55:52] *** Quits: erry (~erry@errietta.me) (*.net *.split)
[10:55:52] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (*.net *.split)
[10:55:52] *** Quits: vbgunz (~vbgunz@35.141.71.47) (*.net *.split)
[10:55:52] *** Quits: Stanley (~stanley@d66-183-88-69.bchsia.telus.net) (*.net *.split)
[10:55:52] *** Quits: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl) (*.net *.split)
[10:55:52] *** Quits: Nnnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com) (*.net *.split)
[10:55:52] *** Quits: Joel (~jjshoe@user/joel) (*.net *.split)
[10:55:52] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (*.net *.split)
[10:55:52] *** Quits: Alexendoo (~Alex@144.21.50.247) (*.net *.split)
[10:55:52] *** Quits: dskull (~dskull@user/dskull) (*.net *.split)
[10:55:52] *** Quits: brentaarnold (~brentaarn@24.112.58.14) (*.net *.split)
[10:55:52] *** Quits: kcrk (~kcrk@user/kcrk) (*.net *.split)
[10:55:52] *** Quits: monokrome| (~monokrome@50.215.11.140) (*.net *.split)
[10:55:52] *** Quits: justGhost (~justache@user/justache) (*.net *.split)
[10:55:52] *** Quits: Maxdamantus (~Maxdamant@user/maxdamantus) (*.net *.split)
[10:55:52] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (*.net *.split)
[10:55:52] *** Quits: sunyour (~sunyour@129.226.182.99) (*.net *.split)
[10:55:52] *** Quits: coc0nut (~coc0nut@user/coc0nut) (*.net *.split)
[10:55:52] *** Quits: hassoon__ (~hassoon@triton.blinkenshell.org) (*.net *.split)
[10:55:52] *** Quits: webstran- (~webstrand@user/webstrand) (*.net *.split)
[10:55:52] *** Quits: philivey9426 (~polarizin@188.166.72.81) (*.net *.split)
[10:55:52] *** Quits: cryocaustik7 (~cryocaust@user/cryocaustik) (*.net *.split)
[10:55:52] *** Quits: scoobydoo (~scooby@user/scoobydoo) (*.net *.split)
[10:55:52] *** Quits: Swant (~swant@libera/staff/swant) (*.net *.split)
[10:55:52] *** Quits: jellobot (~jellobot@li334-26.members.linode.com) (*.net *.split)
[10:55:52] *** Quits: llorllale (~llorllale@198.98.119.85) (*.net *.split)
[10:55:52] *** Quits: ethoxy (~root@bison.alphaw0lf.xyz) (*.net *.split)
[10:55:52] *** Quits: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (*.net *.split)
[10:55:52] *** Quits: [R] (~rs@genoce.org) (*.net *.split)
[10:55:52] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (*.net *.split)
[10:55:52] *** Quits: hassoon_ (hassoon@user/hassoon) (*.net *.split)
[10:55:52] *** Quits: Unfixed (~Jake@64.31.33.140) (*.net *.split)
[10:55:52] *** Quits: Spydar007 (~spydar007@user/spydar007) (*.net *.split)
[10:55:52] *** Quits: gjvc (~gjvc@user/gjvc) (*.net *.split)
[10:55:52] *** Quits: z8z (~x@ac255238.ppp.asahi-net.or.jp) (*.net *.split)
[10:55:52] *** Quits: dlam (~dlam@dlam.me) (*.net *.split)
[10:55:52] *** Quits: les_ (~whome@user/les) (*.net *.split)
[10:55:52] *** Quits: Lewix__ (sid158496@tinside.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: AlbertLast (~nix@0exclusive.de) (*.net *.split)
[10:58:05] *** Joins: whatsupdoc (uid509081@hampstead.irccloud.com)
[10:58:05] *** Joins: Betal (~Betal@user/betal)
[10:58:05] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[10:58:05] *** Joins: MootPoot (uid444585@ilkley.irccloud.com)
[10:58:05] *** Joins: hughrawlinson_ (sid11243@ilkley.irccloud.com)
[10:58:05] *** Joins: keypusher (keypusher@user/keypusher)
[10:58:05] *** Joins: abraham (~abraham@143.244.185.86)
[10:58:05] *** Joins: chovy (chovy@tilde.club)
[10:58:05] *** Joins: kalen (~kalen@gateway/vpn/pia/kalen)
[10:58:05] *** Joins: lmat (~Lmat@c-68-58-60-231.hsd1.in.comcast.net)
[10:58:05] *** Joins: robyn (~robyndrak@user/robyndrake)
[10:58:05] *** Joins: The_Tablet (~tablet@user/the-tablet)
[10:58:05] *** Joins: ttys000 (~ttys000@user/ttys000)
[10:58:05] *** Joins: robertmaxrees (~robert0@c-76-114-62-229.hsd1.ca.comcast.net)
[10:58:05] *** Joins: lefteye (~wbrawner@c-67-190-106-99.hsd1.co.comcast.net)
[10:58:05] *** Joins: Tabmow (~tabmow@user/tabmow)
[10:58:05] *** Joins: Alina-malina (~Alina-mal@user/alina-malina)
[10:58:05] *** Joins: erry (~erry@errietta.me)
[10:58:05] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[10:58:05] *** Joins: vbgunz (~vbgunz@35.141.71.47)
[10:58:05] *** Joins: Stanley (~stanley@d66-183-88-69.bchsia.telus.net)
[10:58:05] *** Joins: gde33 (~gde33@84-106-154-98.cable.dynamic.v4.ziggo.nl)
[10:58:05] *** Joins: Nnnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com)
[10:58:05] *** Joins: Joel (~jjshoe@user/joel)
[10:58:05] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[10:58:05] *** Joins: Alexendoo (~Alex@144.21.50.247)
[10:58:05] *** Joins: dskull (~dskull@user/dskull)
[10:58:05] *** Joins: brentaarnold (~brentaarn@24.112.58.14)
[10:58:05] *** Joins: kcrk (~kcrk@user/kcrk)
[10:58:05] *** Joins: monokrome| (~monokrome@50.215.11.140)
[10:58:05] *** Joins: justGhost (~justache@user/justache)
[10:58:05] *** Joins: Maxdamantus (~Maxdamant@user/maxdamantus)
[10:58:05] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[10:58:05] *** Joins: sunyour (~sunyour@129.226.182.99)
[10:58:05] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[10:58:05] *** Joins: webstran- (~webstrand@user/webstrand)
[10:58:05] *** Joins: philivey9426 (~polarizin@188.166.72.81)
[10:58:05] *** Joins: hassoon__ (~hassoon@triton.blinkenshell.org)
[10:58:05] *** Joins: cryocaustik7 (~cryocaust@user/cryocaustik)
[10:58:05] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[10:58:05] *** Joins: Swant (~swant@libera/staff/swant)
[10:58:05] *** Joins: jellobot (~jellobot@li334-26.members.linode.com)
[10:58:05] *** Joins: llorllale (~llorllale@198.98.119.85)
[10:58:05] *** Joins: ethoxy (~root@bison.alphaw0lf.xyz)
[10:58:05] *** Joins: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[10:58:05] *** Joins: [R] (~rs@genoce.org)
[10:58:05] *** erbium.libera.chat sets mode: +v jellobot
[10:58:05] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[10:58:05] *** Joins: hassoon_ (hassoon@user/hassoon)
[10:58:05] *** Joins: Unfixed (~Jake@64.31.33.140)
[10:58:05] *** Joins: Spydar007 (~spydar007@user/spydar007)
[10:58:05] *** Joins: gjvc (~gjvc@user/gjvc)
[10:58:05] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[10:58:05] *** Joins: dlam (~dlam@dlam.me)
[10:58:05] *** Joins: les_ (~whome@user/les)
[10:58:05] *** Joins: Lewix__ (sid158496@tinside.irccloud.com)
[10:58:05] *** Joins: AlbertLast (~nix@0exclusive.de)
[10:58:05] *** Joins: kinabalu (~kinabalu@about/java/kinabalu)
[10:58:05] *** Joins: Ownix (sid11917@id-11917.helmsley.irccloud.com)
[10:58:05] *** Joins: patchie (sid504252@id-504252.ilkley.irccloud.com)
[10:58:05] *** Joins: merced (merced@user/merced)
[10:59:11] *** Quits: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9) (Ping timeout: 256 seconds)
[11:00:04] *** Joins: nomic (~nomic@185.192.69.3)
[11:00:18] *** Joins: iomari891 (~iomari891@105.112.138.38)
[11:02:52] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:04:04] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:07:04] *** arash- is now known as arash
[11:08:56] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:09:39] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:13:41] *** Joins: fef (~thedawn@user/thedawn)
[11:17:30] *** Joins: plitter (~plitter@192.108.100.200)
[11:17:30] *** Quits: plitter (~plitter@192.108.100.200) (Changing host)
[11:17:30] *** Joins: plitter (~plitter@user/plitter)
[11:20:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:21:08] *** Joins: Booster2ooo (~Booster2o@user/booster2ooo)
[11:21:33] *** Quits: spronkey (~spronkey@122-58-75-76-adsl.sparkbb.co.nz) (Quit: you are feeeling very sleeeeeepyy......)
[11:24:07] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:24:21] *** Quits: aLeSD (~aLeSD@139.47.114.114) (Ping timeout: 256 seconds)
[11:25:43] *** Quits: dskull (~dskull@user/dskull) (Ping timeout: 256 seconds)
[11:28:07] *** Joins: stenno (~stenno@user/stenno)
[11:29:39] *** Joins: dskull (~dskull@user/dskull)
[11:30:35] *** Quits: mintoyatsu (~mint@user/mintoyatsu) (Remote host closed the connection)
[11:31:39] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:32:05] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[11:33:19] *** Quits: dskull (~dskull@user/dskull) (Client Quit)
[11:37:23] *** Quits: sickdyd (~sickd@FL1-133-209-71-249.tky.mesh.ad.jp) (Ping timeout: 256 seconds)
[11:37:37] *** Quits: ethoxy (~root@bison.alphaw0lf.xyz) (Ping timeout: 256 seconds)
[11:38:27] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[11:39:12] *** Joins: ethoxy (~root@bison.alphaw0lf.xyz)
[11:39:40] <zitter> Hi, why is .map() function executed for all items in array? https://jsfiddle.net/h6oanrp1/2/
[11:40:40] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:40:47] <SpiceMan> you need .filter(). map is for transforming all elements
[11:40:53] *** Joins: aLeSD (~aLeSD@91.126.33.194)
[11:41:40] <SpiceMan> n> [1, 2, 3, 4].filter( el => el % 2 == 0 ).map( el => el*2 )
[11:41:42] <jellobot> (okay) [ 4, 8 ]
[11:42:04] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:42:37] *** Quits: evulish (~evulish@cpe-72-231-26-248.nyc.res.rr.com) (Ping timeout: 240 seconds)
[11:44:03] *** Joins: cotko (~cotko@188-230-251-153.dynamic.t-2.net)
[11:44:16] *** Joins: programmar (~whatever@118.69.128.37)
[11:44:57] <programmar> also has anyone here ever tried to import a library inside a service worker script ? like currently i am trying to include the paho-mqtt.js of mine inside the service worker script so i can use some of its function tho but can't figure out how
[11:45:03] <programmar> google doesn't show much results either
[11:45:44] <zitter> SpiceMan, thanks
[11:46:44] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:47:06] *** Joins: nwoob (~apple@138.199.61.235)
[11:47:36] <nwoob> Suppose I have a string like this "//;\n1;2" How can i get character after //
[11:48:00] *** Joins: Guest55 (~Guest55@185.230.82.40)
[11:48:05] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:48:21] *** Parts: Guest55 (~Guest55@185.230.82.40) ()
[11:49:01] <SpiceMan> n> "//;\n1;2".match(/\/\/(.)/)
[11:49:01] <jellobot> (okay) [ '//;', ';', index: 0, input: '//;\n1;2', groups: undefined ]
[11:49:11] <SpiceMan> n> "//;\n1;2".match(/\/\/(.)/)[1]
[11:49:12] <jellobot> (okay) ';'
[11:52:12] <nwoob> SpiceMan: why (.)
[11:52:31] <Maxdamantus> programmar: presumably you would have your service worker script as a separate entrypoint for the bundler, so you should be able to import/require as usual then the actual service worker script will be produced by the bundler.
[11:52:48] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:53:24] <Maxdamantus> programmar: here's the only place where I've used a service worker. I just run the bundler separately: https://gitlab.com/Maxdamantus/bayan/-/blob/master/package.json
[11:53:30] <SpiceMan> nwoob: to capture any single char
[11:53:56] <Maxdamantus> Though in my case I don't have any imports.
[11:54:08] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[11:54:57] *** Quits: kakashiA1 (~kakashi@ip-037-201-196-020.um10.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[11:58:20] <programmar> Maxdamantus: oh no i am kinda referring to javascript on browser
[11:58:39] <Maxdamantus> programmar: this is JavaScript on browser.
[11:58:52] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[11:59:06] <Maxdamantus> programmar: when using third-party modules, you should generally be using a bundler.
[11:59:18] <Maxdamantus> or even when using first-party modules.
[11:59:32] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[12:02:02] <programmar> Maxdamantus: awh ok i see, usually when i see package.json i think about nodejs :P
[12:02:47] <Maxdamantus> Building JavaScript applications usually involves node.js, even if you never actually run the application on node.js.
[12:04:17] <Maxdamantus> Since reusable modules and typical build tools is obtained through npm, which runs on node.js. The build tools also usually run on node.js.
[12:04:28] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[12:05:21] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 245 seconds)
[12:05:34] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[12:07:00] <programmar> Maxdamantus: yea but i usually only use browser's javascript to make things go around, send notification or using the service worker
[12:09:39] *** Quits: Icedream (~icedream@hzn-b.serverkomplex.de) (Quit: A lol made me boom.)
[12:10:04] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[12:11:09] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[12:16:08] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Ping timeout: 260 seconds)
[12:16:15] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[12:17:15] *** Joins: dodobrain (~dodobrain@user/dodobrain)
[12:17:18] *** Joins: dskull (~dskull@user/dskull)
[12:17:33] *** Quits: dodobrain (~dodobrain@user/dodobrain) (Client Quit)
[12:19:44] *** Joins: thomas25- (thomas25@brought.to.you.by.bnc4free.com)
[12:20:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:21:10] *** Parts: thomas25- (thomas25@brought.to.you.by.bnc4free.com) ()
[12:21:57] *** Joins: eXtr3m0 (~eXtr3m0@user/eXtr3m0)
[12:24:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:28:13] *** Joins: Icedream (~icedream@hzn-b.serverkomplex.de)
[12:30:03] *** Joins: revolve_ (~u0_a227@82-132-236-209.dab.02.net)
[12:30:45] *** Joins: flughafen (~flughafen@p5de8ed0b.dip0.t-ipconnect.de)
[12:32:47] <interop_madness> (how) can I reference a parameter inside a JSDoc function description? I need something like <paramref name="myparam" /> in C#
[12:34:17] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 256 seconds)
[12:34:30] *** Quits: programmar (~whatever@118.69.128.37) (Quit: Leaving)
[12:34:37] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 256 seconds)
[12:36:08] *** Quits: yagamilito (~yagamilit@2601:642:4600:34b0:d1f8:9048:c21d:6c34) (Quit: Client closed)
[12:39:32] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[12:41:05] *** Quits: lewisje (~lewisje@72.49.207.113) (Quit: Leaving)
[12:41:23] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4)
[12:42:19] *** Quits: nwoob (~apple@138.199.61.235) (Ping timeout: 256 seconds)
[12:43:15] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:43:55] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[12:47:51] *** Quits: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com) (Remote host closed the connection)
[12:49:45] *** Joins: v3ga (~v3ga@2603-6080-5204-3b35-0000-0000-0000-18ad.res6.spectrum.com)
[12:56:08] *** Joins: Simplar (~quassel@188.163.93.241)
[13:00:53] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[13:07:43] *** Joins: nwoob (~apple@138.199.61.235)
[13:09:31] *** Quits: whatsupdoc (uid509081@hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[13:10:47] <pavonia> interop_madness: `@param (type) var_name This is some variable.`, if I understand correctly
[13:12:06] <SpiceMan> I think he means referencing on the description the param of another function, not the one being described
[13:12:28] <SpiceMan> not sure
[13:12:44] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[13:14:48] <interop_madness> yes I mean referencing on the description
[13:15:19] <SpiceMan> no idea, I'm also interested in the answer
[13:16:00] *** Joins: Naan (~Naan@user/naan)
[13:16:56] <SpiceMan> interop_madness: https://stackoverflow.com/a/61790235/322911
[13:21:23] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:22:16] *** Quits: Akiva (~Akiva@user/Akiva) (Ping timeout: 250 seconds)
[13:23:05] *** Joins: chao (~stenno@user/stenno)
[13:24:49] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[13:25:23] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[13:28:09] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[13:34:21] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 256 seconds)
[13:36:17] *** Joins: chao (~stenno@user/stenno)
[13:37:15] *** Joins: kakashiA1 (~kakashi@37.84.156.126)
[13:42:27] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[13:43:56] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:49:28] *** Joins: programmar (~whatever@118.69.128.37)
[13:49:45] *** Quits: jmdaemon (~jmdaemon@user/jmdaemon) (Ping timeout: 256 seconds)
[13:50:03] <programmar> sorry for asking too many questions in one day but i am so closed :P, the thing is i am trying out Notification() which works so well on desktop and laptop but it doesn't show any notification on mobile phones, anyone faces similar problem ?
[13:51:56] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:53:31] <pavonia> Your request limit for today has exceeded. Please try again tomorrow or send 0.1 BTC to acquire three extra questions.
[13:53:49] <programmar> oh no :D
[13:55:17] <programmar> guess free trial is over
[13:55:48] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[13:57:53] <pavonia> Does the request also fail on the mobile browser?
[13:58:22] <programmar> well as i said earlier, it ONLY fails on mobile browser
[13:58:51] <programmar> i tried the showNotification() method from service worker as well
[13:58:53] <programmar> no use
[13:59:55] <pavonia> You said it doesn't show notifications, nothing about the request
[14:01:32] <programmar> oh yea, the request doesn't fail on mobile
[14:01:36] <programmar> only notification fails
[14:07:11] <pavonia> No idea. I guess the better way is still using your own in-page notifications as suggested earlier
[14:07:39] <programmar> hm i was intending to combine that with my service worker tho, to deliver messages when something on the server-side arrives :(
[14:12:38] *** Quits: kmh_ (~kmh@94.31.106.215) (Quit: Leaving)
[14:12:39] *** Quits: stagas (~stagas@2a02:587:c40c:7fd2:51c3:c0d2:e2de:930c) (Remote host closed the connection)
[14:13:02] *** Joins: stagas (~stagas@2a02:587:c40c:7fd2:51c3:c0d2:e2de:930c)
[14:14:21] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[14:14:50] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[14:17:31] *** Joins: thojanssens (~thojansse@49.230.138.155)
[14:18:39] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[14:19:49] *** Joins: evulish (~evulish@cpe-72-231-26-248.nyc.res.rr.com)
[14:21:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:23:41] <programmar> god over time so many weird things keep happening, i tried Chrome on my laptop and my android phone and at least it does allow notification, but Chrome on iphone and it doesn't support anything
[14:25:21] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:27:54] *** Joins: kmh (~kmh@2a00:6020:5004:6800:460a:ef03:e89d:7820)
[14:31:05] *** Joins: Arisc (~ckmptnml@189-31-251-104.user3p.brasiltelecom.net.br)
[14:33:05] *** Joins: jazzy2 (~jaziz@user/jaziz)
[14:33:17] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 240 seconds)
[14:35:42] *** Joins: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9)
[14:36:47] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[14:40:05] *** Quits: src (~src@user/src) (Quit: Leaving)
[14:44:12] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[14:45:29] *** Joins: DnzAtWrk (~DnzAtWrk@1408.pc.puv.fi)
[14:46:17] *** Joins: Naan` (~Naan@user/naan)
[14:49:17] *** Quits: Naan (~Naan@user/naan) (Ping timeout: 240 seconds)
[14:55:20] *** Quits: revolve_ (~u0_a227@82-132-236-209.dab.02.net) (Read error: Connection reset by peer)
[14:57:48] *** Joins: revolve (~u0_a227@82-132-239-10.dab.02.net)
[15:02:13] *** Quits: calcmandan (~quassel@user/calcmandan) (Quit: Visit me at: gopher://gcpp.world)
[15:02:51] *** Joins: calcmandan (~quassel@user/calcmandan)
[15:07:23] *** Joins: chao (~stenno@user/stenno)
[15:09:04] *** Joins: gehn (~gehn@user/gehn)
[15:10:44] *** Joins: SOMBRIO (~SOMBRIO@177.137.119.132)
[15:11:55] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 256 seconds)
[15:12:02] *** Joins: stenno (~stenno@user/stenno)
[15:12:36] *** Quits: Covrus (~Covrus@user/covrus) (Quit: WeeChat 3.4)
[15:13:13] *** Joins: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[15:13:13] *** Quits: stagas (~stagas@2a02:587:c40c:7fd2:51c3:c0d2:e2de:930c) (Remote host closed the connection)
[15:14:54] *** Joins: stagas (~stagas@2a02:587:c40c:7fd2:3160:dbdc:3cd6:3a18)
[15:16:07] *** Quits: DnzAtWrk (~DnzAtWrk@1408.pc.puv.fi) (Ping timeout: 256 seconds)
[15:16:10] *** Joins: Covrus (~Covrus@user/covrus)
[15:17:06] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Quit: Leaving)
[15:17:37] *** Quits: quazimodo (~quazimodo@n110-21-88-214.bla2.nsw.optusnet.com.au) (Ping timeout: 240 seconds)
[15:22:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:22:35] *** Quits: thojanssens (~thojansse@49.230.138.155) (Ping timeout: 256 seconds)
[15:24:03] *** Quits: rustyshackleford (uid236774@helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[15:25:45] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[15:26:21] *** Joins: pmercado_ (~pmercado@190.22.160.49)
[15:27:44] *** Quits: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt) (Remote host closed the connection)
[15:27:56] *** Joins: Swahili (~Swahili@a95-94-208-187.cpe.netcabo.pt)
[15:28:18] *** Joins: thojanssens (~thojansse@49.230.138.155)
[15:30:38] *** Quits: programmar (~whatever@118.69.128.37) (Quit: Leaving)
[15:31:30] *** Quits: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:32:58] *** Joins: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[15:33:15] *** Joins: summersault (~summersau@179.221.251.36)
[15:36:45] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[15:36:58] *** Quits: nomic (~nomic@185.192.69.3) (Quit: Leaving)
[15:37:17] *** Quits: summersault (~summersau@179.221.251.36) (Ping timeout: 240 seconds)
[15:39:05] *** Joins: chao (~stenno@user/stenno)
[15:40:57] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[15:41:57] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 240 seconds)
[15:42:01] *** jazzy2 is now known as jazzy
[15:42:57] *** Joins: nomic (~nomic@2a00:23c7:ec90:a501:b0:4012:86ae:6130)
[15:44:55] *** Quits: bodicceaII (~bodiccea@user/bodiccea) (Remote host closed the connection)
[15:45:15] *** Joins: bodicceaII (~bodiccea@user/bodiccea)
[15:47:19] *** Quits: stagas (~stagas@2a02:587:c40c:7fd2:3160:dbdc:3cd6:3a18) (Quit: Leaving)
[15:48:37] *** Quits: thojanssens (~thojansse@49.230.138.155) (Ping timeout: 240 seconds)
[15:49:42] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[15:53:35] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[15:54:05] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[15:58:10] <jaawerth> !ciu Notification.requestPermission
[15:58:10] <jellobot> jaawerth, Failed to look up feature
[15:58:34] *** Joins: dmaislin (~dmaislin@047-233-046-055.res.spectrum.com)
[15:58:38] <jaawerth> well, https://caniuse.com/mdn-api_notification_requestpermission
[15:59:28] *** Joins: goddard (~goddard@user/goddard)
[15:59:37] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:00:06] *** Joins: alystair (~alystair@user/alystair)
[16:00:58] *** Quits: Simplar (~quassel@188.163.93.241) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[16:01:34] <jaawerth> oh, they left. well, if they come back, MDN doesn't metnion Chrome on iPhone but it *does* mention Safari not support the Promise version of the API, which *could* be relevant? https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API/Using_the_Notifications_API#feature-detecting_the_requestpermission_promise
[16:03:14] *** Quits: biberu (~biberu@user/biberu) (Ping timeout: 268 seconds)
[16:04:16] *** Joins: stagas (~stagas@2a02:587:c40c:7fd2:36bb:8b7:cefe:38a1)
[16:04:51] *** Quits: kakashiA1 (~kakashi@37.84.156.126) (Ping timeout: 256 seconds)
[16:08:21] *** Joins: powftw (uid448161@id-448161.lymington.irccloud.com)
[16:10:37] *** Joins: biberu (~biberu@user/biberu)
[16:14:54] *** Joins: d[-_-]b (~stenno@user/stenno)
[16:17:17] *** Quits: chao (~stenno@user/stenno) (Ping timeout: 240 seconds)
[16:17:30] *** Joins: kakashiA1 (~kakashi@37.84.156.126)
[16:19:17] *** Quits: d[-_-]b (~stenno@user/stenno) (Ping timeout: 240 seconds)
[16:20:37] *** Quits: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[16:20:57] *** Quits: revolve (~u0_a227@82-132-239-10.dab.02.net) (Ping timeout: 240 seconds)
[16:21:13] *** Joins: d[-_-]b (~stenno@user/stenno)
[16:22:02] *** Joins: DnzAtWrk3 (~DnzAtWrk@1408.pc.puv.fi)
[16:22:05] *** Quits: kakashiA1 (~kakashi@37.84.156.126) (Ping timeout: 256 seconds)
[16:22:19] *** d[-_-]b is now known as stenno
[16:22:47] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[16:22:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:23:15] *** Joins: pluri (~pluri@user/pluri)
[16:26:23] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[16:30:20] *** Joins: pluri_ (~pluri@user/pluri)
[16:31:41] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[16:31:49] *** Quits: pluri (~pluri@user/pluri) (Ping timeout: 256 seconds)
[16:31:49] *** Quits: ekathva (~ekathva@2001:999:51:be01:2c4a:6b25:b5d5:f2c9) (Ping timeout: 256 seconds)
[16:34:05] *** Quits: alystair (~alystair@user/alystair) (Ping timeout: 256 seconds)
[16:35:13] *** Quits: DnzAtWrk3 (~DnzAtWrk@1408.pc.puv.fi) (Ping timeout: 256 seconds)
[16:35:49] *** Joins: D4mned (~D1mned@212.101.253.43)
[16:43:01] *** Joins: Hanii (~textual@2a00:23c5:c583:a300:dd6e:d9a5:afdc:11dc)
[16:45:59] *** Joins: tatarqa (~kli@ip-89-177-122-45.net.upcbroadband.cz)
[16:50:14] *** Joins: kakashiA1 (~kakashi@37.84.156.126)
[16:51:45] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:53:05] *** Joins: rev1nchn (~rev1nchn@user/rev1nchn)
[16:54:06] *** Quits: rev1nchn (~rev1nchn@user/rev1nchn) (Remote host closed the connection)
[16:54:37] *** Quits: kakashiA1 (~kakashi@37.84.156.126) (Ping timeout: 240 seconds)
[17:02:09] *** Joins: nomic2 (~nomic@185.217.117.244)
[17:02:57] *** Quits: biberu (~biberu@user/biberu) (Ping timeout: 240 seconds)
[17:04:17] *** Quits: nomic (~nomic@2a00:23c7:ec90:a501:b0:4012:86ae:6130) (Ping timeout: 240 seconds)
[17:06:02] *** Quits: pluri_ (~pluri@user/pluri) (Quit: Textual IRC Client: www.textualapp.com)
[17:08:23] *** Joins: pluri (~pluri@user/pluri)
[17:10:01] *** Quits: nwoob (~apple@138.199.61.235) (Ping timeout: 256 seconds)
[17:10:40] *** Joins: biberu (~biberu@user/biberu)
[17:10:58] *** Joins: trevors (~trevors@user/trevors)
[17:14:15] * austincheney looking at upgrading his app from Node http/https to http2 in order to reduce load times from 160ms back down to 55ms
[17:15:25] <wez> OK
[17:15:37] <stenno> i wonder if that is something that should be done in any case
[17:15:53] <stenno> e.g. if i start a new server project, always do it with http/2 instead of http
[17:16:08] <stenno> does http/2 already imply ssl ?
[17:16:30] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[17:17:00] <austincheney> no, but in Node http and https are separate libraries wherein the http2 library contains both a createServer and createSecureServer method
[17:17:14] <stenno> aah i see, nice
[17:18:10] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Quit: WeeChat 2.8)
[17:18:13] <austincheney> this upgrade is not straight forward.  HTTP uses a socket stream files in parallel.  Sockets require session establishment.  HTTP is completely sessionless
[17:18:17] *** Joins: OnkelBlade (~OnkelTem@user/onkeltem)
[17:18:31] <austincheney> *http2 uses a socket stream
[17:19:06] <wez> ?
[17:19:35] <stenno> _technically_ http is still a socket stream on top of tcp, isn't it?
[17:19:35] <wez> Sockets is TCP right? like what HTTP is built on?
[17:19:48] <wez> HTTP isn't UDP
[17:19:57] <wez> stenno: It is
[17:20:06] <wez> Which is why I put a question mark there
[17:20:13] <austincheney> stenno, no, http1 a single independent shot for each of its request and response
[17:20:24] *** pmercado_ is now known as pmercado
[17:20:31] <stenno> but its still a tcp stream according to iso-osi thingy
[17:20:39] <stenno> anyway, semantics i guess
[17:20:47] <stenno> i know what you are trying to say
[17:22:04] *** Quits: pluri (~pluri@user/pluri) (Quit: Textual IRC Client: www.textualapp.com)
[17:22:25] <wez> hmmm
[17:22:48] <austincheney> when people think of a tcp stream they think of a long lived tunnel that supports multiple independent transmissions from the application layer: like a hose that runs water.  The hose is still there even after you turn the water off until you disconnect the hose from the spigget.
[17:23:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:23:54] <systemfault> Complicated discussion...
[17:24:04] *** Joins: kakashiA1 (~kakashi@37.84.156.126)
[17:24:54] <austincheney> To make it more complicated there OSI has a session layer higher than layer 4 but lower than the application layer
[17:25:11] <wez> austincheney: Analogies hey
[17:25:15] <systemfault> Layer 8 is always the problem.
[17:25:23] <austincheney> lol
[17:25:30] <wez> Layer 8 is the person right?
[17:25:35] <systemfault> wez: Yes, that's the joke
[17:25:40] <stenno> pebkac
[17:25:48] <wez> systemfault: I get jokes
[17:25:51] <systemfault> <3
[17:25:58] <wez> ❤️
[17:26:05] <systemfault> HTTP3 is going to shake things up because it's UDP-based
[17:26:12] <wez> pew pew
[17:26:20] <stenno> n>1    <3   <3 <3 <3
[17:26:21] <jellobot> (okay) true
[17:26:47] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:27:43] *** Quits: kmh (~kmh@2a00:6020:5004:6800:460a:ef03:e89d:7820) (Quit: Leaving)
[17:27:49] <stenno> n>div=0;1       <div>'Hello'</div>    /
[17:27:49] <jellobot> (okay) false
[17:28:06] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[17:28:08] <stenno> lol
[17:28:23] <systemfault> There ya go, stenno's version of JSX
[17:28:30] <stenno> it can be so easy!
[17:28:36] <stenno> facebook should hire me
[17:28:49] <systemfault> That would be like working for satan
[17:28:57] *** Quits: kakashiA1 (~kakashi@37.84.156.126) (Ping timeout: 256 seconds)
[17:29:05] <systemfault> Satan... or pick your favorite vilain
[17:29:17] <stenno> i am not a christian therefore i don't believe in satan
[17:29:28] <wez> systemfault: Is Wario a villan?
[17:29:33] *** Joins: DnzAtWrk (~DnzAtWrk@1408.pc.puv.fi)
[17:30:06] <systemfault> wez: I wouldn't know, don't know his story... I only played Wario land 2 on the Game Boy like.... 20+ years ago
[17:30:08] *** Joins: ejjfunky (~ejjfunky@125.164.19.140)
[17:30:15] <stenno> wario land was so great on the gameboy
[17:30:20] <stenno> first part
[17:30:27] <wez> systemfault: Ditto, except I play Mario Kart on my mobile now
[17:30:54] <silly> is web3 built ontop of http2
[17:30:55] <silly> 3
[17:30:56] <stenno> i had the 'naked' gameboy
[17:30:56] <silly> ?
[17:31:08] <wez> silly: Web3?
[17:31:17] <stenno> https://m.media-amazon.com/images/I/81XtoDdOdKL._SL1500_.jpg
[17:31:29] <wez> is that like Web 2.0 but incremented and cast as an int?
[17:31:56] <silly> it's something something
[17:32:04] <silly> web is full of it these days
[17:32:07] <jaawerth> oh man, wario land
[17:32:15] <stenno> tfktfktfktk
[17:32:24] <stenno> the sound he does when he breaks through the blocks
[17:32:32] <systemfault> Ah, I had the first one... for some reason, I thought I had the second
[17:32:59] <stenno> all the mario land parts were great
[17:33:01] <stenno> 1,2 and 3
[17:33:07] <stenno> (3 being wario land)
[17:33:09] *** Quits: Hanii (~textual@2a00:23c5:c583:a300:dd6e:d9a5:afdc:11dc) (Quit: Textual IRC Client: www.textualapp.com)
[17:33:13] <wez> jaawerth: Yeah takes me back
[17:33:15] <jaawerth> haven't set it all up yet but I picked up one of these a few weeks back... gonna have to add warioland to the top of the list of games to play on it once it's got retorpie running https://www.retroflag.com/GPi-CASE.html
[17:33:37] <stenno> 4 buttons :o
[17:34:31] <jaawerth> there's also the analog pocket but afaik that needs actual cartridges and I maybe know the whereabouts of.. one? two? of my OG game cartridges (barring SNES, which is in my living room)
[17:34:33] <systemfault> With SML 1-2-3, Kirby and the Pokemon games... the GB has been an awesome console for me
[17:34:48] <stenno> kirby was great too
[17:34:58] *** Joins: thojanssens (~thojansse@49.230.138.155)
[17:35:02] <stenno> man those were the days
[17:35:17] <jaawerth> oh yeah. kirby, Super Mario Land, Wario Land, Final Fantasy Legend was weird and awesome..
[17:35:17] <systemfault> No backlight sucked though...
[17:35:18] *** Joins: MassDebates (~MassDebat@2600:1700:1184:4510:cc1:8b5b:491e:23ed)
[17:35:19] <stenno> no backlit display so you had to be really careful when you played it in secret
[17:35:21] <stenno> yeap
[17:35:24] <stenno> lol lol
[17:35:32] <systemfault> But.. I had the SNES adapter so I could play the GB games on the TV
[17:35:36] <stenno> oooh
[17:35:39] <stenno> never had a snes
[17:36:11] <wez> stenno: Neither, the first console I owned was an Atari then an N64
[17:36:15] <jaawerth> I didn't as a kid (my parents were brilliant and got me the NES cheaply afer the SNES had come out and I was happy without really caring much about why a couple of my friends had a fancier one)
[17:36:27] <jaawerth> but I bought one off a college friend with a bunch of games for $20
[17:36:27] <systemfault> The SNES was seriously one of the best console that was ever existed...
[17:36:44] <jaawerth> $20 well spent
[17:36:58] <wez> 2600 <3
[17:37:16] <wez> systemfault: 8bit <3
[17:37:42] <systemfault> Atari was a little bit before my time... for me it started when I was 4 with the NES
[17:38:03] <systemfault> Parents had bought me SMB and also Kid Icarus
[17:38:24] <systemfault> Kid Icarus being one of the most underrated games, IMHO
[17:38:25] <wez> They bought you a Server Message Block protocol?
[17:38:36] <systemfault> Yes.. Super Mario Bros too!
[17:38:44] <wez> :)
[17:39:23] <systemfault> But since I'm french-canadian, we would pronounce it in a weird way... "Sooper Mario Browsss"
[17:40:20] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:41:12] <wez> OK, Atari was before your time?   The NES came out in 1983, the Atari 2600 came out in, wow, 1977, I didn't own the original releae though, it would have been the 1990 version.
[17:41:22] *** Joins: gambl0re (~gambl0re@cpe688f2e1852a3-cm688f2e1852a0.cpe.net.cable.rogers.com)
[17:42:22] <wez> Atari 2600 discontinued in 1992, so I had one a year or two before that
[17:42:35] <wez> actually, I still have it somewhere
[17:42:56] <systemfault> The NES was a better console than the Atari... still, I respect it
[17:43:14] <systemfault> I tried the Atari after having played the NES for years...
[17:44:23] <wez> I played the classics on it, pong, space invaders, the snake thing
[17:44:40] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Read error: Connection reset by peer)
[17:45:02] *** Joins: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr)
[17:45:07] *** Joins: kakashiA1 (~kakashi@37.84.156.126)
[17:46:30] <systemfault> I sometimes listen to NES OSTs while working...
[17:46:53] <wez> I listen to 8bit / midi DnB now and then
[17:47:12] <wez> Orbital does some nice 8bit / midi sound tunes
[17:48:11] <wez> Orbital - Tiny Foldable Cities: https://www.youtube.com/watch?v=7CC5aX8OzOI
[17:48:11] <skillbot> YouTube Title: Orbital - Tiny Foldable Cities
[17:50:17] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 240 seconds)
[17:50:34] *** Joins: pulse (~pulse@user/pulse)
[17:50:54] <wez> systemfault: ----^
[17:52:34] *** Joins: rcoote (~rcoote@ip-176-198-113-232.um43.pools.vodafone-ip.de)
[17:53:12] *** Joins: sudomann (~sudomann@98.219.211.182)
[17:55:48] *** Joins: kmh (~kmh@2a00:6020:5004:6800:9881:9737:5341:5446)
[17:56:39] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[17:56:39] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[17:56:39] *** Joins: wroathe (~wroathe@user/wroathe)
[17:59:17] *** Quits: kakashiA1 (~kakashi@37.84.156.126) (Ping timeout: 240 seconds)
[18:00:49] *** Quits: wovixo (~wovixo@128.104.205.49) (Quit: Leaving)
[18:03:03] *** Quits: sudomann (~sudomann@98.219.211.182) (Ping timeout: 256 seconds)
[18:11:57] *** Joins: stenno (~stenno@user/stenno)
[18:15:40] <jwpapi> I’m missing some foundations on how to let different javascript scripts work together
[18:16:08] <jwpapi> Is there anything good to read? I usually find myself hacking something together and attaching to window which I think is bad.
[18:16:44] <stenno> in the browser? have you checked out webworkers?
[18:17:06] <Svitkona> sounds like you want to look up modules
[18:18:58] *** Quits: sheetjs (~sheetjs@user/sheetjs) (Remote host closed the connection)
[18:20:29] <jwpapi> stenno to be exact: I have a script from Facebook that attaches a custom event to window which is called `fbAsyncInit` and is triggered once their sdk is fully loaded. Once the SDK is fully load I need to run some code that is handling an authentication and giving me a token back. Once that happened a couple of API calls have to happen with that token. The code for these is in my main frontend js file which …
[18:20:38] <jwpapi> is getting prepared by webpack
[18:20:49] <wez> jaawerth: Which version?
[18:20:59] <jwpapi> my current solution has this in head:
[18:21:02] <jwpapi> https://www.irccloud.com/pastebin/2GQ9jTgV/
[18:22:04] <jwpapi> in my `index.js` the function that is dependent on the response of that call is this:
[18:22:07] <jwpapi> https://www.irccloud.com/pastebin/w1aeBMcC/
[18:22:53] <jwpapi> it works, but I don’t think it’s the best way to do it.
[18:23:16] *** Joins: IlhamiDogan (~IlhamiDog@194.182.135.209)
[18:23:46] *** Joins: varrg (~varrg@h-176-10-198-245.A351.priv.bahnhof.se)
[18:23:47] *** Joins: nulysses (~Thunderbi@p5085239d.dip0.t-ipconnect.de)
[18:23:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:26:46] <ljharb> IlhamiDogan: you need to auth with nickserv for non-ops to see what you say. See the last link in the topic.
[18:27:39] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[18:28:47] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:29:38] *** Joins: DrowningElysium (uid190788@user/drowningelysium)
[18:32:25] *** Joins: jim87 (~quassel@93.55.249.30)
[18:34:30] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[18:34:41] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[18:37:03] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[18:37:03] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[18:37:03] *** Joins: wroathe (~wroathe@user/wroathe)
[18:37:28] *** Joins: stenno (~stenno@user/stenno)
[18:38:04] *** Quits: powftw (uid448161@id-448161.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[18:38:24] *** Joins: nkm (~nkm@103.255.7.41)
[18:39:03] <nkm> Hello. is there any method to call a php function upon page load/refresh?
[18:40:16] <stenno> php is in the backend. javascript is in the frontend
[18:40:27] <stenno> you can make a request to the backend and then do whatever you like with it
[18:40:34] <stenno> for example using fetch
[18:41:12] <nkm> i have a php function in my index page. and i want to call it everytime page load/refresh
[18:41:29] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[18:42:33] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[18:42:48] <stenno> ok then make a request with fetch to your backend
[18:43:06] <nkm> how can i do this?
[18:43:10] <nkm> any example?
[18:43:18] *** Joins: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[18:43:54] <stenno> nkm: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API
[18:45:00] <silly> you don't need window.fetch to load a page or refresh
[18:45:13] <stenno> no, but you need fetch to communicate to your php backend.....
[18:45:29] <nkm> okay
[18:45:30] <silly> that was  not asked for
[18:45:33] <stenno> it was
[18:45:41] <stenno> call a php function upon page load/refresh?
[18:45:59] <pavonia> Isn't that exactly what PHP already does?
[18:46:01] *** Quits: DnzAtWrk (~DnzAtWrk@1408.pc.puv.fi) (Ping timeout: 256 seconds)
[18:46:02] <silly> he didn't say call it fromjs
[18:46:23] <stenno> i assume as they are in the javascript channel, they ask for a way to do it in javascript
[18:46:27] <stenno> why else would they ask here
[18:46:52] <silly> because they c
[18:47:01] <silly> don't even know irc
[18:47:11] <stenno> ...what?
[18:47:12] <nkm> i just want is there any javascript method to call php code upon page load
[18:47:19] <stenno> silly: oh its a friend of you?
[18:47:28] <silly> not yet
[18:47:29] <stenno> nkm: yes, see the link
[18:47:46] <nkm> thanks.
[18:47:48] <stenno> but as pavonia already said, you should know in your backend when your page gets reloaded lol
[18:47:50] <nkm> let me check that
[18:48:08] <stenno> you get a request and the page loads, and then you can execute whatever php code you like
[18:48:11] *** Joins: onosendi (~onosendi@user/onosendi)
[18:48:51] <ljharb> IlhamiDogan: nope, just me
[18:49:01] *** Quits: nkm (~nkm@103.255.7.41) (Quit: Client closed)
[18:49:19] *** Joins: nkm (~nkm@103.255.7.41)
[18:49:25] <nkm> the code is also in the same file in which js code will be.
[18:50:57] <stenno> nkm: why don't you just execute the function on the server side on page load?
[18:51:08] <stenno> why do you want ot make a request from the client?
[18:51:23] <silly> you can throw it all together, php, html, js and css, you can even use dataurls to put images in the same file
[18:51:50] <silly> at one point you might want to separate it all
[18:53:53] *** nomic2 is now known as nomic
[18:54:37] <stenno> i think you are confused about what php actually is, nkm
[18:54:47] <stenno> and the difference between frontend and backend
[18:54:49] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[18:55:27] <nkm> stenno. i am not confused. i know php. but i am new to javascript. i don't know much about javascript.
[18:55:42] <nkm> i want to know if i can do this task usinng javascritp
[18:55:45] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[18:55:56] <stenno> nkm: then answer me, why do you want to call a javascript function to call a php function on page load where you can just call the php function itself on page
[18:55:58] <stenno> load
[18:56:44] <stenno> if you load the page, you request the php engine to interpret the php file anyway
[18:57:15] <stenno> you can make requests to any backends, regardless of if its php or not, by using fetch
[18:57:22] <stenno> at any point in time in the client
[18:57:49] <nkm> exactly. i want it from client side. not from server side
[18:58:35] <stenno> ok, then, fetch
[18:58:49] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 256 seconds)
[18:59:05] <stenno> the fact that your backend is php is irrelevant
[18:59:16] <stenno> it can also be ruby or node or w/e
[19:00:54] *** Quits: nkm (~nkm@103.255.7.41) (Quit: Client closed)
[19:01:23] <stenno> i still doubt that they understood it
[19:03:36] *** Joins: sudomann (~sudomann@98.219.211.182)
[19:06:52] *** Quits: undefined_bob (~undefined@user/undefined-bob/x-5411918) (Quit: WeeChat 1.5)
[19:11:41] *** Joins: kakashiA1 (~kakashi@ip-037-201-196-020.um10.pools.vodafone-ip.de)
[19:14:37] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Ping timeout: 240 seconds)
[19:16:09] *** Quits: kakashiA1 (~kakashi@ip-037-201-196-020.um10.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[19:16:37] *** Joins: revolve (~u0_a227@82-132-239-10.dab.02.net)
[19:17:06] *** Joins: programmar (~whatever@118.69.128.37)
[19:18:42] <programmar> pavonia: ok after so much pain i think i figure out now, according to my phone, notifications like this does appear https://lh3.googleusercontent.com/DUN9vfg8vGMM5AwEMlFOTSihghnVGyEWaU6iLMfM1zj0tLFZe-CPhYGf7TBh7E2c3mLoKiECCn25MFgg7cKJxlavrjWlMXyOaYuihw=w1064-v0 but i in the past i think the notifications used to be like this tho https://www.howtogeek.com/wp-content/uploads/2021/04/notification-screen.png?width=1198&trim=1,1&bg-color=000&pad=1,1
[19:18:53] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[19:20:09] *** Quits: aLeSD (~aLeSD@91.126.33.194) (Remote host closed the connection)
[19:21:13] <programmar> and yea i can't seem to get the second type of notification to appear
[19:21:30] <programmar> or is that IOS instead of android ? i can't tell tho
[19:22:46] <programmar> maybe i should ask in #android rather than #javascript :P
[19:24:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:27:57] *** Joins: onosendi (~onosendi@user/onosendi)
[19:28:03] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:32:28] *** Joins: mikey_p (uid129477@id-129477.uxbridge.irccloud.com)
[19:33:59] *** Quits: IlhamiDogan (~IlhamiDog@194.182.135.209) (Quit: Leaving)
[19:34:12] *** Joins: nwoob (~apple@138.199.61.235)
[19:34:59] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[19:36:18] *** Joins: nkm (~nkm@103.255.7.41)
[19:37:36] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:38:27] *** Joins: stenno (~stenno@user/stenno)
[19:39:57] *** Joins: jj_attaq (~jj_attaq@95.180.91.76)
[19:41:34] *** Joins: tofran (~tofran@bl15-47-228.dsl.telepac.pt)
[19:42:13] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[19:43:15] *** Joins: velix (~velix@user/velix)
[19:43:26] <velix> Anyone with an idea, if it's possible to disable systemfonts in Chrome and Firefox?
[19:44:03] <eXtr3m0> velix What's your goal if I may ask?
[19:44:19] *** Quits: nkm (~nkm@103.255.7.41) (Quit: Client closed)
[19:44:40] <velix> eXtr3m0: I've OpenSans installed in my systems. So Firefox and Chrome ignore the web ones and use the system ones.
[19:45:07] <velix> chrome allows only to disable local(), but I don't use those.
[19:45:43] <velix> Ah, firefox has font.system.whitelis
[19:45:46] <eXtr3m0> That's how its supposed to work, maybe you can rename your optimized web fonts to distinguish them?
[19:45:46] <velix> +t
[19:45:58] <velix> eXtr3m0: Okay, I'll call Mr. Google to rename them.
[19:45:59] *** Quits: ejjfunky (~ejjfunky@125.164.19.140) (Quit: Leaving)
[19:46:00] <velix> Thanks for your help ;)
[19:47:22] *** Parts: velix (~velix@user/velix) (Leaving)
[19:48:10] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[19:49:04] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[19:49:20] *** Joins: sam_1 (~sam_1@87.51.251.118)
[19:49:28] *** Joins: de-facto (~de-facto@user/de-facto)
[19:50:13] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[19:52:57] *** Joins: ejjfunky (~ejjfunky2@125.164.16.196)
[19:53:39] *** Quits: nomic (~nomic@185.217.117.244) (Quit: Leaving)
[19:53:47] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[19:53:58] *** Quits: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Read error: Connection reset by peer)
[19:54:55] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[19:55:06] *** Joins: neverfindme (~hayden@158.123.160.43)
[19:55:25] *** Joins: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi)
[19:56:35] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 250 seconds)
[19:59:10] *** Joins: Rockwood (~Rocky@user/rocky)
[20:00:11] *** Quits: taupiqueur (~taupiqueu@lmontsouris-659-1-2-186.w193-248.abo.wanadoo.fr) (Quit: taupiqueur)
[20:03:30] *** Quits: neverfindme (~hayden@158.123.160.43) (Quit: Leaving)
[20:03:37] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[20:04:22] *** Quits: Harlin (~DonQixote@75-163-148-159.clsp.qwest.net) (Quit: Leaving)
[20:06:02] *** Joins: Harlin (~DonQixote@75-163-148-159.clsp.qwest.net)
[20:06:16] *** Quits: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net) (Remote host closed the connection)
[20:06:39] *** Joins: o|||||o (~ol_greg@50-24-3-187.chstcmta05.res.dyn.suddenlink.net)
[20:07:38] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[20:08:01] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:10:37] *** Quits: evulish (~evulish@cpe-72-231-26-248.nyc.res.rr.com) (Ping timeout: 240 seconds)
[20:11:21] *** Quits: thojanssens (~thojansse@49.230.138.155) (Ping timeout: 256 seconds)
[20:11:48] *** Quits: ejjfunky (~ejjfunky2@125.164.16.196) (Remote host closed the connection)
[20:11:52] *** Joins: evulish (~evulish@cpe-72-231-26-248.nyc.res.rr.com)
[20:12:37] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 250 seconds)
[20:13:19] *** Joins: mat001 (~mat001@213.143.69.121)
[20:16:45] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[20:16:45] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[20:16:45] *** Joins: wroathe (~wroathe@user/wroathe)
[20:18:48] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[20:19:34] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[20:20:10] *** Joins: mat001 (~mat001@72.28.108.216)
[20:20:42] *** Quits: D4mned (~D1mned@212.101.253.43) (Read error: Connection reset by peer)
[20:21:05] *** Joins: D4mned (~D1mned@212.101.253.43)
[20:22:07] *** Joins: mat001_ (~mat001@72.28.108.216)
[20:24:30] *** Joins: stenno (~stenno@user/stenno)
[20:24:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:24:57] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 240 seconds)
[20:25:11] *** Quits: theglass (~glass@user/theglass) (Remote host closed the connection)
[20:27:02] *** Joins: voltage_ (voltage@user/voltage)
[20:27:51] *** Quits: revolve (~u0_a227@82-132-239-10.dab.02.net) (Read error: Connection reset by peer)
[20:28:21] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:28:55] *** Quits: nulysses (~Thunderbi@p5085239d.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[20:29:05] *** Quits: OnkelBlade (~OnkelTem@user/onkeltem) (Quit: WeeChat 2.8)
[20:29:52] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[20:32:05] *** Quits: stenno (~stenno@user/stenno) (Ping timeout: 256 seconds)
[20:35:10] *** Joins: Betal (~Betal@user/betal)
[20:36:27] *** Quits: xse (~xse@user/xse) (Remote host closed the connection)
[20:36:52] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[20:37:40] *** Joins: ccapndave (~ccapndave@xdsl-188-154-198-53.adslplus.ch)
[20:37:52] <ccapndave> Has anyone managed to get splitting to work with esbuild?
[20:38:11] <ccapndave> I just tried it and got an error saying "Cannot use import statement outside a module" when I run my site in the browser
[20:38:24] *** Joins: xse (~xse@user/xse)
[20:39:19] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[20:39:49] *** Joins: Rockwood_ (~Rocky@user/rocky)
[20:41:37] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[20:41:57] *** Quits: plitter (~plitter@user/plitter) (Ping timeout: 256 seconds)
[20:43:14] *** Joins: ___Rockwood__ (~Rocky@user/rocky)
[20:44:30] *** Quits: jj_attaq (~jj_attaq@95.180.91.76) (Read error: Connection reset by peer)
[20:45:23] <SpiceMan> ccapndave: add the type="module" attribute to your script tag in the HTML
[20:45:37] <ccapndave> I just tried that and it cause some other issue, but maybe I did it wrong
[20:45:46] <ccapndave> `outExtension: { '.js': '.mjs' },` do I need to add this maybe?
[20:46:22] <SpiceMan> I have no idea what esbuild is
[20:46:29] *** Quits: Rockwood_ (~Rocky@user/rocky) (Ping timeout: 256 seconds)
[20:47:13] *** Joins: sam_1 (~sam_1@87.51.251.118)
[20:47:24] <ccapndave> Ha :)
[20:47:34] <ccapndave> Its like Webpack but faster
[20:48:17] <SpiceMan> so fast it doesn't work
[20:48:19] * SpiceMan runs
[20:48:21] <SpiceMan> j/k
[20:48:32] <ccapndave> It works
[20:48:36] <ccapndave> ... until it doesn't ;)
[20:48:53] *** ___Rockwood__ is now known as Rockwood
[20:49:05] *** Quits: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[20:50:42] *** Joins: serh (serh@nemern.icu)
[20:50:59] <ccapndave> Ah man, `type='module'` breaks other things
[20:51:01] *** Quits: nwoob (~apple@138.199.61.235) (Ping timeout: 256 seconds)
[20:51:02] <ccapndave> > Access to script at 'http://localhost:4000/assets/notebook-element.js' from origin 'null' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.
[20:52:55] <ccapndave> I guess `type="module"` loads things asynchronously
[20:53:03] *** Quits: sam_1 (~sam_1@87.51.251.118) (Ping timeout: 256 seconds)
[20:58:42] *** Joins: fef (~thedawn@user/thedawn)
[20:59:10] *** Joins: Akiva (~Akiva@user/Akiva)
[21:01:48] *** Quits: fef (~thedawn@user/thedawn) (Read error: Connection reset by peer)
[21:07:17] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[21:13:12] *** Joins: nulysses (~Thunderbi@p200300c5171f2e009014822a574bf69b.dip0.t-ipconnect.de)
[21:15:03] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:16:07] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[21:16:31] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 256 seconds)
[21:19:15] *** Quits: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net) (Read error: Connection reset by peer)
[21:20:08] *** Joins: fef (~thedawn@user/thedawn)
[21:23:16] *** Joins: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com)
[21:23:16] *** Quits: wroathe (~wroathe@206-55-188-8.fttp.usinternet.com) (Changing host)
[21:23:16] *** Joins: wroathe (~wroathe@user/wroathe)
[21:23:20] *** Quits: iomari891 (~iomari891@105.112.138.38) (Quit: WeeChat 3.3)
[21:24:24] *** Joins: revolve (~u0_a227@cpc100838-bagu15-2-0-cust672.1-3.cable.virginm.net)
[21:25:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:25:47] *** Quits: DnzAtWrk3 (~DnzAtWrk@mobile-access-6df0a8-31.dhcp.inet.fi) (Quit: Leaving)
[21:26:00] *** Naan` is now known as Naan
[21:27:51] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 256 seconds)
[21:28:37] *** Quits: Rockwood (~Rocky@user/rocky) (Ping timeout: 240 seconds)
[21:28:45] *** Quits: gehn (~gehn@user/gehn) (Quit: Leaving)
[21:28:59] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:29:54] *** Quits: ccapndave (~ccapndave@xdsl-188-154-198-53.adslplus.ch) (Quit: Textual IRC Client: www.textualapp.com)
[21:33:22] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[21:36:42] <BinarySavior> hi, i'm trying to implement a class, in my contructor I have the line: this.element.onclick = this.openModal();
[21:37:01] <BinarySavior> this is wrong because it's calling the function instead of registering it
[21:37:11] <BinarySavior> but it also doesn't work if I do it without the parenthesis
[21:37:24] *** Joins: plitter (~plitter@78.31.86.243)
[21:37:24] *** Quits: plitter (~plitter@78.31.86.243) (Changing host)
[21:37:24] *** Joins: plitter (~plitter@user/plitter)
[21:37:48] <BinarySavior> here's all the code: https://regex101.com/r/ZQbpJv/1
[21:38:41] *** Joins: neshpion_ (~neshpion@gateway/tor-sasl/neshpion)
[21:38:41] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Killed (NickServ (GHOST command used by neshpion_)))
[21:38:50] *** neshpion_ is now known as neshpion
[21:40:06] *** Joins: otisolsen70_ (~otisolsen@xd4ed80b5.cust.hiper.dk)
[21:40:40] <austincheney> BinarySavior, my strongest possible recommendation is to avoid using "this"
[21:41:20] <BinarySavior> what alternatives are their?
[21:41:33] <austincheney> BinarySavior, what do you mean?
[21:42:04] <BinarySavior> approaching a modal class like this from an Object Oriented view
[21:42:06] <austincheney> BinarySavior, put your code up somewhere and I can give you some guidance on how to reorganize it
[21:42:08] <BinarySavior> without using this.*
[21:42:56] <austincheney> BinarySavior, i suspect with 99% confidence a simple alternative exists to classes
[21:43:17] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 240 seconds)
[21:43:33] <SpiceMan> lol, using regex101 as pastebin
[21:44:05] <onosendi> !onclick @ BinarySavior
[21:44:05] <jellobot> BinarySavior, Using ".onclick", ".onchange", or "on" anything is bad practice and results in poorly factored, hard-to-manage code; as well as limiting you to one event listener per event. Consider attaching your events with addEventListener, instead, eg: https://developer.mozilla.org/en/DOM/element.addEventListener
[21:46:53] <BinarySavior> https://bpa.st/TT3A
[21:46:59] <BinarySavior> thanks jellobot
[21:47:13] <BinarySavior> SpiceMan gotta do what you gotta do when employer blocks all pasting sites
[21:47:34] <BinarySavior> austincheney I'm new to javascript in general, the project lead says that it's good to approach from OO perspective
[21:47:46] <BinarySavior> but perhaps this trivial implementation is better off left without the class
[21:50:16] <BinarySavior> Oh actually I forgot the employer allows JS Fiddle... I usually use the regex101 for posting my python code
[21:51:37] *** Joins: CiaoSen (~Jura@p200300c95737a2002a3a4dfffe84dbd5.dip0.t-ipconnect.de)
[21:51:46] <BinarySavior> the reason I wanted to implement it as a class is because I'm creating a document with several sections for stakeholders to edit / add their input.  They click the area they need to edit and a modal pops up to assist.  So I will be creating several modals that perform the same task on different elements
[21:56:04] <SpiceMan> BinarySavior: your problem is that "this" means something different to what you think it means by the time the method is called
[21:56:26] <SpiceMan> do console.log(this) and see what you get as this. it's not the modalhandler
[21:56:55] <austincheney> BinarySavior, I am looking at the code now
[21:57:24] <austincheney> BinarySavior, generally the only motivation to pursue a strongly OOP approach in this language is because its a comfortable pattern coming from a different language
[21:57:26] <SpiceMan> BinarySavior:  TL;DR define your methods with:    openModal = () => { // code } instead
[21:58:02] <austincheney> BinarySavior, almost always OOP means decoration in the code that expands code size while offering nothing in return
[22:04:09] <SpiceMan> BinarySavior: ignore the opinionated comentary. just read https://www.freecodecamp.org/news/javascript-this-keyword-binding-rules/
[22:06:26] <austincheney> BinarySavior, https://gist.github.com/prettydiff/397b6e57549e6553a9789f07b4af3000
[22:07:18] <austincheney> although DOM elements don't have a textContent property.  The textContent property is on text node types.
[22:09:06] <austincheney> hold on, i am editing that
[22:09:27] *** Quits: programmar (~whatever@118.69.128.37) (Ping timeout: 256 seconds)
[22:09:33] *** Quits: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[22:09:48] <austincheney> done, refresh
[22:12:11] <austincheney> I also want to point out that I disagree with the advise given by jellobot about "on" events in the strongest possible terms.  If you are on a commerical site always use event listeners, because the DOM is globally available and your event assignments will be overwritten by third party code.  Otherwise listeners are things you can live without and your code is forced into maximal simplicity with regards to
[22:12:11] <austincheney> event handlers
[22:13:35] *** Quits: SOMBRIO (~SOMBRIO@177.137.119.132) (Quit: Client closed)
[22:16:02] <austincheney> code is so much more managable without event listeners, but that isn't the point.  event listeners provide a level of safety you would not have otherwise.
[22:17:24] *** Quits: michigan (uid507982@id-507982.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:18:09] *** Joins: Deneb (~johnch@23.143.9.51.dyn.plus.net)
[22:18:11] *** Joins: junebug (~junebug@2600:1700:3db0:2540:7f5e:4f5a:9aa1:aae6)
[22:18:39] <BinarySavior> austincheney i'm trying to implement your code here: https://jsfiddle.net/hqvtkcgp/6/
[22:18:56] <BinarySavior> it's not exactly what you pasted but I'm trying to get it to work
[22:19:16] <austincheney> I messed up the first line
[22:19:25] <austincheney> instead try   const myFunction = function () {
[22:19:29] <SpiceMan> const myFunction = () => {
[22:19:35] <austincheney> or that
[22:20:03] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[22:20:08] *** Joins: mintoyatsu (~mint@user/mintoyatsu)
[22:21:33] <BinarySavior> https://jsfiddle.net/hqvtkcgp/8/ still can't get it to open the modal
[22:22:07] *** Joins: crashrep (~crashrep@user/crashrep)
[22:23:58] <onosendi> austincheney: inline events are stored on the elements property, which means you're limited to one, and it can be overwritten. I'm not sure why you'd disagree that `addEventListener` is better?
[22:25:41] <SpiceMan> BinarySavior: you are just defining the function. need to call it. add myFunction(); below
[22:25:53] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:25:56] <KevinX> Use addEventListener especially if you're new
[22:26:21] <onosendi> Top answer here pretty much says the same thing: https://stackoverflow.com/questions/6348494/addeventlistener-vs-onclick - "Broadly speaking, do not use inline events"
[22:28:58] *** Joins: yassernasc (~yassernas@ec2-54-87-145-249.compute-1.amazonaws.com)
[22:29:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[22:31:04] <austincheney> onosendi, agreed, that is the safety concern
[22:31:52] <austincheney> when you are on a site with a lot of third party code you need that level of safety (or if you are in a shop with a million developers that dont talk to each other)
[22:32:39] <austincheney> but there are concerns with addeventlistener as well primarily maintenance and garbage collection
[22:35:47] <austincheney> and limiting one handler to a given event of a given node is forced simplicity
[22:37:23] *** Joins: LiftLeft (~LiftLeft@187.170.244.154)
[22:37:44] *** Joins: LiftLeft2 (~LiftLeft@187.170.244.154)
[22:38:37] *** Quits: onosendi (~onosendi@user/onosendi) (Quit: WeeChat 3.4)
[22:38:57] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[22:39:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:7f5e:4f5a:9aa1:aae6) (Ping timeout: 240 seconds)
[22:43:59] <cthulchu> folks, I need help :( I don't get this meme: https://www.reddit.com/r/ProgrammerHumor/comments/sjfqby/oh_php/
[22:44:09] *** Joins: pulse_ (~pulse@user/pulse)
[22:44:10] <cthulchu> what's transpired between JS and PHP?
[22:44:30] *** Quits: pulse_ (~pulse@user/pulse) (Read error: Connection reset by peer)
[22:45:37] <KevinX> its suggesting that php is still widely used and not getting the respect it deserves
[22:45:59] *** Quits: FlorianBad (~FlorianBa@cpe-67-49-107-16.dc.res.rr.com) (Quit: Client closed)
[22:46:08] *** Joins: pulse_ (~pulse@user/pulse)
[22:46:38] *** Quits: pulse (~pulse@user/pulse) (Killed (NickServ (GHOST command used by pulse_)))
[22:46:40] *** pulse_ is now known as pulse
[22:47:03] <cthulchu> aaah
[22:47:07] <KevinX> But being widely used doesn't mean its the best solution
[22:47:20] <cthulchu> well, no, php is garbage IMHO.
[22:47:37] <cthulchu> I would much rather code my backend in Node or Py
[22:47:46] <KevinX> people compare react to early php too. I'll try to find that meme
[22:48:40] <cthulchu> I was looking for a meme about dude saying he works in Visual Studio and the girl was asking: You mean Visual Studio Code?... Right?!... Pretty funny one. Can't find it, damn
[22:49:47] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[22:51:28] <KevinX> cant find it, but anyway i'm ok with modern PHP. The tooling and DX with laravel is pretty nice
[22:52:01] <KevinX> A lot of backend node code is pretty poor quality in my opinion
[22:52:20] <KevinX> even something like npm is pretty buggy
[22:52:45] <cthulchu> never had issues with node/npm, though I've been using huge boilerplates.
[22:52:56] <cthulchu> I actually adore npm.
[22:53:14] <KevinX> its gotten better in recent years
[22:53:14] <cthulchu> after trying python's package manager, especially, ahahah
[22:53:48] <KevinX> im not.a python dev. I tried getting into it but managing environments was clunky
[22:53:56] <cthulchu> exactly!
[22:54:01] <cthulchu> what a pain
[22:54:05] <KevinX> i want to try it again though
[22:54:31] *** Joins: gpap (~pap@athedsl-383055.home.otenet.gr)
[22:54:40] <cthulchu> the syntax is pretty good. if you can forgive the colon after the if condition. I keep forgetting about it cuz of how irrational it is there
[22:54:47] <KevinX> i tihnk rust has good dx but its not the easiest to pick up in your spare time
[23:05:23] *** Joins: ThePhilgrim (~ThePhilgr@151.41.185.44)
[23:08:01] *** Joins: junebug (~junebug@2600:1700:3db0:2540:d7ff:63b4:1db:f450)
[23:08:46] *** Joins: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net)
[23:13:26] *** Joins: N4buc0 (~N4buc0@2804:7f4:348a:fff2:9747:6e59:f1b0:31ec)
[23:16:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:d7ff:63b4:1db:f450) (Ping timeout: 240 seconds)
[23:18:21] *** Quits: dapinitial (~dpuerto@136-27-83-52.cab.webpass.net) (Ping timeout: 256 seconds)
[23:19:04] *** Joins: terminalpusher (~terminalp@2a01:586:8e51:1:3197:8117:4d18:b86c)
[23:19:17] *** Quits: LiftLeft2 (~LiftLeft@187.170.244.154) (Ping timeout: 240 seconds)
[23:19:29] *** Quits: LiftLeft (~LiftLeft@187.170.244.154) (Ping timeout: 256 seconds)
[23:20:57] *** Joins: stenno (~stenno@user/stenno)
[23:22:17] *** Joins: sheetjs (~sheetjs@user/sheetjs)
[23:22:18] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 276 seconds)
[23:24:01] *** Joins: junebug (~junebug@2600:1700:3db0:2540:b6e6:595d:7721:df0a)
[23:25:16] *** Quits: jim87 (~quassel@93.55.249.30) (Read error: Connection reset by peer)
[23:26:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:30:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:30:29] *** Joins: daoumilseitek (~daoumilse@164.96.146.77.rev.sfr.net)
[23:30:31] <daoumilseitek> hello
[23:30:40] <daoumilseitek> anyone using plotly ?
[23:30:49] <daoumilseitek> i can't disable the zoom feature
[23:31:24] <daoumilseitek> the forums seem to give outdated advice about layout.xaxis.fixedrange
[23:32:25] *** Joins: LiftLeft2 (~LiftLeft@gateway/vpn/pia/liftleft)
[23:32:30] <daoumilseitek> you can try with any codepen on this page  : https://plotly.com/javascript/configuration-options/#making-a-static-chart
[23:32:42] *** Joins: PsyStemUpdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[23:33:28] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[23:33:38] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[23:34:42] *** Joins: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp)
[23:34:44] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[23:37:19] <daoumilseitek> plotly version 2.8.3
[23:38:21] *** Joins: nomic (~nomic@185.217.117.244)
[23:38:25] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[23:38:45] *** Quits: LiftLeft2 (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 256 seconds)
[23:38:45] *** Quits: NiKaN (sid385034@helmsley.irccloud.com) (Ping timeout: 256 seconds)
[23:39:19] *** Quits: sickdyd (~sickd@120.51.82.69.ap.gmobb-fix.jp) (Ping timeout: 256 seconds)
[23:39:21] *** Joins: NiKaN (sid385034@id-385034.helmsley.irccloud.com)
[23:43:17] *** Quits: junebug (~junebug@2600:1700:3db0:2540:b6e6:595d:7721:df0a) (Quit: Leaving)
[23:43:34] *** Quits: terminalpusher (~terminalp@2a01:586:8e51:1:3197:8117:4d18:b86c) (Remote host closed the connection)
[23:45:37] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:a82b:45ec:56a1:f24) (Ping timeout: 240 seconds)
[23:49:51] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[23:50:17] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:a151:152f:1fb7:8c9f)
[23:50:31] *** Joins: LiftLeft2 (~LiftLeft@gateway/vpn/pia/liftleft)
[23:51:34] *** Quits: N4buc0 (~N4buc0@2804:7f4:348a:fff2:9747:6e59:f1b0:31ec) (Remote host closed the connection)
[23:51:56] *** Joins: N4buc0 (~N4buc0@2804:7f4:348a:fff2:9747:6e59:f1b0:31ec)
[23:53:16] *** Joins: dylanj (~fish@shinobi.salesfive.com)
[23:55:45] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Quit: The Game)
[23:58:31] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
