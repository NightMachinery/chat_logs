[00:01:36] *** Joins: luna-is-here (~quassel@2a02:908:f761:2a3c::a)
[00:02:39] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a239:503:a404:97b6:b0c7:c2c5)
[00:04:35] *** Joins: Viewday112 (~Viewday@user/viewday)
[00:04:53] *** Joins: ovnicraft (~ovnicraft@191.100.144.41)
[00:05:06] *** Joins: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net)
[00:06:30] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[00:06:31] *** Viewday112 is now known as Viewday11
[00:08:02] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[00:08:08] *** Quits: darksun (~darksun@user/darksun) (Remote host closed the connection)
[00:09:10] *** easter_egg is now known as ayr-ton
[00:12:56] *** Joins: bam32 (~bambams@user/bambams)
[00:13:31] *** Quits: Omega037 (~Omega037@047-233-057-109.res.spectrum.com) (Read error: Connection reset by peer)
[00:13:54] *** Joins: Omega037 (~Omega037@047-233-057-109.res.spectrum.com)
[00:13:55] *** Quits: Omega037 (~Omega037@047-233-057-109.res.spectrum.com) (Remote host closed the connection)
[00:14:15] *** Quits: mike18 (~geri@71-220-52-187.mpls.qwest.net) (Remote host closed the connection)
[00:14:19] *** Joins: Omega037 (~Omega037@047-233-057-109.res.spectrum.com)
[00:14:36] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[00:19:46] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[00:20:50] *** Quits: lbracher (~lucas@77.109.116.248) (Quit: Leaving)
[00:21:07] *** Quits: ovnicraft (~ovnicraft@191.100.144.41) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:21:55] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[00:22:04] *** Joins: ovnicraft (~ovnicraft@191.100.144.41)
[00:22:17] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 240 seconds)
[00:24:00] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:24:38] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[00:24:57] <recoup> bjs That's right. I'm not sure how to call the graph() function, there's just no output regardless of what I try.
[00:25:12] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 256 seconds)
[00:25:15] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[00:25:26] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[00:25:37] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[00:27:37] <bjs> recoup: why are you using a function?  You call a function by typing graph()
[00:28:20] *** Quits: bdeshi (~bdeshi@bdeshi.space) (Quit: bouncer disconnect)
[00:29:31] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[00:29:47] *** Joins: hesse (~TheHerman@gateway/tor-sasl/thehermann)
[00:30:20] *** Quits: esro (~esro@nat1.krakowskiinternet.pl) (Quit: Leaving)
[00:30:28] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[00:30:42] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 268 seconds)
[00:30:59] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[00:31:44] <recoup> bjs someone helped me construct a part of the code, and my statements were written under def graph() under their guidance. How else can i print my output without using this function? Also, tried print (graph()) already but it returns 'None' https://bpa.st/4IKA
[00:32:07] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[00:32:13] *** Quits: ovnicraft (~ovnicraft@191.100.144.41) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:32:25] <bjs> recoup: well, you can just not have the def at all,  just make it one big file.
[00:32:44] *** Joins: Viewday113 (~Viewday@user/viewday)
[00:32:44] <bjs> recoup: someone else wrote most of this code?
[00:33:29] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[00:34:13] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[00:34:13] *** Viewday113 is now known as Viewday11
[00:35:51] <recoup> bjs Can you please change the code to how you're susggesting. I'm used to learning via trial and error, and I could understand from the final code. And no, I wrote all the function statements, I just filled certain blanks with someone's help who advised me to write everything under def.
[00:35:58] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 256 seconds)
[00:36:45] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[00:40:08] *** Joins: prs (~Priyanshu@203.18.51.238)
[00:40:32] *** Quits: behelit (~behelit@217.61.224.84) (Ping timeout: 240 seconds)
[00:40:34] <bjs> recoup: can you give me some idea of sort of, where you are in terms of learning Python.  I guess you've not learned functions/"def"s yet?
[00:41:17] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[00:41:33] *** Joins: JordiGH (~jordi@user/jordigh)
[00:42:02] <JordiGH> What exactly does async do? Can I implement async myself without extra language features?
[00:42:22] <JordiGH> Maybe I should just carefully read the PEP.
[00:42:31] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[00:43:34] <recoup> bjs That's right. I've done with loops, operators and such. The reason I took this task is because, whenever I'm on the verge of giving up due to frustration, I give myself a win, by do random sidetrack tasks that interests me.
[00:43:57] *** Quits: prirai (~Priyanshu@2409:4043:2e04:d5ef::7248:960b) (Ping timeout: 240 seconds)
[00:44:28] <recoup> And I feel like I've spent too much time now on this task to leave it uncompleted.
[00:45:09] <bjs> JordiGH: define "extra language features".  asyncio is written in Python and existed before async/await. So yes?
[00:45:15] <SnoopJ> JordiGH, yes, you can implement it with basic language features, there's a PEP for that even, PEP 342.
[00:45:33] <SnoopJ> But it's a real bother so the language grew nicer ways to do it, where "it" is run code concurrently.
[00:45:49] <recoup> bjs The other person said the code I came up with finished the task, except for representing the peak point in the graph, with a special character.
[00:46:08] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[00:46:52] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[00:47:02] <JordiGH> So async is like, uh... syntactic cake?
[00:47:14] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 252 seconds)
[00:47:33] <JordiGH> I just realised I have no idea what's the difference between a coroutine and a generator.
[00:47:57] *** Joins: fikran (~fikran@user/fikran)
[00:48:16] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[00:48:28] *** Joins: PJBoy (~PJBoy@user/pjboy)
[00:49:00] *** Quits: cosimone (~user@93-47-231-231.ip115.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[00:50:54] *** Joins: vlm (~vlm@user/vlm)
[00:51:05] <bjs> recoup: I'm not entirely sure what part of the code is yours and what part is theirs
[00:51:32] <bjs> JordiGH: not very much, they're both functions you can "pause".  Infact the coroutine code is almost copy-paste of the generator one
[00:51:35] *** Joins: moogs94 (~moogs@12.146.254.146)
[00:51:50] <JordiGH> So what's the actual difference?
[00:52:31] <bjs> JordiGH: one uses `async def` and `await` the other uses normal `def` and `yield`
[00:52:56] <SnoopJ> (the PEP goes into the distinction in fairly laborious detail)
[00:52:59] <JordiGH> Sooooo... they're the same thing but I use different syntax for each?
[00:53:14] <SnoopJ> they're not the same thing, but they are close cousins
[00:53:41] <JordiGH> Weird, why is this so hard for me to understand.
[00:53:44] <bjs> JordiGH: they're not "the same thing",  it's more like Python took generators and copy/pasted and renamed it to "coroutine" so now there are both.  They have slightly different APIs and look different but are fundamentally doing the same thing
[00:53:54] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:54:11] <JordiGH> The PEP says they also both had the same syntax before the PEP.
[00:54:23] <JordiGH> So how did you make a coroutine without async/await?
[00:54:31] <JordiGH> And the same syntax as a generator?
[00:54:36] <SnoopJ> there was not syntax for asynchronous functions before there was syntax for asynchronous functions
[00:55:30] <recoup> bjs Okay, I give up. thank you very much for your time. Good day!
[00:55:44] <bjs> recoup: Do you just want someone to do it for you?
[00:55:53] <bjs> I thought this was some kind of homework
[00:56:23] <bjs> JordiGH: before there was async/await there was on generators,  and people made coroutines out of generators
[00:56:26] <recoup> bjs I'm not a student:)  And I thought I already did the code, except for getting the ouput.
[00:56:59] <recoup> bjs Are you saying that the code is far from complete?
[00:57:13] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 268 seconds)
[00:57:19] <JordiGH> So how do you make coroutines out of generators without 3.5 syntax?
[00:57:20] <bjs> recoup: well your code didn't mention / or \ or whitespace at all
[00:57:42] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com)
[00:57:57] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-203.home.otenet.gr) (Ping timeout: 240 seconds)
[00:58:13] <bjs> JordiGH: `def my_coro(): print(1); yield; print(2)`  this is a "coroutine" (not something that asyncio will accept) but it's a function, you can run it for a bit, pause it and then come back to it later
[00:58:38] <recoup> bjs you are right. what was i thinking all these while!
[00:58:55] <JordiGH> bjs: So why is this not a generator?
[00:59:00] *** Joins: prirai (~Priyanshu@203.18.51.238)
[00:59:08] *** Quits: prs (~Priyanshu@203.18.51.238) (Read error: Connection reset by peer)
[00:59:18] <SnoopJ> Who said it wasn't?
[00:59:19] <bjs> JordiGH: why is what not a generator?
[00:59:43] <bjs> JordiGH: before there was async/await there was only generators. People used Python generators to make things they called "coroutines", which were just generators.
[00:59:50] <JordiGH> Why is `my_coro` not a generator?
[01:00:02] <JordiGH> Oh, so generators and coroutines are the samething before 3.5?
[01:00:12] <JordiGH> Every coroutine was implemented as a generator?
[01:00:13] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:f0c0:65e3:6cd3:735e) (Ping timeout: 256 seconds)
[01:00:23] <JordiGH> And every generator could be used as a coroutine?
[01:00:24] *** Joins: zepolen (~zepolen@ppp-94-66-223-200.home.otenet.gr)
[01:00:57] <bjs> JordiGH: before 3.5 there was no such thing as a "coroutine"
[01:01:08] <bjs> People would write generators and say "this is a coroutine"
[01:01:25] <SnoopJ> (it's an abstract concept)
[01:01:33] <JordiGH> The PEP says there were coroutines before 3.5
[01:01:36] <bjs> recoup: https://bpa.st/B6YQ
[01:01:46] <JordiGH> "It is easy to confuse coroutines with regular generators, since they share the same syntax; this is especially true for new developers."
[01:01:51] <JordiGH> -- PEP 492
[01:01:52] <bjs> JordiGH: before async/await there was only generators.
[01:02:06] <JordiGH> So people were calling some generators coroutines but that's not what they were?
[01:02:06] <bjs> It's that people wrote generator functions, used generators in their libraries and then, when speaking to other humans, said "this is a coroutine"
[01:02:22] <bjs> JordiGH: they were coroutines, they were Python generators being used as a coroutine
[01:02:30] <JordiGH> Okay.
[01:02:46] <JordiGH> So now a coroutine is the same thing but has different syntax so we can say, look, different syntax, it's a coroutine!
[01:03:10] <JordiGH> Wait, no. I get that await is yield.
[01:03:13] <bjs> JordiGH: it's not the same thing,  we now have 2 different classes. a generator class and a coroutine class
[01:03:17] <JordiGH> But why do we also need an async keyword?
[01:03:54] <bjs> It's just that we took the generator class, and copy/pasted it into coroutines.py  (well not really, it's all in C) and then made it so that `async def` made a coroutine instance rather than a generator instance
[01:04:04] <bjs> JordiGH: because that's what the syntax says.
[01:04:18] *** Joins: XV8 (~XV8@2601:5cb:c001:50:10cd:9e3c:2c4a:2ae1)
[01:04:26] <bjs> The syntax says you can only use the `await` expression inside an `async def`.  Just like how you can only use the `return` statement inside a `def`
[01:04:33] *** Quits: erica (~erica@user/erica) (Quit: The Lounge - https://thelounge.chat)
[01:04:37] <JordiGH> Is "async" just some "sugar" the same way that we require to open new blocks with a colon in Python?
[01:04:48] <bjs> JordiGH: I mean it's part of the syntax yes
[01:04:49] <JordiGH> Some extra syntax to remind the programmer that something is happening here?
[01:05:03] <SnoopJ> it has semantics, it is not *just* syntax
[01:05:07] <JordiGH> Python wouldn't need colons, just indentation would be enough. But Guido added colons because it was more instructive.
[01:05:10] *** Joins: Viewday115 (~Viewday@user/viewday)
[01:05:15] <SnoopJ> if you want to know about the rationale behind PEP 492, I recommend starting with the "Rationale" section of PEP 492.
[01:05:31] <JordiGH> So do you need the "async" in the `def` and no just `await` in the body of the function in order to be similarly more explicit, to force the programmer to think "this is a coroutine"?
[01:06:12] <JordiGH> SnoopJ: I am reading it, for some reason can't get it through my thick skull.
[01:06:15] *** Joins: erica (~erica@user/erica)
[01:06:16] <bjs> JordiGH: yes.  The primary reason is that it was awkward in the case where the function didn't have an `await`
[01:06:27] *** Quits: Payam (~Payam@138.106.57.131) (Ping timeout: 256 seconds)
[01:06:32] <SnoopJ> refuse the temptation to guess etc.
[01:06:37] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[01:07:08] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[01:07:09] *** Viewday115 is now known as Viewday11
[01:07:14] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[01:07:25] <bjs> JordiGH: if you wanted to make a generator (which looked like a coroutine) which didn't yield (but was still a generator) it was hard.  You had do silly tricks like putting a `if False: yield` in your code.  With `async def` you don't need those tricks anymore.
[01:07:32] <bjs> It was a syntactic thing to make it nicer to use
[01:07:37] <JordiGH> "Whether or not a function is a coroutine is determined by a presence of yield or yield from statements in its body" <---- they mean generators, right? Which is what all coroutines were before PEP 492
[01:07:45] *** Joins: nomic (~nomic@51.52.78.152)
[01:07:52] <JordiGH> I have to guess because you are telling me now that this is not what defines a coroutine.
[01:08:50] <bjs> JordiGH: so there are two things here.  There's the word "coroutine" which is just an English word as it appears in a dictionary.  Then there's the Python class called `coroutine`
[01:08:52] <SnoopJ> That's because it's an abstraction.
[01:08:57] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Ping timeout: 268 seconds)
[01:09:24] *** Joins: nomic2 (~nomic@185.217.117.146)
[01:09:47] <bjs> JordiGH: the Python `coroutine` class didn't exist before 3.5, we only had the `generator` class (and generators are created with yield).  You could make "coroutines" with `generator`s by making a `generator` that had yields in the places where you wanted to switch between tasks
[01:09:53] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::cf1c) (Read error: Connection reset by peer)
[01:10:08] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[01:10:24] <bjs> in 3.5 we got the `coroutine` class,  now we can make "coroutines" with `async` and `await` to produce `coroutine` objects
[01:10:30] <JordiGH> Okay, so in the PEP's rationale why are they saying that whether something is or isn't a coroutine is determine by "yield" in the body?
[01:10:44] <JordiGH> They mean generator, right? becuase Python didn't have formally-defined coroutines.
[01:10:49] <bjs> JordiGH: because a "coroutine" in 3.5 and earlier was a `generator`
[01:10:58] <bjs> and therefore, a "coroutine" was a `def` with a `yield` in it.
[01:10:58] <JordiGH> Okay, I think I got it.
[01:11:06] *** Quits: a0z1 (~a0z1@194.36.25.53) (Ping timeout: 256 seconds)
[01:11:16] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:11:33] <recoup> bjs Thanks a lot. Seeing the output on my screen gave me some hope. Looking at your code, I now remember writing a double slash \\ to avoid the escape character. I fcked up my final code by using multiple IDE tabs and multiple browser windows! Although what I had written was nowhere neat and complete as yours.
[01:11:36] *** Joins: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com)
[01:11:38] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[01:11:54] *** Joins: prs (~Priyanshu@2409:4043:2e04:d5ef::7248:960b)
[01:11:55] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:11:57] *** Quits: nomic (~nomic@51.52.78.152) (Ping timeout: 240 seconds)
[01:12:13] <JordiGH> Hm, guess I should read PEP 380 and 342 first.
[01:13:14] <recoup> bjs I will use your code to read & understand, and hopefully can do the peak point thing by myself.
[01:13:23] <JordiGH> Can a PEP reference a PEP with a higher number? I wonder if earlier PEPs are amended to refer to later PEPs.
[01:14:25] <bjs> JordiGH: yes,  PEPs often do that when they become superseded or when they are related to later PEPs
[01:14:38] <bjs> but I don't think it's worth the devs times to go back through the archives and update all the old PEPs
[01:14:41] <JordiGH> What a tangled web of PEPs we weave ;_;
[01:16:20] *** Quits: prirai (~Priyanshu@203.18.51.238) (Ping timeout: 268 seconds)
[01:16:46] *** Joins: stonkey (~stonkey@user/stonkey)
[01:16:49] <Helion> PEPs do get updated but its mostly procedural PEPs and informational PEPs.  the ones that introduce new language features are really just there to document why a major change was made, the docs themselves are the authoritative source (PEPs are not really meant to be that useful to general python users ... including PEP 8!)
[01:16:58] *** Quits: djb27_ (~djb27@user/djb27) (Read error: Connection reset by peer)
[01:17:39] <SnoopJ> Helion, that doesn't really account for PEPs that are *proposing* features (or did and were rejected)
[01:18:28] *** Quits: cheater (~Username@user/cheater) (Ping timeout: 256 seconds)
[01:19:09] <Helion> Eh, yeah, those are active living documents though.  Something like the pep for ... context managers from 20 years ago isn't going to get updated with new details about context managers even if it contradicts the actual implementation now
[01:19:16] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[01:19:18] *** Quits: prs (~Priyanshu@2409:4043:2e04:d5ef::7248:960b) (Quit: Quit)
[01:19:47] *** nomic2 is now known as nomic
[01:20:13] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[01:20:18] <bjs> Once it's Final, it'd probably be confusing to constantly go back and edit them
[01:20:44] <SnoopJ> which is why they can be superceded :)
[01:20:58] <bjs> but who knows, maybe it'd be better to have some kind of semantic web of PEPs
[01:21:01] * SnoopJ points out that PEP 1 explains PEPs
[01:21:12] <bjs> SnoopJ: which PEP explains PEP 1
[01:21:21] <Helion> PEP -`
[01:21:23] <grym> the one that also shaves its own beard
[01:21:24] <Helion> PEP -1
[01:21:35] <SnoopJ> bjs, PEP 1
[01:21:56] <Helion> Recursive - PEP Explains PEP
[01:24:49] *** Quits: magla (~gelignite@55d4a813.access.ecotel.net) (Quit: Stay safe!)
[01:24:57] *** Joins: cheater (~Username@user/cheater)
[01:25:17] *** Quits: Barones (~Barones@189.50.80.77) (Quit: Leaving)
[01:25:17] *** Quits: emf (~emf@2620:10d:c091:480::1:cf46) (Ping timeout: 240 seconds)
[01:25:21] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[01:26:24] *** Quits: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[01:29:45] *** Quits: aphysically (~aphysical@user/aphysically) (Ping timeout: 250 seconds)
[01:30:42] *** Joins: piecharm (~piecharm@183.82.176.201)
[01:30:57] *** Joins: aphysically (~aphysical@user/aphysically)
[01:31:57] *** Quits: recoup (~recoup@183.82.176.201) (Ping timeout: 256 seconds)
[01:35:59] <JordiGH> Hm, is there some universal serialiser library out there?
[01:36:02] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[01:36:05] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[01:36:09] <JordiGH> Such a thing could exist, right?
[01:36:11] *** Quits: el_kevino (~mote@2604:a880:400:d1::901:5001) (Quit: WeeChat 3.3)
[01:36:20] <JordiGH> Like... pickle... but JSON.
[01:36:25] *** Joins: Viewday114 (~Viewday@user/viewday)
[01:36:32] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[01:36:51] *** Joins: emf (~emf@2620:10d:c091:480::1:cf46)
[01:37:08] <meejah> being explicit is better, IMO
[01:37:10] *** Joins: herme5 (~mote@2604:a880:400:d1::901:5001)
[01:37:28] *** herme5 is now known as el_kevino
[01:37:39] <meejah> (that is, "automatic" is one of the problems with pickle)
[01:37:43] *** Joins: dre (~dre@2001:8003:c932:c301:48f3:b0e:431e:dad8)
[01:37:46] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:499c:186d:f10d:6a24) (Ping timeout: 260 seconds)
[01:38:18] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[01:38:19] *** Viewday114 is now known as Viewday11
[01:39:39] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[01:39:45] *** Joins: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de)
[01:41:50] *** Joins: noria (~noria@gateway/tor-sasl/noria)
[01:45:32] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:1cbb:501e:c508:b267) (Ping timeout: 252 seconds)
[01:46:33] *** Quits: JordiGH (~jordi@user/jordigh) (Ping timeout: 268 seconds)
[01:46:33] *** Quits: NeoCore (~neocore@217.138.207.205) (Quit: Leaving)
[01:47:16] <velix> SnoopJ & Wulf: Seems like they still don't like it. The maintainer suggest my "polite" version from yesterday :D https://github.com/mapproxy/mapproxy/pull/559
[01:48:21] *** Joins: arinov (~arinov@213.194.126.155)
[01:49:38] *** Quits: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[01:50:21] *** Joins: JordiGH (~jordi@user/jordigh)
[01:50:37] <JordiGH> The "automatic" part of pickle because it runs arbitrary code, right?
[01:50:50] <SnoopJ> velix, at a quick glance, it seems like they're worried about the possibility of breaking things on systems that depended on the out-of-spec behavior
[01:52:08] *** Quits: grimvar (~grimvar@i5C75F749.versanet.de) (Ping timeout: 252 seconds)
[01:52:08] <velix> SnoopJ: as far as I've understood it, it was broken by design.
[01:52:57] *** Joins: parv (~quass@user/parv)
[01:53:01] <velix> SnoopJ: I wasn't able to reproduce any problems with the code suggested by Wulf.
[01:53:20] *** Quits: nomic (~nomic@185.217.117.146) (Quit: Leaving)
[01:53:29] *** Quits: piecharm (~piecharm@183.82.176.201) (Quit: Client closed)
[01:54:01] *** Joins: grimvar (~grimvar@i5C75F749.versanet.de)
[01:54:03] <velix> SnoopJ: But funny, he now suggests exactly the code I had yesterday :D
[01:55:03] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[01:55:07] *** Joins: nomic (~nomic@185.192.69.90)
[01:55:37] *** Quits: emf (~emf@2620:10d:c091:480::1:cf46) (Ping timeout: 240 seconds)
[01:57:32] <nedbat> JordiGH: yes, the way pickle can deserialize anything is by executing arbitrary callables.
[01:58:19] <JordiGH> idgi, though, why are callables necessary for deserialising anything?
[01:58:28] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[01:59:16] *** Joins: p-i- (~Ohmu@mx-ll-183.89.37-34.dynamic.3bb.co.th)
[01:59:33] *** Quits: hesse (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 276 seconds)
[01:59:41] *** Quits: MikZyth (~MikZyth@host-79-157-66-217.spbmts.ru) (Quit: WeeChat 3.4)
[02:01:45] *** Joins: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de)
[02:03:41] *** Quits: georgios (~georgios@user/georgios) (Quit: Konversation terminated!)
[02:03:55] <JordiGH> Like, can't you take some kind of snapshot of the Python objects in memory and load and save that? Sure, it would depend on CPython implementation of how that memory snapshot is interpreter but...
[02:04:29] *** Joins: djapo (~archangel@user/djapo)
[02:04:33] *** Joins: Viewday115 (~Viewday@user/viewday)
[02:06:06] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[02:06:07] *** Viewday115 is now known as Viewday11
[02:06:53] *** Quits: arinov (~arinov@213.194.126.155) (Quit: Konversation terminated!)
[02:07:03] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:07:13] *** Joins: onichomp (~onichomp@2806:264:4404:8210:2905:f8c0:f20c:69aa)
[02:07:19] *** Joins: arinov (~arinov@213.194.126.155)
[02:07:32] *** Quits: blindguard (~blindguar@2a02:908:1864:c200:e9df:eeac:1563:f38a) (Quit: Konversation terminated!)
[02:08:53] *** Quits: onichomp (~onichomp@2806:264:4404:8210:2905:f8c0:f20c:69aa) (Read error: Connection reset by peer)
[02:08:54] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[02:09:31] *** Joins: onichomp (~onichomp@2806:264:4404:8210:2905:f8c0:f20c:69aa)
[02:11:36] <bjs> JordiGH: a Python object is basically a tangled mess of pointers to random-sized chunks of memory
[02:11:52] <JordiGH> So you also need all of the referents?
[02:12:03] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[02:12:03] <JordiGH> And hence you need to execute Python to create the referents?
[02:12:07] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[02:12:20] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:12:20] <bjs> JordiGH: no my comment was arguing why you can't just "take a snapshot of memory"
[02:12:53] *** Joins: zepolen_ (~zepolen@2a02:1388:2083:8b0f:1918:fb03:f42f:68b6)
[02:13:04] *** Quits: zepolen (~zepolen@ppp-94-66-223-200.home.otenet.gr) (Ping timeout: 268 seconds)
[02:14:34] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 256 seconds)
[02:14:35] *** Quits: ubert (~Thunderbi@p548c89c3.dip0.t-ipconnect.de) (Remote host closed the connection)
[02:14:55] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:17:59] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[02:18:45] *** Joins: Viewday114 (~Viewday@user/viewday)
[02:19:52] <bjs> JordiGH: pickle is basically a mini programming language and pickle.dumps creates a little program in that language that produces the object you want.  all pickle.loads does is run it.  the problem is that Python objects are very customizable and so to get generic {de-}serialization the serializing needs to be customizable too
[02:20:14] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[02:20:15] *** Viewday114 is now known as Viewday11
[02:20:31] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:f0c0:65e3:6cd3:735e)
[02:20:56] *** Parts: bancroft (~bancroft@142.162.53.67) (WeeChat 3.2)
[02:21:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[02:23:12] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com)
[02:24:06] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[02:25:27] *** Quits: The_Loko (~The_Loko@86.127.232.141) (Quit: Leaving)
[02:27:56] *** Joins: emf (~emf@2620:10d:c091:480::1:cf46)
[02:28:23] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[02:30:03] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[02:30:20] *** Quits: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[02:30:53] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[02:31:33] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:31:49] *** Joins: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de)
[02:32:02] *** Quits: hemstock (~hemstock@194.59.250.234) (Ping timeout: 240 seconds)
[02:32:03] *** Joins: lethu (~lethu@user/lethu)
[02:32:43] *** Quits: noria (~noria@gateway/tor-sasl/noria) (Quit: Leaving)
[02:32:50] *** Joins: psystemupdate (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[02:33:37] *** Joins: PantelicGR (~PantelicG@user/pantelicgr)
[02:33:58] *** psystemupdate is now known as ChinaWhiteCastle
[02:34:02] *** Quits: upsala (~zcb@185.209.196.169) (Quit: WeeChat 3.3)
[02:34:19] *** Joins: zepolen (~zepolen@ppp-94-66-223-200.home.otenet.gr)
[02:34:20] *** Quits: emf (~emf@2620:10d:c091:480::1:cf46) (Quit: emf)
[02:34:40] *** Quits: zepolen_ (~zepolen@2a02:1388:2083:8b0f:1918:fb03:f42f:68b6) (Ping timeout: 268 seconds)
[02:34:51] *** Joins: emf (~emf@2620:10d:c091:480::1:cf46)
[02:35:25] *** Quits: leitz (~LeamHall@072-182-158-027.res.spectrum.com) (Quit: nappy time)
[02:35:34] *** Joins: Viewday113 (~Viewday@user/viewday)
[02:35:48] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[02:35:58] *** Quits: h3mstock (~hemstock@194.59.250.234) ()
[02:36:05] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[02:36:06] <willow> can anyone recommend a good way to check if a host is alive?  i'm testing icmplib but it's ping seems to be slow
[02:36:27] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:36:37] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 240 seconds)
[02:36:57] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 240 seconds)
[02:37:08] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[02:37:08] *** Viewday113 is now known as Viewday11
[02:39:33] *** Joins: lethu (~lethu@user/lethu)
[02:40:49] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 268 seconds)
[02:41:39] *** Quits: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net) (Quit: This computer has gone to sleep)
[02:44:32] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 240 seconds)
[02:44:34] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[02:44:37] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 240 seconds)
[02:45:06] *** Joins: dob1 (~dob1@user/dob1)
[02:45:57] <Feuermagier> willow, pinging a host is your best option. Check the timeout set in your functions. There are other low level solutions available if you are in the same LAN as your target (ARP-packages)
[02:45:59] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[02:48:11] <mefistofeles> hmm, I'm having issues understanding the differences between descriptors and properties. I don't see why I would prefer descriptors over properties, having to define a new class and dunder methods, etc.
[02:48:17] *** Quits: ChinaWhiteCastle (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 240 seconds)
[02:48:26] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[02:48:32] <mefistofeles> can you give an example where I would definitely want to use descriptors and not properties?
[02:48:54] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Client Quit)
[02:49:12] *** Joins: Viewday116 (~Viewday@user/viewday)
[02:49:13] *** Quits: ThePhilgrim (~ThePhilgr@78-69-18-227-no49.tbcn.telia.com) (Quit: ThePhilgrim)
[02:49:50] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[02:50:36] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[02:50:47] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[02:50:48] *** Viewday116 is now known as Viewday11
[02:51:16] <willow> thank you Feuermagier
[02:51:17] *** Quits: emf (~emf@2620:10d:c091:480::1:cf46) (Ping timeout: 240 seconds)
[02:52:24] <bjs> mefistofeles: a property is an example of a descriptor. A good place that uses descriptors are in database libraries, where you have a Python class which defines some kind of schema
[02:52:44] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[02:52:55] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Client Quit)
[02:53:11] <mefistofeles> bjs: is there something I wouldn't be able to accomplish with properties that I could accomplish with "generic" descriptors?
[02:53:14] *** Joins: Colt (~Colt@user/colt)
[02:53:54] <bjs> mefistofeles: well generic descriptors can do more, because they can be whatever object you want.
[02:54:01] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[02:54:29] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[02:54:29] <mefistofeles> bjs: oh right, so they could have properties/descriptors themselves and whatnot
[02:54:31] <mefistofeles> and methods
[02:54:32] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:54:35] <mefistofeles> right?
[02:54:46] <bjs> mefistofeles: the actual descriptor object yes
[02:55:08] <mefistofeles> I see, interesting
[02:55:13] <mefistofeles> I never encountered descriptors before
[02:55:16] <mefistofeles> bjs: thanks
[02:55:23] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[02:56:15] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[02:56:46] <bjs> mefistofeles: a "descriptor" is just an object with a __get__ method.  properties are one such object
[02:56:52] *** Joins: clarkk (~clarkk@host86-165-12-159.range86-165.btcentralplus.com)
[02:57:05] <bjs> property() objects are probably the most commonly used descriptors
[02:57:19] *** Joins: fikran (~fikran@user/fikran)
[02:57:22] <bjs> (there are also __set__ and __delete__ methods as part of the descriptor protocol)
[02:58:36] <mefistofeles> bjs: yeah, I understand now, thanks again
[02:58:41] <mefistofeles> they allow much more complexity
[02:58:53] <mefistofeles> I mean, generic descriptors compared to proporties
[02:59:23] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Read error: Connection reset by peer)
[02:59:24] *** Quits: Colt (~Colt@user/colt) (Remote host closed the connection)
[02:59:50] *** Joins: Colt (~Colt@user/colt)
[03:02:02] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[03:04:52] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:08:58] <bjs> mefistofeles: https://bpa.st/RI7Q is a kind of classic example to show what a database schema thing is doing
[03:09:06] <bjs> at least for the descriptor side
[03:09:57] <bjs> (Column is the descriptor,  Table uses the actual descriptor objects, and then the bottom of the script interacts with the descriptor protocol to call the getters)
[03:09:59] <mefistofeles> wait wait
[03:10:06] <mefistofeles> are you saying you have more messages than me?
[03:10:08] <mefistofeles> !!
[03:10:13] <mefistofeles> haha
[03:10:14] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 252 seconds)
[03:10:30] <mefistofeles> bjs: I see, that's a neat example indeed, thanks
[03:12:06] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[03:12:39] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:13:37] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 240 seconds)
[03:15:17] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 240 seconds)
[03:20:07] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[03:22:16] *** Joins: wolfshappen (~waff@irc.furworks.de)
[03:23:30] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:23:54] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[03:25:02] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com)
[03:27:29] *** Joins: Xano (~Xano@2a00:23c4:4204:700:c59d:e0d0:f43e:66a3)
[03:28:22] *** Joins: ScottMichaud (~ScottMich@bras-base-clbaon0201w-grc-45-184-144-82-228.dsl.bell.ca)
[03:28:55] <meejah> has anyone done testing of a GUI written in Qt and Python? Thinking along the lines of Selenium: driving it for "real actual GUI clicks and such". Is there anything besides qtbot to look at? (is there anything "general" for this? e.g. "drive an X / Wayland application for great good"..?)
[03:29:52] <Xano> I want to run an async function in a process, and await it (Python 3.7+). However, no matter how I run this async function (loop.run_in_executor(func) or asyncio.wrap_future(ProcessPoolExecutor().submit(func))), when it tries to start an event loop inside the child process, that causes a RuntimeError.
[03:30:20] <xavierdarkness>  
[03:30:25] <Xano> I can't seem to find any examples of anyone trying to run async code in a child process
[03:30:57] <Xano> meejah, Pytest has a Qt plugin. Not truly as nice as Selenium, but definitely usable
[03:31:28] <Xano> Oh wait that's what you meant with qtbot
[03:31:36] <meejah> Xano: yeah, thanks -- that's "qtbot" etc (as far as I can see, and definitely what i'm about to do)
[03:31:57] <meejah> there's also pytest-xvfb which allegedly plays nicely
[03:32:05] <ScottMichaud> Hello. Attempting to convert a png to a jpeg. The PNG is downloaded with aiohttp. my_image = await response_download.read() (new line) my_image_jpg = Image.open(io.BytesIO(thumbnail_image)) gives "TypeError: a bytes-like object is required, not 'PngImageFile'. Pretty much every tutorial that I see online requires saving the PNG to disk before
[03:32:06] <ScottMichaud> converting to JPG.
[03:32:07] <Xano> meejah, The only other thing I found was an older project I think for X only, didn't seem too well maintained
[03:32:14] <Xano> Can't remember the name now
[03:32:28] <meejah> Xano: if you'll settle for Twitsed I can show examples .. but you'll want spawn_process or whatever asyncio calls it in there somewhere
[03:32:57] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:33:01] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[03:33:01] *** Joins: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net)
[03:33:24] <Xano> meejah, I'm vaguely aware of Twisted but have never used it and considering the little amount of time I have to spend on this project I'd rather not introduce such a fundamental new dependency at this moment
[03:33:38] <meejah> yeah, i meant more for "inspiration" ;)
[03:33:56] *** Quits: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net) (Quit: Bye)
[03:34:20] <meejah> crossbar.io spawns a bunch of worker processes and communicates to them using WAMP (the protocol it's a router for) over stdin/stdout; see https://github.com/crossbario/crossbar/blob/master/crossbar/worker/main.py for the generic "worker"
[03:34:40] <meejah> (WAMP does support asyncio but the router itself is written in Twisted)
[03:34:41] <Xano> I'm trying to wrap my head around it, though. It seems that if I run an event loop in the child process, it clashes with the parent process's loop somehow, but if I don't create a loop in the child process, it errors because there's no loop
[03:34:49] *** Joins: zuQe8 (~zuQe8@cpc105060-sgyl40-2-0-cust136.18-2.cable.virginm.net)
[03:34:55] *** Joins: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[03:35:07] <meejah> by "process" you mean "real actual OS process" right?
[03:35:56] <Xano> Yes
[03:36:14] <Xano> I've dug myself a little process pool (executor)
[03:36:44] <Xano> (I'm literally using concurrent.futures.ProcessPoolExecutor)
[03:36:57] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[03:37:51] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 245 seconds)
[03:38:20] *** Quits: JordiGH (~jordi@user/jordigh) (Quit: Jacking out)
[03:38:26] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[03:38:46] *** Joins: Viewday11 (~Viewday@user/viewday)
[03:38:57] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[03:47:05] <meejah> okay, i'm not familiar enough with that to suggest how you're "supposed" to get the event-loop :/
[03:48:02] *** Quits: slav0nic (slav0nic@python.su) (Ping timeout: 240 seconds)
[03:48:09] *** Quits: Auron (~Auron956@user/auron) (Remote host closed the connection)
[03:49:13] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:49:44] <ScottMichaud> Guess I'll just write the PNG to a file before converting it to JPG.
[03:51:37] *** Quits: zepolen (~zepolen@ppp-94-66-223-200.home.otenet.gr) (Ping timeout: 240 seconds)
[03:51:46] *** Joins: zepolen (~zepolen@2a02:1388:2083:8b0f:1918:fb03:f42f:68b6)
[03:52:32] *** Joins: JingleJazzy (~jaziz@user/jaziz)
[03:52:37] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[03:54:49] *** Quits: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[03:55:13] *** Joins: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de)
[03:58:22] *** Quits: nomic (~nomic@185.192.69.90) (Quit: Leaving)
[03:59:38] *** Quits: akk (~akk@174-28-122-47.albq.qwest.net) (Quit: +++)
[03:59:40] *** Joins: nomic (~nomic@185.192.69.90)
[04:00:07] *** Quits: ScottMichaud (~ScottMich@bras-base-clbaon0201w-grc-45-184-144-82-228.dsl.bell.ca) (Quit: Client closed)
[04:01:17] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[04:02:35] *** Quits: vladoski (~foo@2001:b07:add:d406:a504:5602:dd1:c761) (Quit: Textual IRC Client: www.textualapp.com)
[04:03:49] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[04:04:06] *** Quits: bam32 (~bambams@user/bambams) (Quit: I mean the best with what I say. It doesn't always sound that way.)
[04:04:43] *** Joins: Viewday116 (~Viewday@user/viewday)
[04:05:10] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[04:05:10] *** Viewday116 is now known as Viewday11
[04:07:20] *** Joins: Terexen (~terexen@user/terexen)
[04:07:32] *** Quits: novapy (~gerrit@c-68-62-193-246.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[04:08:26] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[04:09:52] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[04:13:18] *** Quits: parv (~quass@user/parv) (Quit: parv)
[04:13:40] *** Quits: nomic (~nomic@185.192.69.90) (Quit: Leaving)
[04:14:19] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:14:29] *** Joins: ChinaWhiteCastle (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net)
[04:15:02] *** Joins: nomic (~nomic@185.198.243.243)
[04:15:16] *** Quits: hypoon (~hypoon@pool-108-31-49-4.washdc.fios.verizon.net) (Ping timeout: 256 seconds)
[04:17:37] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[04:20:26] <han-`> maybe this goes beyond a python question, but how would you represent a part of a week in pyton? like tuesday 8am-wednesday 3pm
[04:20:29] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[04:20:39] <han-`> and not any specific tuesday
[04:20:55] *** Joins: stultusv (~stultusv@user/stultusv)
[04:20:59] <cluelessperson> han-`, a time delta
[04:21:20] *** Quits: miique (~miique@181.46.139.166) (Ping timeout: 268 seconds)
[04:21:40] <cluelessperson> han-`, https://docs.python.org/3/library/datetime.html#datetime.timedelta
[04:21:57] <han-`> hmm i'm not interested in the length, just storing the range
[04:22:38] *** Quits: solo (~solo@c-73-219-147-223.hsd1.ct.comcast.net) (Ping timeout: 256 seconds)
[04:22:39] <han-`> maybe I just need to store the day of the week and the time start, probably overthinking this
[04:22:45] <cluelessperson> han-`, just store it as a (range-start, range-end)
[04:23:10] <cluelessperson> han-`, a simple tuple (start-timestamp, end-timestamp)
[04:23:25] <han-`> it's not a timestamp though, because it's a generic tuesday
[04:23:29] <cluelessperson> and yes, I was incorrect to suggest a mere time delta.  brain farts.
[04:23:34] <han-`> it's any tuesday at 8am
[04:24:08] <han-`> think like the hours a store is open
[04:25:06] <han-`> it might just be ((weekday start, hour start), (weekday end, hour end))
[04:25:47] <cluelessperson> han-`, So you're not actually storing a time range, you're storing a repeating event.   The problem is that in reality, time isn't even perhaps sequential
[04:26:22] <cluelessperson> han-`, so you might just store something like.    day=*, hour=8, min=0, weekday=tuesday,  that you'd have to check against.
[04:26:54] <han-`> i'm eventually going to be checking if real time stamps fall within that range
[04:27:16] <cluelessperson> han-`,  Yeah,  so you'd store the things you want to match, and see if they match.
[04:27:16] <han-`> but yeah, probably no shortcut to writing out all of the logic
[04:27:49] <han-`> thanks for the sanity check
[04:28:05] <cluelessperson> han-`, You'd store something like a "TimeMatch" containing the description of a time you want to match, in this case probably selecting for "weekday" and "hour"
[04:28:09] <cluelessperson> and "minute"
[04:28:12] *** Joins: Wulf (~Wulf@user/wulf)
[04:28:14] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[04:28:40] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[04:28:45] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:29:25] *** Joins: DoomGuyFieri (~DoomGuyFi@c-73-121-103-165.hsd1.tn.comcast.net)
[04:31:19] <cluelessperson> han-`, you could also do something like.   if last_tuesday_at8 - now() < 10 hours:
[04:31:26] <cluelessperson> that might simplify
[04:32:01] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com)
[04:32:45] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com) (Client Quit)
[04:33:48] *** Joins: Viewday118 (~Viewday@user/viewday)
[04:34:15] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[04:34:15] *** Viewday118 is now known as Viewday11
[04:34:21] *** Quits: esv (~esv@74.124.178.154) (Remote host closed the connection)
[04:35:09] *** Joins: miique (~miique@181.46.139.166)
[04:35:29] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[04:35:40] <han-`> hmm
[04:35:48] *** Parts: ajak (~ajak@gentoo/developer/ajak) ()
[04:39:57] *** Quits: visl (visl@user/visl) (Ping timeout: 240 seconds)
[04:42:03] *** Quits: DoomGuyFieri (~DoomGuyFi@c-73-121-103-165.hsd1.tn.comcast.net) (Quit: Connection closed)
[04:44:30] *** Joins: Viewday112 (~Viewday@user/viewday)
[04:44:57] *** Quits: Xano (~Xano@2a00:23c4:4204:700:c59d:e0d0:f43e:66a3) (Ping timeout: 240 seconds)
[04:45:14] <cluelessperson> han-`, it's not a simple math problem of intervals because frankly, we change our rendering of time pretty often
[04:45:25] <cluelessperson> daylight savings, leap seconds, etc.
[04:45:34] <cluelessperson> it also depends on how accurate you want to be.
[04:46:26] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[04:46:27] *** Viewday112 is now known as Viewday11
[04:46:34] <han-`> yeah i think I just need to do if day_of_week => x and hour >= x etc
[04:47:22] <han-`> obv need better logic but that's the only reasonable way to do it\
[04:48:09] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[04:52:57] *** Quits: llanhmod (~personnel@user/domhnall/x-2887755) (Ping timeout: 240 seconds)
[04:54:30] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[04:55:10] *** Joins: llanhmod (~personnel@user/domhnall/x-2887755)
[04:57:39] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[05:01:14] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 260 seconds)
[05:02:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[05:04:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[05:06:17] *** Quits: Jak_o_Shadows (~quassel@user/jak-o-shadows/x-5091859) (Ping timeout: 240 seconds)
[05:06:39] *** Joins: fikran (~fikran@user/fikran)
[05:07:12] *** Joins: jonthesnow (~xizhendu@36.112.179.225)
[05:07:49] *** Quits: dre (~dre@2001:8003:c932:c301:48f3:b0e:431e:dad8) (Ping timeout: 240 seconds)
[05:08:17] *** Quits: miique (~miique@181.46.139.166) (Ping timeout: 240 seconds)
[05:08:48] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:09:19] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[05:09:38] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[05:10:37] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[05:13:47] *** Quits: zepolen (~zepolen@2a02:1388:2083:8b0f:1918:fb03:f42f:68b6) (Read error: Connection reset by peer)
[05:16:20] *** Joins: miique (~miique@181.46.139.166)
[05:17:12] *** Joins: zepolen (~zepolen@ppp-94-66-223-200.home.otenet.gr)
[05:18:54] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[05:22:08] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:7529:de4a:6c63:7d7)
[05:23:42] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:25:54] *** Quits: ivel (~user@lfbn-tou-1-1253-171.w90-76.abo.wanadoo.fr) (Remote host closed the connection)
[05:29:58] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.4)
[05:30:04] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 256 seconds)
[05:30:14] *** Seto_Kaiba is now known as Hunterkll
[05:30:22] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:33:06] *** Quits: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net) (Quit: The Lounge - https://thelounge.chat)
[05:33:08] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[05:34:29] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:f0c0:65e3:6cd3:735e) (Ping timeout: 256 seconds)
[05:35:47] *** Joins: marduk (~marduk@99-122-3-133.lightspeed.nsvltn.sbcglobal.net)
[05:36:45] *** Joins: Viewday116 (~Viewday@user/viewday)
[05:38:34] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[05:38:35] *** Viewday116 is now known as Viewday11
[05:42:04] *** Joins: rajkosto (~rajkosto@178.220.166.14)
[05:42:06] *** Quits: rajkosto (~rajkosto@178.220.166.14) (Client Quit)
[05:43:25] *** Quits: LimeOn (~user@user/limeon) (Quit: .)
[05:43:42] *** Quits: dg_dg (~dg_dg@gateway/vpn/pia/dgdg/x-00698222) (Ping timeout: 260 seconds)
[05:46:13] *** Joins: diverdude (~user@176-21-102-230-cable.dk.customer.tdc.net)
[05:47:38] *** Quits: ChinaWhiteCastle (~AbraCadav@162-236-239-168.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[05:48:27] <diverdude> lets say i have a list of arbitrary length [c1,c2,c3,c4] and i want to list all possible combinations of items in that list, what is a good way to do that? In this example of 4 items it would be c1,c2 , c1,c3 , c1,c4 , c2,c3 , c2,c4 , c3,c4 , c1,c4
[05:49:22] <grym> diverdude: itertools.combinations
[05:49:37] *** Joins: shailangsa (~shailangs@host109-159-108-207.range109-159.btcentralplus.com)
[05:51:16] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[05:51:16] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[05:54:37] *** Joins: fstd (~fstd@xdsl-84-44-230-164.nc.de)
[05:54:45] *** Quits: ngp (~ngp@199.180.249.183) (Quit: connection reset by purr)
[05:54:47] *** Joins: dre (~dre@2001:8004:44f0:c7c7:adf0:5cb6:eb4d:dd60)
[05:55:08] *** Joins: ngp (~ngp@199.180.249.183)
[05:57:54] *** Joins: rajkosto (~rajkosto@93-86-163-111.static.isp.telekom.rs)
[05:59:25] *** Quits: rajkosto (~rajkosto@93-86-163-111.static.isp.telekom.rs) (Client Quit)
[05:59:35] *** Joins: rajkosto (~rajkosto@93-86-163-111.static.isp.telekom.rs)
[06:01:06] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Quit: Going offline, see ya! (www.adiirc.com))
[06:01:21] *** Quits: denisse (~denisse@gateway/tor-sasl/denisse) (Ping timeout: 276 seconds)
[06:01:51] *** Joins: denisse (~denisse@gateway/tor-sasl/denisse)
[06:02:00] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Ping timeout: 276 seconds)
[06:02:23] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[06:02:24] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[06:03:21] *** Quits: rajkosto (~rajkosto@93-86-163-111.static.isp.telekom.rs) (Client Quit)
[06:03:34] *** Joins: rajkosto (~rajkosto@93-86-163-111.static.isp.telekom.rs)
[06:04:36] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Ping timeout: 276 seconds)
[06:04:52] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:04:57] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 268 seconds)
[06:05:22] *** Quits: dre (~dre@2001:8004:44f0:c7c7:adf0:5cb6:eb4d:dd60) (Quit: Leaving)
[06:05:25] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 240 seconds)
[06:05:25] *** brabrax_ is now known as brabrax
[06:05:29] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[06:06:04] *** Joins: clarkk1 (~clarkk@host86-165-12-159.range86-165.btcentralplus.com)
[06:06:10] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 268 seconds)
[06:06:20] *** lukedashjr is now known as luke-jr
[06:08:12] *** Quits: clarkk (~clarkk@host86-165-12-159.range86-165.btcentralplus.com) (Ping timeout: 240 seconds)
[06:08:23] *** Quits: rajkosto (~rajkosto@93-86-163-111.static.isp.telekom.rs) (Read error: Connection reset by peer)
[06:10:15] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[06:10:53] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[06:11:45] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[06:13:04] *** Joins: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke)
[06:15:21] *** Joins: parv (~quass@user/parv)
[06:16:39] *** Joins: kdc (~kdc@196.211.197.159)
[06:17:14] *** Joins: nomic2 (~nomic@185.198.243.243)
[06:19:17] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Ping timeout: 240 seconds)
[06:19:57] *** Quits: nomic (~nomic@185.198.243.243) (Ping timeout: 240 seconds)
[06:20:49] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[06:20:51] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 276 seconds)
[06:22:05] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:24:41] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[06:26:17] *** Joins: jfcaron (~jfcaron@192.252.229.166)
[06:28:58] *** Joins: Viewday112 (~Viewday@user/viewday)
[06:30:11] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[06:30:37] *** Joins: esv (~esv@74.124.178.154)
[06:30:42] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[06:30:43] *** Viewday112 is now known as Viewday11
[06:30:45] *** Joins: RiFo (~RiFo@user/rifo)
[06:31:41] *** Joins: cdown_ (~cdown@188.214.11.14)
[06:34:16] *** nomic2 is now known as nomic
[06:34:37] *** Quits: gr1m (~gr1m@193.138.218.223) (Ping timeout: 240 seconds)
[06:35:14] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 256 seconds)
[06:35:39] *** Joins: zensei (~zensei@user/zensei)
[06:36:32] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[06:37:30] *** Quits: cdown_ (~cdown@188.214.11.14) (Ping timeout: 256 seconds)
[06:37:52] *** Joins: adeliktas8 (~adeliktas@i59F52293.versanet.de)
[06:39:46] *** Quits: adeliktas (~adeliktas@i59F52042.versanet.de) (Ping timeout: 256 seconds)
[06:39:46] *** adeliktas8 is now known as adeliktas
[06:40:21] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 245 seconds)
[06:45:56] *** Joins: saunders (~nicholas@172.103.152.184)
[06:47:07] *** Quits: dez (uid92154@user/dez) (Quit: Connection closed for inactivity)
[06:49:46] *** Joins: emf (~emf@2620:10d:c091:480::1:9a8)
[06:51:46] *** Joins: brookesy66 (~will@14-201-84-74.static.tpgi.com.au)
[06:53:57] *** Quits: emf (~emf@2620:10d:c091:480::1:9a8) (Ping timeout: 240 seconds)
[06:56:44] *** Joins: Viewday113 (~Viewday@user/viewday)
[06:56:46] *** Quits: esv (~esv@74.124.178.154) (Ping timeout: 256 seconds)
[06:57:26] *** Quits: iflema (~ian@user/iflema) (Ping timeout: 245 seconds)
[06:58:09] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[06:58:10] *** Viewday113 is now known as Viewday11
[06:59:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[07:00:34] *** Quits: parv (~quass@user/parv) (Quit: parv)
[07:05:28] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[07:05:36] *** Joins: Viewday116 (~Viewday@user/viewday)
[07:07:32] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[07:07:33] *** Viewday116 is now known as Viewday11
[07:09:08] *** Quits: zensei (~zensei@user/zensei) (Quit: zensei)
[07:09:22] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[07:09:32] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:09:33] *** Quits: alex11 (~alex11@user/alex11) (Read error: Connection reset by peer)
[07:10:57] *** Quits: saunders (~nicholas@172.103.152.184) (Ping timeout: 240 seconds)
[07:11:47] *** Joins: grooverman_ (~grooverma@177.102.119.40)
[07:12:07] *** Joins: zensei (~zensei@user/zensei)
[07:12:33] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[07:12:53] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[07:14:20] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[07:14:21] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[07:14:57] *** Quits: grooverman (~grooverma@177.102.117.95) (Ping timeout: 240 seconds)
[07:15:59] *** Joins: fikran (~fikran@user/fikran)
[07:18:59] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[07:20:07] *** Joins: akaWolf (~akaWolf@akawolf.org)
[07:21:37] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 240 seconds)
[07:22:27] *** Quits: moog (~moog@107.126.53.64) (Remote host closed the connection)
[07:24:25] *** Joins: mpan (~mysql@user/mpan)
[07:25:29] <mpan> Hi. Any alternatives to Python’s gettext lib for loading localized resources? The documnetation of Python only speaks about gettext. Note: not asking for google for answers, I can do that myself: I am asking for things people actually used. Thanks in advance.
[07:29:39] <mefistofeles> I've only used gettext, but barely
[07:30:42] *** Joins: monchi (~joints@143.198.92.132)
[07:31:21] *** Joins: Viewday116 (~Viewday@user/viewday)
[07:31:51] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:6cbf:9881:9077:c9a4)
[07:32:48] <diverdude> hi, why can i not do this? for c,w in ((0, 1, 2), (4, 4, 4)):   i get: ValueError: too many values to unpack (expected 2)
[07:32:50] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[07:32:50] *** Viewday116 is now known as Viewday11
[07:33:53] <Repiphany> diverdude: You're trying to unpack each 3-tuple into c,w
[07:33:56] *** Joins: buzzard (~quassel@23.108.92.178)
[07:34:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[07:35:12] <Repiphany> If you were expecting c, w = (0, 4) ... (1, 4) ... (2, 4), you can do `for c, w in zip(*((0, 1, 2), (4, 4, 4))): ...`
[07:35:51] *** Quits: onichomp (~onichomp@2806:264:4404:8210:2905:f8c0:f20c:69aa) (Read error: Connection reset by peer)
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[07:36:29] *** Joins: onichomp (~onichomp@2806:264:4404:8210:2905:f8c0:f20c:69aa)
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:09] <diverdude> Repiphany: right. thx
[07:39:37] *** Quits: akaWolf (~akaWolf@akawolf.org) (Ping timeout: 240 seconds)
[07:39:38] *** Joins: esv (~esv@74.124.178.154)
[07:40:45] <diverdude> Repiphany: if i have ((0, 1, 2), (4, 4, 4)), how do i then transform it into ((0,4),(1,4),(2,4))?
[07:41:10] <Repiphany> tuple(zip(*((0, 1, 2), (4, 4, 4))))
[07:44:05] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Read error: Connection reset by peer)
[07:44:37] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 240 seconds)
[07:45:05] *** Joins: audiobirb (~audio@user/audio)
[07:46:12] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[07:47:37] *** Joins: akaWolf (~akaWolf@akawolf.org)
[07:51:03] *** Joins: jinsun__ (~quassel@user/jinsun)
[07:51:05] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 250 seconds)
[07:51:17] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 240 seconds)
[07:51:20] *** Quits: jinsun__ (~quassel@user/jinsun) (Client Quit)
[07:52:57] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[07:58:24] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[08:02:10] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-70e2-8228-1542-fc2b.res6.spectrum.com) (Read error: Connection reset by peer)
[08:02:33] *** Quits: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[08:03:58] *** Joins: Viewday112 (~Viewday@user/viewday)
[08:05:38] *** Quits: nomic (~nomic@185.198.243.243) (Quit: Leaving)
[08:05:54] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[08:05:55] *** Viewday112 is now known as Viewday11
[08:05:56] *** Joins: nomic (~nomic@185.198.243.243)
[08:07:28] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[08:10:04] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com)
[08:13:32] *** Quits: sreve (~quassel@p4ff44d92.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[08:14:10] *** Joins: sreve (~quassel@p4ff44b9b.dip0.t-ipconnect.de)
[08:15:16] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[08:17:50] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[08:21:32] *** Joins: Viewday117 (~Viewday@user/viewday)
[08:23:05] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[08:23:05] *** Viewday117 is now known as Viewday11
[08:23:30] *** Joins: node1 (~node1@user/node1)
[08:23:59] *** Quits: esv (~esv@74.124.178.154) (Remote host closed the connection)
[08:25:50] *** Joins: delvian (~delvian@41.13.224.35)
[08:26:37] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:27:30] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[08:31:26] *** Quits: denisse (~denisse@gateway/tor-sasl/denisse) (Remote host closed the connection)
[08:32:01] *** Joins: denisse (~denisse@gateway/tor-sasl/denisse)
[08:32:07] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[08:32:40] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[08:33:01] *** Joins: spithash (~spithash@user/spithash)
[08:33:05] *** Joins: Viewday112 (~Viewday@user/viewday)
[08:33:28] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[08:33:37] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 240 seconds)
[08:34:00] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[08:34:15] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[08:34:48] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[08:34:50] *** Viewday112 is now known as Viewday11
[08:35:02] *** Leonarbro_ is now known as Leonarbro
[08:37:10] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:37:30] *** Joins: Leonarbro_ (~Leonet@user/leonarbro)
[08:37:57] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[08:38:24] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[08:39:24] *** Quits: Vision (~Vision@023-084-134-149.res.spectrum.com) (Read error: Connection reset by peer)
[08:39:48] *** Joins: Vision (~Vision@023-084-134-149.res.spectrum.com)
[08:41:02] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Ping timeout: 256 seconds)
[08:42:44] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[08:44:45] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[08:50:47] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[08:51:10] *** Parts: llanhmod (~personnel@user/domhnall/x-2887755) ()
[08:51:46] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-d834-b7f2-fd3e-c3e9.res6.spectrum.com)
[08:53:19] *** Joins: buzzard_ (~quassel@185.203.219.56)
[08:54:03] *** Quits: buzzard (~quassel@23.108.92.178) (Killed (NickServ (GHOST command used by buzzard_!~quassel@185.203.219.56)))
[08:54:08] *** buzzard_ is now known as buzzard
[08:55:12] *** Quits: davor_ (~davor@user/davor) (Ping timeout: 256 seconds)
[08:55:32] *** Quits: x_kuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[08:56:27] *** Joins: davor (~davor@user/davor)
[09:00:12] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[09:00:31] *** Joins: djapo (~archangel@user/djapo)
[09:00:48] *** Joins: ano (~ano@user/ano)
[09:05:46] *** Joins: Viewday114 (~Viewday@user/viewday)
[09:07:40] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[09:07:41] *** Viewday114 is now known as Viewday11
[09:09:45] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[09:11:42] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[09:11:50] *** Joins: rvalue (~rvalue@user/rvalue)
[09:11:52] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[09:15:13] *** Quits: henbruas (~henbruas@ti0003a400-4203.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[09:15:31] *** Joins: henbruas (~henbruas@ti0003a400-4203.bb.online.no)
[09:16:11] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[09:16:43] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 268 seconds)
[09:16:47] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[09:16:47] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Remote host closed the connection)
[09:17:02] *** Joins: de-facto (~de-facto@user/de-facto)
[09:17:02] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[09:17:31] *** lukedashjr is now known as luke-jr
[09:20:14] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:21:17] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 240 seconds)
[09:22:57] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[09:23:07] *** Joins: Wulf (~Wulf@user/wulf)
[09:23:13] *** Quits: pankid (~quassel@pankid.club) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[09:23:14] *** Joins: analoq (~yashi@user/dies)
[09:23:32] *** Joins: pankid (~quassel@pankid.club)
[09:23:37] *** Joins: emf (~emf@2620:10d:c091:480::1:3408)
[09:23:39] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:23:52] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[09:24:55] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[09:25:20] *** Joins: fikran (~fikran@user/fikran)
[09:25:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:25:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:27:31] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:27:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:28:50] *** Joins: Viewday118 (~Viewday@user/viewday)
[09:28:52] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:29:31] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:29:37] *** Quits: emf (~emf@2620:10d:c091:480::1:3408) (Ping timeout: 240 seconds)
[09:29:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:30:07] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:30:54] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[09:30:55] *** Viewday118 is now known as Viewday11
[09:31:29] *** Quits: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[09:31:37] *** Quits: ngp (~ngp@199.180.249.183) (Ping timeout: 240 seconds)
[09:31:40] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:31:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:32:37] *** Quits: waxfire (~waxfire@65.119.2.240) (Ping timeout: 240 seconds)
[09:32:37] *** Joins: waxfire2 (~waxfire@65.119.2.240)
[09:32:37] *** waxfire2 is now known as waxfire
[09:33:45] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:33:59] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[09:34:03] *** Joins: pmb (~pmb@89-64-79-51.dynamic.chello.pl)
[09:34:03] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:34:33] *** Joins: frost (~frost@user/frost)
[09:35:05] *** Joins: upsala (~zcb@185.209.196.169)
[09:35:49] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:36:12] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:36:27] *** Quits: buzzard (~quassel@185.203.219.56) (Ping timeout: 268 seconds)
[09:37:01] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[09:37:30] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[09:37:49] *** Joins: Throgkt (~Throgkt@user/throgkt)
[09:38:02] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:38:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:39:41] *** Quits: stultusv (~stultusv@user/stultusv) (Remote host closed the connection)
[09:40:12] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:40:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:41:24] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[09:42:08] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:42:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:43:15] *** Quits: node1 (~node1@user/node1) (Ping timeout: 256 seconds)
[09:43:19] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[09:43:50] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[09:44:09] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:44:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:46:06] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:46:24] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:47:08] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[09:47:28] *** Joins: mickey8 (~user@user/mickey)
[09:47:53] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[09:48:12] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:48:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:50:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:50:37] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:51:27] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[09:52:28] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:52:36] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:54:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:54:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:56:16] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[09:56:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:56:36] *** Joins: ravan (~ravan@user/ravan)
[09:56:45] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[09:57:36] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:616b:4311:2836:3528)
[09:57:37] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[09:57:58] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi)
[09:58:38] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[09:58:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:00:37] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[10:00:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:00:54] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[10:02:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[10:02:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:03:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[10:04:11] *** Joins: Viewday119 (~Viewday@user/viewday)
[10:04:42] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[10:05:04] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[10:06:02] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[10:06:03] *** Viewday119 is now known as Viewday11
[10:07:37] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[10:12:14] *** Quits: shailangsa (~shailangs@host109-159-108-207.range109-159.btcentralplus.com) (Ping timeout: 268 seconds)
[10:12:20] *** Quits: zaquest (~notzaques@5.130.79.72) (Remote host closed the connection)
[10:12:57] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[10:13:00] *** Quits: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com) (Ping timeout: 240 seconds)
[10:13:15] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:13:34] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:6cbf:9881:9077:c9a4) (Read error: Connection reset by peer)
[10:15:50] *** Joins: zaquest (~notzaques@5.130.79.72)
[10:20:06] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi) (Quit: Leaving)
[10:20:43] <rindolf> Hi all! what should i change in "python3 setup.py install --user --force" to get it to always overwrite the code files?
[10:21:14] *** Quits: djapo (~archangel@user/djapo) (Remote host closed the connection)
[10:23:03] *** Joins: savolla (~savolla@84.44.28.28)
[10:24:02] *** Joins: stultusv (~stultusv@user/stultusv)
[10:24:33] *** Joins: jmd (~user@195.243.197.82)
[10:24:58] <Swayze> have you tried 'pip install .'
[10:25:04] <Swayze> from the setup.py directory
[10:25:16] *** Joins: djapo (~archangel@user/djapo)
[10:25:26] <savolla> hey guys we wrote a GUI application and now trying to freeze it with Pyinstaller package. This module has a nice feature which adds a nice splash screen before program launch. But the splash screen persists even when the main program initialized. Any suggestions? Or anyone has experience with Pyinstaller's splash screen feautre here? Thanks!
[10:25:45] <Swayze> https://stackoverflow.com/questions/15724093/difference-between-python-setup-py-install-and-pip-install/15731459#15731459 @ rindolf
[10:26:29] <Swayze> savolla: pyi_splash.close()
[10:26:36] <Swayze> https://stackoverflow.com/questions/68863050/pyinstaller-loading-splash-screen
[10:26:47] *** Quits: pmb (~pmb@89-64-79-51.dynamic.chello.pl) (Quit: pmb)
[10:27:06] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[10:27:07] *** Joins: 040AACZQJ (~pmb@89-64-79-51.dynamic.chello.pl)
[10:27:42] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[10:28:43] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[10:29:34] <savolla> Swayze I can't import pyi_splash
[10:29:49] <savolla> I also saw this post
[10:31:27] *** Joins: Viewday116 (~Viewday@user/viewday)
[10:32:33] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:33:14] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[10:33:15] *** Viewday116 is now known as Viewday11
[10:33:55] *** Joins: gr1m (~gr1m@45.83.220.192)
[10:34:08] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[10:34:26] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Quit: very_sneaky)
[10:34:50] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[10:36:04] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[10:36:45] *** Joins: djhankb (~djhankb@208.113.164.68)
[10:38:23] *** Joins: tobybl (~tobybl@213.31.132.151)
[10:38:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[10:39:03] <rindolf> Swayze: thanks! i shouldn't have used pip's "--upgrade" flag
[10:39:12] <Swayze> ;-)
[10:39:15] <Swayze> glad you worked it out
[10:39:28] <rindolf> Swayze++
[10:40:28] *** Joins: manti7 (~manti7@176.10.104.94)
[10:42:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[10:46:37] *** Quits: ExpiredKebab (~sgreadly@2407:7000:a239:503:a404:97b6:b0c7:c2c5) (Ping timeout: 240 seconds)
[10:46:38] *** Joins: jinsun (~quassel@user/jinsun)
[10:47:30] *** Joins: lsrtl (~lsrtl@user/lsrtl)
[10:51:58] *** Quits: seednode (~seednode@user/seednode) (Quit: Nihil supernum.)
[10:52:44] *** Joins: seednode (~seednode@user/seednode)
[10:53:59] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[10:54:47] *** Quits: rvalue (~rvalue@user/rvalue) (Ping timeout: 268 seconds)
[10:56:41] *** Joins: NeoCore (~neocore@217.138.207.205)
[10:58:44] *** Joins: diamondbond (~diamondbo@175.157.252.96)
[11:00:07] *** Joins: luigibu (~luigi@80.30.200.2)
[11:00:44] *** Quits: nomic (~nomic@185.198.243.243) (Quit: Leaving)
[11:01:07] *** Joins: Viewday118 (~Viewday@user/viewday)
[11:02:05] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[11:02:29] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[11:03:16] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[11:03:17] *** Viewday118 is now known as Viewday11
[11:09:22] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi)
[11:10:17] *** Quits: flyback (~flyback@2601:540:8201:1e60::997d) (Ping timeout: 240 seconds)
[11:10:54] *** Joins: nomic (~nomic@51.52.78.152)
[11:11:03] *** Joins: ircuser-1 (~Johnny@c-71-193-246-4.hsd1.or.comcast.net)
[11:11:25] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 268 seconds)
[11:12:42] *** Quits: sagax (~sagax_nb@user/sagax) (Ping timeout: 260 seconds)
[11:14:14] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:14:21] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[11:14:37] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:14:40] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:7529:de4a:6c63:7d7) (Remote host closed the connection)
[11:14:44] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[11:16:13] *** Joins: greenbigfrog (~greenbigf@ip5f5ad852.dynamic.kabel-deutschland.de)
[11:16:26] *** Joins: tWqaq (~tWqaq@240e:389:5dd3:9000:7529:de4a:6c63:7d7)
[11:17:26] *** Quits: jmd (~user@195.243.197.82) (Remote host closed the connection)
[11:17:27] *** Joins: node1 (~node1@user/node1)
[11:17:47] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[11:17:57] *** Quits: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net) ()
[11:18:34] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[11:19:14] *** Joins: rvalue (~rvalue@user/rvalue)
[11:23:20] *** Joins: flyback (~flyback@2601:540:8201:1e60::997d)
[11:24:01] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[11:25:52] *** Joins: mrwick (~mrwick@user/mrwick)
[11:26:48] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[11:28:27] *** Joins: rendar (~rendar@user/rendar)
[11:28:56] *** Joins: Viewday113 (~Viewday@user/viewday)
[11:30:32] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[11:30:33] *** Viewday113 is now known as Viewday11
[11:32:19] *** Joins: shailangsa (~shailangs@host109-159-108-207.range109-159.btcentralplus.com)
[11:32:44] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[11:33:11] *** Joins: grooverman (~grooverma@177.102.117.95)
[11:33:45] *** Quits: node1 (~node1@user/node1) (Ping timeout: 256 seconds)
[11:34:39] *** Joins: fikran (~fikran@user/fikran)
[11:34:51] *** Quits: grooverman_ (~grooverma@177.102.119.40) (Ping timeout: 268 seconds)
[11:35:41] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[11:36:17] *** Quits: flyback (~flyback@2601:540:8201:1e60::997d) (Ping timeout: 240 seconds)
[11:37:37] *** Quits: jonthesnow (~xizhendu@36.112.179.225) (Ping timeout: 240 seconds)
[11:38:51] *** Quits: vd33 (~vd33@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Ping timeout: 256 seconds)
[11:39:23] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[11:39:23] *** Quits: onichomp (~onichomp@2806:264:4404:8210:2905:f8c0:f20c:69aa) (Read error: Connection reset by peer)
[11:40:03] *** Joins: onichomp (~onichomp@2806:264:4404:8210:2905:f8c0:f20c:69aa)
[11:41:17] *** Joins: Shanx (~Shanx@162.129.118.78.rev.sfr.net)
[11:43:11] <rakoon> Can someone please help me on how to type hint this: https://paste.ee/p/M50ge?
[11:44:44] *** Joins: palasso (~palasso@user/palasso)
[11:47:16] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[11:48:03] *** Quits: AlanMD (~AlanMD@193.105.140.131) (Remote host closed the connection)
[11:48:18] *** Joins: AlanMD (~AlanMD@193.105.140.131)
[11:49:06] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189)
[11:49:20] *** Joins: flyback (~flyback@2601:540:8201:1e60::997d)
[11:50:35] *** Joins: sincorchetes_ (~sincorche@29.red-83-33-10.dynamicip.rima-tde.net)
[11:50:51] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[11:51:12] <jinsun> the decorator can be Callable[P, Awaitable[Response]] -> Callable[P, Awaitable[BaseModel]] I think
[11:51:21] <jinsun> where P is a ParamSpec
[11:52:06] <jinsun> and inner function in the decorator can be inner(*args: object, **kwargs: object)
[11:53:08] *** Quits: sincorchetes (~sincorche@72.red-79-159-143.dynamicip.rima-tde.net) (Ping timeout: 256 seconds)
[11:54:23] *** Joins: kosh (~kosh@user/kosh)
[11:54:34] <jinsun> and obviously return type of load_as would be Callable with the same type as the decorator
[11:55:12] *** Quits: ttree (~ttree0@c-73-169-193-237.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[11:55:52] <jinsun> and if you want to preserve the type that you pass into load_as instead of returning BaseModel always, you can use Type[T] instead of Type[BaseModel]
[11:56:08] <jinsun> where T is TypeVar("T", bound=BaseModel)
[11:59:41] *** Joins: vladoski (~foo@2001:b07:add:d406:75a4:815:4160:aae9)
[11:59:50] *** Quits: skipper (~whatsupbo@user/scobydoo) (Quit: brb)
[11:59:56] *** Quits: _ELFrederich (~ELFrederi@siemens-industry-software-inc-216-196-155-202.static.fuse.net) (Ping timeout: 256 seconds)
[11:59:59] *** Quits: gaken (~gaken@user/galen) (Remote host closed the connection)
[12:00:15] <rakoon> jinsun: thanks ill give it a try
[12:00:19] *** Quits: grawity (grawity@star.nullroute.lt) (Remote host closed the connection)
[12:00:30] *** Joins: x03nnn (~x03nnn@gateway/vpn/pia/x03nnn)
[12:00:47] *** Joins: grawity (grawity@star.nullroute.lt)
[12:01:51] *** Joins: Viewday113 (~Viewday@user/viewday)
[12:02:19] *** Quits: vladoski (~foo@2001:b07:add:d406:75a4:815:4160:aae9) (Client Quit)
[12:03:20] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[12:04:36] *** Joins: Viewday11 (~Viewday@user/viewday)
[12:05:53] *** Quits: betuxy (~betuxy@p579ad46c.dip0.t-ipconnect.de) (Quit: Connection closed)
[12:05:57] *** Joins: pipapipapibo (~w@2601:601:cf7f:e380::877)
[12:06:00] *** Quits: Shanx (~Shanx@162.129.118.78.rev.sfr.net) (Quit: Client closed)
[12:06:33] *** Quits: portalrat (~portalrat@user/portalrat) (Remote host closed the connection)
[12:06:33] *** Quits: savolla (~savolla@84.44.28.28) (Quit: Client closed)
[12:06:45] *** Quits: Viewday113 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[12:06:55] *** Joins: portalrat (~portalrat@user/portalrat)
[12:07:35] *** Joins: gaken (~gaken@user/galen)
[12:07:54] *** Joins: tobybl (~tobybl@213.31.132.151)
[12:08:14] *** Quits: diamondbond (~diamondbo@175.157.252.96) (Ping timeout: 260 seconds)
[12:08:19] *** Joins: vladoski (~foo@2001:b07:add:d406:75a4:815:4160:aae9)
[12:09:44] *** Parts: x03nnn (~x03nnn@gateway/vpn/pia/x03nnn) (Leaving)
[12:10:59] *** Joins: VaniaPy (~VaniaPy@46.12.245.39.dsl.dyn.forthnet.gr)
[12:12:40] *** Quits: vladoski (~foo@2001:b07:add:d406:75a4:815:4160:aae9) (Client Quit)
[12:12:59] *** Quits: apteryx (~maxim@dsl-10-141-47.b2b2c.ca) (Ping timeout: 256 seconds)
[12:12:59] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:13:10] *** Joins: vladoski (~foo@2001:b07:add:d406:75a4:815:4160:aae9)
[12:15:51] *** Joins: ExpiredKebab (~sgreadly@2407:7000:a239:503:24f7:2f2c:ab35:8a76)
[12:16:49] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:18:06] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi) (Read error: Connection reset by peer)
[12:24:19] *** Joins: Klinda (~superleag@user/klinda)
[12:25:00] *** Quits: Themis3000 (~Thunderbi@user/themis3000) (Quit: Themis3000)
[12:25:49] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[12:26:07] *** Joins: apteryx (~maxim@dsl-151-170.b2b2c.ca)
[12:30:04] <rakoon> jinsun: worked thank you so much!
[12:30:24] <jinsun> ah great
[12:30:37] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Ping timeout: 240 seconds)
[12:31:04] <Swayze> is this typescript voodoo that youdooo
[12:31:07] <Swayze> oh my
[12:31:34] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:33:01] *** Joins: Viewday110 (~Viewday@user/viewday)
[12:34:36] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[12:34:37] *** Viewday110 is now known as Viewday11
[12:36:43] *** Joins: cosimone (~user@93-47-230-208.ip115.fastwebnet.it)
[12:36:44] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:38:43] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[12:42:37] *** Quits: brookesy66 (~will@14-201-84-74.static.tpgi.com.au) (Ping timeout: 240 seconds)
[12:49:28] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi)
[12:50:26] *** Joins: hsv (~unknown@user/hsv)
[12:51:39] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:52:58] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Read error: Connection reset by peer)
[12:53:28] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:54:20] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[12:54:54] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 256 seconds)
[12:55:01] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:e1ce:d7b:6a8f:f189) (Ping timeout: 268 seconds)
[12:55:36] *** Joins: spetrosi (~spetrosi@ip-86-49-252-51.net.upcbroadband.cz)
[12:56:26] *** Quits: CombatVet (~c4@user/combatvet) (Quit: suck it)
[12:56:41] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[12:59:12] *** Joins: SteveR (~SteveR@103.215.168.1)
[13:00:38] <VaniaPy> Hello, i don't understand why the second condition is not executing on line  24 https://bpa.st/PYQQ. The date is in the holidays list
[13:01:01] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[13:01:16] *** Joins: CombatVet (~c4@user/combatvet)
[13:01:20] *** Quits: baloona (~baloona@mail.baloona.de) (Quit: WeeChat 2.3)
[13:02:14] <grawity> because if it were true, then the 1st condition on line 21 would be true as well, so that's the one that would get executed
[13:03:15] *** Quits: CombatVet (~c4@user/combatvet) (Client Quit)
[13:03:49] <grawity> more-specific conditions should go first
[13:04:17] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 240 seconds)
[13:05:39] *** Joins: CombatVet (~c4@user/combatvet)
[13:07:52] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[13:08:19] *** Joins: Payam (~Payam@138.106.57.132)
[13:08:24] *** Joins: node1 (~node1@user/node1)
[13:09:26] *** Joins: shad (~shad@user/shad)
[13:10:20] <Payam> Hi, I have problem with nested for loops. Are these two equivalent? https://bpa.st/CG7A
[13:11:28] <supakeen> Seem to be.
[13:13:53] <VaniaPy> grawity ok! thanks
[13:14:00] *** Quits: jfcaron (~jfcaron@192.252.229.166) (Quit: jfcaron)
[13:14:56] <grawity> I always forget the order of multiple 'for's in a []
[13:15:12] *** Quits: rubemlrm (~rubemlrm@user/rubemlrm) (Quit: The Lounge - https://thelounge.chat)
[13:15:13] <Payam> https://bpa.st/AY6A how about this one?
[13:15:27] <supakeen> grawity: It's the same as written when not in a comprehension :)
[13:16:06] <grawity> ah, so backwards from what I expected
[13:16:10] <supakeen> Payam: Now it's getting silly; you can write that without all the stuff you have in there.
[13:16:18] *** Joins: rubemlrm (~rubemlrm@user/rubemlrm)
[13:17:17] <Payam> supakeen I just want to learn
[13:17:38] <supakeen> Anyways yes, that's how you'd write that.
[13:18:56] <supakeen> But you can use `ex = next(project in projects if project.name == name).branches[:]`
[13:19:30] *** Joins: dre (~dre@2001:8003:c932:c301:4bc5:1b72:1f27:b67f)
[13:19:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[13:20:42] *** Joins: LimeOn (~user@user/limeon)
[13:22:30] *** Quits: diogenese (~diogenese@diogenese.velotech.net) (Quit: Has anybody seen the bridge?)
[13:23:00] *** Joins: Naan (~Naan@user/naan)
[13:23:24] *** Quits: vladoski (~foo@2001:b07:add:d406:75a4:815:4160:aae9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:23:42] *** Joins: plastico (~plastico@neomutt/plastico)
[13:25:36] *** Joins: alex11 (~alex11@user/alex11)
[13:25:52] *** Quits: stultusv (~stultusv@user/stultusv) (Remote host closed the connection)
[13:29:15] *** Joins: Viewday110 (~Viewday@user/viewday)
[13:30:43] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[13:30:44] *** Viewday110 is now known as Viewday11
[13:30:53] *** Joins: xa0s (~xa0s@mab.sdf.org)
[13:31:09] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[13:31:17] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[13:32:28] *** Joins: iflema (~ian@user/iflema)
[13:33:35] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[13:37:49] *** Joins: baloona (~baloona@mail.baloona.de)
[13:39:34] *** Joins: Viewday117 (~Viewday@user/viewday)
[13:40:06] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[13:40:17] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[13:40:17] *** Viewday117 is now known as Viewday11
[13:40:24] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:40:32] *** Joins: Enitin (~Enitin@82.102.22.86)
[13:41:23] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[13:41:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 240 seconds)
[13:43:24] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[13:43:33] *** Joins: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[13:43:34] <JimmyRustles> hi
[13:43:40] <JimmyRustles> can someone explain to me how this line works please?
[13:43:41] <JimmyRustles> censored_names = [name for name in censored_names if len(name) > 1]
[13:43:59] *** Joins: fikran (~fikran@user/fikran)
[13:44:02] <JimmyRustles> i don't know what "name for name in..." does
[13:44:22] <rindolf> JimmyRustles: list comprehension
[13:44:43] <JimmyRustles> perfect, thanks rindolf
[13:44:56] <rindolf> JimmyRustles: you're welcome
[13:47:34] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi) (Read error: Connection reset by peer)
[13:49:38] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:51:00] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[13:51:01] *** Lord_of_Life_ is now known as Lord_of_Life
[13:51:07] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[13:51:15] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[13:52:18] *** Quits: baloona (~baloona@mail.baloona.de) (Ping timeout: 260 seconds)
[13:54:57] *** Joins: baloona (~baloona@mail.baloona.de)
[13:55:32] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[13:56:05] *** Joins: nmat[m] (~nmatsemat@2001:470:69fc:105::1:5553)
[13:57:37] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[13:58:03] *** Quits: newdimension (~newdimnes@user/newdimension) (Quit: Bye)
[13:58:23] *** Parts: nmat[m] (~nmatsemat@2001:470:69fc:105::1:5553) ()
[13:58:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[13:59:24] *** Joins: newdimension (~newdimnes@user/newdimension)
[13:59:28] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi)
[13:59:49] *** Joins: nmat[m] (~nmatsemat@2001:470:69fc:105::1:5553)
[14:00:10] *** Joins: vladoski (~foo@2001:b07:add:d406:75a4:815:4160:aae9)
[14:00:23] *** Joins: driib2 (~driib@185.65.135.239)
[14:01:26] *** Joins: Viewday117 (~Viewday@user/viewday)
[14:03:28] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[14:03:29] *** Viewday117 is now known as Viewday11
[14:03:30] *** Quits: tofran (~tofran@37.189.158.134) (Ping timeout: 260 seconds)
[14:03:31] *** Joins: DK3 (~DK3@rs000042.fastrootserver.de)
[14:03:51] *** Joins: ExeciN (~ExeciN@user/nicexe)
[14:06:42] *** Quits: Throgkt (~Throgkt@user/throgkt) (Quit:  )
[14:09:11] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:09:13] <wyre> hi guys, I'd like to wrap the subprocess.run to run always my commands with the very same arguments, I've tried this https://bpa.st/BZQQ
[14:09:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:09:32] <wyre> but then I'm not able to access to returncode or stdout attributes
[14:10:14] <wyre> so ... do you think could I do this easily? or how could I do it?
[14:10:52] *** Quits: mat001 (~mat001@72.28.108.216) (Ping timeout: 268 seconds)
[14:11:18] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:11:39] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:12:15] *** Quits: node1 (~node1@user/node1) (Quit: Client closed)
[14:12:38] *** Quits: vladoski (~foo@2001:b07:add:d406:75a4:815:4160:aae9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:12:59] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[14:13:01] *** Joins: vladoski (~foo@2001:b07:add:d406:75a4:815:4160:aae9)
[14:13:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:13:41] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 256 seconds)
[14:13:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[14:15:34] *** Joins: lethu (~lethu@user/lethu)
[14:15:41] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:15:42] <nedbat> wyre: you just have to add "return" to line 2
[14:15:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:16:50] <wyre> sure, nedbat I've just noticed it, but thank you again 😊
[14:17:41] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:17:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:19:45] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:20:07] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:21:56] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:22:18] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:22:23] *** Joins: nicko (~iClass@222.211.28.110)
[14:22:24] *** Quits: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[14:22:51] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[14:24:05] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:24:25] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:25:01] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[14:26:18] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:26:34] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:28:24] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:28:43] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:30:32] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:30:40] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[14:30:46] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:32:35] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:32:35] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:32:50] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[14:32:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:33:18] *** Quits: m1dnight (~christoph@christophe.dev) (Quit: WeeChat 3.1)
[14:33:43] *** Joins: cdown (~cdown@188.214.11.14)
[14:34:37] *** Joins: m1dnight (~christoph@christophe.dev)
[14:34:44] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:34:51] *** Quits: newdimension (~newdimnes@user/newdimension) (Quit: Bye)
[14:35:05] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:36:54] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:37:09] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:37:57] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 240 seconds)
[14:38:19] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[14:38:32] *** Joins: zer0bitz (~zer0bitz@2001:2003:f444:a000:e954:6a22:3202:5b23)
[14:38:55] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:38:57] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[14:39:04] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[14:39:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:39:45] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[14:40:04] *** Joins: MajorBiscuit (~MajorBisc@c-001-001-037.client.tudelft.eduvpn.nl)
[14:40:21] *** Joins: rajkosto (~rajkosto@93-86-13-189.dynamic.isp.telekom.rs)
[14:41:05] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:41:12] *** Joins: newdimension (~newdimnes@user/newdimension)
[14:41:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:41:37] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 240 seconds)
[14:43:17] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:43:39] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[14:44:33] *** Quits: newdimension (~newdimnes@user/newdimension) (Client Quit)
[14:45:28] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:45:43] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:45:54] *** Joins: KvL (~KvL@2001:8003:8c8b:e00:80f9:8264:4a57:3ffa)
[14:45:54] *** Joins: newdimension (~newdimnes@user/newdimension)
[14:46:27] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 250 seconds)
[14:47:29] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:47:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:48:32] *** Quits: metus (~metus@186.67.158.250) (Ping timeout: 240 seconds)
[14:48:57] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[14:49:39] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:49:53] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:50:23] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[14:51:15] *** Joins: tmm88 (~tmm88@user/tmm88)
[14:51:45] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:51:54] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:51:58] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:53:06] *** Quits: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[14:53:46] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:54:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:55:26] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[14:55:56] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:56:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:56:19] *** Joins: Enitin (~Enitin@82.102.22.84)
[14:56:28] *** Joins: ExeciN (~ExeciN@user/nicexe)
[14:58:08] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[14:58:16] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[14:58:54] *** Quits: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Ping timeout: 276 seconds)
[14:59:08] *** Quits: HurricaneHarry (~quassel@2a02-a455-9d06-1-ddaa-6a2f-d88e-750c.fixed6.kpn.net) (Remote host closed the connection)
[14:59:53] *** Joins: artie (~artie@pool-173-59-250-143.bltmmd.fios.verizon.net)
[15:00:04] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:00:23] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:00:24] *** Joins: HurricaneHarry (~quassel@2a02-a455-9d06-1-df9-618-6d9-5d87.fixed6.kpn.net)
[15:01:09] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[15:02:10] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:02:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:04:23] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:04:33] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:05:18] *** Joins: Viewday118 (~Viewday@user/viewday)
[15:06:21] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:06:40] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:06:55] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[15:06:55] *** Viewday118 is now known as Viewday11
[15:07:40] *** Quits: newdimension (~newdimnes@user/newdimension) (Quit: Bye)
[15:08:21] *** Quits: montpol (montpol@fine.mouses.xyz) (Remote host closed the connection)
[15:08:29] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:08:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:09:10] *** Joins: montpol (montpol@fine.mouses.xyz)
[15:09:46] *** Quits: dreamer (~dreamer@user/dreamer) (Ping timeout: 260 seconds)
[15:10:31] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:10:32] *** Joins: dreamer (~dreamer@user/dreamer)
[15:10:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:10:56] *** Quits: KvL (~KvL@2001:8003:8c8b:e00:80f9:8264:4a57:3ffa) (Quit: KvL)
[15:11:00] *** Joins: newdimension (~newdimnes@user/newdimension)
[15:11:38] *** Joins: KvL (~KvL@2001:8003:8c8b:e00:80f9:8264:4a57:3ffa)
[15:11:56] *** Quits: KvL (~KvL@2001:8003:8c8b:e00:80f9:8264:4a57:3ffa) (Client Quit)
[15:12:07] *** Joins: nomic2 (~nomic@185.217.117.126)
[15:12:18] *** Leonarbro_ is now known as Leonarbro
[15:12:34] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:12:56] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:14:17] *** Quits: nomic (~nomic@51.52.78.152) (Ping timeout: 240 seconds)
[15:14:46] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:14:56] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:15:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:16:01] *** Joins: bob_x1 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[15:16:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:17:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:17:19] <newdimension> Is there any recommended email parsing python package? Python seems to have an email module
[15:17:55] *** Joins: KvL (~KvL@2001:8003:8c8b:e00:80f9:8264:4a57:3ffa)
[15:17:56] *** Quits: KvL (~KvL@2001:8003:8c8b:e00:80f9:8264:4a57:3ffa) (Client Quit)
[15:18:51] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[15:18:53] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:19:12] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:20:53] *** Joins: KvL (~KvL@2001:8003:8c8b:e00:80f9:8264:4a57:3ffa)
[15:20:53] *** Quits: KvL (~KvL@2001:8003:8c8b:e00:80f9:8264:4a57:3ffa) (Client Quit)
[15:21:01] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:21:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:22:29] *** Joins: k4rt0ff31ch33t4h (~k4rt0ff3l@92-249-188-216.pool.digikabel.hu)
[15:23:11] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:23:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:23:37] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[15:24:30] *** Joins: Enitin (~Enitin@82.102.22.85)
[15:25:12] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:25:16] *** Quits: vladoski (~foo@2001:b07:add:d406:75a4:815:4160:aae9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:25:31] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:27:19] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:27:27] *** Joins: legola (~legola@46.235.101.65)
[15:27:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:28:39] *** Joins: Viewday118 (~Viewday@user/viewday)
[15:29:28] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:29:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[15:29:52] <Wulf> newdimension: I haven't parsed email in python yet. But I assume it will do the job.
[15:30:09] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[15:30:10] *** Viewday118 is now known as Viewday11
[15:31:08] *** Quits: delvian (~delvian@41.13.224.35) (Quit: Leaving)
[15:31:36] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:31:52] *** Quits: lethu (~lethu@user/lethu) (Remote host closed the connection)
[15:32:04] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:32:50] *** Quits: dre (~dre@2001:8003:c932:c301:4bc5:1b72:1f27:b67f) (Quit: Leaving)
[15:32:52] *** Joins: LDerJim (~jim@user/LDerJim)
[15:33:52] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:34:13] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:34:14] *** Joins: lethu (~lethu@user/lethu)
[15:36:01] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.4)
[15:36:24] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:36:26] *** Joins: delvian (~delvian@41.13.224.35)
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:38:10] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:38:36] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:38:44] *** Quits: delvian (~delvian@41.13.224.35) (Client Quit)
[15:38:47] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 252 seconds)
[15:39:21] *** Joins: KvL (~KvL@2001:8003:8c8b:e00:80f9:8264:4a57:3ffa)
[15:40:31] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:40:40] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[15:40:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:41:14] *** Joins: lethu (~lethu@user/lethu)
[15:42:30] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:42:43] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:43:02] *** Joins: georgios (~georgios@user/georgios)
[15:43:11] <newdimension> Wulf: Giving it a go now, thanks!
[15:43:41] *** Joins: stonkey (~stonkey@user/stonkey)
[15:44:01] *** Quits: KvL (~KvL@2001:8003:8c8b:e00:80f9:8264:4a57:3ffa) (Client Quit)
[15:44:15] *** Joins: KvL (~KvL@2001:8003:8c8b:e00:8f38:bc6c:c82d:9115)
[15:44:27] *** Joins: delvian (~delvian@41.13.224.35)
[15:44:33] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:44:36] *** Joins: dez (uid92154@user/dez)
[15:44:37] *** Quits: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net) (Ping timeout: 240 seconds)
[15:44:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:44:57] <nedbat> i want a mode in pytest where it buffers stdout, but only keeps the last N lines to show me when the test fails
[15:45:14] <supakeen> sounds like a good mode
[15:45:23] <supakeen> i have a better idea
[15:45:30] <supakeen> or worse, depending on your viewpoint
[15:45:47] <supakeen> what if you were to redirect to a FakeStdout on entering a testcase
[15:45:47] *** Quits: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[15:45:47] *** Quits: Terexen (~terexen@user/terexen) (Read error: Connection reset by peer)
[15:46:06] *** Joins: savolla (~savolla@84.44.28.28)
[15:46:34] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi) (Read error: Connection reset by peer)
[15:46:40] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:46:44] <supakeen> so it's not the last N lines but all lines generated by that testcase?
[15:46:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:47:03] <bjs> I thought pytest already did that?
[15:47:43] <supakeen> twinings
[15:47:47] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[15:47:53] <nedbat> supakeen: i don't want all the lines.
[15:47:58] <supakeen> oh
[15:48:07] <nedbat> supakeen: the test is taking way too long because it's buffering millions of lines
[15:48:16] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi)
[15:48:16] <nedbat> maybe not millions, but $LOTS
[15:48:42] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:48:57] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:49:16] <nedbat> ok, it was only 69k lines
[15:49:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:49:41] <bjs> nedbat: won't it have to buffer those lines anyway, if you want the last N
[15:49:49] <nedbat> bjs: put it in a deque
[15:49:50] <bjs> or you mean, only buffer up to N at at ime
[15:50:15] <bjs> nedbat: ah okay, I'd make a little autouse fixture that did redirect_stdout to some file-like object. I don't know of anything builtin
[15:50:41] <nedbat> bjs: or, i can just wait the 30sec and get all the lines :)
[15:50:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:50:53] <bjs> nedbat: you said it was taking "way too long"
[15:50:59] <bjs> 30 seconds is not way too long in my book :P
[15:51:04] <nedbat> bjs: 30s is WAY TOO LONG!!
[15:51:05] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:51:06] <bjs> haha
[15:51:06] <nedbat> :)
[15:51:43] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[15:51:52] *** nomic2 is now known as nomic
[15:52:08] <bjs> nedbat: maybe you need a quiet mode, so you can run your thing with less output :P
[15:52:17] *** Quits: miique (~miique@181.46.139.166) (Ping timeout: 240 seconds)
[15:52:23] <nedbat> bjs: maybe YOU need a quiet mode!
[15:52:27] <bjs> :(
[15:52:27] <nedbat> ok, that was harsh :)
[15:52:32] <bjs> okay i go now
[15:52:49] <mrwick> why not start a new tmux pane with tetris while you wait?
[15:52:54] <nedbat> i'm getting punchy from trying to visually debug a max recursion error
[15:52:56] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:52:57] *** Quits: esther (~esther@24-155-112-236.dyn.grandenetworks.net) (Ping timeout: 240 seconds)
[15:53:08] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:53:21] *** Joins: fikran (~fikran@user/fikran)
[15:54:16] *** Joins: weedmic (~weedmic@5.102.235.240)
[15:54:32] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi) (Ping timeout: 256 seconds)
[15:54:37] <nedbat> mrwick: fun fact: years and years ago I worked for Digital Equipment Corporation, and filed for workman's comp for carpal tunnel that got from playing Tetris at work
[15:54:37] *** Joins: nyah (~nyah@94.6.71.219)
[15:54:38] *** Joins: hackers (~self@user/hackers)
[15:54:50] *** hackers is now known as remote
[15:54:58] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:55:12] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:55:13] <supakeen> wait
[15:55:18] <supakeen> what bit did you work on there? :)
[15:55:43] <remote> Howdy
[15:55:47] *** Joins: softwarewolf (~software@user/softwarewolf)
[15:56:24] <nedbat> supakeen: I worked in the printer group, on the PostScript printers: LPS40, LPS20, server-side rendering with DisplayPostscript, things like that.
[15:56:35] <supakeen> ah yes!
[15:56:41] <nedbat> LN03
[15:56:57] <supakeen> i was just thinking of digital the other day because we got a PDP-11 board
[15:56:59] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:57:00] *** Joins: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi)
[15:57:01] <nedbat> supakeen: https://nedbatchelder.com/blog/200811/my_oldest_code_still_running.html
[15:57:20] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:57:21] <supakeen> that came with a scanning electron microscope we're working on, it used to run the previous acquisition stuff on it
[15:57:26] *** Quits: weedmic (~weedmic@5.102.235.240) (Client Quit)
[15:58:55] <wyre> hi guys, I'm trying to do a function like this https://bpa.st/7JDQ to format an sdcard with a single ext4 partition
[15:59:09] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[15:59:15] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:59:17] <tmm88> https://github.com/quantuumstudio/nRTaudioACpython
[15:59:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[15:59:32] <tmm88> can someone provide me feedback on how to iterate this
[15:59:32] *** Joins: mickey8 (~user@user/mickey)
[15:59:33] <wyre> but ... apparently I need to introduce there that sleep(10) because when the function tries to run mkfs.ext4 ... the partition is not still available
[15:59:33] <tmm88> ?
[15:59:34] <tmm88> cheers
[15:59:41] <wyre> do you think I could do it in another way?
[15:59:53] <wyre> maybe I should split this into two functions
[16:00:12] <wyre> one to create the partition and the other one to format it ... 🤔
[16:00:23] <nedbat> bjs: ironically, that blog post about printing PostScript banner pages ends with an observation parallel to my too-slow test suite: when waiting for something, even fast things can seem too slow.
[16:00:43] *** Parts: JimmyRustles (~Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net) ()
[16:01:17] *** Joins: Viewday112 (~Viewday@user/viewday)
[16:01:17] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:01:37] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:01:56] <rindolf> wyre: use .wait()?
[16:02:21] <wyre> rindolf, hmmm, how could I use it?
[16:02:49] <wyre> I mean, should I apply that method to run(mkfs_cmd)
[16:02:51] <wyre> ?
[16:03:04] <wyre> something like run(mkfs_cmd).wait() ?
[16:03:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:03:37] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[16:03:37] *** Viewday112 is now known as Viewday11
[16:03:44] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:04:29] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[16:04:48] <rindolf> wyre: see eg https://stackoverflow.com/questions/58649679/resourcewarning-unclosed-file-io-bufferedreader-name-4
[16:05:01] *** Quits: shad (~shad@user/shad) (Ping timeout: 240 seconds)
[16:05:27] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[16:05:33] <rindolf> wyre: maybe use .check_call()?
[16:05:36] *** Joins: ExeciN (~ExeciN@user/nicexe)
[16:05:41] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:05:48] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:06:33] <wyre> rindolf, instead run()?
[16:07:40] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:07:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:09:22] <wyre> rindolf, apparently I cannot use run(parted_cmd).wait() because of 'CompletedProcess' has no 'wait' attribute 🤔
[16:09:33] <wyre> but I'm not sure if I should apply this to the parted or the mkfs commands 🤔
[16:09:39] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:10:02] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:10:10] *** Joins: bluedust (~bluedust@117.222.185.255)
[16:10:17] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[16:11:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:12:03] *** Joins: ubert (~Thunderbi@p200300ecdf0994cb1dfd4ca95c98fa37.dip0.t-ipconnect.de)
[16:12:14] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:12:19] <wyre> rindolf, I'd say the problem is parted finishes successfully, but blockdevice for that partition is not immediately available 🤔
[16:13:42] *** Joins: miique (~miique@181.46.139.166)
[16:13:53] *** Joins: metus (~metus@186.67.158.250)
[16:13:59] *** Quits: nicko (~iClass@222.211.28.110) (Read error: Connection reset by peer)
[16:14:00] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:14:27] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:15:48] *** Quits: KvL (~KvL@2001:8003:8c8b:e00:8f38:bc6c:c82d:9115) (Quit: KvL)
[16:16:16] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:16:38] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:17:24] <rindolf> wyre: ah
[16:17:47] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[16:18:25] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:18:47] *** Quits: artie (~artie@pool-173-59-250-143.bltmmd.fios.verizon.net) (Ping timeout: 256 seconds)
[16:18:49] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:19:55] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Read error: Connection reset by peer)
[16:19:59] <wyre> rindolf, so ... I guess I will have to split this into two different functions
[16:20:27] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[16:20:36] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:21:01] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:22:55] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:23:04] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[16:24:36] *** Joins: bm (~bm@user/bm)
[16:24:52] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:25:14] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:27:01] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:27:28] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:27:32] *** Quits: savolla (~savolla@84.44.28.28) (Quit: Client closed)
[16:28:04] *** Joins: sebres (~sebres@pronat.wincor-nixdorf.com)
[16:28:09] *** Joins: mogad0n (~mogad0n@user/mogad0n)
[16:29:07] <bm> https://bpa.st/OCUA - am I using it correctly for returning a sub-generator based on a condition? Is there a more elegant way than "yield from (...); return"?
[16:29:15] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:29:37] <bm> Was actually quite surprised that the first example did not work as expected
[16:29:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:31:18] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[16:31:30] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:31:39] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:31:51] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:32:17] *** Quits: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se) (Ping timeout: 240 seconds)
[16:32:40] *** Quits: VaniaPy (~VaniaPy@46.12.245.39.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[16:32:48] *** Joins: ub (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de)
[16:33:04] *** Quits: ubert (~Thunderbi@p200300ecdf0994cb1dfd4ca95c98fa37.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:33:04] *** ub is now known as ubert
[16:33:12] *** Joins: Viewday111 (~Viewday@user/viewday)
[16:33:27] *** Joins: sagax (~sagax_nb@user/sagax)
[16:33:43] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:34:02] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:35:21] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[16:35:21] *** Viewday111 is now known as Viewday11
[16:35:49] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:36:09] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:37:06] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[16:37:36] <jinsun> bm: depends on how you are using that function, if you wanted to just loop over the result then either way should have worked, if you want more generator-y stuff then yield from is the only way
[16:38:00] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:38:16] *** Joins: vladoski (~foo@2001:b07:add:d406:75a4:815:4160:aae9)
[16:38:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:38:51] <bm> jinsun: actually the "expected" way gives unexpected result in this case, it doesn't return anything at all
[16:39:52] *** Joins: mat001 (~mat001@c-69-181-153-0.hsd1.ca.comcast.net)
[16:40:09] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:40:16] <bm> jinsun: wait, no, wtf
[16:40:22] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:41:15] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::cf1c)
[16:41:29] *** Quits: sincorchetes_ (~sincorche@29.red-83-33-10.dynamicip.rima-tde.net) (Quit: Leaving)
[16:41:43] <jinsun> can't return nothing at all, maybe it returned None, but that means your other generators are not really generators but normal functions that return None
[16:42:08] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:42:22] *** Quits: vladoski (~foo@2001:b07:add:d406:75a4:815:4160:aae9) (Client Quit)
[16:42:33] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:42:39] <bm> jinsun: actually the behavior is different when the function is inline vs. when the function is called
[16:43:37] *** Quits: pipapipapibo (~w@2601:601:cf7f:e380::877) (Ping timeout: 240 seconds)
[16:44:23] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:44:27] <jinsun> okay, show how you are inlining?
[16:44:38] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:45:17] <bm> jinsun: https://bpa.st/TSYA
[16:45:17] *** Joins: Viewday118 (~Viewday@user/viewday)
[16:45:53] <bm> I'm at a loss
[16:46:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:46:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:47:31] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 268 seconds)
[16:47:31] *** Viewday118 is now known as Viewday11
[16:48:16] *** Joins: vladoski (~foo@2001:b07:add:d406:75a4:815:4160:aae9)
[16:48:35] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:48:42] <jinsun> okay if you mix yield and return in the same function, the return will not do what you might have though
[16:48:45] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:48:51] <jinsun> the loop only gives the yield part
[16:49:23] <jinsun> the return is part of the stopiteration error that is thrown when the generator runs out
[16:50:31] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:50:55] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Remote host closed the connection)
[16:51:10] <jinsun> so yield from is the way to make it do what you really wanted
[16:51:14] <bm> jinsun: so the mere presence of "yield" keyword in a function affects its behavior? In the third case it shouldn't even get to that loop part
[16:51:37] *** Quits: vladoski (~foo@2001:b07:add:d406:75a4:815:4160:aae9) (Client Quit)
[16:51:49] *** Joins: darksun (~darksun@user/darksun)
[16:51:54] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[16:51:56] *** Joins: slav0nic (slav0nic@python.su)
[16:52:20] <jinsun> yes having yield inside makes it a generator, and generator throws a stopiteration exception when it sees a return, and the for statement uses that as a hint to stop
[16:52:28] *** Joins: vladoski (~foo@2001:b07:add:d406:75a4:815:4160:aae9)
[16:52:42] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[16:52:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:52:52] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: leaving)
[16:52:58] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:53:24] *** Joins: esther (~esther@2607:fb90:20d3:655f:93a0:a8d9:e8ef:803b)
[16:53:50] *** Quits: moogs94 (~moogs@12.146.254.146) (Quit: Connection closed)
[16:53:51] <jinsun> so in the 3rd case when you got empty loop that was because the return was the first thing in the generator function
[16:54:34] <bm> even though it returned another generator
[16:54:43] <jinsun> if you are usinng yield, then the way to "return" another generator is yield from
[16:54:45] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:55:10] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:55:21] <jinsun> if you literally return it, then it will translate to something like raise StopIteration(your_generator)
[16:55:45] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[16:56:54] <bm> jinsun: thank you
[16:56:58] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:57:21] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:57:37] *** Quits: esther (~esther@2607:fb90:20d3:655f:93a0:a8d9:e8ef:803b) (Ping timeout: 240 seconds)
[16:58:07] *** Joins: esther (~esther@24-155-112-236.dyn.grandenetworks.net)
[16:58:36] *** Joins: cdown_ (~cdown@163.114.131.1)
[16:59:09] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[16:59:27] *** Quits: vladoski (~foo@2001:b07:add:d406:75a4:815:4160:aae9) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:59:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[16:59:42] <jinsun> bm: also see https://www.python.org/dev/peps/pep-0255 and https://www.python.org/dev/peps/pep-0380/ for how return and yield and yield from behave
[17:00:00] *** Joins: tmm88 (~tmm88@user/tmm88)
[17:00:17] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[17:01:20] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:01:39] *** Quits: rajkosto (~rajkosto@93-86-13-189.dynamic.isp.telekom.rs) (Ping timeout: 250 seconds)
[17:01:43] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:02:21] *** Quits: jiffe (~jiffe@mail.nsab.us) (Quit: WeeChat 2.9)
[17:02:31] *** Quits: cdown (~cdown@188.214.11.14) (Ping timeout: 250 seconds)
[17:02:34] *** cdown_ is now known as cdown
[17:03:06] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[17:03:32] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:03:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:04:57] *** Joins: Viewday112 (~Viewday@user/viewday)
[17:05:28] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:05:49] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:06:34] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[17:06:34] *** Viewday112 is now known as Viewday11
[17:07:37] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:07:58] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:08:12] *** Joins: sudomann (~sudomann@c-73-133-131-19.hsd1.md.comcast.net)
[17:09:47] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:10:13] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:10:37] *** Quits: pepper (~pepper@user/pepper) (Ping timeout: 240 seconds)
[17:12:04] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:12:19] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:12:50] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[17:13:32] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::30)
[17:14:06] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:14:28] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:15:02] *** Quits: rubemlrm (~rubemlrm@user/rubemlrm) (Quit: The Lounge - https://thelounge.chat)
[17:16:09] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:a172:6c71:a419:e6a4)
[17:16:16] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:16:30] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:16:41] *** Quits: lethu (~lethu@user/lethu) (Quit: Leaving)
[17:17:07] *** Joins: rubemlrm (~rubemlrm@user/rubemlrm)
[17:18:25] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:18:36] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:20:27] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:20:41] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:21:29] *** Quits: Douwd (~douwd@crux.bsdpro.net) (Quit: So long, and thanks for all the fish.)
[17:22:30] *** Joins: lethu (~lethu@user/lethu)
[17:22:30] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:22:37] *** Quits: miique (~miique@181.46.139.166) (Ping timeout: 240 seconds)
[17:22:40] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:24:26] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:24:53] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:25:13] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[17:26:34] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca)
[17:26:40] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:26:54] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:27:04] <newdimension> regex question, how do I find values given a structure of a sentence? Example: I'm asking a question about regex on #python. How do I extract the words "question" and "#python" if the sentence is going to be written like this verbatim? r"(I'm asking a question about) /w (on) /w" I tried this, but it matches the whole thing
[17:27:31] *** Quits: p-i- (~Ohmu@mx-ll-183.89.37-34.dynamic.3bb.co.th) (Remote host closed the connection)
[17:28:08] <leduyquang753> Use capture groups.
[17:28:39] *** Joins: Viewday114 (~Viewday@user/viewday)
[17:28:44] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:28:49] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Ping timeout: 268 seconds)
[17:29:06] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:29:27] <newdimension> leduyquang753: isn't that what I'm doing using the parenthesis?
[17:30:52] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:30:53] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[17:30:53] *** Viewday114 is now known as Viewday11
[17:30:59] <leduyquang753> You are not capturing the right things, I assumed you didn't write regex there.
[17:31:11] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:31:12] *** Joins: miique (~miique@181.46.139.166)
[17:31:58] *** Joins: p-i- (~Ohmu@mx-ll-183.89.37-34.dynamic.3bb.co.th)
[17:32:58] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:33:17] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:33:40] <newdimension> leduyquang753:  r"I'm asking a question about (/w) on (/w)" is it like so then?
[17:33:55] *** Joins: tomeaton17 (~tomeaton1@92.234.2.175)
[17:34:11] <leduyquang753> Yes, except make sure the pattern inside is correct.
[17:35:06] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:35:13] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:35:19] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:36:36] *** Quits: cedric (~cedric@2a01:cb11:821:7c00:a172:6c71:a419:e6a4) (Quit: Konversation terminated!)
[17:37:01] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 240 seconds)
[17:37:06] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:37:34] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:38:50] <newdimension> What method of re am I supposed to use to match?
[17:39:00] *** Joins: Enitin (~Enitin@82.102.22.84)
[17:39:21] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:39:31] *** Joins: pepper (~pepper@user/pepper)
[17:39:50] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:39:54] *** Joins: bloody (~bloody@user/bloody)
[17:39:56] <leduyquang753> `match`.
[17:41:16] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[17:41:33] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[17:41:38] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:41:50] *** Quits: CombatVet (~c4@user/combatvet) (Remote host closed the connection)
[17:41:52] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:42:06] *** Joins: CombatVet (~c4@user/combatvet)
[17:42:37] <newdimension> It's still not working, I read in the docs that I can use "\1" to pick which group I get. Where am I supposed to write that?
[17:43:07] *** Quits: lethu (~lethu@user/lethu) (Quit: Leaving)
[17:43:18] *** Joins: shad (~shad@user/shad)
[17:43:40] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:43:59] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Quit: Going offline, see ya! (www.adiirc.com))
[17:44:00] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:44:16] <leduyquang753> When you replace only.
[17:44:29] <leduyquang753> Read what `re.match` returns and what that return has.
[17:45:18] <BinarySavior> newdimension re.match() returns an object, if you would like group 1 of the results you can do re.match().group(1)
[17:45:49] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:46:09] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:46:15] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:46:27] *** Joins: moog (~moog@107.126.53.224)
[17:47:55] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:48:18] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:50:10] *** Joins: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be)
[17:50:32] *** Quits: betelgeuse9 (~betelgeus@94-225-47-8.access.telenet.be) (Read error: Connection reset by peer)
[17:51:37] *** Joins: idontneedanick (~idontneed@h-85-24-184-105.A189.priv.bahnhof.se)
[17:52:06] <newdimension> I see, could you tell me what \number means in the docs? It's not clear to me what they're explaining
[17:52:39] <newdimension> https://docs.python.org/3/library/re.html
[17:52:41] *** Joins: arinov (~arinov@5.24.160.5)
[17:53:20] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-c431-15d4-18e2-ba2a.res6.spectrum.com)
[17:53:37] *** Quits: jay-m126 (~jay-m@41.205.30.141) (Ping timeout: 240 seconds)
[17:53:45] <bjs> newdimension: it means \1 and \2 and so on.
[17:54:09] *** Joins: k60 (~k60fmapme@2001:470:69fc:105::1:5597)
[17:54:43] *** Quits: jay-m126_ (~jay-m@41.205.30.141) (Ping timeout: 268 seconds)
[17:55:13] <newdimension> bjs: right but where can you use them? I understood that I can use them to call the 1 group for instnace. But how do I do that?
[17:55:17] <bjs> newdimension: \1 matches the first group, \2 matches the second group etc
[17:55:56] <bjs> newdimension: with \1
[17:57:23] <bjs> newdimension: so the regex "foo|bar" matches either the word foo, or the word bar.  You can put it in brackets to make it a "group".  "(foo|bar)"  now in the regex \1 means "match the same text as group #1"
[17:57:43] <bjs> newdimension: so r"(foo|bar) \1" matches "foo foo" and "bar bar".
[17:58:11] <newdimension> https://dpaste.org/7B6o
[17:58:33] <bjs> newdimension: I'm not sure what the question is,  use it to do what exactly?
[17:58:42] *** Quits: clarkk1 (~clarkk@host86-165-12-159.range86-165.btcentralplus.com) (Remote host closed the connection)
[17:58:46] <newdimension> oh so you include \1 in the regex expression
[17:59:05] <bjs> Yes \1 is a regular expression
[17:59:37] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[17:59:52] <newdimension> it doesn't match now that I included \1 at the end
[18:00:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[18:01:12] <bjs> newdimension: what is "it"
[18:01:19] *** Joins: Viewday117 (~Viewday@user/viewday)
[18:02:42] *** Joins: fikran (~fikran@user/fikran)
[18:03:11] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[18:03:11] *** Viewday117 is now known as Viewday11
[18:03:26] *** Quits: mwichmann (~mats@209-188-119-117.taosnet.com) (Ping timeout: 252 seconds)
[18:03:41] *** Quits: delarge (~chamigo@ctm.linuxers.cl) (Quit: leaving)
[18:03:46] <newdimension> bjs: https://dpaste.org/b3qN
[18:04:02] <bjs> newdimension: yes if you add random things to the end of your regex it won't match the same things anymore
[18:04:06] <bjs> I'm not sure what you expected?
[18:04:15] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Read error: Connection reset by peer)
[18:04:16] *** Joins: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec)
[18:04:22] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Remote host closed the connection)
[18:04:23] <newdimension> bjs: I'm trying to understand how you can use \number to pick which group you get
[18:04:35] *** Joins: delarge (~chamigo@ctm.linuxers.cl)
[18:04:39] <bjs> newdimension: okay what are you trying to do, what do you mean by "pick which group you get"
[18:04:44] <bjs> get *where* ?
[18:05:25] <newdimension> That regex is going to match topic and channel. I can access them using matches.group("topic") because I named them. I understood that if I don't name them I can access them using \number
[18:06:21] <bjs> newdimension: oh you want .group(1) and .group(2)
[18:06:30] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[18:06:31] <bjs> newdimension: \1 and \2 and stuff are *regular expressions*, they match text
[18:06:46] <newdimension> What does \1 do then? That's not clear to me yet
[18:07:01] *** Quits: Payam (~Payam@138.106.57.132) (Ping timeout: 256 seconds)
[18:07:02] <bjs> newdimension: it's a regular expression which matches the text of group 1
[18:07:17] *** Quits: miique (~miique@181.46.139.166) (Ping timeout: 240 seconds)
[18:07:20] <newdimension> Would you mind giving me an example?
[18:07:26] *** Joins: miique (~miique@181.46.139.166)
[18:07:35] <bjs> newdimension: r"(foo|bar) \1" for example
[18:07:40] *** Joins: grooverman (~grooverma@177.102.119.40)
[18:07:43] <bjs> matches "foo foo" and "bar bar"
[18:08:17] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::30) (Ping timeout: 240 seconds)
[18:08:32] <newdimension> bjs: is it basically a way to avoid rewriting regex part of a larger expression?
[18:08:58] <bjs> newdimension: not really, because my example is *not* the same as just repeating the earlier regex
[18:09:09] <bjs> newdimension: r"(foo|bar) (foo|bar)" != r"(foo|bar) \1"
[18:09:48] <bjs> newdimension: r"(.+):\1" matches "<any text>:<the same text again>"
[18:10:17] *** Joins: Barones (~Barones@2804:7f3:888b:7e76:ba4d:15e6:5660:6b92)
[18:10:20] *** Quits: DnzAtWrk (~DnzAtWrk@mobile-access-6df0a8-162.dhcp.inet.fi) (Read error: Connection reset by peer)
[18:10:29] <bjs> this example r"(.+):\1" is impossible to write a regex for without \1 .
[18:10:39] *** Joins: VaniaPy (~VaniaPy@46.12.245.39.dsl.dyn.forthnet.gr)
[18:10:44] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Read error: No route to host)
[18:11:19] <newdimension> bjs: It finally clicked. thank you! I'm sure it was frustrating when I wasn't following at the beginning
[18:12:03] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[18:12:20] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[18:12:44] <delarge> hello, I have a flask app that allows to the user define some variables. I want to share these variables(e.g. x=14) with other python script/file. I'm trying in the python script with from app import x and then print(app.x) but the code give me a "No module named flask" error. My question is: Do I need load the flask module in the other python file even if I don't need it? I just need the x variable.
[18:12:48] *** Quits: bm (~bm@user/bm) (Quit: bm)
[18:13:05] *** Joins: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net)
[18:13:27] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[18:13:50] <bjs> delarge: you could put those variables in another file that doesn't talk about flask at all.
[18:14:01] *** Joins: rajkosto (~rajkosto@93-86-90-106.dynamic.isp.telekom.rs)
[18:14:18] <bjs> Do you have multiple Python's installed or something? Why is flask installed for one but then suddenly not when you run the script?
[18:14:34] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[18:15:00] *** Quits: spetrosi (~spetrosi@ip-86-49-252-51.net.upcbroadband.cz) (Quit: Leaving)
[18:15:28] *** Joins: brabrax (~brabrax@user/brabrax)
[18:15:32] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Client Quit)
[18:15:37] *** Joins: jay-m126 (~jay-m@41.205.30.141)
[18:15:50] *** Joins: clarkk (~clarkk@host86-165-12-159.range86-165.btcentralplus.com)
[18:16:34] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[18:16:42] *** Joins: junktext__ (~junktext@gateway/vpn/pia/junktext)
[18:17:27] *** Joins: acresearch (~acresearc@user/acresearch)
[18:17:34] <delarge> bjs: I could create a file special for these variables. It's a good idea
[18:18:11] <delarge> bjs: no. It's the same Python 3
[18:18:47] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Ping timeout: 250 seconds)
[18:19:14] <delarge> I thought that the error is because the flask module it's not loaded in the script not because it's not installed
[18:19:18] <bjs> delarge: why is flask suddenly not installed?
[18:19:23] <bjs> no that error means it's not installed
[18:20:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[18:20:30] <delarge> uhm...that's weird
[18:20:57] <mawk> oh no supakeen
[18:21:00] <mawk> why
[18:21:09] <mawk> oops wrong chan
[18:21:14] *** Joins: jay-m126_ (~jay-m@41.205.30.141)
[18:21:33] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[18:21:46] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:21:50] *** Joins: rindolf (~shlomif@inkscape/dev/shlomif)
[18:21:51] <delarge> bjs: I'll check that. Thank you mate
[18:22:12] <bjs> delarge: it probably means you're running the flask app with a different Python installation
[18:22:18] *** Joins: lethu (~lethu@user/lethu)
[18:22:21] *** Joins: alzgh (~alzgh@user/alzgh)
[18:22:57] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[18:26:22] <delarge> you're right
[18:26:24] <delarge> thanks
[18:26:59] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 256 seconds)
[18:27:07] <alzgh> hello, I'm looking for a library that can help me do boolean operations on 3D objects (mainly rectangles) like you can do it with objects in 3D design software. Is something like this available?
[18:27:43] *** Quits: SteveR (~SteveR@103.215.168.1) (Quit: Client closed)
[18:30:23] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 256 seconds)
[18:31:44] <SnoopJ> alzgh, what's the problem domain? FreeCAD can be scripted fairly extensively
[18:32:16] *** Joins: lethu (~lethu@user/lethu)
[18:32:30] *** Joins: backes (~backes@185.106.27.108)
[18:32:45] *** Joins: Viewday117 (~Viewday@user/viewday)
[18:33:43] *** Joins: ngp (~ngp@199.180.249.183)
[18:34:14] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:34:55] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[18:34:55] *** Viewday117 is now known as Viewday11
[18:35:05] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[18:35:11] *** Joins: akk (~akk@174-28-122-47.albq.qwest.net)
[18:35:41] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[18:36:34] <backes> hey, I have a little script: https://bpa.st/GLYA When I run it, it takes up >128GB of RAM. However the output csv file is around 20GB . Where does this overhead come from?
[18:37:34] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::30)
[18:37:44] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[18:37:58] *** Joins: esv (~esv@74.124.178.154)
[18:38:57] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[18:38:59] <alzgh> I hope this is not frowned upon here. I'm trying to solve today's AoC problem. I wanted to do it with python without installing additional software. The porblem is basically boolean operations on huge rectangles. This is the algorithmically tricky part of it. So I may have one rectangle and need to subtract a part of it that consist of another rectangle, which could have any type of intersection with the first rectangle (or may not intersect at all). I didn't look
[18:39:30] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[18:39:39] <SnoopJ> Aoc is fine her--okay bye
[18:39:39] *** Joins: alzgh (~alzgh@user/alzgh)
[18:40:02] <alzgh> I'm not sure my last message got through or not
[18:40:04] <SnoopJ> alzgh, AoC is fine here. I don't think FreeCAD would be a good choice for that, though. There might be a library that does boolean geometry, though
[18:40:08] <grym> backes: how much of this can you make lazily evaluated
[18:40:12] <grym> backes: i think more than you are now
[18:40:30] <grym> backes: (ie, generators not lists)
[18:40:35] <mefistofeles> backes: hard to tell, I suggest a debugger to check the flow and memory consumption, or a profiler. But, on the other hand you can probably get better use of resources if you avoid using python dynamic lists and instead using numpy arrays or something like that, specially if your data is numeric.
[18:40:41] <SnoopJ> oh, right, there's pymesh too
[18:40:49] <mefistofeles> or generators as well, as grym suggested, true
[18:41:02] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[18:41:21] <backes> I need it in a csv or similar format at the end as I'll pass it to R
[18:41:34] <backes> mefistofeles my data is only numerical, so I could indeed try to use numpy arrays
[18:41:48] *** Quits: neil (~kneel@rockylinux/infra/neil) (Quit: When life gives you lemons, make orange juice and then sit back as people wonder how you did it.)
[18:41:54] <backes> grym that's a good question, I didn't consider this
[18:42:26] <grym> backes: a silly example: https://bpa.st/YLHA
[18:42:31] <alzgh> Thank you SnoopJ I was just looking at pymesh in Docker. It's an overkill for my use case as it works on any mesh but maybe it's a good time to look into it :D
[18:44:00] <backes> grym good idea, I'll try this out and see if it improves :)
[18:44:26] *** Joins: [\\] (~nirnam@gateway/tor-sasl/nirnam)
[18:44:27] *** Quits: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[18:44:28] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[18:44:57] *** Joins: Viewday111 (~Viewday@user/viewday)
[18:44:57] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[18:45:02] <grym> backes: all those intermediate lists just jump out at me a little bit because i've just written a similar pipeline that's all generators until it hits the ndarray wall at the end, and it's pretty snappy!
[18:45:20] <SnoopJ> alzgh, you might be able to use the cgal-bindings library which is a little more directly talking to the CGAL library. e.g. this example shows intersection of two boxes (it sounds like you want subtraction, though) https://github.com/CGAL/cgal-swig-bindings/blob/main/examples/python/test_box_intersection_d.py
[18:46:17] <mefistofeles> backes: if you managed to improve it, please share, I'm curious
[18:46:18] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Remote host closed the connection)
[18:46:21] *** Quits: JingleJazzy (~jaziz@user/jaziz) (Quit: Beddie bye-bye)
[18:46:41] *** Joins: rsx (~dummy@ppp-188-174-150-178.dynamic.mnet-online.de)
[18:46:41] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[18:46:49] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[18:46:49] *** Viewday111 is now known as Viewday11
[18:46:50] *** Joins: nomn (nomn@user/nomn)
[18:46:52] <SnoopJ> alzgh, shapely might also be relevant: https://shapely.readthedocs.io/en/stable/manual.html
[18:47:22] *** Joins: neil (~kneel@rockylinux/infra/neil)
[18:49:29] <alzgh> thank you SnoopJ
[18:49:34] *** Joins: NotSatoshi (~NotSatosh@user/NotSatoshi)
[18:49:37] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[18:49:47] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Quit: penguino)
[18:51:46] *** Joins: emx (~emx@adsl-84-226-68-198.adslplus.ch)
[18:52:03] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[18:52:14] <emx> I have this error when I run "pip install -r requirements.txt": ERROR: Could not find a version that satisfies the requirement apturl==0.5.2
[18:52:46] <emx> Since I am not familiar enough with python I don't know where to start my research. Any help?
[18:52:46] <mefistofeles> emx: https://pypi.org/search/?q=apturl apturl doesn't seem to exist
[18:53:22] <grym> there's https://github.com/linuxmint/apturl
[18:53:53] <SnoopJ> yes that looks like a package associated with your distribution, and probably meant to be installed by it: https://community.linuxmint.com/software/view/apturl
[18:53:56] *** Quits: Barones (~Barones@2804:7f3:888b:7e76:ba4d:15e6:5660:6b92) (Ping timeout: 268 seconds)
[18:54:08] <The-Compiler> also see https://stackoverflow.com/questions/61191757/package-not-getting-installed-inside-docker-container-using-pip
[18:54:40] <grym> emx: you may be able to `pip install git+https://github.com/linuxmint/apturl` as well, but as SnoopJ says, this looks like something your OS package manager is meant to handle, so if you pip install it i wouldn't pip install it outside a venv, just in case
[18:54:40] <SnoopJ> I see it in the packages for Ubuntu 20.04, so yea, probably something you need to install with apt
[18:55:09] <SnoopJ> Yea I really recommend against a pip install here if your distro has another way to do it
[18:55:11] <grym> emx: which means the requirements.txt file you're using doesn't distinguish between system and pip packages, which is slightly naughty and if you can fix it, you probably want to
[18:55:29] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[18:56:39] <emx> mefistofeles, grym, SnoopJ Thank you for your quick replies. I get the issue and since this piece of software shall be deployed automatically I indeed will avoid tricks.
[18:59:17] *** Quits: Dotz0cat (~Dotz0cat@h97.197.117.75.dynamic.ip.windstream.net) (Ping timeout: 256 seconds)
[18:59:59] *** Quits: grooverman (~grooverma@177.102.119.40) (Read error: Connection reset by peer)
[19:01:26] *** Joins: grooverman (~grooverma@177.102.117.95)
[19:01:30] *** Joins: jinsun (~quassel@user/jinsun)
[19:01:40] <grym> sounds good
[19:01:59] *** Quits: tmm88 (~tmm88@user/tmm88) (Quit: Lost terminal)
[19:02:09] <backes> the solution is actually pretty simple. I can just write to the csv straight away, or buffer a bit into an array and then regularly write it to disk. Even though this might be slower, I can at least run it on my machine
[19:03:30] *** Joins: miique_ (~miique@181.46.139.166)
[19:04:12] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 240 seconds)
[19:04:32] <mefistofeles> backes: sounds like a workaround, not a solution, but sure, if it works, it works :P
[19:05:00] <backes> that is true, but it's (hopefully) a one-time computation
[19:05:08] *** Joins: Viewday115 (~Viewday@user/viewday)
[19:05:22] <grym> backes: you're not fooling anyone, i saw what you're querying!
[19:05:23] <grym> :D
[19:05:37] *** Quits: miique (~miique@181.46.139.166) (Ping timeout: 240 seconds)
[19:06:24] <backes> it's on a local database which I don't update:p
[19:06:44] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[19:06:44] *** Viewday115 is now known as Viewday11
[19:06:47] *** Joins: lethu (~lethu@user/lethu)
[19:07:20] *** Joins: evocatus (~evocatus@62.182.78.42)
[19:07:30] *** Quits: rakoon (~rakoon@2001:985:f4c6:1:616b:4311:2836:3528) (Ping timeout: 268 seconds)
[19:07:37] <grym> so you say :D
[19:07:54] *** Joins: rakoon (~rakoon@2001:985:f4c6:1:f74b:c5c:17af:6a08)
[19:07:58] <Shapeshifter> Can I somehow include a library when running a test suite via python3 -m unittest my_tests.py? I.e. my_tests.py wants to import something which is not "installed" and not a file in the same folder (or some other relative location that can be hardcoded in the file).
[19:08:11] <emx> Hast du Zugriff? https://bitbucket.org/cashare-dev/data_crunching/src/main/
[19:08:19] <emx> Sorry :)
[19:08:50] <grym> Shapeshifter: it's often much simpler to just install things
[19:08:55] <grym> Shapeshifter: (ie, in a venv with -e )
[19:09:03] <emx> Just delete the last two messages from the internet, would you kindly? :)
[19:09:45] <Shapeshifter> grym: probably right...
[19:11:25] *** Joins: tmm88 (~tmm88@user/tmm88)
[19:11:55] <daoudr_> I am going through anaconda instruction. where is the config file highlighted in red is supposed to be? https://i.imgur.com/1c99dxq.png
[19:12:37] <tmm88> http://pastie.org/p/5TwSQWOBIPTsk8ejDisQMI can someone give me feedback over this datamining script? cheers
[19:12:56] *** Quits: [\\] (~nirnam@gateway/tor-sasl/nirnam) (Quit: leaving)
[19:12:56] <jinsun> daoudr_: you are supposed to create that yml file yourself, it can be anywhere
[19:14:23] <daoudr_> jinsun: why then Make sure you are in the same directory as your config file and type the following:
[19:14:58] <daoudr_> jinsun: what is this config file and where is it located?
[19:15:28] <jinsun> well because the command says requirements.yml if it is not in the cwd , then conda won't be able to find it
[19:15:50] <jinsun> it is weird that the docs call it config file though, it is a requirements file
[19:16:06] <daoudr_> jinsun: what is cwd
[19:16:13] <jinsun> current working directory
[19:18:15] <daoudr_> jinsun: by convention you create the requirement file inside the environment directory?
[19:18:45] *** Quits: rsx (~dummy@ppp-188-174-150-178.dynamic.mnet-online.de) (Quit: rsx)
[19:19:22] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[19:19:42] *** Joins: alzgh (~alzgh@user/alzgh)
[19:19:51] *** Quits: tomeaton17 (~tomeaton1@92.234.2.175) (Quit: Client closed)
[19:19:53] <jinsun> not sure what " environment directory" is, but there is no convention, you need the file in the cwd so that you won't have to give the full path to it in the command
[19:21:19] *** Joins: puzzled (~puzzled@83-85-211-81.cable.dynamic.v4.ziggo.nl)
[19:21:28] *** Quits: p-i- (~Ohmu@mx-ll-183.89.37-34.dynamic.3bb.co.th) (Read error: Connection reset by peer)
[19:21:33] <jinsun> daoudr_: so if the requirements.yml was not in the cwd, then you would have to do something like `conda env create -f=/path/to/requirements.yml`
[19:22:06] <phy1729> I want to   [foo | bar for bar in baz]  but don't have a new enough python;  [copy(foo).update(bar) ... doesn't work because update annoyingly returns None not self. Is there a pretty way or do I have to loop instead of listcomp?
[19:22:34] <daoudr_> jinsun: I meant by environment directory where you create your environments  /home/username/Anaconda3/envs/
[19:23:11] <deniska> phy1729: [{**foo, **bar} for …} probably
[19:23:31] <phy1729> oh right, thanks
[19:23:45] <jinsun> daoudr_: no you don't need to (and shouldn't put) the yml file there, also seems like you are reading some super old version of the docs, read this https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html
[19:24:19] <daoudr_> jinsun: thanks I will go through it
[19:25:34] <jinsun> it just has slightly better naming for things, like it doesn't call the yml file configuration
[19:26:29] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[19:26:57] *** Quits: lethu (~lethu@user/lethu) (Quit: Leaving)
[19:27:03] *** Quits: arinov (~arinov@5.24.160.5) (Ping timeout: 256 seconds)
[19:27:44] *** Joins: arinov (~arinov@5.24.160.5)
[19:28:42] *** Joins: Viewday116 (~Viewday@user/viewday)
[19:28:45] *** Quits: luigibu (~luigi@80.30.200.2) (Ping timeout: 256 seconds)
[19:29:53] *** Quits: ttys000 (~ttys000@user/ttys000) (Ping timeout: 256 seconds)
[19:30:15] *** Quits: Viewday11 (~Viewday@user/viewday) (Read error: Connection reset by peer)
[19:30:15] *** Viewday116 is now known as Viewday11
[19:30:25] *** Joins: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net)
[19:32:18] <daoudr_> jinsun: my question considered by many self explanatory
[19:34:25] *** Quits: junktext__ (~junktext@gateway/vpn/pia/junktext) (Remote host closed the connection)
[19:34:29] *** Quits: akk (~akk@174-28-122-47.albq.qwest.net) (Quit: +++)
[19:35:27] <jinsun> hah?
[19:35:34] *** Joins: junktext__ (~junktext@gateway/vpn/pia/junktext)
[19:36:57] *** Quits: delvian (~delvian@41.13.224.35) (Ping timeout: 240 seconds)
[19:37:24] *** Quits: k4rt0ff31ch33t4h (~k4rt0ff3l@92-249-188-216.pool.digikabel.hu) (Quit: leaving)
[19:38:15] *** Joins: delvian (~delvian@41.13.200.30)
[19:39:03] <twainwek> how can i add a month to a datetime
[19:39:23] <twainwek> datetime.timedelta does not not have a month parameter
[19:39:34] <The-Compiler> twainwek: define "a month"
[19:39:35] <grym> because 'month' is not a constant time duration
[19:39:51] <daoudr_> jinsun: nevermind.
[19:40:05] <twainwek> given YYYY-mm-dd i want YYYY-(m+1)-dd
[19:40:14] <twainwek> but for december, i also want YYYY+1
[19:40:44] <jinsun> you can use relativedelta from dateutil
[19:40:52] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[19:41:00] <twainwek> relativedelta does not increment year for last month
[19:41:10] <The-Compiler> twainwek: what about 2021-01-31 then?
[19:41:24] <twainwek> :O
[19:41:28] <The-Compiler> hehe
[19:41:46] *** Joins: vd33 (~vd33@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[19:42:00] <lericson> people think they understand calendars until they have to program around them
[19:42:29] <twainwek> i hate dealing with date/time especially anything to do with dst
[19:42:32] <lericson> another favorite of mine is the behavior with week numbers near new year
[19:42:55] <jinsun> twainwek: seems to be working here, try `datetime.datetime.today() + relativedelta(months=1)`
[19:43:15] <jinsun> I get 22nd Jan 2022 like you expect
[19:44:10] <twainwek> i see, i was using (month=1)
[19:44:23] <jinsun> that replaces the month with 1
[19:44:26] <jinsun> doesn't increment
[19:44:48] <jinsun> and it handles 2021-01-31 as well, decides to give 2021-02-28, which is reasonable I guess
[19:45:34] *** Joins: Xano (~Xano@2a00:23c4:4204:700:3bc:3d6b:e390:b1fe)
[19:45:36] <twainwek> thanks i'll go with that for now
[19:45:54] *** Joins: cthulchu (~Cthulchu@69-172-160-196.cable.teksavvy.com)
[19:47:51] *** Joins: leitz (~LeamHall@072-182-158-027.res.spectrum.com)
[19:48:21] *** Quits: clarkk (~clarkk@host86-165-12-159.range86-165.btcentralplus.com) (Quit: Leaving)
[19:49:07] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[19:50:22] *** Quits: backes (~backes@185.106.27.108) (Quit: Client closed)
[19:51:40] *** Joins: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de)
[19:54:37] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Ping timeout: 240 seconds)
[19:55:12] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-2893-5a12-7df9-5067.res6.spectrum.com)
[19:58:30] *** Quits: mrwick (~mrwick@user/mrwick) (Quit: leaving)
[19:58:44] *** Joins: adiKt (uid472628@id-472628.tinside.irccloud.com)
[19:59:14] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[19:59:42] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[19:59:54] <daoudr_> jinsun: going partially through the guidelines you thankfully shared I noticed .condarc configuration file. could it be the outdated tutorial referring that yml should be created on the same level of .condarc?
[20:00:07] *** Joins: FluffyMask (~masque@user/fluffymask)
[20:00:22] *** Quits: ubert (~Thunderbi@p548c8cd6.dip0.t-ipconnect.de) (Remote host closed the connection)
[20:00:52] <jinsun> maybe, but I think it was just calling the requirements file configuration for some reason and being extra confusing
[20:00:54] <mpan> Any alternatives to Python’s gettext lib for loading localized resources? The documnetation of Python only speaks about gettext. Note: not asking for google for answers, I can do that myself: I am asking for things people actually used. Thanks in advance.
[20:01:05] *** Joins: lachesis (~lachesis@user/lachesis)
[20:01:34] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[20:01:55] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[20:01:57] <jinsun> daoudr_: you can put the yml file at the same location as the condarc file if you want, but the location doesn't really matter, what matters is that you give the correct path when you run the `conda env create` command
[20:02:13] <lachesis> why oh why does 3.10 move collections.Callable into collections.abc.Callable? at least python2 doesn't break backwards compatability all the time.
[20:02:25] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[20:02:27] <daoudr_> jinsun: noted with thanks
[20:03:33] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[20:03:38] *** Quits: evocatus (~evocatus@62.182.78.42) (Quit: Leaving)
[20:05:09] *** Quits: upsala (~zcb@185.209.196.169) (Quit: WeeChat 3.4)
[20:05:40] *** Joins: Throgkt (~Throgkt@user/throgkt)
[20:06:31] <SnoopJ> lachesis, it doesn't move it, it's been defined there since 2007 at least. https://github.com/python/cpython/commit/c47c78b878ff617164b2b94ff711a6103e781753#diff-c92f871cb9b4aa1583c89f82cd416d58a5d70fff41faf41e45dedf775dbe7713
[20:06:45] <SnoopJ> What has been removed is the aliasing functionality
[20:07:44] <jinsun> and it was deprecated since 3.3 apparently, 9 years ago
[20:09:41] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[20:09:52] <SnoopJ> But left there for the exact reason of backwards compatibility, with a deprecation warning
[20:10:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[20:10:24] <grym> oooo right is it today or tomorrow that 3.6 drops off?
[20:10:27] <grym> i think tomorrow
[20:10:44] <dob1> given a class I want to serialize it to json. looking on google I found several solution, some outdated I suppose, what I have to look?
[20:10:47] <grym> tomorrow.
[20:11:36] <grym> dob1: there are a few ways to do it, the most convenient of which involve external libraries
[20:11:43] *** Joins: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6)
[20:12:03] <dob1> grym, which libraries?
[20:12:03] *** Joins: fikran (~fikran@user/fikran)
[20:12:35] <SnoopJ> grym, is that announced somewhere? I only see Dec 2021 in the release schedule, although tomorrow is 5 years to the day so would be my guess if I had nothing to go on
[20:12:35] <grym> dob1: pydantic or attrs (or stdlib dataclasses) and desert
[20:12:37] *** Quits: jaggz (~jaggz@user/jaggz) (Quit: I saith goodbye)
[20:12:50] <grym> SnoopJ: it's in the silly place i always forget https://devguide.python.org/#status-of-python-branches
[20:13:09] <grym> i have to bookmark it because i can never remember the url or how to search for it
[20:13:27] <SnoopJ> dob1, you can also write your own JSONEncoder for the `json` library in the stdlib.
[20:13:28] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[20:13:31] <zumba_addict> Good morning. I'd like to build a simple chat application where there is no server. I'd like to implement something similar to how kazaa or similar works. I'll be using it with my relatives rather than using famous chats like from Facebook. Is it possible?
[20:14:06] <grym> dob1: https://hynek.me/articles/serialization/ with JSONEncoder, this is a handy thing to read
[20:14:21] <dob1> I take a look, thanks
[20:14:29] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[20:14:48] <grym> these days i tend to use pydantic to define my classes, and then they have a handy dandy .json() method on 'em
[20:15:13] *** Joins: Barones (~Barones@189.50.80.77)
[20:15:50] <grym> and pydantic handles correctly serializing the data structures that usually barf, like Path and datetime
[20:15:52] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:74ef:f1b6:d77e:66a2)
[20:16:12] <SnoopJ> it's a good choice if rewriting the class is an option
[20:16:33] <zumba_addict> i guess what I am thinking is impossible. Maybe kazaa does connect to some central server
[20:16:47] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:17:06] <SnoopJ> zumba_addict, what you are describing is a "peer-to-peer" system. It is possible, but it has a lot of caveats.
[20:17:26] <zumba_addict> ah, peer to peer. Caveats in what way?
[20:17:31] <grym> chat over bittorrent sounds wild though :)
[20:17:48] <zumba_addict> is bitorrent a protocol or a software?
[20:17:59] <SnoopJ> zumba_addict, well, for starters, peer discovery is a thing you have to do. Without coordinating with a central server, this is tricky
[20:18:03] *** Quits: emx (~emx@adsl-84-226-68-198.adslplus.ch) (Ping timeout: 256 seconds)
[20:18:23] <zumba_addict> got it, my guess was right. So Kazaa might have it then
[20:18:23] <grym> bittorrent is a protocol
[20:18:29] <zumba_addict> oh cool
[20:19:09] <SnoopJ> a lot of file transfer systems will have some sort of centralized server that helps establish peer connections, which then do most of the work. BitTorrent relies on "trackers" to link up people who want files with such-and-such ID with people who have them.
[20:19:11] <zumba_addict> maybe discovery if there is no server might have to be manual like telling my relatives the ip address and tcp port
[20:19:20] <zumba_addict> gotcha
[20:19:26] <SnoopJ> That's not really discovery, you're just manually establishing the connection
[20:19:33] <SnoopJ> Which is an option, if not a very good one
[20:19:36] <zumba_addict> yep, no discovery
[20:19:56] <zumba_addict> so kazaa did have central servers?
[20:20:11] <SnoopJ> I have no idea
[20:20:21] <zumba_addict> is bitorrent still alive? I used it like 10 years ago
[20:20:34] <Peng> Sure, I'm still torrenting Linux ISOs
[20:20:39] <zumba_addict> cool
[20:20:48] *** Quits: impermanence (~impermane@c-75-73-193-204.hsd1.mn.comcast.net) (Quit: Connection closed)
[20:20:53] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:21:06] <zumba_addict> most people think bitorrent is a program like me. I just learned it now that it's a protocol
[20:22:26] <grym> arch distributes install media as a torrent
[20:22:32] <grym> it's ... very well-seeded
[20:22:58] <zumba_addict> and i remember, each client is also a server right? or called seeder?
[20:23:25] <zumba_addict> i hope i can use python to play with bitorrent
[20:23:56] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[20:23:56] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[20:23:59] <zumba_addict> https://github.com/gallexis/pytorrent
[20:24:14] *** Quits: tejr_ (~tejr@user/tejr) (Remote host closed the connection)
[20:24:14] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[20:24:16] <zumba_addict> oh it's a tool
[20:24:17] *** Quits: botfather (~botfather@shell2.dds.nl) (Remote host closed the connection)
[20:24:29] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[20:24:35] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[20:24:46] *** Joins: tejr (~tejr@user/tejr)
[20:24:50] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[20:25:29] <jinsun> there is http://libtorrent.org/python_binding.html
[20:25:53] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 252 seconds)
[20:26:05] <jinsun> though doesn't look like fun to install
[20:26:28] <zumba_addict> cool
[20:26:49] <zumba_addict> so bittorrent doedn't use central server according to this https://www.howtogeek.com/141257/htg-explains-how-does-bittorrent-work/
[20:27:32] <zumba_addict> ah there is like a tracker which is basically a server
[20:27:44] <zumba_addict> so it's like pub/sub
[20:28:18] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Quit: ZNC - https://znc.in)
[20:28:54] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.4)
[20:29:04] <zumba_addict> ah, so I am a leecher, HAHAHA
[20:29:09] <zumba_addict> back in the days
[20:29:54] *** Joins: Konsgn (~Konsgn@user/Konsgn)
[20:30:56] <zumba_addict> so i guess the first few days of bittorrent, someone had to share the torrent file in order to connect or maybe it comes with the package installer
[20:31:08] <SnoopJ> as I said, trackers coordinate connections between people, and then the peer connections handle the actual file transfer
[20:31:18] <SnoopJ> s/people/peers/
[20:31:26] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[20:31:28] <zumba_addict> got it
[20:31:28] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[20:32:04] *** Quits: luigibu (~luigi@11.red-79-159-71.dynamicip.rima-tde.net) (Quit: WeeChat 3.4)
[20:32:09] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[20:32:27] <SnoopJ> a lot of multiplayer systems for games work this way: the company that develops the game hosts a place for people to announce/find servers, but the actual connections for playing are only between peers
[20:33:19] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[20:33:28] <zumba_addict> got it. It's similar to websockets
[20:33:36] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Remote host closed the connection)
[20:33:41] <zumba_addict> though websockets has one server only
[20:33:46] <zumba_addict> like a chat server
[20:34:57] *** Quits: puzzled (~puzzled@83-85-211-81.cable.dynamic.v4.ziggo.nl) (Quit: Leaving)
[20:35:02] <SnoopJ> It's possible to create servers that help with the same kind of peer discovery for websockets, but applications are usually organized around a single central server, in my experience
[20:35:17] <SnoopJ> (a websocket is just a kind of connection, which is irrelevant for the sake of discussing peer networking)
[20:36:17] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[20:36:22] <grandrew> webrtc does this already
[20:36:33] <SnoopJ> https://en.wikipedia.org/wiki/Peer-to-peer#Unstructured_networks
[20:37:00] <VaniaPy> I need to set a delay to a function with the following condition: If a value has changed during the past 30 minutes then execute() . How can i achieve that? I tried datetime.now() - timedelta(minutes=30)
[20:37:33] *** Joins: magla (~gelignite@55d41339.access.ecotel.net)
[20:37:43] <zumba_addict> checking out webrtc. I remember playing with this when I attended an AT&T meetup 3 years ago
[20:38:04] *** Joins: whaley (~whaley@097-082-197-228.res.spectrum.com)
[20:38:18] <SnoopJ> zumba_addict, your questions seem to be more about the concept of peer-to-peer systems in general. I would recommend that wikipedia article I linked, it has lots of basic info and plenty of links to further reading.
[20:38:38] <zumba_addict> Yep, I'll read it soon. Thank you
[20:39:07] *** Joins: sazawal (~sazawal@122.161.92.186)
[20:40:20] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[20:43:06] <grandrew> VaniaPy, you probably want to time.sleep() for that period in the main thread, in a pseudo-thread or in a separate process. And I'd just check for time.time()-ts>60*30
[20:43:12] *** Joins: tobybl (~tobybl@213.31.132.151)
[20:44:29] *** Joins: de-facto (~de-facto@user/de-facto)
[20:44:33] *** Joins: lethu (~lethu@user/lethu)
[20:44:38] *** Joins: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:45:52] <grandrew> ok I almost found a way to run unmodified Python OOP code on GPU, massively parallel with unrolled kernel
[20:46:33] *** Quits: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[20:46:45] *** Joins: p-i- (~Ohmu@mx-ll-183.89.37-34.dynamic.3bb.co.th)
[20:47:49] *** Joins: vladoski (~foo@2001:b07:add:d406:75a4:815:4160:aae9)
[20:47:57] *** Quits: LuksNuke (~LuksNuke@gateway/tor-sasl/luksnuke) (Ping timeout: 276 seconds)
[20:47:57] *** Joins: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:48:06] *** Joins: diogenese (~diogenese@diogenese.velotech.net)
[20:48:44] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[20:50:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[20:50:57] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[20:51:17] *** Joins: mickey8 (~user@user/mickey)
[20:51:47] *** Quits: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[20:52:10] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:f044:3442:7a5a:a88)
[20:52:28] *** Joins: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke)
[20:52:38] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[20:53:09] *** Joins: Auron (~Auron956@user/auron)
[20:53:20] *** Quits: grooverman (~grooverma@177.102.117.95) (Read error: Connection reset by peer)
[20:53:37] *** Quits: Enitin (~Enitin@82.102.22.84) (Ping timeout: 240 seconds)
[20:54:23] *** Joins: sandb0y (~pirate@user/sandb0y)
[20:54:53] *** Joins: gopar (~gopar@c-67-164-79-22.hsd1.ca.comcast.net)
[20:56:57] <VaniaPy> grandrew ok,so i can set time.sleep(1800) and after that execute the function right?I think time.time()-ts>60*30 is useless
[20:57:17] *** Joins: grooverman (~grooverma@177.102.117.95)
[20:57:17] *** Joins: random_executor (~dexum@94.129.70.29)
[20:57:24] <random_executor> hi
[20:57:25] *** Quits: ovnicraft (~ovnicraft@corp-179-49-44-28.uio.puntonet.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:57:51] *** Quits: LuksNuke_ (~LuksNuke@gateway/tor-sasl/luksnuke) (Remote host closed the connection)
[20:57:52] *** Joins: djapo (~archangel@user/djapo)
[20:57:53] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[20:57:54] <random_executor> is it okay to ask programming questions here?
[20:58:18] <grandrew> VaniaPy, ts in that formula is the time of last modification of your value - you should update it when value is modified, like in a setter or manually
[20:58:18] <SnoopJ> "Anything Python is on-topic."
[20:58:24] *** Joins: maplefinger (~maplefing@user/lindis)
[20:58:25] *** Joins: Enitin (~Enitin@82.102.22.84)
[20:58:46] *** Quits: tWqaq (~tWqaq@240e:389:5dd3:9000:7529:de4a:6c63:7d7) (Quit: Leaving)
[20:58:55] <random_executor> alright so i am having a problem right now i am trying to make a sample program that's in venv
[20:59:10] <random_executor> pip install .
[20:59:13] <random_executor> every thing is dandy
[20:59:29] <random_executor> however whenever i call the program (from its entry point)
[20:59:57] <random_executor> it works fine, but it says module not found for another module the main.py uses
[21:00:04] <BinarySavior> random_executor did you activate the virutal environment before running pip install?
[21:00:10] <random_executor> or imports sort to say
[21:00:15] <VaniaPy> ok
[21:00:22] <random_executor> yep yep i set up the venv
[21:00:26] <random_executor> before i started developing
[21:00:37] <BinarySavior> setting up the venv is different than activating
[21:00:44] <random_executor> also activated it
[21:00:44] <BinarySavior> what OS are you on?
[21:00:47] <BinarySavior> oh okay
[21:00:51] <random_executor> . /bin/activate
[21:00:55] <random_executor> linux
[21:01:09] <grandrew> random_executor, use poetry/pyproject.toml it's easy and solves most common scenarios
[21:01:33] *** Joins: grooverman_ (~grooverma@177.102.117.95)
[21:01:48] *** Joins: Midjak (~Midjak@may53-1-78-226-116-92.fbx.proxad.net)
[21:01:50] <SnoopJ> It doesn't sound like their problem is the installation, it sounds like the interpreter used for installation isn't the same one they're trying to run it with.
[21:01:58] <random_executor> it's fine,  but what is causing the problem here? why cant my program import a module that's in the same directory
[21:02:52] <random_executor> they are both in site-packges/my_project
[21:02:55] <BinarySavior> do you see (venv) in your bash next to the current directory?  like (venv) ~/projects/myapp $
[21:03:01] <grandrew> ow I had similar problem when Python was getting confused if I ran it from same directory as install
[21:03:08] <random_executor> yes, binary. I do.
[21:03:16] <random_executor> wait
[21:03:36] <random_executor> did you say you had the same problem if you ran it from the same directory as the setup.py ?
[21:03:45] *** Joins: emf (~emf@2620:10d:c091:480::1:44aa)
[21:03:51] <random_executor> let me check
[21:04:17] <random_executor> nope, moved to a different directory, I got the problem
[21:05:05] *** Quits: grooverman (~grooverma@177.102.117.95) (Ping timeout: 256 seconds)
[21:05:09] <BinarySavior> random_executor have you moved the location of your venv after creating it?
[21:05:32] <random_executor> nope, it's in the same place as my setup.py
[21:05:56] <random_executor> the venv successfuly installed a normal library style package
[21:06:07] <random_executor> i can in import it in python -c and all
[21:06:27] <random_executor> but somehow it doesnt work in my package
[21:06:28] <BinarySavior> from your activated venv bash, can you show the output of pip list and which pip?
[21:07:04] <random_executor> .../virt/bin/pip
[21:07:07] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[21:07:08] <grandrew> I'd just check everything, like starting with if the file is even present in venv/lib
[21:07:29] <random_executor> Package         Version
[21:07:31] <random_executor> --------------- -------
[21:07:33] <random_executor> pip             21.3.1
[21:07:35] <random_executor> pkg_resources   0.0.0
[21:07:37] <random_executor> setuptools      60.0.3
[21:07:39] <random_executor> simple-math     0.1
[21:07:41] <random_executor> w-press-program 1.0
[21:07:43] <random_executor> wheel           0.37.0
[21:07:45] <random_executor> y
[21:07:47] <random_executor> w-press-program is the problem program
[21:07:56] <random_executor> simple-math is the library package that worked
[21:08:04] <BinarySavior> random_executor use a pasting service next time, such as https://bpaste.net/
[21:08:13] <random_executor> gotchya
[21:08:38] *** Quits: arinov (~arinov@5.24.160.5) (Ping timeout: 260 seconds)
[21:08:47] <BinarySavior> what's the github link of the project you're trying to set up?
[21:08:51] <grandrew> is there any irc-to-bash backdoor drop-in? :) we could just publicly type into console haha
[21:09:11] <random_executor> it's not a project on github, but if you want me to upload it on github i am willing
[21:09:35] *** Joins: visl (visl@user/visl)
[21:09:43] <BinarySavior> how are you invoking setup.py?
[21:10:34] *** Joins: emf_ (~emf@2620:10d:c091:480::1:44aa)
[21:11:32] *** Quits: remote (~self@user/hackers) (Ping timeout: 240 seconds)
[21:11:55] <random_executor> i did both pip install . and python3 setup.py install
[21:11:57] *** Quits: emf (~emf@2620:10d:c091:480::1:44aa) (Ping timeout: 240 seconds)
[21:12:40] <jinsun> how do you run it?
[21:12:47] <BinarySavior> try the same thing but instead of typing python3 just type python
[21:13:08] *** Quits: beastDivision (~beastDivi@user/beastdivision) (Remote host closed the connection)
[21:13:35] *** Quits: moog (~moog@107.126.53.224) (Read error: Connection reset by peer)
[21:13:35] *** Joins: beastDivision (~beastDivi@user/beastdivision)
[21:13:48] <random_executor> heh zsh: command not found: python
[21:13:53] <jinsun> and by "it" I meant your program, not pip or setup.py
[21:14:08] <BinarySavior> random_executor can you show the output of command: which python3
[21:14:09] *** Quits: zensei (~zensei@user/zensei) (Ping timeout: 256 seconds)
[21:14:15] *** Joins: moog (~moog@107.126.53.224)
[21:14:25] <random_executor> /usr/bin/python3
[21:14:30] <BinarySavior> that's the problem
[21:14:32] *** Quits: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net) (Remote host closed the connection)
[21:14:54] <BinarySavior> it's not running python from your venv, it's running python from /usr/bin/python3
[21:15:00] <random_executor> weird
[21:15:18] <random_executor> but even then
[21:15:23] *** Joins: withered_wolf (~withered_@1437135-v103.1561-static.stchilaa.metronetinc.net)
[21:15:27] <random_executor> pip install showing that behaviour
[21:15:34] <BinarySavior> are you sure you haven't moved the location of your virtual environment after it was created?  have you changed the name of any of its containing folders?
[21:15:50] <random_executor> no let me set it up from the start
[21:16:16] <random_executor> i will probably end up deleting simple-math since i deleted the whole thing
[21:17:00] <random_executor> okay clean folder and deactivated my venv
[21:18:07] <random_executor> fresh virtual environment with pip and setuptools updated
[21:18:08] *** Joins: Betal (~Betal@user/betal)
[21:18:09] <random_executor> what next
[21:18:31] <BinarySavior> activate the environment, type which python
[21:18:50] <random_executor> ../virt/bin/python3
[21:18:54] <BinarySavior> nice
[21:19:08] <BinarySavior> that's good
[21:19:11] <random_executor> this is my file tree btw
[21:19:20] <random_executor> README.md  requirements.txt  setup.py  src  virt
[21:19:37] <BinarySavior> that works
[21:19:37] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[21:20:07] <BinarySavior> I keep my venvs outside of my project directory because it's less hassle with VCS
[21:20:13] <random_executor> aha
[21:20:17] <random_executor> so what do i do now?
[21:20:21] <BinarySavior> also you can re-use venvs for different / similar projects
[21:20:36] <BinarySavior> the same thing we do every day, random_executor, try to take over the world
[21:20:58] <BinarySavior> you should be able to run pip install _____ and run your program as expected
[21:21:13] <random_executor> wait a minute
[21:21:27] <random_executor> pip install [what exactly here?]
[21:21:36] <BinarySavior> depends on the requirements of your project
[21:21:38] <random_executor> I use a . and sometimes -e .
[21:22:11] <BinarySavior> pip install -r requirements.txt
[21:22:55] <BinarySavior> requirements.txt should contain a list of packages required for your project to run correctly.  "pip install ." should do the same thing by my guess, though i've never used that syntax
[21:23:10] <random_executor> eh... that requirements.txt is from an old freeze
[21:23:33] <random_executor> i want to install my program that's in src and has its info in setup.py
[21:23:51] *** Quits: VaniaPy (~VaniaPy@46.12.245.39.dsl.dyn.forthnet.gr) (Quit: Connection closed)
[21:23:55] <BinarySavior> okay well then just try to invoke your setup.py, and then when it says, "import error: package not found" then just type pip install ________  and fill in the blank with whatever package caused the import error
[21:24:20] <BinarySavior> be careful running code you don't understand how it works or where it came from though
[21:24:27] <BinarySavior> there's lots of malicious code out there
[21:24:37] *** Quits: emf_ (~emf@2620:10d:c091:480::1:44aa) (Ping timeout: 240 seconds)
[21:24:55] <random_executor> I mean, the code is my own
[21:25:01] <random_executor> I am trying to learn how to package it
[21:25:16] <random_executor> okay got no error codes
[21:25:51] <random_executor> w_press_program-1.0-py3.8.egg to .../virt/lib/python3.8/site-packages  was the last message
[21:25:59] <yitz> Someone shared a presenter (YouTube/py conf?) who was talking about how people need to stop using classes when functions should suffice and how people should stop defining new Exceptions when they can just use existing ones. Does that ring a bell..
[21:26:03] <yitz> ... for anyone?
[21:26:51] <BinarySavior> sorry, nope, but I did write a class one time then regretted it thinking it was unnecessary
[21:26:51] <random_executor> nope got the same error i will paste bin it for you
[21:27:06] <jinsun> yitz: this one? https://www.youtube.com/watch?v=o9pEzgHorH0
[21:27:23] <random_executor> yeah, i remember a video about Functional programming vs Object Oriented programming
[21:27:30] <random_executor> I think it was a female presenter?
[21:27:36] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[21:27:38] <random_executor> I could be mistaken
[21:29:38] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Ping timeout: 260 seconds)
[21:29:54] <random_executor> let me try
[21:29:54] *** Joins: ano (~ano@user/ano)
[21:30:09] <random_executor> hey Binary, you still there?
[21:31:49] *** Quits: grooverman_ (~grooverma@177.102.117.95) (Remote host closed the connection)
[21:32:40] <yitz> jinsun: Yes!! Thank you!
[21:33:10] *** Joins: grooverman (~grooverma@177.102.117.95)
[21:33:29] *** Joins: emf (~emf@2620:10d:c091:480::1:44aa)
[21:33:42] <random_executor> guess i will try again tomorrow
[21:33:53] <random_executor> I will not stop until I get this stuff correct
[21:34:02] *** Quits: random_executor (~dexum@94.129.70.29) (Quit: WeeChat 2.8)
[21:36:54] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[21:37:34] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[21:37:37] *** Quits: vakera_pingveno (~dan@2600:1700:21f9:b150::30) (Ping timeout: 240 seconds)
[21:37:40] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[21:38:30] *** Quits: lethu (~lethu@user/lethu) (Ping timeout: 260 seconds)
[21:38:52] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[21:39:12] *** Quits: MajorBiscuit (~MajorBisc@c-001-001-037.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.3)
[21:39:52] <dob1> if I do base64.b64decode(s)  s can be a string too, right?
[21:40:49] <SnoopJ> dob1, b64decode() takes either a bytes-like object or a string, yes
[21:41:18] *** Quits: beencubed (~beencubed@209.131.238.248) (Quit: Leaving)
[21:41:43] <jinsun> it should be ascii only if string
[21:41:47] <dob1>  fh.write(base64.decodebytes(attachment.filedata))   attachment.filedata is str    I got TypeError: expected bytes-like object, not str
[21:41:59] <dob1> ah I am using the wrong one
[21:43:52] *** Quits: wingsorc__ (~wingsorc@user/wingsorc) (Quit: Leaving)
[21:44:07] *** Joins: Dotz0cat (~Dotz0cat@173.186.193.207)
[21:46:38] *** Quits: NotSatoshi (~NotSatosh@user/NotSatoshi) (Remote host closed the connection)
[21:47:25] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[21:47:53] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[21:48:20] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[21:50:25] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 256 seconds)
[21:50:33] *** Joins: lethu (~lethu@user/lethu)
[21:53:17] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[21:55:25] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:c11a:5522:24e0:4158)
[21:55:43] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:56:29] *** Joins: aniketgm (~Aniket@49.36.109.81)
[21:57:17] *** Quits: emf (~emf@2620:10d:c091:480::1:44aa) (Ping timeout: 240 seconds)
[21:57:42] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[21:58:11] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[21:59:50] *** Joins: beencubed (~beencubed@209.131.238.248)
[22:01:20] *** Quits: nomic (~nomic@185.217.117.126) (Quit: Leaving)
[22:02:00] *** Joins: upsala (~zcb@185.209.196.169)
[22:02:19] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 256 seconds)
[22:02:21] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[22:03:27] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Ping timeout: 256 seconds)
[22:04:16] *** Joins: howdoi (uid224@id-224.lymington.irccloud.com)
[22:05:09] *** Quits: lsrtl (~lsrtl@user/lsrtl) (Ping timeout: 256 seconds)
[22:05:37] *** Joins: emf (~emf@2620:10d:c091:480::1:44aa)
[22:05:55] *** Joins: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec)
[22:06:32] *** Joins: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[22:06:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[22:07:46] *** Quits: radu2424078 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[22:08:12] *** Joins: radu24240782 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[22:08:30] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[22:08:44] *** Joins: vakera_pingveno (~dan@2600:1700:21f9:b150::30)
[22:09:37] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-2893-5a12-7df9-5067.res6.spectrum.com) (Ping timeout: 240 seconds)
[22:11:49] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[22:12:47] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[22:13:05] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-15-50-100-215-56.dsl.bell.ca) (Ping timeout: 256 seconds)
[22:15:20] *** Joins: xkuru (~xkuru@user/xkuru)
[22:15:34] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[22:17:04] *** Joins: arinov (~arinov@213.194.126.155)
[22:19:19] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[22:21:07] *** Quits: rajkosto (~rajkosto@93-86-90-106.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[22:21:23] *** Joins: fikran (~fikran@user/fikran)
[22:23:01] <Wulf> dob1: where did you get `attachment' from? Is there no method which does the base64decode for you?
[22:24:55] *** Quits: rb (~augh@theguntretort.com) (Read error: Connection reset by peer)
[22:25:06] *** Joins: rwb (~augh@theguntretort.com)
[22:25:38] *** Joins: Themis3000 (~Thunderbi@user/themis3000)
[22:26:10] <dob1> Wulf, I found the error, I was using the wrong method, decodebytes instead of b64decode, I didn't notice
[22:27:00] *** rwb is now known as rb
[22:27:43] <leitz> If you're doing "pip list -o", is there a way to ignore OS installed packages?
[22:28:26] <SnoopJ> leitz, which OS?
[22:28:55] *** Quits: radu24240782 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[22:29:17] <leitz> SnoopJ, Void Linux. Some things I just keep with the OS, like Ansible.
[22:29:18] *** Joins: radu242407821 (~radu242@pool-96-250-79-242.nycmny.fios.verizon.net)
[22:29:45] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[22:30:01] *** Joins: tejr (~tejr@user/tejr)
[22:30:09] *** Joins: hypoon (~hypoon@pool-108-31-49-4.washdc.fios.verizon.net)
[22:30:42] <SnoopJ> leitz, if you've been installing things into the user site, --user or --path might be helpful to you. Otherwise, I would normally recommend using a separate interpreter from the system's entirely
[22:30:43] <phy1729> (It can be handy to have a venv for ansible if you have filter modules though)
[22:31:01] <SnoopJ> or at least to do things in a venv when you want [not your system config]
[22:31:22] <Wulf> dob1: glad that it's working now. But doesn't answer my question :)
[22:31:45] <leitz> I want to avoid a venv, it suits me better to use a --user option for pip.
[22:32:04] *** Quits: lethu (~lethu@user/lethu) (Quit: Leaving)
[22:32:04] *** Quits: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[22:32:08] <SnoopJ> I don't know about Void, but on Debian/Ubuntu, system packages usually end up in /usr/lib/python3/dist-packages, so you'd basically filter out anything from there
[22:32:10] *** Parts: mpan (~mysql@user/mpan) (o/)
[22:32:25] <SnoopJ> but if you've been installing things in a way that uses the user site anyway, then --user should do the trick
[22:32:31] <leitz> SnoopJ, sorry, I missed your earlier note.
[22:32:31] <dob1> Wulf, I am using cherrypi, a client post on an endpoint then I deserialize the json data, it comes from a client
[22:33:12] <dob1> Wulf, it's a bad name or could create some conflict ?
[22:33:37] *** Naan is now known as Naan`
[22:33:44] <acresearch> people, i need to run a function multiple times on separate CPU cores (array), each function will return a float number, how can i put this float number into a variable given multiprocessing?
[22:34:24] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[22:34:28] <ChrisWarrick> acresearch: what did you try? did you read multiprocessing docs? (also, multiprocessing isn’t always the best choice)
[22:34:56] <acresearch> ChrisWarrick: i read the manual, but i couldn't find how to solve this issue
[22:35:14] <ChrisWarrick> acresearch: okay, did you try Pool.map?
[22:36:05] <Wulf> dob1: no, was just wondering what type this `attachment' might be.
[22:36:16] *** Quits: zumba_addict (~zumba_add@2601:240:4500:8320:224:1dff:fec8:64f6) (Quit: Client closed)
[22:36:28] <SnoopJ> leitz, here's the difference on my (Ubuntu 20.04) system: https://bpa.st/TS5Q
[22:36:41] *** Quits: aniketgm (~Aniket@49.36.109.81) (Quit: leaving)
[22:36:49] <Wulf> dob1: but if that's what cherrypy gives you and it doesn't know anythign about the contents, it's fine
[22:36:51] <leitz> SnoopJ, I need to go back and look at the logs. IIUC, pip was getting confused on the two paths.
[22:36:55] *** Parts: velix (~velix@user/velix) (Leaving)
[22:37:11] <SnoopJ> leitz, confused how?
[22:37:13] *** Joins: red-bear (~red-bear@12.246.229.170)
[22:37:23] <acresearch> ChrisWarrick: let me try Pool
[22:38:42] *** Quits: SnoopJ (~snoopj@user/snoopj) (Remote host closed the connection)
[22:39:00] *** Joins: SnoopJ (~snoopj@user/snoopj)
[22:40:36] *** Joins: mwichmann (~mats@209-188-119-117.taosnet.com)
[22:41:10] *** Joins: Seto_Kaiba (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[22:41:26] <dob1> Wulf, attachment is a class I created
[22:42:05] <acresearch> ChrisWarrick: pool.startmap is causing a lot of clashes, i am not sure why, gives me KeyboardInterrupt,,, let me try again
[22:42:33] *** Quits: ovnicraft (~ovnicraft@ftth-179-49-44-28.cue.celerity.ec) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:42:35] <ChrisWarrick> acresearch: are you pressing ctrl-c?
[22:42:51] <ChrisWarrick> acresearch: also, startmap?
[22:42:54] <acresearch> ChrisWarrick: no,,, it is wierd,   let me try again and be more careful
[22:43:13] <acresearch> ChrisWarrick: that is what i found pool.startmap()
[22:43:28] <ChrisWarrick> acresearch: did you mean starmap?
[22:43:33] <acresearch> ChrisWarrick: do you have a better suggestion?
[22:43:35] <ChrisWarrick> acresearch: be precise and paste your code
[22:43:44] <acresearch> sorry   yes star map
[22:43:54] <ChrisWarrick> acresearch: you probably want plain map
[22:43:57] *** Quits: x88x88x (~x88x88x@149.28.53.172) (Ping timeout: 240 seconds)
[22:43:59] <ChrisWarrick> acresearch: although paste your code first
[22:44:21] <acresearch> ChrisWarrick: let it finish its run and i will paste my code  (making sure there is no errors - to not waste time on minor errors)
[22:44:33] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Ping timeout: 268 seconds)
[22:45:00] *** Quits: emf (~emf@2620:10d:c091:480::1:44aa) (Read error: Connection reset by peer)
[22:45:01] <leitz> SnoopJ, a pip error when running with --user, but  astroid is installed via the OS.     pylint 2.11.1 requires astroid<2.9,>=2.8.0, but you have astroid 2.9.0 which is incompatible.
[22:45:05] *** Quits: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com) (Quit: Haxxa flies away.)
[22:47:21] *** Joins: Haxxa (~Haxxa@202-130-211-204.ip4.superloop.com)
[22:47:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:47:52] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[22:48:16] *** Quits: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net) (Read error: Connection reset by peer)
[22:48:29] <SnoopJ> leitz, that doesn't seem like confusion on pip's part to me, 2.9.0 is indeed not less than 2.9
[22:49:58] <SnoopJ> you might want to `python3 -m pip install --upgrade --user "astroid<2.9,>=2.8.0"` to get a suitable version installed under --user
[22:50:19] <leitz> SnoopJ, https://bpa.st/LESA
[22:50:36] *** Joins: demophoon4 (~demophoon@c-24-21-106-28.hsd1.or.comcast.net)
[22:50:43] *** Joins: emf (~emf@2620:10d:c091:480::1:e0fe)
[22:51:08] <leitz> SnoopJ, what I'd like to do (though I've probably mucked it up) is minimally install OS python stuff, and then use --user or --path (need to research that one) for everything else.
[22:52:01] <SnoopJ> --path is just for pip list, I don't think there's a direct equivalent for pip install
[22:52:24] *** Quits: tdsmith (~tdsmith@kvm.kumokasumi.org) (Read error: Connection reset by peer)
[22:53:05] <acresearch> ChrisWarrick: you want the full code, or just the bit i am working on?  (the rest is just functions)
[22:53:24] *** Quits: rindolf (~shlomif@inkscape/dev/shlomif) (Ping timeout: 240 seconds)
[22:53:29] <ChrisWarrick> acresearch: potentially runnable code that explains your problem
[22:53:30] <acresearch> ChrisWarrick: https://paste.debian.net/1224462/   just the multiprocess bit
[22:53:38] <Cheaterman> Bliblibli buddiez I hope everybody is doing goodie!
[22:54:03] <acresearch> ChrisWarrick: you won't be able to run the full code, will require molecules and databases that will take a long time to download :-(
[22:54:06] <randall> Hmpf, so I'm running `python3 -m pdb ./myprogram.py`, and at the breakpoint I want to access an object named "r", e.g. `r.status_code`. Now that just causes the debugger to error out because 'r' is shortcut for 'run'. Is there a smart way around other than renaming the object?
[22:54:08] <SnoopJ> leitz, your paste makes it seem like you have astroid installed in both the user site and the system one, at the same version. The --upgrade command I suggested would let you downgrade, or I think --force-reinstall would do the trick as well and is perhaps less misleadingly named.
[22:54:13] *** Joins: mimmy (~mimmy@69.174.8.146)
[22:55:16] *** Joins: tdsmith (~tdsmith@kvm.kumokasumi.org)
[22:55:19] *** Parts: red-bear (~red-bear@12.246.229.170) ()
[22:55:25] <SnoopJ> randall, try `print(r)`
[22:55:57] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[22:56:26] <Cheaterman> I'm still working on my embedded Python plugin thingy, and I noticed something funny today ; I need to dlopen() libpython because I'm embedding into a dynlib (not a standalone executable), and I noted that on some platforms, if I don't use RTLD_NOW, I get undefined symbols. Not necessarily surprising ; but I was certain this was documented somewhere on Python docs and it apparently isn't. My actual
[22:56:32] <Cheaterman> question is: for the platforms that weren't getting undefined symbols immediately, could the missing RTLD_NOW lead to undefined behaviors? Say strange crashes, "malloc(): invalid next size" and that type of thing
[22:56:46] <ChrisWarrick> acresearch: I typically don’t run code. But I also need to see your `dock` function and how your data looks.
[22:56:48] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:c11a:5522:24e0:4158) (Quit: Client closed)
[22:57:00] <acresearch> ChrisWarrick: ok 1 second
[22:57:46] *** Joins: legitkrillin (~james@80.111.32.8)
[22:57:55] <leitz> SnoopJ, the OS astroid is 2.8.0.
[22:58:48] <SnoopJ> randall, I often find myself dropping to a Python REPL from pdb using the `interact` command, which would also circumvent this issue. But in reality, I use PUDB which has a nice variable tracker anyway: https://i.imgur.com/LQlvwWp.png
[22:59:44] <SnoopJ> leitz, ah, I guess it's still picking up the user site one in the right column, then. Either way, the user package will dominate for whatever you're installing that depends on it. You need to either downgrade that package, or rethink how you want to do isolation.
[23:00:08] <acresearch> ChrisWarrick: https://paste.debian.net/1224465/
[23:00:55] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:c11a:5522:24e0:4158)
[23:01:57] *** Quits: vd33 (~vd33@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca) (Quit: Client closed)
[23:02:31] *** Joins: vd33 (~vd33@bras-base-mtrlpq2848w-grc-41-70-53-240-211.dsl.bell.ca)
[23:02:32] <ChrisWarrick> acresearch: starmap might work, but to benefit from multiprocessing, you’d need a list of tuples
[23:03:01] <acresearch> list of tuples where? which part?
[23:03:06] <ChrisWarrick> acresearch: also, if your data structures are large, it might be expensive to send them to the subprocesses
[23:03:14] <ChrisWarrick> acresearch:     Energy = pool.starmap(dock, [(molecule, receptor, box, 1, exhaust)])
[23:03:34] *** Joins: ocherno (~ocherno@12.235.230.69)
[23:03:44] <acresearch> what do you mean by a large data structure, what does that look like?
[23:03:58] <ChrisWarrick> acresearch: depends.
[23:04:29] <SnoopJ> hmm, does postponed evaluation mean that `arg: iterable` might be a meaningful annotation in the future? That would be neat.
[23:04:55] <acresearch> ChrisWarrick: give me an example of a large data structure so i can understand
[23:05:41] <ChrisWarrick> acresearch: "large" is often subjective and depends on your hardware and the specific structure
[23:05:46] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 245 seconds)
[23:05:56] <ChrisWarrick> acresearch: but if you have some databases that require a long time to download, perhaps those are large
[23:07:45] *** Joins: exarkun (~exarkun@user/exarkun)
[23:08:28] <exarkun> cbor2 `setup_requires` setuptools_scm.  cbor2 supposedly supports Python 2 but the latest setuptools_scm doesn't.  yet the latest setuptools_scm is what gets used when installing cbor2 on Python 2.
[23:08:28] <acresearch> ChrisWarrick: true,    but the download is pre-script running,   i basically generate a molecule (from a database) on the fly and dock it, the dock process takes a while,,, so i am trying to run multiple docks at the same time
[23:08:45] <exarkun> is there any way to make this work on Python 2 that doesn't involve getting changes into either cbor2 or setuptools_scm?
[23:09:52] <acresearch> ChrisWarrick:  so this is a but confusing, how can i change the pool.starmap() to include the list of mols instead of having to manually add it?
[23:10:09] <leitz> SnoopJ, yeah. The issue is that I didn't think/know about the --user option before.
[23:10:23] <SnoopJ> exarkun, install a version of setuptools_scm that is >= 1.7.0 (cbor2's req) but still compatible with 2.x. I would probably go for 1.17.0, the last in the 1.x series.
[23:10:29] <ChrisWarrick> acresearch: I don’t understand your question
[23:10:33] <exarkun> SnoopJ: How?
[23:11:13] <SnoopJ> exarkun, exactly how you'd install a particular version of any other library: `python2 -m pip install "setuptools_scm==1.17.0"`
[23:12:00] <exarkun> SnoopJ: I'd add it to a requirements list somewhere.  I tried adding it to my `install_requires` in setup.py and it didn't make a difference.
[23:12:14] <exarkun> SnoopJ: If I type pip myself is that going to make some difference?  What?  Why?
[23:12:14] <SnoopJ> *your* install_requires, or cbor2's?
[23:12:19] <acresearch> ChrisWarrick: ok look at line 50, the function will generate 1000 molecules and i am choosing the first 2,,,   then to line 55 about the pool i want to run these two separate molecules (from mols  so mols[0] and mols[1]) as two deparate dock()   keeping all other arguments the same
[23:12:24] <exarkun> SnoopJ: mine, I can't touch cbor2's
[23:12:46] <SnoopJ> that's a shame because this is a bug in cbor2 if they're still supporting py2
[23:13:02] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Ping timeout: 240 seconds)
[23:13:06] <exarkun> I agree
[23:13:11] <SnoopJ> exarkun, you need to satisfy the requirement before cbor2 tries to make its own request for something >=1.7.0, which is going to just go straight into the 2.x series
[23:13:13] <acresearch> ChrisWarrick: did you get it?
[23:13:14] <ChrisWarrick> acresearch: yes
[23:13:56] <ChrisWarrick> acresearch: use functools.partial to build a function that takes everything but the molecule, then get rid of your for loop and just do p.map(dock_with_all_arguments, mols)
[23:13:59] <SnoopJ> err, sorry, not the 2.x series
[23:14:13] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-800a-95c0-a608-9494.res6.spectrum.com)
[23:14:17] <acresearch> ChrisWarrick: ok let me try
[23:14:33] <SnoopJ> since they're well past that, and it looks like 2.x supports py2 anyway. the point is, cbor2's requirement isn't as specific as it should be
[23:15:55] *** Joins: akahs (Shaka@user/shaka)
[23:16:36] <exarkun> SnoopJ: Okay.  Pre-installing setuptools_scm does seem to fix it.  I'm surprised.  I thought `setup_requires` things went into their own environment.  Now I have no idea how it works.
[23:17:02] *** Parts: sebres (~sebres@pronat.wincor-nixdorf.com) (Leaving)
[23:18:00] <acresearch> ChrisWarrick: i am not sure how to build the dock function as a partial function,,, is this correct?   XXX = functools.partial(dock(conserve, mutate=True), mol)
[23:18:06] <ChrisWarrick> acresearch: no
[23:18:07] <SnoopJ> exarkun, it's not really an environment problem, it's "cbor2's requirement is straight-up wrong for py2"
[23:18:25] <ChrisWarrick> acresearch: https://docs.python.org/3/library/functools.html#functools.partial
[23:19:11] <exarkun> SnoopJ: Sure, I get that
[23:19:17] *** Quits: miique_ (~miique@181.46.139.166) (Ping timeout: 240 seconds)
[23:19:27] <exarkun> SnoopJ: I don't understand how `setup_requires` works.
[23:19:43] <SnoopJ> exarkun, you mean the actual mechanism that installs the packages?
[23:19:47] <exarkun> SnoopJ: yes
[23:19:53] <acresearch> ChrisWarrick: i am having difficulty understanding the example and how to port it into my dock function
[23:20:08] <SnoopJ> exarkun, with pip it's basically the same machinery you get when you run pip install
[23:20:17] <exarkun> SnoopJ: If I `pip install cbor2` I do not end up with `setuptools_scm`, so I am surprised that if I *start* with `setuptools_scm` then `pip install cbor2` will _use_ it.
[23:20:33] <ChrisWarrick> acresearch: dock_with_stuff = functools.partial(dock, receptor=receptor, box=box, cpu=1, Exhust=exhaust)
[23:20:55] <SnoopJ> exarkun, one sec, let me check locally
[23:21:08] <exarkun> To be clear, it does
[23:21:15] <exarkun> I'm just surprised.
[23:21:16] *** Joins: x88x88x (~x88x88x@149.28.53.172)
[23:21:17] *** Quits: emf (~emf@2620:10d:c091:480::1:e0fe) (Ping timeout: 240 seconds)
[23:21:34] <acresearch> ChrisWarrick: and then Energy = pool.map(dic_with_stuff, mols)   ?
[23:21:40] <ChrisWarrick> acresearch: yes
[23:21:53] <SnoopJ> exarkun, I just ran `python2 -m pip install cbor2` and it tried to install setuptools_scm-6.3.2. Does this system already have a non-py2 compatible setuptools_scm installed when you `pip install cbor2` ?
[23:21:55] *** Joins: emx (~emx@adsl-84-226-68-198.adslplus.ch)
[23:22:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[23:22:41] *** Joins: teut (~teut@106.202.152.122)
[23:22:44] <SnoopJ> looks like they dropped it somewhere between 5.0.0 and 6.0.0
[23:22:59] <SnoopJ> ah, in 6.0.0 itself, makes sense
[23:23:52] *** Quits: Naan` (~Naan@user/naan) (Quit: Leaving)
[23:24:00] *** Joins: Naan (~naan@user/naan)
[23:24:02] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[23:24:19] <SnoopJ> so yea, cbor2 should really be asking for "setuptools_scm>=1.7.0,<6.0.0", or other trickery that would let them use different requirements for py2 and py3 if they wanted the really modern stuff on 3.x
[23:24:27] <ocherno> AWS linux has python 3.7 by default, they do offer Python 3.8 repo that I've enabled... how do I update python3 point to python3.8? Should I just replace sym link?
[23:24:57] <SnoopJ> ocherno, their 3.8 package doesn't do that for you? :(
[23:25:05] <ocherno> no
[23:25:05] <acresearch> ChrisWarrick: ok i think it is working well,   will take 10 minute to finish the test run
[23:25:26] <acresearch> ChrisWarrick: in multiprocessing.Pool(2)  what does 2 represent?  the number of cores?
[23:25:36] <ChrisWarrick> acresearch: the number of concurrent processes
[23:25:43] <acresearch> ChrisWarrick: ahhh
[23:26:18] <acresearch> so if i have mols=list of 30 items    and i want to run the 30 item twice  Pool(2)    but if i want to run them once Pool(1)?
[23:26:22] <ChrisWarrick> acresearch: no
[23:26:36] <ChrisWarrick> acresearch: it will only do the thing once
[23:26:39] <bjs> acresearch: the idea is that there is a "pool" of processes you submit the jobs to
[23:26:59] <acresearch> i do not get it
[23:27:09] <exarkun> SnoopJ: setuptools_scm 6.3.2 is not Python 2 compatible
[23:27:11] <ChrisWarrick> acresearch: but if your pool is of size 2, it will theoretically do it twice as fast as normally (assuming you have 2+ cores and each job takes at most 100% of one core)
[23:27:25] <bjs> acresearch: Pool(4) means it spawns 4 processes.  As you submit jobs to the pool, it picks a process and that process does the work
[23:27:30] <exarkun> SnoopJ: So I don't quite understand the question
[23:27:39] <exarkun> SnoopJ: All of my testing is in fresh virtualenvs, fwiw
[23:27:42] *** Quits: darkstarx (~darkstard@50.39.115.145) (Quit: Leaving)
[23:27:43] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 268 seconds)
[23:28:05] *** Joins: Hackerpcs (~user@user/hackerpcs)
[23:28:07] <acresearch> so Pool(number of CPUs)   ?
[23:28:10] <bjs> acresearch: no
[23:28:11] <acresearch> or cores
[23:28:14] <bjs> acresearch: Pool(number_of_workers)
[23:28:20] <acresearch> what is a worker?
[23:28:27] <bjs> acresearch: the thing that does the work
[23:28:38] <acresearch> bjs: so the core of the cpu?
[23:28:42] <bjs> acresearch: you submit() jobs to the pool (e.g. a function) and the worker is a process that actually does the work
[23:28:42] <SnoopJ> exarkun, right, but it's what pip is going to go for if at any point it tries to satisfy cbor2's requirement against current PyPI
[23:28:46] <bjs> acresearch: no, a process
[23:28:56] <acresearch> i am totally confused now
[23:28:58] <bjs> you can have a process pool on a single-core machine
[23:28:59] <acresearch> :(
[23:29:18] <bjs> acresearch: okay, the idea of a process pool is you have some jobs (functions) you want to do (call) in another process.
[23:29:55] <SnoopJ> exarkun, which is why you have to get this package just-so before you install cbor2. It sounds like maybe you have setuptools_scm already in the environment because of some other package you're depending on, but still one that is >=6.0.0 where py2 was dropped
[23:29:55] <bjs> acresearch: but instead of making a new process for each job, what you do is have a fixed set of processes. Say, 10.  These 10 processes do all the work. If you submit 30 jobs each process does 3 bits of work (on average).
[23:30:22] <exarkun> SnoopJ: Sorry, I'm entirely lost now
[23:30:24] *** Quits: teut (~teut@106.202.152.122) (Quit: Client closed)
[23:30:25] <acresearch> bjs: let me think about this for a second
[23:30:41] *** Joins: teut (~teut@106.202.152.122)
[23:31:22] <bjs> acresearch: basically Pool(n) does `q = Queue(); for _ in range(n): spawn_new_process(q)`  then submit(job) does `q.put(job)` and then when a process is free it can do the job
[23:31:53] <SnoopJ> exarkun, you need to install a compatible version of setuptools_scm yourself. `python2 -m pip install cbor2 "setuptools_scm>=1.7.0,<6.0.0"` works for me, for instance, because it includes a more specific requirement that sets the upper bound
[23:32:01] <acresearch> bjs: i am having difficulty understading becuase i am thinking like Process()   in terms of number of cores i want to use for computing
[23:32:26] <bjs> acresearch: "like Process()" i'm not sure what you mean
[23:32:47] <acresearch> bjs: P1 = multiprocessing.Process()
[23:32:48] <bjs> acresearch: yes one usecase of multiprocessing is to take advantage of having multiple cores
[23:32:56] <bjs> acresearch: yes,  Pool(4) creates 4 Process()es
[23:33:18] <acresearch> ok  i see
[23:33:22] <bjs> Pool(10) makes 10 of them, etc.  They sit idle until you give them work to do.
[23:33:33] <acresearch> i seeee
[23:33:45] <SnoopJ> exarkun, if at any point you `pip install cbor2` and you do not already have a compatible setuptools_scm in the calling Python's site, it's going to go get a broken one because it isn't restricted by an upper bound, and the latest ones are py3-only
[23:34:29] <acresearch> so if i want all workers (cores) to work,   Pool(n) where n==len(mols)   the number of molecules i want to run in separate cores
[23:34:46] <acresearch> in Energy = pool.map(XXX, mols)
[23:34:48] <bjs> acresearch: Pool(n) n is the number of jobs running "at once"
[23:35:01] *** Joins: Klinda (~superleag@user/klinda)
[23:35:06] <acresearch> bjs: great  i get it now
[23:35:10] *** Quits: whaley (~whaley@097-082-197-228.res.spectrum.com) (Quit: It won't give up.  It wants me dead.  Goddamn this noise inside my head.)
[23:35:59] *** Joins: lethu (~lethu@user/lethu)
[23:38:24] *** Joins: lukedashjr (~luke-jr@user/luke-jr)
[23:40:37] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Ping timeout: 240 seconds)
[23:41:00] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[23:41:05] *** lukedashjr is now known as luke-jr
[23:41:29] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Client Quit)
[23:43:24] <dob1> why black substitute all the string with quote with double quote?
[23:43:29] *** Joins: vicfred (~vicfred@user/vicfred)
[23:43:44] <SnoopJ> dob1, because that's what black thinks is preferable
[23:44:19] <dob1> ah, just a preference
[23:44:27] *** Joins: sedeki (~textual@user/sedeki)
[23:44:31] <exarkun> that is essentially what black is, a set of preferences
[23:45:01] <exarkun> that's why it is useful, so that a project can have a consistent set of preferences
[23:45:24] <exarkun> you don't need black to fix things that are wrong because, being wrong, everyone can just agree to fix them without any help
[23:45:37] *** Joins: wolfshappen (~waff@irc.furworks.de)
[23:47:38] <SnoopJ> dob1, formatters are usually "jsut" preferences, because the whole point is to change the appearance of the code without changing its semantics. Black is particularly opinionated, though :)
[23:48:40] <bjs> dob1: black wants all the strings to look the same, and the authors thought it was more likely to have a ' in the string than a "
[23:48:56] <bjs> so it uses " everywhere
[23:48:58] <dob1> ok I got it, it seems resonable
[23:49:19] <bjs> I do think this is one of the (very few) things that black lets you configure
[23:49:21] <bjs> if you really hatei t
[23:49:36] <SnoopJ> yea, -S
[23:50:02] <SnoopJ> it doesn't normalize some double-quoted strings, i.e. `print("It won't touch this one because it has ' in it")`
[23:50:23] *** Quits: legitkrillin (~james@80.111.32.8) (Quit: Leaving)
[23:50:51] *** Quits: tdsmith (~tdsmith@kvm.kumokasumi.org) (Quit: Bye!)
[23:50:52] *** Joins: goldfish (~goldfish@user/goldfish)
[23:51:09] *** Joins: tdsmith (~tdsmith@kvm.kumokasumi.org)
[23:51:28] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[23:52:53] *** Quits: darkstardevx (~darkstard@50.39.115.145) (Remote host closed the connection)
[23:53:17] *** Joins: darkstardevx (~darkstard@50.39.115.145)
[23:53:31] *** Joins: bluedust_ (~bluedust@81.92.205.29)
[23:55:44] *** Quits: Hackerpcs (~user@user/hackerpcs) (Quit: Hackerpcs)
[23:55:59] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[23:56:17] *** Quits: bluedust (~bluedust@117.222.185.255) (Ping timeout: 240 seconds)
[23:57:12] *** Joins: Hackerpcs (~user@user/hackerpcs)
[23:58:12] *** Joins: bluedust (~bluedust@185.195.232.159)
[23:58:37] *** Quits: bluedust_ (~bluedust@81.92.205.29) (Ping timeout: 240 seconds)
[23:58:42] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
