[00:11:44] *** Joins: lejocelyn_ (~lejocelyn@2a02:8109:8880:264:55ab:bdde:e3f0:e617)
[00:15:36] *** Quits: lejocelyn (~lejocelyn@ipb218ed90.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[00:55:21] *** Joins: Pickchea (~private@user/pickchea)
[01:17:53] *** Quits: lejocelyn_ (~lejocelyn@2a02:8109:8880:264:55ab:bdde:e3f0:e617) (Quit: lejocelyn_)
[03:51:17] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[04:11:09] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 250 seconds)
[11:43:17] *** Joins: palasso (~palasso@user/palasso)
[11:58:01] *** Joins: Pickchea (~private@user/pickchea)
[13:51:20] *** Joins: lejocelyn (~lejocelyn@firewall.zas-berlin.de)
[13:51:48] <lejocelyn> Hi guys
[13:52:02] <lejocelyn> is there a way to have a "count" columns ?
[13:52:04] <lejocelyn> https://paste.centos.org/view/70d0469d
[13:57:05] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 268 seconds)
[14:04:31] <lejocelyn> ok, I found : test = pd.DataFrame({'count' : data.groupby( ['corpus', 'id_text', "total_length"] ).size()}).reset_index()
[14:35:07] *** Joins: Pickchea (~private@user/pickchea)
[14:36:06] <bluss> lejocelyn: possibly .transform('size') on the groupby will get you the same thing in a shorter way here?
[14:48:53] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[15:04:08] *** Quits: lejocelyn (~lejocelyn@firewall.zas-berlin.de) (Ping timeout: 256 seconds)
[15:14:40] *** Joins: trace987 (~trace@ip5b429834.dynamic.kabel-deutschland.de)
[15:28:06] *** Joins: lejocelyn (~lejocelyn@firewall.zas-berlin.de)
[17:59:21] *** Joins: goldfish (~goldfish@user/goldfish)
[19:44:32] <lejocelyn> I'm trying to create a legend for the a sandkey plotly figure
[19:44:40] <lejocelyn> I know it doesnt really have a legend
[19:45:05] <lejocelyn> but I'm trying to figure out any hacky way that would do
[19:50:58] <lejocelyn> bluss: thanks for the idea
[20:51:03] *** Joins: Pickchea (~private@user/pickchea)
[21:19:15] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[21:40:57] <Evolver> (just sharing) One can now sort-of use scipy directly for hyperparameter optimization via a new wrapper package: https://pypi.org/project/wrapdisc/
[22:54:01] *** Quits: lejocelyn (~lejocelyn@firewall.zas-berlin.de) (Quit: lejocelyn)
[23:49:48] *** Joins: lejocelyn (~lejocelyn@95.91.244.169)
