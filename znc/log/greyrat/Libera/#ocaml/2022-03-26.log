[00:06:32] *** Quits: dextaa_ (~dextaa@user/dextaa) (Remote host closed the connection)
[00:10:12] *** Quits: chrisz (vb2m136bq8@55d46462.access.ecotel.net) (Ping timeout: 240 seconds)
[00:12:19] *** Joins: chrisz (x2vuhgd7cv@55d43265.access.ecotel.net)
[00:39:01] *** Joins: mro (~mro@port-92-195-160-163.dynamic.as20676.net)
[00:50:07] *** Joins: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net)
[00:57:13] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[01:02:06] *** Joins: mro_ (~mro@port-92-195-160-163.dynamic.as20676.net)
[01:03:17] *** Quits: mro (~mro@port-92-195-160-163.dynamic.as20676.net) (Ping timeout: 240 seconds)
[01:04:08] *** Quits: rgrinberg (~textual@fixed-186-96-26-198.totalplay.net) (Read error: Connection reset by peer)
[01:20:54] *** Joins: greaser|q (greaser@antihype.space)
[01:21:59] *** Quits: greaser|q (greaser@antihype.space) (Changing host)
[01:21:59] *** Joins: greaser|q (greaser@user/greasemonkey)
[01:22:03] *** greaser|q is now known as GreaseMonkey
[01:28:18] <d_bot> <Et7f3 (@me on reply)> do you know how to test locally ?
[01:29:30] <d_bot> <Et7f3 (@me on reply)> (well I can read .ci file ðŸ¤¦) but it is arm and IIRC homebrew changed the file layout.
[01:39:21] *** Quits: mro_ (~mro@port-92-195-160-163.dynamic.as20676.net) (Quit: Leaving...)
[01:48:31] *** Quits: Techcable (~Techcable@user/Techcable) (Remote host closed the connection)
[01:48:39] *** Joins: Techcable (~Techcable@user/Techcable)
[01:57:37] *** Quits: gravicappa (~gravicapp@46.191.232.8) (Ping timeout: 256 seconds)
[02:12:35] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 240 seconds)
[02:19:46] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[02:24:59] *** Quits: olle (~olle@c-8a89e455.034-536-6d6c6d4.bbcust.telenor.se) (Remote host closed the connection)
[02:38:58] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Quit: leaving)
[03:41:59] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Ping timeout: 260 seconds)
[03:42:44] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[03:49:17] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[03:50:35] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[03:59:07] *** Joins: bobo (~bobo@37.164.183.111)
[03:59:15] *** Quits: spip (~bobo@37.164.156.140) (Ping timeout: 260 seconds)
[03:59:29] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[04:00:18] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 252 seconds)
[04:01:10] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[04:09:59] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[04:10:37] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[04:42:06] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[04:44:31] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[04:45:31] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[04:52:17] *** Quits: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi) (Quit: Leaving.)
[04:58:31] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[04:59:31] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[05:04:36] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[05:05:50] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[05:17:17] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[05:18:40] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[05:43:24] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[05:44:39] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[06:12:43] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[06:13:34] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[07:16:36] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[07:17:51] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[07:25:18] *** Quits: shebang (~qynn@ip-96-43-235-154.dsl.netrevolution.com) (Quit: WeeChat 3.4.1)
[07:31:39] *** Quits: Haudegen (~quassel@178.115.237.87.static.drei.at) (Ping timeout: 268 seconds)
[08:11:15] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 260 seconds)
[08:12:13] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[08:40:51] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 256 seconds)
[08:40:58] *** Quits: tizoc (~user@li296-221.members.linode.com) (Quit: Coyote finally caught me)
[08:41:54] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[08:47:34] *** Joins: tizoc (~user@li296-221.members.linode.com)
[09:10:53] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 256 seconds)
[09:11:57] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[09:58:16] *** Joins: mbuf (~Shakthi@171.61.236.231)
[09:58:37] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[09:59:48] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[10:09:24] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[10:10:26] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[10:23:46] *** Quits: notnotdan (~notd@v22019068545391262.megasrv.de) (Quit: bye)
[11:16:37] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
[11:18:00] *** Joins: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340)
[11:29:41] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[11:38:07] *** Joins: gravicappa (~gravicapp@46.191.232.8)
[11:44:45] *** Quits: troydm (~troydm@host-176-37-124-197.b025.la.net.ua) (Ping timeout: 250 seconds)
[12:15:34] *** Joins: bartholin (~bartholin@109.53.1.244)
[12:26:45] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[13:18:52] *** Joins: mro (~mro@2002:5cc3:f2d6:0:807d:f690:19ba:82f6)
[13:19:33] *** Joins: namkeleser (~namkelese@101.175.155.55)
[13:45:38] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[13:48:19] *** Quits: mro (~mro@2002:5cc3:f2d6:0:807d:f690:19ba:82f6) (Remote host closed the connection)
[14:00:36] *** Quits: bartholin (~bartholin@109.53.1.244) (Ping timeout: 240 seconds)
[14:04:39] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.4.1)
[14:12:13] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[14:12:51] *** Joins: bartholin (~bartholin@109.53.0.10)
[14:19:35] *** Joins: Tuplanolla (~Tuplanoll@91-159-69-98.elisa-laajakaista.fi)
[14:26:55] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 260 seconds)
[14:30:31] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[14:30:36] *** Joins: Haudegen (~quassel@178.115.237.87.static.drei.at)
[14:30:50] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[14:40:17] *** Joins: Everything (~Everythin@37.115.210.35)
[14:59:46] *** Joins: dextaa_ (~dextaa@user/dextaa)
[15:00:32] *** Quits: bartholin (~bartholin@109.53.0.10) (Ping timeout: 272 seconds)
[15:34:35] *** Joins: bartholin (~bartholin@109.53.0.10)
[15:35:53] *** Quits: mbuf (~Shakthi@171.61.236.231) (Ping timeout: 256 seconds)
[15:42:15] *** Joins: gdd (~gdd@129.199.146.230)
[15:44:52] *** Quits: gravicappa (~gravicapp@46.191.232.8) (Ping timeout: 272 seconds)
[15:49:59] *** Joins: mro (~mro@port-92-195-242-214.dynamic.as20676.net)
[15:57:49] *** Quits: infinity0 (~infinity0@occupy.ecodis.net) (Remote host closed the connection)
[15:58:17] *** Quits: bobo (~bobo@37.164.183.111) (Ping timeout: 240 seconds)
[15:58:26] *** Joins: infinity0 (~infinity0@occupy.ecodis.net)
[15:58:27] *** Joins: bobo (~bobo@37.172.232.41)
[16:01:20] *** Quits: bartholin (~bartholin@109.53.0.10) (Ping timeout: 272 seconds)
[16:13:01] *** Joins: bartholin (~bartholin@109.53.5.68)
[16:20:12] *** Joins: mbuf (~Shakthi@110.225.247.221)
[16:22:25] *** Quits: mbuf (~Shakthi@110.225.247.221) (Remote host closed the connection)
[16:35:15] *** Quits: mro (~mro@port-92-195-242-214.dynamic.as20676.net) (Remote host closed the connection)
[16:58:38] *** Joins: mro (~mro@2002:5cc3:f2d6:0:807d:f690:19ba:82f6)
[17:02:25] *** Joins: mro_ (~mro@port-92-195-242-214.dynamic.as20676.net)
[17:04:03] *** Quits: mro (~mro@2002:5cc3:f2d6:0:807d:f690:19ba:82f6) (Ping timeout: 256 seconds)
[17:20:31] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[17:47:53] *** Quits: namkeleser (~namkelese@101.175.155.55) (Quit: Client closed)
[18:01:07] *** Quits: bartholin (~bartholin@109.53.5.68) (Ping timeout: 260 seconds)
[18:02:40] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Remote host closed the connection)
[18:02:55] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[18:10:37] *** Quits: mro_ (~mro@port-92-195-242-214.dynamic.as20676.net) (Remote host closed the connection)
[18:14:31] *** Joins: bartholin (~bartholin@109.53.6.1)
[18:17:09] *** Joins: gravicappa (~gravicapp@46.191.232.8)
[18:19:44] *** Quits: dextaa_ (~dextaa@user/dextaa) (Remote host closed the connection)
[18:58:00] *** Quits: jonasbits (~quassel@2a00:66c0:1:1::58) (Ping timeout: 268 seconds)
[18:59:43] *** Joins: jonasbits (~quassel@2a00:66c0:1:1::58)
[19:08:59] *** Quits: Absalom (kax@envs.net) (Quit: the lounge - https://webirc.envs.net)
[19:09:26] *** Joins: Absalom (kax@envs.net)
[19:18:56] <d_bot> <eokd7> Hi everyone, I am an Outreachy applicant and looking forward to learn a lot about OCAML and contribute immensely to the project I am on. I will be asking for your support and help with any difficulties I might have.  Thank you
[19:23:26] <dmbaturin> Please note that the official styling is OCaml. :)
[19:31:38] <d_bot> <eokd7> NotedðŸ˜Š
[20:01:22] *** Quits: bartholin (~bartholin@109.53.6.1) (Ping timeout: 272 seconds)
[20:14:39] *** Joins: bartholin (~bartholin@109.53.6.153)
[20:47:21] *** Joins: troydm (~troydm@host-176-37-124-197.b025.la.net.ua)
[20:58:45] *** Joins: quartz (~quartz@user/quartz)
[21:02:50] <quartz> Hello. I'm trying to implement python like indentation in my compiler. I'm using this sample code as a reference, but I'm confused on how they did it. can someone explain to me how they implemented indentation? https://bpa.st/YOOQ
[21:05:44] <d_bot> <NULL> The parser has the easy job when it comes to detecting indentation, it just learns when an indentation or a dedentation happens from the lexer
[21:06:16] <d_bot> <NULL> It doesn't detect indentation, it just interprets it
[21:06:44] <quartz> But where in the code that I posted does this happen?
[21:06:56] <sleepydog> it has already happened at this point
[21:07:23] <d_bot> <NULL> The part where indentation is interpreted is everywhere IDENT and DEDENT appear
[21:07:30] <sleepydog> there is a lexer that decides what an indentation is
[21:07:51] <d_bot> <NULL> As sleepydog says, the part where indentation is detected is in the lexer, earlier in the chain
[21:08:24] <sleepydog> python lets devs choose to use any # of spaces or a tab for indentation, so i imagine that part is complicated for python
[21:09:45] <sleepydog> but the lexer would have to keep track of the current level of indentation to detect when a dedent happens. maybe in a global variable
[21:10:14] <sleepydog> ident too, i guess. i dislike significant whitespace :)
[21:10:30] <quartz> Hmmmm OK
[21:10:44] <d_bot> <NULL> If you do it the FP way, it would be an additional argument in the lexer function, this way it's not mutable
[21:13:24] <quartz> Hmmm OK let me try to find the file where they implement the lexer
[21:13:43] <d_bot> <NULL> Look for a mll file
[21:14:06] <quartz> They only have .ml and .mly files
[21:14:36] <d_bot> <NULL> Then the lexer isn't generated through ocamllex, so I guess look for "lexer" or something
[21:15:27] <quartz> Oh there's one mll called scanner.mll
[21:16:15] <sleepydog> sounds promising
[21:17:58] <quartz> I'm assuming that lines 52 and 54 are where they implement it? https://bpa.st/MU6Q
[21:18:11] *** Quits: xgqt (~xgqt@gentoo/developer/xgqt) (Read error: Connection reset by peer)
[21:18:58] <sleepydog> the rule on line 120
[21:20:51] <quartz> Uhhh
[21:21:03] <d_bot> <NULL> Using `(==)` on ints, not a good idea
[21:22:06] <sleepydog> NULL: would that ever give an unexpected result? or does it just thwart certain optimizations?
[21:23:28] *** Joins: Anarchos (~Anarchos@88.168.112.216)
[21:23:43] <d_bot> <NULL> It compares the underlying thing the variable holds (so it could be a pointer), but since it's an int it should behave as expected (since they are stored exactly as ints, just shifted)
[21:24:02] *** Joins: xgqt (~xgqt@gentoo/developer/xgqt)
[21:25:03] <d_bot> <NULL> Also, it uses queues so not as "pure" as I'd do it
[21:42:05] <quartz> What do you guys use OCaml for?
[21:44:45] <Anarchos> quartz i develop a formal  mathematical demonstration verifier
[21:47:55] <quartz> sleepydog: Can you tell me why line 105 implements python like indentation
[21:48:19] <quartz> Anarchos: Is that a project for your job or just a personal project?
[21:48:30] <Anarchos> quartz a personal one
[21:50:38] <d_bot> <mbacarella> I'm generally pretty intimidated when I hear what other people use ocaml for. Most of my career the answer is something like system monitoring or compliance archiving
[21:51:51] <d_bot> <mbacarella> Extremely typesafe rsync wrappers
[21:52:25] *** Joins: rond_ (~rond_@90.254.208.190)
[21:58:11] <quartz> Sorry to ask again, but I'm not sure how line 105 of this code implements a python like indentation for a compiler when it has FLOAT_LITERAL in the code: https://bpa.st/MU6Q
[21:59:46] <d_bot> <NULL> There's no indentation information related to a float literal, so why should there be INDENT or DEDENT there ?
[22:00:26] <quartz> yeah good point. I was just following up on what sleepydog suggested, that's all.
[22:01:03] *** Quits: bartholin (~bartholin@109.53.6.153) (Ping timeout: 252 seconds)
[22:02:00] <quartz> So they actually implement python indentation in lines 52 and 54? it seems they wrote a simple recrusive function that adds DEDENT or INDENT to a queue?
[22:02:45] <d_bot> <NULL> As sleepdog said, the core of the implementation is at lines 120 and following
[22:04:00] <quartz> omg
[22:04:14] <quartz> Wow I need some sleep, I saw 105 for some reason
[22:04:29] <quartz> I've literally been up all night lol and this is what happens
[22:06:10] <quartz> sleepydog: Thanks for pointing that out
[22:14:36] *** Joins: bartholin (~bartholin@109.53.2.210)
[22:18:35] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.4)
[22:39:26] *** Quits: rond_ (~rond_@90.254.208.190) (Quit: Client closed)
[22:57:40] *** Joins: rgrinberg (~textual@fixed-186-96-30-153.totalplay.net)
[22:58:58] *** Quits: Anarchos (~Anarchos@88.168.112.216) (Quit: Vision[]: i've been blurred!)
[23:02:37] *** Quits: rgrinberg (~textual@fixed-186-96-30-153.totalplay.net) (Ping timeout: 240 seconds)
[23:07:15] *** Quits: bartholin (~bartholin@109.53.2.210) (Ping timeout: 260 seconds)
[23:21:32] *** Joins: mro (~mro@port-92-195-242-214.dynamic.as20676.net)
[23:25:05] *** Quits: mro (~mro@port-92-195-242-214.dynamic.as20676.net) (Client Quit)
[23:43:14] *** Joins: bartholin (~bartholin@158.110.71.61)
[23:57:00] *** Quits: waleee (~waleee@2001:9b0:213:7200:cc36:a556:b1e8:b340) (Ping timeout: 240 seconds)
