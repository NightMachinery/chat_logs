[00:00:06] <teut> actually I was doing react and suddenly saw this video, so I was thinking from a frontend users persective
[00:00:15] <vdamewood> If modding requires sneaky tricks that the original gamedevs didn't put in, then no.
[00:00:18] <teut> but this was backend
[00:01:04] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[00:01:38] <Guest50> like changing frames per second cap in Skyrim with a Skyrim mod
[00:03:24] *** Joins: x003fgqwe (uid479614@id-479614.tooting.irccloud.com)
[00:05:46] *** Quits: mmlj4 (~mmlj4@ip68-230-228-233.no.no.cox.net) (Ping timeout: 252 seconds)
[00:06:54] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[00:08:51] *** Joins: shasta_ (~shasta_@2601:586:4000:c9e0::7b45)
[00:09:58] <Guest50> oh man I took a nice piss. that was good.
[00:10:22] *** Quits: shasta_ (~shasta_@2601:586:4000:c9e0::7b45) (Client Quit)
[00:10:34] *** Quits: anovick (~anovick@IGLD-83-130-61-178.inter.net.il) (Ping timeout: 250 seconds)
[00:10:50] *** Quits: orondo (~orondo@user/orondo) (Quit: leaving)
[00:10:50] <deniska> Guest50: do you know what TMI stands for?
[00:10:56] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[00:11:02] <Guest50> deniska: xD yeah
[00:11:09] <deniska> yeah, that was that
[00:11:10] *** Joins: n0mad (~n0mad@2601:586:4000:c9e0::7b45)
[00:11:46] <Guest50> so you guys. I'm a computer programmer. I understand the vocabulary of computer programmers, but I feel so stupid.
[00:12:54] <vdamewood> Guest50: Bummer. Good luck with that.
[00:13:00] <deniska> imposter syndrome?
[00:13:22] *** Quits: n0mad (~n0mad@2601:586:4000:c9e0::7b45) (Client Quit)
[00:13:28] *** Quits: mei (~mei@user/mei) (Ping timeout: 252 seconds)
[00:13:34] <APic> There are Thousands of People who call themselves „Programmers“
[00:13:35] *** Joins: n0mad (~n0mad@2601:586:4000:c9e0::7b45)
[00:13:45] <APic> Most of them are stupid
[00:13:54] *** Parts: Izem (~Izem@65.95.41.242) (Closing Window)
[00:14:12] <vdamewood> APic: Out of curiosity, what's your native locale?
[00:14:27] <APic> de_DE.UTF-8
[00:14:31] <Guest50> Mexico is my guess: vdamewood APic
[00:14:43] <deniska> thousands? We may have a bit more nowadays :D
[00:14:46] *** Joins: newpy (~newpy@2602:ffc6:200:ce:c458:68f0:b5c2:da50)
[00:14:51] <vdamewood> APic: Danke
[00:14:57] <APic> yw
[00:15:22] <Guest50> if you want to be a good programmer, then buy my book. it tells you how to be successful in cybertron.
[00:15:57] <APic> deniska: More than 1000, yes. But hundreds of thousands are _still_ thousands ;=P
[00:16:05] <vdamewood> APic: I ask because we don't use 'lower' quotes in English.
[00:16:10] <deniska> technically the truth
[00:16:14] <APic> vdamewood: I know
[00:16:45] <APic> I also use German Capitalization ;=P
[00:17:04] <deniska> we use «fir/paw quotes» around here :)
[00:17:04] <vdamewood> Wouldn't German be lower-case since it's an adjective?
[00:17:08] <APic> A Symptom of my Hebephrenia that i mix up Language-Rules
[00:17:47] <vdamewood> APic: My problem is that I read about these quotes and no one ever says which languages use them.
[00:18:29] <APic> vdamewood: Country-Adjectives are still capitalized
[00:18:53] <deniska> vdamewood: in russian you use this style of quotes for handwriting, in print it's typically «»
[00:19:01] <vdamewood> Ah, okay. Kind of like how they're capitalized in English.
[00:19:22] <vdamewood> deniska: This?
[00:19:45] <deniska> vdamewood: „”
[00:19:54] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[00:19:58] <vdamewood> Ah, low-high comma pairs.
[00:20:34] *** Quits: qbt (~edun@user/edun) (Remote host closed the connection)
[00:21:28] *** Joins: independent56 (~independe@95.144.68.39)
[00:23:00] <Guest50> assuming it were true: that you were a successful developer. Wouldn't that be horrible?
[00:23:11] <vdamewood> printf(«Hello, world!\n»);
[00:23:38] <deniska> vdamewood: perl6^W raku uses fancy quotes for various things
[00:24:03] <GeDaMo> What kind of 《quotes》?
[00:24:16] <Guest50> I don't even know how to use utf-8 in my C programs.
[00:24:41] *** Quits: rtypo (~alex@user/rtypo) (Ping timeout: 248 seconds)
[00:24:48] <APic> Quite some German books also use »« instead of „“
[00:24:59] <APic> But mostly »« instead of «»
[00:25:00] <Caffeinated> i nicknamed my new robot beaky
[00:25:38] <Guest50> Caffeinated: congrats
[00:25:39] <Caffeinated> WowWee MiP Arcade Robot Review - YouTube: <https://www.youtube.com/watch?v=0WVKtLpeTjg>
[00:26:10] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:2129:ddfa:934d:5a38) (Quit: Textual IRC Client: www.textualapp.com)
[00:27:10] <Guest50> you guys I need someone to punch me in the face so that I can live a real life.
[00:27:29] *** Joins: rtypo (~alex@user/rtypo)
[00:27:37] <Caffeinated> wow, such a lonely little boy you must be.
[00:27:47] <Guest50> xD
[00:27:57] <APic> IRC > RL
[00:28:04] <vdamewood> IRLC!
[00:28:09] <deniska> in real chat
[00:28:19] <Guest50> APic: amen! vdamewood YES. deniska: OH YEAH
[00:29:15] <Guest50> I'm gonna die you guys. and when I'm dead, which will never happen, then I want you all to know that you're all special fluffy happy things.
[00:32:10] *** Joins: czuk_cza (~mist@188.147.103.124.nat.umts.dynamic.t-mobile.pl)
[00:34:33] *** Quits: edk (edk@libera/staff/edk) (Quit: leaving)
[00:34:42] *** Joins: edk (edk@libera/staff/edk)
[00:35:27] <mawk> ok
[00:36:01] *** Joins: webNET4 (~0x100@32.211.211.39)
[00:36:20] *** Quits: Akuli (~Akuli@87-94-111-87.bb.dnainternet.fi) (Quit: Leaving)
[00:37:35] <Guest50> I hate programming. I've been trained to be a programmer though. I understand so much.
[00:38:14] <webNET4> programming #1
[00:38:14] *** Quits: magla (~gelignite@55d4cf57.access.ecotel.net) (Quit: Stay safe!)
[00:39:10] <webNET4> i hate dependency trenches
[00:39:36] *** Quits: GeDaMo (~GeDaMo@user/gedamo) (Quit: Leaving.)
[00:40:24] <webNET4> trenchworks
[00:40:42] <teut> deniska I saw that video , so it says that the idempotency token is used to store the request and if same request arrives again the response from the can be thrown back without accessing the db
[00:41:16] <teut> but then you cant store infinitely many requests like this in the cache
[00:41:24] <teut> finitely *
[00:43:31] <vdamewood> Yay, my scripts now auto detect Visual Studio versions.
[00:43:46] *** Joins: tcsilver (~tcsilver@pool-96-255-128-204.washdc.fios.verizon.net)
[00:43:58] <Guest50> vdamewood: congrats
[00:45:06] *** Quits: Haxxa (~Haxxa@122.199.45.213) (Quit: Haxxa flies away.)
[00:45:21] <deniska> teut: if you use a token to safeguard against a repeating request, if the second request with the same data arrives, you can check whether a request with the same token already happened
[00:45:42] *** Quits: Leone (~Leo@24.140.234.189) ()
[00:47:09] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[00:47:21] <teut> so one needs to design a caching system too for that then
[00:47:25] *** Joins: Haxxa (~Haxxa@122.199.45.213)
[00:48:58] <deniska> teut: generally the amount of requests like that will be low compared to everything else, so caching them probably won't be benefitial
[00:49:26] <teut> if you wont cache them , then what will you compare them with?
[00:49:49] <deniska> teut: if you operate an online store, caching product pages may make sense, but caching checkout requests doesn't make any sense
[00:50:04] <pyzozord> hmm, I should fix and optimize my temrinal and I think next project will be a mud server with focus networking, multithreading, and hot code reloading
[00:50:09] <deniska> teut: well, you will store a request, not cache it
[00:50:55] *** Quits: n0mad (~n0mad@2601:586:4000:c9e0::7b45) (Quit: Leaving)
[00:51:07] <teut> and also at t=0 if a request comes and tries to update the db, at t= 1 ms  another same request comes and also tries to update the db  
[00:51:07] *** Joins: n0mad (~n0mad@2601:586:4000:c9e0::7b45)
[00:51:22] <teut> and lets say the first isnt complete
[00:51:30] <teut> so what will happen?
[00:51:39] <deniska> teut: like, with the store example, you'll add a record to your database that a user bought something, and one of the fields will be the token
[00:51:51] *** Quits: Guest50 (~Guest50@70.90.132.249) (Quit: Client closed)
[00:52:00] <deniska> teut: so when writing to a database you may just check whether a checkout with that token already exists
[00:52:06] *** Quits: safeAI (~safeAI@pc-101-50-101-190.cm.vtr.net) (Remote host closed the connection)
[00:52:10] <teut> annd another scenario can be that the first request is complete
[00:52:18] *** Joins: rubychellos (uid511313@id-511313.stonehaven.irccloud.com)
[00:52:45] <teut> oh thats right that can be done
[00:53:00] <deniska> teut: in the typical case a site is backed by a single database running on a single computer, so the issue of "two requests at the same time" just doesn't arise
[00:53:06] <teut> so regarding cache you only meant store it in db and not in cache?
[00:53:12] <deniska> teut: one of them will be first, and another will fail
[00:54:10] <deniska> database itself may have a unique constraint for the token field, so the whole situation can be handles via database schema alone, without the site code doing anything too fancy
[00:54:13] <teut> deniska ,  but databases are multithreaded
[00:54:37] *** Joins: sinhue (~mithrin@188-167-233-152.dynamic.chello.sk)
[00:54:46] <teut> but maybe the write operation is single threaded
[00:55:07] <deniska> teut: databases, at least usually used SQL ones, are consistent
[00:55:26] <teut> they are tough, I ll study them later
[00:55:47] <teut> I just read that they are multithreaded
[00:56:05] <deniska> teut: yes, but they care about that stuff, so you don't have to
[00:56:28] <teut> the read actually requires being multithreaded , but the write shouldnt I think
[00:57:30] <deniska> teut: (well, you still kinda have to care, a database may provide various isolation levels of transactions for example, but it's much easier to learn how to work with a database, than how to store data without them in a consistent fashion)
[00:58:47] *** Quits: sinhue (~mithrin@188-167-233-152.dynamic.chello.sk) (Ping timeout: 240 seconds)
[00:59:09] <teut> I dont know, in these times of ORMs it s so much abstracted 
[00:59:21] <teut> I dont even learn sql thus
[00:59:41] <teut> different databases , different queries and functionalities
[01:00:00] <deniska> teut: sql is often the most useful single thing a programmer can learn
[01:00:18] *** Quits: n0mad (~n0mad@2601:586:4000:c9e0::7b45) (Quit: Leaving)
[01:00:37] <vdamewood> SELECT * FROM Books WHERE Subject = "SQL"
[01:01:15] <teut> Books.objects.all().filter(subject="SQL") in django
[01:01:28] <teut> orm
[01:01:53] <deniska> teut: some things might be hard to express through ORM
[01:02:03] <teut> yes thats true
[01:02:24] <teut> but then it will be hard to wrute the queries for that too
[01:02:44] <teut> so use code generation tricks
[01:03:04] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:03:04] <teut> that generates highly optimised queries
[01:03:33] <vdamewood> select count(Author), Publisher.Name from Books WHERE Subject = SQL GROUP BY Publisher JOIN Publishers in Book.Publisher = Publisher.Id
[01:03:46] <deniska> ORMs are typically bad at generating optimized queries
[01:04:24] <deniska> I'm not saying not to use them, they greatly reduce the annoyance of writing trivial queries
[01:04:54] <teut> yes , I get that ,so based on usecases one may require to write sql
[01:05:01] <deniska> I'm saying that it's really useful to know sql, because it will be a universal skill between framework and languages
[01:05:44] *** Joins: Guest76 (~Guest76@70.90.132.249)
[01:06:26] <teut> ya, my CS friend says , they ask sql in interviews
[01:07:10] <teut> but funny of them, they ask the basic ones,  INSERT INTO VALUES ... ,SELECT  etc
[01:07:44] <teut> vdamewood that can be donw with django but I didnt do django for quite some time
[01:07:46] <teut> now
[01:07:52] <teut> done *
[01:09:21] <teut> deniska but graphql is quite fast, I have heard good about it
[01:13:49] <beaky> nice i like graphql too
[01:13:58] <Guest76> what if you were owned by the NSA
[01:14:31] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[01:16:17] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[01:18:03] *** Joins: kariosfox (~kariosfox@89.229.175.101)
[01:18:33] *** Quits: elnavigator (~elnavigat@105.196.103.247) (Ping timeout: 248 seconds)
[01:18:40] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[01:18:41] *** Lord_of_Life_ is now known as Lord_of_Life
[01:19:08] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:21:30] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:75d9:8ee9:c723:ca70) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:22:10] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:75d9:8ee9:c723:ca70)
[01:22:33] *** Joins: elf_fortrezz (~elf_fortr@adsl-72-50-5-53.prtc.net)
[01:24:50] <Guest76> The NSA exists through computer screens. Via screens they rule over the computer programming realms. The NSA is a crazy sort of existence. crazy people living the crazy dream.
[01:26:29] *** Quits: teut (~teut@106.212.2.35) (Quit: Connection closed)
[01:28:01] *** Quits: Guest76 (~Guest76@70.90.132.249) (Quit: Client closed)
[01:33:27] *** Quits: elf_fortrezz (~elf_fortr@adsl-72-50-5-53.prtc.net) (Quit: Client closed)
[01:36:41] *** Joins: elnavigator (~elnavigat@105.196.103.247)
[01:37:04] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[01:37:40] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 250 seconds)
[01:38:01] *** Joins: Crescendo (~Crescendo@user/crescendo)
[01:38:11] *** Quits: Narrat (~omnius@p200300df5f01470106ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[01:38:30] *** Joins: Narrat (~omnius@p200300df5f01470106ea56fffe2e7cdc.dip0.t-ipconnect.de)
[01:38:54] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[01:39:10] *** Quits: Narrat (~omnius@p200300df5f01470106ea56fffe2e7cdc.dip0.t-ipconnect.de) (Client Quit)
[01:39:36] *** Joins: Narrat (~omnius@p200300df5f01470106ea56fffe2e7cdc.dip0.t-ipconnect.de)
[01:39:49] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[01:40:25] *** Joins: ^-^hi (~nikw@user/-hi/x-1729478)
[01:43:44] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 250 seconds)
[01:44:01] *** Joins: Codaraxis (~Codaraxis@user/codaraxis)
[01:44:47] *** edgar-rft is now known as world
[01:45:11] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:75d9:8ee9:c723:ca70) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:45:11] <world> hello!
[01:45:19] *** world is now known as edgar-rft
[01:45:25] <^-^hi> hello world
[01:46:01] <^-^hi> do you think it is a good idea to include built-in ads (it doesn't download it from anywhere) in cli programs, and output them to stderr when the program is starting or ending?
[01:46:34] *** Quits: mteo (francis@user/francis) (Quit: rb)
[01:46:42] <edgar-rft> best idea I ever heard of
[01:47:02] *** Joins: jinsun_ (~jinsunmat@user/jinsun)
[01:47:27] <^-^hi> probably effective for techie-oriented stuff (hosting, come-see-my-project etc.), doesn't track people, probably doesn't interfere with anything
[01:47:31] *** Joins: mteo (francis@user/francis)
[01:47:31] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 252 seconds)
[01:49:33] *** Joins: Drek45 (~jrept371@129.59.122.18)
[01:52:24] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:9c2a:84ea:3fdd:285b) (Ping timeout: 250 seconds)
[01:56:04] *** Joins: Codaraxis_ (~Codaraxis@user/codaraxis)
[01:56:29] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[01:57:29] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[01:57:37] *** Joins: Codaraxis__ (~Codaraxis@user/codaraxis)
[01:57:53] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[01:58:17] *** Joins: independent56 (~independe@95.144.68.39)
[01:58:52] *** Quits: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Remote host closed the connection)
[01:59:14] *** Joins: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com)
[01:59:37] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 252 seconds)
[02:01:27] *** Quits: Codaraxis_ (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[02:03:27] *** Quits: Codaraxis__ (~Codaraxis@user/codaraxis) (Ping timeout: 240 seconds)
[02:06:29] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[02:06:47] *** Joins: independent56 (~independe@95.144.68.39)
[02:07:52] <Thedarkb> I like downloading obscure FOSS games and I've had one display an Amazon wishlist while it was compiling.
[02:08:13] <^-^hi> lol
[02:08:32] *** Joins: zaher (~zaher@37.48.176.34)
[02:08:32] <Thedarkb> I can't remember what it was, got it off icculus' website.
[02:09:55] *** Joins: Solak (~solak@cthia.xs4all.nl)
[02:10:13] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:ecd5:628b:da0a:bcd8)
[02:13:00] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[02:13:24] *** Joins: jmft247 (~jmft2@81.149.115.87.dyn.plus.net)
[02:13:38] *** jmft247 is now known as jmft2
[02:17:13] *** Quits: elnavigator (~elnavigat@105.196.103.247) (Ping timeout: 252 seconds)
[02:22:02] *** Quits: immibis (~hexchat@62.156.144.218) (Remote host closed the connection)
[02:24:50] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[02:26:42] *** Joins: Joanna (uid57472@id-57472.tooting.irccloud.com)
[02:28:41] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[02:30:33] *** Quits: independent56 (~independe@95.144.68.39) (Ping timeout: 248 seconds)
[02:31:05] *** Quits: trace987 (~trace@95.90.106.112) (Ping timeout: 248 seconds)
[02:31:26] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[02:32:02] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[02:36:06] *** Quits: Inari (~Pinkishu@p4fd95f16.dip0.t-ipconnect.de) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[02:37:07] *** Quits: jmft2 (~jmft2@81.149.115.87.dyn.plus.net) (Ping timeout: 256 seconds)
[02:41:47] <beaky> hello besides uniform random distribution what other types of distributions are there
[02:42:31] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 252 seconds)
[02:42:46] <pavonia> normal distribution is quite common too
[02:43:01] *** Quits: Narrat (~omnius@p200300df5f01470106ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[02:43:04] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (Ping timeout: 252 seconds)
[02:43:19] * edgar-rft didn't know that distributions wear uniforms
[02:44:12] <edgar-rft> I'm sure there are malformed random distributions, too
[02:44:30] <beaky> yes like when you have a buggy rng
[02:45:25] <jinsun_> yes normal is the most common useful one, other useful ones are lognormal, Poisson, exponential
[02:45:55] <edgar-rft> shitty random distributions are also quite common in the internet
[02:48:36] <jinsun_> beaky: you will like this one https://en.wikipedia.org/wiki/Student%27s_t-distribution
[02:48:36] <bayaz> Title: Student's t-distribution - Wikipedia 
[02:49:00] *** Joins: Izem (~Izem@65.95.41.242)
[02:49:23] <edgar-rft> anybody knows the difference between a random distribution and a linux distribution?
[02:49:44] *** Joins: rawgreaze (~rawgreaze@c-73-89-208-53.hsd1.ma.comcast.net)
[02:49:44] *** Quits: rawgreaze (~rawgreaze@c-73-89-208-53.hsd1.ma.comcast.net) (Changing host)
[02:49:44] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[02:49:54] <beaky> i like ubuntu 
[02:50:02] <beaky> but i think random ones are like mx linux
[02:50:13] <jinsun_> I like Arch
[02:50:16] <beaky> which nobody in libera uses but its apparently in the top of distrowatch
[02:50:27] *** Quits: gitesh (uid423739@id-423739.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:54:22] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:54:33] <edgar-rft> is linux more distributed than random?
[02:55:21] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[02:55:35] *** Joins: Trieste (T@user/pilgrim)
[03:00:40] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 240 seconds)
[03:04:26] *** Joins: independent56 (~independe@95.144.68.39)
[03:05:18] *** Joins: remby (~Izem@8.6.144.189)
[03:06:49] <edgar-rft> is this not a channel for asking random questions?
[03:07:49] *** Quits: Izem (~Izem@65.95.41.242) (Ping timeout: 252 seconds)
[03:07:55] *** remby is now known as Izem
[03:14:59] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-7-204.prtc.net)
[03:15:44] *** Joins: monksam (~lain6141@119.224.72.222)
[03:15:53] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-7-204.prtc.net) (Client Quit)
[03:16:42] *** Joins: solar_sea_ (~solar_sea@user/solar-sea/x-3088627)
[03:16:46] <vdamewood> edgar-rft: You have it wrong. Uniform distribution is when workers receive their uniforms en masse.
[03:16:47] *** Joins: D1nger (~Booster2o@host-213-189-163-54.dynamic.voo.be)
[03:16:54] *** Quits: D1nger (~Booster2o@host-213-189-163-54.dynamic.voo.be) (Read error: Connection reset by peer)
[03:17:17] *** Joins: mathAndRhetorics (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz)
[03:17:17] <vdamewood> Normal distribution is when everyone gets a guy named Norm.
[03:17:44] *** Quits: Neverloads (NeverLoad@freakshells.net) (Quit: Ping timeout (120 seconds))
[03:17:55] *** Joins: Neverloads (NeverLoad@freakshells.net)
[03:17:55] *** Joins: pavonia_ (~user@user/siracusa)
[03:18:16] *** Quits: elias117 (~elias117@user/elias117) (Ping timeout: 252 seconds)
[03:18:59] *** Joins: bdeshi- (~bdeshi@bdeshi.space)
[03:19:05] <vdamewood> Well, gotta go.
[03:19:06] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: Life beckons)
[03:19:10] *** Quits: pavonia (~user@user/siracusa) (Ping timeout: 240 seconds)
[03:19:10] *** Quits: Booster2ooo (~Booster2o@user/booster2ooo) (Ping timeout: 240 seconds)
[03:19:10] *** Quits: bdeshi (~bdeshi@bdeshi.space) (Ping timeout: 240 seconds)
[03:19:10] *** Quits: xSavitar (~xSavitar@user/xsavitar) (Ping timeout: 240 seconds)
[03:19:10] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 240 seconds)
[03:19:11] *** bdeshi- is now known as bdeshi
[03:19:26] *** pavonia_ is now known as pavonia
[03:19:29] *** Joins: rowbee (~augh@theguntretort.com)
[03:19:40] *** Quits: webNET4 (~0x100@32.211.211.39) (Ping timeout: 240 seconds)
[03:19:40] *** Quits: czuk_cza (~mist@188.147.103.124.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 240 seconds)
[03:19:40] *** Quits: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz) (Ping timeout: 240 seconds)
[03:19:40] *** Quits: jaysicks (~jaysicks@82-131-226-33.pool.digikabel.hu) (Ping timeout: 240 seconds)
[03:19:40] *** Quits: rwb (~augh@theguntretort.com) (Ping timeout: 240 seconds)
[03:19:40] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 240 seconds)
[03:19:40] *** Quits: solar_sea (~solar_sea@user/solar-sea/x-3088627) (Ping timeout: 240 seconds)
[03:19:40] *** Quits: gry (~quassel@botters/gry) (Ping timeout: 240 seconds)
[03:19:40] *** Quits: nisstyre (~wes@user/nisstyre) (Ping timeout: 240 seconds)
[03:19:41] *** Joins: gry_ (~quassel@botters/gry)
[03:19:43] *** mathAndRhetorics is now known as juliaEnv
[03:20:10] *** Quits: nekodesu (~bit@user/nekobit) (Ping timeout: 240 seconds)
[03:20:10] *** Quits: Jaran (~mail@user/jaran) (Ping timeout: 240 seconds)
[03:20:35] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[03:20:45] *** rowbee is now known as rwb
[03:20:55] *** Joins: xSavitar (~xSavitar@kinserve.com)
[03:21:19] *** xSavitar is now known as Guest6202
[03:22:40] *** Quits: jontxu (~jon@51.15.171.164) (Ping timeout: 240 seconds)
[03:23:21] <rannnn8888> here i try make it work :D  https://bpa.st/ACLQ
[03:25:28] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:a1be:2710:2837:d377)
[03:26:21] <pavonia> 404
[03:27:25] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:ecd5:628b:da0a:bcd8) (Ping timeout: 250 seconds)
[03:27:34] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[03:28:30] <rannnn8888> pavonia HERE ? VBAhttps://wtools.io/paste-code/b6yp
[03:28:40] <rannnn8888> https://wtools.io/paste-code/b6yp
[03:28:42] <bayaz> Title: DSAD text code | WTOOLS 
[03:31:42] *** Joins: jontxu (~jon@51.15.171.164)
[03:31:59] *** Joins: blahboybaz (~blahboyba@67-5-101-245.spok.qwest.net)
[03:33:02] *** Joins: nisstyre (~wes@user/nisstyre)
[03:33:14] *** Joins: koolazer (~koo@user/koolazer)
[03:33:19] *** Joins: jaysicks (~jaysicks@82-131-226-33.pool.digikabel.hu)
[03:33:37] *** Quits: elgraz (~elgraz@151.65.9.160) (Quit: Leaving)
[03:34:12] *** Joins: czuk_cza (~mist@188.147.103.124.nat.umts.dynamic.t-mobile.pl)
[03:34:13] *** Quits: Izem (~Izem@8.6.144.189) (Ping timeout: 252 seconds)
[03:34:39] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[03:38:24] *** gry_ is now known as gry
[03:41:00] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[03:43:32] *** Quits: kariosfox (~kariosfox@89.229.175.101) (Remote host closed the connection)
[03:46:44] *** Joins: wwweary (~wwweary@2600:1700:138a:8d0:390e:2aad:e876:178b)
[03:49:53] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[03:51:40] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Ping timeout: 240 seconds)
[03:51:44] *** Joins: \r (jeda@hellomouse/dev/cryb.jeda)
[03:51:44] *** Aye is now known as Guest3396
[03:51:44] *** \r is now known as Aye
[03:52:10] *** Quits: Guest3396 (jeda@hellomouse/dev/cryb.jeda) (Ping timeout: 240 seconds)
[03:53:42] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:54:17] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 248 seconds)
[03:55:04] *** Joins: sinhue (~mithrin@188-167-233-152.dynamic.chello.sk)
[03:55:19] *** Joins: elias117 (~elias117@142.167.217.216)
[03:55:19] *** Quits: elias117 (~elias117@142.167.217.216) (Changing host)
[03:55:19] *** Joins: elias117 (~elias117@user/elias117)
[03:55:53] *** Quits: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net) (Ping timeout: 248 seconds)
[03:56:01] *** Quits: Drek45 (~jrept371@129.59.122.18) (Ping timeout: 250 seconds)
[03:56:11] *** Joins: pulse (~pulse@user/pulse)
[03:56:48] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[03:57:48] *** Joins: nekodesu (~bit@user/nekobit)
[03:58:46] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:1c75:2e1e:ce0f:10f4)
[03:59:29] *** Quits: sinhue (~mithrin@188-167-233-152.dynamic.chello.sk) (Ping timeout: 250 seconds)
[04:00:15] *** Joins: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net)
[04:01:27] *** Quits: rubychellos (uid511313@id-511313.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[04:04:04] *** Joins: zaher_ (~zaher@37.48.181.136)
[04:04:42] <monksam> any laravel guy here?
[04:05:09] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:05:18] <monksam> how do I go on displaying data fetch from external API to the view?
[04:05:39] *** Quits: ixil (~ixil@82.197.178.137) (Remote host closed the connection)
[04:05:56] <monksam> so far I've this custom class which fetches data 
[04:06:01] *** Quits: zaher (~zaher@37.48.176.34) (Ping timeout: 248 seconds)
[04:06:10] <monksam> but don't know how to go one from here...
[04:06:18] *** Quits: Maaaanu (~manuel@ip5b41c17b.dynamic.kabel-deutschland.de) (Quit: leaving)
[04:06:33] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:07:10] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[04:07:37] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 248 seconds)
[04:09:16] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[04:09:27] *** Joins: flynn (~mcbloch@user/flynn)
[04:09:52] *** Joins: Drek45 (~jrept371@212.102.59.214)
[04:17:47] *** Quits: Cashlin (~hp@user/cashlin) (Ping timeout: 240 seconds)
[04:20:11] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[04:21:50] *** Joins: Cashlin (~hp@user/cashlin)
[04:25:23] *** Quits: chomwitt (~chomwitt@2a02:587:dc09:9800:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[04:25:56] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[04:26:14] *** Joins: independent56 (~independe@95.144.68.39)
[04:26:29] <^-^hi> monksam, #php perhaps
[04:29:22] *** Quits: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com) (Ping timeout: 256 seconds)
[04:29:29] *** Quits: elias117 (~elias117@user/elias117) (Ping timeout: 248 seconds)
[04:29:39] <monksam> nevermind got it - can return view from custom class 
[04:29:46] <monksam> thanks hi anyways
[04:33:47] *** Quits: independent56 (~independe@95.144.68.39) (Ping timeout: 245 seconds)
[04:36:05] *** Quits: jaysicks (~jaysicks@82-131-226-33.pool.digikabel.hu) (Remote host closed the connection)
[04:39:03] *** Joins: independent56 (~independe@95.144.68.39)
[04:42:45] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[04:43:04] *** Joins: independent56 (~independe@95.144.68.39)
[04:45:23] *** Joins: nekodesu_ (~bit@user/nekobit)
[04:48:01] *** Quits: nekodesu (~bit@user/nekobit) (Ping timeout: 250 seconds)
[04:48:34] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[04:49:01] *** Quits: independent56 (~independe@95.144.68.39) (Ping timeout: 252 seconds)
[04:49:42] *** Joins: Crescendo (~Crescendo@user/crescendo)
[04:53:05] *** Quits: img (~img@user/img) (Quit: ZNC 1.8.2 - https://znc.in)
[04:54:33] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 248 seconds)
[04:56:14] *** Joins: gggp (~gggp@60.10.194.43)
[04:57:44] *** Joins: arcatech (~arcatech@user/arcatech)
[04:58:34] *** Joins: gggp_ (~gggp@60.10.194.43)
[04:59:10] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Ping timeout: 240 seconds)
[05:01:56] *** Joins: jumpArtifact (~jumpArtif@user/jumpartifact)
[05:02:13] *** Quits: gggp (~gggp@60.10.194.43) (Ping timeout: 252 seconds)
[05:02:35] *** Joins: gggp__ (~gggp@111.63.14.115)
[05:04:20] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[05:05:40] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 250 seconds)
[05:06:33] *** Joins: img (~img@user/img)
[05:07:33] *** Joins: gggp_ (~gggp@60.10.23.160)
[05:08:26] *** Joins: Crescendo (~Crescendo@user/crescendo)
[05:08:33] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:10:14] *** Quits: jumpArtifact (~jumpArtif@user/jumpartifact) (Quit: WeeChat 3.2)
[05:10:33] *** Quits: gggp__ (~gggp@111.63.14.115) (Ping timeout: 250 seconds)
[05:19:59] *** Joins: audiocat (~audio@2603-8081-1801-3bb5-d6d9-7d6f-7c18-dd49.res6.spectrum.com)
[05:24:59] *** Joins: frost (~frost@59.71.240.119)
[05:31:55] *** Quits: Mangy_Dog (Mange@user/mangy-dog/x-7397214) (Ping timeout: 252 seconds)
[05:35:36] *** Joins: Intelo (~Intelo@88.244.91.68)
[05:35:43] *** Quits: nekodesu_ (~bit@user/nekobit) (Quit: uninstall gentoo)
[05:36:10] <Intelo> job portals like monster and others.. do they even have real IT companies behind the job poster? or those all are recruiter firms?
[05:43:14] <cis> there are real companies as well as recruiters behind job postings
[05:44:04] *** Joins: tavares (~tavares@user/tavares)
[05:44:24] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[05:45:27] *** Joins: TonyStone (~TonyStone@cpe-74-76-58-56.nycap.res.rr.com)
[05:45:49] *** Quits: TonyStone (~TonyStone@cpe-74-76-58-56.nycap.res.rr.com) (Remote host closed the connection)
[05:46:36] <[itchyjunk]> its partially targeted towards companies finding people directly
[05:46:48] <[itchyjunk]> so i assume thats common to find real companies posting jobs there
[05:46:57] <[itchyjunk]> this also saves the companies middlemen fees
[05:47:11] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[05:48:01] <Intelo> cis [itchyjunk] I see i wonder why I found fewer real companies
[05:48:15] *** Quits: czuk_cza (~mist@188.147.103.124.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 250 seconds)
[05:49:21] <Intelo> As linkedin has ceased to show phone and (mostly) emails of contacts, I wonder now how to get those automatically. Any ideas? 
[05:50:25] <[itchyjunk]> depends on the type of jobs
[05:50:29] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[05:50:40] <[itchyjunk]> certain companies prefer recruiting agencies to filter out candidates
[05:50:49] <[itchyjunk]> because they naturally get a lot of applciations anyways
[05:51:05] *** Quits: zaher_ (~zaher@37.48.181.136) (Ping timeout: 248 seconds)
[05:51:12] <[itchyjunk]> I don't have any special information though
[05:51:21] <[itchyjunk]> just my observations from outside looking in
[05:51:32] <[itchyjunk]> you'ed wanna find people who do hiring and get their perspective
[05:52:14] <Intelo> so I should contact recruiting companies?
[05:52:37] <[itchyjunk]> no, contact people in company who does hiring
[05:52:43] <[itchyjunk]> and hard to contact them
[05:52:48] <[itchyjunk]> but they might blog and such
[05:53:42] *** Joins: gggp__ (~gggp@60.10.23.160)
[05:53:46] <Intelo> ok
[05:54:47] *** Joins: dsrt^ (~dsrt@wsip-98-188-244-188.mc.at.cox.net)
[05:56:00] <blahboybaz> Does anyone use slack?
[05:56:57] <[itchyjunk]> i had an account
[05:57:02] <[itchyjunk]> but i haven't logged back in
[05:57:02] *** Joins: Metalsutton (~Metalsutt@101.100.153.131)
[05:57:10] *** Quits: gggp_ (~gggp@60.10.23.160) (Ping timeout: 240 seconds)
[05:57:18] <[itchyjunk]> Intelo, what are you trying to gain out of it?
[05:57:35] <[itchyjunk]> I wouldn't be able to take this recruitement stuff seriously
[05:57:40] <arahael> blahboybaz: I use slack frequently.
[05:57:54] <[itchyjunk]> That's why i probably won't become a professional programmers lol
[05:58:15] <[itchyjunk]> those "programming interview questions" types thing is something i'd stay away from
[05:59:31] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 250 seconds)
[05:59:56] *** Quits: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[06:00:26] <Intelo> [itchyjunk]  hm..  I see
[06:00:44] <Intelo> so how to do pass the interview if not answer those questions then?
[06:01:28] <blahboybaz> I started watching a video on what slack is and they guy talks about it integrating other communication apps into one place -- I wonder if both parties have to have slack in order to communicate there. In other words.. if I have slack but someone I communicate with through LinkedIn (for example) does not have slack, can I still use slack to communicate with that person and they never have to get 
[06:01:30] *** Joins: rexar89_ (~alexi5@208.83.82.234)
[06:01:34] <blahboybaz> a slack account?
[06:01:48] <rexar89_> hello everyone
[06:01:53] <blahboybaz> hi rexar89_ 
[06:01:58] <arahael> blahboybaz: Yes, they'll need a slack account - and to the same workplace.
[06:02:14] <blahboybaz> ahh, I see
[06:02:20] <blahboybaz> thanks for clarifying
[06:02:39] <arahael> blahboybaz: In many ways it's similar to IRC, but with a far better UI.  (Sadly, electron-based).
[06:03:02] <arahael> (At least for the target demographic - I myself still prefer IRC and weechat)
[06:03:30] <blahboybaz> Looking at the integratinos list I see a lot of stuff that looks like it's not really communication oriented (eg: google drive)
[06:03:40] <^-^hi> is it practical to have a midi player that doesn't require soundfonts? like playing it using chiptunes.
[06:03:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:04:03] <arahael> blahboybaz: Don't knock how convenient it is to drag+drop a file in and have it just work regardless of your corporate network policy.
[06:04:09] <blahboybaz> or even google analytics
[06:04:36] <blahboybaz> cool cool
[06:04:37] <^-^hi> i am puzzled why my searches about it bring nothing
[06:05:03] <blahboybaz> well I'm gonna try it. Someone I want to connect with wants me to contact them that way
[06:05:17] *** Joins: gggp (~textual@60.10.194.43)
[06:05:20] *** Joins: amigojapan (uid86330@id-86330.helmsley.irccloud.com)
[06:05:26] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[06:05:35] <beaky> i love lisp
[06:05:46] <arahael> blahboybaz: Imho it's better than most of the alternatives - better than teams, discord, etc.
[06:05:54] *** Quits: xff0x (~xff0x@2001:1a81:524c:1400:ba85:9ec4:3b29:2be0) (Ping timeout: 250 seconds)
[06:06:04] <beaky> i dont know why but i suddenly have this feeling that i like lisp
[06:06:42] *** Joins: gggp_ (~gggp@111.63.14.115)
[06:07:36] *** Joins: xff0x (~xff0x@2001:1a81:5283:ae00:5927:9529:db6:e6e9)
[06:07:38] <Intelo> arahael what is better than ^
[06:08:01] <^-^hi> (is lisp good)
[06:09:30] *** Joins: jazzy (~jaziz@2600:380:4671:e333:dd8c:f4f8:72d8:f607)
[06:09:48] *** Quits: gggp (~textual@60.10.194.43) (Ping timeout: 250 seconds)
[06:10:10] *** Quits: gggp__ (~gggp@60.10.23.160) (Ping timeout: 240 seconds)
[06:10:18] <arahael> Intelo: Well, I'm saying slack's better. :D
[06:10:51] <arahael> Slack used to offer an IRC interface to it as well, but most places disabled that even when it was still offered.
[06:10:51] <beaky> nice wish i can try slack someday is it like liberia chat
[06:11:11] *** Quits: Twipply (~Twipply@user/twipply) (Quit: Leaving)
[06:11:27] <Intelo> arahael oh ok
[06:11:38] <Intelo> arahael slack has video chat?
[06:11:46] <arahael> Intelo: Yes.
[06:11:51] <Intelo> ok
[06:12:03] *** Joins: gggp (~textual@194.5.79.213)
[06:12:03] <Intelo> can I stop anyonne to message directly between each other?
[06:12:12] <Intelo> if slack has it, I am in
[06:12:27] <arahael> Intelo: Not sure, you'd have to check the corporate functionality.  Expensive.
[06:12:35] <Intelo> I only want my team members to talk in group or with me directly. Not to each other directly
[06:12:40] <Intelo> ok
[06:13:08] <arahael> Intelo: You can restrict people to specific channels, but requires a bit of setup for that.  Anyway, this is a commercial product, really.
[06:13:32] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:13:35] <arahael> Intelo: The organisation typically pays for each user account, except for some particular opensource communities.  Looking one up now for bekay.
[06:13:36] <arahael> *beaky
[06:13:59] <[itchyjunk]> Intelo> so how to do pass the interview if not answer those questions then?
[06:14:01] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 248 seconds)
[06:14:01] *** brabrax_ is now known as brabrax
[06:14:03] <[itchyjunk]> i dont code for a living
[06:14:08] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 250 seconds)
[06:14:14] <[itchyjunk]> so i don't know how i would get into the industry if i had to
[06:14:34] *** Joins: zwr (~zwr@2804:d45:b966:fb00:39b5:9253:c983:445)
[06:14:47] <Intelo> arahael I think they have it  https://slack.com/intl/en-tr/help/articles/360060326994-Manage-settings-and-permissions-for-Slack-Connect-direct-messages#free,-pro,-and-business+-plans-2
[06:14:49] <bayaz> Title: Manage settings and permissions for Slack Connect direct messages 
[06:15:07] <Intelo> [itchyjunk] i see ok .
[06:16:22] <beaky> so i have to work in enterprise to use slack
[06:16:37] <arahael> Hmm, I can't find the invite link for functionalprogramming.slack.com, There is https://www.macadmins.org for getting a signup for macadmins slack, though.
[06:16:38] <bayaz> Title: MacAdmins.org 
[06:16:54] <beaky> nice i like mac
[06:17:14] *** Quits: gggp (~textual@194.5.79.213) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:17:20] <[itchyjunk]> Intelo, people get hired via places like HN all the time, though.
[06:17:32] <[itchyjunk]> But those are people with very high talent threshholds
[06:18:27] *** Joins: gggp__ (~gggp@188.119.65.97)
[06:20:28] <[itchyjunk]> But it's an interesting question. i wonder how many people here work in interprise and smaller and so on
[06:20:35] <[itchyjunk]> and what their experiences is
[06:20:44] *** Joins: rubychellos (uid511313@id-511313.stonehaven.irccloud.com)
[06:20:51] <[itchyjunk]> Intelo, last i talked to you, you were trying to go to US. is that stil lthe case?
[06:22:03] *** Quits: gggp_ (~gggp@111.63.14.115) (Ping timeout: 250 seconds)
[06:23:27] *** Quits: gggp__ (~gggp@188.119.65.97) (Ping timeout: 240 seconds)
[06:25:41] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.2)
[06:29:40] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 252 seconds)
[06:31:20] *** Quits: newpy (~newpy@2602:ffc6:200:ce:c458:68f0:b5c2:da50) (Quit: Leaving)
[06:31:56] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[06:32:30] *** Joins: ChromaCat248_ (~ChromaCat@user/chromacat248)
[06:32:40] *** Joins: sumthing1980 (~sumthing1@94.54.64.154)
[06:33:02] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Read error: Connection reset by peer)
[06:37:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[06:39:55] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[06:40:34] *** Quits: morgabra (sid500580@user/morgabra) (Ping timeout: 250 seconds)
[06:40:58] *** Quits: rubychellos (uid511313@id-511313.stonehaven.irccloud.com) (Read error: Connection reset by peer)
[06:41:36] *** Quits: jakesyl (sid56879@id-56879.stonehaven.irccloud.com) (Ping timeout: 258 seconds)
[06:42:03] *** Quits: Fangs (sid141280@id-141280.stonehaven.irccloud.com) (Ping timeout: 276 seconds)
[06:42:20] *** Joins: rubychellos (uid511313@id-511313.stonehaven.irccloud.com)
[06:42:50] *** Joins: kodah (~kodah@user/kodah)
[06:43:18] *** Joins: morgabra (sid500580@user/morgabra)
[06:43:43] *** Joins: Fangs (sid141280@id-141280.stonehaven.irccloud.com)
[06:43:50] *** Joins: jakesyl (sid56879@id-56879.stonehaven.irccloud.com)
[06:44:08] <kodah> does anyone know, using openapi v2, how i can specify that a path allow both authenticate and non-authenticated users?
[06:45:29] <kodah> i have one query parameter, where if used, should require a valid token
[06:47:54] <Trashlord> I don't
[06:48:45] *** Joins: gggp__ (~gggp@188.119.65.97)
[06:50:17] <paulo> I start at my new job at October 1
[06:50:28] <paulo> it'll be the first time I'm switching jobs
[06:50:32] <paulo> I'm so excited hehe
[06:51:00] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[06:52:54] <karstensrage> congrats paulo 
[06:52:54] *** Joins: pandakekok9 (~job@wikimedia-commons/pandakekok9)
[06:52:56] *** Joins: gggp (~textual@194.5.79.213)
[06:54:41] <[itchyjunk]> what kinda job? 
[06:58:42] <paulo> android dev
[07:00:00] *** Joins: czuk_cza (~mist@188.147.100.88.nat.umts.dynamic.t-mobile.pl)
[07:00:18] <karstensrage> nice
[07:00:32] <karstensrage> you like the team?
[07:03:24] *** Quits: gggp (~textual@194.5.79.213) (Remote host closed the connection)
[07:06:51] <paulo> karstensrage: i've met some of them
[07:06:56] <paulo> I hope I do like them
[07:07:55] <karstensrage> well good luck
[07:09:01] *** Joins: gggp (~textual@123.113.186.169)
[07:15:07] *** Quits: gggp (~textual@123.113.186.169) (Ping timeout: 240 seconds)
[07:15:54] *** Joins: gggp (~textual@60.10.194.43)
[07:18:32] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[07:23:09] *** Quits: rubychellos (uid511313@id-511313.stonehaven.irccloud.com) (Ping timeout: 250 seconds)
[07:23:20] *** Quits: morgabra (sid500580@user/morgabra) (Read error: Connection reset by peer)
[07:23:22] *** Quits: Fangs (sid141280@id-141280.stonehaven.irccloud.com) (Read error: Connection reset by peer)
[07:23:35] *** Quits: jakesyl (sid56879@id-56879.stonehaven.irccloud.com) (Ping timeout: 250 seconds)
[07:24:22] <pulse> what if light speed is 0 and we're all moving at -c
[07:25:00] *** Quits: Suchiman (sid3778@about/csharp/suchiman) (Read error: Connection reset by peer)
[07:25:33] *** Joins: Fangs (sid141280@stonehaven.irccloud.com)
[07:25:56] *** Joins: jakesyl (sid56879@id-56879.stonehaven.irccloud.com)
[07:26:01] *** Joins: Suchiman (sid3778@about/csharp/suchiman)
[07:26:17] *** Joins: rubychellos (uid511313@id-511313.stonehaven.irccloud.com)
[07:26:33] *** Joins: morgabra (sid500580@user/morgabra)
[07:27:25] *** Joins: webNET4 (~0x100@32.211.211.39)
[07:27:53] <beaky> nice congrats on your new job bro
[07:28:59] <smallville7123> lol
[07:29:08] <smallville7123> pulse: 
[07:33:29] <Intelo> [itchyjunk] Its hard for my nationality to go to US. Its good option though..
[07:35:24] *** Quits: esran (~esran@cb.conical-effort.net) (Quit: ZNC 1.8.x-nightly-20190530-13450c7f - https://znc.in)
[07:37:05] *** Joins: Izem (~Izem@8.6.144.189)
[07:37:52] <smallville7123> is this normal?
[07:37:54] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:37:55] <smallville7123> dyld: Symbol not found: __cg_png_create_info_struct
[07:37:55] <smallville7123>   Referenced from: /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO
[07:37:55] <smallville7123>   Expected in: /Users/smallville7123/StudioProjects/Graphical-Tool-Kit/macOS/IMPORTED_CMAKE_PROJECTS/OpenGLApp_CMAKE_PROJECT/GRAPHICS/OUTPUT/libpng.dylib
[07:37:57] <smallville7123>  in /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO
[07:38:10] *** Joins: esran (~esran@cb.conical-effort.net)
[07:39:03] <webNET4> i doubt this is normal
[07:39:04] *** Quits: DaPinkOne (~Dap@user/dap) (Ping timeout: 250 seconds)
[07:39:32] <pulse> yes, it's very normal to have issues when using cmake
[07:39:34] <beaky> yes it does not look normal
[07:39:49] <webNET4> quazi-normal
[07:39:52] <smallville7123> as this only happens when launching my app via Xcode
[07:40:19] *** Quits: bkool (~bkool@c-73-8-91-229.hsd1.il.comcast.net) (Quit: Leaving)
[07:40:37] *** Quits: Samian (~Sami@163.114.130.6) (Ping timeout: 252 seconds)
[07:41:22] *** Joins: Guest93 (~Guest93@103.5.134.18)
[07:42:01] *** Quits: rexar89_ (~alexi5@208.83.82.234) (Ping timeout: 248 seconds)
[07:42:28] *** Quits: sumthing1980 (~sumthing1@94.54.64.154) (Quit: Leaving)
[07:44:53] <smallville7123> how do i fix it?
[07:47:06] <[itchyjunk]> have you tried turning if off and on again?
[07:47:50] <^-^hi> #macosx has probably more people who can help you with that
[07:48:11] <^-^hi> #cmake maybe
[07:50:01] *** Quits: gggp (~textual@60.10.194.43) (Ping timeout: 248 seconds)
[07:51:23] *** Quits: Joanna (uid57472@id-57472.tooting.irccloud.com) ()
[07:52:32] *** Parts: Izem (~Izem@8.6.144.189) (Closing Window)
[07:53:08] *** Joins: gggp (~textual@60.10.194.43)
[07:57:20] <smallville7123> im seeing if compiling using ONLY my freetype library with the png lib still produces the problem
[08:01:15] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[08:01:27] *** Quits: gambl0re (~gambl0re@104.247.229.76) (Ping timeout: 240 seconds)
[08:01:50] *** Joins: mei (~mei@user/mei)
[08:03:50] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[08:05:28] *** Joins: gambl0re (~gambl0re@216.154.16.193)
[08:06:57] *** Joins: DaPinkOne (~Dap@user/dap)
[08:08:31] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:9cf1:af9d:7c3d:498b)
[08:09:42] <webNET4> is libpng the one that does the long jump when theres an error
[08:10:16] *** Quits: gggp (~textual@60.10.194.43) (Ping timeout: 250 seconds)
[08:11:15] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:1c75:2e1e:ce0f:10f4) (Ping timeout: 250 seconds)
[08:12:27] *** Quits: Guest93 (~Guest93@103.5.134.18) (Quit: Client closed)
[08:14:08] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[08:14:30] *** Joins: gggp (~textual@60.10.194.43)
[08:15:02] <|smlckz|> lua uses longjmp too [ for errors and coroutines ]
[08:15:07] *** Quits: Drek45 (~jrept371@212.102.59.214) (Quit: Leaving)
[08:15:53] *** Quits: Cashlin (~hp@user/cashlin) (Quit: Konversation terminated!)
[08:16:57] *** Quits: gambl0re (~gambl0re@216.154.16.193) (Quit: WeeChat 3.2)
[08:18:45] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[08:21:27] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Ping timeout: 240 seconds)
[08:21:29] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Remote host closed the connection)
[08:24:28] *** Quits: tavares (~tavares@user/tavares) (Remote host closed the connection)
[08:25:02] *** Quits: czuk_cza (~mist@188.147.100.88.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 245 seconds)
[08:30:07] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[08:30:19] *** Quits: rubychellos (uid511313@id-511313.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[08:33:37] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[08:34:50] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[08:36:49] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[08:39:24] *** Joins: Goku (~Dragon@177.83.87.113)
[08:47:29] *** Quits: gggp (~textual@60.10.194.43) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:48:05] *** Parts: ine (~ine@user/ine) (Leaving)
[08:55:50] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[09:03:07] *** Quits: gitgood (~gitgood@80-44-12-89.dynamic.dsl.as9105.com) (Ping timeout: 240 seconds)
[09:04:27] <smallville7123> how do i find png?
[09:04:27] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 240 seconds)
[09:04:50] *** Quits: davros (~davros@host86-184-180-96.range86-184.btcentralplus.com) (Remote host closed the connection)
[09:04:56] <smallville7123> how do i find png?       as i am doing         find_package(PNG REQUIRED)           but i get        Could NOT find PNG (missing: PNG_LIBRARY) (found version "1.6.38.git")
[09:05:28] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[09:05:38] <webNET4> it could not find it but knows it's version 1.x.x.x ?
[09:07:10] <webNET4> gnu tools are easy all you do is say -lpng and if you have to use -L/setch/path/i/mean/serch/path
[09:07:29] <InPhase> smallville7123: What version is your libpng-dev?
[09:07:52] <InPhase> smallville7123: Specifically, the system package that is installed with that name.
[09:08:47] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[09:09:07] <smallville7123> how do i find that out?
[09:09:18] <InPhase> smallville7123: What distribution are you running?
[09:10:16] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Ping timeout: 252 seconds)
[09:10:40] *** Quits: stoneware (~stoneware@user/stoneware) (Quit: I'll be back soon)
[09:10:43] <smallville7123> catalina
[09:10:59] *** Quits: pyzozord (pyzozord@user/pyzozord) (*.net *.split)
[09:11:00] *** Quits: Amun-Ra (~amun-ra@retro.rocks) (*.net *.split)
[09:11:00] *** Quits: phundrak (~phundrak@82-65-91-105.subs.proxad.net) (*.net *.split)
[09:11:00] *** Quits: buffet (~buffet@buffet.sh) (*.net *.split)
[09:11:00] *** Quits: kuku (~kuku@user/kuku) (*.net *.split)
[09:11:00] *** Quits: birkoff (birkoff@user/birkoff) (*.net *.split)
[09:11:00] *** Quits: SoF (~skius@user/skius) (*.net *.split)
[09:11:00] *** Quits: tofran (~tofran@37.189.158.134) (*.net *.split)
[09:11:00] *** Quits: utunbu_ (~utunbu@user/utunbu) (*.net *.split)
[09:11:00] *** Quits: rypervenche (~rypervenc@user/rypervenche) (*.net *.split)
[09:11:00] *** Quits: beeza (sid53872@id-53872.tinside.irccloud.com) (*.net *.split)
[09:11:00] *** Quits: gzuh (~gzuh@c-76-125-108-219.hsd1.ar.comcast.net) (*.net *.split)
[09:11:00] *** Quits: Khoyo (~khoyo@user/khoyo) (*.net *.split)
[09:11:00] *** Quits: Fleck (~fleck@user/fleck) (*.net *.split)
[09:11:00] *** Quits: NeatNit (NeatNit@powered.by.jay2k1.com) (*.net *.split)
[09:11:00] *** Quits: mawk (mawk@wireguard/contributor/mawk) (*.net *.split)
[09:11:00] *** Quits: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net) (*.net *.split)
[09:11:00] *** Quits: PlanckWalk (~Planck@user/planckwalk) (*.net *.split)
[09:11:00] *** Quits: poprocks (~logan@user/poprocks) (*.net *.split)
[09:11:00] *** Quits: bocaneri (~bismilah@about/linux/staff/sauvin) (*.net *.split)
[09:11:00] *** Quits: pieguy128 (~pieguy128@bas1-montreal02-65-92-163-194.dsl.bell.ca) (*.net *.split)
[09:11:00] *** Quits: scjosh (~scjosh@206.189.79.69) (*.net *.split)
[09:11:00] *** Quits: neunon (~neunon@user/neunon) (*.net *.split)
[09:11:00] *** Quits: lavaflow (~lavaflow@c-76-104-248-66.hsd1.wa.comcast.net) (*.net *.split)
[09:11:00] *** Quits: Davros_ (~dalek@pathweb.org) (*.net *.split)
[09:11:00] *** Quits: cisco87 (~quassel@lnxg33k.com) (*.net *.split)
[09:11:00] *** Quits: hv99 (~hv99@wireguard/tunneler/hv99) (*.net *.split)
[09:11:00] *** Quits: Whippersnapper (~whprsnpr@user/whippersnapper) (*.net *.split)
[09:11:00] *** Quits: shenanigans (~shenaniga@51.15.76.217) (*.net *.split)
[09:11:00] *** Quits: nolesswrong (~nolesswro@45.32.1.17) (*.net *.split)
[09:11:00] *** Quits: cronos (~cronos@user/cronos) (*.net *.split)
[09:11:06] *** Joins: bocaneri_ (~bismilah@li889-61.members.linode.com)
[09:11:09] *** Joins: DALEK-SEC (~dalek@pathweb.org)
[09:11:11] *** Joins: cisco87 (~quassel@lnxg33k.com)
[09:11:13] *** Joins: poprocks (~logan@bras-base-toroon1016w-grc-29-76-64-118-103.dsl.bell.ca)
[09:11:13] *** Joins: phundrak (~phundrak@82-65-91-105.subs.proxad.net)
[09:11:13] *** Joins: PlanckWalk (~Planck@ppp105-115.static.internode.on.net)
[09:11:15] *** Quits: PlanckWalk (~Planck@ppp105-115.static.internode.on.net) (Changing host)
[09:11:15] *** Joins: PlanckWalk (~Planck@user/planckwalk)
[09:11:17] *** Joins: shenanigans (~shenaniga@51.15.76.217)
[09:11:17] *** Joins: NeatNit (NeatNit@powered.by.jay2k1.com)
[09:11:18] *** Joins: rypervenche (~rypervenc@2001:41d0:8:93b9::29)
[09:11:18] *** Joins: Khoyo (~khoyo@ns328946.ip-37-187-115.eu)
[09:11:21] *** Joins: kuku (~kuku@pool-108-27-57-106.nycmny.fios.verizon.net)
[09:11:21] *** Joins: gzuh (~gzuh@c-76-125-108-219.hsd1.ar.comcast.net)
[09:11:27] *** Joins: utunbu_ (~utunbu@user/utunbu)
[09:11:28] <InPhase> smallville7123: And what active step did you take to install development libraries for libpng?
[09:11:28] *** Joins: lavaflow (~lavaflow@c-76-104-248-66.hsd1.wa.comcast.net)
[09:11:33] *** Joins: Whippersnapper (~whprsnpr@user/whippersnapper)
[09:11:37] *** Joins: mawk (~mawk@serveur.io)
[09:11:43] *** Quits: Khoyo (~khoyo@ns328946.ip-37-187-115.eu) (Changing host)
[09:11:43] *** Joins: Khoyo (~khoyo@user/khoyo)
[09:11:44] *** Quits: rypervenche (~rypervenc@2001:41d0:8:93b9::29) (Changing host)
[09:11:44] *** Joins: rypervenche (~rypervenc@user/rypervenche)
[09:11:52] *** Joins: Amun-Ra (~amun-ra@retro.rocks)
[09:12:06] *** Joins: nolesswrong (~nolesswro@45.32.1.17)
[09:12:30] *** Joins: cronos (~cronos@user/cronos)
[09:12:32] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-194.dsl.bell.ca)
[09:12:34] *** Joins: neunon (~neunon@user/neunon)
[09:12:37] *** Joins: beeza (sid53872@id-53872.tinside.irccloud.com)
[09:12:44] *** Joins: pyzozord (pyzozord@user/pyzozord)
[09:13:22] *** Quits: mawk (~mawk@serveur.io) (Changing host)
[09:13:22] *** Joins: mawk (~mawk@wireguard/contributor/mawk)
[09:13:44] *** Quits: lunarkitty (uid501895@user/pyra) (Quit: Connection closed for inactivity)
[09:14:05] *** Joins: Fleck (~fleck@user/fleck)
[09:14:34] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[09:14:35] <smallville7123> idk
[09:14:38] <smallville7123> im using mac os
[09:14:45] *** Quits: rtypo (~alex@user/rtypo) (Read error: Connection reset by peer)
[09:14:49] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[09:15:08] *** Quits: adrian17 (~adrian17@thehyper.space) (*.net *.split)
[09:15:08] *** Quits: insolentworm (~root@vps-7db3bef3.vps.ovh.ca) (*.net *.split)
[09:15:08] *** Quits: _0x5fc3 (~0x5fc3@wireguard/tunneler/-0x5fc3) (*.net *.split)
[09:15:08] *** Quits: CuriousErnestBro (~CuriousEr@user/curiousernestbro) (*.net *.split)
[09:15:08] *** Quits: calcmandan (~quassel@user/calcmandan) (*.net *.split)
[09:15:08] *** Quits: brandon__ (~brandon@user/brandon) (*.net *.split)
[09:15:08] *** Quits: mjh4386_ (~mjh4386@165.22.53.231) (*.net *.split)
[09:15:08] *** Quits: ario_ (~ario@159.65.220.102) (*.net *.split)
[09:15:08] *** Quits: sco1 (~sco1@charon.whatbox.ca) (*.net *.split)
[09:15:08] *** Quits: glider (~glider@user/glider) (*.net *.split)
[09:15:08] *** Quits: Caffeinated (~Caffeine@user/alexdelarge) (*.net *.split)
[09:15:08] *** Quits: brutusmcforce (mannu@wodanaz.se) (*.net *.split)
[09:15:08] *** Quits: Teacup (~teacup@user/teacup) (*.net *.split)
[09:15:08] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com) (*.net *.split)
[09:15:08] *** Quits: glguy (x@libera/staff/glguy) (*.net *.split)
[09:15:08] *** Quits: ds (~ds@user/ds) (*.net *.split)
[09:15:08] *** Quits: ellie (~ellie@user/ellie) (*.net *.split)
[09:15:08] *** Quits: matiss (~matiss@almalinux/web/matiss) (*.net *.split)
[09:15:08] *** Quits: Pajus (~Pajus@user/pajus) (*.net *.split)
[09:15:08] *** Quits: stkw0 (~quassel@ns3046126.ip-91-121-8.eu) (*.net *.split)
[09:15:08] *** Quits: bluebird (~bluebird@user/bluebird) (*.net *.split)
[09:15:08] *** Quits: Noventicx (~Noventicx@crux.uberspace.de) (*.net *.split)
[09:15:08] *** Quits: TwiZted (~TwiZted@user/twizted) (*.net *.split)
[09:15:08] *** Quits: arahael (~arahael@203.221.97.63) (*.net *.split)
[09:15:08] *** Quits: Dijky (~Dijky@user/dijky) (*.net *.split)
[09:15:08] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (*.net *.split)
[09:15:08] *** Quits: BUSY (~BUSY@user/busy) (*.net *.split)
[09:15:08] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (*.net *.split)
[09:15:08] *** Quits: Geronimo (~Geronimo@user/geronimo) (*.net *.split)
[09:15:08] *** Quits: gravypod (~gravypod@user/gravypod) (*.net *.split)
[09:15:08] *** Quits: jelly (jelly@user/jelly) (*.net *.split)
[09:15:08] *** Quits: Foritus (~buggery@cpc91316-watf11-2-0-cust68.15-2.cable.virginm.net) (*.net *.split)
[09:15:08] *** Quits: TallonRain (sid214799@user/tallonrain) (*.net *.split)
[09:15:08] *** Quits: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex) (*.net *.split)
[09:15:08] *** Quits: fjmorazan (~quassel@user/fjmorazan) (*.net *.split)
[09:15:08] *** Quits: dartmouthed (~blackunsp@li761-35.members.linode.com) (*.net *.split)
[09:15:08] *** Quits: BrkThruCopyWritr (~ttt@107-190-27-93.cpe.teksavvy.com) (*.net *.split)
[09:15:08] *** Quits: emby (~em@user/emnode) (*.net *.split)
[09:15:08] *** Quits: endless (~endlessed@server.zane.wiki) (*.net *.split)
[09:15:08] *** Quits: gdarko (~me@dg.mk) (*.net *.split)
[09:15:08] *** Quits: matrael_ (matrael@PLEASEJUSTLETME.BE) (*.net *.split)
[09:15:08] *** Quits: blinky42 (~quassel@user/blinky42) (*.net *.split)
[09:15:08] *** Quits: sevengraff (~admin@li891-34.members.linode.com) (*.net *.split)
[09:15:08] *** Quits: u4ia (~u4ia@88-159-0-88.fixed.kpn.net) (*.net *.split)
[09:15:12] *** Joins: ElectricSheep (~esheep_zn@pool-100-19-29-200.phlapa.fios.verizon.net)
[09:15:16] *** Joins: blinky42 (~quassel@jabber.blinkylight.net)
[09:15:16] *** Joins: emby (~em@li247-180.members.linode.com)
[09:15:18] *** Joins: Pajus (~Pajus@user/pajus)
[09:15:19] *** Joins: TallonRain (sid214799@user/tallonrain)
[09:15:19] *** Joins: ario (~ario@159.65.220.102)
[09:15:20] *** Joins: matrael (matrael@PLEASEJUSTLETME.BE)
[09:15:20] *** Joins: gdarko (~me@dg.mk)
[09:15:23] *** Joins: calcmandan (~quassel@69.62.219.168)
[09:15:23] *** Joins: matiss (~matiss@e01.edge.fi.he.srv.n256.net)
[09:15:24] *** Joins: Foritus (~buggery@cpc91316-watf11-2-0-cust68.15-2.cable.virginm.net)
[09:15:24] *** Joins: brutusmcforce (mannu@wodanaz.se)
[09:15:28] *** Joins: Noventicx (~Noventicx@crux.uberspace.de)
[09:15:28] *** Joins: BrkThruCopyWritr (~ttt@107-190-27-93.cpe.teksavvy.com)
[09:15:30] *** Joins: u4ia (~u4ia@2a02:a462:49df:1:7928:4441:95ef:79a4)
[09:15:32] *** Quits: blinky42 (~quassel@jabber.blinkylight.net) (Changing host)
[09:15:32] *** Joins: blinky42 (~quassel@user/blinky42)
[09:15:33] <smallville7123> libpng exists in this tho
[09:15:34] *** Quits: matiss (~matiss@e01.edge.fi.he.srv.n256.net) (Changing host)
[09:15:34] *** Joins: matiss (~matiss@almalinux/web/matiss)
[09:15:34] *** Quits: calcmandan (~quassel@69.62.219.168) (Changing host)
[09:15:34] *** Joins: calcmandan (~quassel@user/calcmandan)
[09:15:36] *** Joins: gravypod (~gravypod@user/gravypod)
[09:15:37] <smallville7123>  /System/Library/Frameworks/ImageIO.framework/Resources/libPng.dylib
[09:15:39] *** Joins: insolentworm (~root@vps-7db3bef3.vps.ovh.ca)
[09:15:40] *** Joins: adrian17 (~adrian17@thehyper.space)
[09:15:55] *** Joins: CuriousErnestBro (~CuriousEr@user/curiousernestbro)
[09:16:21] *** Joins: dartmouthed (~blackunsp@li761-35.members.linode.com)
[09:16:24] *** Joins: glguy (x@libera/staff/glguy)
[09:16:31] *** Joins: sco1 (~sco1@charon.whatbox.ca)
[09:16:39] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[09:16:43] *** Joins: Dijky (~Dijky@user/dijky)
[09:16:44] *** Joins: mjh4386 (~mjh4386@165.22.53.231)
[09:16:48] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-160-103.austin.res.rr.com)
[09:16:49] *** Joins: BUSY (~BUSY@user/busy)
[09:16:53] *** Joins: ds (~ds@user/ds)
[09:16:58] *** Joins: stkw0 (~quassel@ns3046126.ip-91-121-8.eu)
[09:16:59] *** Joins: glider (~glider@user/glider)
[09:17:01] *** Joins: fjmorazan (~quassel@user/fjmorazan)
[09:17:02] *** Joins: Teacup (~teacup@user/teacup)
[09:17:05] *** Joins: LambdaComplex (~adam@wireguard/tunneler/lambdacomplex)
[09:18:16] <smallville7123> wtf is xcode doing that makes this fail ;-;
[09:18:25] *** Joins: Caffeinated (~Caffeine@user/alexdelarge)
[09:18:35] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[09:18:52] *** Quits: emby (~em@li247-180.members.linode.com) (Changing host)
[09:18:52] *** Joins: emby (~em@user/emnode)
[09:19:35] <webNET4> seems like a cmake bug  but i haven't looked at any of these project files
[09:19:43] *** Quits: jazzy (~jaziz@2600:380:4671:e333:dd8c:f4f8:72d8:f607) (Ping timeout: 250 seconds)
[09:19:54] <webNET4> bug in your cmake code
[09:20:15] *** Joins: bluebird (~bluebird@user/bluebird)
[09:20:31] *** Joins: brandon_ (~brandon@user/brandon)
[09:21:54] <smallville7123> specifically im trying to work around a stupid bug that is making xcode fail to launch my program due to dyld: Symbol not found: __cg_png_create_info_struct 
[09:22:15] <webNET4> don't try to work around that
[09:22:23] <smallville7123> dyld: Symbol not found: __cg_png_create_info_struct
[09:22:23] <smallville7123>   Referenced from: /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO
[09:22:23] <smallville7123>   Expected in: /Users/smallville7123/StudioProjects/Graphical-Tool-Kit/macOS/IMPORTED_CMAKE_PROJECTS/OpenGLApp_CMAKE_PROJECT/GRAPHICS/OUTPUT/libpng.dylib
[09:22:25] <smallville7123>  in /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO
[09:22:31] *** Joins: jelly (jelly@user/jelly)
[09:22:50] *** Joins: Drek45 (~jrept371@154.21.23.179)
[09:22:57] <webNET4> what code is trying to call that symbol
[09:23:12] <webNET4> eliminate it
[09:23:18] <smallville7123> nm /System/Library/Frameworks/ImageIO.framework/Resources/libPng.dylib | grep __cg_png_create_info_struct
[09:23:19] <smallville7123> 0000000000000f02 T __cg_png_create_info_struct
[09:23:37] *** Joins: stoneware (~stoneware@user/stoneware)
[09:23:58] <webNET4> lol wtf thats in the libpng dynamic library as a DEPENDENCY?
[09:24:03] *** Joins: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz)
[09:24:14] <webNET4> or it's defined there
[09:24:19] <webNET4> what is calling that symbol
[09:24:38] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[09:24:58] *** Joins: Cypris (uid511277@user/cypris)
[09:25:01] <webNET4> it's in one of the objects you're linking
[09:25:28] <webNET4> are you mixing in random .SO's you didn't compile?
[09:25:37] <smallville7123> im linking to CoreText, CoreGraphics, and CoreFoundation
[09:25:38] <webNET4> .DyNlIbS
[09:26:00] <webNET4> ok searcht hthe web for that symbol
[09:26:05] <smallville7123> as needed by Harfbuzz due to missing symbols with CoreText support
[09:26:27] *** Joins: birkoff (birkoff@thunderirc.net)
[09:26:28] *** Quits: birkoff (birkoff@thunderirc.net) (Changing host)
[09:26:28] *** Joins: birkoff (birkoff@user/birkoff)
[09:26:29] <webNET4> harfbuzz is calling it? how out of date is your dynamic library
[09:26:36] <Cypris> hello I'm new to programming and I made my first actual piece of software its a ip Pinger, but I was also hoping to add a public dns resolver to it, but i wrote the Pinger in batch and the dns resolver is in python, I have no clue how to implement this i was wondering if anyone would spare some help.
[09:26:45] <webNET4> download newest librarys of both projects
[09:26:54] *** Joins: manin (~x@185.242.190.95)
[09:26:57] <webNET4> of all projects
[09:26:58] <smallville7123> freetype/harfbuzz
[09:27:04] <webNET4> and don't use anything you're not compiling yourself
[09:27:11] <webNET4> otherwise RIP
[09:27:21] <smallville7123> -framework CoreFoundation -framework CoreGraphics -framework CoreText
[09:28:51] <webNET4> https://www.ietf.org/rfc/rfc1035.txt
[09:28:52] <bayaz> Type: text/plain Size: 32.2 kB 
[09:29:06] <webNET4> DNS RFC ^^^
[09:29:19] <smallville7123> hmmm could it be that i am not pulling in CoreText as a framework dependancy in my app bundle?
[09:29:47] <webNET4> is coretext looking for the bogus symbol of harbuzz
[09:29:56] <webNET4> s/of/or/
[09:30:02] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:04] <smallville7123> eg when launched outside of xcode it works just fine
[09:30:18] <smallville7123> but fails when launched inside xcode
[09:30:28] *** Joins: Guest0 (~Guest0@103.5.134.18)
[09:30:29] <webNET4> this sounds really fucked up, switch to a better OS
[09:30:32] *** Joins: anovick (~anovick@IGLD-83-130-61-178.inter.net.il)
[09:30:44] <Guest0> Wow, I'm Guest0 today. Guess it's my lucky day... heh.
[09:30:54] <smallville7123> lmao
[09:30:58] <Guest0> :D
[09:30:59] <smallville7123> Guest0: 
[09:31:07] <smallville7123> webNET4: :)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:31:21] *** Quits: Burkuf (~AnCELASTR@216.243.47.158) (Ping timeout: 248 seconds)
[09:31:45] <smallville7123> xcode is probably restricting the searchpath to the app bundles's embedded frameworks
[09:32:13] <smallville7123> and not allowing any system libraries/frameworks from being found that are not embedded in the bundle
[09:32:42] <smallville7123> hence it cannot find the CoreGraphics and ImageIO frameworks at launch
[09:32:55] <smallville7123> (only reason i can think of)
[09:33:12] <webNET4> cypris aside from the RFC, wireshark capture a simple dns request
[09:33:26] <webNET4> and you can work out the detauils from there
[09:33:50] <webNET4> small requests can be done with a basic UDP packet
[09:34:26] <Cypris> i see 
[09:34:44] <Cypris> wouldnt that require wireshark? my tool is made to be independent 
[09:34:50] <smallville7123> lets see if embedding "CoreFoundation;CoreGraphics;CoreText" fixes my problem :)
[09:35:37] *** Joins: arahael (~arahael@203.221.97.63)
[09:36:35] <smallville7123> ummmmm tf?      CMake Error: Can't find a build file for CoreFoundation
[09:37:12] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[09:41:48] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[09:43:45] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[09:44:14] *** Joins: webNET4 (~0x100@32.211.211.39)
[09:44:42] <webNET4> you don't have to use wireshark but it's the only one i know offhand that has DNS packet inspection
[09:46:21] <webNET4> and it can import .pcap files so you don't need to run it with CAP_NET_ADMIN 
[09:46:21] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 252 seconds)
[09:46:22] *** Joins: rubychellos (uid511313@id-511313.stonehaven.irccloud.com)
[09:46:29] *** Quits: rubychellos (uid511313@id-511313.stonehaven.irccloud.com) (Client Quit)
[09:46:30] <arahael> Wireshark? What for?
[09:46:53] <webNET4> or you can decode it all the caveman way
[09:48:49] *** Quits: anovick (~anovick@IGLD-83-130-61-178.inter.net.il) (Ping timeout: 252 seconds)
[09:49:40] *** Joins: mishugana (~antaoisea@user/mishugana)
[09:50:14] <arahael> webNET4: Well, you've not provided any context, unless I've missed it?
[09:50:36] <mishugana> 'sup, folks.
[09:50:50] <webNET4> arahael you see cypris's text? in the scrollback?
[09:50:57] <Cypris> whats that?
[09:51:11] <mishugana> What?
[09:51:17] <webNET4> huh?
[09:51:20] <mishugana> Eh?
[09:51:34] <Guest0> Shto?
[09:51:47] <arahael> webNET4: Ah, I was disconnected.
[09:52:17] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[09:52:31] <mishugana> Hello folks, just testing out my cloaking - can anyone do a `who` on my name and see?
[09:52:31] *** Joins: webNET4 (~0x100@32.211.211.39)
[09:52:47] *** Quits: xff0x (~xff0x@2001:1a81:5283:ae00:5927:9529:db6:e6e9) (Ping timeout: 240 seconds)
[09:52:56] <leduyquang753> Looks like it works.
[09:52:56] <pulse> mishugana, yes, it works
[09:53:08] <mishugana> leduyquang753: pulse: Thank you!
[09:53:20] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[09:53:47] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[09:53:48] *** Joins: xff0x (~xff0x@2001:1a81:5283:ae00:dd66:8a36:3ffc:6058)
[09:54:26] *** Quits: Guest0 (~Guest0@103.5.134.18) (Quit: Client closed)
[09:54:28] <webNET4> oh well they're making a DNS resolver
[09:55:29] <webNET4> and that's a really big RFC, wireshark decoder speeds up the process
[09:56:15] <mishugana> Has anyone here created a REPL for a static language?
[09:56:18] *** Quits: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz) (Quit: Going offline, see ya! (www.adiirc.com))
[09:56:21] <webNET4> the only tricky part is the compression
[09:56:27] <webNET4> for a simple resolver
[09:56:57] <mishugana> I was thinking of creating a REPL for a hobby language (still in planning), but then I realised it would be nicer to expose an API to the compiler internals and then use that API to create the REPL, eh?
[09:57:06] <mishugana> Sort of like how JShell (for Java) does it.
[09:57:57] *** Joins: gggp (~textual@60.10.194.43)
[09:58:00] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[09:58:12] *** Joins: webNET4 (~0x100@32.211.211.39)
[09:59:42] <webNET4> compiler internals for reaidng/writing text, gcc's motto is just link libc with everything!
[09:59:55] <mishugana> Lol
[10:00:02] *** Joins: aniruddha (uid340443@id-340443.charlton.irccloud.com)
[10:00:16] <webNET4> makes things tricky when considering portability
[10:02:12] <webNET4> it would be wise to avoid depending on printf
[10:03:21] *** Quits: abrowne (~AB@159.196.171.119) (Remote host closed the connection)
[10:04:13] *** Quits: manin (~x@185.242.190.95) (Ping timeout: 252 seconds)
[10:05:21] *** Joins: rexar89_ (~alexi5@208.83.82.234)
[10:06:30] *** Quits: poprocks (~logan@bras-base-toroon1016w-grc-29-76-64-118-103.dsl.bell.ca) (Changing host)
[10:06:30] *** Joins: poprocks (~logan@user/poprocks)
[10:06:55] <webNET4> i mean AFAICT and i'm very new to the code base, gcc knows nothing of posix, only libc
[10:06:56] <smallville7123> Matthews-MacBook-Pro:macOS smallville7123$ nm /Users/smallville7123/StudioProjects/Graphical-Tool-Kit/macOS/IMPORTED_CMAKE_PROJECTS/OpenGLApp_CMAKE_PROJECT/GRAPHICS/OUTPUT/libpng.dylib | grep png_create_info_struct
[10:06:56] <smallville7123> 0000000000006370 T _png_create_info_struct
[10:06:56] <smallville7123> Matthews-MacBook-Pro:macOS smallville7123$ nm /System/Library/Frameworks/ImageIO.framework/Resources/libPng.dylib | grep png_create_info_struct
[10:06:58] <smallville7123> 0000000000000f02 T __cg_png_create_info_struct
[10:07:40] <audiocat> how can i reference an the class method of a subclass within a class in python?
[10:08:04] *** Quits: xff0x (~xff0x@2001:1a81:5283:ae00:dd66:8a36:3ffc:6058) (Ping timeout: 252 seconds)
[10:08:59] *** Joins: xff0x (~xff0x@2001:1a81:5283:ae00:82de:9d03:d34b:f6a0)
[10:16:41] <pikapika> I would just try A.B.c() first
[10:16:53] <pikapika> I'll have to look into the oop model of python though
[10:19:34] *** Quits: gggp (~textual@60.10.194.43) (Ping timeout: 252 seconds)
[10:19:55] *** Joins: jinsun (~quassel@user/jinsun)
[10:21:20] *** Joins: |7| (~|7|@user/seachdamh)
[10:22:00] *** Joins: gggp (~textual@60.10.194.43)
[10:22:26] *** Quits: Goku (~Dragon@177.83.87.113) (Ping timeout: 250 seconds)
[10:28:30] *** Quits: gggp (~textual@60.10.194.43) (Ping timeout: 250 seconds)
[10:28:39] *** Joins: diamondbond (~diamondbo@112.134.170.153)
[10:31:22] *** Joins: gggp (~textual@60.10.194.43)
[10:33:50] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Quit: leaving)
[10:34:24] *** Joins: jazzy (~jaziz@2600:380:4671:e333:9dac:5e57:172f:3175)
[10:36:34] *** Quits: pavelow (~pavelow@opticalchimp.com) (Ping timeout: 256 seconds)
[10:37:10] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[10:37:15] *** Joins: pavelow (~pavelow@opticalchimp.com)
[10:43:30] *** Quits: gggp__ (~gggp@188.119.65.97) (Remote host closed the connection)
[10:47:09] *** Joins: Akronymus (~Akronymus@85.31.8.180)
[10:47:44] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[10:48:12] *** Quits: gggp (~textual@60.10.194.43) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:52:48] *** Quits: mishugana (~antaoisea@user/mishugana) (Quit: leaving)
[10:53:19] *** Joins: gggp (~textual@60.10.194.43)
[11:04:00] *** Quits: pyrareae (~lunar@user/pyra) (Quit: WeeChat 2.8)
[11:04:13] <Akronymus> Ah, who doesn't love to bitch and moan about shitty legacy software during meetings?
[11:04:40] *** Quits: Thedarkb (~Thedarkb@host-92-13-206-221.as13285.net) (Ping timeout: 252 seconds)
[11:05:19] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:05:24] *** Quits: gggp (~textual@60.10.194.43) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:06:54] *** Joins: palasso (~palasso@user/palasso)
[11:14:53] *** clarjon_1 is now known as clarjon1
[11:15:19] *** Joins: orondo (~orondo@user/orondo)
[11:17:43] *** Quits: orondo (~orondo@user/orondo) (Client Quit)
[11:17:45] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[11:18:29] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[11:18:41] *** Joins: flynn (~mcbloch@user/flynn)
[11:19:05] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 248 seconds)
[11:23:02] *** Joins: Stefan26 (~Stefan26@78-67-218-242-no207.tbcn.telia.com)
[11:26:19] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[11:26:58] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:29:34] *** Joins: foozle (~foozle@2001-b011-c001-16ef-0490-1a09-d3f9-afa2.dynamic-ip6.hinet.net)
[11:29:36] *** Joins: gareppa (~gareppa@user/gareppa)
[11:30:17] *** Quits: chives (~brandon@24.35.204.107) (Ping timeout: 248 seconds)
[11:30:21] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[11:30:34] *** Quits: xff0x (~xff0x@2001:1a81:5283:ae00:82de:9d03:d34b:f6a0) (Ping timeout: 252 seconds)
[11:31:30] *** Joins: xff0x (~xff0x@2001:1a81:5283:ae00:3380:f428:346c:f5a)
[11:33:32] *** Quits: tccki (~tccki@box.webslate.co.nz) (Quit: tccki)
[11:34:16] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Quit: sudo Shanzem -lol -updoot -karma -gold >/dev/lies)
[11:34:22] *** Joins: Rounin (~david@84.212.130.215)
[11:34:29] *** Joins: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it)
[11:35:07] *** Quits: soapsudsxx (~soapsudsx@141.193.188.154) (Remote host closed the connection)
[11:35:18] *** Joins: tccki (~tccki@2406:e001:2:5a60:250:56ff:fe9e:8795)
[11:36:55] *** Joins: elnavigator (~elnavigat@105.196.149.83)
[11:37:29] *** Quits: Metalsutton (~Metalsutt@101.100.153.131) (Ping timeout: 256 seconds)
[11:39:22] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[11:42:32] *** Quits: Drek45 (~jrept371@154.21.23.179) (Ping timeout: 245 seconds)
[11:47:40] *** Joins: naansequitur (~naansequi@173.244.192.92)
[11:49:10] *** Quits: wwweary (~wwweary@2600:1700:138a:8d0:390e:2aad:e876:178b) (Ping timeout: 240 seconds)
[11:49:40] *** Joins: eson123 (~eson123@118.69.128.37)
[11:50:20] *** Joins: netbsduser` (~netbsduse@user/netbsduser)
[11:50:33] *** Joins: gggp (~textual@111.63.14.115)
[11:50:37] <eson123> i am a bit into AI recently and i am wondering about voice recognition, but instead of just importing a certain library, is there any book or post which explains the in-depht of how those libraries work ? what formula or mechanism that the lib use to detect what the user say
[11:50:48] *** Joins: mrig (~mrig@user/mrig)
[11:51:49] *** Quits: audiocat (~audio@2603-8081-1801-3bb5-d6d9-7d6f-7c18-dd49.res6.spectrum.com) (Ping timeout: 250 seconds)
[11:52:08] <pulse> i would guess neural networks trained on massive amounts on real data
[11:52:24] *** Joins: jaysicks (~jaysicks@82-131-226-33.pool.digikabel.hu)
[11:53:08] *** Joins: Pickchea (~private@user/pickchea)
[11:53:22] *** Quits: netbsduser`` (~netbsduse@user/netbsduser) (Ping timeout: 245 seconds)
[11:53:43] <webNET4> phonetics
[11:54:10] <death916> just let the ai absorb hooked on phonics videos
[11:54:37] *** Joins: ekathva (~ekathva@88-114-118-108.elisa-laajakaista.fi)
[11:54:42] <webNET4> or that,  get the full MUZZY discography for translator epxpansion
[11:58:08] *** Joins: node1 (~node1@user/node1)
[11:59:27] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[12:02:05] *** Joins: gitesh (uid423739@id-423739.charlton.irccloud.com)
[12:02:50] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[12:03:44] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[12:06:17] *** Quits: pavonia (~user@user/siracusa) (Quit: Bye!)
[12:07:31] <eson123> pulse: so siri or google translate do that also ?
[12:07:50] <eson123> even tho still, they are not perfect tho, but still good enough
[12:09:30] <Akronymus> Our company uses a license server for jetbrains products.
[12:09:30] <Akronymus> can I use multiple IDE's (rider, goland) at the same time as 1 user?
[12:12:31] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:14:34] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:15:17] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[12:16:12] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[12:17:56] *** Quits: diamondbond (~diamondbo@112.134.170.153) (Quit: Leaving)
[12:18:50] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[12:21:51] *** Quits: gggp (~textual@111.63.14.115) (Ping timeout: 244 seconds)
[12:24:35] <Akronymus> Welp, did my first OSS PR.
[12:24:50] <leduyquang753> Good luck.
[12:24:57] <Akronymus> It was a small one
[12:25:02] <Akronymus> Literally 2 characters added.
[12:25:06] *** Joins: gggp (~textual@111.63.14.115)
[12:25:15] <xeno> Akronymus: yes you can, if they're all covered by the license 
[12:25:29] <xeno> Akronymus: at least I'm reasonably sure about that
[12:25:30] <Akronymus> Yeah, i found that now through the jetbrains website.
[12:25:48] <Akronymus> But apparently having 3 dashes as per the markdown spec is too much trouble.
[12:26:10] <Akronymus> https://sales.jetbrains.com/hc/en-gb/articles/206544319-Can-I-use-my-license-on-multiple-machines- xeno
[12:26:20] <Akronymus> https://github.com/pseudomuto/protoc-gen-doc/pull/454 
[12:26:21] <bayaz> Title: Fix Scalar Value Types Table for Markdown by ChristophGra · Pull Request #454 · pseudomuto/protoc-gen-doc 
[12:26:24] <Akronymus> This is the PR I did
[12:29:05] *** Quits: |7| (~|7|@user/seachdamh) (Quit: ...)
[12:29:11] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[12:31:01] *** Joins: |7| (~|7|@user/seachdamh)
[12:32:02] *** Quits: CalimeroTeknik (~calimero@185.13.36.50) (Changing host)
[12:32:02] *** Joins: CalimeroTeknik (~calimero@user/calimeroteknik)
[12:33:57] *** Joins: LucaTM (~LucaTM@user/lucatm)
[12:34:39] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:75d9:8ee9:c723:ca70)
[12:37:00] *** Joins: _inky (~inky@5.77.154.240)
[12:37:33] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Read error: Connection reset by peer)
[12:37:45] *** Quits: inky_ (~inky__@46.36.119.19) (Ping timeout: 250 seconds)
[12:39:03] *** Quits: inky (~inky@46.36.119.19) (Ping timeout: 250 seconds)
[12:39:33] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[12:39:38] *** Quits: foozle (~foozle@2001-b011-c001-16ef-0490-1a09-d3f9-afa2.dynamic-ip6.hinet.net) (Quit: Leaving)
[12:42:39] <Akronymus> > The semicolon (;), when combined with a second character in the Procedure Editor, provides 
[12:42:40] <Akronymus> alternative representations of special characters as follows
[12:42:54] <Akronymus> > To suppress the semicolon’s interpretation as a special character, precede it with a tilde (~). For example, to enter the string ;< in the Procedure Editor and not have Progress interpret it as an open bracket, type ~;<
[12:42:57] <Akronymus> WHY?
[12:43:05] <Akronymus> Who thought that was a good idea?
[12:43:17] <leduyquang753> That sad face...
[12:43:35] <Akronymus> http://download.psdn.com/documentation/openedge/dvref.pdf Page 63 at the bottom
[12:43:35] <bayaz> Type: application/pdf Size: 11.4 MB 
[12:44:07] <Akronymus> Why the fuck did I take the job?
[12:44:29] *** Joins: node1 (~node1@user/node1)
[12:44:43] <Akronymus> > The backslash (\) is an escape character on UNIX platforms only. It is a directory path separator in Windows platforms only
[12:44:51] <Akronymus> Why make it platform dependant?
[12:44:58] *** Joins: astroid (astroid@user/astroid)
[12:45:18] <Akronymus> Altough, thinking about it, it probably is just a case of being lazy
[12:45:33] *** Quits: blahboybaz (~blahboyba@67-5-101-245.spok.qwest.net) (Ping timeout: 250 seconds)
[12:45:47] *** Quits: ^-^hi (~nikw@user/-hi/x-1729478) (Ping timeout: 240 seconds)
[12:46:00] <Akronymus> The tilde character is a escape symbol.
[12:46:06] <Akronymus> Why?
[12:46:15] <Akronymus> Can't you just use backsla.... oh wait
[12:46:47] *** Joins: independent56 (~independe@95.144.68.39)
[12:46:55] <Akronymus> Also: The doc conveys information through formatting.
[12:47:12] <Akronymus> I can't tell whether some things are bold or not
[12:48:59] <leduyquang753> Akronymus If you want some backstory about why \ is Windows path separator, basically in the old days / was used for command line arguments.
[12:48:59] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[12:49:12] <Akronymus> I know that much.
[12:49:17] *** Joins: independent56 (~independe@95.144.68.39)
[12:49:42] <Akronymus> I was, sarcastically, wondering why openedge/progress/abl didn't make it consistent.
[12:49:50] *** Quits: naansequitur (~naansequi@173.244.192.92) (Remote host closed the connection)
[12:49:53] <Akronymus> Easier to just use syscalls without converting it.
[12:49:59] <Akronymus> And let the user deal with the mess
[12:50:29] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[12:50:42] <Akronymus> > The slash (/) symbol is a directory path separator (UNIX). It is also used for date fields 
[12:50:43] <Akronymus> (99/99/99).
[12:50:47] *** Joins: independent56 (~independe@95.144.68.39)
[12:50:48] <Akronymus> I am about to flip some tables
[12:51:09] <xeno> Akronymus: the second part of that is criminal :/
[12:51:22] <xeno> Akronymus: 03/04/05 - now tell me what date that is 
[12:51:44] <Akronymus> 2005-04-03 hopefully
[12:52:07] *** Joins: pulse_ (~pulse@user/pulse)
[12:52:21] <Akronymus> 8601 is the one true datetime representation.
[12:52:29] <xeno> Akronymus: you can always hope 
[12:53:07] <Akronymus> Oh, that is kinda neat though.
[12:53:10] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 240 seconds)
[12:53:20] <Akronymus> You can specify justification for strings on string creation
[12:53:23] *** Joins: Metalsutton (~Metalsutt@101.100.153.131)
[12:53:39] <xeno> and yeah, when you say you *hope* it's 2005-04-03, then maybe use 2005-04-03 instead? :)
[12:54:01] *** Joins: inky_ (~inky__@5.77.154.240)
[12:54:09] <Akronymus> Progress doesn't seem to support 8601 dates
[12:54:10] <xeno> justification? "I wanna create a String, because Strings are neat and cute little things!"? 
[12:54:21] <Akronymus> I mean, right left, center and such
[12:54:27] <xeno> ah, adjustment 
[12:54:38] <Akronymus> On the other hand: U option
[12:54:50] <Akronymus> > Specifies that the string is untranslatable. This means that the string will not be processed 
[12:54:51] <Akronymus> by the OpenEdge Translation Manager. If you do not specify U, then the string is assumed 
[12:54:51] <Akronymus> to be translatable
[12:55:05] <Akronymus> ...
[12:56:13] <Akronymus> Oh, this is for version 10
[12:56:18] <Akronymus> current seems to be 12.
[12:56:23] <Akronymus> Which removed that.
[12:56:48] *** Joins: ixil (~ixil@82.197.178.137)
[12:58:21] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:75d9:8ee9:c723:ca70) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:59:41] *** Quits: Metalsutton (~Metalsutt@101.100.153.131) (Quit: Leaving)
[13:00:43] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[13:01:04] <amigojapan> Akronymus: what kind of database, what language?
[13:01:17] <Akronymus> Progress and progress
[13:01:34] <Akronymus> They use some SHITTY DB engine
[13:01:41] <Akronymus> No proper foreign keys for example
[13:01:47] <Akronymus> No stored procedures
[13:01:49] <amigojapan> You don't mean postgress right?
[13:01:54] <Akronymus> Everything accessed like cursors
[13:01:57] <Akronymus> I know what I said
[13:02:42] <amigojapan> Is it at least SQL?
[13:03:19] <amigojapan> If it is, it should be easy to replace /with -
[13:03:27] <Akronymus> Think if SQL and C had a  child. And they were siblings to begin with
[13:03:30] <Akronymus> That is progress.
[13:03:33] <Amadiro> it's not, they have their own dialect
[13:03:41] <Amadiro> or language rather
[13:03:53] <amigojapan> I see Amadiro 
[13:03:55] <Akronymus> The whole languages family tree would be a line
[13:04:56] <amigojapan> Akronymus: a good database would not let you enter a date inaccurately
[13:05:05] *** Joins: aradesh (~aradesh@user/aradesh)
[13:05:08] <Akronymus> HAHAHAHAHAHAHA
[13:06:47] <Akronymus> https://i.stack.imgur.com/Uk8E9.png amigojapan
[13:06:48] <bayaz> Type: image/png Size: 40.7 kB 
[13:06:48] <Amadiro> I found out the other day moving some tables from oracle into pg, that oracle happily accepts hijri dates (but postgres does not)
[13:07:00] <Akronymus> hijri?
[13:07:08] <Amadiro> traditional islamic calendar
[13:07:10] <Akronymus> Oh
[13:08:33] <Akronymus> Oh nvm, apparently it does have foreign keys.
[13:08:51] <Akronymus> Just the software we work on is so badly designed that it can't use them.
[13:09:04] <Akronymus> But that's a rant that has already been had.
[13:10:25] *** Quits: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de) (Ping timeout: 244 seconds)
[13:15:20] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[13:17:19] *** Joins: buffet (~buffet@buffet.sh)
[13:19:04] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[13:20:33] *** Joins: SoF (~skius@user/skius)
[13:21:37] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[13:21:41] *** Joins: Hax0r (~Hax0r@51.252.26.81)
[13:22:00] *** Joins: independent56 (~independe@95.144.68.39)
[13:22:08] *** Joins: fweht (uid404746@id-404746.tooting.irccloud.com)
[13:27:33] *** Quits: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net) (Quit: Leaving)
[13:28:41] *** Quits: gggp (~textual@111.63.14.115) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:29:38] *** Quits: jazzy (~jaziz@2600:380:4671:e333:9dac:5e57:172f:3175) (Ping timeout: 250 seconds)
[13:30:14] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:75d9:8ee9:c723:ca70)
[13:32:33] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[13:32:50] *** Joins: quippy_ (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net)
[13:33:08] *** Quits: quippy (~quippy@47-220-146-143.gtwncmkt04.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[13:36:52] *** Joins: varaindemian (uid73404@id-73404.charlton.irccloud.com)
[13:38:14] *** Joins: ^-^hi (~nikw@user/-hi/x-1729478)
[13:38:43] *** Quits: Hax0r (~Hax0r@51.252.26.81) (Quit: Leaving)
[13:43:43] *** Guest6202 is now known as xSavitar
[13:43:45] *** Joins: czuk_cza (~mist@188.147.100.88.nat.umts.dynamic.t-mobile.pl)
[13:44:01] *** Quits: xSavitar (~xSavitar@kinserve.com) (Changing host)
[13:44:01] *** Joins: xSavitar (~xSavitar@user/xsavitar)
[13:45:06] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[13:49:12] *** Joins: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk)
[13:49:12] *** Quits: GeDaMo (~GeDaMo@82-69-2-253.dsl.in-addr.zen.co.uk) (Changing host)
[13:49:12] *** Joins: GeDaMo (~GeDaMo@user/gedamo)
[13:54:40] <Donitz> why is #dsp still dead
[13:54:47] <Donitz> Where is the new channel for digital signal processing
[13:55:58] *** Joins: trace987 (~trace@ip5f5a6a70.dynamic.kabel-deutschland.de)
[13:56:20] <varaindemian> does this like a known exploit? https://pastebin.com/24RjdN28
[13:56:22] <bayaz> Title: POST /upload.cgi HTTP/1.1Accept: application/vnd.yang.data+xmlContent-Length - Pastebin.com 
[13:56:26] <GeDaMo> ##dsp has 12 nicks
[13:56:47] <Donitz> pff, that's barely anything
[13:57:00] <Donitz> a channel needs like +50 users before you can actually get answers
[13:57:06] <varaindemian> I've seen like 20-30 of this in the logs. The only thing that differ is `boundary=-----------------------`
[13:57:23] <Donitz> damn freenode
[13:57:25] <Donitz> it was very useful
[13:57:27] <Donitz> for work
[13:57:31] <GeDaMo> Maybe they moved to a different server when Freenode imploded
[13:58:41] <GeDaMo> netsplit only shows the ones on Libera
[13:59:09] <GeDaMo> Well, there's a #music-dsp on EFnet but it only has 2 users
[14:00:04] <Donitz> blargh
[14:00:11] <Donitz> that's annoying
[14:01:15] <Akronymus> Yeah, so many communities lost.
[14:02:20] <varaindemian> anyone?
[14:02:28] <GeDaMo> Maybe there's a channel for specific software?
[14:03:14] *** Quits: eson123 (~eson123@118.69.128.37) (Quit: Leaving)
[14:03:40] <amigojapan> Donitz: they are probably in some alternative channel
[14:04:37] <Donitz> eh, it's software specific
[14:04:40] <GeDaMo> https://old.reddit.com/r/DSP/
[14:04:42] <bayaz> Title: Digital Signal Processing • r/DSP 
[14:04:44] <Donitz> I just have questions regarding signals in general
[14:04:58] <Donitz> regarding such things as fourier transforms, power spectral densities, periodograms
[14:05:03] <Donitz> periodograms*
[14:05:04] <varaindemian> Donitz: what questions do you have?
[14:05:14] <Donitz> well right now, how do you average DSP
[14:05:31] <Donitz> do I need to un-square the values
[14:05:42] <Donitz> whups
[14:05:43] <Donitz> not dsp
[14:05:45] <varaindemian> a filter might help
[14:05:48] <Donitz> I mean... power spectral density
[14:05:54] <GeDaMo> "The Scientist and Engineer's Guide to Digital Signal Processing" http://www.dspguide.com/pdfbook.htm
[14:05:54] <Donitz> no, I mean a mean of power spectral density
[14:05:55] <bayaz> Title: The Scientist and Engineer's Guide to Digital Signal Processing's Table of Content 
[14:05:59] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[14:06:08] <Donitz> power spectral density is fft magnitude squared
[14:06:14] <Donitz> do I need to unsquare them before taking the average
[14:06:16] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:75d9:8ee9:c723:ca70) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[14:06:36] <Donitz> ie, square root
[14:07:28] *** Joins: brabrax (~brabrax@user/brabrax)
[14:08:39] <Donitz> https://allsignalprocessing.com/lessons/the-averaged-periodogram-welchs-method/
[14:08:40] <bayaz> Title: The Averaged Periodogram: Welch's Method - ALLSIGNALPROCESSING.COM 
[14:08:44] <Amadiro> yes
[14:09:21] *** gitesh is now known as mentos
[14:09:23] <Donitz> ah
[14:09:33] <Amadiro> write it out with two or three terms on paper and you'll see why
[14:09:54] <password> I'm in need of a very simple/free linter
[14:09:58] <varaindemian> anyone here who might want to take a look at what I;ve posted earlier?
[14:10:07] <password> essentially all i want to lint for is function and variable names
[14:10:19] <Amadiro> password, for which language?
[14:10:26] <password> lua/js/c++
[14:10:28] <password> and php
[14:10:33] *** mentos is now known as gitesh
[14:10:50] <Amadiro> the guy who invented the D language made a linter that's language-agnostic that lets you do what you want, that might fit the bill
[14:10:51] <password> c++ us the least important on that list
[14:10:54] <Amadiro> it's used at facebook AFAIR
[14:11:06] <Amadiro> so you could write the rules once-only for all your languages
[14:11:31] <GeDaMo> Walter Bright?
[14:11:44] <password> my boss throws hissy fits over capitol mistakes
[14:11:53] *** Joins: mobidrop (~mobidrop@user/mobidrop)
[14:11:57] <Amadiro> ah, sorry, I meant Andrei Alexandrescu (he didn't invent D, just contributed to it later)
[14:11:57] <password> like chill brah , i knocked this script out in less than 4 hours
[14:12:16] <Amadiro> the tool is called "flint" I think
[14:12:33] <password> ah
[14:12:37] <password> facebook linter
[14:12:45] <password> assuming the guy is big at facebook?
[14:12:51] <Amadiro> well, I guess they abandoned it. sad
[14:13:05] <password> i knew interns that worked at facebook
[14:13:27] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[14:13:39] <password> eh
[14:13:48] <password> my boss does not know linter
[14:14:56] <password> hmm , seems like a muission to get up and running , I'll check it out for sure
[14:15:36] <Amadiro> you might need to set up separate linters for lua, js, C++ and PHP and configure their base rules, which will probably be a PITA
[14:15:36] <password> actually i thkn this may work aswell http://www.sublimelinter.com/en/stable/
[14:15:36] <bayaz> Title: Welcome to SublimeLinter — SublimeLinter 4.0.0 documentation 
[14:16:33] <Amadiro> password, just make sure its a tool that can be run from the command-line, so that you can run it as part of your build process, CI or git hook
[14:16:46] <password> build process , lol
[14:16:50] <Amadiro> so you can prevent code that violates the rules from being merged
[14:16:53] <password> i code for an baka
[14:17:06] <password> so deploy live is teh way we go :D
[14:18:48] <GeDaMo> baka?
[14:19:53] <GeDaMo> https://en.wikipedia.org/wiki/Baka_(Japanese_word) "means "fool", or (as an adjectival noun) "foolish" and is the most frequently used pejorative term in the Japanese language." ?
[14:19:53] <bayaz> Title: Baka (Japanese word) - Wikipedia 
[14:20:39] <password> i can write a book of bad coding practices we have
[14:20:44] <password> but meh
[14:20:52] * password getscv ready rather
[14:23:16] *** Joins: federico_it (~textual@151.95.116.125)
[14:24:50] *** Quits: monksam (~lain6141@119.224.72.222) (Quit: leaving)
[14:31:48] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Remote host closed the connection)
[14:31:53] *** Joins: salitos (~salitos@102.166.47.58)
[14:35:55] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 252 seconds)
[14:36:50] *** Joins: h4x0r (~GodMode@user/h4x0r)
[14:41:01] *** Quits: sebbu (~sebbu@user/sebbu) (Quit: reboot)
[14:41:53] *** Joins: frost (~frost@59.71.240.119)
[14:42:49] *** Joins: Mach (~Mach@82.79.208.93)
[14:42:52] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Read error: Connection reset by peer)
[14:43:57] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[14:44:17] *** Quits: pulse_ (~pulse@user/pulse) (Ping timeout: 250 seconds)
[14:47:06] *** Quits: s1b1 (~s1b1@user/s1b1) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:48:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[14:48:35] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 244 seconds)
[14:49:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:50:06] *** Joins: naansequitur (~naansequi@103.125.234.14)
[14:50:10] *** Parts: naansequitur (~naansequi@103.125.234.14) ()
[14:54:34] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[14:54:43] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[14:54:48] *** Joins: inky (~inky@46.36.119.19)
[14:55:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[14:55:06] *** Joins: independent56 (~independe@95.144.68.39)
[14:55:13] <Donitz> automation, heuristic algos, "I'm feeling lucky" will be the death of internet
[14:55:31] <Donitz> when tools start being marketing gimmicks
[14:56:00] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[14:56:20] <Donitz> the idea that being fed popular things is more important that accuracy
[14:56:20] *** Quits: _inky (~inky@5.77.154.240) (Ping timeout: 244 seconds)
[14:56:25] <Donitz> than*
[14:56:44] <password> Donitz well you can fix that issue!
[14:56:46] <Donitz> and that the user should not be in control. Infinite scrolling feeds
[14:56:52] <password> make a better search engine!
[14:57:02] *** Joins: daoistmonk (~daoistmon@113.116.89.164)
[14:57:03] <Donitz> Can't. There is a monopoly on things like youtube
[14:57:19] <password> youtube is probably the easiet way to make your own algo
[14:57:22] <Donitz> and no competitor can seriously compete against it without being shut down due to copyright violations when they become big enough
[14:57:22] *** Quits: inky_ (~inky__@5.77.154.240) (Ping timeout: 244 seconds)
[14:57:30] <password> some people have done it before as a hobby project
[14:57:42] *** Quits: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[14:58:04] <password> search result was and will foreever be very hit and miss
[14:58:05] <beaky> what is the banach-tarski paradox equivalent in programming
[14:58:17] <Donitz> youtube has crossed a barrier of entry in that they have made agreements with the copyright holders
[14:58:21] <Donitz> so they are relatively safe
[14:58:27] <Donitz> no small competitor has that power
[14:59:27] *** Quits: jaysicks (~jaysicks@82-131-226-33.pool.digikabel.hu) (Ping timeout: 250 seconds)
[14:59:41] *** Quits: CyberTailor (~cyber@gateway/tor-sasl/cybertailor) (Quit: Konversation terminated!)
[14:59:44] <password> you don't need to compete with youte to write your own algo
[15:00:00] <Donitz> I don't, but it's also almost surely against the TOS to do so
[15:00:00] *** Joins: CyberTailor (~cyber@gateway/tor-sasl/cybertailor)
[15:00:03] <password> you can literally write a search thingy that grabs youtube videos via its api
[15:00:04] *** Quits: APic (apic@apic.name) (Ping timeout: 252 seconds)
[15:00:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:00:18] <password> no one fucking cares
[15:00:30] <password> if its a hobby project no one will use you
[15:00:38] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 250 seconds)
[15:00:42] <password> many people have done exactly that and will continue to do that
[15:00:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:00:53] <Donitz> not much of a future
[15:00:55] <password> abide by their api agreement and they won't care
[15:00:55] <Donitz> making hacks
[15:01:27] <password> do you want to fixstuff , or sit on your rse and preach how screwed up it is?
[15:01:40] <Donitz> I can't fix things
[15:01:46] <Donitz> I don't have the power
[15:01:46] <password> making hacks is the only your going to prove your insight has any value
[15:01:51] <password> you do
[15:02:04] <password> Ideas is only worth as much as the effort you put into them
[15:02:26] <Donitz> you are suggesting temporary workarounds
[15:02:34] <Donitz> for a problem that will be with us forever
[15:02:35] <password> so?
[15:03:00] <password> no i suggest rolling your sleeves up instead of masturbating over the issue
[15:03:08] <password> the problem need not exist for you
[15:03:19] <arahael> password: No need to be crude.
[15:03:21] <password> if you don't use youtubes algo , thats one person
[15:03:34] <password> stop thinking there is only one way and one solution
[15:04:05] <Donitz> you know, you are one finger snap away from being dismantled if you become an inconvenience for youtube
[15:04:05] <password> moaning about corporations is kind of old by now
[15:04:18] <arahael> Also, there are plenty of youtube competitors.
[15:04:19] <password> you wont be an incovenience
[15:04:21] <TJ-> Donitz: so don't use it then
[15:04:29] <password> your literally provind them with more views
[15:04:34] *** Joins: s1b1 (~s1b1@user/s1b1)
[15:05:36] <password> also I'd liek to see you build an search engine based on accuracy instead f popularity
[15:05:42] <password> like do that
[15:05:55] *** h4x0r is now known as CinderellaMan
[15:05:56] <password> build an ai that can discern the two
[15:05:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[15:07:00] *** Joins: mishugana (~antaoisea@user/mishugana)
[15:07:05] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:07:09] <password> you know how google gets rid of competition , They buy them
[15:07:17] <password> they don't assinate them
[15:07:24] <arahael> password: That's good if you own the competition, so go do that!
[15:07:49] <password> hmm arahael ?
[15:07:53] <mishugana> are we talking about mergers and acquisitions in here? We have come a long way indeed! :D
[15:08:06] <password> were misguided :D
[15:08:12] <mishugana> XD
[15:08:24] <arahael> password: Nevermind, just a lot of people complain about google buying competitors too. :)
[15:09:17] <Donitz> no antitrust issues there
[15:10:24] *** Joins: zaher (~zaher@37.48.185.68)
[15:11:38] <password> lots of people complained about mysql being sold off too
[15:12:13] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:12:32] *** Joins: jaysicks (~jaysicks@91-82-168-11.pool.digikabel.hu)
[15:12:41] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:12:44] <password> i understand there are valid concerns , but half the time it feels like paranoia and the assumption is that all BIG corps are EVIL
[15:13:11] <password> ts an conversation that happens daily
[15:13:28] *** Joins: inky_ (~inky__@46.36.119.19)
[15:14:39] <Donitz> YouTube is becoming more malicious
[15:14:46] <Donitz> they absolutely broke their internal search engine
[15:14:50] <password> oh noes!
[15:14:56] <Donitz> now shuffling recommended videos into it like it's some kind of popular feed
[15:15:19] <Donitz> it's becoming nothing but an advertisment platform
[15:15:24] <password> into what?
[15:15:27] <Jck_true> Companies are profit driven.
[15:15:34] <arahael> Donitz: "becoming"?
[15:16:01] <Donitz> at least before it was a "tool" as well
[15:16:04] <password> Jck_true are you sure that not a byproduct of them being more evil than lucifer himself?
[15:16:05] <Donitz> now it's becoming less of one
[15:17:29] <mishugana> I miss the days when YouTube was not a substitute for cable.
[15:17:36] <password> i dont
[15:17:51] <password> i can watch 8 hour long videos 
[15:17:52] <mishugana> When people used to post genuine videos without a studio,makeup, lighting, sound effects, and editing by professionals.
[15:18:00] <password> never before have i been able to 
[15:18:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 250 seconds)
[15:18:21] <password> oh noes , proper video quolity still sells
[15:18:33] <password> theres a million channels like that still
[15:18:42] <mishugana> "Sells" is the key there - for good as well as for bad.
[15:18:44] <password> just turns out they don't do as good
[15:18:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:19:27] <mishugana> I guess it depends on the generation as well - for people who grew up on t.v, YouTube was a different medium of genuine expression, for the latter generations who grew up on YouTube, it's their t.v.
[15:19:30] <password> ApliedScience at one point downgraded his video tools because he noticed that people don't like too high of a production quality
[15:19:46] *** Joins: silasfox (~sbv@xdsl-85-197-57-82.nc.de)
[15:20:21] <password> i watch most my streams on youtube at like 240-480p , so i don't care
[15:20:31] <mishugana> I mean, when regular t.v and online t.v. start becomign clones of one another, then the whole thing is moot.
[15:20:51] <mishugana> I use YouTube as less as possible now. 
[15:20:53] * arahael rarely watches youtube.
[15:21:22] <password> i watches youtube not rarely
[15:21:47] <mishugana> Also, no offence to Indians, but searching for any quality technical content has become impossible due to the slew of teenage (and geriatric, seems like no middle ground) "experts" from every alley in India.
[15:22:04] <GeDaMo> I mainly use Youtube for listening to old songs :P
[15:22:12] <mishugana> Google/YouTube's algorithm ensures that actual content you remember being there is now drowened out in the noise.
[15:22:21] <password> GeDaMo same , my genre is best represented on youtube
[15:22:30] <password> i forgot my headphones at home today
[15:22:30] *** Joins: APic (apic@apic.name)
[15:22:31] <mishugana> I use YouTube primarily for trolling people now ... heh
[15:22:38] <Donitz> I have noticed a SIGNIFCANT drop in google search result quality this year
[15:22:42] <Donitz> especially related to programming
[15:22:49] <Donitz> significant*
[15:23:07] <mishugana> I think it's time again for forums and BBs and clones to make a comeback.
[15:23:26] <password> i liked BBs
[15:23:27] *** Joins: orondo (~orondo@user/orondo)
[15:23:30] <mishugana> Peer groups sharing content is much better than an ad-driven algorithm shoving something down my throat.
[15:23:36] <password> but
[15:23:49] <password> i don't think because i like somthing that it SHOULD be the way
[15:23:54] <Donitz> tech support using google has always been hell
[15:23:56] <Donitz> but now it's really bad
[15:24:10] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 240 seconds)
[15:24:17] <DPA> Maybe it's not that google has become worse, it's just that the useful sites are gone!
[15:24:25] <password> this is such a generational thing , if someone likes somethign they demand it to be the norm
[15:24:25] <mishugana> password: The distinction is subtle but strong though, isn't it? One should always have good viable options
[15:24:29] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:24:37] <Donitz> I think it's because they FOR SOME REASON don't filter out SEO-using sites anymore
[15:24:39] <Donitz> they are taking over
[15:24:41] <mishugana> It's a pity forums almost died out due to the prevalence of search and media like Reddit
[15:24:49] <password> mishugana i don't agree
[15:24:50] <mishugana> (which has become worse than shit)
[15:25:05] <password> reddit is a form on its own
[15:25:05] <mishugana> password: Don't agree with what? Options?
[15:25:06] <Donitz> Have you noticed that quora is almost always at the top of most results these days?
[15:25:22] <GeDaMo> I mainly use DDG for search
[15:25:31] <Donitz> Stack overflow is losing ranking
[15:25:35] <password> mishugana on your hingepoint of the subtle difference
[15:25:39] <Donitz> despite being the superior site for programming help
[15:25:45] <mishugana> Sure, that's not what I'm saying though - I'm saying that media like reddit have contributed to the near-deaths of dedicated discussion forums.
[15:25:47] <password> oh noes
[15:25:51] <password> all sites eventually dies
[15:25:55] <Donitz> over stack overflow you get these SEO keyword stuffing terrible copy-paste websites
[15:26:11] <mishugana> GeDaMo: Me too, unless the results are particularly bad, and then I try google
[15:26:27] <mishugana> password: very zen
[15:26:36] <Donitz> Hell, when you google a python function, you get these terrible websites over the official python docs
[15:26:37] <Donitz> insane
[15:27:02] <password> what terrible websites?
[15:27:13] <arahael> Donitz: Why don't you just use official documentation?
[15:27:19] <Jck_true> Everything is a system. As we get faster and faster computers the optimizations just come faster and faster. The closed loop nature of it just start running amuck...
[15:27:22] <password> DONIts , well did you tell google you want official docs?
[15:27:26] <mishugana> Medium-like blogs writtens solely to fulfill some writing quota, for instance
[15:27:30] <password> r do you expect it to mind read?
[15:27:36] <Donitz> arahael, because I'm used to using google to get to them
[15:27:46] <Donitz> yes, I expect google to mind read
[15:27:49] <arahael> Donitz: Try to break that habbit, then.  Myself? I use Dash.
[15:27:51] <Donitz> that is what we have come to expect
[15:27:51] <Jck_true> You can't blame the owner of "randompythonblog.com" trying to optimize to get his questions at the top of a google query
[15:27:56] <Donitz> bait and switch
[15:28:02] <password> https://www.google.com/search?q=python+official+documentation
[15:28:04] <bayaz> Title: python official documentation - Google Search 
[15:28:05] <password> wow
[15:28:15] <password> yeah i don't get offical documentation
[15:28:23] <GeDaMo> Maybe you need to write your own search engine that works the way you expect :P
[15:28:26] <Donitz> you missed the point
[15:28:35] <mishugana> Donitz: FWIW, I agree with you.
[15:28:49] <password> yeah you missed teh point that he is an angsty teenager that is unwilling to code
[15:28:49] <mishugana> facetiousness is very humorous, but tediously so.
[15:29:05] <password> anyway , gotta do real work now
[15:29:05] <mishugana> funny, you sound more like that to be honest.
[15:29:09] <password> enjoy moaning
[15:29:13] *** Quits: password (~password@user/password2) (Quit: Connection closed)
[15:29:18] <mishugana> Lmfao
[15:29:29] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[15:29:43] <Donitz> sigh, the point was that I used to be able to google a python question
[15:29:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[15:29:49] <GeDaMo> http://www.tbray.org/ongoing/When/200x/2003/07/30/OnSearchTOC
[15:29:49] <Donitz> and have google point me to the official function to do it
[15:29:49] <bayaz> Size: 11.5 kB 
[15:29:53] <Donitz> ie, mind reading
[15:30:22] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:31:11] <orondo> In firefox you can create specialized searches, for example the prefix "dotnet" to search in the dotnet documentation from microsoft.
[15:31:19] <Jck_true> Donitz: "Click here to download python.dll which will fix common issues python.exe not responding"
[15:31:40] <GeDaMo> DDG has bang commands to search specific sites
[15:31:49] <Akronymus> Jck_true that screams scam/virus
[15:31:52] <orondo> Also, that.
[15:31:59] <Donitz> yeah, windows tech support in particular is terrible
[15:32:03] <Jck_true> Akronymus: Yeah.
[15:32:07] <Donitz> "Do you have issues with x? Fix issues with x"
[15:32:11] <Donitz> "Download x fixing tool today"
[15:32:19] <Jck_true> Auto generated 90% of it
[15:32:20] <Akronymus> msdn/msdocs: 404
[15:32:25] <Donitz> Jesus, tech-illiterate people must be so lost
[15:32:25] *** Joins: jazzy (~jaziz@2600:380:4452:a3ec:1dd5:e36f:ac02:9c83)
[15:32:39] <Akronymus> So many cases of documentation just being *gone*
[15:32:58] <mishugana> I don't miss my days of downloading shady dlls from the web anymore... heh. I switched over to macOS during the Win 7 era, and it's been great.
[15:33:13] <mishugana> Took a look at Windows 10 a year or so back, it was absolutely horrendous.
[15:33:36] <Donitz> I don't even like downloading .dll files from official driver sites
[15:33:36] <mishugana> Never again.
[15:33:39] <Jck_true> Akronymus: Well the MSdocs are rarely that helpful either for non tech people. They provide a lot of information about different windows versions and their differences...
[15:33:41] <Donitz> like realtek
[15:34:18] <GeDaMo> DDG has !py for searching Python docs
[15:34:23] <Donitz> windows at least got that one good aspect with it. It has very good built-in driver support
[15:34:38] <mishugana> I do plan to buy a custom-made Win 98/XP PC to run my old nostalgia games though - Monster Truck Madness, SBK 2001 et al. 
[15:35:27] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 245 seconds)
[15:35:27] <mishugana> Heh.
[15:35:27] <mishugana> My experience with DDG has been either great or terrible - seems to be no middle ground!
[15:36:10] <Donitz> I've used it a couple of times
[15:36:19] <Donitz> if you want to find topics which google won't touch (nothing political)
[15:36:21] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:36:28] <mishugana> Donitz: Spot on
[15:36:29] <Akronymus> DDG is my daily driver.
[15:36:38] <Akronymus> I use the !g bang a lot though...
[15:36:55] <mishugana> Akronymus: Yup - keep that option on Safari, set ddg as default on FF.
[15:37:10] <arahael> Keep in mind that ddg is a meta-search engine, it ultimately uses google, bing, and others.
[15:37:12] <GeDaMo> I think the bang I use most is !yt for Youtube
[15:37:26] <orondo> I have shortcuts for searching in the wikipedia, with wpe word, and many others for dictionaries, etc.
[15:37:30] *** Joins: gitgood (~gitgood@80-44-15-155.dynamic.dsl.as9105.com)
[15:37:31] <mishugana> Is there a dedicated bang for porn sites?
[15:37:45] <orondo> In FF you can create one.
[15:37:45] <Akronymus> arahael yeah, handing you off to the other sites search engine is a selling point for it IMO
[15:37:45] <mishugana> Just curious
[15:37:50] <mishugana> orondo: Aha
[15:37:56] <Akronymus> mishugana !ph maybe?
[15:38:04] <mishugana> Akronymus: lemme try that
[15:38:08] <orondo> What does "ph" stand for?
[15:38:10] <GeDaMo> https://duckduckgo.com/bang_lite.html
[15:38:11] <bayaz> Title: DuckDuckGo !Bang 
[15:38:11] * orondo has no clue.
[15:38:16] <mishugana> Akronymus: nope
[15:38:17] <GeDaMo> Pornhub?
[15:38:31] <Akronymus> orondo python hub
[15:38:42] <mishugana> yeah, though I think xhamster has a more gritty earthy feel to it
[15:38:46] <orondo> Almost. It stands for "product hunter"
[15:38:47] <mishugana> Heh. 
[15:38:53] <mishugana> Hahaha
[15:38:58] <arahael> "almost"...
[15:39:00] * arahael shakes his head.
[15:39:05] <orondo> I tried it. 
[15:39:23] <arahael> ANyway, lets keep this channel family-friendly.
[15:39:29] <Akronymus> I wonder if it has a bang for monosodium glutamate.
[15:39:44] <Akronymus> arahael sorry, saw that message too late
[15:39:51] <mishugana> lol
[15:40:21] * arahael shakes his head again.
[15:40:23] <DPA> https://how-i-experience-web-today.com/
[15:40:35] *** Joins: nekodesu (~bit@user/nekobit)
[15:40:47] <DPA> New stuff is just no good.
[15:41:07] <arahael> What particularly infuriates me is when I search for something, google gives me results that *do not contain the words I searched for!*
[15:41:40] <arahael> I'm tempted to write up a personal "meta search engine", that just simply quotes every single word and then passes that as the search query.
[15:41:48] <Akronymus> Ah yes, even using `"` doesn't solve it
[15:41:59] <Akronymus> Because fuck you
[15:42:06] <pikapika> Akronymus, yes
[15:42:07] <GeDaMo> Can you prefix words with + to force their inclusion?
[15:42:08] <Akronymus> Because you clearly have no idea what you want
[15:42:27] <Akronymus> GeDaMo google used to respect the + and quotes
[15:42:31] <arahael> Akronymus: Yeah, it's not completely.
[15:42:32] <Akronymus> Now... not so much
[15:42:37] <GeDaMo> :/
[15:42:46] <mishugana> I think I might try Yandex.ru for a bit
[15:42:56] <Donitz> why does the ALSA driver microphone not work before I run audacity once
[15:42:59] <Donitz> then it starts working in python
[15:45:50] <Akronymus> https://news.ycombinator.com/item?id=12340016
[15:46:15] <Akronymus> Finally found a comment that puts it into better words than I could.
[15:46:18] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[15:46:24] <Akronymus> (In regards to DRY and incidental similarity)
[15:48:40] *** Quits: salitos (~salitos@102.166.47.58) (Ping timeout: 240 seconds)
[15:49:11] <mishugana> Unfortunately, the common reaction is almost aways - "seek random gem/crate/library online, and add it to the dependencies, and we're good to go". That's terrible.
[15:49:48] <mishugana> I saw that a lot in my old workplace with Clojure and Ruby projects - jump dump and move on, security and maintainability be damned.
[15:49:57] <Akronymus> mishugana Many times a library forces me to use 20 function calls where I could write 1 that does what I need better.
[15:50:00] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[15:50:27] <Akronymus> Speaking of: WHY force data into a OOP model?
[15:50:36] <Akronymus> I hate HATE ORM's.
[15:50:40] <pikapika> mishugana, I'd rather not write my own http library for example. The rfcs arre large and there are lot of subtelities to it.
[15:50:41] <mishugana> Akronymus: True that. And before people jump in with the "never write your own code" refrain, I think it's pretty clear that that's understood and appreciated.
[15:52:10] <Akronymus> mishugana I like having concise code that expresses what I want.
[15:52:10] <mishugana> pikapika: I see that my message arrived a second too late.
[15:52:10] <Akronymus> So, rather than loops, I just use a map or fold
[15:52:10] <mishugana> Of course, I think Akronymus was referring to libraries that don't do anything critical.
[15:52:10] <Akronymus> Yeah.
[15:52:29] <Akronymus> Stuff like extracting data from a json is something I hand over to libraries as there are ones out there that allow me to just call a deserialize on it, for example.
[15:52:53] <Akronymus> But for transforming data, I mostly write it myself.
[15:52:57] *** Quits: czuk_cza (~mist@188.147.100.88.nat.umts.dynamic.t-mobile.pl) (Quit: WeeChat 3.2)
[15:54:12] <mishugana> Like this guy - https://www.npmjs.com/package/is-even
[15:54:13] <bayaz> Title: is-even 
[15:54:26] <mishugana> which is a four-liner that depends on, shudder, this guy - https://www.npmjs.com/package/is-odd
[15:54:27] <bayaz> Title: is-odd 
[15:54:29] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 250 seconds)
[15:54:36] <mishugana> which is a ten liner that checks is a number is odd. 
[15:54:36] <pikapika> mishugana, thats because of weak typing
[15:54:38] <mishugana> Lmfao
[15:55:00] <pikapika> A language with more normal typing won't need such libraries for checking even/odd
[15:55:00] <mishugana> And it has a bunch of dependent projects on it 
[15:55:13] <Akronymus> Member left-pad?
[15:55:14] <mishugana> What?
[15:55:25] <pikapika> mishugana, js is very weak typed
[15:55:38] <mishugana> I know, but what's that got to do with an even number function?
[15:55:47] <pikapika> Which is why iseven is so long
[15:55:50] <Akronymus> I think I am missing something
[15:56:12] <GeDaMo> Same guy https://github.com/jonschlinkert/ansi-red
[15:56:13] <bayaz> Title: GitHub - jonschlinkert/ansi-red: The color red, in ansi. 
[15:56:20] <mishugana> I think I am too - I'm hoping that that's a joke
[15:56:30] <pikapika> In a Java or C you'd just write n%2==0
[15:56:31] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[15:56:42] <mishugana> GeDaMo: LMFAO
[15:56:49] *** Joins: Twipply (~Twipply@user/twipply)
[15:56:54] <mishugana> This guy is a brilliant troll, I think
[15:57:18] <Akronymus> mishugana either that or genuinly wanting to expose the shortcomings of npm
[15:57:26] <CinderellaMan> mishugana✓
[15:57:28] <mishugana> Akronymus: Possibly
[15:57:57] <pikapika> What shortcomings? I think it should on the contrary expose that this package management tool is so easy to use people are using it for anything and everything.
[15:58:05] <mishugana> pikapika: It's not about the length - the `is-even` library simply calls a function in `is-odd`, which then checks if a number if odd. Hahahaha
[15:58:13] <Akronymus> oooooh
[15:58:17] <Akronymus> thats what I was missing
[15:58:22] <Akronymus> still got him muted
[15:58:38] <pikapika> mishugana, I know this man is trying to write funny functions as libraries but, theres a reason the is_even function is any longer than just return n%2==0
[15:58:43] <pikapika> And that has to do with js weak typing
[15:59:18] <mishugana> Ah
[15:59:34] <Donitz> I don't agree
[15:59:38] <Donitz> when you need something like get_even
[15:59:43] <Donitz> you should know your exact use case
[15:59:50] <Donitz> you shouldn't need to check for a lot of silly conditions
[16:00:02] <Donitz> robust code !== good code
[16:00:06] <Donitz> neccesarily
[16:00:14] <pikapika> Donitz, weak typed langauges necessitate a lot of defensive if elses like that
[16:00:19] <Donitz> I disagree
[16:00:22] <Donitz> you know what you use
[16:00:26] <Akronymus> OSS != good software too
[16:00:27] <Donitz> weak typed isn't an excuse
[16:00:40] <pikapika> Weak typed is the reason. Your compiler won't point out typos or misues.
[16:00:48] <Donitz> it won't, but you should know
[16:00:50] <mishugana> Even the github page mentions - "I created this in 2014, the year I learned how to program." XD
[16:01:11] <pikapika> Donitz, that argument is equivalent to saying everyone should just code in asm
[16:01:12] <mishugana> I think this guy is definitely trolling node users
[16:01:28] <Donitz> no, that argument is the equivalent in saying: Don't code like you're in the wild west. Be specific and clear
[16:01:30] <pikapika> "You should know better" and therefore won't commit any bugs
[16:01:31] <Donitz> your intent is clear
[16:01:34] <Donitz> your variables are clear
[16:01:38] <Donitz> check for the things that matter
[16:01:44] <mishugana> pikapika: Just use erlang, and "let it crash" :D
[16:01:56] <pikapika> Of course, but no amount of human checking will avoid these kinds of bugs.
[16:01:59] <Akronymus> mishugana erlang is actually pretty damn good.
[16:02:11] <pikapika> Having aids like a decently type checking compiler are impoirtant
[16:02:15] *** Joins: juliaEnv (~juliaEnv@ip-86-49-255-181.net.upcbroadband.cz)
[16:02:20] <GeDaMo> https://en.wikipedia.org/wiki/Crash-only_software
[16:02:21] <bayaz> Title: Crash-only software - Wikipedia 
[16:02:25] <mishugana> In any case, for dynamic languages, most of the data sanitisation is actually done outside of the application code - at the interface to the outside world
[16:02:26] <Donitz> another very good equivalent is to ESCAPE EVERYTHING
[16:02:30] <Donitz> because more escaping is better, right?
[16:02:44] <mishugana> Like with schema in Clojure, for instance, so that argument doesn't make much sense
[16:02:47] <Akronymus> Donitz $"""sometext"""
[16:02:53] <mishugana> Unless you invent a type system for the language itself!
[16:03:01] <pikapika> mishugana, its not just about input sanitization
[16:03:03] <Akronymus> f# allows you to use triple quotes to prevent any need to escape.
[16:03:11] <pikapika> You could mistakenly supply any number and kind of arguments to a function
[16:03:17] <pikapika> and the compiler won't say anything
[16:03:20] <pikapika> because its perfectly valid
[16:03:24] *** Joins: zaher_ (~zaher@185.123.102.57)
[16:03:32] <mishugana> Akronymus: Yup - been learning that - the language is quite small, but the OTP is the biggest bit of it. Looking to do some hobby projects in it!
[16:03:41] <Akronymus> combined with $ for interpolation (Which actually necessitates escaping {} again.
[16:03:48] <Donitz> internally, you shouldn't be accidentally using any arguments
[16:03:54] <Donitz> you should not need checks internally for using the wrong args
[16:03:56] <Donitz> that is bloated code
[16:04:07] *** Joins: Pickchea (~private@user/pickchea)
[16:04:12] <Donitz> you can check for out of range conditions
[16:04:15] <Donitz> or missing elements
[16:04:18] <pikapika> Donitz, "just avoid bugs bro"
[16:04:19] <mishugana> pikapika: So the thing is this - if your domain requires you to code defensively to the point that you need a bad emulation of a static type system, then either you're doing it wrong, or the language is the wrong one for the job.
[16:04:21] <pikapika> "just avoid typos bro"
[16:04:30] <Akronymus> ) but that's the only rarely.
[16:04:32] *** Quits: zaher (~zaher@37.48.185.68) (Ping timeout: 244 seconds)
[16:04:33] <mishugana> Just use static types, bruh.
[16:04:40] <pikapika> I prefer static types
[16:04:56] <mishugana> Yes, me too, but dynamic languages are super easy and fun to prototype in!
[16:05:03] <Amadiro> I prefer static typing too, but sometimes it's not practical to use a statically typed language for reasons outside of your control
[16:05:04] <pikapika> Sometimes
[16:05:40] <mishugana> Akronymus: You mean triple quotes in F# let you write raw strings?
[16:05:44] <pikapika> mishugana, I think languages that are very stringy are the most interesting dynamic langs. I will be learning awk and perl next.
[16:05:46] <mishugana> If so, nice.
[16:05:55] <Akronymus> mishugana yeah
[16:05:56] <mishugana> I wish Java had this feature - maybe in a release soon(?)
[16:05:58] <Amadiro> pikapika, you might also be interested in TCL then
[16:06:07] <pikapika> Amadiro, thanks
[16:06:07] <Donitz> typescript if you really need it
[16:06:11] <Akronymus> interpolation is still possible though
[16:06:21] <mishugana> pikapika: I cannot abide perl, but awk is pretty nice indeed - too bad I never mastered it.
[16:06:26] <mishugana> Maybe I should too...
[16:06:28] <Akronymus> Only thing that won't work is a " at the end of the string
[16:06:30] <Donitz> I obviously prefer static types. In my opinion, dynamic types doesn't actaully bring any benefit at all
[16:06:33] <Donitz> it just is what it is
[16:06:47] <Akronymus> Unityping has some benefit
[16:06:50] <Donitz> actually*
[16:07:04] <Akronymus> But not worth it.
[16:07:14] <Akronymus> IMO
[16:07:17] <Donitz> I freaking loved the way actionscript 3 handled types
[16:07:20] <Donitz> very nice
[16:07:27] <Donitz> I think it's basically the same as typescript
[16:07:37] <pikapika> bash = everything is a string
[16:07:37] <mishugana> Whoa, I almost forgot the AS was a thing - pretty decent as well from the looks of it.
[16:07:45] <pikapika> Its interesting how much can be done by piping together text tools
[16:07:48] <mishugana> I remember Flex being a hot cake a decade or so ago.
[16:08:03] <Donitz> I stopped trying to do complicated things in bash, and just use python
[16:08:04] <Donitz> saves time :P
[16:08:11] <mishugana> haha
[16:08:15] <arahael> Donitz: Same, except here we use Ruby.
[16:08:26] <Akronymus> i quite like powershell actually
[16:08:27] <mishugana> I quite like Ruby, but cannot stand Rails
[16:08:28] <Amadiro> Donitz, I think actionscript was not structurally typed like TS
[16:08:35] <Donitz> as3 was rather similiar
[16:08:47] <Donitz> http://edutechwiki.unige.ch/en/AS3_example_Drawing_graphics
[16:08:48] <bayaz> Title: AS3 example Drawing graphics - EduTech Wiki 
[16:09:09] <Donitz> no function example
[16:09:10] <pikapika> Yes python is very nice, its syntax is C like and it has a lot of libraries
[16:09:11] <mishugana> Ruby's interactive shell was quite nice - I forgot the name - FLy? Fry?
[16:09:23] <Akronymus> >If you use double quotes (" ") around arguments in an argument list, ABL removes them. However, if you use single quotes (' '), ABL passes them.To pass one set of double quotes, you must use four sets of double quotes.
[16:09:29] <Akronymus> ... WHY?
[16:09:38] <Donitz> python is the greatest teaching language
[16:09:39] <mishugana> What's ABL?
[16:09:46] <Akronymus> Progress/openedge
[16:09:51] <Donitz> python + jupyter is great for teaching statistics and signal processing
[16:09:55] <Donitz> and machine learning
[16:09:56] <Akronymus> advanced business language
[16:10:01] <Donitz> tensorflow + cuda is extremely powerful
[16:10:01] <mishugana> Ah, okay.
[16:10:09] <pikapika> Donitz, not really. I'd say a dynamic typed language is too hard for a beginner.
[16:10:17] <Akronymus> Fucking awful language
[16:10:22] <mishugana> pikapika: Why so?
[16:10:45] <Donitz> python is very easy on the eyes
[16:10:45] <mishugana> Akronymus: hahaha
[16:10:45] <pikapika> mishugana, it is highly discouraging to do edit+run cycles as a beginner just to fix some minor typo thats occuring 10 minutes of execution later
[16:10:50] <Donitz> it flows more like a human language
[16:10:52] <pikapika> Rather have the compiler point it out is much better
[16:10:52] <Donitz> compared to something like c
[16:11:02] <merijn> Donitz: That's comparing some extremes :p
[16:11:03] <mishugana> Hmmm
[16:11:11] <Akronymus> Donitz ever seen lisp?
[16:11:13] <pikapika> C is beginner friendly
[16:11:13] <merijn> I think Python is a terrible teaching language. But so is C :p
[16:11:22] <pikapika> I'd say Java is the best beginner language
[16:11:23] <merijn> Honestly, I can't really think which of the two is worse >.>
[16:11:28] <mishugana> Then again, I miss a REPL when doing some Rust
[16:11:35] <merijn> mishugana: There's a C repl :p
[16:11:35] <mishugana> Dyn langs have superb REPLs
[16:11:44] <Akronymus> IMO lisp is a AMAZING beginner language
[16:11:49] <pikapika> Dyn languages are too advanced for beginners
[16:11:49] <merijn> mishugana: There's plenty of static languages with great REPLs...
[16:11:50] <Akronymus> BECAUSE the repl.
[16:11:51] <mishugana> merijn: Hehe, yeah, saw that on reddit the other day - maybe will try it out!
[16:11:52] *** Joins: Leone (~Leo@24.140.234.189)
[16:11:58] <pikapika> They will be frustrated by typos
[16:12:04] <pikapika> Static typing is easy and friendly
[16:12:15] <mishugana> I was actually thinking of attempting a REPL for Rust from scratch, but the compiler API is very unstable
[16:12:28] <pikapika> C is also a very friendly first time language
[16:12:32] <mishugana> and spawning a process to manually call the compiler is too hacky to be fun
[16:12:37] <merijn> mishugana: Both Haskell and Ocaml have super nice repls for playing around with. They're not really suitable for interactively coding in the sense that some people use jupyter, but I'd argue that's a feature, not a bug :p
[16:12:38] <Amadiro> java is very boilerplatey even in modern versions, and the build systems used with it are very heavyweight. I'd probably not push it onto a beginner
[16:12:44] <mishugana> pikapika: I am sure now that you're trolling everyone here :D
[16:13:05] <pikapika> It has the added benefit that its the language actually shows things that are difficult for hardware to be difficult to code also
[16:13:09] <mishugana> merijn: true, but useful enough to get some experiments in - just like JShell
[16:13:14] <Akronymus> I think pika is quite serious, sadly.
[16:13:16] <pikapika> And things that are easy for hardware are easy to code
[16:13:27] <mishugana> Common Lisp is my favourite interactive environment - that's one place where Clojure sucks
[16:13:37] <pikapika> So the programmer gets a good rough idea of what things are good for the computer
[16:13:38] <mishugana> Akronymus: Oh!
[16:14:04] <Akronymus> mishugana actually, such discussions are the reasons why I put him on the ignore list
[16:14:07] <pikapika> Amadiro, its very beginner friendly. Static typing, simple syntax, extensive built in libraries.
[16:14:16] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[16:14:21] <Akronymus> Because otherwise I keep getting into fights with him
[16:14:26] <mishugana> Hahaha
[16:14:28] <mishugana> I see
[16:14:56] <merijn> Akronymus: With people shilling see it's very hard to tell trolling from "not understanding how terrible C is" :p
[16:15:02] <merijn> s/see/C
[16:15:05] <pikapika> Amadiro, I'd say learning the basics of a java build system are no harder than learning the basics of a virtual env
[16:15:07] <merijn> wtf, brain, work with me here
[16:15:12] <Akronymus> C isn't terrible per se.
[16:15:22] <pikapika> Actually you can do that for java inside the ide instead of having to teach the beginner the terminal
[16:15:22] <arahael> It really is.
[16:15:44] <Akronymus> I don't think it is very expressive, but rather that the low level nature gets into the way of expressing what you want.
[16:15:50] *** Joins: Mangy_Dog (Mange@user/mangy-dog/x-7397214)
[16:15:51] <pikapika> C is a good language to teach people what things are computer friendly and what are not
[16:16:02] <arahael> I think Pascal is far better than C ever was.
[16:16:08] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:75d9:8ee9:c723:ca70)
[16:16:11] <pikapika> Heavy string wankery is complicated to write, and thats because its annoying for the computer too
[16:16:32] <pikapika> C is the perfect balance between user friendly and computer friendly
[16:16:38] <mishugana> arahael: Didn't Pascal have the same issues as Ada with array types?
[16:16:47] <Akronymus> Pascal is too verbose for me.
[16:16:53] <mishugana> Menaing <array 3 of ...> being different from <array 5 of ..>?
[16:17:02] <pikapika> But yes, if C is seen as hard for the beginner, then I'd say Java is an excellent beginners choice
[16:17:03] <mishugana> Meaning*
[16:17:10] <arahael> mishugana: Funnily enough, C has that same issue, too.
[16:17:15] <pikapika> Its a simpler language
[16:17:25] <arahael> mishugana: And then sidesteps it entirely by basically messing arrays up entirely.
[16:17:29] <pikapika> in terms of syntax
[16:17:32] <pikapika> that is
[16:17:35] <pikapika> not in terms of power
[16:17:42] <mishugana> Yes, but we always pass in the length anyway
[16:17:54] <pikapika> All arrays are just an offset and a length
[16:17:55] <mishugana> The type system does not consider them different though?
[16:17:58] <pikapika> C shows you the reality
[16:18:08] <pikapika> It even makes it easier for you in that you don't have to record the step size
[16:18:08] <mishugana> pikapika is going the zen way! :D
[16:18:11] <pikapika> only the item count
[16:18:13] <Akronymus> mishugana that's quite the landmine.
[16:18:36] <Akronymus> There is one useful application of that that I can think of.
[16:18:41] <pikapika> In asm you will have to take note of base address, index and item size
[16:18:43] <Akronymus> Sub slices are quite easy in c-
[16:18:49] <pikapika> In C you only need to consider base address and index
[16:18:53] <Akronymus> s/-/.
[16:18:58] <pikapika> Item size is dealt with automatically
[16:19:18] <pikapika> C is much easier than asm
[16:19:25] <mishugana> Hehe
[16:19:27] <pikapika> Though in some ways asm is also easier htan C
[16:19:28] <merijn> Thinking C shows you the reality is a clear sign you think computers have changed since the late 90s >.>
[16:19:49] <pikapika> merijn, they have but they expose the same way still
[16:19:55] <pikapika> The changes are sub-asm level
[16:19:57] <Akronymus> did you drop a "not" merijn
[16:20:07] <merijn> Akronymus: Eh, yes
[16:20:12] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[16:20:17] <pikapika> merijn, the changes are below the level visible to a programmer
[16:20:22] <merijn> because triple-tasking is hard and, unlike modern computers, my brain is not multi-scalar
[16:20:25] <merijn> pikapika: hah
[16:20:26] <pikapika> Its in stuff like internal organization of memory, microcodes etc
[16:20:34] <merijn> Sure, if you don't give a shit about performance :)
[16:20:40] *** Joins: novns (~novns@user/novns)
[16:20:48] <pikapika> merijn, these changes aren't even visible in asm
[16:20:50] <mishugana> I'm actually starting to enjoy pikapika's poetic style...
[16:20:53] <Akronymus> merijn in most cases giving a shit about performance isn't needed
[16:20:54] <pikapika> asm is the lowest level that is exposed the programmer
[16:21:05] <Akronymus> At least IME
[16:21:13] <Akronymus> For writing business software.
[16:21:18] <mishugana> True
[16:21:21] <merijn> Akronymus: It is, but people always give a shit about the wrong performance
[16:21:25] <pikapika> And the general guidelines for cache friendliness and pipelining etc I don't think have changed much
[16:21:26] <Akronymus> Most of the stuff is IO bound anyways.
[16:21:36] <Akronymus> (Network/DB)
[16:21:43] <merijn> Akronymus: Most of the people complaining about bloat and bad performance then spent their time micro optimising 3 instructions that don't matter >.>
[16:22:02] <Akronymus> merijn yeah, algorithm level changes are much more important
[16:22:08] <Akronymus> Or reducing the data you gather
[16:22:14] <GeDaMo> Meymory layout
[16:22:18] <mishugana> Also, benchmark benchmark, benchmark
[16:22:22] <merijn> Akronymus: See, all that means you *should* care about performance. Since it means you should design your code to minimise request and batch transfers
[16:22:35] <pikapika> Most of the people complaining about these factors are people who can't afford more than 8gb ram and a rust disk. And or are people with top model laptops that still seem to be worse than computing 20 years ago.
[16:22:35] <merijn> by the way
[16:22:37] <Akronymus> And I intentionally have a heavily throttled VM.
[16:22:42] <merijn> Have you guys heard the glorious news?
[16:22:45] <|7|> making optimal algo insted of play with memory/pointers and name it optimization is simply hard :D
[16:22:49] <pikapika> Akronymus, yes
[16:22:58] <pikapika> I believe the test environment should be very resource throttled
[16:23:13] <GeDaMo> I only have 4GB of RAM :|
[16:23:14] <Akronymus> merijn oh that's fair. I meant it more in the sense of performance only starts to matter once it works.
[16:23:21] <pikapika> |7|, they are both related
[16:23:24] <merijn> SQLite is getting strict typing! Making it officially the best piece of software in existence :>
[16:23:26] <mishugana> GeDaMo: What?
[16:23:31] <arahael> merijn: Woah.
[16:23:32] <pikapika> mishugana, its very common
[16:23:38] <mishugana> My laptop's from 2014, and it still has 16GB :O
[16:23:38] <arahael> merijn: That's amazing.
[16:23:42] <merijn> arahael: Planned for the 3.37 release!
[16:23:49] <pikapika> Its still the most common memory size according to Mozilla's survey of their firefoxes
[16:23:50] <merijn> arahael: https://www.sqlite.org/draft/stricttables.html
[16:23:51] <bayaz> Title: STRICT Tables 
[16:23:51] <GeDaMo> This computer (apart from the GPU is from 2009)
[16:23:53] <arahael> merijn: Why did they take so long?'
[16:23:57] <Akronymus> |7| I was thinking more of using a quicksort rather than insertion sort above some size.
[16:24:01] <mishugana> pikapika: That's ... interesting
[16:24:02] <GeDaMo> Er, (apart from the GPU)
[16:24:12] <mishugana> GeDaMo: That explains it.
[16:24:16] <Akronymus> Altough, even that depends.
[16:24:29] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[16:24:50] <pikapika> But yeah really
[16:25:01] <pikapika> I'd say Java is the best language to teach programming adrian17 
[16:25:10] <Akronymus> For continuously collecting log entries from multiple network sources for example, a insertion sort is probably better.
[16:25:11] <pikapika> * Amadiro 
[16:25:22] <Akronymus> s/probably/very likely
[16:25:23] <arahael> pikapika: Java's an awful, inconsistent language, really.
[16:25:24] <X-Scale> pikapika: even better than scheme ?
[16:25:45] <mishugana> My own progression was: LOGO -> BASIC -> C++ -> Java -> {many many others}. What about you folks?
[16:25:51] <Akronymus> arahael java gets in the way with the EVERYTHING MUST BE AN OBJECT
[16:25:55] <pikapika> X-Scale, yeah definitely better than some hipster lisp
[16:26:08] <mishugana> pikapika: hahaha
[16:26:08] <Akronymus> mishugana C -> Java -> c# -> f#
[16:26:17] <mishugana> Interesting!
[16:26:18] <X-Scale> pikapika: LISP has been around since around 1956
[16:26:23] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:26:25] <pikapika> X-Scale, it may be a good language
[16:26:26] <GeDaMo> BASIC -> asm (Z80, 6502) -> COBOL -> C
[16:26:30] <Akronymus> Altough, at work I have to use progress.
[16:26:31] <pikapika> But I don't think it is good for beginners
[16:26:33] <mishugana> F# seems like a nice balance of functional and side-effects
[16:26:37] <GeDaMo> There were probably a few others in there :P
[16:26:49] <mishugana> GeDaMo: Very eclectic!
[16:26:55] <pikapika> I am not dissing lisps or schemes
[16:26:59] <X-Scale> GeDaMo is the real deal
[16:27:25] <pikapika> arahael, maybe but not much more inconsistent than most other languages
[16:27:30] <smallville7123> how do i link to a macos framework when using xcode generator?
[16:27:34] <mishugana> People hate on it, but COBOL seems very declarative indeed. I played around with it for some time last year, and it's very readable.
[16:27:44] <Donitz> C# > Python > Javascript > Java > Php
[16:27:51] <Donitz> > C
[16:27:52] <pikapika> "declarative" is meaningless
[16:27:55] <Donitz> hue hue he
[16:28:01] <mishugana> Donitz: Nice mix of static and dynamic in there
[16:28:06] <X-Scale> nothing beats C
[16:28:20] <mishugana> pikapika: All hail the imperative gods! :D
[16:28:21] <Akronymus> Cobol is pretty good at mass scale data manipulation afair.
[16:28:29] <Donitz> Fortran90 is pretty cool
[16:28:33] <pikapika> There is no such thing as "declarative"
[16:28:35] <pikapika> It does not exist
[16:28:57] <mishugana> pikapika: what's your interpretation of "declarative"?
[16:29:02] <Donitz> I prefer just using numpy for almost all forms of data manipulation
[16:29:10] <Donitz> contrary to popular belief, python can handle big data mostly fine
[16:29:13] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 252 seconds)
[16:29:18] <Akronymus> python libraries*
[16:29:24] <pikapika> mishugana, that it does not exist. People just mistake more opaque libraries for "declarative"
[16:29:34] <pikapika> or more high level libraries I should say
[16:29:41] <Akronymus> numpy is built on a core of c afaik
[16:29:47] <mishugana> I mean, that's stretching it a bit, isn't it? Everything can be considered machine code by that extension of logic?
[16:29:49] <Donitz> yeah, but python makes it easy to use
[16:29:51] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 244 seconds)
[16:29:59] <Akronymus> that's fair.
[16:30:00] <|7|> c -> c++ -> java/c# -> python -> sml/hasq/erlang... and I think langs as c/c++ aren't good start - sure, good program in c/c++ are good but it is easy to teach a lot of bad habbits. Also in learning it is important to learn from main to minor and in case of c there is a lot of minor problems (pointers for example_ when you want to learn work with main topics (algoriths, data structure). So in my opinion - better is start with lang like python. Or rust. Or 
[16:30:01] <|7|> similar with good syntax. 
[16:30:10] <Akronymus> Still would use something like R over python for it
[16:30:10] *** Joins: Lyn (~Lyn@user/law)
[16:30:17] <Donitz> In general, I think C# is the most beautiful language ever
[16:30:18] <pikapika> mishugana, lets say you write a sort routine
[16:30:21] <Donitz> too bad about the shitty ecosystem
[16:30:30] <mishugana> Rust as a starting language? Hmmmm
[16:30:38] <Amadiro> Akronymus, a core of fortran, from what I remember
[16:30:39] <pikapika> In principle and often in practice too it won't matter if you change the sort algorithm internally
[16:30:40] <mishugana> pikapika: How is that apropos to my question? 
[16:30:43] <Akronymus> Donitz I think the .net ecosystem is pretty good.
[16:30:48] <Akronymus> Why do you think it sucks?
[16:30:55] <pikapika> If you are writing arr.sort() are you writing declarative code or imperative code mishugana ?
[16:30:59] <mishugana> pikapika: are you suggesting we work with logic gates?
[16:31:07] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 240 seconds)
[16:31:12] <mishugana> oh, I see what you're implying
[16:31:13] <pikapika> mishugana, I am not "suggesting" anything
[16:31:15] <Akronymus> What tangent did he go off to this time? mishugana
[16:31:20] <pikapika> I am just saying there is no such thing as "declarative"
[16:31:30] <pikapika> Maybe you could call something like prolog declarative
[16:31:37] <pikapika> at a stretch
[16:31:41] <mishugana> pikapika: well, being declarative does not mean that every aspect of it is abstracted away from actions
[16:31:47] <Akronymus> ...
[16:31:52] <Akronymus> Oh that kinda tangent
[16:31:58] <mishugana> when you say "sort array by first index ..." - that's still being declarative
[16:32:12] <mishugana> you're not munging meaningless for loops to sort it, are you?
[16:32:26] *** Joins: Crescendo (~Crescendo@user/crescendo)
[16:32:36] <pikapika> Exactly. And yet its written inside an imperative routine.
[16:32:45] <pikapika> *as an
[16:32:49] <GeDaMo> SQL is probably the closest thing to a declarative language in common use
[16:32:52] <mishugana> Ultimately, yes, but only because the machines we run on are imperative
[16:33:05] <pikapika> GeDaMo, and even there, one sometimes needs to understand the execution plans
[16:33:08] <Akronymus> GeDaMo yeah, sql being declarative allows the optimizer to just go hog wild.
[16:33:11] <mishugana> Look at how Idris (or even Haskell) work - they can generate the entire "code" of a side-effectign program as a description
[16:33:22] <Akronymus> As in it allows it to actually make it workable on large datasets
[16:33:26] <mishugana> and the runtime, which has to be imperative, then runs that description the way its internals dictate
[16:33:34] *** Quits: NEYi (~NEYi@109.251.216.38) (Ping timeout: 252 seconds)
[16:33:46] <mishugana> For us, even at an expression-reducing level, it's all free from imperative code though
[16:34:25] <Akronymus> Everything being a expression >>>>>>>>>>>>>>>>>> some things being a statement
[16:34:28] <pikapika> Amadiro, I want to learn fortran too
[16:34:35] <Akronymus> I can't overstate how much easier it makes things
[16:34:36] <mishugana> Hence my original claim that ultimately them, everything is just voltage signals... reductio ad absurdum
[16:34:44] <pikapika> mishugana, yes
[16:34:53] <Akronymus> naw, quantum mechanics mishugana
[16:34:54] <mishugana> Akronymus: precisely
[16:34:58] <pikapika> Software is the science of dictating electronic hardwares
[16:35:05] <pikapika> Its not a branch of pure mathematics
[16:35:12] <mishugana> Hahaha Akronymus 
[16:35:16] <pikapika> Its a branch of applied mathematics, specifically electronics
[16:35:31] <arahael> Akronymus: <interactive>:1:1: error: Variable not in scope: >>>>>>>>>>>>>>>>>>
[16:35:46] * arahael winks
[16:35:54] <mishugana> pikapika: You could consider parts of Haskell, Agda, Idris et al as pure maths :D
[16:35:56] <Akronymus> I can't even be mad.
[16:35:58] <Akronymus> arahael
[16:36:22] <pikapika> mishugana, and that is a blatant misunderstanding of the reality od computers
[16:36:43] *** Quits: orondo (~orondo@user/orondo) (Quit: leaving)
[16:37:08] <arahael> Akronymus: Haskell is soooo awesome :)
[16:37:11] <Akronymus> >If you use double quotes (" ") around arguments in an argument list, ABL removes them. However, if you use single quotes (' '), ABL passes them.To pass one set of double quotes, you must use four sets of double quotes.
[16:37:20] <Akronymus> Wait, wrong copypaste
[16:37:26] <pikapika> If you actually talk to people working on mathy codes
[16:37:36] <Akronymus> >  ABL expands preprocessor names wherever and in whatever context it finds them, including inside quoted
[16:37:37] <mishugana> I mean, the Lisp machine did exist, so we could theoretically create a machine to run the lambda calculus - https://en.wikipedia.org/wiki/SECD_machine as a thought experiment
[16:37:37] <Akronymus>  character strings
[16:37:37] <bayaz> Title: SECD machine - Wikipedia 
[16:37:44] <pikapika> You will see them using languages like C and FORTRAN some time ago. Today it'd be matlab or python.
[16:37:59] <pikapika> Mathematicians clearly prefer C and FORTRAN
[16:38:01] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[16:38:06] <Akronymus> arahael can you send a drone to strike me?
[16:38:13] <mishugana> Yes, because of Von Neumann :P
[16:38:16] <Akronymus> I don't wanna do this anymore.
[16:38:29] *** Joins: Tazy (~Tazmainia@102.39.90.151)
[16:38:37] <smallville7123> is there any way to avoid this?
[16:38:39] <smallville7123> DYLD_LIBRARY_PATH=/Users/smallville7123/StudioProjects/Graphical-Tool-Kit/macOS/IMPORTED_CMAKE_PROJECTS/OpenGLApp_CMAKE_PROJECT/GRAPHICS/OUTPUT ./IMPORTED_CMAKE_PROJECTS/OpenGLApp_CMAKE_PROJECT/Debug/cube.app/Contents/MacOS/cube
[16:38:40] <smallville7123> dyld: Symbol not found: __cg_png_create_info_struct
[16:38:40] <mishugana> Akronymus: Lmfao
[16:38:40] <smallville7123>   Referenced from: /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO
[16:38:41] <smallville7123>   Expected in: /Users/smallville7123/StudioProjects/Graphical-Tool-Kit/macOS/IMPORTED_CMAKE_PROJECTS/OpenGLApp_CMAKE_PROJECT/GRAPHICS/OUTPUT/libpng.dylib
[16:38:42] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[16:38:43] <pikapika> mishugana, an infinite tape is an abstract mathematican concept, as is a lambda calculus
[16:38:53] <mishugana> :|
[16:38:56] <Akronymus> von neumann isn't the only way to arrive at turing completeness
[16:38:59] <smallville7123> as that is what xcode appears to be doing
[16:39:02] <Akronymus> Lambda calculus works as well
[16:39:15] <Akronymus> smallville7123 use. a. paste. service.
[16:40:01] <smallville7123> its only 4 lines
[16:40:26] <Akronymus> which are hard to read when in irc
[16:40:31] <Akronymus> along with no persistence
[16:40:35] <smallville7123> ok
[16:41:23] <smallville7123> https://gist.github.com/mgood7123/083dccf0d4f2f720fb4ed28a53668306
[16:41:23] <bayaz> Title: gist:083dccf0d4f2f720fb4ed28a53668306 
[16:41:25] <pikapika> mishugana, its all just instructions to control electronics
[16:41:37] <smallville7123> how do i avoid this
[16:41:45] <smallville7123> how do i avoid this https://gist.github.com/mgood7123/083dccf0d4f2f720fb4ed28a53668306
[16:41:45] <bayaz> Title: gist:083dccf0d4f2f720fb4ed28a53668306 
[16:42:14] *** Joins: sebbu (~sebbu@user/sebbu)
[16:43:20] <arahael> smallville7123: You need to link in core graphics, I'd guess, but try finding the actual library that contains the missing symbol, it would go a long way to helping you solve similar problems later.
[16:43:43] <Akronymus> >BEGINS - Compares the beginning letters of two expression
[16:43:45] *** Joins: Geronimo (~Geronimo@user/geronimo)
[16:43:47] <Akronymus> Just the first?
[16:43:57] <Akronymus> However many are the same?
[16:43:59] <pikapika> arahael, do you have retractable claws
[16:44:11] <Akronymus> I hate vague documentation
[16:44:21] <smallville7123> how do i know if CoreGraphics is linked
[16:44:33] <mishugana> otool -L?
[16:44:43] <smallville7123> ok
[16:45:07] <Akronymus> https://lmgtfy.app/?q=how+do+i+know+if+CoreGraphics+is+linked smallville7123
[16:45:08] <bayaz> Title: LMGTFY - Let Me Google That For You 
[16:45:37] <smallville7123> https://gist.github.com/mgood7123/a677d7f30e4765261b02b3eeb543c144
[16:45:38] <bayaz> Title: gist:a677d7f30e4765261b02b3eeb543c144 
[16:45:47] *** Quits: Quietwalker (~X@154.21.114.180) (Ping timeout: 240 seconds)
[16:46:17] <Akronymus> arahael is it ok to tell someone to rtfm?
[16:46:37] <arahael> Akronymus: Yes, but I'd prefer if you are polite about it.
[16:46:58] <smallville7123> wow 2022 versions of AppKit
[16:47:09] <smallville7123> AppKit.framework/Versions/C/AppKit (compatibility version 45.0.0, current version 2022.20.117)
[16:48:21] <smallville7123> if i omit the library path then my app links fine
[16:48:30] <smallville7123> DYLD path *
[16:48:41] <smallville7123> DYLD_LIBRARY_PATH *
[16:49:23] <Akronymus> smallville7123 your cmake imports seem to reference version 0.0.0
[16:51:19] <smallville7123> yes
[16:51:25] <smallville7123> that is due to RPATH
[16:51:41] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 250 seconds)
[16:53:56] <Akronymus> https://hastebin.com/raw/egumugikij this is part of the official abl documentation
[16:54:04] *** Joins: zaher__ (~zaher@37.48.146.7)
[16:54:16] <Akronymus> Also: >nested multiline comments
[16:57:14] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Read error: Connection reset by peer)
[16:58:04] *** Quits: zaher_ (~zaher@185.123.102.57) (Ping timeout: 250 seconds)
[16:58:11] <Akronymus> Oh wow, they treat // in a string as part of a pathname separator.
[16:58:20] <Akronymus> Which... eww
[16:58:33] *** Joins: Arithmoquine (~ct@193.32.127.218)
[16:58:35] *** Joins: scabby (~scabby@user/scabootssca)
[16:58:36] <Akronymus> Oh and you can quote the pathname but don't need to.
[16:58:51] <Stefan26> they made me mentor and recruited an intern without consulting team for project ideas; i have no experience being mentor to software devs... what's a good way of finding good tasks for someone fresh out of college
[16:59:10] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[16:59:34] <[itchyjunk]> Stefan26, i'd think figure out a way to see how good they are?
[16:59:46] *** Joins: scabby_ (~scabby@user/scabootssca)
[16:59:50] <[itchyjunk]> What would be useful? if they can read some code and figure it our or somesuch?
[16:59:53] <Akronymus> Stefan26 let them write some helper tool?
[17:00:06] <Akronymus> Something you'd find trivial.
[17:00:12] <[itchyjunk]> See how fast they can get your coffee
[17:00:19] <Stefan26> i dont think they have a lot of experience
[17:00:32] <[itchyjunk]> Fresh out of college, i wouldn't be surprised
[17:00:34] <Akronymus> Hence the something you'd find trivial.
[17:00:38] <[itchyjunk]> do they know the language in question?
[17:00:43] <Akronymus> Get them in the habit of asking questions.
[17:00:43] *** Quits: Intelo (~Intelo@88.244.91.68) (Ping timeout: 256 seconds)
[17:00:43] <Stefan26> we use java
[17:01:04] <Stefan26> hmm.. a helper tool
[17:01:13] <Stefan26> good idea
[17:01:39] <Akronymus> Something easy though
[17:01:51] <[itchyjunk]> Java!
[17:01:57] <[itchyjunk]> That's the shit i'm having to learn!
[17:02:03] <Akronymus> For example, I recently wrote one that just shows me what tables share which columns.
[17:02:04] <[itchyjunk]> Every uni forces java or what?
[17:02:14] <mishugana> Meh
[17:02:19] <[itchyjunk]> Is that easy?
[17:02:20] <mishugana> You could have done worse.
[17:02:22] <Akronymus> java is basically THE language that gets taught.
[17:02:28] <[itchyjunk]> Sounds hard! does that involved knowing sql?
[17:02:34] <[itchyjunk]> involve*
[17:02:37] <mishugana> Hmm?
[17:02:45] <[itchyjunk]> the recommended tool
[17:02:47] <Akronymus> [itchyjunk] naw, I already had a list of all the tables with all the columns as a text file.
[17:02:49] <[itchyjunk]> for tables and such
[17:02:55] <[itchyjunk]> oh i see
[17:03:19] *** Quits: scabby (~scabby@user/scabootssca) (Ping timeout: 252 seconds)
[17:03:19] <[itchyjunk]> that's reasonable then, i think
[17:03:30] <Akronymus> So, it was basically putting it into a data structure, then running an intersect on it.
[17:03:41] <Akronymus> Literally trivial to me.
[17:05:46] <Akronymus> https://hastebin.com/raw/ezulicodun
[17:05:49] <Akronymus> f# though.
[17:06:09] <smallville7123> i cant seem to find any flags which would help https://stackoverflow.com/questions/51504439/what-environment-variables-control-dyld
[17:06:10] <bayaz> Title: What environment variables control dyld? 
[17:06:16] *** Parts: nulleip (~luiz@189.34.167.234) ()
[17:07:48] <Akronymus> Quite a bit of the code is just for cleaning up the input
[17:08:39] *** Quits: rannnn8888 (~rannnn888@bzq-79-183-158-130.red.bezeqint.net) (Ping timeout: 256 seconds)
[17:09:20] <Donitz> "Length of each segment. Defaults to None, but if window is str or tuple, is set to 256, and if window is array_like, is set to the length of the window."
[17:09:21] <Donitz> umm
[17:09:30] <Donitz> that's a bit ambigious
[17:09:38] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 244 seconds)
[17:09:51] *** Joins: nulleip (~luiz@189.34.167.234)
[17:11:21] <[itchyjunk]> Life is a bit ambigious!
[17:11:30] <Akronymus> You're ambiguous
[17:11:53] *** Joins: anovick (~anovick@IGLD-83-130-61-178.inter.net.il)
[17:15:51] *** Joins: codemin (~codemin@69.167.14.151)
[17:18:41] *** Quits: frost (~frost@59.71.240.119) (Quit: Connection closed)
[17:20:15] *** Joins: qwedfg_ (~qwedfg@user/qwedfg)
[17:20:35] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[17:20:53] *** Quits: mishugana (~antaoisea@user/mishugana) (Quit: leaving)
[17:21:00] *** Quits: qwedfg (~qwedfg@user/qwedfg) (Ping timeout: 244 seconds)
[17:24:57] *** Quits: |7| (~|7|@user/seachdamh) (Quit: ...)
[17:25:04] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[17:25:16] *** Joins: flynn (~mcbloch@user/flynn)
[17:25:19] *** Quits: kuku (~kuku@pool-108-27-57-106.nycmny.fios.verizon.net) (Quit: Leaving)
[17:25:31] *** Joins: kuku (~kuku@pool-108-27-57-106.nycmny.fios.verizon.net)
[17:25:31] *** Quits: kuku (~kuku@pool-108-27-57-106.nycmny.fios.verizon.net) (Changing host)
[17:25:31] *** Joins: kuku (~kuku@user/kuku)
[17:25:39] *** Quits: qwedfg_ (~qwedfg@user/qwedfg) (Ping timeout: 244 seconds)
[17:25:54] <mrig> Anyone have an idea how I might be able to capture the output of mpv when it is running with the flags to play in the terminal?
[17:26:01] *** Joins: qwedfg (~qwedfg@user/qwedfg)
[17:26:28] <Akronymus> Pipe it into a file?
[17:26:31] <mrig> Using > file does work and captures the text but it does not really play back as such, just a snippet.
[17:26:47] <Akronymus> tail?
[17:26:56] <mrig> I suppose when I cat file, the terminal is not playing it all.
[17:27:05] <mrig> right yes that's an idea.
[17:27:24] <mrig> Guess that I might have to get in there an cut out the parts that I want manually.
[17:27:39] <pikapika> mrig, do you have retractable claws?
[17:27:47] *** Quits: JavaBean (~JavaBean@user/javabean) (Quit: KVIrc 5.0.0 Aria http://www.kvirc.net/)
[17:27:49] <Donitz> what is a good name for a block of audio samples
[17:28:09] <Akronymus> https://hastebin.com/fadulecuje AAAAAAAAAAA
[17:28:13] <Jck_true> audio_block?
[17:28:17] <mrig> pikapika: nope but I do have a bow for hunting Daemons.
[17:28:17] <Donitz> hmm
[17:28:26] <pikapika> mrig, hi uwu
[17:28:29] <Donitz> not sure. I'm using it as input for my a ml model
[17:28:30] <mrig> heh
[17:28:34] <Donitz> but I already use samples for audio samples
[17:28:37] <Donitz> so I can't say training samples
[17:28:46] <Jck_true> samples1
[17:28:50] <Akronymus> WHY is updating the DB directly a selling point?
[17:29:16] <mrig> Donitz: library?
[17:29:24] <Donitz> no particular
[17:29:27] <mrig> catalog 
[17:29:44] <mrig> folio, folio is a great word.
[17:29:56] <mrig> Very leafy.
[17:30:08] <pikapika> mrig, cat-alog
[17:30:25] <mrig> cat-on-a-log ?
[17:30:42] <mrig> frog-on-a-log is a better game scenario though
[17:30:46] *** Quits: jmcgnh (~jmcgnh@wikipedia/jmcgnh) (Ping timeout: 252 seconds)
[17:30:59] <Donitz> input_segment_length
[17:31:01] <Donitz> segment_length
[17:31:05] <Donitz> bah, confusing
[17:31:18] <Donitz> there is a welch segment length, and there is an input segment length
[17:31:22] <mrig> frame is common of parts of a thing that you are flitting over.
[17:31:31] <Donitz> frame_length
[17:31:33] <Jck_true> Go on holiday and the Coca-Cola prices go up 45% in office!
[17:31:35] <Donitz> not sure that clears thing up
[17:31:40] <Donitz> hmm
[17:31:49] <mrig> frame length is very explicite.
[17:31:53] *** Joins: jmcgnh (~jmcgnh@wikipedia/jmcgnh)
[17:31:59] <Donitz> since pyaduio already uses frames as a synonym for samples
[17:32:00] <Donitz> aaaaa
[17:32:03] <Donitz> audio*
[17:32:06] <mrig> (e on the end must be a french accent)
[17:32:34] <mrig> Donitz: so, that's good, then there is already a neurological pathway for the lingo.
[17:33:22] <Donitz> I'll just call it segment_length and fft_length
[17:35:03] *** Joins: Shanzem (~Shanzem@86.31.109.147)
[17:35:59] <Donitz> I wonder if in the future, governments will be using mouth-reading software to listen to everyone
[17:36:17] <Donitz> now that's a dystopian thought
[17:36:29] *** Joins: gurki (~gurki@user/gurki)
[17:37:05] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Quit: Lost terminal)
[17:37:52] <Akronymus> Donitz https://en.wikipedia.org/wiki/Laser_microphone
[17:37:52] <bayaz> Title: Laser microphone - Wikipedia 
[17:38:38] <Donitz> you don't even need that with good enough software
[17:38:47] <Donitz> you could listen to everyone in a crowd using a regular camera
[17:39:15] <arahael> Donitz: Not from lipreading.
[17:39:44] <Donitz> why not
[17:40:07] <Caffeinated> Donitz: they already are.  London is full of cameras
[17:40:18] <arahael> Donitz: Because you can only get - at best - about 30% of the language from the lip pattern, and even then, that assumes an accent.
[17:40:33] <Donitz> that's just an optimization issue
[17:40:40] <Donitz> a good enough algo can solve it 
[17:40:48] <Donitz> a lot of predictive stuff
[17:40:49] <arahael> Donitz: Not even I can do it.
[17:40:52] <Caffeinated> oh dear
[17:41:07] <arahael> Donitz: (And I have been profoundly deaf almost all my life)
[17:41:14] *** Joins: pulse_ (~pulse@user/pulse)
[17:41:17] <Akronymus> https://hastebin.com/oqimorases
[17:41:20] <Donitz> a computer is more powerful than the human brain
[17:41:22] <Akronymus> I do NOT get this
[17:41:28] <Donitz> when it comes to stuff like pattern recognition
[17:41:39] <arahael> Donitz: Not really.
[17:41:40] *** Quits: inky_ (~inky__@46.36.119.19) (Ping timeout: 244 seconds)
[17:42:20] *** Joins: _inky (~inky@46.241.133.150)
[17:42:23] <Akronymus> Just gonna treat this as magic.
[17:43:35] <Donitz> sure it is
[17:43:50] <Donitz> lip reading can be optimized far better than a single human could do it
[17:44:04] <Donitz> machine learning is fantastic at dealing with tiny details
[17:44:10] <Donitz> which humans may not notice
[17:44:36] <Donitz> machine learning is just dumb as brick at generalizations
[17:44:41] <Donitz> bricks*
[17:44:52] <Akronymus> You'd have to feed it with video.
[17:44:58] <Akronymus> Which gets slow quickly.
[17:46:10] *** Quits: inky (~inky@46.36.119.19) (Ping timeout: 250 seconds)
[17:46:16] <Akronymus> > Calculates the subtotal of all of the values of the expression in a break group and the grand total of all of the values of the expression in all break groups. When you use default aggregates, the actual  display of the grand total is deferred until the frame goes out of scope.
[17:46:19] <Akronymus> Oh.
[17:46:24] <Akronymus> It has 2 values.
[17:46:35] <Akronymus> 1 of the current total inside the scope
[17:46:50] <Akronymus> and 1 for the total of whatever it contained for outside the scope.
[17:53:28] *** Joins: JavaBean (~javabean@user/javabean)
[17:54:41] <Donitz> https://youtu.be/wg3upHE8qJw?t=148
[17:54:43] <Donitz> impressive
[17:54:47] <bayaz> Title: Can an AI Learn Lip Reading? 
[17:54:50] <Donitz> though that requires training for that specific person
[17:54:58] <Donitz> which is a bit unfair
[17:55:03] <Donitz> instead, try reading what is said
[17:55:36] *** Joins: kedamono (~kedamono@2600:1016:b000:7224:8d98:3bcd:868c:3d37)
[17:55:45] <pulse_> lips are freaky
[17:55:58] <Donitz> maybe that's why they chose him
[17:56:01] <Akronymus> > Sometimes the AMBIGUOUS function returns a TRUE value when there is no ambiguity
[17:56:04] <Akronymus> Why?
[17:56:08] <Akronymus> Why do this to me?
[17:56:15] <Akronymus> Why did I take this job?
[17:56:39] <gurki> hm. i am confused. intel mkl sparse matrix implementation seems to lack a getval(x,y), there only is a setval(x,y)
[17:56:58] <gurki> is the idea that i _always_ copy matrices with size (1,1) if i want a single element?
[17:57:02] *** Joins: Quietwalker (~X@cpe-70-113-121-167.austin.res.rr.com)
[17:57:06] <Akronymus> how would a getval(x,y) implementation even look?
[17:57:11] *** Quits: zwr (~zwr@2804:d45:b966:fb00:39b5:9253:c983:445) (Remote host closed the connection)
[17:57:15] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[17:57:18] <Donitz> hmm
[17:57:24] <gurki> exactly like the setval, just that it reads instead of writes? :D
[17:57:25] <Donitz> forehead and eyebrows are also used when reading lips
[17:57:28] <Donitz> pretty much expected
[17:57:30] *** Joins: inky_ (~inky__@46.241.133.150)
[17:57:35] <gurki> (and doesnt have to do all that magic of keeping the csr structure intact)
[17:57:38] <gurki> so its actually a lot simpler
[17:57:40] <Donitz> but a human isn't really able to check all of those things at once
[17:57:42] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[17:57:47] <Akronymus> But what if out of bounds?
[17:58:00] <gurki> can we focus on the actual question at hand :P
[17:58:19] <gurki> i have implemented such things, its not an issue to implement a get(x,y). but i wanna use mkl sparse for this one.
[17:58:38] *** pulse_ is now known as pulse
[17:59:39] <gurki> (yes im aware there are a lot of "empty" values, which. uh. is the concept)
[17:59:53] *** Quits: kedamono (~kedamono@2600:1016:b000:7224:8d98:3bcd:868c:3d37) (Read error: Connection reset by peer)
[18:00:01] <pulse> Donitz, do beards obscure the lip reading process
[18:00:17] <Donitz> a big beard probably would
[18:00:23] <Donitz> you'd have to train it with big bearded guys
[18:00:28] <Donitz> why big? Because why not
[18:00:28] <pulse> nice. security through... err, beard..urity
[18:00:49] *** Joins: kedamono (~kedamono@2600:1016:b000:7224:8d98:3bcd:868c:3d37)
[18:01:02] <arahael> Donitz: They definitely do, especially if they cover the upper lip.
[18:01:03] <Akronymus> What do you think of when you read "apply"?
[18:01:12] <Akronymus> Specifically for statements
[18:01:13] <pulse> apples
[18:01:24] <Akronymus> In a programming context
[18:01:37] *** Joins: Izem (~Izem@8.6.144.189)
[18:01:41] *** Quits: federico_it (~textual@151.95.116.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:01:47] <arahael> Akronymus: Execute the specified function with the specified arguments.
[18:01:49] <Akronymus> Surely it is calling an event.
[18:01:53] *** Quits: fweht (uid404746@id-404746.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[18:01:55] <Akronymus> arahael I wish
[18:02:04] <Akronymus> > Applies an event to a widget or procedure.
[18:02:11] <arahael> Akronymus: It's what *I* think when I hear the word.
[18:02:12] <Akronymus> basically calling an event
[18:02:22] <pulse> apply yourself
[18:02:23] * pulse shrugs
[18:02:36] <pulse> i read it with emphasis on a
[18:02:40] <pulse> app-ly
[18:02:44] <Akronymus> arahael I hope my ranting and raving about abl/progress isn't too much.
[18:03:02] <arahael> Akronymus: I'm off to bed, in any case. :)
[18:03:08] <arahael> Nearly midnight for me.
[18:03:24] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[18:03:30] *** Joins: federico_it (~textual@151.95.116.125)
[18:04:15] *** Quits: kedamono (~kedamono@2600:1016:b000:7224:8d98:3bcd:868c:3d37) (Remote host closed the connection)
[18:04:34] *** Joins: kedamono (~kedamono@2600:1016:b000:7224:8d98:3bcd:868c:3d37)
[18:06:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[18:06:48] *** Joins: eson123 (~eson123@118.69.128.37)
[18:07:10] <pulse> i tried to stay awake for 2 days but the sleep deprivation got to me
[18:07:46] <eson123> are most AI products nowdays created based on the concept of making the machine learn whenever it fails on a certain thing then keep repeating that process ? 
[18:08:25] <eson123> i was researching about AI and most of the courses and posts i find say either it has a huge database containing already made records or make it learn over and over again
[18:09:11] *** Joins: exvicesindaco (~exvicio@user/exvicesindaco)
[18:09:22] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[18:09:42] *** Quits: aniruddha (uid340443@id-340443.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[18:09:59] *** Quits: kedamono (~kedamono@2600:1016:b000:7224:8d98:3bcd:868c:3d37) (Read error: Connection reset by peer)
[18:10:48] *** Joins: kedamono (~kedamono@250.sub-174-251-209.myvzw.com)
[18:11:47] <Jck_true> eson123: Well you can design your system to continuously accept new training data (Users flagging email as spam is an example) 
[18:11:48] <deniska> eson123: Not sure if anyone described it better: https://xkcd.com/1838/
[18:11:48] <bayaz> Title: Machine Learning 
[18:12:29] *** Joins: notABoxer (~notABoxer@ip59-131-15-186.ct.co.cr)
[18:13:18] <eson123> huh, then i guess it was all about training the AI then
[18:13:24] <eson123> there is no other way than the two i encountered
[18:14:31] <Jck_true> But there's a reason Google wants you to tell what is a stop sign in a picture when you solve CAPTCHA's....
[18:15:22] <Jck_true> https://xkcd.com/1897/
[18:15:23] <bayaz> Title: Self Driving 
[18:16:03] <Jck_true> https://xkcd.com/2494/
[18:16:03] <bayaz> Title: Flawed Data 
[18:17:05] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[18:18:05] <eson123> Jck_true: woah that is interesting to know, but what if the user picks the wrong picture ?
[18:18:24] <eson123> will Google's self driving car encounter any potential drawback
[18:18:40] <Caffeinated> it already has
[18:18:53] <Caffeinated> or was it the uber self driving car that hit a pedestrian
[18:19:00] <eson123> well i never actually saw any Google self-driving car in my country tho, so i am not so sure
[18:19:17] <eson123> i think you meant the Uber, it used to kill one person while in auto-driving mode iirc
[18:19:42] <leduyquang753> Just yesterday a self-driving Olympic bus hit an athlete.
[18:19:55] <Akronymus> Toyota
[18:20:02] <Akronymus> And no, it wasn't really self driving
[18:20:13] *** Joins: pufferfish (~pufferfis@122.168.104.158)
[18:20:25] <eson123> well, i guess no AI system is perfect then
[18:20:32] <leduyquang753> Nothing is perfect.
[18:20:48] <eson123> i mean the only AI product which still scares me is the Sophia robot and how it can be just like us 
[18:20:53] <pikapika> leduyquang753, only death is real
[18:20:55] <eson123> i am not sure if it exists flaws but it still creeps me out 
[18:21:01] <Jck_true> eson123: I only took one ML class... We worked with the https://en.wikipedia.org/wiki/MNIST_database at at some point even I as a human could not tell if something was a 1 or a 7... 
[18:21:01] <bayaz> Title: MNIST database - Wikipedia 
[18:21:33] <Stefan26> sophia bot?
[18:21:55] <eson123> Stefan26: i first saw it here https://www.youtube.com/watch?v=Bg_tJvCA8zw&ab_channel=TheTonightShowStarringJimmyFallon
[18:21:56] <bayaz> Title: Tonight Showbotics: Jimmy Meets Sophia the Human-Like Robot 
[18:22:13] *** Quits: death916 (~death916@user/death916) (Quit: ZNC 1.8.2 - https://znc.in)
[18:22:19] <Stefan26> i heard it cant really fool a human yet
[18:22:26] *** Joins: brickfat (~brickfat@user/brickfat)
[18:22:45] <Jck_true> https://spectrum.ieee.org/slight-street-sign-modifications-can-fool-machine-learning-algorithms 
[18:22:46] <bayaz> Title: Slight Street Sign Modifications Can Completely Fool Machine Learning Algorithms 
[18:23:06] <Akronymus> https://www.youtube.com/watch?v=3kyvYhbM24E eson123
[18:23:08] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Quit: Leaving)
[18:23:08] <bayaz> Title: Silicon Valley | Fiona | AI Robot S05E06 
[18:23:59] <leduyquang753> There was one test where an apple with a piece of paper saying "iPod" stuck onto was recognized as actual iPos.
[18:24:02] <leduyquang753> iPod.
[18:24:20] <Akronymus> i Piece of shit?
[18:24:39] <leduyquang753> Or just spamming "$$$" onto the picture made it recognized as a piggy bank.
[18:24:47] *** Quits: federico_it (~textual@151.95.116.125) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:26:16] <pufferfish> is there a good channel for questions and discussions related to web development in Libera?
[18:26:20] <eson123> Akronymus: i mean yea that is cool but why did u send me that 
[18:26:42] <Jck_true> leduyquang753: Yeah. Overfitting and bad training data 
[18:26:44] <eson123> pufferfish: also yea, you can ask here 
[18:27:07] <eson123> pufferfish: or #html, #css, #javascript, #php, #whatever-backend-lang
[18:27:08] *** Joins: Pickchea (~private@user/pickchea)
[18:27:36] <pufferfish> eson123: thanks!
[18:30:32] <Akronymus> Because I thought it to be relevant
[18:30:45] *** Quits: elnavigator (~elnavigat@105.196.149.83) (Ping timeout: 244 seconds)
[18:30:49] <eson123> Stefan26: also what do you mean by fool a human yet, that product is seeming to be actually living
[18:30:54] <eson123> i think one country even granted it citizenship
[18:30:55] <beaky> what are some things in programming that seem like the obviously correct approahc or are commonly presented as the best option but are actually very suboptimal like linked lists vs arrays for example
[18:31:22] <Akronymus> Or trees as links to nodes?
[18:31:47] <Akronymus> You can store a (balanced) tree quite well in a simple array.
[18:31:50] <beaky> yes im glad now we have trees as arays
[18:32:03] <Akronymus> Can kinda suck for inserts though
[18:32:15] *** Quits: mickey (~user@user/mickey) (Remote host closed the connection)
[18:32:34] <pikapika> Akronymus, I think that array representation gets rather wasteful of memory for high degree trees
[18:32:51] <pikapika> in which case may be a b-tree like format would be preferable
[18:33:05] <Akronymus> beaky but for such things, I'd say that OOP is THE example for something presented as the best option but being suboptimal
[18:33:11] *** Joins: mickey (~user@user/mickey)
[18:33:20] <pikapika> Whats wrong with oop?
[18:33:25] <pufferfish> Akronymus: i agree.
[18:33:30] <pikapika> ie whats the laternative
[18:33:42] <pikapika> How do you organize a large software in a non-oop manner?
[18:35:19] <pikapika> pufferfish, how do you avoid oop?
[18:35:25] <pikapika> Oop seems very natural
[18:35:35] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Quit: WeeChat 2.8)
[18:35:57] *** Joins: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net)
[18:36:53] <eson123> Akronymus: "It's daytime but i can't see the moon"... yea something went wrong there
[18:37:03] <eson123> i guess it's related to how not every AI product is perfect
[18:37:38] <Akronymus> Yeah, AI is useful in certain applications.
[18:37:46] <Akronymus> But fails HARD in others.
[18:37:56] <Akronymus> For many cases, I'd prefer a expert system.
[18:38:27] <eson123> well still, this is from a movie series called "Sillicon valley" i guess, haven't watched it yet so not sure, but the Sophia one i am talking about, i don't think it has ever slipped up something like that
[18:38:51] <Akronymus> Tbh, I only vaguely remember that episode.
[18:39:00] *** Quits: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[18:39:06] <Akronymus> And can't really listen to the scene because work.
[18:39:20] *** Joins: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net)
[18:39:42] <eson123> well good enough, i will just keep waiting to see if she ever slip up some silly sentences in the future 
[18:39:49] <pufferfish> pikapika: i never had a formal computer science education so i don't think in the way that's typical of OOP practitioners. it's not the silver bullet that it's advertised to be. it's useful when you have a lot of poorly-paid programmers working on large teams.
[18:40:12] <pikapika> pufferfish, I mean
[18:40:14] <Akronymus> Maybe I should unignore pika
[18:40:22] <pikapika> I am unable to think of any other model for organizing a software at large scale
[18:40:24] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[18:40:28] <Akronymus> pika: Ok, i'll give you another chance.
[18:40:37] <pikapika> Akronymus, hi
[18:40:43] <Akronymus> Hello.
[18:41:02] <pikapika> I was just saying I don't know how else one would organize a large app if not with oop
[18:41:05] *** Quits: Izem (~Izem@8.6.144.189) (Quit: Going offline, see ya! (www.adiirc.com))
[18:41:08] <Akronymus> Namespaces.
[18:41:15] <Akronymus> File based structuring.
[18:41:26] <pikapika> Namespaces are just an aid, some oop langs have that too
[18:41:27] <pikapika> like C++
[18:41:32] <Caffeinated> pikapika: go back 30 years or so.  Have a look at unix
[18:41:36] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:75d9:8ee9:c723:ca70) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:41:39] <Akronymus> Namespaces are just groups of somethings.
[18:41:46] <Caffeinated> minix even
[18:41:50] <Akronymus> For many things you don't need some object.
[18:42:35] <Akronymus> For example if I have a areOverlapping function that determines if 2 shapes are overlapping, it doesn't belong to either one.
[18:42:48] <pikapika> Caffeinated, processes communicating with pipes?
[18:42:50] <pufferfish> pikapika: not everything written in pure C has an object model invented behind the scenes to simulate OOP.
[18:42:53] <Akronymus> But it'd still belong in a shapes namespace or something similar.
[18:43:03] <Caffeinated> pikapika: asked and answered.  next.
[18:43:12] *** Joins: salitos (~salitos@197.156.137.136)
[18:43:13] <pikapika> what
[18:43:31] <Akronymus> I think my example should be sufficiently clear
[18:43:36] <pikapika> I see
[18:43:47] <pikapika> Within C++ I'd usually just make it a non-member friend function
[18:43:55] <pikapika> your example that is, Akronymus 
[18:44:08] *** Joins: aniruddha (uid340443@id-340443.charlton.irccloud.com)
[18:44:25] <Akronymus> But then it'd be married to the data again.
[18:44:26] *** Joins: elnavigator (~elnavigat@105.196.149.83)
[18:44:38] <Akronymus> what I am thinking, is more of a record based approach.
[18:44:40] <pufferfish> pikapika: there are other ways to think about these things. what kind of scale are you talking about. as Alan Perlis said, "it's better for hundred different functions to operate on one data structure than ten different functions operate on ten different data structures."
[18:44:54] <Akronymus> pufferfish yeah that too.
[18:45:05] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[18:45:19] <pikapika> Yeah I really mean at a large scale softare
[18:45:23] <pufferfish> pikapika: i'm sure there are non-OOP codebases worth thousands of lines which don't require a big team to solve.
[18:45:23] <Akronymus> Part of the reason I like map, fold, filter and the like so much.
[18:45:24] <pikapika> Think projects like gtk, ffmpeg etc
[18:45:41] <pikapika> I haven't read the kernel code enough to say if the linux source is oop like or not
[18:45:41] <pufferfish> pikapika: think Linux Kernel, GCC, etc.
[18:45:50] <pikapika> I think windows api is quite oop like at least in many ways
[18:45:58] <Akronymus> yes it is.
[18:46:03] <Akronymus> Doesn't mean it has to be.
[18:46:26] <Akronymus> I'd almost go so far as to say OOP is poison to programmers minds.
[18:46:28] <pufferfish> pikapika: doing OOP in C is twisted as GNOME tries to do. it could be easily done in a non-OOP model. 
[18:46:49] <pufferfish> pikapika: many times, the size of codebases is large only *because* they are OOP.
[18:47:11] <pufferfish> pikapika: encapsulation and needless abstraction is not always a virtue.
[18:47:28] <pikapika> pufferfish, well heavily using interfaecs, virtual calls etc can get hard in C. But "lightweight oop" ie structs and methods is quite natural.
[18:47:53] *** Joins: magla (~gelignite@55d45175.access.ecotel.net)
[18:48:09] <pufferfish> pikapika: now we are moving into the definition zone, No True Scotsman Fallacy, etc. let's end it here.
[18:48:43] <pikapika> Well why not. I don't think oop has such a hard and clear definition.
[18:48:53] <pikapika> Isn't it at its base just methods married to data?
[18:49:28] *** Quits: brickfat (~brickfat@user/brickfat) (Ping timeout: 252 seconds)
[18:49:38] <Akronymus> structs and methods isn't oop.
[18:49:40] <pufferfish> pikapika: yeah, people like Alan Kay would not consider C++ and Java to be OOP. but at the very last, no self-sufficient programming paradigm should ever need a *design* *pattern*. it's quite self-contradictory.
[18:49:50] *** Joins: gggp__ (~gggp@220-136-145-74.dynamic-ip.hinet.net)
[18:50:20] <pikapika> Whats wrong with design patterns?
[18:50:23] <pufferfish> pikapika: all the design patterns could be eliminated if one is using a sufficiently powerful language.
[18:50:36] <pufferfish> pikapika: i think Peter Norvig demonstrated that.
[18:50:39] *** Joins: dcand (~dcand@user/dcand)
[18:50:42] <pikapika> Everything not in the base syntax is a deisgn pattern
[18:50:51] <Akronymus> https://fsharpforfunandprofit.com/assets/svg/specFlow.all.dot.svg <-- OOP 
[18:50:51] <bayaz> Type: image/svg+xml 
[18:50:54] <pikapika> and if we make the base syntax itself hyperminimal like lisp
[18:50:55] <Akronymus> https://fsharpforfunandprofit.com/assets/svg/tickSpec.all.dot.svg <-- functional
[18:50:55] <bayaz> Type: image/svg+xml Size: 6.8 kB 
[18:50:58] <pikapika> that doesn't change anything
[18:51:07] <Akronymus> And both are of roughly equal complexity.
[18:51:22] <Akronymus> https://fsharpforfunandprofit.com/posts/cycles-and-modularity-in-the-wild/
[18:51:22] <bayaz> Title: Cycles and modularity in the wild | F# for fun and profit 
[18:51:26] <Akronymus> From that blogpost
[18:52:06] *** Joins: contagious_meow (~salitos@197.156.137.136)
[18:52:09] <pufferfish> pikapika: you're a zealot. i don't think you could be convinced over an IRC conversation. i concede my defeat with the realisation that i could write non-OOP software with ease and would never need to think about design pattern and that you would continue to program in OOP your whole life. savvy?
[18:52:09] <Akronymus> OOP almost encourages circular dependencies.
[18:52:14] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[18:52:23] *** Quits: salitos (~salitos@197.156.137.136) (Read error: Connection reset by peer)
[18:52:27] <dcand> is there any good reason to use data URI for link rel=icon
[18:53:28] <pikapika> I am not a zealot of anything
[18:53:44] <pufferfish> Akronymus: Joe Armstrong put it the best, "you want a banana with OOP and you've got a monkey holding a banana and also the whole jungle." that pretty much sums it up for me.
[18:53:58] <Akronymus> pikapika you come across as one.
[18:53:59] <pufferfish> pikapika: sure.
[18:54:00] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[18:54:14] <pikapika> I am not fanatical about langauges or paradigms
[18:54:18] *** Joins: mickey (~user@user/mickey)
[18:54:28] *** Parts: dcand (~dcand@user/dcand) ()
[18:54:32] <pufferfish> pikapika: no, you're not. you just don't know enough paradigms.
[18:54:37] *** Quits: contagious_meow (~salitos@197.156.137.136) (Read error: Connection reset by peer)
[18:54:40] *** Joins: salitos (~salitos@197.156.137.136)
[18:54:47] <Donitz> can I remove people also ask for without ublock
[18:54:52] <pikapika> Yeah I mean to try to understand this so called "functional" programming thing next
[18:54:53] <Donitz> I already use noscript, I don't need ublock
[18:55:16] <pufferfish> pikapika: it's a different paradigm. it takes some time to get used to.
[18:55:20] <pikapika> But I doubt the structures of the softwares at a higher level would differ much. The lower level would of course be very different.
[18:55:22] <pikapika> But let us see
[18:55:34] <Akronymus> pikapika I am afraid you are gonna hate it, because you are DEEPLY entrenched in thinking in OOP terms.
[18:55:57] <Akronymus> But if you truly wanna give it a try: https://fsharpforfunandprofit.com/learning-fsharp/
[18:55:57] <pufferfish> pikapika: there is some unlearning involved for things like that. did you have a formal education in CS?
[18:55:58] <bayaz> Title: Learning F# | F# for fun and profit 
[18:56:19] <pikapika> Not at all. I might dislike it, but thats more because it does not map clearly to the hardware level operations. Different reasons.
[18:56:29] <pikapika> pufferfish, yes
[18:56:44] *** Quits: salitos (~salitos@197.156.137.136) (Read error: Connection reset by peer)
[18:57:00] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[18:57:03] *** Joins: salitos (~salitos@197.156.137.136)
[18:57:09] <Akronymus> One of the BIG things: Use higher order functions rather than looping through stuff.
[18:57:19] *** Joins: independent56 (~independe@95.144.68.39)
[18:57:22] <Akronymus> map, fold and filter should be enough in 99% of the cases.
[18:57:27] <pufferfish> pikapika: that explains it. i was never exposed to the C++, Java type thinking in college coz i didn't major in computer science. i learnt it on my own and understood early that OOP is just another hype.
[18:57:49] <pikapika> map fold and filter are common abstractions of some for loops. I already make some use of them. I don't think they count as fp.
[18:58:03] <Donitz> ah
[18:58:04] <Akronymus> They very much do.
[18:58:04] <pufferfish> pikapika: most CS degrees in US and also the rest of the world are little more than Java and C++ certifications.
[18:58:07] <pikapika> pufferfish, we didn't learn languages
[18:58:09] <Donitz> I could just block javascript for google.com
[18:58:12] *** Quits: sandman (sandman13@user/sandman13) (Remote host closed the connection)
[18:58:12] *** Quits: paulo (paulo@user/paulo/x-9032687) (Remote host closed the connection)
[18:58:12] *** Quits: astroid (astroid@user/astroid) (Remote host closed the connection)
[18:58:12] *** Quits: Scarecr0w (scarecr0w@user/scarecr0w) (Remote host closed the connection)
[18:58:13] <Donitz> good job
[18:58:15] <Akronymus> Because they don't mutate the input
[18:58:29] <Akronymus> but rather return a result based on the input + a function
[18:58:49] <pufferfish> pikapika: you should have.
[18:58:51] <pikapika> Yeah and its just an abstraction of some common kinds of for loops. Very useful stuff.
[18:58:56] <Akronymus> Also: Algebraic data types.
[18:59:00] *** Quits: independent56 (~independe@95.144.68.39) (Remote host closed the connection)
[18:59:06] *** Quits: eson123 (~eson123@118.69.128.37) (Quit: Leaving)
[18:59:08] <pufferfish> pikapika: it's not an abstraction for loops at all.
[18:59:10] *** Quits: anovick (~anovick@IGLD-83-130-61-178.inter.net.il) (Ping timeout: 240 seconds)
[18:59:11] <pikapika> pufferfish, we learned abstract mathy stuff more
[18:59:16] <pikapika> Very little language stuff
[18:59:18] *** Joins: independent56 (~independe@95.144.68.39)
[18:59:19] <pufferfish> pikapika: it's an entirely different way of thinking about it.
[18:59:29] <Akronymus> you think in sets instead of elements
[18:59:31] <pufferfish> pikapika: a map is not a different way of writing a loop.
[18:59:52] <pufferfish> pikapika: it's more a \map in function theory terms.
[18:59:53] <pikapika> map is applying a function to each element of a data structure and returning the changed one
[18:59:55] <pikapika> its a natural for loop
[18:59:55] *** Quits: akevinhuang (~thekevinh@user/thekevinhuang) (Read error: Connection reset by peer)
[18:59:56] <davve> its a different way of iterating, yes
[19:00:05] <Akronymus> pikapika NOT changed
[19:00:05] <davve> looping if you will
[19:00:16] <Akronymus> It does NOT mutate it
[19:00:24] *** Joins: contagious_meow (~salitos@102.166.52.155)
[19:00:26] <pufferfish> pikapika: functions in maths don't mutate anything.
[19:00:27] <pikapika> it doesn't matter if it returns a copy or the same, the end result is the same
[19:00:33] <Akronymus> It matters
[19:00:36] <Akronymus> A LOT
[19:00:47] <pikapika> We want a copy in some cases, we want the original array ot change in others
[19:00:59] <pikapika> pufferfish, of course. Yet turning machines are mathematical structures.
[19:01:02] <Akronymus> Because you can make some damn useful assumptions if everything is the same by default.
[19:01:06] <pufferfish> pikapika: i've encountered in my programming experience that immutablility is always a good thing to have no matter what you're hardware sensibilities are.
[19:01:11] <Akronymus> s/same/immutable
[19:01:46] <pufferfish> pikapika: immutablility allows one to make assumptions about the program which are simply not applicable for imperative programs.
[19:01:51] <pikapika> Such as?
[19:02:00] <Akronymus> That you can parallelize many things
[19:02:28] <pikapika> How will you parallelize an operation where the results depend on previous statement?
[19:02:32] <pufferfish> pikapika: immutablility is the ultimate encapsulation. you don't need to worry about what a function does.
[19:02:44] <Akronymus> For complex map functions the equivalent loop would likely not be paralellized by the compiler.
[19:03:10] *** Quits: salitos (~salitos@197.156.137.136) (Ping timeout: 240 seconds)
[19:03:15] <Akronymus> While with immutable data + map, it is trivial to have it paralellized
[19:03:26] <pikapika> How do you know you are not hiding a state variable in the "pure" code? ie your functions aren't reading a state token and returning a new state. Its still immutable.
[19:03:31] <pufferfish> pikapika: higher order functions is the first key idea when you get out of OOP. you can simulate it ugly in OOP but it's not the same thing. notation matters a lot.
[19:03:53] <Akronymus> because the compiler doesn't let me use mutation unless specified by me.
[19:03:56] <pufferfish> pikapika: you design you're types in such a way that your functions would reflect that. at least Haskell does that.
[19:04:05] <pufferfish> s/you're/your/
[19:04:12] <pikapika> Akronymus, no mutation involved at all
[19:04:34] <pikapika> state func(state old_state,args...) { .... return new_state; } no mutation involved here
[19:04:38] <pikapika> this of course is a blatant example
[19:04:44] <Akronymus> Oh like that.
[19:04:46] <pikapika> but how are you sure such things aren't hiding inside your code
[19:04:47] <Akronymus> That'd be fold.
[19:04:55] <Akronymus> State is made explicit.
[19:05:01] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[19:05:14] <Akronymus> You pass the state around, if you need to.
[19:05:17] *** Quits: kedamono (~kedamono@250.sub-174-251-209.myvzw.com) (Quit: cya l8r!)
[19:05:23] <Akronymus> But that is somewhat rare.
[19:05:25] <pufferfish> pikapika: it's guranteed by the type checker that your code has no side-effects without appropriate declarations.
[19:05:34] <Akronymus> that too
[19:05:50] <pikapika> pufferfish, well I could do that by sprinkling lots of consts in a C++ code too
[19:06:00] <Akronymus> But its not the default
[19:06:06] <Akronymus> And defaults matter a LOT
[19:06:20] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-55ae-d7d8-7bcf-ce25.res6.spectrum.com)
[19:06:22] <pufferfish> pikapika: you could put a lipstick on a pig and turn it into a miss america contestant. doesn't mean it's gonna win.
[19:06:50] <pufferfish> pikapika: notation matters a lot.
[19:06:55] <pikapika> Well the thing is, langs liek C and C++ often end up as the ones implementing the compilers for your pretty languages.
[19:07:10] <Akronymus> f# has the additional benefit of not allowing you to have mutually recursive dependencies unless specifically declared as such.
[19:07:20] <Akronymus> pikapika so what?
[19:07:25] <pufferfish> pikapika: things like assembly are the ones that are running behind your C/C++. doesn't mean one should program in them exclusively.
[19:07:32] <pikapika> Of course.
[19:07:38] <pikapika> I do intend to learn asm
[19:07:45] <pikapika> Its the most important language
[19:07:57] *** Quits: elnavigator (~elnavigat@105.196.149.83) (Ping timeout: 244 seconds)
[19:08:21] <davve> its not one language
[19:08:24] *** Quits: notABoxer (~notABoxer@ip59-131-15-186.ct.co.cr) (Quit: Leaving)
[19:08:24] <pikapika> But yes
[19:08:26] <Akronymus> MANY languages implement their own compiler in themselves.
[19:08:27] <pufferfish> pikapika: notation is very very important. if assembly was good enough, Ritchie would never have invented C.
[19:08:37] <pikapika> That doesn't mean I will be writing everything in asm, obviously
[19:08:48] <pufferfish> pikapika: in the 60s and 70s, lisp machines were pretty popular. not a line of C in them. all Lisp.
[19:08:48] <pikapika> Akronymus, the first bootstrapping has to be done with an existing lang
[19:08:55] <Akronymus> Yeah.
[19:08:57] <Akronymus> So what?
[19:08:57] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:f0d6:17ae:4a61:200d)
[19:09:25] <GeDaMo> It's possible to bootstrap a compiler by hand
[19:09:39] *** Quits: feoh (~feoh@ec2-18-224-106-217.us-east-2.compute.amazonaws.com) (Quit: The Lounge - https://thelounge.chat)
[19:09:40] <pikapika> asm is also a language GeDaMo 
[19:09:45] *** Joins: BitsNBytes (~BitsNByte@ip59-131-15-186.ct.co.cr)
[19:09:45] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[19:09:57] <Akronymus> pikapika the first programs were written by literally flipping switches.
[19:09:59] <GeDaMo> Doesn't have to go through asm, you could generate machine code directly :P
[19:10:05] <Akronymus> Some of the first*
[19:10:06] *** Joins: astroid (astroid@astroid.jujube.ircnow.org)
[19:10:07] <pikapika> Akronymus, yes
[19:10:07] <pufferfish> Akronymus: haha
[19:10:18] <Akronymus> No asm involved.
[19:10:19] <pikapika> pufferfish, but yes I will check out this fp thing
[19:10:30] <pufferfish> pikapika: please do for your own good.
[19:10:36] <pufferfish> pikapika: it's a nice mindset to have.
[19:10:40] <Akronymus> #fsharp is always happy to help you learn it.
[19:10:51] <pikapika> But from what I have been told yet, I am yet to see things that I am not already doing or are not easy in langs I already knew
[19:10:52] <Akronymus> I may have misjudged you to be more closed minded.
[19:10:53] <pikapika> Still
[19:11:00] <pikapika> I'll try to study The Way
[19:11:02] <pufferfish> pikapika: i would suggest Haskell. but you can choose from Clojure, Haskell, OCaml and also, #F.
[19:11:15] <Akronymus> You seem to fall into the blub paradox pikapika
[19:11:23] <pikapika> Akronymus, I was actually thinking of learning FP with Ocaml first
[19:11:25] <Akronymus> pufferfish I think f# is easier for pika
[19:11:28] <pikapika> But if you insist, then F# it is
[19:11:34] *** Quits: inky_ (~inky__@46.241.133.150) (Ping timeout: 244 seconds)
[19:11:36] <pikapika> Is F# available on the linux?
[19:11:43] <davve> erlang is pretty cool
[19:11:50] <Akronymus> Yeah it is
[19:11:51] <Akronymus> https://wiki.c2.com/?BlubParadox
[19:11:57] <Akronymus> Read that pikapika
[19:12:03] <pikapika> I know of that already
[19:12:03] <pufferfish> pikapika: i think OCaml is also a good language. Haskell can be quite strict about purity. that's bad.
[19:12:05] <davve> if you want to write servers with high availability
[19:12:15] <pikapika> And as I have already mentioned I consider asm programmers to be at the top of the blub hierarchy
[19:12:22] <pufferfish> Akronymus: i don't think that paradox should be invoked to refer to someone. it's quite insulting.
[19:12:52] <Akronymus> pufferfish I meant it more as in he had no exposure to functional programming yet, that's why he fails to see the usefulness
[19:13:24] <davve> you could apply functional methodics to any language you know already
[19:13:42] <davve> thats usually what developers do after learning some fp language
[19:13:45] <pufferfish> pikapika: yes you can, but as already stated, notation is very important.
[19:13:50] <Akronymus> Also: in regards to ocaml, i think the stricter compiler of f# (in regards to types) makes it easier to learn.
[19:14:01] <pufferfish> pikapika: some language come with better notation for functional stuff.
[19:14:02] <pikapika> pufferfish, dave
[19:14:35] <Akronymus> Yeah, there is quite the difference between having to declare a func<someinput,someoutput> each time and just using (fun x -> dosomething x)
[19:14:51] *** Joins: NEYi (~NEYi@109.251.216.38)
[19:14:54] <Akronymus> Altough, in that specfic case you could literally just use `dosomething`
[19:15:05] <pufferfish> also that's not strictly true, for example there are no higher order functions or closures in C. it's literally impossible without some ugly macro tricks i supppose.
[19:15:21] <pikapika> pufferfish, anything is possible in C and asm
[19:15:39] <davve> pikapika: true, but theres C++ for that stuff if you want that
[19:15:39] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[19:15:40] <Akronymus> I'd say that applies to lisp much more than c or asm
[19:15:45] <davve> in C you can get pretty far with function pointers
[19:15:47] <pikapika> C++ is also nice
[19:15:51] <pufferfish> pikapika: Beware of the Turing Tarpit where everything is possible but nothing of interest is easy.
[19:15:52] <davve> just no in-line lambas
[19:15:55] <pikapika> Templates are very interesting
[19:16:07] <pikapika> pufferfish, yeah I don't mean in the turing tarpit sense either
[19:16:19] <davve> what I meant was writing code in an immutable way
[19:16:21] <pikapika> I mean in the very practical sense that people have been implementing various high level langs in C and C++
[19:16:31] <davve> lots of functions. easily testable readable modular code :P
[19:16:44] <merijn> pikapika: People have been implementing high level languages in other languages for decades too, tbh
[19:16:55] <pufferfish> pikapika: i think you should try to do everything Haskell or F# does without implementing a new Haskell in C.
[19:16:58] <Akronymus> And instead of throwing exceptions, you can return a result or option
[19:17:10] <Akronymus> Which encodes that the function can fail in the type system itself
[19:17:14] *** Joins: Jaran (~mail@user/jaran)
[19:17:15] <GeDaMo> https://en.wikipedia.org/wiki/Tombstone_diagram
[19:17:16] <bayaz> Title: Tombstone diagram - Wikipedia 
[19:17:58] <pikapika> pufferfish, but of course. I think some people here have a very incorrect impression of me if they think I am some "fanatic". As has been said I haveb een meaning to try out the FP for some time, etc
[19:18:06] <Akronymus> GeDaMo oh yeah, forgot about t diagrams.
[19:18:26] <davve> its usually the FP crowd refered to fanatics
[19:18:31] <davve> as they are the niche
[19:18:45] <pufferfish> pikapika: well, you are the resident zealot. i've seen you push C and ASM as solution to every programming task in here for a long time.
[19:18:45] <davve> as fanatics*
[19:18:46] <Akronymus> I would consider myself a fp advocate.
[19:19:33] <Akronymus> But mostly because I found it to make expressing what I want to happen much easier in fp than any other paradigm, on average.
[19:19:42] <pikapika> pufferfish, no. I have only showcased the debunked various examples of anti-C zealotry.
[19:19:49] <pikapika> *and debunked
[19:20:00] <Akronymus> many of those were you strawmanning.
[19:20:06] <pufferfish> pikapika: who are these anti-C zealots?
[19:20:10] <pikapika> Not at all Akronymus 
[19:20:28] <Akronymus> There are quite a few problems I'd still use go or c for.
[19:20:28] <merijn> pufferfish: Me :)
[19:20:46] <pikapika> pufferfish, there are many. Since you claim to be following what I am typing here for long, you should know the ones. Like someone claiming you should use %s to print compile time string literals etc
[19:20:58] <Caffeinated> haha
[19:21:00] <pufferfish> merijn: i meant to ask what is their tribe?
[19:21:01] <pikapika> or that acm article
[19:21:22] <Caffeinated>  /iggday pikapika
[19:21:25] <Caffeinated> oops
[19:21:41] <Akronymus> Caffeinated what did you even try to do?
[19:21:55] <Caffeinated> Akronymus: it's a timed ignore alias in irssi
[19:22:00] <Akronymus> Oh.
[19:22:05] <pufferfish> Caffeinated: haha
[19:22:06] <Caffeinated> there was a space in the terminal before i hit enter
[19:22:42] <Akronymus> Happens.
[19:23:07] <pikapika> Caffeinated, don't ask me. Ask whoever it was that was claiming that statement.
[19:23:10] <pufferfish> Akronymus: is F# easily available on Linux?
[19:23:18] <Akronymus> Yes.
[19:23:29] <Akronymus> https://fsharp.org/use/linux/
[19:23:30] <bayaz> Title: Use F# on Linux | The F# Software Foundation 
[19:23:37] *** Quits: BitsNBytes (~BitsNByte@ip59-131-15-186.ct.co.cr) (Quit: Leaving)
[19:23:58] *** Joins: BitsNBytes (~BitsNByte@ip59-131-15-186.ct.co.cr)
[19:24:03] <Akronymus> And fsharpforfunandprofit is a amazing learning resource.
[19:24:20] <Akronymus> https://fsharp.org/learn/ or just use this
[19:24:20] <bayaz> Title: Learning F# | The F# Software Foundation 
[19:24:42] <pufferfish> Akronymus: functional languages have this series of books with the name "for _ and _", lol.
[19:24:52] <Akronymus> It is actually a website
[19:25:07] <Akronymus> But "for fun and profit" predates the internet afaik.
[19:25:10] *** Joins: elnavigator (~elnavigat@105.196.149.83)
[19:26:00] <Akronymus> Oh. apparently comes from the 1800s
[19:26:04] <pufferfish> Akronymus: maybe.
[19:26:46] <pufferfish> Akronymus: does F# require recursive functions to be declared?
[19:27:11] *** Joins: paulo (paulo@user/paulo/x-9032687)
[19:27:17] <Akronymus> `let rec function`
[19:27:29] <pufferfish> Akronymus: i see.
[19:27:38] *** Joins: sandman13 (sandman13@jujube.ircnow.org)
[19:27:48] *** Joins: Scarecr0w (scarecr0w@user/scarecr0w)
[19:27:53] *** Quits: death916 (~death916@c-67-182-183-147.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[19:28:05] *** Joins: death916 (AdiIRC@c-67-182-183-147.hsd1.ca.comcast.net)
[19:28:27] <pufferfish> recursion could be very difficult to reason about if one is used to thinking imperatively with loops and assignments.
[19:28:39] *** Joins: anovick (~anovick@IGLD-83-130-61-178.inter.net.il)
[19:28:40] *** Quits: death916 (AdiIRC@c-67-182-183-147.hsd1.ca.comcast.net) (Changing host)
[19:28:40] *** Joins: death916 (AdiIRC@user/death916)
[19:28:47] <Akronymus> Yeah
[19:28:48] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[19:29:00] *** Joins: flynn (~mcbloch@user/flynn)
[19:29:06] *** Quits: nekodesu (~bit@user/nekobit) (Remote host closed the connection)
[19:29:24] *** Quits: pandakekok9 (~job@wikimedia-commons/pandakekok9) (Remote host closed the connection)
[19:29:52] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[19:29:54] <pufferfish> Akronymus: i was making this 2048 clone some days ago in JS and spend a lot of time debuggin the for loop for logic. i finally decided to write it again in a functional manner and it was done in an afternoon.
[19:31:01] <pufferfish> Akronymus: is there a good transpiler to JS from a immutable functional language. JS is a good language but doing functional constructs in it could be verbose.
[19:31:06] <Akronymus> 2 hardest problems in compsci: caching, naming and off by one errors
[19:31:16] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 252 seconds)
[19:31:19] <Akronymus> maps and folds sidestep that last one
[19:31:32] <pufferfish> Akronymus: actually, that's three problems.
[19:31:49] <Akronymus> Read it again.
[19:31:50] <merijn> pufferfish: Woosh
[19:31:51] <GeDaMo> Off by one errors :|
[19:31:53] <Akronymus> But think about it
[19:32:03] <pufferfish> *actually*?!?!
[19:32:21] <pufferfish> i think it should have been pretty clear with the *actually*.
[19:32:55] <MrMobius> the funniest jokes are the ones that need explaining 0_0
[19:32:58] *** Joins: inky (~inky@37.252.82.58)
[19:32:58] <Akronymus> https://hastebin.com/rukacajoli.fsharp pufferfish some code I wrote in under an hour to clean up some text file that contains a list of tables + columns and shows me the shared columns
[19:33:05] *** Joins: JuggleTux (~tux@mob-194-230-146-23.cgn.sunrise.net)
[19:33:08] <Akronymus> Not really clean code.
[19:33:16] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 244 seconds)
[19:33:17] *** Joins: brabrax (~brabrax@user/brabrax)
[19:33:17] <pufferfish> i don't think you know the meme.
[19:33:29] <Akronymus> oh, you were being sarcastic?
[19:33:31] <pikapika> pufferfish, also for instance I have been meaning to learn 'perl'
[19:33:37] <pufferfish> pikapika: Perl is great.
[19:33:38] *** Quits: Arithmoquine (~ct@193.32.127.218) (Ping timeout: 250 seconds)
[19:33:39] <pikapika> So it is very incorrect to claim I am some C zealot
[19:33:42] <Akronymus> AKTSCHUALLY is the one you'd want for that IMO.
[19:33:54] <pufferfish> Akronymus: yeah, never mind though.
[19:34:05] <Akronymus> I am slow.
[19:34:15] <pufferfish> pikapika: yeah, if you were a zealot, you would go for Python, lol.
[19:34:27] <pikapika> Python is more C like
[19:34:33] <pufferfish> i passionately hate Python.
[19:34:34] <pikapika> But yeah perl is very interesting
[19:34:46] <pikapika> Whats wrong with python? Its a nice and practical language
[19:34:56] *** Quits: _inky (~inky@46.241.133.150) (Ping timeout: 250 seconds)
[19:34:59] <pufferfish> pikapika: Perl is the best C-like dynamic scripting language alive.
[19:35:10] <Akronymus> It has significant whitespace without any facilities to help you deal with any accidental misalignement
[19:35:16] <pikapika> I have heard lots of good things about perl
[19:35:24] <pufferfish> i was once caught be a Python. i hate 'em.
[19:35:41] <pikapika> pufferfish, they like to cuddle around things
[19:35:49] <Akronymus> pikapika btw, EVERYTHING in f# has a return value.
[19:36:04] <Akronymus> That makes a much larger difference than you might think.
[19:36:07] *** Joins: zaher (~zaher@37.48.185.2)
[19:36:08] <pikapika> What exactly do you mean by 'everything'?
[19:36:15] <Akronymus> everything.
[19:36:22] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:9cf1:af9d:7c3d:498b)
[19:36:22] <pikapika> How can a class have a return value?
[19:36:24] <Akronymus> if else evaluates to a value.
[19:36:28] <pikapika> Unless as a ctor
[19:36:40] <pikapika> Akronymus, like ?:
[19:36:41] <pikapika> ?
[19:36:57] <pufferfish> pikapika: it means it's expression-based.
[19:37:01] <Akronymus> Basically, everything being an expression allows you to reduce it to a value.
[19:37:45] <pikapika> I don't see yet how that makes much difference
[19:37:46] <pufferfish> pikapika: every expression evaluates to something and it has a type. no lvalue level thinking like C, it's all substitution of equivalent expression for one another.
[19:38:04] <pufferfish> pikapika: it makes reasoning about programs much easier.
[19:38:08] <X-Scale> pikapika: it makes a big difference, just look at C expressions which are infinitely composable
[19:38:09] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:38:17] <Akronymus> And allows you to pipe basically anything around.
[19:38:17] <pikapika> you mean to say all statements are implicit functions
[19:38:26] *** Quits: zaher__ (~zaher@37.48.146.7) (Ping timeout: 244 seconds)
[19:38:29] <pufferfish> pikapika: there are no statements.
[19:38:37] <pikapika> What
[19:38:45] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:38:48] <pufferfish> pikapika: in the sense we are used to.
[19:38:54] *** Quits: rexar89_ (~alexi5@208.83.82.234) ()
[19:38:56] <Akronymus> Even stuff like if else, match, and the like can be used as values.
[19:39:24] <pufferfish> pikapika: for example, x = if (y < 3) 4 else -1 is a valid expression.
[19:39:26] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:9cf1:af9d:7c3d:498b) (Ping timeout: 256 seconds)
[19:39:34] <Akronymus> You know pipes in the shell, right? pikapika
[19:39:37] <pikapika> so itsl ike the ?: operator in C
[19:39:42] <Akronymus> Yes.
[19:39:47] <Akronymus> But MUCH more powerful
[19:39:47] <pufferfish> pikapika: every operator and construct is like that.
[19:39:55] <pikapika> Interesting
[19:39:57] *** Joins: wwweary (~wwweary@2600:1700:138a:8d0:390e:2aad:e876:178b)
[19:40:02] <pikapika> So I can use a switch inside an expression
[19:40:03] <pufferfish> Akronymus: does F# feature currying?
[19:40:07] <pikapika> for example
[19:40:09] <Akronymus> It does
[19:40:12] <Akronymus> By default even
[19:40:38] <pikapika> Its a nice syntactic aid I'd say. I'd normally just capture the intermediates in variables.
[19:40:39] <Akronymus> you can 
[19:40:50] <pufferfish> Akronymus: i wish currying was present by default in more languages.
[19:41:02] <pikapika> But it is helpful to be able to just put the switch itself inside an expression
[19:41:03] <pufferfish> Akronymus: it's an incredibly powerful notation.
[19:41:11] <Akronymus> It is indeed.
[19:41:23] <Akronymus> The only real lack with f# I have is a lack of HKT.
[19:41:28] <pufferfish> pikapika: don't think in those terms though. it's more like writing equations in mathematics.
[19:41:36] <Akronymus> But that is something a beginner would find more confusing than helpful anyways.
[19:41:41] <pufferfish> Akronymus: yeah.
[19:42:08] <pufferfish> Akronymus: Haskellers tend to spend a lot of time with the intricacies of the type system which are not always related to the real world problems.
[19:42:33] <pufferfish> Akronymus: it's mostly an academic matter.
[19:42:38] <Akronymus> https://hastebin.com/wiyasarodi.fsharp pufferfish pikapika this is a function that turns a list of options to a option of list.
[19:42:50] <Akronymus> Basically it is just a list if all entries exist.
[19:42:53] <pikapika> I should say generally the kinds of uses of math the fp types go on about don't inspire interest in me. For me practical stuff like odes, pdes, linear algebra thats the kind of math thats interesting.
[19:42:55] <Akronymus> Or a none if any one is missing
[19:43:17] <Akronymus> All in a typesafe manner.
[19:43:23] <Akronymus> Enforced at compile time.
[19:43:29] <pufferfish> pikapika: i'm not talking about the mathematics of it. it's just *like* mathematics.
[19:43:30] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Remote host closed the connection)
[19:43:50] <Akronymus> This can be used for verifying that all values were valid, for example.
[19:43:54] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[19:44:01] <pufferfish> pikapika: do you ever worry about a variable *changing* to a different value and having to debug that while doing mathematics.
[19:44:03] <xsperry> HKT are not an academic matter. they allow greater abstractions and can reduce boilerplate
[19:44:15] <Akronymus> xsperry yeah, but they also are hard.
[19:44:15] <pikapika> pufferfish, what does that 'a syntax mean
[19:44:24] <Akronymus> 'a is just a generic type
[19:44:34] <pufferfish> pikapika: that's something F# specific.
[19:44:48] <pikapika> pufferfish, yeah. In the line by line simplification of results
[19:44:51] <GeDaMo> All the 'as in an expression are the same type
[19:44:55] <Akronymus> something <T> <-- like that
[19:45:10] <Akronymus> Specifically the T
[19:45:21] *** Joins: compscipunk (~compscipu@107-214-234-232.lightspeed.sndgca.sbcglobal.net)
[19:47:20] <Akronymus> Seq.fold takes 3 arguments: A function that maps from an accumulator and element to a new accumulator, a initial value, and a collection
[19:47:44] <Akronymus> In this case, I wrote each argument under the next.
[19:47:58] <Akronymus> s/next/previous
[19:48:05] <pufferfish> xsperry: they do. but they also tend to focus attention on the things which might not be immediately relevant. i fear once i go down that hole, i might not return.
[19:48:35] <Akronymus> https://blog.plover.com/2018/09/03/ pufferfish
[19:48:36] <bayaz> Title: The Universe of Discourse : Why I never finish my Haskell programs (part 1 of ∞) 
[19:49:20] <pikapika> so source is List(Option<a>)?
[19:49:22] <pikapika> Akronymus
[19:49:29] <Akronymus> Yeah
[19:49:31] <pikapika> and returns Option(List<a>)
[19:49:35] <Akronymus> Indeed.
[19:49:37] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:75d9:8ee9:c723:ca70)
[19:50:00] <pufferfish> Akronymus: i was thinking of this *exact* same thing.
[19:50:04] <Akronymus> Option<a> is either a Some<a> or a none. 
[19:50:09] <pufferfish> Akronymus: weird.
[19:50:46] <xsperry> pufferfish, they are not THAT difficult to understand. instead of just having the ability to abstract over T, as in A<T>, you can also abstract over A (that takes <T>).
[19:51:03] <pufferfish> xsperry: yeah.
[19:51:21] <Akronymus> xsperry not that difficult doesn't prevent making it harder for beginners.
[19:51:32] <Akronymus> Also the reason I avoid throwing monad or monoid around.
[19:52:02] <pufferfish> i try to restrict myself to the popular typeclasses and not fool around with Monoids and Semigroups and other stuff generally.
[19:52:11] <pikapika> Akronymus, whats _
[19:52:21] <pufferfish> pikapika: it's a wildcard.
[19:52:21] <Akronymus> Don't bother with those yet.
[19:52:35] <Akronymus> _ is actually a discard.
[19:52:38] <pikapika> pufferfish, and what does it match
[19:52:47] <pufferfish> pikapika: everything, i suppose.
[19:52:50] <sandman13> anything
[19:53:00] <Akronymus> It matches anything, but doesn't capture it
[19:53:03] <pikapika> yeah but its in a syntax not in a string
[19:53:15] <pikapika> ok
[19:53:16] <Akronymus> But you can also specify stuff such as "Some _"
[19:53:18] <pufferfish> pikapika: think of a general common function that's pain to write in C/C++.
[19:53:20] <pikapika> so those nulls are just not inserted into the list
[19:53:40] <Akronymus> Where it only matches an option that has a value, but when you don't need the actual value
[19:53:40] *** Quits: absc (~absc@dynamic-adsl-94-34-168-146.clienti.tiscali.it) (Quit: Leaving.)
[19:54:05] <pikapika> So it discards None -> anything, and anything -> None elements
[19:54:09] <Akronymus> pikapika Any None will result in the new state being none.
[19:54:09] <pikapika> in your code
[19:54:23] *** Joins: absc (~absc@access03.colt-engine.it)
[19:54:26] *** Quits: pufferfish (~pufferfis@122.168.104.158) (Quit: leaving)
[19:54:26] <Akronymus> Which then propagates and makes the whole list a none.
[19:54:57] <Akronymus> So, if any element is not existant, it invalidates the whole list.
[19:54:59] <pikapika> ok
[19:55:05] <pikapika> so its like an AND of the list
[19:55:10] <Akronymus> Somewhat.
[19:55:42] <pikapika> if the list is all non-null elements it returns an option with that list otherwise it returns a none
[19:56:02] <Akronymus> A "Some" of that list but yes, in essence.
[19:57:07] <Akronymus> The definition for option is basically this: https://hastebin.com/azogowewel
[19:57:29] <Akronymus> The | in the type indicates that it is EITHER one OR the other.
[19:57:31] <Akronymus> Not both
[19:57:45] <pikapika> Ok
[19:58:10] <Akronymus> Which is extremely useful
[19:58:36] <pikapika> Interesting code and interesting concepts. But at this stage at least a simple for loop would have been much easier. Unless you mean the Some thing to propagate further where I guess it might help if you don't have to do an if(x==null) this; else that; exploding like a tree
[19:58:38] <pikapika> Maybe
[19:58:42] <pikapika> I am not certain
[19:58:45] <Akronymus> In most OOP languages the default is that everything can be null.
[19:59:20] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-54e9-56c6-4a46-ec1f.inf6.spectrum.com)
[19:59:23] *** hy is now known as hbjy
[19:59:23] <Akronymus> In f# option is basically explicit nullability, but with type safety and being able to see what can "not exist"
[19:59:47] <pikapika> <pufferfish> pikapika: think of a general common function that's pain to write in C/C++.
[20:00:13] <sandman13> Akronymus: it's Maybe type from Haskell xD
[20:00:14] <Akronymus> This is quite the simple function.
[20:00:18] <Akronymus> sandman13 yeah
[20:00:18] *** Joins: yamz (~salitos@154.123.252.81)
[20:00:25] <sandman13> Just a or Nothing
[20:00:27] <pikapika> None comes to mind rn honestly. For certain recursive functions I use a helper function or some default arguments, a bit ugly not I can't call it a "pain"
[20:00:44] <Akronymus> But this is safe code
[20:00:51] <Akronymus> You can read from the type alone what it does
[20:00:56] <Akronymus> Or mostly.
[20:00:58] <sandman13> You just have to deal with two types
[20:01:04] <sandman13> Some or None
[20:01:22] *** Quits: henbruas (~henbruas@ti0003a400-3211.bb.online.no) (Quit: ZNC 1.8.2 - https://znc.in)
[20:01:28] <Akronymus> The match has to be exhaustive.
[20:01:36] <Akronymus> So you can't forget a potential case.
[20:02:00] <sandman13> oh yeah
[20:02:04] <Stefan26> sort of unrelated.. but ive had so many APIs where people think string field being "mandatory" automatically means it can't be empty string
[20:02:06] <Akronymus> So, for a enum the compiler would check that for you
[20:02:13] *** Joins: henbruas (~henbruas@ti0003a400-3211.bb.online.no)
[20:02:21] <sandman13> Writing in FP is like solving a puzzle when it comes to types
[20:02:29] <GeDaMo> Don't tell /me/ what I can't forget! :P
[20:02:32] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:9cf1:af9d:7c3d:498b) (Ping timeout: 245 seconds)
[20:02:38] <Akronymus> More like types are just another tool in solving the puzzle.
[20:03:07] *** Quits: kodah (~kodah@user/kodah) (Ping timeout: 252 seconds)
[20:03:10] *** Quits: contagious_meow (~salitos@102.166.52.155) (Ping timeout: 240 seconds)
[20:03:45] <Stefan26> do you typically, a priori specs, consider empty string a valid value for a mandatory field?
[20:04:32] <Akronymus> Depends
[20:05:07] *** Joins: Cashlin (~hp@user/cashlin)
[20:05:12] <Akronymus> But generally, I'd suspect the intent is that it is not empty.
[20:05:48] <Akronymus> Speaking of: In functional languages with algebraic datatypes (Either this or this type) you can easily make a type for non-empty strings.
[20:05:56] <Akronymus> That enforce it. 
[20:05:59] <Akronymus> pikapika
[20:07:26] *** Quits: Pickchea (~private@user/pickchea) (Ping timeout: 250 seconds)
[20:07:45] <pikapika> Akronymus, yes?
[20:08:03] <Akronymus> The messages above the ping.
[20:08:07] <pikapika> So its a way to reduce tests of the if(x==null) dothis; else dothat;
[20:08:08] <pikapika> ?
[20:08:24] <Akronymus> Kinda.
[20:08:35] <Akronymus> It is more powerful than that.
[20:08:57] <Akronymus> Because you can see at creation time of an instance of that type whether it is valid or not.
[20:09:23] <Akronymus> https://fsharpforfunandprofit.com/posts/designing-with-types-single-case-dus/
[20:09:23] <bayaz> Title: Designing with types: Single case union types | F# for fun and profit 
[20:09:42] <karstensrage> in apache commons they have StringUtils.isEmpty("") - > true
[20:09:58] <karstensrage> which handles null or empty string (just whitespace)
[20:10:26] <Akronymus> So, that if you have a NonEmptyString for example, you can rely on that truly being the case.
[20:10:54] <Akronymus> https://hastebin.com/rupiqodujo.rust pikapika the relevant excerpt
[20:11:40] <Akronymus> In case of the email address being invalid you get a None.
[20:12:19] <Akronymus> And because you can't use a option where a "normal" value is asked for, it enforces that you check whether it was successfully created.
[20:12:26] <Akronymus> At some point.
[20:12:42] <Akronymus> Prevents a LOT of nullref exceptions.
[20:12:44] <pikapika> ok
[20:12:55] *** Quits: yamz (~salitos@154.123.252.81) (Read error: Connection reset by peer)
[20:12:56] <pikapika> so by default compiler checks arguments should be non-null
[20:13:01] *** Quits: x003fgqwe (uid479614@id-479614.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[20:13:01] <Akronymus> No.
[20:13:05] <pikapika> and the only place nulls are allowed is where you explicitly declare option?
[20:13:12] <Akronymus> Ok, kinda.
[20:13:27] <Akronymus> Close enough for now, I'd say.
[20:13:32] <pikapika> ok
[20:13:32] <Akronymus> g2g soon
[20:13:40] <pikapika> Cya
[20:13:46] <Akronymus> To get the value out of a option, you need to unwrap it.
[20:13:56] <Akronymus> And during unwrapping you need to handle the none case too.
[20:14:05] <Akronymus> Your choice when you do it, but you have to.
[20:14:09] *** Joins: salitos (~salitos@154.123.252.81)
[20:14:17] <Akronymus> (the unwrapping that is)
[20:14:21] <pikapika> let value (EmailAddress e) = e it just seems to return the thing as is
[20:15:00] *** Quits: salitos (~salitos@154.123.252.81) (Read error: Connection reset by peer)
[20:15:00] <Akronymus> That extracts the string itself from the emailaddress.
[20:15:15] <Akronymus> So that you can use it where a simple string is asked for.
[20:15:33] *** Joins: salitos (~salitos@154.123.252.81)
[20:15:47] <pikapika> Akronymus, is 'create' a reserved name for a ctor?
[20:16:10] <Akronymus> (EmailAddress e) means it is a function that accepts a emailaddress and unwraps it to just a string.
[20:16:14] <Akronymus> Where e is the string
[20:16:22] <pikapika> ok
[20:16:34] <pikapika> I thought it meant function declaration syntax
[20:16:39] <pikapika> which is why I was confused
[20:17:05] <GeDaMo> It's more like an object constructor with (in this case) a single instance variable
[20:17:06] <pikapika> This stuff is getting confusing. I need to start properly from the beginning.
[20:17:20] <Akronymus> create is used to make the constructor private, except through this specified version
[20:17:21] <pikapika> with an F# docs/tutorial
[20:17:46] <Akronymus> https://fsharpforfunandprofit.com/posts/overview-of-types-in-fsharp/ pikapika
[20:17:47] <bayaz> Title: Overview of types in F# | F# for fun and profit 
[20:17:54] <Akronymus> Am off.
[20:17:56] *** Joins: xenon- (~bc8167eb@217.29.117.252)
[20:18:00] <Akronymus> May check by in 1 or 2 hrs.
[20:18:25] *** Joins: Hax0r (~Hax0r@46.38.93.176)
[20:18:44] *** Quits: Akronymus (~Akronymus@85.31.8.180) (Quit: g2g)
[20:18:49] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[20:18:58] <pikapika> Thanks
[20:20:46] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:21:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:24:32] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[20:26:40] *** Quits: BenLand100 (~bland@user/benland100) (Ping timeout: 240 seconds)
[20:26:49] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:27:12] *** Joins: BenLand100 (~bland@64.253.0.103.dyn-cm-pool70.pool.hargray.net)
[20:27:12] *** Quits: BenLand100 (~bland@64.253.0.103.dyn-cm-pool70.pool.hargray.net) (Changing host)
[20:27:12] *** Joins: BenLand100 (~bland@user/benland100)
[20:27:48] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:32:04] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Remote host closed the connection)
[20:32:11] *** Joins: newpy (~newpy@2601:280:4381:1390:d8a2:4368:1fe2:a8e3)
[20:32:52] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:33:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:35:16] *** Quits: inky (~inky@37.252.82.58) (Ping timeout: 244 seconds)
[20:38:34] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[20:38:55] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:39:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[20:40:01] *** Joins: inky (~inky@178.78.135.202)
[20:40:26] *** Joins: independent_ (~independe@51.158.144.31)
[20:41:13] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:a1be:2710:2837:d377) (Quit: Textual IRC Client: www.textualapp.com)
[20:42:30] *** Quits: independent56 (~independe@95.144.68.39) (Ping timeout: 244 seconds)
[20:43:01] *** Quits: zaher (~zaher@37.48.185.2) (Ping timeout: 244 seconds)
[20:43:07] *** Joins: nekodesu (~bit@user/nekobit)
[20:43:42] *** Quits: nekodesu (~bit@user/nekobit) (Client Quit)
[20:43:59] *** Joins: nekodesu (~bit@user/nekobit)
[20:44:58] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[20:45:08] *** Quits: salitos (~salitos@154.123.252.81) (Ping timeout: 250 seconds)
[20:46:38] *** Joins: rsx (~dummy@ppp-188-174-154-15.dynamic.mnet-online.de)
[20:46:39] *** Quits: independent_ (~independe@51.158.144.31) (Read error: Connection reset by peer)
[20:47:29] *** Joins: Thedarkb (~Thedarkb@85.255.234.235)
[20:47:56] *** Joins: independent_ (~independe@95.144.68.39)
[20:50:36] *** Joins: Shanzem_ (~Shanzem@86.31.109.147)
[20:52:09] *** Joins: p0g0__ (~p0g0@23.252.176.222)
[20:53:00] <hbjy> Man create-react-app takes its time to run, eh?
[20:53:01] *** Joins: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net)
[20:53:13] *** Quits: inky (~inky@178.78.135.202) (Ping timeout: 252 seconds)
[20:53:22] *** Joins: akevinhuang (~thekevinh@user/thekevinhuang)
[20:53:29] *** Quits: Caffeinated (~Caffeine@user/alexdelarge) (Ping timeout: 250 seconds)
[20:53:48] *** Quits: Shanzem (~Shanzem@86.31.109.147) (Ping timeout: 250 seconds)
[20:54:02] *** Joins: inky_ (~inky__@46.241.143.112)
[20:54:16] *** Joins: inky (~inky@46.241.143.112)
[20:54:35] *** Joins: Samian (~Sami@2620:10d:c091:480::1:2d50)
[20:54:51] *** Quits: rsx (~dummy@ppp-188-174-154-15.dynamic.mnet-online.de) (Quit: rsx)
[20:54:59] *** Joins: salitos (~salitos@154.123.252.81)
[20:56:10] *** Quits: p0g0_ (~p0g0@23.252.176.222) (Ping timeout: 240 seconds)
[20:56:15] *** Joins: manin (~x@185.242.190.95)
[20:57:37] *** Quits: DevAntoine (~DevAntoin@91-169-148-162.subs.proxad.net) (Ping timeout: 252 seconds)
[20:58:56] <GeDaMo> https://xkcd.com/303/ ? :P
[20:58:57] <bayaz> Title: Compiling 
[20:59:08] *** Joins: hv99 (~hv99@wireguard/tunneler/hv99)
[21:00:19] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[21:00:58] *** Joins: contagious_meow (~salitos@197.156.190.235)
[21:01:01] *** Quits: salitos (~salitos@154.123.252.81) (Read error: Connection reset by peer)
[21:01:20] *** Quits: absc (~absc@access03.colt-engine.it) (Quit: Leaving.)
[21:01:28] *** Quits: inky_ (~inky__@46.241.143.112) (Ping timeout: 252 seconds)
[21:03:50] *** Quits: Mach (~Mach@82.79.208.93) (Quit: q)
[21:04:53] *** Quits: BitsNBytes (~BitsNByte@ip59-131-15-186.ct.co.cr) (Quit: Leaving)
[21:05:15] *** Joins: BitsNBytes (~BitsNByte@ip59-131-15-186.ct.co.cr)
[21:08:00] *** Joins: Akronymus (~Akronymus@85.118.189.59)
[21:08:04] *** Quits: jazzy (~jaziz@2600:380:4452:a3ec:1dd5:e36f:ac02:9c83) (Ping timeout: 252 seconds)
[21:08:08] <Akronymus> Ok, am at home now.
[21:10:23] *** Quits: inky (~inky@46.241.143.112) (Remote host closed the connection)
[21:13:21] *** Quits: w0ng (~w0ng@144.48.36.84) (*.net *.split)
[21:13:21] *** Quits: Raguile (~Raguile@user/raguile) (*.net *.split)
[21:13:37] <Akronymus> pikapika you still here?
[21:13:47] *** Joins: w0ng (~w0ng@144.48.36.84)
[21:14:30] *** Joins: Raguile (~Raguile@115-188-163-160-fibre.sparkbb.co.nz)
[21:14:50] *** Joins: Akuli (~Akuli@87-94-109-202.bb.dnainternet.fi)
[21:15:47] *** Joins: Narrat (~omnius@p200300df5f00d33506ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:18:24] *** Joins: pulse (~pulse@user/pulse)
[21:18:47] *** Raguile is now known as Guest522
[21:18:55] <Akronymus> Guess thats a no then
[21:19:50] *** Joins: webNET4 (~0x100@32.211.211.39)
[21:21:13] *** Quits: tcsilver (~tcsilver@pool-96-255-128-204.washdc.fios.verizon.net) (Ping timeout: 250 seconds)
[21:24:14] *** Quits: mobidrop (~mobidrop@user/mobidrop) (Remote host closed the connection)
[21:38:00] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Ping timeout: 250 seconds)
[21:41:08] <Donitz> how do you write a negative range?
[21:41:11] <Donitz> range -1-1
[21:41:15] <Donitz> doesn't really look range
[21:41:22] <Donitz> look right*
[21:41:24] *** Quits: gggp__ (~gggp@220-136-145-74.dynamic-ip.hinet.net) (Ping timeout: 244 seconds)
[21:41:40] <GeDaMo> -1 .. -1 ?
[21:41:58] <Donitz> .. 1, but yeah. probably
[21:42:02] <GeDaMo> Ah
[21:42:04] <Akronymus> Minus one to one?
[21:42:09] <Donitz> or I guess -1 < x < 1 works too
[21:42:10] <Akronymus> [-1 .. 1]
[21:42:15] <Akronymus> At least in f#
[21:42:19] *** Quits: webNET4 (~0x100@32.211.211.39) (Remote host closed the connection)
[21:42:32] *** Joins: webNET4 (~0x100@32.211.211.39)
[21:42:57] <Donitz> https://www.dailywritingtips.com/how-to-write-about-ranges/
[21:42:59] <bayaz> Title: How to Write About Ranges 
[21:43:02] <Donitz> hah, there is an article it
[21:43:21] <jinsun_> range(-1,1) ?
[21:44:04] <Donitz> naw, in a comment
[21:44:06] <jelly> the language that has (-1, 1] wins
[21:44:15] <Donitz> -1 to 1 works too I guess
[21:45:25] <mawk> [-1; 1)
[21:45:29] <mawk> the last bound is excluded
[21:45:35] <mawk> we're doing computers not math
[21:45:36] <mawk> wake up
[21:46:52] <Donitz> C is a letter, not a language!
[21:47:26] *** Joins: inky_ (~inky__@46.36.119.19)
[21:47:28] <CyberTailor> С is a musical note
[21:47:39] *** Quits: Narrat (~omnius@p200300df5f00d33506ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[21:47:55] *** Joins: Narrat (~omnius@p200300df5f00d33506ea56fffe2e7cdc.dip0.t-ipconnect.de)
[21:48:17] <CyberTailor> btw there's a video about letter c
[21:48:18] <CyberTailor> https://redirect.invidious.io/watch?v=chpT0TzietQ
[21:48:20] <bayaz> Title: Select instance - Invidious 
[21:48:29] <webNET4> is that the really famous printf wrapper?
[21:51:42] *** Quits: xff0x (~xff0x@2001:1a81:5283:ae00:3380:f428:346c:f5a) (Ping timeout: 245 seconds)
[21:53:00] *** Joins: xff0x (~xff0x@2001:1a81:5283:ae00:3380:f428:346c:f5a)
[21:53:44] *** Joins: Caffeinated (~Caffeine@user/alexdelarge)
[22:00:07] *** Quits: jiffe (~jiffe@mail.nsab.us) (Ping timeout: 240 seconds)
[22:00:49] *** Joins: yamz (~salitos@154.123.142.25)
[22:02:19] *** Quits: contagious_meow (~salitos@197.156.190.235) (Read error: Connection reset by peer)
[22:02:41] *** Joins: jiffe (~jiffe@mail.nsab.us)
[22:03:42] *** Joins: oldlaptop (~quassel@45.63.78.126)
[22:03:52] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Remote host closed the connection)
[22:04:48] *** Joins: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net)
[22:05:18] *** Quits: Hax0r (~Hax0r@46.38.93.176) (Read error: Connection reset by peer)
[22:06:28] *** Joins: Hax0r (~Hax0r@46.38.93.176)
[22:10:54] *** Quits: flynn (~mcbloch@user/flynn) (Read error: Connection reset by peer)
[22:11:06] *** Joins: flynn (~mcbloch@user/flynn)
[22:14:45] *** Joins: zwr (~zwr@2804:d45:b966:fb00:c95b:63d6:bbd2:f8dd)
[22:15:42] <Cypris> is it ok to ask questions about batch scripting?
[22:16:30] <GeDaMo> Yes
[22:16:54] <InPhase> Batch as in the old classic DOS format?  Seems fine, although most answers will probably be "do as little as you can this way".  :)
[22:18:37] *** Joins: endless (~endlessed@51.81.211.147)
[22:19:19] *** Joins: gggp__ (~gggp@220-136-145-74.dynamic-ip.hinet.net)
[22:20:07] *** Quits: gitgood (~gitgood@80-44-15-155.dynamic.dsl.as9105.com) (Ping timeout: 252 seconds)
[22:20:38] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[22:20:56] *** Joins: independent_ (~independe@95.144.68.39)
[22:20:59] <Cypris> well i wrote my own networking tools in batch and i was wondering how to setup port scanning if possible through batch
[22:21:10] <Cypris> https://github.com/Cypxher/CyphrxNetworkingtools
[22:21:10] <bayaz> Title: GitHub - Cypxher/CyphrxNetworkingtools: Simple networking tool that can test internet connectivity ping ips and resolve domain names. 
[22:21:14] <Cypris> this is my networking tool
[22:23:25] <GeDaMo> nmap?
[22:23:44] <Cypris> i dont know anything besides light python and batch
[22:23:56] *** Quits: gggp__ (~gggp@220-136-145-74.dynamic-ip.hinet.net) (Ping timeout: 250 seconds)
[22:25:11] <GeDaMo> https://nmap.org/
[22:25:12] <bayaz> Title: Nmap: the Network Mapper - Free Security Scanner 
[22:25:50] *** Quits: wedr (~wedr@pool-108-20-128-8.bstnma.fios.verizon.net) (Ping timeout: 244 seconds)
[22:26:11] *** Quits: Hax0r (~Hax0r@46.38.93.176) (Remote host closed the connection)
[22:27:18] <piou> nmap is good
[22:27:37] <piou> few security softwares have stood the test of time as well as nmap
[22:28:23] *** Joins: Hax0r (~Hax0r@46.38.93.176)
[22:28:26] *** Quits: nekodesu (~bit@user/nekobit) (Remote host closed the connection)
[22:28:33] *** Quits: amigojapan (uid86330@id-86330.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:29:08] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[22:29:26] *** Joins: independent_ (~independe@95.144.68.39)
[22:30:08] <Cypris> GeDaMo: if you look at my source it actually is just one script
[22:30:20] <Cypris> i was hopping to add it and put it on the multiple choice function
[22:30:42] <Cypris> i dont think nmap can be added as it would need 2 functions one to install it and one to run it
[22:31:14] *** Joins: orondo (~orondo@user/orondo)
[22:32:04] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[22:34:33] *** Parts: endless (~endlessed@51.81.211.147) (The Lounge - https://thelounge.chat)
[22:36:37] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Ping timeout: 250 seconds)
[22:36:54] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[22:36:54] *** Quits: exvicesindaco (~exvicio@user/exvicesindaco) (Quit: Going offline, see ya! (www.adiirc.com))
[22:37:03] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[22:39:08] *** Joins: gggp__ (~gggp@220-136-145-74.dynamic-ip.hinet.net)
[22:41:58] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:5e6:167:440a:5f89)
[22:42:08] *** Joins: gitgood (~gitgood@80-44-15-155.dynamic.dsl.as9105.com)
[22:43:41] *** Joins: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net)
[22:43:52] <InPhase> Cypris: This is a job for Python, not batch.  See here:  https://pypi.org/project/python3-nmap/
[22:43:52] <bayaz> Title: python3-nmap 
[22:44:08] <Cypris> well yes but i have already made a full tool with batch
[22:44:17] <Cypris> i would cry myself to sleep if i had to restart
[22:44:51] <InPhase> Oh.  Was I supposed to be crying myself to sleep all the times I threw out piles of code and started over with a better approach?  ;)
[22:45:02] <Cypris> 355 lines
[22:45:22] <Cypris> there is 0 chance it will be possible with batch?
[22:45:25] <InPhase> Right, but it's probably 20 lines in Python.
[22:45:45] <Cypris> InPhase: no because there is a bunch of customization 
[22:46:08] <Cypris> https://www.irccloud.com/pastebin/05jsr1Mi/
[22:46:09] <bayaz> Title: Snippet | IRCCloud 
[22:46:12] <Cypris> stuff like this
[22:46:59] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:75d9:8ee9:c723:ca70) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:48:38] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[22:48:44] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[22:48:56] *** Joins: independent_ (~independe@95.144.68.39)
[22:49:17] *** Quits: Drek45 (~jrept371@c-67-187-120-30.hsd1.tn.comcast.net) (Read error: Connection reset by peer)
[22:52:38] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[22:52:56] *** Joins: independent_ (~independe@95.144.68.39)
[22:52:57] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 248 seconds)
[22:54:17] *** Quits: flynn (~mcbloch@user/flynn) (Remote host closed the connection)
[22:54:29] *** Joins: flynn (~mcbloch@user/flynn)
[22:55:14] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:75d9:8ee9:c723:ca70)
[22:55:26] <InPhase> Cypris: https://bpa.st/54EA
[22:55:28] <bayaz> Title: View paste 54EA 
[22:55:37] <InPhase> Cypris: There's a 1:1 mapping for most stuff...
[22:55:41] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[22:55:57] <InPhase> Cypris: But then suddenly you can do the serious stuff more easily.
[22:56:06] <Cypris> oh is there a program that does that?
[22:56:10] <Cypris> i would convert the shit out of it
[22:57:03] <InPhase> I'm saying it's very easy to do by hand.  If you know the Python commands you should finish 355 lines in about 15-30 minutes.  Especially considering most of your lines are repetitions that should just be function called on a list of values.
[22:57:25] <Cypris> i dont know much about python
[22:57:46] <Cypris> print( hello work); tbh
[22:57:57] <InPhase> Then it would be a great opportunity to learn.  :)
[22:58:01] <Cypris> it is
[22:58:36] <Cypris> i suppose i would need a guiding hand would you care to assist?
[22:58:52] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[22:59:02] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-8805-df60-18eb-bff7.inf6.spectrum.com)
[22:59:49] <Cypris> print('''\ ----insert print function''')
[22:59:57] <Cypris> this this will print out similar to echo?
[23:00:17] <InPhase> I'm planning on heading back to do work.  I was simply finishing up my lunch break.  But there is an entire #python channel if you can't find others here to answer questions that might arise.
[23:00:17] <Cypris> how does it know the length of it?
[23:00:44] <Cypris> like in batch i would do mode 60,20
[23:00:51] *** Joins: contagious_meow (~salitos@154.123.208.147)
[23:01:12] <InPhase> The ''' stuff ''' is used for multi-line strings.
[23:01:15] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:f0d6:17ae:4a61:200d) (Quit: Textual IRC Client: www.textualapp.com)
[23:01:36] <InPhase> That \ is not part of the ''', it means "I'm inserting a line break here that is not part of the string.
[23:02:08] <InPhase> That was just a convenience to make the output line up in the source code like it will on the screen, and without doing multiple print statements.
[23:02:18] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-54e9-56c6-4a46-ec1f.inf6.spectrum.com) (Ping timeout: 256 seconds)
[23:02:20] <Cypris> ahh i see
[23:02:31] *** Quits: yamz (~salitos@154.123.142.25) (Read error: Connection reset by peer)
[23:02:41] <InPhase> You could also assign it to a string if you wanted to print it out multiple times, or combined with different things.
[23:03:01] <Cypris> yeah thats what i want
[23:03:12] <Cypris> but the messages are different for the three functions 
[23:03:50] <InPhase> Then you make it a string, or you put it into a function that takes the different messages as an input parameter, and just call those functions.
[23:04:14] *** Joins: plastico (~plastico@neomutt/plastico)
[23:04:37] <InPhase> Python will better assist you in avoiding all this repetition.
[23:08:54] *** Quits: orondo (~orondo@user/orondo) (Quit: leaving)
[23:09:00] <Cypris> ok i will get down to it eventually
[23:09:54] <pyzozord> Cypris: there is #python channel in case you wasn't aware of it
[23:10:39] <Cypris> i joined
[23:10:58] *** Joins: kek_ (~kek_@2a02:120b:2c0a:8640:1f5e:9e3b:b8c9:8451)
[23:13:01] *** Quits: Narrat (~omnius@p200300df5f00d33506ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[23:13:06] <kek_> hi, I'd like to learn what happens when I press a key on my keyboard on windows. I guess I press it, some signal is sent to my motherboard using the USB Protocol or whatever. Then whatever in windows feeds it to the driver and the driver tells the windows core something. What is a good starting point to learn about this?
[23:14:19] *** Joins: rannnn8888 (~rannnn888@bzq-79-183-158-130.red.bezeqint.net)
[23:14:25] <rannnn8888> help in VBA https://wtools.io/paste-code/b6yp
[23:14:26] <bayaz> Title: DSAD text code | WTOOLS 
[23:14:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[23:16:35] *** Quits: varaindemian (uid73404@id-73404.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[23:19:24] *** Quits: kek_ (~kek_@2a02:120b:2c0a:8640:1f5e:9e3b:b8c9:8451) (Remote host closed the connection)
[23:19:42] *** Joins: kek_ (~kek_@2a02:120b:2c0a:8640:1f5e:9e3b:b8c9:8451)
[23:21:19] *** Quits: Telvana (capo@user/telvana) (Quit: ZNC 1.9.x-git-111-f2cdc3db - https://znc.in)
[23:21:22] *** Joins: Drek45 (~jrept371@129.59.122.18)
[23:23:02] *** Joins: Telvana (~capo@user/telvana)
[23:25:56] <webNET4> kek, technically the driver is polling the keyboard. old style keyboards used to use an interrupt to tell the thing to read it but USB is different
[23:26:39] <LjL> and not quite in a good way in this case
[23:27:43] *** Quits: contagious_meow (~salitos@154.123.208.147) (Quit: Leaving)
[23:27:49] <webNET4> behold, https://www.youtube.com/watch?v=wdgULBpRoXk
[23:27:50] <bayaz> Title: How does a USB keyboard work? 
[23:28:56] *** Quits: gggp__ (~gggp@220-136-145-74.dynamic-ip.hinet.net) (Ping timeout: 250 seconds)
[23:29:42] <jinsun_> computerphile also has a video on this https://youtu.be/ewE8b7zzej0
[23:29:43] <bayaz> Title: What Happens When I Press a Key? - Computerphile 
[23:29:54] *** Joins: TheAceOfHearts (~TheAceOfH@24.41.239.76)
[23:30:56] *** Joins: nekodesu (~bit@user/nekobit)
[23:32:19] *** Joins: Cleverness (~clevernes@pool-108-54-152-186.nycmny.fios.verizon.net)
[23:32:20] *** Quits: Leone (~Leo@24.140.234.189) ()
[23:32:37] *** Quits: elnavigator (~elnavigat@105.196.149.83) (Ping timeout: 245 seconds)
[23:34:00] *** Joins: elnavigator (~elnavigat@105.196.149.83)
[23:35:10] *** Quits: xff0x (~xff0x@2001:1a81:5283:ae00:3380:f428:346c:f5a) (Ping timeout: 240 seconds)
[23:36:09] *** Quits: TheAceOfHearts (~TheAceOfH@24.41.239.76) (Quit: So long, and thanks for all the fish!)
[23:39:40] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:39:41] *** Joins: xff0x (~xff0x@2001:1a81:5283:ae00:3380:f428:346c:f5a)
[23:39:51] *** Quits: gitgood (~gitgood@80-44-15-155.dynamic.dsl.as9105.com) (Remote host closed the connection)
[23:40:18] *** Joins: gitgood (~gitgood@80.44.15.155)
[23:40:32] <vin> What is better more core count or higher per core base frequency? For a workloads that isn't compute bound -- reads and writes a lot of data to memory and storage
[23:41:14] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Quit: leaving)
[23:41:14] <webNET4> wow google made less from the play store than they gave apple to be #1 search engine
[23:41:26] <webNET4> vin reads/writes from what?
[23:41:35] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[23:41:52] <vin> webNET4: both from ssd and ram
[23:42:58] <webNET4> from a signle ssd?
[23:43:01] <webNET4> single
[23:43:11] <webNET4> at some point there is going to be an IO bottleneck
[23:44:10] <webNET4> unless you have a really slow system
[23:44:11] *** Joins: federico_it (~textual@151.95.116.125)
[23:44:16] <vin> from an array of ssds 
[23:45:01] <webNET4> i guess it all depends on the OS
[23:46:20] <webNET4> if it's all nonblocking then multicore might not help much
[23:48:22] *** Quits: Samian (~Sami@2620:10d:c091:480::1:2d50) (Quit: Textual IRC Client: www.textualapp.com)
[23:48:40] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 252 seconds)
[23:49:45] *** Joins: Arithmoquine (~ct@193.32.127.230)
[23:51:20] *** Joins: Mach (~mach@2a02:2f09:d303:5d00::738)
[23:51:57] *** Joins: pavonia (~user@user/siracusa)
[23:52:20] *** Quits: LiftLeft (~LiftLeft@172.83.47.28) (Ping timeout: 250 seconds)
[23:53:06] *** Joins: rustyshackleford (uid236774@id-236774.helmsley.irccloud.com)
[23:53:23] *** Joins: blahboybaz (~blahboyba@67-5-101-245.spok.qwest.net)
[23:54:57] *** Joins: notABoxer (~BitsNByte@ip59-131-15-186.ct.co.cr)
[23:56:05] <blahboybaz> I've spend days just not doing anything because I'm just completely fucking overwheled at how to approach the problem - it's kind of sickening
[23:56:52] *** Joins: soapsudsxx (~soapsudsx@141.193.188.154)
[23:57:58] *** Quits: BitsNBytes (~BitsNByte@ip59-131-15-186.ct.co.cr) (Ping timeout: 250 seconds)
[23:59:01] <GeDaMo> What's the problem?
[23:59:13] *** Joins: Lynn (~Lyn@user/law)
[23:59:35] *** Joins: twomoon (~twomoon@ip72-199-58-150.sd.sd.cox.net)
