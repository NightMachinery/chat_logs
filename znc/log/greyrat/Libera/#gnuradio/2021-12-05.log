[00:00:12] *** Joins: Al2O3 (~Al2O3@user/al2o3)
[00:00:21] <Guest36> so, in theory, I could just switch it to impulse setting and see what it does?
[00:01:17] <Yamakaja[m]> I was referring to the "Need to check how good this is at some point" part
[00:01:57] <patchvonbraun[m]> No. If you do, there’ll be a rip in the fabric of space itself from which civilization itself will never recover.
[00:02:02] <Guest36> i see it and the C++ afterwards, i assume this is enabled
[00:02:56] <Guest36> a rip in the fabric of spacetime might be a good idea
[00:05:15] <Yamakaja[m]> Guest36: Btw, may i ask *why* you were originally approaching this problem? Are you a HAM and trying to improve your signal? 
[00:05:38] <Guest36> I am not. I am not going to say why. I simply am going to do it.
[00:06:30] <Yamakaja[m]> Okay ... 
[00:08:50] <Guest36> As for what I am trying to do, I am trying to do exactly what I initially described
[00:09:00] <Guest36> nothing more and nothing less
[00:10:00] <Guest36> which is to use gnu radio to take a somewhat clean radio sample in the shortwave spectrum, add synthesized distortion and noise to it, and train a neural network to attempt to remove it and reconstitute the source, using a variety of state of the art methods currently described in the academic literature. No need to consider alternative solutions
[00:10:00] <Guest36> to an underlying problem, there is none.
[00:11:55] <Yamakaja[m]> That sounds like you already have a solution in mind to a problem you don't fully understand
[00:12:20] <Guest36> Does it cost you anything at all to let me color outside the lines?
[00:12:33] <willcode4[m]> Easiest way to do this would be to generate a file (e.g., using numpy) that has the desired noise in it. Then use that as a File Source and Add it to the good signal. The Impulse option in the Noise Source is a fairly specific model. And I didn't get it to work in a 10-sec try.
[00:13:29] <Guest36> That's what Im going to try to do, I generated a file, eg, using nch tone generator, but if i cant make it go i'll be loading up on numpy documentaries next, and use it as the source for the impulse signal
[00:13:42] <willcode4[m]> You can also use that audio source you talked about. The file makes it repeatable.
[00:14:08] <Guest36> it wont be as dynamically varying as I would like in the time domain, but i'll fade it in and that will hopefully soften it down
[00:24:53] <patchvonbraun[m]> An impulse noise generator with parameters to govern its statistics could likely be constructed in an embedded Python block within an hour or so, by someone suitably knowledgable. But I get the impression that you (metaphorically) have bought a hammer, and expect to be able to fling it vaguely towards a load of dimensional lumber, and your dream home will appear as if by magic.  "Some assembly required".
[00:26:32] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[00:30:02] <Guest36> that someone suitably knowledgable, it is hinted,  is you, and it is suggested by this that you are better than me?
[00:30:26] <patchvonbraun[m]> I'm making no such assertion.  
[00:30:33] <Guest36> then why even make it
[00:30:56] <Guest36> if i'm not suitably knowledgable, and i know my limitations, then I am doing the right thing by avoiding the method which exceeds my ability and budget
[00:31:35] <patchvonbraun[m]> Don't be a dick.   I was just suggesting that if the built-in noise generators in GR aren't what you want, it shouldn't be that hard to make one that are what you want--either by you or someone else.  Turn your prickly control down 10dB there buddy.
[00:32:21] <patchvonbraun[m]> ANyway, I must go follow my impulse to eat, which is necessarily preceded by an impulse to buy the things that I need to eat.
[00:33:12] <Guest36> Well, perhaps you will write one someday, right after you finish those papers you were writing
[00:34:09] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 256 seconds)
[00:36:46] <Yamakaja[m]> Guest36: For context, you're in a room full of EEs without (much) EE knowledge yourself, and are surprised there may be people more knowledgeable in that area than you?
[00:38:08] <Yamakaja[m]> You clearly know your NNs, but why attempt to frontier noise removal techniques without the appropriate signal theory background?
[00:38:49] <Guest36> I am not surprised that others might be more knowledgeable. I am, however, optimistic that in my ignorance one or more of them might feel moved to do something exceptional in the spirit of great men making great things seem as common, and solve what is, apparently, to them, a simple task, so that for me, and many others who might follow me, it is
[00:38:49] <Guest36> available, just as eric blossom might have done.
[00:39:29] <Guest36> I am sure that a theoretical background might help me understand noise removal techniques better, but it does not help the neural network understand noise removal better.
[00:39:34] <Guest36> Autoencoders are selftrained.
[00:41:26] *** Joins: Macuser (~Macuser@216.30.159.201)
[00:44:28] <Yamakaja[m]> But knowledge of signal theory would allow you to better judge what is wasted effort, and what is a reasonable approach to pursue. For example, if you're just interested in voice, why would you try to correct this in the RF domain, when your features are much more accessible in the demodulated audio stream?
[00:45:06] <Guest36> The pre-demodulation RF domain may contain information quanta that is useful to the neural network for reasons I would not be able to prove without having done it.
[00:45:45] <Guest36> Secondly, voice noise correction techniques abound, but when applied to voice streams sampled from RF domain input, tend to fail, I believe this is because they cannot get the bigger picture
[00:47:42] <Guest36> For example, IQ samples, and SDR radio, utilizes a baseband or a carrier frequency which is modulated, due to imperfections in hardware, signal fading, etc, the consistency of the reference and of the audio is not equal to an audio recording in terms of the stationary offset of the desired spectral qualities. RNNoise, for example, a mozilla
[00:47:42] <Guest36> designed noise removing program, completely fails when presenting a slightly frequency shifted input.
[00:48:03] <Guest36> You are still trying to get me to color inside the lines
[01:02:48] <jholtom> But you don't know why they fail
[01:03:22] <Guest36> dont care, not trying to solve the problem of their failure
[01:03:39] <jholtom> But then how are you to resolve it?
[01:03:52] <jholtom> You're ignoring the root of the problem to throw some uninformed learner at it
[01:04:32] <jholtom> You can build a better network and solution by understanding the underlying theory well
[01:05:57] <Guest36> I feel like you, too, are trying to get me to color inside the lines, good friend, and while I thank you for your wisdom, I must insist that while we share the crayons, the paper is mine.
[01:06:24] <jholtom> Guest36: I'm happy to help you color outside the lines
[01:06:58] <Guest36> Picasso didn't become famous for studying impressionism, after all
[01:07:01] <jholtom> I understand what you're thinking, but I have a background in both signal theory and machine learning and i know there is a blend requird here to build a successful solution
[01:08:51] <Guest36> The successful solution can one-shot process 50ms samples into a 150ms forwards and backwards looking buffer and temporally, spacially autoencode the central 50ms frame to a desired result.
[01:10:44] <Yamakaja[m]> The successful solution?
[01:10:49] <Guest36> enough rounds of training, and the correct network design, and you have a useful tool that can not only denoise but control for fading and a variety of other issues, but it entails state of the art approaches to skip connections and resnets in order to ensure that feature learning can learn to extract features from RF input without overfitting,
[01:10:50] <Guest36> which will also require a lot of samples. I am thinking 10gb of sample data in 32khz rectified spectrum at random frequencies from mediumwave through HF.
[01:11:58] <Guest36> If the simulated input can be distinguished from real noise by the network, then we have a problem because the network has learned the simulator, but that is the only real issue I see
[01:12:37] <Guest36> the theory behind RNN and voice networks, additionally, is not the approach I am going for, I am going for a convolutional autoencoder and that is not the path the mozilla foundation took
[01:13:13] <Guest36> their work entails essentially a neural equalizer with a series of bands that remove noise by spectral analysis, and this does not work for shifting inputs where the network cannot expect the band to remain constant
[01:13:32] <willcode4[m]> Let's concentrate here on what GR can do to help you do your research. We're probably not going to come to any conclusion on whether it's possible here.
[01:13:36] <Guest36> correct
[01:14:34] <Guest36> right now all I needed and all I am working on is impulse noise import into GR. I am also working on export/import from GR in chunks which is its own challenge, but I will work on that independently as it is not a feature of GR
[01:17:09] <willcode4[m]> There is probably good support for your experiment. But you could also do all the research with Python ML tools and Numpy. I'd try to get the math to work, then put it into the framework after you're convinced that part is done.
[01:21:46] * patchvonbraun[m] walks into a thoracic surgical theatre, armed with a blistering-good knowledge of bicycle repair.  "Now, if someone can point me to the thorax, we'll get started...."   :) :) :)
[01:21:56] <Guest36> I'll be doing plenty of this with keras and tensorflow on the neural network end. Getting the math to work for generating samples is indeed my first step
[01:24:46] <patchvonbraun[m]> Guest36: Nearly everyone here has "given til it hurts" in the context of writing code for and mentoring people who have wandered into the GR space, almost by mistake.   The thing about altruism is that it cannot be a forced thing...
[01:25:50] <Hoernchen> we just need someone demanding a hyperspanner now and we've completed a full episode of star trek...
[01:26:06] <Yamakaja[m]> A what?! 😂
[01:26:22] <Guest36> It's a feature, not a bug
[01:27:05] <patchvonbraun[m]> I need a sonic screwdriver by Ep 37, or we're all dead Jim.
[01:27:21] <willcode4[m]> Actually it was the sending on all frequencies through subspace that always made me a little unsure of the science behind star trek. Otherwise, it seem realistic to me.
[01:28:12] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:b331:790b:61d1:8263)
[01:29:01] <patchvonbraun[m]> https://en.wikipedia.org/wiki/Ultraviolet_catastrophe
[01:36:58] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:b331:790b:61d1:8263) (Quit: uros)
[01:38:13] <Hash[m]> <willcode4[m]> "Actually it was the sending on..." <- I dunno, that sending on all frequencies thing kind of worked out for me :)
[01:43:31] <Jacob[m]123> Lol
[01:46:30] <patchvonbraun[m]> I sometimes send on all frequencies when I eat cheap Mexican food...
[01:47:49] <Hash[m]> Jamming the sense of smell for other occupants
[01:47:49] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:b331:790b:61d1:8263)
[01:47:51] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:b331:790b:61d1:8263) (Client Quit)
[01:48:31] <Hoernchen> nature does it too, it calls it lightning and it looks pretty as well
[01:51:35] <Guest36> how it do that thou
[01:52:00] <patchvonbraun[m]> Hoernchen: Lightning falls off rapidly above a few hundred MHz....
[01:52:15] <Hoernchen> only if you're not sensistive enough.
[01:52:21] <Guest36> That depends, of course, how far away you are from it.
[01:52:38] <Guest36> If you are standing directly in the path of the lightning, it never seems to drop off at a-
[01:53:23] <patchvonbraun[m]> Hoernchen: I"m a sensitive, new-age guy, whatchyou talkin 'bout?
[01:53:23] <patchvonbraun[m]> :)
[01:58:05] *** Quits: IanW_ (~IceChat9@arcanum.force9.co.uk) (Ping timeout: 256 seconds)
[01:58:52] *** Joins: IanW_ (~IceChat9@arcanum.force9.co.uk)
[02:01:33] <muaddib[m]> <Hash[m]> "I dunno, that sending on all..." <- When I worked in broadcast TV production I made friends with some of the writers. One of the guys I became friends with wrote a few episodes for Next Generation. He wrote the episode where they send coded messages through screens to reverse the brainwashing effect of a game the crew became addicted to. 
[02:02:42] <patchvonbraun[m]> Weirdly enough, the name of that game was "Facebook" :)
[02:04:17] <muaddib[m]> Hahahah
[02:04:31] <muaddib[m]> There was a lot of subtext in STNE
[02:04:47] <muaddib[m]> almost to the point where it wasn’t ‘sub’
[02:05:07] <Hash[m]> That’s awesome
[02:07:47] *** Joins: http007 (~Guest7@2603:9008:1f00:4400:d8fe:6d36:352e:1737)
[02:08:47] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[02:26:35] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[02:29:16] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:29:42] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Client Quit)
[02:29:57] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:31:57] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[02:33:41] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:36:27] <muaddib[m]> New GNURadio tutorial added to the wiki. 
[02:36:27] <muaddib[m]> “Remote Control and Automation of Flowgraphs with XMLRPC”
[02:36:28] <muaddib[m]> https://wiki.gnuradio.org/index.php/Tutorials#GNU_Radio_Academy
[02:45:56] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[02:48:02] *** Joins: incog (~ayy@pool-108-46-169-14.nycmny.fios.verizon.net)
[02:52:18] *** Quits: jemius (~jemius@p200300d9672a4200a4f09f5277d1bf70.dip0.t-ipconnect.de) (Quit: Leaving)
[03:19:47] *** Quits: IanW_ (~IceChat9@arcanum.force9.co.uk) (Quit: Bye)
[03:24:43] *** Quits: incog (~ayy@pool-108-46-169-14.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[03:36:23] <willcode4[m]> Nice, very complete!
[03:43:56] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[03:48:13] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:fc07:3c20:3dfd:bf9f) (Remote host closed the connection)
[03:48:20] *** Quits: Alexer- (~alexer@85.17.122.98) (Quit: *sniff* *sniff* it smells like burnt electronics in here...)
[03:48:42] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:fc07:3c20:3dfd:bf9f)
[03:49:21] <muaddib[m]> <willcode4[m]> "Nice, very complete!" <- Thanks!
[03:53:56] *** Joins: Alexer (~alexer@85.17.122.98)
[04:09:18] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:30:33] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[04:43:10] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[05:04:31] <Guest36>   I used a wav file, a hilbert transform to import it, and a number of other steps, but im getting there
[05:04:35] <Guest36> I now have impulse noise
[05:36:56] *** Joins: wizardyesterday (~chris@user/wizardyesterday)
[05:45:45] *** Joins: incog (~ayy@pool-108-46-169-14.nycmny.fios.verizon.net)
[05:51:29] *** Quits: incog (~ayy@pool-108-46-169-14.nycmny.fios.verizon.net) (Ping timeout: 256 seconds)
[05:57:44] *** Joins: incog (~ayy@pool-108-46-169-14.nycmny.fios.verizon.net)
[06:02:45] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:05:33] *** Quits: incog (~ayy@pool-108-46-169-14.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[06:06:28] *** Quits: Hoernchen (~hornulus@osmocom/hoernchen) (Read error: Connection reset by peer)
[06:06:47] *** Joins: Hoernchen (~hornulus@osmocom/hoernchen)
[06:14:16] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[06:14:39] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[06:15:12] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[06:15:27] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[06:46:31] *** Quits: Hoernchen (~hornulus@osmocom/hoernchen) (Ping timeout: 256 seconds)
[06:47:49] *** Joins: Macuser (~Macuser@216.30.159.201)
[06:58:28] *** Joins: Hoernchen (~hornulus@osmocom/hoernchen)
[07:33:14] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[07:43:49] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:45:04] *** Joins: Vonter (~Vonter@user/vonter)
[08:25:17] *** Parts: wizardyesterday (~chris@user/wizardyesterday) ()
[09:24:36] *** Quits: Guest36 (~Guest36@64.224.81.27) (Quit: Client closed)
[10:17:17] *** Quits: foz (mt@gateway/vpn/protonvpn/deliriousgeorge) (Quit: Konversation terminated!)
[11:01:15] *** Joins: Macuser (~Macuser@216.30.159.201)
[11:01:57] *** Quits: Macuser (~Macuser@216.30.159.201) (Client Quit)
[11:04:29] *** Quits: http007 (~Guest7@2603:9008:1f00:4400:d8fe:6d36:352e:1737) (Quit: Client closed)
[11:14:48] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[11:19:01] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[11:22:11] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[11:45:38] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 252 seconds)
[12:13:14] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[12:30:13] *** Quits: alimj[m] (~alimjmatr@2001:470:69fc:105::2d98) (Quit: You have been kicked for being idle)
[12:30:13] *** Quits: lfa[m] (~lfilipeaz@2001:470:69fc:105::1:2b4e) (Quit: You have been kicked for being idle)
[12:53:20] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:1044:446b:4199:c370)
[13:06:36] *** Quits: yesno (~yesno@109.98.151.179) (Quit: Leaving)
[13:16:43] *** Joins: IanW_ (~IceChat9@arcanum.force9.co.uk)
[13:19:23] *** Quits: IanW_ (~IceChat9@arcanum.force9.co.uk) (Client Quit)
[13:20:42] *** Joins: IanW_ (~IceChat9@arcanum.force9.co.uk)
[13:20:56] *** Quits: IanW_ (~IceChat9@arcanum.force9.co.uk) (Client Quit)
[13:23:17] *** Joins: IanW_ (~IceChat9@arcanum.force9.co.uk)
[13:39:02] *** Joins: Macuser (~Macuser@216.30.159.201)
[13:39:33] *** Quits: Macuser (~Macuser@216.30.159.201) (Client Quit)
[13:53:28] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:1044:446b:4199:c370) (Quit: uros)
[14:23:47] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[14:30:53] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[14:31:45] *** Joins: jemius (~jemius@p200300d9673a3000b37ed3949e8ddfa7.dip0.t-ipconnect.de)
[15:15:55] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:fc07:3c20:3dfd:bf9f) (Read error: Connection reset by peer)
[15:16:03] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:b9f3:641d:b0ab:48c0) (Read error: Connection reset by peer)
[15:22:15] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:1044:446b:4199:c370)
[15:27:35] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Quit: ZzzZ)
[16:11:07] *** Quits: jemius (~jemius@p200300d9673a3000b37ed3949e8ddfa7.dip0.t-ipconnect.de) (Quit: Leaving)
[16:41:18] *** Joins: yesno (~yesno@109.98.151.179)
[16:56:15] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:32:01] <Yamakaja[m]> Random thought: How do you intercept MIMO communication? I mean something like full on 4x4 SVD'd into three/four spatial streams ... 
[17:32:35] <funkylab[m]> ha, yesterday you mentioned information theory bounds, today you hit them ;)
[17:32:53] <Yamakaja[m]> Ouch :D
[17:33:18] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[17:33:18] <funkylab[m]> just like the indended receiver, you need a MIMO channel estimate
[17:33:53] <Yamakaja[m]> But without cooperation of the sender
[17:33:59] <funkylab[m]> and it depends on the type of MIMO the transmitter does on whether you only need your own receiver and TX, or you need to estimate the MIMO channel between the intended receiver and TX
[17:34:44] <funkylab[m]> For example, Alamouti: The TX-side MIMO scheme is indifferent to the actual channel matrix, so on average it's as easy for you as for the intended receiver to decode
[17:35:28] <funkylab[m]> but with precoding, where Alice and Bob communicate their channel knowledge, and then Alice uses that knowledge to precode, you need to estimate their channel estimate
[17:35:49] <funkylab[m]> and the hardness of that is where physical layer security in MIMO systems comes from :)
[17:36:42] <Yamakaja[m]> Yeah, i was thinking of the latter. I wasn't aware physical layer security using MIMO is a thing, but i suppose i understand why :D
[17:36:54] <Yamakaja[m]> * understand why it is :D
[17:37:53] <funkylab[m]> ah frankly, as of now, I'm not aware of any commercial system that does PLS, because you'd always do cryptography on the bitstream, anyway, but it's not the newest of all research fields :)
[17:39:09] <funkylab[m]> But think about this: antenna MIMO on TX can (and does) lead to radiation patterns with main beams (which then happen to point into a "good" path to RX) 
[17:39:21] <funkylab[m]> but these patterns do also enforce nulls in other directions
[17:40:47] <funkylab[m]> if your Eve is in one of these nulls (if they actually happened ever to be perfect nulls, which is only approximately possible for non-infinitesimally sized eavesdropper antennas), then mutual information between Alice and Eve is zero 
[17:41:38] <funkylab[m]> but that's not *that* likely to happen, instead you just get lower I(alice;eve) <= I(alice;bob)
[17:42:00] <funkylab[m]> that difference in mutual information is in the end the secrecy bob and alice have
[17:42:39] <Yamakaja[m]> I see, thanks!
[17:43:27] *** Quits: arch3r (~ben@185.66.194.78) (Read error: Connection reset by peer)
[17:45:45] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:1044:446b:4199:c370) (Quit: uros)
[17:45:51] *** Joins: arch3r (~ben@185.66.194.79)
[17:45:59] *** Joins: uros (~Thunderbi@bl5-152-18.dsl.telepac.pt)
[17:48:45] *** Joins: uros1 (~Thunderbi@2001:8a0:6074:ad00:1044:446b:4199:c370)
[17:50:35] *** Quits: uros (~Thunderbi@bl5-152-18.dsl.telepac.pt) (Ping timeout: 256 seconds)
[17:50:35] *** uros1 is now known as uros
[18:10:06] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[18:37:29] <BarryDuggan[m]> In an Embedded Python block, I can send a PDU with the following construct:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/ae63a8fd0071fcb928208a336d9b4ab18ab06e6e)
[18:39:57] *** Joins: Macuser (~Macuser@216.30.159.201)
[18:59:46] *** Joins: DaNeenjah (~jake@adsl-74-230-6-137.hsv.bellsouth.net)
[19:23:46] <willcode4[m]> Barry Duggan:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/02d5d9ddc9519007b5554ca7e851b05199de0aac)
[19:25:00] <willcode4[m]> The `tobytes()` method you're using above should work to create `msgbytes`.
[19:27:44] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[19:28:13] <willcode4[m]> There was some talk a while ago about adding client/server mode to all zmq blocks. That would help here, since it would make sense for the python script to be a client. Works anyway.
[19:28:33] *** Quits: Al2O3 (~Al2O3@user/al2o3) (Ping timeout: 252 seconds)
[19:30:07] *** Quits: M0corrina[m] (~M0corrina@2001:470:69fc:105::1:2c43) (Quit: You have been kicked for being idle)
[19:42:51] *** Quits: Malvolio (~Malvolio@user/malvolio) (Ping timeout: 256 seconds)
[19:56:32] *** Joins: Malvolio (~Malvolio@user/malvolio)
[20:18:03] *** Joins: Al2O3 (~Al2O3@user/al2o3)
[20:29:00] *** Joins: wizardyesterday (~chris@user/wizardyesterday)
[20:29:52] *** Quits: DiffieHellman (~Username@user/curve25519chacha) (Remote host closed the connection)
[20:30:35] *** Joins: DiffieHellman (~Username@user/curve25519chacha)
[20:34:41] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:1044:446b:4199:c370) (Read error: Connection reset by peer)
[20:34:52] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:bac6:7b95:478f:3d1c)
[20:35:37] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:bac6:7b95:478f:3d1c) (Client Quit)
[20:35:45] *** Joins: uros (~Thunderbi@bl5-152-18.dsl.telepac.pt)
[20:39:39] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:302f:f3db:d6a5:3714)
[20:40:46] *** Joins: bandnyquist (~Rheanna@123.158.85.29)
[20:42:01] *** Quits: uros (~Thunderbi@bl5-152-18.dsl.telepac.pt) (Quit: uros)
[21:21:02] *** Quits: DiffieHellman (~Username@user/curve25519chacha) (Remote host closed the connection)
[21:22:29] *** Quits: electrolytic (~electroly@gateway/tor-sasl/electrolytic) (Remote host closed the connection)
[21:22:41] *** Joins: DiffieHellman (~Username@user/curve25519chacha)
[21:35:33] *** Quits: Vonter (~Vonter@user/vonter) (Ping timeout: 256 seconds)
[21:49:06] *** Quits: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[21:52:40] *** Joins: voltron (~voltrin_@ip4d16bdc6.dynamic.kabel-deutschland.de)
[21:56:58] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[21:57:00] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[21:57:13] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[22:08:43] *** Quits: DiffieHellman (~Username@user/curve25519chacha) (Remote host closed the connection)
[22:09:09] *** Joins: DiffieHellman (~Username@user/curve25519chacha)
[22:19:57] *** Parts: wizardyesterday (~chris@user/wizardyesterday) ()
[22:21:29] *** Joins: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net)
[22:41:12] *** Joins: hgkjhgkjgkj (~hjgkjhgkj@46.235.96.249)
[22:44:26] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Ping timeout: 256 seconds)
[22:45:42] *** Quits: DaNeenjah (~jake@adsl-74-230-6-137.hsv.bellsouth.net) (Quit: WeeChat 3.3)
[22:48:19] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:1044:446b:4199:c370)
[22:48:58] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:1044:446b:4199:c370) (Client Quit)
[22:59:57] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:1044:446b:4199:c370)
[22:59:57] *** Quits: hgkjhgkjgkj (~hjgkjhgkj@46.235.96.249) (Read error: Connection reset by peer)
[23:00:20] *** Joins: hgkjhgkjgkj (~hjgkjhgkj@46.235.96.249)
[23:04:14] <BarryDuggan[m]> Thanks!
[23:13:53] <muaddib[m]> With respect to how GNURadio has implemented ZMQ What’s the function of... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/42be1a95d3329997ebeab9e4471034342c042420)
[23:14:11] <muaddib[m]> Oops, backticks don’t track on mobile
[23:14:32] <muaddib[m]> * With respect to how GNURadio has implemented ZMQ What’s the function of 
[23:14:32] <muaddib[m]> ipc://
[23:14:32] <muaddib[m]> versus
[23:14:32] <muaddib[m]> tcp://
[23:15:27] <funkylab[m]> different transports
[23:15:49] <funkylab[m]> the first is inter-process comms, the latter is over TCP, and only that works through network
[23:16:14] <funkylab[m]> muaddib:  for more information on the IPC transport: http://api.zeromq.org/2-1:zmq-ipc
[23:42:21] *** Joins: uros1 (~Thunderbi@2001:8a0:6074:ad00:a00e:309b:b12e:f95a)
[23:42:37] *** Quits: uros1 (~Thunderbi@2001:8a0:6074:ad00:a00e:309b:b12e:f95a) (Client Quit)
