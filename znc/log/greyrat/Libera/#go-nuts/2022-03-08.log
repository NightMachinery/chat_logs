[00:09:17] *** Joins: tofran5 (~tofran@bl15-47-228.dsl.telepac.pt)
[00:14:56] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 245 seconds)
[00:16:23] *** Joins: absc (~absc@81.31.144.28)
[00:19:34] *** Joins: treeford (~charleste@user/treeford)
[00:20:20] *** Joins: moog_ (~moog@107.126.53.115)
[00:20:32] *** Quits: moog (~moog@107.126.53.115) (Ping timeout: 240 seconds)
[00:20:39] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 256 seconds)
[00:21:03] *** Quits: nmollerup (~nmollerup@customer-2a00-7660-1612-0168-bc3c-c504-f41c-b7e6.ip6.gigabit.dk) (Remote host closed the connection)
[00:21:22] *** Joins: nmollerup (~nmollerup@2a00:7660:1612:168:f424:63c2:936c:f5fa)
[00:21:51] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[00:30:32] <Mathisen> would you go people say this is good enough this is the assignment im doing > https://github.com/01-edu/public/blob/master/subjects/printcombn/README.md and this is my solusion for it > https://go.dev/play/p/aDnCMSFQNLm  i know i still need to add that the programs stops when it have printed 123456789. but otherwise i feel it is ok. it does say in the assingment that i need to "Be mindful of your program efficiency to avoid timeouts."
[00:30:32] <Mathisen> and that is the part im asking about here. is it efficiency enough
[00:30:52] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[00:31:55] <Mathisen> it takes some time for the program to finnish when passing the 9 to the function
[00:32:37] <b0nn> Hm, someone was asking about this the other day; was it you?
[00:32:50] <Mathisen> nope i just did it today
[00:32:57] <Mathisen> maybe more people doing this
[00:34:40] <b0nn> possibly, if it's a course or something
[00:34:45] <Mathisen> it is
[00:34:52] <Mathisen> https://gritlab.ax/
[00:35:08] <Mathisen> but the same course is used in many contries
[00:35:34] *** Joins: ricci (~ricci@31.187.110.131)
[00:35:39] <b0nn> So, the first thing is, the readme says to avoid timeouts, and your code times out
[00:35:52] <Mathisen> it does ?
[00:35:54] *** Quits: dr0n (~nabromov@176.26.119.61) (Quit: WeeChat 3.3)
[00:36:28] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:36:35] <Mathisen> the prints takes some time on bigger numbers but i did not think it times out
[00:36:47] <b0nn> yeah - I get a timeout running program when I put a println("") after each PrintCombN call (I wanted to see the output for each call)
[00:37:30] <Mathisen> hmmm so i need to rethink the hole thing then....
[00:37:53] <Mathisen> i thought using just 2 for loops would make it kinda efficent
[00:37:57] <b0nn> heh, welcome to programming
[00:38:11] <b0nn> but there are parts you can use for your next attempt
[00:38:50] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[00:38:50] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[00:39:11] *** Quits: MrWiggly (~textual@62.6.56.226) (Quit: Textual IRC Client: www.textualapp.com)
[00:39:30] <Mathisen> yeah i guess so. my next try will be using pointers then. but need to think how i want to do it.
[00:39:40] <Mathisen> and im still learning
[00:39:47] <Mathisen> anyway thanks for the unput
[00:39:49] <Mathisen> input*
[00:41:31] <b0nn> That conversion from string to int is costing you a lot
[00:41:46] <b0nn> and you don't need to do it
[00:41:57] <b0nn> because they are n and n-1
[00:42:19] <Mathisen> but how would i compair the numbers without doing that ? i need a way to check that the number to the right is always bigger
[00:42:37] *** Joins: rogersm (~rogersm@90.166.180.250)
[00:42:44] <b0nn> which are ints, so you are currently saying I have an n, give me the string at foo[n], which is the string representation of n, then convert it back to an int
[00:42:57] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[00:43:12] *** Joins: nattiestnate (~nate@202.138.250.10)
[00:43:52] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[00:43:59] <b0nn> I'm still getting a timeout, but https://go.dev/play/p/Fg2kcxcoevi
[00:44:13] <Mathisen> yeah i do that so i can compair string[1] > string[0] i cant think of any other way to check that
[00:44:27] <b0nn> oh
[00:44:40] <b0nn> caffeine isn't kicking in yet :\
[00:46:06] <b0nn> The last person that asked only asked about 3 wide sting
[00:46:08] <b0nn> string
[00:46:15] <Mathisen> yeah that was me :)
[00:46:22] <Mathisen> and that was a diffrent assignment
[00:46:32] <Mathisen> way easyer then this one
[00:46:56] <b0nn> and I just looped over the leftmost, then the next val I looped from whatever the leftmost was +1 to the end, and then the next one +1 to that
[00:47:54] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[00:48:30] <Mathisen> yeah but using that approch with 999999999 is kinda tricky atleast i thought so when i started with this
[00:48:45] *** Joins: epony (epony@user/epony)
[00:48:45] <Mathisen> and the same program should work with 99
[00:49:03] <pyzozord> is strings.Join more efficient than str += "other str"
[00:49:16] <pyzozord> the docs doesn't mention this but the GOPL books does
[00:50:06] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[00:50:38] <b0nn> strings.Join https://cs.opensource.google/go/go/+/refs/tags/go1.17.8:src/strings/strings.go;l=421
[00:51:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Read error: Connection reset by peer)
[00:51:54] <b0nn> buiklder is a slice of bytes )and an address) which is cheaper to frow than strings because string immutability and allocation costs
[00:52:16] <b0nn> essentially, each time you call string += string you are creating a new string
[00:52:36] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 240 seconds)
[00:52:38] <b0nn> but with []byte, it's a slice growth when you add to it
[00:54:46] <pyzozord> the function definition says it will return string type
[00:55:07] <pyzozord> it seems to me that it constructs a new string anyway, what am I missing?
[00:56:01] <b0nn> when you += each += is a new string
[00:56:12] *** Joins: masoudd (~masoudd@user/masoudd)
[00:56:30] <pyzozord> oh so Join is faster but only for more than 2 elements
[00:56:53] <b0nn> when you grow bytes it's an append to a slice (at the end of the function they convert the completed []byte to a string which is 1 new allocation
[00:56:57] <b0nn> yes
[00:57:27] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810)
[00:57:34] <pyzozord> ok, docs don't say it at all, I'm worried how many other things like this I might miss out
[00:58:25] <Mathisen> im totaly new to do this. but is not strings.Join just mor logical with multiple strings instead of + + + + +..... anyway
[00:58:35] <Mathisen> so maybe dont listen to me... but just a thought
[00:58:41] <b0nn> iot's like everything - the more you stare at the petri dish, the more you understand why some things are
[01:04:32] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 240 seconds)
[01:07:22] *** Quits: absc (~absc@81.31.144.28) (Quit: Leaving)
[01:09:01] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[01:09:19] <pyzozord> how is Println able to print Âµs for Time type?
[01:10:35] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[01:13:20] <pyzozord> where can I find a list of all useful interfaces like Formatter
[01:13:22] *** Quits: nattiestnate (~nate@202.138.250.10) (Quit: WeeChat 3.4)
[01:14:53] <fizzie> I doubt there's a list of "all useful interfaces" anywhere, but there's a good list of how the fmt package formats a thing in the docs of that package, listing the steps (and order) that it goes through. Under https://pkg.go.dev/fmt the bit that goes: "-- special formatting considerations apply for operands that implement certain interfaces. In order of application: --".
[01:14:55] <b0nn> hmm, someone made a thing you might like https://sweetohm.net/article/go-interfaces.en.html
[01:15:56] <pyzozord> fizzie: yes I just read through that doc, that's how I found out about Formatter
[01:16:20] *** Quits: nmollerup (~nmollerup@2a00:7660:1612:168:f424:63c2:936c:f5fa) (Quit: Leaving)
[01:16:34] <pyzozord> b0nn: nice! thanks
[01:17:39] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[01:17:43] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:19:14] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Read error: Connection reset by peer)
[01:19:43] *** Quits: tane (~tane@user/tane) (Quit: Leaving)
[01:19:58] <b0nn> heh, I didn't know it existed before you asked that question, and now I'm pleased you did :)
[01:20:32] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[01:21:17] *** Joins: bindu (~bindu@user/bindu)
[01:22:43] *** Quits: synfinatic (~synfinati@mail.synfin.net) (Quit: Goodbye cruel world!)
[01:25:12] *** Joins: synfinatic (~synfinati@mail.synfin.net)
[01:25:49] *** Quits: rogersm (~rogersm@90.166.180.250) (Quit: Leaving...)
[01:29:38] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[01:32:58] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 260 seconds)
[01:36:36] *** Quits: beholders_eye (~weechat@2804:7f3:591:15a4:aab6:771e:7688:86a1) (Read error: Connection reset by peer)
[01:38:12] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[01:38:16] *** Quits: moog_ (~moog@107.126.53.115) (Ping timeout: 256 seconds)
[01:38:16] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 256 seconds)
[01:39:29] *** Joins: llorllale (~llorllale@198.98.119.85)
[01:40:40] <Kyros> Oh I just found this and its really good for sorting filenames in a way that is familiar https://pkg.go.dev/golang.org/x/text/collate
[01:41:42] *** Quits: k8yun (~k8yun@user/k8yun) (Quit: Leaving)
[01:43:13] <Kyros> that kind of made my day that it even worked on the first try
[01:50:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Read error: Connection reset by peer)
[01:50:57] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:00:21] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[02:00:46] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 245 seconds)
[02:02:13] *** Joins: wnd (wnd@extirc.katei.fi)
[02:03:29] *** Joins: beholders_eye (~weechat@2804:7f3:591:15a4:aab6:771e:7688:86a1)
[02:06:32] *** Joins: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx)
[02:06:44] *** Quits: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx) (Remote host closed the connection)
[02:07:02] *** Joins: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx)
[02:18:12] *** Joins: moog (~moog@mobile-166-173-186-85.mycingular.net)
[02:22:16] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[02:23:57] *** Joins: daemonises (uid545329@id-545329.uxbridge.irccloud.com)
[02:24:17] *** Quits: dalek_caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Quit: dalek_caan)
[02:25:19] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[02:25:52] *** Quits: moog (~moog@mobile-166-173-186-85.mycingular.net) (Ping timeout: 268 seconds)
[02:31:32] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Read error: Connection reset by peer)
[02:33:06] *** Quits: beholders_eye (~weechat@2804:7f3:591:15a4:aab6:771e:7688:86a1) (Read error: Connection reset by peer)
[02:33:11] *** Joins: beholder1 (~weechat@2804:7f3:591:15a4:aab6:771e:7688:86a1)
[02:36:53] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:38:49] *** Quits: Herby (~quassel@merkur.graeber-clan.de) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[02:38:58] *** Joins: Herby (~quassel@merkur.graeber-clan.de)
[02:39:50] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 250 seconds)
[02:40:51] *** Quits: sgarciapdx (~serge@irc.shork.io) (Ping timeout: 256 seconds)
[02:41:29] *** Joins: sgarciapdx (~serge@irc.shork.io)
[02:43:21] *** Joins: rcernin (~rcernin@101.189.129.123)
[02:46:04] *** Joins: elastic_dog (~elastic_d@ary77.neoplus.adsl.tpnet.pl)
[02:46:31] *** Quits: adip_ (~adip@dhy11.neoplus.adsl.tpnet.pl) (Ping timeout: 256 seconds)
[02:46:36] *** Quits: adip (~adip@dhy11.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[02:47:42] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ¦)
[02:48:57] *** Quits: bindu (~bindu@user/bindu) (Quit: Leaving)
[02:49:13] *** Joins: bindu (~bindu@user/bindu)
[02:54:43] *** Joins: troseman (~troseman@c-75-70-98-121.hsd1.co.comcast.net)
[02:56:36] *** Quits: elastic_dog (~elastic_d@ary77.neoplus.adsl.tpnet.pl) (Ping timeout: 240 seconds)
[02:57:39] *** Quits: rcernin (~rcernin@101.189.129.123) (Quit: WeeChat 3.4)
[02:57:50] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:59:06] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 245 seconds)
[02:59:10] *** Joins: rcernin (~rcernin@101.189.129.123)
[03:00:45] *** Joins: moog (~moog@mobile-166-173-57-234.mycingular.net)
[03:04:12] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[03:07:42] *** Quits: moog (~moog@mobile-166-173-57-234.mycingular.net) (Ping timeout: 260 seconds)
[03:07:50] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:09:57] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 2.8)
[03:10:46] *** Quits: hub (~hub@user/hub) (Quit: -)
[03:11:22] *** Joins: hub (~hub@user/hub)
[03:11:53] *** Joins: elastic_1 (~elastic_d@ary77.neoplus.adsl.tpnet.pl)
[03:12:32] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[03:13:18] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[03:14:06] *** Quits: elastic_1 (~elastic_d@ary77.neoplus.adsl.tpnet.pl) (Client Quit)
[03:14:17] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[03:16:32] *** Joins: leonarth (~leonarth@user/leonarth)
[03:16:53] *** Joins: moog (~moog@mobile-107-107-184-243.mycingular.net)
[03:17:04] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:17:18] *** Quits: moog (~moog@mobile-107-107-184-243.mycingular.net) (Remote host closed the connection)
[03:22:09] *** Joins: chenqisu1 (~chenqisu1@183.217.201.47)
[03:23:21] *** Quits: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx) (Ping timeout: 256 seconds)
[03:25:31] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[03:30:43] *** nz is now known as nZ
[03:31:24] *** Quits: ricci (~ricci@31.187.110.131) (Quit: ricci)
[03:45:31] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:49:49] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Read error: Connection reset by peer)
[03:50:50] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[03:53:04] *** Quits: beholder1 (~weechat@2804:7f3:591:15a4:aab6:771e:7688:86a1) (Read error: Connection reset by peer)
[04:00:44] *** Joins: enamon (~enamon@2604:a880:cad:d0::2f:9001)
[04:13:31] *** nZ is now known as nz
[04:19:00] *** Joins: crashrep (~crashrep@user/crashrep)
[04:20:18] *** Quits: bigGopher (~dan@207.98.176.66) (Quit: bigGopher)
[04:22:56] *** Quits: crashrep (~crashrep@user/crashrep) (Client Quit)
[04:26:15] *** Joins: moog_ (~moog@107.126.53.115)
[04:29:00] *** Joins: meinside (uid24933@id-24933.helmsley.irccloud.com)
[04:46:00] *** Quits: leonarth (~leonarth@user/leonarth) (Killed (NickServ (GHOST command used by leonarth_)))
[04:46:01] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:46:06] *** Joins: leonarth_ (~leonarth@user/leonarth)
[04:47:37] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:51:25] *** leonarth_ is now known as leonarth
[04:51:30] *** Quits: Atlas (~atlas@user/atlas) (Ping timeout: 256 seconds)
[05:14:36] *** Quits: todo75 (~todo75@user/todo75) (Ping timeout: 240 seconds)
[05:15:42] *** Joins: todo75 (~todo75@user/todo75)
[05:15:42] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.4)
[05:24:04] *** Joins: Atlas (~atlas@user/atlas)
[05:29:50] *** Quits: krux02 (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de) (Remote host closed the connection)
[05:36:36] *** Quits: todo75 (~todo75@user/todo75) (Ping timeout: 240 seconds)
[05:47:01] *** Quits: rcernin (~rcernin@101.189.129.123) (Ping timeout: 245 seconds)
[05:50:32] *** Joins: bigGopher (~dan@207.98.176.66)
[05:54:39] *** Quits: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[05:54:39] *** Quits: higgins (~higgins@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[05:55:54] *** Quits: RhinosF1 (uid339563@miraheze/RhinosF1) (Quit: Connection closed for inactivity)
[06:05:23] *** Joins: todo75 (~todo75@user/todo75)
[06:05:49] *** Joins: xiongxin (~Thunderbi@2409:8955:2e18:1c2b:5e5f:70b9:febc:b807)
[06:06:50] *** Joins: higgins (~higgins@static.38.6.217.95.clients.your-server.de)
[06:09:13] *** Joins: ejjfunky (~ejjfunky2@125.164.19.110)
[06:11:21] *** Joins: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de)
[06:15:43] *** Joins: rcernin (~rcernin@2001:8003:6803:db00:c933:c7da:1ad4:1f99)
[06:19:00] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[06:21:20] *** Joins: rcernin_ (~rcernin@101.189.129.123)
[06:21:50] *** Quits: rcernin (~rcernin@2001:8003:6803:db00:c933:c7da:1ad4:1f99) (Ping timeout: 260 seconds)
[06:29:14] *** Quits: jiqiren (~jiqiren@oh-hi.org) (Quit: leaving)
[06:31:48] *** Quits: rcernin_ (~rcernin@101.189.129.123) (Ping timeout: 256 seconds)
[06:33:16] *** Joins: bluedust (~bluedust@103.165.167.61)
[06:37:26] *** Joins: rcernin_ (~rcernin@101.189.129.123)
[06:39:49] *** Joins: Luther (uid510595@id-510595.uxbridge.irccloud.com)
[06:47:37] *** Quits: rcernin_ (~rcernin@101.189.129.123) (Ping timeout: 240 seconds)
[06:52:03] *** Quits: leonarth (~leonarth@user/leonarth) (Quit: 84R6CDo3S62HkuYSkVXBr7fXp2wn1XRHeQZ8QPrqxbXvfXP33EH4MhueE2ifPcRbbQQhVXPheMD957muhhBtrvs2QKykeA3)
[06:52:51] *** Joins: rcernin_ (~rcernin@101.189.129.123)
[06:53:23] *** Quits: notepad7 (~notepad@129.159.46.243) (Quit: The Lounge - https://thelounge.chat)
[06:54:03] *** Joins: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx)
[06:54:08] *** Joins: notepad7 (~notepad@129.159.46.243)
[06:54:29] *** Quits: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx) (Remote host closed the connection)
[06:54:47] *** Joins: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx)
[06:55:41] *** Quits: svedrin (~quassel@tiamat.funzt-halt.net) (Quit: https://quassel-irc.org - Komfortabler Chat. Ãberall.)
[06:55:57] *** Joins: svedrin (~quassel@tiamat.funzt-halt.net)
[06:56:05] *** Quits: notepad7 (~notepad@129.159.46.243) (Client Quit)
[06:57:30] *** Joins: notepad7 (~notepad@129.159.46.243)
[06:58:07] *** Quits: apathor (~mike@c-73-119-36-70.hsd1.ma.comcast.net) (Ping timeout: 256 seconds)
[07:03:14] *** Quits: pinky__ (pinky@minime.fef.net) (Read error: Connection reset by peer)
[07:07:13] *** Quits: bigGopher (~dan@207.98.176.66) (Quit: bigGopher)
[07:14:12] *** Quits: xiongxin (~Thunderbi@2409:8955:2e18:1c2b:5e5f:70b9:febc:b807) (Ping timeout: 240 seconds)
[07:14:18] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[07:32:27] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[07:32:43] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[07:33:25] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[07:43:44] *** Joins: crashrep (~crashrep@user/crashrep)
[07:46:21] *** Quits: andlabs (~andlabs@2a00:79e1:abc:1a12:91a7:e5a5:a5ae:ed04) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[07:46:53] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[07:49:48] *** Quits: troseman (~troseman@c-75-70-98-121.hsd1.co.comcast.net) (Ping timeout: 240 seconds)
[07:51:11] *** Quits: defn (~n0b0dy@user/defn) (Remote host closed the connection)
[07:57:43] *** Joins: bluedust_ (~bluedust@185.248.85.40)
[07:57:49] *** Joins: han-solo (~hanish@user/han-solo)
[08:01:17] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 240 seconds)
[08:01:24] *** Joins: defn (~n0b0dy@user/defn)
[08:02:29] *** Joins: andlabs (~andlabs@2605:ef80:8091:91f3:f935:fe09:dc19:29ae)
[08:04:04] *** Joins: hendry (~hendry@210.23.22.2)
[08:05:11] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Read error: Connection reset by peer)
[08:08:08] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[08:10:15] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[08:12:12] *** Quits: andlabs (~andlabs@2605:ef80:8091:91f3:f935:fe09:dc19:29ae) (Ping timeout: 240 seconds)
[08:15:21] *** Joins: andlabs (~andlabs@2605:ef80:8090:9225:8492:d0f0:e260:e110)
[08:17:24] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 250 seconds)
[08:23:32] *** Quits: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx) (Ping timeout: 268 seconds)
[08:23:57] *** Quits: nucleargrave (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[08:26:22] *** Quits: icebattle (~wayne@S010600fc8ddfd2b3.vc.shawcable.net) (Remote host closed the connection)
[08:28:46] *** Joins: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx)
[08:34:33] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[08:37:06] *** Quits: zwischenzug (~zwischenz@host-45-231-169-155.broadbandcancun.mx) (Ping timeout: 272 seconds)
[08:37:16] *** Joins: ekathva (~ekathva@n14jr0rr6o34swrpo-1.v6.elisa-mobile.fi)
[08:37:36] *** Joins: nucleargrave (~nucleargr@c-73-150-253-137.hsd1.nj.comcast.net)
[08:52:24] *** Joins: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net)
[08:53:23] *** Quits: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net) (Client Quit)
[08:53:30] *** Joins: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net)
[08:54:08] *** Quits: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net) (Client Quit)
[08:54:18] *** Joins: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net)
[08:54:29] *** Quits: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net) (Read error: Connection reset by peer)
[08:54:39] *** Joins: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net)
[09:00:23] *** Quits: andlabs (~andlabs@2605:ef80:8090:9225:8492:d0f0:e260:e110) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[09:07:17] *** Quits: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net) (Remote host closed the connection)
[09:09:21] *** Joins: todo75_ (~todo75@user/todo75)
[09:17:19] *** Joins: bluedust (~bluedust@103.165.167.61)
[09:21:26] *** Quits: bluedust_ (~bluedust@185.248.85.40) (Ping timeout: 272 seconds)
[09:23:14] *** Joins: nattiestnate (~nate@202.138.250.13)
[09:23:45] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 256 seconds)
[09:31:02] *** Quits: nattiestnate (~nate@202.138.250.13) (Quit: WeeChat 3.4)
[09:33:23] *** Joins: ghost08 (~ghost08@adsl-dyn50.78-99-213.t-com.sk)
[09:36:33] *** Joins: andlabs (~andlabs@70.107.171.168)
[09:43:06] *** Joins: saschagrunert (~saschagru@46.128.124.48)
[09:53:12] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:58:04] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[10:06:12] *** Quits: normen_ (~normen@p200300d71749cc002cf5dba788206260.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[10:17:13] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:18:01] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Remote host closed the connection)
[10:18:26] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[10:21:12] *** Joins: masoudd (~masoudd@user/masoudd)
[10:22:57] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:24:06] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[10:30:37] *** Quits: jackneillll (~jackneill@20014C4E1805D5007FF2EE324C2DEE4E.dsl.pool.telekom.hu) (Read error: Connection reset by peer)
[10:30:41] *** Joins: jackneilll (~jackneill@2001:4c4e:1805:d500:f27c:6df4:bfbd:faa7)
[10:32:39] *** Joins: normen_ (~normen@p200300d71749cc00f442ceb358110ec5.dip0.t-ipconnect.de)
[10:33:09] *** Joins: dalek_caan (~Thunderbi@109.252.124.86)
[10:33:15] *** Joins: RhinosF1 (uid339563@miraheze/RhinosF1)
[10:36:37] *** Quits: ekathva (~ekathva@n14jr0rr6o34swrpo-1.v6.elisa-mobile.fi) (Ping timeout: 256 seconds)
[10:43:35] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:48:50] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[10:51:51] *** Joins: adip (~adip@dhy11.neoplus.adsl.tpnet.pl)
[10:51:53] *** Joins: adip_ (~adip@dhy11.neoplus.adsl.tpnet.pl)
[10:57:12] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810)
[11:00:37] *** Quits: todo75_ (~todo75@user/todo75) (Quit: todo75_)
[11:00:53] *** Quits: todo75 (~todo75@user/todo75) (Quit: todo75)
[11:05:51] *** Joins: ekathva (~ekathva@n14jqqwhtfh2jdj1f-1.v6.elisa-mobile.fi)
[11:06:37] *** Quits: normen_ (~normen@p200300d71749cc00f442ceb358110ec5.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[11:09:34] *** Quits: rcernin_ (~rcernin@101.189.129.123) (Quit: WeeChat 3.4)
[11:13:14] *** Joins: xiongxin (~Thunderbi@2409:8955:2e18:1c19:236d:f577:9b86:c216)
[11:15:20] *** Joins: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net)
[11:16:16] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:16:24] *** Quits: mickey (~user@user/mickey) (Quit: mickey)
[11:21:03] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[11:21:04] *** Joins: mickey (~user@user/mickey)
[11:22:23] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[11:25:03] *** Joins: mncheck (~mncheck@193.224.205.254)
[11:27:02] *** Joins: mrig (~mrig@user/mrig)
[11:27:29] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[11:29:17] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[11:29:33] *** Joins: mickey (~user@user/mickey)
[11:29:40] *** Joins: rendar (~rendar@user/rendar)
[11:30:26] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[11:35:27] *** Joins: subj3ct (~brandon@99-36-164-204.lightspeed.snjsca.sbcglobal.net)
[11:35:27] *** Quits: subj3ct (~brandon@99-36-164-204.lightspeed.snjsca.sbcglobal.net) (Client Quit)
[11:41:20] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[11:42:31] *** Quits: mickey (~user@user/mickey) (Quit: mickey)
[11:42:57] *** Joins: mickey (~user@user/mickey)
[11:43:02] *** Joins: rendar (~rendar@user/rendar)
[11:43:42] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:43:50] *** Joins: shka (~herr@109.231.3.55)
[11:46:42] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[11:47:02] *** Joins: bindu (~bindu@user/bindu)
[11:47:41] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[11:48:01] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[11:48:16] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[11:48:18] *** Joins: aLeSD (~aLeSD@91.126.33.194)
[11:48:28] *** Joins: jespada (~jespada@85.255.234.169)
[11:49:13] *** Joins: nmollerup (~nmollerup@customer-2a00-7660-1612-0168-b37c-2db8-239e-be7f.ip6.gigabit.dk)
[11:49:57] *** Quits: mncheck (~mncheck@193.224.205.254) (Quit: Leaving)
[11:50:40] *** Joins: mncheck (~mncheck@193.224.205.254)
[11:57:12] *** Joins: vimal (~vimal@2a02:a210:9600:1f00:cf25:5fe2:fd13:9e52)
[11:59:26] *** Quits: xiongxin (~Thunderbi@2409:8955:2e18:1c19:236d:f577:9b86:c216) (Ping timeout: 252 seconds)
[12:06:07] *** Quits: kieren_ (~kieren@ec2-54-247-60-196.eu-west-1.compute.amazonaws.com) (Quit: leaving)
[12:06:23] *** Joins: kieren (~kieren@ec2-54-247-60-196.eu-west-1.compute.amazonaws.com)
[12:07:19] *** Quits: dupondje (~dupondje@artemis.dupie.be) (Quit: dupondje)
[12:08:54] *** Joins: xiongxin (~Thunderbi@223.104.63.31)
[12:15:28] *** Quits: cblte (cblte@envs.net) (Quit: the lounge - https://webirc.envs.net)
[12:15:28] *** Quits: sus (zero@user/zeromomentum) (Quit: the lounge - https://webirc.envs.net)
[12:16:09] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:17:42] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:9479:a856:8538:8810) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ¦)
[12:18:01] *** Joins: cblte (cblte@envs.net)
[12:18:23] *** Joins: sus (zero@user/zeromomentum)
[12:19:36] *** Joins: nachoes (~nachoes@user/nachoes)
[12:20:52] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[12:24:04] *** Joins: absc (~absc@81.31.144.28)
[12:24:16] *** Quits: xiongxin (~Thunderbi@223.104.63.31) (Ping timeout: 256 seconds)
[12:24:40] *** Joins: xiongxin (~Thunderbi@2409:8955:2e18:2e0e:3bc8:cffa:7635:d626)
[12:26:45] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[12:30:06] *** Quits: kadoban (~kadoban@user/kadoban) (Quit: You have been kicked for being idle)
[12:30:07] *** Quits: thechadgod[m] (~thechadgo@2001:470:69fc:105::1:a1e2) (Quit: You have been kicked for being idle)
[12:46:19] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[12:50:11] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:51:44] *** Joins: normen_ (~normen@p200300d71749cc00f442ceb358110ec5.dip0.t-ipconnect.de)
[12:52:35] *** Quits: nmollerup (~nmollerup@customer-2a00-7660-1612-0168-b37c-2db8-239e-be7f.ip6.gigabit.dk) (Quit: Leaving)
[12:54:55] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[12:55:38] *** Joins: ricci (~ricci@31.187.110.131)
[12:55:44] *** Joins: bindu_ (~bindu@user/bindu)
[12:55:45] *** Joins: dr0n (~nabromov@176.26.119.61)
[12:55:46] *** Quits: bindu_ (~bindu@user/bindu) (Remote host closed the connection)
[12:55:47] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[12:55:49] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Quit: Leaving)
[12:56:23] *** Joins: bindu (~bindu@user/bindu)
[13:01:58] *** Quits: dalek_caan (~Thunderbi@109.252.124.86) (Quit: dalek_caan)
[13:03:30] *** Quits: jespada (~jespada@85.255.234.169) (Ping timeout: 268 seconds)
[13:16:08] *** Joins: nmollerup (~nmollerup@customer-2a00-7660-1612-0168-554a-38a2-90fe-9029.ip6.gigabit.dk)
[13:22:46] *** Joins: jespada (~jespada@148.252.132.235)
[13:23:01] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:25:48] *** Quits: zkanda (~zkanda@box.makean.art) (Quit: The Lounge - https://thelounge.chat)
[13:26:24] *** Joins: zkanda (~zkanda@box.makean.art)
[13:27:45] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[13:28:51] <aLeSD> hi all
[13:29:52] <aLeSD> is there a way to get the default path where to put the app confiuguration files ? A cross platform way
[13:30:07] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[13:30:16] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 250 seconds)
[13:31:23] *** Quits: mncheck (~mncheck@193.224.205.254) (Remote host closed the connection)
[13:33:17] *** Quits: xiongxin (~Thunderbi@2409:8955:2e18:2e0e:3bc8:cffa:7635:d626) (Ping timeout: 240 seconds)
[13:33:34] <ricci> os.UserConfigDir()
[13:39:52] <aLeSD> ricci, thanks
[13:40:44] *** Joins: mncheck (~mncheck@193.224.205.254)
[13:43:00] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 272 seconds)
[13:47:38] *** Quits: masoudd (~masoudd@user/masoudd) (Read error: Connection reset by peer)
[13:48:03] *** Joins: masoudd (~masoudd@user/masoudd)
[13:48:09] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[13:52:12] *** Quits: normen_ (~normen@p200300d71749cc00f442ceb358110ec5.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[13:53:20] *** Quits: lindsay (~lindsay@user/LindsayZhou) (Quit: WeeChat 3.4)
[13:54:10] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[13:54:29] *** Quits: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net) (Quit: Konversation terminated!)
[13:57:18] *** Joins: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net)
[13:58:04] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:00:51] *** Quits: jespada (~jespada@148.252.132.235) (Ping timeout: 268 seconds)
[14:00:54] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Read error: Connection reset by peer)
[14:02:54] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[14:03:22] *** Joins: bluedust (~bluedust@103.165.167.61)
[14:03:41] *** Joins: han-solo (~hanish@user/han-solo)
[14:04:20] *** Joins: jespada (~jespada@148.252.132.235)
[14:05:38] *** Joins: rairden (~rairden@2603:9000:de04:9613::1a20)
[14:06:28] *** Quits: monoxane (~monoxane@user/monoxane) (Quit: estoy fuera)
[14:12:37] *** Quits: idstam_ (~idstam@185.176.247.102) (Ping timeout: 240 seconds)
[14:19:28] *** Joins: monoxane (~monoxane@user/monoxane)
[14:31:55] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 240 seconds)
[14:31:56] *** Joins: adanwan_ (~adanwan@gateway/tor-sasl/adanwan)
[14:32:06] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:36:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[14:37:32] *** Joins: Atque (~Atque@user/atque)
[14:39:27] *** Quits: monoxane (~monoxane@user/monoxane) (Quit: estoy fuera)
[14:40:26] *** Joins: xse_ (~xse@user/xse)
[14:41:59] *** Quits: xse (~xse@user/xse) (Ping timeout: 256 seconds)
[14:41:59] *** xse_ is now known as xse
[14:46:33] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[14:47:29] *** Joins: Atque (~Atque@user/atque)
[14:51:07] *** Joins: monoxane (~monoxane@user/monoxane)
[14:57:13] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ¦)
[15:19:02] *** Joins: popey7 (~popey@ubuntu/member/popey)
[15:22:07] *** Quits: popey7 (~popey@ubuntu/member/popey) (Client Quit)
[15:30:24] *** Joins: normen_ (~normen@pd9eecc5a.dip0.t-ipconnect.de)
[15:31:45] *** Joins: dupondje (~dupondje@artemis.dupie.be)
[15:31:59] *** Quits: ricci (~ricci@31.187.110.131) (Quit: ricci)
[15:35:48] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[15:43:35] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:43:42] *** Quits: oxtyped (~oxtyped@138.75.5.169) (Remote host closed the connection)
[15:46:21] *** Joins: oxtyped (~Admin@2401:7400:c804:df35:f08e:af28:d255:83cb)
[15:48:02] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[15:50:21] *** Quits: ejjfunky (~ejjfunky2@125.164.19.110) (Remote host closed the connection)
[15:53:38] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[15:55:54] *** Quits: jespada (~jespada@148.252.132.235) (Read error: Connection reset by peer)
[15:57:47] <chilversc> is there an idomatic way to implement the null instance pattern? https://go.dev/play/p/C8frsiXfnK8
[15:59:15] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[16:01:54] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:04:18] *** Joins: __abbe__ (surgerize@wireguard/tunneler/abbe)
[16:07:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[16:15:31] *** Joins: warblr (~warblr@ip-67-213-71-181.fibre.fibrestream.ca)
[16:21:44] *** Quits: oxtyped (~Admin@2401:7400:c804:df35:f08e:af28:d255:83cb) (Quit: Leaving)
[16:23:40] *** Joins: Tach (~Tach@user/tach)
[16:24:21] *** Joins: apathor (~mike@c-73-119-36-70.hsd1.ma.comcast.net)
[16:24:31] <Tach> HI guys, I have a working golang app buid but when I want to start it in a golang docker container it says: /bin/sh: ./appname: not found
[16:27:56] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca)
[16:28:02] *** Quits: han-solo (~hanish@user/han-solo) (Ping timeout: 240 seconds)
[16:29:33] <chilversc> Tach: seems like an issue with how you've built the container, likely the executable is in a different location to your working path
[16:30:04] <Tach> chilversc yes that might be the issue, can I just test it with an export ?
[16:30:53] <chilversc> just check what you set WORKDIR to, and where you put the app, that or ensure the app is in your path (e.g. /bin)
[16:32:41] *** Joins: edd_lc (~edd_lc@85.65.219.112.dynamic.barak-online.net)
[16:32:52] <Tach> chilversc nope, no clue... https://pastebin.com/uMMMmGyd
[16:36:56] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:37:50] <Tach> chilversc i can't even start it manually
[16:38:09] *** Joins: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net)
[16:40:54] *** Joins: leonarth (~leonarth@user/leonarth)
[16:41:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[16:42:28] *** Quits: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net) (Remote host closed the connection)
[16:43:28] *** Joins: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net)
[16:53:40] *** Quits: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net) (Quit: Igloo IRC: https://iglooirc.com)
[16:53:49] *** Joins: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net)
[16:53:49] <Tach> it's strange, if I build the app again mounted in the golang container it works. Something about dependencies?
[16:54:20] *** Quits: pvalenta (~petr@mail.open-system.cz) (Quit: ZNC - https://znc.in)
[16:54:28] *** Joins: han-solo (~hanish@user/han-solo)
[16:54:41] *** Joins: pvalenta (~petr@mail.open-system.cz)
[16:56:40] <xb0o2> Tach: the question is where your app lives in the container
[16:56:43] *** Quits: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net) (Remote host closed the connection)
[16:56:55] <Tach> xb0o2 I copied it to /usr/bin
[16:56:58] <chilversc> Tach: no, likely you've got something in the wrong place, or you have not copied it to the container?
[16:57:00] <Tach> chmod +x it
[16:57:17] <chilversc> Tach: that or maybe you're local system and the container are using different architectures
[16:57:38] <Tach> chilversc nope build on the same VM
[16:58:03] <chilversc> Tach: if you copied it to /usr/bin, then you would execute it as just "appname", not "./appname"
[16:58:11] <Tach> ok let me test
[16:58:35] <Tach> same error, not found
[16:58:38] <chilversc> odd, no constant for the max time.Time value
[16:58:52] <chilversc> Tach: check if the file is actually there
[16:59:04] <Tach> chilversc sure it is :)
[16:59:43] <Tach> But the local build didn't work in the container so I build it using a -v mount so there might be some architecture issue
[17:00:49] <Tach> OK I have an idea, I build the app when I build the container
[17:01:10] <Tach> anyways, I need to go for now
[17:01:12] <Tach> thanks!
[17:05:47] *** Quits: chenqisu1 (~chenqisu1@183.217.201.47) (Ping timeout: 252 seconds)
[17:06:44] *** Joins: oxtyped (~admin@user/oxtyped)
[17:06:48] *** Quits: Praise (~Fat@user/praise) (Quit: Vado a fare qualcosa di utile.)
[17:07:03] *** Joins: Praise (~Fat@user/praise)
[17:07:50] *** Quits: ghost08 (~ghost08@adsl-dyn50.78-99-213.t-com.sk) (Quit: WeeChat 3.4)
[17:09:24] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:12:56] *** Joins: jespada (~jespada@148.252.132.235)
[17:14:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[17:14:48] *** Quits: pvalenta (~petr@mail.open-system.cz) (Quit: ZNC - https://znc.in)
[17:15:05] *** Joins: pvalenta (~petr@mail.open-system.cz)
[17:17:36] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:19:27] *** Joins: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net)
[17:23:01] *** Quits: jer0me (~jerome@176-149-34-153.abo.bbox.fr) (Remote host closed the connection)
[17:24:42] *** Quits: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net) (Ping timeout: 250 seconds)
[17:28:19] *** Quits: saschagrunert (~saschagru@46.128.124.48) (Remote host closed the connection)
[17:29:42] *** Quits: mohan43u (~mohan@user/mohan43u) (Quit: WeeChat 3.4)
[17:31:36] *** Joins: treeford (~charleste@user/treeford)
[17:32:54] *** Joins: off^ (~off@50.232.121.75)
[17:33:46] *** Joins: mohan43u (~mohan@user/mohan43u)
[17:37:21] *** Joins: neurocyte0917090 (~neurocyte@IP-045014190241.dynamic.medianet-world.de)
[17:37:22] *** Quits: neurocyte0917090 (~neurocyte@IP-045014190241.dynamic.medianet-world.de) (Changing host)
[17:37:22] *** Joins: neurocyte0917090 (~neurocyte@user/neurocyte)
[17:37:38] *** Quits: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net) (Ping timeout: 256 seconds)
[17:43:24] *** Quits: jespada (~jespada@148.252.132.235) (Read error: Connection reset by peer)
[17:44:00] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:45:12] *** Joins: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net)
[17:45:14] *** Joins: jespada (~jespada@148.252.132.235)
[17:48:41] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[17:51:26] *** Quits: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net) (Ping timeout: 252 seconds)
[17:51:37] *** Quits: Luther (uid510595@id-510595.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[17:52:10] *** Joins: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[17:55:42] *** Quits: neurocyte0917090 (~neurocyte@user/neurocyte) (Ping timeout: 272 seconds)
[17:56:35] *** Quits: deckard (~deckard@user/deckard) (Ping timeout: 256 seconds)
[17:57:26] *** Joins: deckard (~deckard@user/deckard)
[17:58:35] *** Joins: arkurious (~arkurious@user/arkurious)
[17:58:52] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ¦)
[18:01:47] *** Quits: off^ (~off@50.232.121.75) (Remote host closed the connection)
[18:02:05] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:04:31] *** Joins: CoolerX (~user@user/coolerx)
[18:04:33] <CoolerX> Hi
[18:05:00] <CoolerX> Is there a way to convert an embed.FS to a map[string][]byte filepathToContents or something?
[18:05:19] <CoolerX> embedding a folder and it's subfolders and files using go{
[18:05:25] <CoolerX> go:embed and embed.FS
[18:07:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[18:07:38] <fizzie> It's obviously _possible_, but if you're looking for a built-in way, don't think one exists. io/fs.WalkDir can walk any FS (including an embed.FS), and you could have a WalkDirFunc that just calls ReadFile and adds the result to a map.
[18:11:15] <fizzie> That said, isn't an embed.FS pretty much "a `map[string][]byte` or something" already, in all the ways that matter, except for the syntax? Instead of `data, ok := myMap["path"]` you do `data, err := myFS.ReadFile("path")`, but that's scarcely worth mentioning.
[18:14:08] *** Quits: jespada (~jespada@148.252.132.235) (Read error: Connection reset by peer)
[18:16:13] <CoolerX> fizzie: ok so the manual approach
[18:17:14] *** Quits: sailorCat (~sailorCat@mail2.gajsin.name) (Quit: ZNC 1.8.2 - https://znc.in)
[18:17:30] *** Joins: jespada (~jespada@148.252.132.235)
[18:20:02] *** Joins: sailorCat (~sailorCat@mail2.gajsin.name)
[18:20:15] *** Quits: edd_lc (~edd_lc@85.65.219.112.dynamic.barak-online.net) (Remote host closed the connection)
[18:20:46] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:20:58] *** Joins: moog__ (~moog@107.126.53.115)
[18:23:32] *** Quits: moog_ (~moog@107.126.53.115) (Ping timeout: 256 seconds)
[18:25:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[18:30:04] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:32:02] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 256 seconds)
[18:36:05] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[18:37:17] *** Joins: treeford (~charleste@user/treeford)
[18:43:35] *** Joins: jeromenerf (~jerome@176-149-34-153.abo.bbox.fr)
[18:44:17] <bluebird> \quit
[18:44:21] *** Quits: bluebird (~bluebird@user/bluebird) (Quit: leaving)
[18:45:15] *** Joins: ricci (~ricci@31.187.110.131)
[18:45:23] *** Quits: piwu (jtagcat@193.40.103.110) (Quit: Bye!)
[18:46:52] *** Joins: bpalmer (~user@user/bpalmer)
[18:47:24] *** Joins: piwu (jtagcat@193.40.103.110)
[18:50:01] *** Joins: CoolerX_ (~user@user/coolerx)
[18:51:59] *** Quits: CoolerX (~user@user/coolerx) (Ping timeout: 250 seconds)
[18:52:01] <braxas> what is the best way to get my module root directory from a test? I have some config there I want to use from a test
[18:52:15] <braxas> I don't want to use relative paths because then it breaks if I move tests files around.
[18:53:34] *** Quits: bluedust (~bluedust@103.165.167.61) (Remote host closed the connection)
[18:54:09] *** Joins: bluedust (~bluedust@103.165.167.61)
[18:54:16] <bpalmer> braxas: you could try building a relative path based on os.Executable(), although I don't actually know what it is for tests
[18:54:35] <braxas> I checked it, it is somewhere in /tmp
[18:56:55] <bpalmer> ah, https://dave.cheney.net/2016/05/10/test-fixtures-in-go : "First, when you run go test, for each package in scope, the test binary will be executed with its working directory set to the source directory of the package under test. "
[18:58:17] *** Quits: bluedust (~bluedust@103.165.167.61) (Ping timeout: 240 seconds)
[18:58:47] <bpalmer> so you can rely on the relative paths, or absify the current path and apply whatever heuristics you want (e.g., if your module is example.com/pkg/bar  , just search for that in the current working directory to know how to relativize it)
[19:02:57] *** Joins: aog (~aog@user/aog)
[19:06:56] <chilversc> If I need to poll a context to check if its cancelled/timedout, is there any significant difference between checking ctx.Err() vs non-blocking select on ctx.Done()?
[19:07:25] <chilversc> alternatively, any form of DirWalk that accepts a context?
[19:08:53] <bpalmer> you could have your walking function check the context itself.
[19:09:34] <chilversc> that's what I was thinking, just wondering about overhead of the mutex if I'm checking on every file
[19:09:54] *** Joins: LordDoskias (~lorddoski@212.21.133.210)
[19:10:26] <LordDoskias> does this line: NS, CNAME, PTR []byte inside a definition of a type struct entail some specil meaning or it's shorthand of declaring those 3 fields as a byte slice?
[19:10:51] <bpalmer> ah. I suppose you could only check it if the DirEntry parameter is a directory
[19:11:04] <siXy> would you actually need to check that mutex every file? Checking every N files where N is like 500 or so might be enough
[19:11:24] <chilversc> siXy: that's what I was thinking
[19:11:33] <bpalmer> since *most* of the time, individual directories are pretty small and the speed up is stopping from handling the next directory inline
[19:11:35] <bpalmer> *in line
[19:11:51] <bpalmer> (There are some pathological cases with overstuffed directories, admittedly)
[19:11:54] <siXy> Also as you're probably aware, it's very possible for a slow FS (eg NFS) to block indefnitely and not be cancelable, so your calling routine would maybe need to handle that anyways
[19:12:08] <chilversc> but was curious about; ctx.Err() vs select { ctx.Done(): default: } construct?
[19:12:35] <chilversc> siXy: that's ok, this is guaranteed to be local as I'm actually looking through FS-Cache to find the age of the oldest file
[19:12:37] <bpalmer> the only thing that immediately comes to mind is ctx.Err() doesn't establish a synchronization point
[19:12:59] <chilversc> bpalmer: it uses a mutex from what I could see
[19:14:08] <bpalmer> if it happens to use a mutex, then you're paying mutex overhead anyway.
[19:14:38] <bpalmer> but you're right, in almost every real world case for this, some form of synchronization has to happen inside of Err()'s body.
[19:15:40] <chilversc> yeah, I was wondering if anyone had established a good pattern or heuristics for handling checking context within a loop
[19:16:53] <bpalmer> In a tight loop, I just check every N times; haven't seen a better approach.
[19:17:12] <bpalmer> guess there's no reason to think differently about it in the walking pattern.
[19:17:56] *** Quits: jkl (~jkl@user/jkl) (Quit: Gone.)
[19:18:36] *** Joins: SteveR (~SteveR@103.215.168.1)
[19:19:14] *** Quits: SuperLag (~akulbe@user/superlag) (Quit: leaving)
[19:19:17] *** Joins: jkl (~jkl@user/jkl)
[19:20:27] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 256 seconds)
[19:21:07] *** Quits: LordDoskias (~lorddoski@212.21.133.210) (Quit: Leaving)
[19:27:57] *** Joins: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net)
[19:28:50] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[19:30:36] <braxas> bpalmer: thanks
[19:33:29] *** Quits: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net) (Ping timeout: 256 seconds)
[19:33:43] *** Joins: crashrep (~crashrep@user/crashrep)
[19:33:48] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 240 seconds)
[19:34:26] *** Joins: CoolerX (~user@user/coolerx)
[19:35:57] *** Quits: CoolerX_ (~user@user/coolerx) (Ping timeout: 240 seconds)
[19:37:39] *** Joins: MrWiggly (~textual@62.6.56.226)
[19:38:09] *** Quits: benji (~benji@user/benji) (Quit: ZNC - https://znc.in)
[19:38:32] *** Joins: beholders_eye (~weechat@2804:7f3:591:15a4:aab6:771e:7688:86a1)
[19:39:14] *** Joins: pagalingling (~pagalingl@2a09:5e40:1030:e30:76:6f0c:1e52:f065)
[19:39:57] *** Joins: benji (~benji@user/benji)
[19:40:41] *** Joins: mrig (~mrig@user/mrig)
[19:42:03] *** Quits: andlabs (~andlabs@70.107.171.168) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[19:45:01] *** Quits: leonarth (~leonarth@user/leonarth) (Quit: 84R6CDo3S62HkuYSkVXBr7fXp2wn1XRHeQZ8QPrqxbXvfXP33EH4MhueE2ifPcRbbQQhVXPheMD957muhhBtrvs2QKykeA3)
[19:47:50] *** Quits: lehmrob (~rd7@business-176-095-223-081.static.arcor-ip.net) (Quit: Konversation terminated!)
[19:54:36] *** Quits: SteveR (~SteveR@103.215.168.1) (Quit: Client closed)
[19:59:26] *** Quits: MrWiggly (~textual@62.6.56.226) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[19:59:57] *** Joins: shka (~herr@109.231.3.55)
[20:01:51] *** Joins: andlabs (~andlabs@2605:ef80:8099:7264:81bc:e93a:a244:71d8)
[20:02:49] <CoolerX> is it possible to write to an embed.FS ?
[20:03:37] *** Quits: crashrep (~crashrep@user/crashrep) (Quit: WeeChat 3.4)
[20:04:41] *** Quits: mrig (~mrig@user/mrig) (Ping timeout: 268 seconds)
[20:06:42] *** Joins: zer0bitz (~zer0bitz@2001:2003:f74d:b800:7859:22cf:713c:fe6e)
[20:07:00] *** Joins: treeford (~charleste@user/treeford)
[20:08:01] *** Joins: mrig (~mrig@user/mrig)
[20:11:57] <fizzie> It's not. ("An [embed.]FS is a read-only collection of files --")
[20:15:29] <CoolerX> fizzie: ok, ia there some other in-memory filesystem?
[20:15:58] <A_Dragon> you could implement io.fs and extend it to have rw capabilities
[20:16:06] <A_Dragon> but that sounds like an XY problem
[20:17:11] *** Joins: X-Scale` (~ARM@135.232.28.37.rev.vodafone.pt)
[20:18:09] *** Joins: zer0bitz_ (~zer0bitz@2001:2003:f74d:b800:7859:22cf:713c:fe6e)
[20:18:35] <CoolerX> A_Dragon: I don't mean implement something. I mean is there a package in the standard library
[20:18:36] *** Quits: X-Scale (~ARM@46.50.5.194) (Ping timeout: 240 seconds)
[20:18:36] *** X-Scale` is now known as X-Scale
[20:18:44] <CoolerX> for an in-memory filesystem
[20:18:47] <A_Dragon> you want an in-memory writable FS?
[20:18:48] <A_Dragon> why?
[20:19:39] <CoolerX> A_Dragon: so I can use the same code that works with an on disk filesystem
[20:19:48] <fizzie> Not in the standard library, I think. Externally, there's "github.com/spf13/afero".MemMapFs -- the context here is that afero was a pre-"io/fs" filesystem abstraction, that's been since then (I believe) made compatible with "io/fs".FS.
[20:20:11] <CoolerX> ok
[20:20:13] <A_Dragon> CoolerX: I mean you could implement fs.FS
[20:20:18] <A_Dragon> quite trivially, in fact
[20:20:30] <A_Dragon> and then as I said, extend it to allow writes
[20:20:46] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:7859:22cf:713c:fe6e) (Ping timeout: 245 seconds)
[20:21:27] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[20:21:44] *** Joins: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net)
[20:22:39] <fizzie> I guess there's also "testing/fstest".MapFS in the standard library, which might technically count as "writable" (in the sense that it's just a map). But as the package name suggests, it's intended for testing.
[20:24:14] *** Quits: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net) (Remote host closed the connection)
[20:24:31] <CoolerX> ok
[20:26:13] *** Joins: X-Scale` (~ARM@31.22.167.35)
[20:27:29] *** Joins: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net)
[20:27:53] *** Quits: X-Scale (~ARM@135.232.28.37.rev.vodafone.pt) (Ping timeout: 256 seconds)
[20:27:53] *** X-Scale` is now known as X-Scale
[20:28:16] <CoolerX> fizzie: Thanks, I think this is what I need https://github.com/spf13/afero#memory-backed-storage
[20:28:19] *** Quits: CoolerX (~user@user/coolerx) (Quit: leaving)
[20:32:46] *** Quits: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net) (Ping timeout: 272 seconds)
[20:39:25] *** Quits: pagalingling (~pagalingl@2a09:5e40:1030:e30:76:6f0c:1e52:f065) (Quit: WeeChat 3.4)
[20:46:45] *** Quits: Arsen (arsen@managarm/dev/Arsen) (Quit: Quit.)
[20:47:24] *** Joins: Arsen (arsen@managarm/dev/Arsen)
[20:54:18] *** Joins: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net)
[20:55:38] *** Quits: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net) (Remote host closed the connection)
[20:56:43] *** Quits: aLeSD (~aLeSD@91.126.33.194) (Remote host closed the connection)
[20:57:52] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[21:05:03] *** Joins: dalek_caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru)
[21:09:31] *** Quits: andlabs (~andlabs@2605:ef80:8099:7264:81bc:e93a:a244:71d8) (Ping timeout: 245 seconds)
[21:10:37] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:10:50] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[21:12:51] *** Quits: kai (~kai@x50d24799.cust.hiper.dk) (Quit: The Lounge - https://thelounge.chat)
[21:13:31] *** Joins: kai (~kai@x50d24799.cust.hiper.dk)
[21:13:38] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[21:14:58] *** Quits: jespada (~jespada@148.252.132.235) (Read error: Connection reset by peer)
[21:19:46] *** Quits: xb0o2 (~xb0o2@user/xb0o2) (Quit: Leaving)
[21:22:08] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[21:22:22] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:29:24] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[21:32:14] *** Joins: toulene (~toulene@user/toulene)
[21:33:37] *** Quits: absc (~absc@81.31.144.28) (Quit: Leaving)
[21:34:09] *** Quits: ugjka (~ugjka@ugjka.net) (Quit: Rabooting the server https://ugjka.net)
[21:34:44] *** Joins: ugjka (~ugjka@ugjka.net)
[21:37:32] *** Joins: bigGopher (~dan@207.98.176.66)
[21:42:30] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[21:44:41] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:46:36] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[21:46:52] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 272 seconds)
[21:50:30] *** Quits: masoudd (~masoudd@user/masoudd) (Ping timeout: 260 seconds)
[21:50:49] *** Joins: alyx (alyx@atheme/alyx)
[21:59:33] *** Joins: krux02_ (~krux02@p200300e8170d4f00004bdf5557be8ad9.dip0.t-ipconnect.de)
[22:03:10] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-17-50-101-91-98.dsl.bell.ca) (Remote host closed the connection)
[22:03:56] *** Quits: foobaz2124846 (~foobaz212@152.37.103.80) (Quit: Client closed)
[22:04:20] *** Joins: foobaz2124846 (~foobaz212@213.205.198.102)
[22:07:48] *** Joins: MrWiggly (~textual@62.6.56.226)
[22:08:06] *** Joins: todo75 (~todo75@user/todo75)
[22:11:41] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[22:21:54] *** Quits: bigGopher (~dan@207.98.176.66) (Quit: bigGopher)
[22:27:50] *** Joins: jla (~jordi@137.215.35.37.dynamic.jazztel.es)
[22:28:46] *** ox is now known as oz
[22:29:18] *** Joins: idstam (~idstam@185.176.247.102)
[22:30:47] *** Joins: nullheroes (~nullheroe@168.235.66.22)
[22:31:09] *** Quits: todo75 (~todo75@user/todo75) (Quit: todo75)
[22:32:28] *** Quits: moldorcoder7 (~moldorcod@37.120.143.30) (Quit: %bye mirc%)
[22:32:42] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[22:32:51] *** Joins: dsrt^ (~dsrt@50.232.121.75)
[22:35:47] *** Joins: moldorcoder7 (~moldorcod@37.120.143.30)
[22:37:22] *** Quits: ricci (~ricci@31.187.110.131) (Quit: ricci)
[22:37:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[22:41:03] *** Quits: acohn (acohn@wikipedia/alex-cohn) (Quit: TTFN)
[22:41:25] *** Joins: acohn (acohn@wikipedia/alex-cohn)
[22:41:44] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[22:44:02] *** Joins: artifishul (~textual@104.238.128.150)
[22:45:35] *** Quits: acohn (acohn@wikipedia/alex-cohn) (Client Quit)
[22:46:45] *** Joins: acohn (acohn@wikipedia/alex-cohn)
[22:51:22] *** Joins: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net)
[22:52:58] *** Quits: acohn (acohn@wikipedia/alex-cohn) (Quit: TTFN)
[22:53:16] *** Quits: mceldeen (~mceldeen@h66-222-117-47.mdsnwi.tisp.static.tds.net) (Remote host closed the connection)
[22:53:52] *** Joins: acohn (~acohn@wikipedia/alex-cohn)
[22:54:20] *** Joins: andlabs (~andlabs@2a00:79e1:abc:1a12:7585:7dcf:ed00:963a)
[22:56:35] *** Quits: MrWiggly (~textual@62.6.56.226) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
[22:57:33] *** Joins: MrWiggly (~textual@62.6.56.226)
[22:59:32] *** Joins: hydracat (~hydracat_@pool-96-230-188-202.prvdri.fios.verizon.net)
[23:08:36] *** Quits: Piraty (~irc@user/piraty) (Quit: -)
[23:10:09] *** Joins: Piraty (~irc@user/piraty)
[23:11:36] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:c02:a25c:4002:3d0a)
[23:12:36] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[23:19:39] *** Quits: foobaz2124846 (~foobaz212@213.205.198.102) (Quit: Client closed)
[23:20:37] *** Joins: foobaz2124846 (~foobaz212@152.37.103.80)
[23:23:02] *** Joins: absc (~absc@81.31.144.28)
[23:26:42] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[23:27:56] *** Joins: xb0o2 (~xb0o2@user/xb0o2)
[23:31:47] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[23:38:17] *** Quits: MrWiggly (~textual@62.6.56.226) (Quit: Textual IRC Client: www.textualapp.com)
[23:41:01] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 250 seconds)
[23:46:03] *** Quits: dalek_caan (~Thunderbi@109-252-124-86.nat.spd-mgts.ru) (Quit: dalek_caan)
[23:49:38] *** Joins: MrWiggly (~MrWiggly@62.6.56.226)
[23:58:09] *** Quits: MrWiggly (~MrWiggly@62.6.56.226) (Quit: My MacBook has gone to sleep. ZZZzzzâ¦)
