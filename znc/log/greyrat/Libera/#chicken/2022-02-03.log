[00:02:24] *** Joins: rgherdt__ (~rgherdt@2a01:598:d036:698b:4f59:ac7:3ad8:3320)
[00:04:55] *** Quits: rgherdt_ (~rgherdt@2a01:598:d038:d67f:f4bd:95ae:c30:7222) (Ping timeout: 250 seconds)
[00:06:38] *** Quits: Lysandros (~Lysandros@2a02:aa13:8104:c080:21a:a0ff:fea7:35e) (Changing host)
[00:06:38] *** Joins: Lysandros (~Lysandros@user/lysandros)
[00:17:19] <Bunny351> jcowan: thanks!
[00:41:32] *** Quits: samth (sid14502@id-14502.ilkley.irccloud.com) (*.net *.split)
[00:41:32] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (*.net *.split)
[00:41:32] *** Quits: idstam (~idstam@185.176.246.116) (*.net *.split)
[00:41:32] *** Quits: johnjaye (~pi@173.209.65.233) (*.net *.split)
[00:41:32] *** Quits: Guest6340 (~cat@h-98-128-128-173.A351.priv.bahnhof.se) (*.net *.split)
[00:41:33] *** Quits: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net) (*.net *.split)
[00:41:33] *** Quits: phoebos (~phoebos@kisslinux/phoebos) (*.net *.split)
[00:41:33] *** Quits: ecloud (~quassel@192.89.120.58) (*.net *.split)
[00:41:33] *** Quits: ASau (~user@lmpc.drb.insel.de) (*.net *.split)
[00:41:33] *** Quits: Zipheir (~wcm@98.4.178.27) (*.net *.split)
[00:41:34] *** Quits: Bunny351 (~Bunny351@85.88.17.217) (*.net *.split)
[00:41:34] *** Quits: rnlf (~rnlf@mail.base13.de) (*.net *.split)
[00:41:34] *** Quits: mangol (~mangol@lisp.fi) (*.net *.split)
[00:41:34] *** Quits: mason (~mason@redhat/mason) (*.net *.split)
[00:41:34] *** Quits: crumpy (~crumpo@user/crumpo) (*.net *.split)
[00:41:35] *** Quits: GreaseMonkey (greaser@user/greasemonkey) (*.net *.split)
[00:41:35] *** Quits: teiresias (~chris@blvuug/founder/teiresias) (*.net *.split)
[00:41:35] *** Quits: evhan (195cc081a6@2604:bf00:561:2000::118) (*.net *.split)
[00:41:35] *** Quits: mdhughes (~mdhughes@user/mdhughes) (*.net *.split)
[00:41:35] *** Quits: buhman (sid411355@user/buhman) (*.net *.split)
[00:41:36] *** Quits: chicken_m (~chickenru@2604:3d08:5684:3000::5fab) (*.net *.split)
[00:41:36] *** Quits: elflng (~elflng@5.28.137.182) (*.net *.split)
[00:41:36] *** Quits: j0ni (c79e08d4b1@2604:bf00:561:2000::2a) (*.net *.split)
[00:41:36] *** Quits: Kooda (~kooda@natsu.upyum.com) (*.net *.split)
[00:41:36] *** Quits: Andrew (andrew@andrewyu.org) (*.net *.split)
[00:41:36] *** Quits: wxallowed (~d4@151.51.155.155) (*.net *.split)
[00:41:36] *** Quits: vandusen (~nobody@static.131.93.47.78.clients.your-server.de) (*.net *.split)
[00:41:36] *** Quits: rgherdt__ (~rgherdt@2a01:598:d036:698b:4f59:ac7:3ad8:3320) (*.net *.split)
[00:41:37] *** Quits: curium (~curium@mail.clouded.monster) (*.net *.split)
[00:41:37] *** Quits: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de) (*.net *.split)
[00:41:37] *** Quits: DeeEff (~DeeEff@user/deeeff) (*.net *.split)
[00:41:37] *** Quits: alaricsp (~alaric@user/alaricsp) (*.net *.split)
[00:41:38] *** Quits: jackhill (~jackhill@kalessin.dragonsnail.net) (*.net *.split)
[00:41:38] *** Quits: Soni (~quassel@autistic.space) (*.net *.split)
[00:41:38] *** Quits: Techcable (~Techcable@168.235.93.147) (*.net *.split)
[00:41:39] *** Quits: Rue (~rue@2001-b011-1000-1c39-cdcc-c9c1-11c3-6370.dynamic-ip6.hinet.net) (*.net *.split)
[00:41:39] *** Quits: megane (~megane@chicken/developer/megane) (*.net *.split)
[00:41:39] *** Quits: jgart (16dd2205e4@irc.cheogram.com) (*.net *.split)
[00:41:39] *** Quits: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58) (*.net *.split)
[00:41:39] *** Quits: dieggsy (~dieggsy@2001:470:69fc:105::91f) (*.net *.split)
[00:41:39] *** Quits: siiky (~siiky@2001:8a0:ff52:4b00:d65f:f081:77d0:63d8) (*.net *.split)
[00:41:39] *** Quits: florz (nobody@rain.florz.de) (*.net *.split)
[00:41:39] *** Quits: wasamasa (~wasamasa@chicken/contributor/wasamasa) (*.net *.split)
[00:41:39] *** Quits: zerica (zerica@tilde.team) (*.net *.split)
[00:41:40] *** Quits: tazjin (~quassel@polyanka.tazj.in) (*.net *.split)
[00:41:40] *** Quits: jcowan (sid325434@ilkley.irccloud.com) (*.net *.split)
[00:41:40] *** Quits: dTal (~quassel@dragonbox/wizzard/dtal) (*.net *.split)
[00:41:40] *** Quits: m455 (~m455@user/m455) (*.net *.split)
[00:41:40] *** Quits: micro (~micro@user/micro) (*.net *.split)
[00:41:40] *** Quits: stee (~stee@mail.nixserve.net) (*.net *.split)
[00:41:40] *** Quits: Nilium (~sid200856@p01.sfo2.do.x.spiff.io) (*.net *.split)
[00:41:40] *** Quits: nyarmith (~nyarmith@pool-72-95-220-156.pitbpa.fios.verizon.net) (*.net *.split)
[00:41:40] *** Quits: mario-goulart (~user@chicken/developer/mario-goulart) (*.net *.split)
[00:41:41] *** Quits: pinpox (~pinpox@v2202101107577140883.nicesrv.de) (*.net *.split)
[00:41:41] *** Quits: ente` (~daemon@inferno.barfooze.de) (*.net *.split)
[00:41:41] *** Quits: gahr (~gahr@user/gahr) (*.net *.split)
[00:41:42] *** Quits: klm (root@2a01:7e01::f03c:91ff:fe3f:a1d6) (*.net *.split)
[00:41:42] *** Quits: citrons (~citrons@alt.mondecitronne.com) (*.net *.split)
[00:41:42] *** Quits: Lulu (~meow@vyos/developer/Lulu) (*.net *.split)
[00:41:42] *** Quits: zilti[m] (~ziltimatr@2001:470:69fc:105::16d0) (*.net *.split)
[00:41:43] *** Quits: matijja (~matijja@193.77.181.201) (*.net *.split)
[00:41:43] *** Quits: conjunctive (sid433686@id-433686.helmsley.irccloud.com) (*.net *.split)
[00:41:43] *** Quits: sjamaan (~sjamaan@chicken/developer/sjamaan) (*.net *.split)
[00:41:43] *** Quits: Corbin (~Corbin@c-73-67-140-116.hsd1.or.comcast.net) (*.net *.split)
[00:41:43] *** Quits: jjhoo (~jahakala@user/jjhoo) (*.net *.split)
[00:41:43] *** Quits: form_feed (~form_feed@user/f/x-7101985) (*.net *.split)
[00:41:43] *** Quits: choas (~lars@ppp-188-174-89-52.dynamic.mnet-online.de) (*.net *.split)
[00:41:43] *** Quits: ublx (~ublx@user/ublx) (*.net *.split)
[00:41:43] *** Quits: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at) (*.net *.split)
[00:41:44] *** Quits: siraben (~siraben@user/siraben) (*.net *.split)
[00:41:44] *** Quits: Irvise (~irvise@2001:470:69fc:105::84c) (*.net *.split)
[00:41:44] *** Quits: blackbeard (~barbanegr@2001:470:69fc:105::38c4) (*.net *.split)
[00:41:44] *** Quits: xaltsc (~xaltsc@user/xaltsc) (*.net *.split)
[00:41:44] *** Quits: judybot (~judybot@user/wasamasa/bot/judybot) (*.net *.split)
[00:41:44] *** Quits: pie_ (~pie_bnc@user/pie/x-2818909) (*.net *.split)
[00:41:44] *** Quits: aliasless (quassel@2001:19f0:6001:490f:9436:fd2d:3fc6:cfde) (*.net *.split)
[00:41:44] *** Quits: jcroisant (sid137329@user/jcroisant) (*.net *.split)
[00:41:44] *** Quits: ramrunner (~dsp@78.141.218.152) (*.net *.split)
[00:41:44] *** Quits: ioa_ (~ioa@2a01:4f8:211:1d09::) (*.net *.split)
[00:41:44] *** Quits: Lysandros (~Lysandros@user/lysandros) (*.net *.split)
[00:41:44] *** Quits: DeeEff_ (~deeeff@user/deeeff) (*.net *.split)
[00:41:45] *** Quits: DerGuteMoritz (~syn@asimov.bevuta.com) (*.net *.split)
[00:41:45] *** Quits: ecraven (~ecraven@user/nex) (*.net *.split)
[00:44:07] *** Joins: mangol (~mangol@lisp.fi)
[00:44:07] *** Joins: rnlf (~rnlf@mail.base13.de)
[00:44:07] *** Joins: Bunny351 (~Bunny351@85.88.17.217)
[00:44:07] *** Joins: Zipheir (~wcm@98.4.178.27)
[00:44:07] *** Joins: ASau (~user@lmpc.drb.insel.de)
[00:44:07] *** Joins: ecloud (~quassel@192.89.120.58)
[00:44:07] *** Joins: phoebos (~phoebos@kisslinux/phoebos)
[00:44:07] *** Joins: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net)
[00:44:07] *** Joins: Guest6340 (~cat@h-98-128-128-173.A351.priv.bahnhof.se)
[00:44:07] *** Joins: johnjaye (~pi@173.209.65.233)
[00:44:07] *** Joins: idstam (~idstam@185.176.246.116)
[00:44:07] *** Joins: mason (~mason@redhat/mason)
[00:44:07] *** Joins: Techcable (~Techcable@168.235.93.147)
[00:44:07] *** Joins: Soni (~quassel@autistic.space)
[00:44:07] *** Joins: jackhill (~jackhill@kalessin.dragonsnail.net)
[00:44:07] *** Joins: ecraven (~ecraven@user/nex)
[00:44:07] *** Joins: DerGuteMoritz (~syn@asimov.bevuta.com)
[00:44:07] *** Joins: DeeEff_ (~deeeff@user/deeeff)
[00:44:07] *** Joins: Lysandros (~Lysandros@user/lysandros)
[00:44:07] *** Joins: gahr (~gahr@user/gahr)
[00:44:07] *** Joins: ente` (~daemon@inferno.barfooze.de)
[00:44:07] *** Joins: pinpox (~pinpox@v2202101107577140883.nicesrv.de)
[00:44:07] *** Joins: alaricsp (~alaric@user/alaricsp)
[00:44:07] *** Joins: DeeEff (~DeeEff@user/deeeff)
[00:44:07] *** Joins: yosafbridge (~yosafbrid@static.38.6.217.95.clients.your-server.de)
[00:44:07] *** Joins: curium (~curium@mail.clouded.monster)
[00:44:07] *** Joins: rgherdt__ (~rgherdt@2a01:598:d036:698b:4f59:ac7:3ad8:3320)
[00:44:07] *** Joins: ioa_ (~ioa@2a01:4f8:211:1d09::)
[00:44:07] *** Joins: ramrunner (~dsp@78.141.218.152)
[00:44:07] *** Joins: jcroisant (sid137329@user/jcroisant)
[00:44:07] *** Joins: aliasless (quassel@2001:19f0:6001:490f:9436:fd2d:3fc6:cfde)
[00:44:07] *** Joins: pie_ (~pie_bnc@user/pie/x-2818909)
[00:44:07] *** Joins: judybot (~judybot@user/wasamasa/bot/judybot)
[00:44:07] *** Joins: xaltsc (~xaltsc@user/xaltsc)
[00:44:07] *** Joins: Irvise (~irvise@2001:470:69fc:105::84c)
[00:44:07] *** Joins: blackbeard (~barbanegr@2001:470:69fc:105::38c4)
[00:44:07] *** Joins: siraben (~siraben@user/siraben)
[00:44:07] *** Joins: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at)
[00:44:07] *** Joins: ublx (~ublx@user/ublx)
[00:44:07] *** Joins: Lulu (~meow@vyos/developer/Lulu)
[00:44:07] *** Joins: citrons (~citrons@alt.mondecitronne.com)
[00:44:07] *** Joins: mario-goulart (~user@chicken/developer/mario-goulart)
[00:44:07] *** Joins: nyarmith (~nyarmith@pool-72-95-220-156.pitbpa.fios.verizon.net)
[00:44:07] *** Joins: Nilium (~sid200856@p01.sfo2.do.x.spiff.io)
[00:44:07] *** Joins: micro (~micro@user/micro)
[00:44:07] *** Joins: stee (~stee@mail.nixserve.net)
[00:44:07] *** Joins: m455 (~m455@user/m455)
[00:44:07] *** Joins: dTal (~quassel@dragonbox/wizzard/dtal)
[00:44:07] *** Joins: jcowan (sid325434@ilkley.irccloud.com)
[00:44:33] *** Joins: GreaseMonkey (greaser@user/greasemonkey)
[00:44:33] *** Joins: teiresias (~chris@blvuug/founder/teiresias)
[00:44:33] *** Joins: evhan (195cc081a6@2604:bf00:561:2000::118)
[00:44:33] *** Joins: mdhughes (~mdhughes@user/mdhughes)
[00:44:33] *** Joins: buhman (sid411355@user/buhman)
[00:44:33] *** Joins: Andrew (andrew@andrewyu.org)
[00:44:33] *** Joins: chicken_m (~chickenru@2604:3d08:5684:3000::5fab)
[00:44:33] *** Joins: elflng (~elflng@5.28.137.182)
[00:44:33] *** Joins: j0ni (c79e08d4b1@2604:bf00:561:2000::2a)
[00:44:33] *** Joins: Kooda (~kooda@natsu.upyum.com)
[00:44:33] *** Joins: wxallowed (~d4@151.51.155.155)
[00:44:33] *** Joins: vandusen (~nobody@static.131.93.47.78.clients.your-server.de)
[00:44:48] *** Joins: Rue (~rue@2001-b011-1000-1c39-cdcc-c9c1-11c3-6370.dynamic-ip6.hinet.net)
[00:44:48] *** Joins: megane (~megane@chicken/developer/megane)
[00:44:49] *** Joins: jgart (16dd2205e4@irc.cheogram.com)
[00:44:49] *** Joins: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58)
[00:44:49] *** Joins: dieggsy (~dieggsy@2001:470:69fc:105::91f)
[00:44:49] *** Joins: siiky (~siiky@2001:8a0:ff52:4b00:d65f:f081:77d0:63d8)
[00:44:49] *** Joins: florz (nobody@rain.florz.de)
[00:44:49] *** Joins: wasamasa (~wasamasa@chicken/contributor/wasamasa)
[00:44:49] *** Joins: zerica (zerica@tilde.team)
[00:44:49] *** Joins: tazjin (~quassel@polyanka.tazj.in)
[00:45:01] *** Quits: blackbeard (~barbanegr@2001:470:69fc:105::38c4) (Ping timeout: 250 seconds)
[00:45:02] *** Quits: DeeEff_ (~deeeff@user/deeeff) (Ping timeout: 240 seconds)
[00:45:02] *** Joins: samth (sid14502@id-14502.ilkley.irccloud.com)
[00:45:02] *** Quits: evhan[m] (~evhanfold@2001:470:69fc:105::33e3) (Ping timeout: 240 seconds)
[00:45:02] *** Quits: Helios (~dwaglemat@2001:470:69fc:105::5f8) (Ping timeout: 240 seconds)
[00:45:17] *** Joins: zilti[m] (~ziltimatr@2001:470:69fc:105::16d0)
[00:45:17] *** Joins: matijja (~matijja@193.77.181.201)
[00:45:17] *** Joins: conjunctive (sid433686@id-433686.helmsley.irccloud.com)
[00:45:17] *** Joins: sjamaan (~sjamaan@chicken/developer/sjamaan)
[00:45:17] *** Joins: Corbin (~Corbin@c-73-67-140-116.hsd1.or.comcast.net)
[00:45:17] *** Joins: jjhoo (~jahakala@user/jjhoo)
[00:45:17] *** Joins: form_feed (~form_feed@user/f/x-7101985)
[00:45:17] *** Joins: choas (~lars@ppp-188-174-89-52.dynamic.mnet-online.de)
[00:45:19] *** Quits: siraben (~siraben@user/siraben) (Max SendQ exceeded)
[00:45:21] *** Quits: dieggsy (~dieggsy@2001:470:69fc:105::91f) (Ping timeout: 245 seconds)
[00:45:25] *** Quits: Irvise (~irvise@2001:470:69fc:105::84c) (Ping timeout: 250 seconds)
[00:45:46] *** Quits: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58) (Ping timeout: 245 seconds)
[00:46:15] *** Quits: zilti[m] (~ziltimatr@2001:470:69fc:105::16d0) (Ping timeout: 268 seconds)
[00:51:44] *** Quits: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net) (Quit: ZZZzzz…)
[00:58:29] *** Joins: klm (root@2a01:7e01::f03c:91ff:fe3f:a1d6)
[00:59:13] *** Joins: Helios (~dwaglemat@2001:470:69fc:105::5f8)
[01:01:42] *** Joins: evhan[m] (~evhanfold@2001:470:69fc:105::33e3)
[01:03:14] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[01:34:17] *** Quits: rgherdt__ (~rgherdt@2a01:598:d036:698b:4f59:ac7:3ad8:3320) (Ping timeout: 240 seconds)
[01:34:40] *** Joins: blackbeard (~barbanegr@2001:470:69fc:105::38c4)
[01:36:42] *** Joins: rgherdt (~rgherdt@2a01:598:b1b2:f0d:4e46:754d:1f4e:6c59)
[01:39:53] *** Joins: rgherdt_ (~rgherdt@tmo-085-242.customers.d1-online.com)
[01:42:17] *** Quits: rgherdt (~rgherdt@2a01:598:b1b2:f0d:4e46:754d:1f4e:6c59) (Ping timeout: 240 seconds)
[01:43:35] *** Joins: dieggsy (~dieggsy@2001:470:69fc:105::91f)
[01:44:48] *** Joins: siraben (~siraben@user/siraben)
[01:44:53] *** Joins: Irvise (~irvise@2001:470:69fc:105::84c)
[01:45:42] *** Joins: dlozeve[m] (~dlozevema@2001:470:69fc:105::1:1c58)
[01:47:39] *** Joins: rgherdt__ (~rgherdt@2a01:598:d03c:ef11:9e18:72c6:4634:55ef)
[01:50:17] *** Quits: rgherdt_ (~rgherdt@tmo-085-242.customers.d1-online.com) (Ping timeout: 240 seconds)
[01:50:54] *** Joins: rgherdt_ (~rgherdt@2a01:598:b1af:b926:5f9f:a4b1:97d1:4aea)
[01:52:37] *** Quits: rgherdt__ (~rgherdt@2a01:598:d03c:ef11:9e18:72c6:4634:55ef) (Ping timeout: 240 seconds)
[01:53:56] *** Joins: rgherdt__ (~rgherdt@2a01:598:b1a9:b031:f985:fb0b:1e5a:81f3)
[01:55:51] *** Quits: rgherdt_ (~rgherdt@2a01:598:b1af:b926:5f9f:a4b1:97d1:4aea) (Ping timeout: 250 seconds)
[01:56:08] *** Joins: zilti[m] (~ziltimatr@2001:470:69fc:105::16d0)
[01:56:52] *** Joins: rgherdt_ (~rgherdt@2a01:598:b1b1:c2df:de86:9a83:dbc:738f)
[01:59:43] *** Quits: rgherdt__ (~rgherdt@2a01:598:b1a9:b031:f985:fb0b:1e5a:81f3) (Ping timeout: 256 seconds)
[02:02:07] *** Quits: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at) (Ping timeout: 250 seconds)
[02:07:47] <siiky> hey there! anyone has any idea how to create an identifier in a macro from given parameters? (don't know the correct terminology) e.g. from (my-macro (a b c)) I'd like to define a procedure named a/b/c (the macro will expand to (among other things) (define (a/b/c ...) ...))
[02:08:25] *** Quits: rgherdt_ (~rgherdt@2a01:598:b1b1:c2df:de86:9a83:dbc:738f) (Ping timeout: 250 seconds)
[02:11:41] <wasamasa> not with syntax-rules, that's for sure
[02:12:13] <siiky> oh shiz that's the only one I kinda know how to use /o\
[02:12:40] <wasamasa> the correct terminology is hygiene and the lack thereof
[02:13:03] <wasamasa> since you want to selectively break hygiene
[02:14:18] <siiky> I've heard those terms before, I jsut don't know how to put them in practice
[02:14:47] <wasamasa> look at IR/ER macros, maybe at eggs wrapping/using them
[02:14:49] <siiky> would it be possible with syntax-case?
[02:14:54] <siiky> hm ok
[02:15:01] <wasamasa> well, yes, but syntax-case is a R6RS invention
[02:15:26] <siiky> ah I don't know where all these things come from :p
[02:15:28] <wasamasa> you'd have to port it, which is a non-trivial achievement
[02:15:48] <siiky> yeah, no I just heard of it and assumed it was everywhere
[02:15:51] <wasamasa> there have been efforts to standardize it in the current R7RS-large docket
[02:18:49] <siiky> thanks btw wasamasa !
[02:22:31] *** Joins: DeeEff_ (~deeeff@user/deeeff)
[02:28:30] <siiky> wasamasa: do you happen to know if ck-macros has ways to do it? started RTFM but not understanding much so far, would need a bit more time to see the light... would help if I knew beforehand not to waste my time :)
[02:43:00] <Bunny351> siiky: try er-macro-transformer, it has anything you need, once you grok the mechanism
[02:48:15] *** Joins: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net)
[02:48:44] <johnjaye> googling that leads me to a paper by Felleison and Friedman called "Control Operators, the SECD-machine, and the Lambda Calculus"
[02:56:47] *** Quits: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net) (Quit: ZZZzzz…)
[03:02:21] *** Joins: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net)
[03:34:23] <siiky> Bunny351: thanks, will do!
[03:34:58] <siiky> (just not today)
[03:35:08] * siiky goes to sleep
[03:42:40] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[04:19:17] <jcroisant> siiky: I wrote the ck-macros egg and I would not recommend it for most practical purposes. It is mostly just an experiment in pushing the boundaries of what syntax-rules can do. er-macro-transformer or ir-macro-transformer are easier to understand and better for what you want.
[04:22:11] <johnjaye> ah that's cool. i read the description and thought the author was Oleg Kiselyov
[04:22:22] <johnjaye> my mistake!
[04:25:21] <jcroisant> Oleg invented the core of it, I just made the egg and wrote a bunch of additional macros for it
[04:41:57] <elflng> jcowan: as stated repeatedly, the solution that im writing as a poc doesnt require actual vector size changing nor copying.
[04:42:06] <elflng> it should be perfectly portable 
[04:42:15] <elflng> its really trivial tbh
[04:44:28] <elflng> im a bit slammed for work/home atm after an avalanche so it may be a day or two before i can show
[05:17:56] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 256 seconds)
[05:21:28] *** Joins: s-liao (~s-liao@101.86.96.21)
[06:29:03] *** Quits: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net) (Quit: ZZZzzz…)
[07:23:01] *** Joins: johnjaye (~pi@173.209.65.233)
[08:33:53] *** Joins: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net)
[08:43:06] *** Quits: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net) (Quit: ZZZzzz…)
[09:00:59] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[09:07:28] *** Joins: s-liao (~s-liao@101.86.96.21)
[09:29:19] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[09:44:47] *** Joins: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net)
[09:58:46] *** Quits: shawnw (~shawn_w@c-73-225-121-73.hsd1.wa.comcast.net) (Quit: Leaving)
[10:24:26] *** Quits: chicken_m (~chickenru@2604:3d08:5684:3000::5fab) (Quit: Konversation terminated!)
[10:28:56] *** Joins: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at)
[10:30:16] *** Joins: chicken_m (~chickenru@2604:3d08:5684:3000::5fab)
[10:55:52] *** Quits: samth (sid14502@id-14502.ilkley.irccloud.com) (*.net *.split)
[10:55:52] *** Quits: idstam (~idstam@185.176.246.116) (*.net *.split)
[10:55:52] *** Quits: Guest6340 (~cat@h-98-128-128-173.A351.priv.bahnhof.se) (*.net *.split)
[10:55:52] *** Quits: phoebos (~phoebos@kisslinux/phoebos) (*.net *.split)
[10:55:52] *** Quits: ecloud (~quassel@192.89.120.58) (*.net *.split)
[10:55:52] *** Quits: ASau (~user@lmpc.drb.insel.de) (*.net *.split)
[10:55:52] *** Quits: Zipheir (~wcm@98.4.178.27) (*.net *.split)
[10:55:52] *** Quits: Bunny351 (~Bunny351@85.88.17.217) (*.net *.split)
[10:55:52] *** Quits: rnlf (~rnlf@mail.base13.de) (*.net *.split)
[10:55:52] *** Quits: mangol (~mangol@lisp.fi) (*.net *.split)
[10:55:52] *** Quits: mason (~mason@redhat/mason) (*.net *.split)
[10:58:07] *** Joins: mason (~mason@redhat/mason)
[10:58:07] *** Joins: idstam (~idstam@185.176.246.116)
[10:58:07] *** Joins: Guest6340 (~cat@h-98-128-128-173.A351.priv.bahnhof.se)
[10:58:07] *** Joins: phoebos (~phoebos@kisslinux/phoebos)
[10:58:07] *** Joins: ecloud (~quassel@192.89.120.58)
[10:58:07] *** Joins: ASau (~user@lmpc.drb.insel.de)
[10:58:07] *** Joins: Zipheir (~wcm@98.4.178.27)
[10:58:07] *** Joins: Bunny351 (~Bunny351@85.88.17.217)
[10:58:07] *** Joins: rnlf (~rnlf@mail.base13.de)
[10:58:07] *** Joins: mangol (~mangol@lisp.fi)
[10:58:07] *** Joins: samth (sid14502@id-14502.ilkley.irccloud.com)
[11:04:32] *** Quits: Andrew (andrew@andrewyu.org) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[11:04:45] *** Joins: Andrew_ (andrew@andrewyu.org)
[11:13:49] *** Quits: idstam (~idstam@185.176.246.116) (Ping timeout: 256 seconds)
[11:15:43] *** Joins: idstam (~idstam@185.176.247.102)
[11:29:14] <wasamasa> siiky: I thought of something like https://wiki.call-cc.org/eggref/5/procedural-macros
[11:31:53] <wasamasa> http://wiki.call-cc.org/explicit-renaming-macros
[11:36:05] *** Joins: rgherdt_ (~rgherdt@2a01:598:d036:eda0:56ad:c143:9a9a:4cb6)
[11:49:07] *** Joins: rgherdt__ (~rgherdt@2a01:598:d03d:8b4:2ee3:b766:719e:5183)
[11:51:41] *** Quits: rgherdt_ (~rgherdt@2a01:598:d036:eda0:56ad:c143:9a9a:4cb6) (Ping timeout: 250 seconds)
[12:19:06] *** Joins: s-liao (~s-liao@101.86.96.21)
[12:30:51] *** Joins: tasuki (~tasuki@user-94-254-224-8.play-internet.pl)
[12:33:03] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[12:48:01] *** Joins: s-liao (~s-liao@101.86.96.21)
[12:49:33] *** Joins: crumpo (~crumpo@user/crumpo)
[12:52:22] *** Andrew_ is now known as Andrew
[13:09:41] *** Joins: ublx (~ublx@user/ublx)
[13:10:19] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[13:12:35] *** Quits: tasuki (~tasuki@user-94-254-224-8.play-internet.pl) (Ping timeout: 256 seconds)
[13:19:50] *** Joins: s-liao (~s-liao@101.86.96.21)
[13:25:57] *** Quits: rgherdt__ (~rgherdt@2a01:598:d03d:8b4:2ee3:b766:719e:5183) (Ping timeout: 256 seconds)
[13:41:20] *** Quits: Techcable (~Techcable@168.235.93.147) (Remote host closed the connection)
[13:42:53] *** Joins: Techcable (~Techcable@168.235.93.147)
[13:57:55] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[14:00:12] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:240f:2de:4550:ff01)
[14:00:12] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:240f:2de:4550:ff01) (Changing host)
[14:00:12] *** Joins: skapata (~Skapata@user/skapata)
[14:26:50] *** Joins: rgherdt (~rgherdt@tmo-085-175.customers.d1-online.com)
[14:28:26] *** Joins: s-liao (~s-liao@101.86.96.21)
[14:44:35] *** Joins: rgherdt_ (~rgherdt@2a01:598:b1ac:96ef:8db7:8ec2:ed09:8b1a)
[14:48:21] *** Quits: rgherdt (~rgherdt@tmo-085-175.customers.d1-online.com) (Ping timeout: 256 seconds)
[14:53:27] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[14:54:37] *** Joins: rgherdt__ (~rgherdt@2a01:598:d03e:28da:8819:d411:42e8:e2fb)
[14:57:11] *** Quits: rgherdt_ (~rgherdt@2a01:598:b1ac:96ef:8db7:8ec2:ed09:8b1a) (Ping timeout: 256 seconds)
[15:01:23] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[15:19:06] *** Joins: rgherdt_ (~rgherdt@2a01:598:d032:459f:e0f8:4312:91d7:f237)
[15:22:07] *** Quits: rgherdt__ (~rgherdt@2a01:598:d03e:28da:8819:d411:42e8:e2fb) (Ping timeout: 256 seconds)
[15:34:15] *** Quits: johnjaye (~pi@173.209.65.233) (Ping timeout: 256 seconds)
[15:57:02] *** Joins: s-liao (~s-liao@101.86.96.21)
[16:08:49] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[16:09:20] *** Joins: s-liao (~s-liao@101.86.96.21)
[16:21:57] *** Quits: rgherdt_ (~rgherdt@2a01:598:d032:459f:e0f8:4312:91d7:f237) (Ping timeout: 240 seconds)
[16:38:02] *** Joins: rgherdt (~rgherdt@2a01:598:d032:459f:e0f8:4312:91d7:f237)
[16:40:06] *** Joins: rgherdt_ (~rgherdt@2a01:598:d037:6306:6a90:aa99:b860:ce3d)
[16:42:53] *** Quits: rgherdt (~rgherdt@2a01:598:d032:459f:e0f8:4312:91d7:f237) (Ping timeout: 250 seconds)
[16:46:47] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[16:53:37] *** Joins: rgherdt__ (~rgherdt@2a01:598:d03d:7413:d93:cf16:2283:cb2a)
[16:53:55] *** Joins: s-liao (~s-liao@101.86.96.21)
[16:56:19] *** Quits: rgherdt_ (~rgherdt@2a01:598:d037:6306:6a90:aa99:b860:ce3d) (Ping timeout: 250 seconds)
[17:09:27] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[17:41:19] <vandusen> "zilti" pasted "no title" http://paste.call-cc.org/paste?id=d8d71670d69cfcce31dbbcb172c3829dff900c5a
[17:41:28] <zilti[m]> I'm somewhat stuck with my ffi issue, I tried to gather as much info as possible, it's probably something small - maybe someone can take a quick glance?
[17:48:09] <wasamasa> whenever you do callbacks, you need to use the safe variants of foreign-lambda
[17:48:27] <wasamasa> scheme callbacks that is
[17:50:57] <zilti[m]> The called C function itself does not call the callback, however. It only stores it
[17:51:30] <zilti[m]> The callback is done from the event loop, which I do call through a foreign-safe-lambda. I tried changing this function mentioned in the paste into a foreign-safe-lambda, too, thinking that maybe the C function does some weird magic to verify the callback, but it changed nothing
[17:51:46] *** Joins: johnjaye (~pi@173.209.65.233)
[17:52:26] <wasamasa> hm
[17:52:30] <wasamasa> no idea then
[17:54:31] <zilti[m]> Aw :/ Thanks nonetheless for having looked at it1
[18:06:05] *** Quits: rgherdt__ (~rgherdt@2a01:598:d03d:7413:d93:cf16:2283:cb2a) (Ping timeout: 250 seconds)
[18:50:58] <Bunny351> zilti: is the C++ function actually invoked? i.e. does the crash happen in the glue code or on the foreign side?
[18:52:55] <zilti[m]> Bunny351: hard to say really... I mean the stack trace suggests it happens in Chicken (it has ##sys#make-c-string as the last entry) but at the same time it is a segmentation violation, and I am not sure if that can be triggered in Chicken without some serious fuckery
[18:53:24] <jcroisant> zilti[m]: Looking at your helloworld.scm, I think you need to pass (location windowCloseCallback) instead of windowCloseCallback
[18:54:14] <jcroisant> windowCloseCallback will be a Scheme procedure wrapping the external function, (location windowCloseCallback) will give you a pointer to the C version of the function
[18:54:18] <zilti[m]> I'm gonna try that jcroisant. My last try was `(foreign-value windowCloseCallback c-pointer)` but that one didn't work either
[18:55:06] <zilti[m]> ...nope, same issue. Using `location` unfortunately also doesn't help
[18:55:40] <zilti[m]> Maybe I have to manually cast the pointer passed into C to the "type" the C function expects?
[18:56:13] <Bunny351> can you set a breakpoint in the C++ function?
[18:56:32] <Bunny351> the make-c-string is just the last call, not necessarily the location
[18:57:23] <zilti[m]> Ahh no, it does not want a pointer, but directly the function! So I have to deref it before passing it in
[18:57:59] <zilti[m]> I mean I guess I could set a breakpoint in the C function, but I haven't touched a C debugger in about a decade
[18:58:53] <zilti[m]> The typedef is `typedef void (DOS_CALL *DosQObjectConnectLambdaCallback)(void* callbackData, int argc, DosQVariant **argv);`
[19:01:03] <Bunny351> you could try to replace the C function name with a handwritten C function and let it print sth, then you can see whether the foreign call actually takes place
[19:02:42] <zilti[m]> I just edited the original :P compiling now...
[19:05:04] <jcroisant> zilti[m]: That typedef is describing a function pointer, so yes you want to pass the pointer. C syntax is weird.
[19:05:10] <zilti[m]> printf should do the job, right?
[19:08:26] <zilti[m]> Okay, the C function is indeed called, but it never reaches the `return` statement
[19:35:38] <Bunny351> so the C function crashes?
[19:43:23] <zilti[m]> Yes. Or rather, whatever I am doing crashed Qt. I figured it out now though
[19:43:51] <zilti[m]> I have to write Signal and Slot names in a special way (where using the SIGNAL macro helps)
[19:52:49] <zilti[m]> So instead of giving any kind of error message, it just segfaults and crashes. So much for good software design, Qt company...
[20:11:44] <zilti[m]> Nice. It works. Callbacks work, too. Unevicting data also works.
[20:22:25] <vandusen> [eggs repo (r41063, by Zipheir)] Note SRFI 224 support.
[20:24:18] *** Joins: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net)
[20:28:17] <wasamasa> yay
[20:28:28] <wasamasa> one step forward to one GUI toolkit to rule them all :D
[20:28:33] <Zipheir> What module provides CHICKEN's higher-order procedure notation?  i.e. the (define ((foo x) y) ...) stuff.
[20:32:38] <vandusen> [eggs repo (r41064, by Zipheir)] Note SRFI 209 support.
[20:36:13] <vandusen> [eggs repo (r41065, by Zipheir)] Note core SRFI 219 support. TODO: Citation needed.
[20:48:35] <zilti[m]> The biggest hurdle now is to convert `void**` into a list of pointers
[20:49:31] <Bunny351> Zipheir: that's built-in, so to speak, on the macroexpansion level
[20:49:57] <Bunny351> zilti: pointer-vectors?
[20:50:18] *** Joins: crumpy (~crumpo@user/crumpo)
[20:50:45] *** Quits: crumpo (~crumpo@user/crumpo) (Read error: Connection reset by peer)
[20:51:18] <zilti[m]> Bunny351: yes, but since I can't have pointer-vector as a return type and instead have `(c-pointer c-pointer)` I am not really sure how to proceed from there. I do have the number of pointers in the array though.
[20:59:29] <Bunny351> ok, then you have to either build the ptr-list in C or have a scheme function that does this.
[21:00:36] <Bunny351> with a tiny foreign-lambda* as helper to index into the ptr-array and extract each ptr
[21:02:05] <zilti[m]> Ah so basically a foreign-lambda* that does `C_return((&array)[index])`?
[21:02:23] <zilti[m]> Sounds simple enough, yes
[21:17:41] <Zipheir> Bunny351: Thanks.
[21:18:42] <Zipheir> Bunny351: Is it documented somewhere?  I'm updating the SRFI support page, since that notation has recently been SRFIfied.
[21:31:22] *** Quits: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net) (Quit: ZZZzzz…)
[21:32:41] <Bunny351> Zipheir: http://api.call-cc.org/5/doc/scheme#sec:Definitions
[21:34:16] *** Quits: crumpy (~crumpo@user/crumpo) (Quit: Buh bye)
[21:38:11] <Zipheir> Bunny351: Thanks!
[21:45:29] <vandusen> [eggs repo (r41066, by Zipheir)] Citation link for SRFI 219 support.
[21:59:13] *** Joins: rgherdt (~rgherdt@2a01:598:d03d:7413:d93:cf16:2283:cb2a)
[22:06:06] *** Joins: rgherdt_ (~rgherdt@2a01:598:b1af:727c:924c:f30e:7ba8:4c4c)
[22:08:37] *** Quits: rgherdt (~rgherdt@2a01:598:d03d:7413:d93:cf16:2283:cb2a) (Ping timeout: 240 seconds)
[22:11:07] *** Joins: rgherdt__ (~rgherdt@tmo-084-1.customers.d1-online.com)
[22:12:23] <vandusen> [eggs] Error fetching CHICKEN 5 .release-info file for the following eggs: gochan
[22:13:14] *** Joins: rgherdt (~rgherdt@2a01:598:b1b0:a856:30ff:e601:11c2:7c67)
[22:13:37] *** Quits: rgherdt_ (~rgherdt@2a01:598:b1af:727c:924c:f30e:7ba8:4c4c) (Ping timeout: 240 seconds)
[22:16:15] *** Quits: rgherdt__ (~rgherdt@tmo-084-1.customers.d1-online.com) (Ping timeout: 256 seconds)
[22:16:16] *** Joins: rgherdt_ (~rgherdt@tmo-117-2.customers.d1-online.com)
[22:18:07] *** Joins: rgherdt__ (~rgherdt@2a01:598:b1a4:c639:772d:26a5:3189:a1)
[22:18:37] *** Quits: rgherdt (~rgherdt@2a01:598:b1b0:a856:30ff:e601:11c2:7c67) (Ping timeout: 256 seconds)
[22:20:28] *** Joins: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net)
[22:21:42] *** Quits: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net) (Client Quit)
[22:21:55] *** Quits: rgherdt_ (~rgherdt@tmo-117-2.customers.d1-online.com) (Ping timeout: 256 seconds)
[22:23:03] *** Quits: rgherdt__ (~rgherdt@2a01:598:b1a4:c639:772d:26a5:3189:a1) (Ping timeout: 250 seconds)
[23:49:33] *** Joins: klovett (~klovett@c-67-188-101-196.hsd1.ca.comcast.net)
[23:50:56] *** Joins: wdouglass (~user@dynamic-acs-24-154-243-141.zoominternet.net)
[23:51:29] <wdouglass> hello all. I'm trying to connect to slack using the ws-client egg. When i connect, i get "400 Bad Request"
[23:51:50] <wdouglass> do i need to add an authorization header with my token? how do i debug this?
