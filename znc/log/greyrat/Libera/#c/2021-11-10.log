[00:00:07] <De4nWhit3> The author was trying to showcase how typedef can shorten writing code and make it more readable. floatcomplex
[00:00:12] <itrxly> shut up
[00:01:01] <floatcomplex> it doesn't make it more readable though
[00:01:29] <tyzoid> It does, though
[00:01:47] <fizzie> I don't know, I do prefer lines 4 + 9 over line 8. Well, would if the name was something a little better than `fv`.
[00:01:59] <tyzoid> It's a function that returns a function pointer, and takes as parameters an int and a function pointer.
[00:02:38] <floatcomplex> if it made it more readable, we would by definition not be talking about it right now
[00:02:53] <fizzie> I don't think that follows.
[00:04:59] *** Parts: pi0 (~default@user/pi0) ()
[00:04:59] <De4nWhit3> tyzoid and fizzie what does the (int) at the end of line 14 mean? 
[00:05:01] <De4nWhit3> https://onlinegdb.com/wfCUnh-PT
[00:05:40] <tyzoid> De4nWhit3: That's the parameters to the function
[00:05:47] <fizzie> It's the first parameter of the function type that a pointer to is being returned.
[00:06:34] <tyzoid> It's the same as any other function declaration, except it's not
[00:06:41] <tyzoid> You've got three sections
[00:06:45] <tyzoid> return type
[00:06:48] <tyzoid> function name
[00:06:51] <tyzoid> and function parameters
[00:07:05] <tyzoid> The return type here is a function pointer
[00:07:06] <candide> tyzoid: Please stop abusing the enter key. Feel free to type longer messages and to take a moment to think of anything else to say before you hit that enter key.
[00:07:25] <tyzoid> lol
[00:07:38] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Quit: Client closed)
[00:07:54] <tyzoid> In this case, it's kinda mixed in because it's a function pointer return
[00:07:54] <De4nWhit3> tyzoid 
[00:08:03] <fizzie> The way the declaration syntax of a function returning a pointer to a function to "split apart" is the main reason why people typedef function types (or, for some reason, more commonly, function pointer types).
[00:08:23] *** Quits: Mach` (~Mach@86.121.208.210) (Ping timeout: 246 seconds)
[00:08:51] <De4nWhit3> return:  *, function name: signal, param1: int, param2: void (*)(int) what on earth: (int);
[00:09:06] <fizzie> The parameter for the function pointer that's being returned, like we said.
[00:09:09] <fizzie> `void (*signal(<...>))(int)` declares the identifier `signal` as a function with the parameter list <...>, that returns a value of type `void (*)(int)`, a pointer to a function that takes an int and returns void.
[00:09:46] *** Joins: pucara (~i@181.92.84.24)
[00:10:05] <fizzie> In other words, the last `(int)` in the declaration is part of the return type of the function.
[00:11:15] <fizzie> Just like you'd write a function that takes no parameters but returns an `int (*)[3]` -- a pointer to a 3-element array of ints -- as `int (*func(void))[3];`
[00:11:35] <fizzie> ,english int (*func(void))[3];
[00:11:36] <candide> fizzie: Declare `func` as a function taking no arguments and returning pointer to an array of 3 elements of i​nt.
[00:11:37] <fizzie> (Just checking.)
[00:14:58] <De4nWhit3> So you can declare a function in brackets (char myfunc(void))(bool) that will return a bool? fizzie
[00:17:11] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 245 seconds)
[00:19:53] *** Parts: itrxly (~itrxly@204.116.28.65) ()
[00:20:09] *** Quits: ko (~i.am@user/marlboro) (Quit: https://gogag.000webhostapp.com/?share=100001205)
[00:22:06] <fizzie> No.
[00:22:22] <fizzie> It's not *the* return type, it's just part of it.
[00:22:47] <fizzie> In `char (*myfunc(void))(bool)`, the return type of `myfunc` is `char (*)(bool)`.
[00:23:50] *** Joins: mahmutov_ (~mahmutov@37.155.56.185)
[00:23:50] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com) (Read error: Connection reset by peer)
[00:24:10] <De4nWhit3> @fiz
[00:24:29] *** Quits: mahmutov (~mahmutov@37.155.47.58) (Ping timeout: 246 seconds)
[00:24:49] <De4nWhit3> fizzie gosh, this is puzzling. pointer to bool?
[00:25:05] <fizzie> No, a pointer to a function that accepts a single parameter of type `bool`, and returns a `char`.
[00:25:12] *** Joins: Viewday6 (~Viewday@user/viewday)
[00:26:00] <De4nWhit3> @_@
[00:26:28] *** Joins: cousteau (~cousteau@user/cousteau)
[00:26:44] <De4nWhit3> So the return type is a pointer, to a function, that accepts a single param of type bool, and returns a char? fizzie
[00:26:50] <fizzie> Yes.
[00:27:33] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[00:27:33] *** Viewday6 is now known as Viewday
[00:28:45] <cousteau> type declarations, amiright?
[00:28:48] <De4nWhit3> Gosh darnit that is confusing.
[00:29:13] <cousteau> If you think a type declaration is confusing you can always "cheat" by creating intermediate typedefs
[00:29:13] *** Joins: sord937_ (~sord937@gateway/tor-sasl/sord937)
[00:29:45] <cousteau> for example, it is easy to declare a function that accepts a single param of type bool, and returns a char
[00:30:00] <cousteau> (let's call it "callback")
[00:30:01] <De4nWhit3> Oh cousteau I think I better not. I am pretty new to C. Just started yester week.
[00:30:01] <fizzie> For the record, this all started with typedefs.
[00:30:30] <cousteau> char callback(bool);
[00:30:54] <cousteau> then you add `typedef` and then instead of a function, you're declaring a type
[00:30:58] <cousteau> typedef char callback(bool);
[00:31:22] <fizzie> cousteau: Ah, but that's allegedly less readable.
[00:31:37] <cousteau> now "callback" means "function that takes a bool and returns a char"
[00:32:00] <cousteau> and then you do   callback *whatever();   and now whatever is a function that returns a pointer to a "callback"
[00:32:06] *** Joins: ben222 (~ben@2a05:f6c7:696:0:542b:b470:fea:a96)
[00:32:09] <cousteau> fizzie: but more writable
[00:32:33] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 276 seconds)
[00:32:42] <cousteau> the other option is to figure out how to grab "whatever" and convert it into something that is of type char
[00:33:13] *** Quits: derjanni (~textual@p5ddaffbc.dip0.t-ipconnect.de) (Quit: Textual IRC Client: www.textualapp.com)
[00:33:20] <De4nWhit3> Thank you cousteau
[00:33:30] <g0z> C23 needs to introduce the "whatever" type
[00:33:51] <supakeen> any func(any *thing)
[00:34:39] <cousteau> whatever returns a pointer to function taking bool, so whatever() IS a pointer to function, so *whatever() is a function, so (*whatever())(bool) is a char
[00:34:49] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 268 seconds)
[00:34:51] <cousteau> char (*whatever())(bool);
[00:34:59] <cousteau> ...did I get it right?
[00:35:37] <fizzie> Yeah.
[00:36:02] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[00:36:51] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[00:36:53] <cousteau> yayy
[00:36:53] <tyzoid> g0z  "the 'whatever' type" - oh, you mean `void *`?
[00:37:06] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[00:37:08] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[00:37:09] <cousteau> maybe more like C++'s `auto`
[00:37:22] <De4nWhit3> cousteau i tried running the code but it bugs.
[00:37:26] *** Quits: ben222 (~ben@2a05:f6c7:696:0:542b:b470:fea:a96) (Quit: Leaving)
[00:37:35] <cousteau> though `void *` is a good candidate for "the whatever type", yes
[00:37:36] <fizzie> Though I think in this case the question originally was for understanding an existing declaration rather than writing the one you want, in which case that argument kind of goes the other way around.
[00:37:48] <cousteau> fizzie: oh right
[00:37:54] <fizzie> As in, you start from `char (*myfunc(void))(bool)`, which means an expression like `(*myfunc())(true)` is a `char`, so `(*myfunc())` is then a function that takes a bool and returns a char, so `myfunc()` must be a pointer to such a function, and `myfunc` itself must be a function that takes no parameters and returns 
[00:37:59] <fizzie> ..that thing.
[00:38:07] <fizzie> (Where did the last bit of that comment go?)
[00:38:15] <floatcomplex> i thought it was a question about understanding typedefs
[00:38:28] <tyzoid> It was, but the discussion circled several times
[00:38:36] <floatcomplex> i opened it and saw three lines i was being asked about that all involved typedefa
[00:39:41] <fizzie> Well, if you get right down to it, I think the most confusion was about why you'd have three equivalent declarations in the first place.
[00:39:54] <fizzie> (Which I think was just for the purposes of illustration.)
[00:39:55] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[00:40:01] *** Quits: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 250 seconds)
[00:40:15] <fizzie> Maybe books should limit themselves to examples that are, in an of themselves, plausible pieces of code that could exist.
[00:41:00] <constxd> or maybe readers should git gud
[00:41:28] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com)
[00:41:50] <tyzoid> Or have some sort of comment or explanation
[00:42:08] <tyzoid> In my documentation, I usually split that sort of example into multiple code snippets
[00:44:15] *** Quits: hexteex (~hexteex@gateway/tor-sasl/hexteex) (Ping timeout: 276 seconds)
[00:46:09] *** Joins: seninha (~seninha@user/seninha)
[00:46:31] *** Quits: aliosablack (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374) (Ping timeout: 250 seconds)
[00:49:18] <floatcomplex> ,grab fizzie confusion
[00:49:19] <candide> Quote grabbed: 2124: <f​izzie> Well, if you get right down to it, I think the most confusion was about why you'd have three equivalent declarations in the first place.
[00:49:27] <floatcomplex> wait
[00:49:30] <floatcomplex> ,undo grab
[00:49:30] <candide> There are no undos available for [#c] .
[00:49:46] <floatcomplex> do i have to swear at candide in all caps
[00:49:58] <floatcomplex> i wanted to grab the limit themselves quote
[00:50:01] <floatcomplex> that's the good one
[00:50:23] <cousteau> fizzie: no fictitious function declaration can be more complex than the real declaration for signal() in the standard.
[00:50:39] <pragma-> ,ungrab 2124
[00:50:39] <fizzie> cousteau: That's why the example did, in fact, use the real declaration of `signal`.
[00:50:39] <candide> Deleted 2124: <f​izzie> Well, if you get right down to it, I think the most confusion was about why you'd have three equivalent declarations in the first place.
[00:50:43] <pragma-> easy peasy
[00:50:50] <cousteau> fizzie: oh my god
[00:50:59] <floatcomplex> ,grab fizzie plausible
[00:51:00] <candide> Quote grabbed: 2124: <f​izzie> Maybe books should limit themselves to examples that are, in an of themselves, plausible pieces of code that could exist.
[00:51:11] <cousteau> why would you use the declaration of `signal` as an example for anything?
[00:51:17] <fizzie> cousteau: https://onlinegdb.com/3wcFiLMEH specifically.
[00:51:22] <floatcomplex> a considerable amount of weird shit we're asked about in here would become a nonissue if that were the case
[00:51:31] *** Joins: extern (~archer@141.226.60.134)
[00:53:11] <cousteau> the easiest way to rewrite something like `void (*signal(int, void (*)(int)))(int);` to make it more readable is to write it exactly like that and add a comment explaining what the hell you just did
[00:53:44] <cousteau> I do that with my code all the time when there's no other way around.  I can't be assed to try to decipher my own gibberish.
[00:54:23] *** Joins: Viewday4 (~Viewday@user/viewday)
[00:54:52] <cousteau> void (*signal(int, void (*)(int)))(int);  // signal is a function that takes a pointer to function(int) returning int, and returns another pointer to function(int) returning int
[00:55:31] <fizzie> No, it's a pointer to function (int) returning void. ;)
[00:55:43] <cousteau> oh
[00:55:47] <fizzie> Signal handlers don't return values, since they don't really have anywhere in particular to return to.
[00:55:53] *** Quits: constxd (~brad@192.75.101.164) (Ping timeout: 264 seconds)
[00:55:57] <cousteau> see, that's what happens when I try to tell what signal does from memory
[00:56:27] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[00:56:27] *** Viewday4 is now known as Viewday
[00:56:31] <cousteau> aaand this is why I would have written a comment, when the code I was writing was fresh in my memory
[01:00:03] <De4nWhit3> I was just trying to understand what is being explained.
[01:00:19] <De4nWhit3> 100% new to C. No experience whatsoever. So wrapping my head around things is rough. XD
[01:01:41] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 250 seconds)
[01:02:02] *** Quits: f1refly (~f1refly@p2e50ba3d.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[01:03:02] *** Quits: lkronnus (~kron@179097066103.provale.com.br) (Read error: Connection reset by peer)
[01:03:19] *** Quits: sord937_ (~sord937@gateway/tor-sasl/sord937) (Quit: sord937_)
[01:03:49] <floatcomplex> De4nWhit3: learn how to code without typedef first
[01:03:51] <floatcomplex> and then stop
[01:03:53] <floatcomplex> :)
[01:04:14] *** Joins: f1refly (~f1refly@p200300d02f2242fc05c4fb22fc4e3204.dip0.t-ipconnect.de)
[01:06:37] *** Quits: magla (~gelignite@55d4ec6e.access.ecotel.net) (Quit: Stay safe!)
[01:06:58] <cousteau> maybe 100% new to C should avoid jumping into typedef and weird declarations like that... it took me a while to get those
[01:07:53] <De4nWhit3> It's where the book I am reading started. I think it was to sample some things that will be explained later. I try to understand things to the best of my ability on the spot. Attention to detail problem...
[01:09:10] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[01:11:42] <extern> what is the standard directories gcc uses to search for -l lib
[01:13:42] *** Joins: pyzozord (pyzozord@user/pyzozord)
[01:14:05] <pyzozord> hey, anyone knows what might those @owned@ or @null@ tags be? https://github.com/chrender/libfizmo/blob/1a3a3d9c7e655081c24c091f20832bcb3a4981ec/src/interpreter/stack.h#L60
[01:15:45] <fizzie> Sound like annotations for a static analysis tool, but they don't look like that one Microsoft convention, so probably a different one instead.
[01:15:56] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 246 seconds)
[01:16:38] *** Quits: gce108_ (~gce@64-250-5-223.gvec.net) (Quit: Leaving)
[01:17:02] <extern> what is the standard directories gcc uses to search for -l lib
[01:17:11] <mcf> extern: it depends on your system. `gcc -print-search-dirs` will list them
[01:17:24] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[01:17:37] *** Joins: gce108 (~gce@user/gce108)
[01:17:49] <LangerJan> pyzozord: could be annotations, as fizzie said, from splint
[01:18:02] <fizzie> Yeah, I got to Splint as well.
[01:18:18] <fizzie> https://splint.org/manual/manual.html "For example, /*@null@*/ is used to express an assumption that a parameter may be NULL."
[01:18:19] <candide> Title of fizzie's link: Splint Manual
[01:18:33] <pyzozord> how did you figure it's splint?
[01:18:49] <fizzie> By some web searching for the keywords.
[01:18:54] <pyzozord> just recognizing the particular pattern? ah ok
[01:18:59] <LangerJan> I did that once, remembered and googled
[01:19:57] <pyzozord> LangerJan: do you recall it as a good experience? Worth it to spend some time with this tool?
[01:22:47] <extern> mcf: are these the only dirs ? i can't find there the X11 library
[01:23:30] *** Joins: Viewday2 (~Viewday@user/viewday)
[01:23:39] <LangerJan> pyzozord: well, I mean, you get a lot of warnings and you have to decide for yourself whats worth fixing, but it definitely makes you aware of a lot of scenarios
[01:24:56] <LangerJan> pyzozord: it's way easier to integrate it into new projects and let it run early and frequently, as to being overwhelmed when it rains warnings upon you over a "mature" project
[01:25:14] <LangerJan> warnings/findings
[01:25:48] <mcf> extern: you can tell it to search more directories with -L /path/to/dir
[01:25:55] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[01:25:55] *** Viewday2 is now known as Viewday
[01:26:13] <extern> mcf: im more concern as how gcc finds the X11 library
[01:26:37] <extern> -lX11 works but obviously it's non in the dirs output by gcc -print-search-dirs
[01:27:15] <pyzozord> LangerJan: haha, I guess that's the case with all linters
[01:27:42] <pyzozord> LangerJan: I was curious how smart is this one and how many findings can it decect (especially for things like UB)
[01:28:06] *** Joins: pulse (~pulse@user/pulse)
[01:29:39] <fizzie> How's that "obvious"? One of those directories printed by gcc -print-search-dirs is where `libX11.a` and `libX11.so` are for me.
[01:30:46] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Quit: smlavine)
[01:31:26] *** Joins: Viewday5 (~Viewday@user/viewday)
[01:32:40] <LangerJan> pyzozord: can't really give you any insight here, sorry. Been too long ago
[01:32:57] <extern> fizzie: right, it happened to be the last dir i overlooked :(
[01:33:03] *** Joins: silentwarg (~silentwar@cpe-76-171-170-68.socal.res.rr.com)
[01:33:03] <pyzozord> No worries, still thanks for indentifying the thing :)
[01:33:07] <pyzozord> cheers!
[01:33:07] *** Parts: pyzozord (pyzozord@user/pyzozord) ()
[01:33:17] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[01:33:17] *** Viewday5 is now known as Viewday
[01:33:39] *** Joins: semeion (~semeion@user/semeion)
[01:33:45] *** Joins: De4nWhit338 (~De4nWhit3@41.13.196.20)
[01:33:59] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 264 seconds)
[01:34:15] *** Quits: silentwarg (~silentwar@cpe-76-171-170-68.socal.res.rr.com) (Client Quit)
[01:36:21] *** Quits: De4nWhit3 (~De4nWhit3@165-73-119-36.ip.afrihost.capetown) (Ping timeout: 250 seconds)
[01:37:11] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 245 seconds)
[01:38:37] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[01:39:32] *** Quits: Iarfen (~quassel@181.43.59.114) (Ping timeout: 240 seconds)
[01:40:11] *** Quits: cousteau (~cousteau@user/cousteau) (Quit: ♫ I can't forget the day I shot that network down ♫)
[01:42:55] *** Joins: Inst (~Inst@2601:6c4:4080:3f80:c951:41b3:1b4a:c1f9)
[01:47:29] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[01:49:13] *** Joins: alioui (~medeva293@102.159.156.204)
[01:49:21] *** Joins: johnnyreb (~tth@user/johnnyreb)
[01:49:27] <alioui> hi all
[01:49:46] <alioui> how to do iostream in c ??
[01:50:16] <apotheon> Do you mean iostream the C++ thing?
[01:50:24] <apotheon> cin, cout, et cetera
[01:50:32] <apotheon> what
[01:50:38] <apotheon> clarify, please
[01:50:42] <tyzoid> Sir, this is a wendy's.
[01:50:52] <tyzoid> For C++, please go next door
[01:51:24] <apotheon> C doesn't use C++ iostream.  C++ uses it.
[01:51:47] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:f472:b6fd:e7c6:8c89) (Quit: Leaving)
[01:51:51] <Matt|home> if i want to write something for 32 and 64 bit, i have to use a makefile and check the target architecture first?
[01:52:01] *** Joins: pulse_ (~pulse@user/pulse)
[01:52:13] *** Joins: skapata (~Skapata@user/skapata)
[01:52:15] <tyzoid> Matt|home: When you call make, you can specify a CFLAGS variable
[01:52:25] <tyzoid> $ make CFLAGS=...
[01:52:50] <Matt|home> yeah im reading up on make right now, this is.. more complicated than i thought it would be
[01:53:16] <tyzoid> You think make is complex... try cmake lol
[01:53:55] <apotheon> or autofoo
[01:53:57] <alioui> apotheon: no, in memory file. instead of writing to disk file you write to buffer
[01:53:57] <Matt|home> is make sufficient for this?
[01:54:04] <tyzoid> Should be
[01:54:17] <tyzoid> Usually what you do is have a configure script that generates a makefile
[01:54:23] <apotheon> alioui: I'm not sure what you're asking.
[01:54:24] <tyzoid> but you could use just make for this if you want
[01:54:34] <Matt|home> oh god DAMMIT SKYPE
[01:54:40] <apotheon> autofoo is definitely complicated
[01:54:40] <alioui> me neither
[01:54:47] <tyzoid> alioui: look at sprintf
[01:54:51] <extern> fizzie: i have this directory tree https://paste.ofcode.org/MtxUarmi5WNHwsAiSDfLRN
[01:54:57] <Matt|home> sorry for off topic, but how in the hell did MS break skype so completely
[01:55:09] <apotheon> or snprintf
[01:55:14] <tyzoid> C doesn't have "buffers" in the sense of C++ streams, it has blocks of memory you can write to
[01:55:19] <extern> i try to have a single Makefile for both insetion_sort and merge_sort
[01:55:23] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[01:55:31] *** Joins: Atque (~Atque@user/atque)
[01:55:47] <extern> i want them to both use arrays.c\h
[01:56:01] <alioui> ok thanks i will do a research on it
[01:56:13] *** Joins: Viewday1 (~Viewday@user/viewday)
[01:56:17] <extern> the problem is i don't want to copy Make files andarrays to every directory
[01:56:24] <extern> Makefile
[01:56:28] <Matt|home> in general how do devs plan out their project process.. or is that way too vague..
[01:56:43] <apotheon> Please don't use sprintf() if you have snprintf() available.
[01:56:53] <tyzoid> ^
[01:57:08] <apotheon> Matt|home: "it depends"
[01:57:10] <tyzoid> Matt|home: Depends. If it's a large project, you might start off with a large planning and documentation phase
[01:57:20] <tyzoid> Especially with multiple people
[01:57:23] <Matt|home> this is a small one, i doubt it's gonna be more than 2 files
[01:57:26] <apotheon> Matt|home: I like incorporating "red/green/refactor" in my process.
[01:58:05] *** Quits: gproto23_ (~gproto23@user/gproto23) (Remote host closed the connection)
[01:58:13] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[01:58:13] *** Viewday1 is now known as Viewday
[01:58:27] <tyzoid> Matt|home: In that case, I'd be more concerned with the testing stuff, if that's important to you
[01:58:31] <Matt|home> but i'd like this to be a professional project at least. so that means that software that generates man pages or whatever?
[01:58:38] <tyzoid> I usually just custom write some sort of unit test framework
[01:58:42] <Matt|home> prolly a github repo, testing yeah
[01:58:57] <tyzoid> One fun thing you can do
[01:59:02] <tyzoid> if you write your documentation in markdown
[01:59:07] <tyzoid> is you can use pandoc and convert that to a PDF
[01:59:09] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[01:59:22] <tyzoid> And you can keep your documentation source-controlled in your repo
[01:59:30] <tyzoid> That way, your documentation can be updated along with the code on release
[01:59:42] <Matt|home> what's step one.. creating the repo prolly
[01:59:49] <tyzoid> Yup
[02:00:15] <fizzie> extern: Given that make just runs whatever commands you tell it to, there's a lot of ways you could arrange that. The simplest would probably be along the lines of putting your arrays.c / arrays.h into a third directory (let's say 'shared'), and have your one top-level Makefile with rules like `prog1: prog1/prog1.o shared/arrays.o` and `prog2: prog2/prog2.o shared/array.o` to link that shared code into
[02:00:17] <fizzie> both.
[02:00:34] <fizzie> Or you can go more elaborate and make it an actual library.
[02:00:50] <alioui> ?fmemopen 
[02:01:10] <Matt|home> gotta reboot..
[02:01:10] <alioui> #fmemopen 
[02:02:37] *** Quits: Matt|home (~matt@adsl-74-233-58-226.mia.bellsouth.net) (Quit: Leaving)
[02:03:33] *** Quits: uint_t (~refujee@c-24-22-76-106.hsd1.wa.comcast.net) (Quit: Konversation terminated!)
[02:04:01] <extern> fizzie: hmm.. creating arrays.o and put it in /lib, then use '-l arrays' as one of the compiling flags could work
[02:05:04] <fizzie> Generally using `-larrays` would involve bundling it into a `libarrays.a` file.
[02:05:22] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:05:58] <fizzie> With just one object file that's built from the same codebase as the rest of it, there's hardly a need to go that far, but of course you might.
[02:07:17] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 264 seconds)
[02:07:57] *** pulse_ is now known as pulse
[02:09:29] *** Quits: kish` (~aqua@user/aqua) (Quit: Leaving)
[02:09:55] *** Joins: Matt|home (~matt@adsl-74-233-58-226.mia.bellsouth.net)
[02:10:38] *** Parts: alioui (~medeva293@102.159.156.204) ()
[02:10:49] *** Joins: kish` (~aqua@user/aqua)
[02:11:02] <Matt|home> im using visual studio code for my C projects.. it's pretty simple especially compared to android studio -_- in general is there a reason you'd want to use just a straight up vim editor instead of an IDE or not really
[02:11:17] *** Parts: kish` (~aqua@user/aqua) ()
[02:16:07] <apotheon> Matt|home: many reasons, but go with your own preferences
[02:16:30] <apotheon> I use Vim quite a bit, and avoid IDEs.
[02:17:19] *** Joins: Viewday1 (~Viewday@user/viewday)
[02:17:34] *** Quits: dansan (~daniel@75.81.148.51) (Quit: The C preprocessor is a pathway to many abilities some consider to be unnatural.)
[02:18:03] <Matt|home> kk
[02:18:56] <apotheon> I find IDEs cumbersome in many ways.
[02:19:05] <apotheon> YMMV
[02:19:11] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[02:19:11] *** Viewday1 is now known as Viewday
[02:20:44] <poprocks> quickfix on vim is great, and you can open multiple files in different panes or tabs, and it has syntax highlighting, etc., so it can pretty much be used as a C IDE
[02:23:51] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.0)
[02:24:30] *** Quits: coruja (~coruja@user/coruja) (Quit: ZNC 1.8.2 - https://znc.in)
[02:25:05] *** Joins: dansan (~daniel@75.81.148.51)
[02:25:53] <apotheon> indeed
[02:27:20] *** Joins: coruja (~coruja@user/coruja)
[02:30:22] *** Joins: kish` (~aqua@user/aqua)
[02:34:03] *** Joins: pizdets_ (~pizdets@183.182.114.168)
[02:34:32] *** Quits: pizdets (~pizdets@183.182.111.141) (Ping timeout: 240 seconds)
[02:35:50] *** Quits: strajder (~strajder@user/strajder) (Quit: gn)
[02:36:42] <De4nWhit338> Why does the value of 'counter' not increment? https://onlinegdb.com/ekCz6HVuB
[02:37:03] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[02:38:43] <Xgc> De4nWhit338: Try (*counter_p)++
[02:39:01] <Xgc> De4nWhit338: That function is incrementing the pointer, not the value referred to by the pointer.
[02:39:23] <De4nWhit338> Thank you Xgc
[02:39:47] *** Joins: vysn (~vysn@user/vysn)
[02:45:49] *** Joins: Viewday2 (~Viewday@user/viewday)
[02:46:26] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[02:47:03] *** trenka_ is now known as trenka
[02:47:04] *** Quits: trenka (~ykaliuta@89-27-97-175.bb.dnainternet.fi) (Changing host)
[02:47:04] *** Joins: trenka (~ykaliuta@user/trenka)
[02:47:31] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[02:47:31] *** Viewday2 is now known as Viewday
[02:50:04] *** Quits: puke (~puke@user/puke) (Quit: puke)
[02:50:49] <poprocks> the prefix operator don't get no respect.. no respect!
[02:50:54] *** Quits: Guest42 (~Guest42@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[02:51:38] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[02:51:45] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[02:52:27] *** Joins: ckdCreations (~ckdCreati@147.55.130.37)
[02:54:19] *** Quits: De4nWhit338 (~De4nWhit3@41.13.196.20) (Ping timeout: 256 seconds)
[02:55:24] *** Quits: nostart (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[02:58:47] *** Quits: johnnyreb (~tth@user/johnnyreb) (Quit: WeeChat 3.3)
[03:00:07] *** Quits: brelod_ (~me@90.244.150.142) (Quit: leaving)
[03:06:21] *** Joins: lkronnus (~kron@179097066103.provale.com.br)
[03:06:35] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[03:06:52] *** Joins: seninha (~seninha@user/seninha)
[03:07:17] *** Quits: BCMM (~BCMM@user/bcmm) (Ping timeout: 264 seconds)
[03:07:25] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[03:10:40] *** Joins: rsjw (~quassel@65.216.146.131)
[03:12:48] *** Quits: rsjw (~quassel@65.216.146.131) (Changing host)
[03:12:48] *** Joins: rsjw (~quassel@user/rsjw)
[03:13:51] *** Quits: asd (~noname@user/asd) (Ping timeout: 250 seconds)
[03:14:04] *** Joins: Viewday9 (~Viewday@user/viewday)
[03:14:54] <fizzie> There's a GCC warning that line would have triggered, namely -Wunused-value "warning: value computed is not used", included in -Wall.
[03:15:03] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[03:15:51] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[03:15:51] *** Viewday9 is now known as Viewday
[03:16:07] *** vdamewood is now known as Guest5784
[03:16:07] *** Quits: Guest5784 (~vdamewood@fedora/vdamewood) (Killed (iridium.libera.chat (Nickname regained by services)))
[03:16:07] *** vinleod is now known as vdamewood
[03:20:53] *** Joins: loganlee (~Thunderbi@user/loganlee)
[03:22:47] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[03:24:23] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 246 seconds)
[03:25:57] *** Joins: bingulo (~bingulo@2804:431:e7c9:406b:342c:d1b3:6f92:8d1e)
[03:26:21] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:27:36] *** Quits: Inline (~Inline@2a02:908:1252:7a80:6c0:2b98:1609:4e92) (Ping timeout: 245 seconds)
[03:27:39] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:30:33] *** Joins: asd (~noname@user/asd)
[03:31:49] *** Joins: rgrinberg (~textual@190.113.102.153)
[03:31:57] *** Joins: FlipFlop (~FlipFlop@user/fl1pfl0p)
[03:32:09] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:32:10] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[03:33:55] *** Quits: Akuli (~Akuli@213.216.211.233) (Quit: Leaving)
[03:35:30] *** Quits: alch (~alch@151.68.136.118) (Ping timeout: 268 seconds)
[03:36:56] *** Joins: alch (~alch@151.46.23.126)
[03:37:15] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:37:25] *** Joins: chair1 (~bbs@187.109.18.204)
[03:41:09] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 250 seconds)
[03:41:49] *** Joins: soapsudsxx (~soapsudsx@209.221.40.144)
[03:42:40] *** Joins: Viewday6 (~Viewday@user/viewday)
[03:43:14] *** Quits: vin (~vin@user/crash) (Quit: WeeChat 2.8)
[03:43:32] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 240 seconds)
[03:44:11] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[03:44:11] *** Viewday6 is now known as Viewday
[03:44:40] *** Joins: Inline (~Inline@aftr-37-201-240-235.unity-media.net)
[03:45:14] *** Joins: nostar (~nostar@68.51.221.108)
[03:45:32] *** Joins: Nistar (Nistar@gateway/vpn/protonvpn/nistar)
[03:46:03] *** Joins: pulse (~pulse@user/pulse)
[03:46:52] *** Quits: Nistar (Nistar@gateway/vpn/protonvpn/nistar) (Client Quit)
[03:47:41] *** Joins: BCMM (~BCMM@user/bcmm)
[03:47:42] *** Quits: BCMM (~BCMM@user/bcmm) (Client Quit)
[03:51:04] *** Joins: Viewday0 (~Viewday@user/viewday)
[03:52:41] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[03:52:41] *** Viewday0 is now known as Viewday
[03:55:24] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[03:55:24] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[03:55:24] *** Joins: wroathe (~wroathe@user/wroathe)
[03:56:19] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 250 seconds)
[03:58:04] *** Quits: bingulo (~bingulo@2804:431:e7c9:406b:342c:d1b3:6f92:8d1e) (Quit: WeeChat 3.3)
[03:58:24] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[03:59:14] *** Joins: ChromaCat248 (~ChromaCat@user/chromacat248)
[03:59:35] *** Joins: bingulo (~bingulo@2804:431:e7c9:406b:342c:d1b3:6f92:8d1e)
[04:02:38] *** Quits: ARoxdale (~ARoxdale@84.203.31.229) (Ping timeout: 268 seconds)
[04:02:44] *** Quits: servytor (uid525486@id-525486.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:03:33] <chair1> In a switch statement where each case is like 'case "u"[0]: /* do something */ break;', GCC complains that the "case label does not reduce to an integer constant" but Clang seems to understand what I mean
[04:04:36] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[04:07:22] *** Joins: Viewday9 (~Viewday@user/viewday)
[04:08:14] <floatcomplex> lol
[04:08:28] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[04:09:07] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[04:09:07] *** Viewday9 is now known as Viewday
[04:09:21] *** Quits: bingulo (~bingulo@2804:431:e7c9:406b:342c:d1b3:6f92:8d1e) (Quit: WeeChat 3.3)
[04:10:47] *** Joins: bingulo (~bingulo@2804:431:e7c9:406b:342c:d1b3:6f92:8d1e)
[04:12:14] *** Quits: Biolunar_ (biolunar@2a02:908:4b24:5000:ba27:ebff:fee0:75a) (Ping timeout: 260 seconds)
[04:12:32] *** Quits: immibis (~hexchat@62.156.144.218) (Ping timeout: 240 seconds)
[04:12:38] *** Joins: Macuser (~Macuser@216.30.159.201)
[04:15:31] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:53c9:cd00:12bf:48ff:feb8:38c8) (Ping timeout: 245 seconds)
[04:16:44] <fizzie> Accepting other forms of expressions as constant expressions than just those strictly required by the standard is sort of an officially allowed extension point.
[04:16:52] <fizzie> ,c11 6.6p10
[04:16:52] <candide> http://www.iso-9899.info/n1570.html#6.6p10 [Constant expressions] An implementation may accept other forms of constant expressions.
[04:17:17] <fizzie> But "u"[0] definitely isn't required to be accepted as an integer constant expression, which is what a case label must be.
[04:17:49] <fizzie> (I'm not going to touch on the real mystery here, namely the writing of "u"[0] instead of 'u'.)
[04:17:53] <nitrix> I believe an integer constant expression has to begin with a digit, amongst other things.
[04:18:04] <fizzie> No, it definitely doesn't have to begin with a digit.
[04:18:32] <nitrix> Strange. C11 6.4.4.1p2 says that verbatim.
[04:18:48] <chair1> I was also reading this section. The previous paragraph also states that using [] or * makes it an 'addres integer constant'
[04:19:08] <fizzie> 6.4.4.1p2 describes what an /integer constant/ is. An /integer constant expression/ is another thing entirely.
[04:19:32] <fizzie> C11 6.6p6: "An /integer constant expression/ shall have integer type and shall only have operands that are integer constants, enumeration constants, character constants, `sizeof` expressions that --" and so on and so forth.
[04:19:43] <nitrix> I didn't know you were allowed integer constant expressions in switch cases.
[04:20:23] <fizzie> 6.8.4.2p3: "The expression of each `case` label shall be an integer constant expression --"
[04:21:00] <fizzie> Anyway, there's no such thing as an "addess integer constant", and "u"[0] isn't even an address constant.
[04:21:02] <chair1> So it's all about implementation. Clang did it, GCC and TCC not. Interesting
[04:21:05] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 264 seconds)
[04:21:13] *** Joins: ferdna (~ferdna@user/ferdna)
[04:21:21] <nitrix> Mhhh, so something like 1+1 would be completely fine in that position?
[04:22:25] <fizzie> Yes. Same sort of thing as other places that require integer constant expressions, like `enum { foo = 1+1 }` or `static int arr[1+1]` and so.
[04:22:28] <nitrix> That looks kinda funny. I wonder what the use cases are to justify that.
[04:22:42] *** Joins: Wulf (~Wulf@user/wulf)
[04:23:22] <fizzie> Well, `case SOME_MACRO:` doesn't look that funny, and it's maybe convenient to allow `#define SOME_MACRO (FOO_BASE+123)` in that context.
[04:24:05] <chair1> Say you are creating Twitter. You write #define MAX_LETTERS 140, but the buffer that will hold the tweet needs to be MAX_LETTERS + 1 (because of '\0')
[04:24:06] *** Quits: bingulo (~bingulo@2804:431:e7c9:406b:342c:d1b3:6f92:8d1e) (Quit: WeeChat 3.3)
[04:24:40] <chair1> Or perhaps MAX_LETTERS * 4 + 1 because of UTF-8?
[04:24:57] <fizzie> Maybe not the most plausible case for a case label, though. :)
[04:25:14] <nitrix> chair1, If it's UTF-8, why are you multiplying by 4?
[04:25:38] <fizzie> 4 bytes is nowadays the longest allowed UTF-8 sequence.
[04:25:44] <chair1> Because some codepoints use at most 4 bytes, but I'm no expert :P
[04:25:46] *** Joins: bingulo (~bingulo@2804:431:e7c9:406b:342c:d1b3:6f92:8d1e)
[04:26:29] <fizzie> The 5- and 6-byte encodings have been invalid ever since Unicode was limited to only go up to U+10FFFF, which takes four bytes to encode.
[04:27:56] *** Quits: bingulo (~bingulo@2804:431:e7c9:406b:342c:d1b3:6f92:8d1e) (Client Quit)
[04:29:10] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[04:29:20] <chair1> I wish there was an exception at the standard taking in consideration that the "u" of "u"[0] is constant, so it should be evaluated at translation phase :(
[04:30:11] <fizzie> Ah, but then people would want to take it one step further and also make the preprocessor able to evaluate it, just to be able to build ridiculous macros.
[04:30:25] <chair1> Or maybe in a more general manner, like {0, 1, 2}[0], but then I can't justify it
[04:31:03] <chair1> But by being string it is required to be "immutable", right? I don't think it's too bad
[04:31:49] <chair1> lol, I heard _Generic is very weird regarding preprocessing and translation phases
[04:32:01] *** Joins: Viewday3 (~Viewday@user/viewday)
[04:32:01] *** Joins: Mach` (~Mach@2a02:2f09:d105:f200:51b0:54f2:9c95:a5e9)
[04:32:34] *** Quits: malloy (~jimery@116.30.220.108) (Ping timeout: 250 seconds)
[04:33:05] <chair1> ,c11 J.5.5
[04:33:05] <candide> http://www.iso-9899.info/n1570.html#J.5.5 [Writable string literals] 1 String literals are modifiable (in which case, identical string literals should denote distinct objects) (6.4.5).
[04:33:28] <chair1> This section regards "Common extensions"
[04:33:40] *** Joins: Biolunar (biolunar@2a02:908:4b24:5000:ba27:ebff:fee0:75a)
[04:34:03] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[04:34:03] *** Viewday3 is now known as Viewday
[04:34:44] *** Joins: malloy (~jimery@116.30.220.108)
[04:35:11] <fizzie> Yeah, I guess one problem with making "u"[0] an integer constant expression is that it's also an lvalue, and that's maybe a little odd. But I'm sure it's workable in practice -- like you say, apparently a number of implementations allow it.
[04:36:08] *** Quits: Mach` (~Mach@2a02:2f09:d105:f200:51b0:54f2:9c95:a5e9) (Ping timeout: 246 seconds)
[04:38:32] *** Joins: cm007magnum (~Rheanna@218.78.79.129)
[04:39:16] <chair1> Nice insight and indeed odd. I never noticed that integer constant expressions are not lvalues, wow
[04:40:41] *** Quits: nyah (~nyah@94.6.71.219) (Ping timeout: 246 seconds)
[04:42:02] <fizzie> Fun fact: compound literals are *modifiable* lvalues, which I don't think I've ever found a particular use for. At least directly. Meaning, `(int){1} = 2;` is a valid (if useless) statement.
[04:42:19] <Matt|home> what's a good project name for a binary parser..
[04:45:17] <Matt|home> hm.. since it's called ELF maybe something to do with santa or other christmas themed junk?
[04:57:35] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[04:59:29] *** Quits: crankslider (~slidercra@user/slidercrank) (Ping timeout: 264 seconds)
[05:00:26] *** Joins: Viewday8 (~Viewday@user/viewday)
[05:00:32] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[05:02:23] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[05:02:23] *** Viewday8 is now known as Viewday
[05:05:28] *** Joins: frost (~frost@user/frost)
[05:06:34] *** Joins: koo5_ (~quassel@51.140.155.227)
[05:06:52] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[05:06:56] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 246 seconds)
[05:07:05] <dogbert2> ,botsnack
[05:07:05] * candide messily gobbles its porridge.
[05:09:34] <Pentode> yum
[05:13:05] *** Quits: katnis (uid15849@id-15849.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[05:15:19] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[05:16:38] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:17:16] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[05:17:16] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[05:17:16] *** Joins: wroathe (~wroathe@user/wroathe)
[05:17:47] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[05:18:29] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0496-0e7e-86fc-e34f.res6.spectrum.com)
[05:19:10] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[05:21:22] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 260 seconds)
[05:21:23] *** Quits: cm007magnum (~Rheanna@218.78.79.129) (Remote host closed the connection)
[05:22:17] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 264 seconds)
[05:23:33] *** Joins: cm007magnum (~Rheanna@218.78.99.237)
[05:24:20] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-0496-0e7e-86fc-e34f.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[05:25:04] *** Joins: Viewday5 (~Viewday@user/viewday)
[05:27:19] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[05:27:19] *** Viewday5 is now known as Viewday
[05:29:30] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[05:31:27] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038)
[05:34:14] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038) (Ping timeout: 246 seconds)
[05:35:54] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com) (Read error: Connection reset by peer)
[05:38:11] *** Quits: Inst (~Inst@2601:6c4:4080:3f80:c951:41b3:1b4a:c1f9) (Ping timeout: 264 seconds)
[05:40:07] *** Quits: chair1 (~bbs@187.109.18.204) (Quit: Good talk with you folks, good night)
[05:40:50] *** Quits: extern (~archer@141.226.60.134) (Quit: WeeChat 3.3)
[05:43:02] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[05:47:11] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: AA TOO NEE ZUBARALHADEEEEEEEEEEEED)
[05:48:25] *** Joins: Nistar (Nistar@gateway/vpn/protonvpn/nistar)
[05:51:28] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[05:53:34] *** Joins: Viewday6 (~Viewday@user/viewday)
[05:54:19] *** Joins: katnis (uid15849@id-15849.helmsley.irccloud.com)
[05:54:54] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com)
[05:55:05] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[05:55:05] *** Viewday6 is now known as Viewday
[05:56:00] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038)
[05:56:21] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:5d10:8850:6285:4e0e)
[05:57:41] *** Joins: Viewday5 (~Viewday@user/viewday)
[05:58:32] *** Quits: Inline (~Inline@aftr-37-201-240-235.unity-media.net) (Ping timeout: 240 seconds)
[05:58:44] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038) (Ping timeout: 246 seconds)
[05:59:15] *** Quits: Viewday (~Viewday@user/viewday) (Read error: Connection reset by peer)
[05:59:15] *** Viewday5 is now known as Viewday
[06:03:24] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[06:03:26] *** Joins: rackj (~rackj@c-73-140-240-136.hsd1.wa.comcast.net)
[06:04:27] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[06:04:31] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[06:04:48] *** Joins: kish` (~aqua@user/aqua)
[06:05:53] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 250 seconds)
[06:08:21] *** Joins: johnjay (~pi@192.142.100.50)
[06:09:45] <Nistar> I'm looking for some learning resources and exercises to help me master pointers, arrays, struct-pointers, strings, all this crazy pointer stuff. Does anyone have a resource they'd recommend?
[06:11:05] <floatcomplex> Nistar: rule number zero is to put aside your preconceived notion that pointers are hard
[06:11:28] <floatcomplex> if you believe that, your brain has an excuse not to try to understand it
[06:11:29] *** Quits: cm007magnum (~Rheanna@218.78.99.237) (Remote host closed the connection)
[06:12:42] <oldlaptop> Strings come with some of their own issues that are unrelated, or tangentially related, to the concept of pointers.
[06:12:43] <Nistar> Okay, I don't have any psychological impediments for learning them. I just want a lot of exercise to master working with them.
[06:13:16] <oldlaptop> The exercises in K&R2 are widely liked as a general matter; naturally they cover pointers
[06:13:38] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[06:13:47] *** Quits: dsrt^ (~dsrt@h50.174.139.63.static.ip.windstream.net) (Ping timeout: 246 seconds)
[06:14:25] <Nistar> Okay. I have K&R2 in my hands. Should I be working through chapter 5?
[06:14:34] *** Joins: cm007magnum (~Rheanna@218.78.53.13)
[06:15:23] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Ping timeout: 264 seconds)
[06:15:26] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[06:15:49] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:16:26] <oldlaptop> (well, really you should be working through the whole thing, but that is the chapter that introduces pointers)
[06:17:02] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 240 seconds)
[06:17:08] <Nistar> How long did it take you to work through all of K&RC oldlaptop ?
[06:17:17] * oldlaptop has no idea anymore
[06:17:55] <Nistar> I find it useful as a reference. I've worked quite a bit in other languages, most of their syntax is already C-based. The only thing I really haven't worked much with are pointers, and the preprocessor
[06:18:39] <vdamewood> Pointers are fun, except when they're not.
[06:19:07] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9971-ce5a-c805-3e08.res6.spectrum.com)
[06:20:18] <rackj> Can someone take a look at this? https://godbolt.org/z/4qzMxfPYh Am I aligning correctly? Why does rdi+8 get read before rdi?
[06:21:08] *** Quits: cm007magnum (~Rheanna@218.78.53.13) (Remote host closed the connection)
[06:22:05] *** Joins: cm007magnum (~Rheanna@218.78.53.13)
[06:22:14] <floatcomplex> rackj: you haven't given it any reason not to. is there one?
[06:23:00] <rackj> floatcomplex: It would be faster if the first mov was into rdi, right? Assuming Icelake and 64 byte boundaries
[06:23:24] <rackj> And then I do the add on rdi+8?
[06:23:33] <floatcomplex> i suspect it will be equally fast since the same cache line gets loaded first regardless
[06:23:41] <rackj> ah
[06:23:59] <rackj> yeah, good point
[06:29:37] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[06:30:02] *** Quits: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr) (Quit: ZNC 1.8.2 - https://znc.in)
[06:32:58] *** Quits: Nistar (Nistar@gateway/vpn/protonvpn/nistar) (Quit: WeeChat 3.3)
[06:33:45] *** Joins: highrate (~presonic@111-22-237-24.gci.net)
[06:34:53] *** Quits: banc- (banc@gateway/vpn/airvpn/banc) (Ping timeout: 264 seconds)
[06:35:41] *** Joins: Arwalk (~Arwalk@lfbn-dij-1-10-221.w90-62.abo.wanadoo.fr)
[06:35:51] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[06:42:24] *** Joins: Viewday9 (~Viewday@user/viewday)
[06:43:02] *** Quits: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com) (Ping timeout: 240 seconds)
[06:44:11] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[06:44:23] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[06:44:23] *** Viewday9 is now known as Viewday
[06:44:53] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[06:45:06] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[06:48:05] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 246 seconds)
[06:51:38] *** Quits: rackj (~rackj@c-73-140-240-136.hsd1.wa.comcast.net) (Quit: Client closed)
[06:52:21] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[06:53:02] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 240 seconds)
[06:54:05] *** Quits: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com) (Ping timeout: 264 seconds)
[06:56:17] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[06:57:02] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 240 seconds)
[06:57:25] *** Quits: nostar (~nostar@68.51.221.108) (Ping timeout: 256 seconds)
[07:02:54] *** Joins: amosbird (~amosbird@13.75.119.182)
[07:03:31] <amosbird> Hello! What's the proper way of checking a file system's health state? Like is it broken (IO error), readonly, or anything else
[07:04:30] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[07:06:45] *** Joins: nyjets (~zz@2001:8003:1612:d500:90ae:f6da:98b8:499)
[07:08:19] *** tusko is now known as hotep
[07:11:27] *** Joins: Viewday1 (~Viewday@user/viewday)
[07:13:17] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[07:13:17] *** Viewday1 is now known as Viewday
[07:15:25] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[07:23:34] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[07:27:46] <rsjw> amosbird: C doesn't have a concept of a filesystem, only files.
[07:27:48] <rsjw> if you try to open a file with read access with fopen when you don't have read permissions, fopen will fail with a null pointer return. the C standard does not require errno to be set in this case, but afaik, all will. check your manual
[07:28:14] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 250 seconds)
[07:28:36] *** Quits: masterbuilder (~user@user/masterbuilder) (Quit: "Good night")
[07:29:19] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:29:29] <rsjw> you can use the stat family of functions to find out file permissions and other characteristics.
[07:30:00] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[07:30:30] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[07:30:36] *** Joins: simon323 (~simon323@2409:8a34:46c:5830:a81d:9c68:9138:e31e)
[07:32:59] *** Quits: alch (~alch@151.46.23.126) (Read error: Connection reset by peer)
[07:34:02] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 240 seconds)
[07:35:34] *** Joins: Viewday2 (~Viewday@user/viewday)
[07:35:35] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:02] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[07:36:05] <SamuelMarks> hi
[07:36:10] <SamuelMarks> Fun times:    ld: /lib/x86_64-linux-gnu/libcrypto.so.1.1: error adding symbols: DSO missing from command line
[07:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:05] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:37:15] *** Joins: alch (~alch@151.46.1.91)
[07:37:39] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[07:37:39] *** Viewday2 is now known as Viewday
[07:37:47] <rsjw> amosbird: the system calls open, read, write, etc seem to have errors specified more than the libc functions fopen, fread, fwrite, etc so you might want to use the system call
[07:39:41] <rsjw> amosbird: I don't know that there are functions to check the state of the filesystem itself... usually you just try to use the files and if using the files results in an error then you deal with that
[07:41:57] *** Joins: jinsun (~quassel@user/jinsun)
[07:43:54] *** Joins: fentanyl (~ryan@user/sapi01)
[07:46:00] <rsjw> amosbird: ah, there are: see fstab(5), getfsent(3), getfsspec(3), getfsfile(3), setfsent(3), endfsent(3). they don't seem to be posix, but some systems have them, including osx and linux
[07:46:27] <fentanyl> I'm trying to understand the implementation of rehashing in embedded systems, I was reading this paper (https://users.cs.northwestern.edu/~sef318/docs/hashtables.pdf) in which they mention incremental rehashing. But I'm having trouble understanding what exactly they mean by "cleaning" on page 3; I can see its a term for rehashing per new hash function, but I'm not sure how they track if all the elements are 
[07:46:32] <fentanyl> rehashed and such. Could someone help me understand this?
[07:46:35] <dave0> what filesystem info is amosbird after?
[07:46:47] <amosbird> rsjw: sounds complex
[07:47:36] <amosbird> dave0: well, nothing specific. The application wants to know if some disks are broken and trigger proper data recovery process.
[07:47:55] <dave0> oh ok
[07:50:11] <rsjw> on the other hand, it looks like those functions just read from /etc/fstab, so they don't necessarily reflect the current state of the system
[07:51:13] *** Quits: cm007magnum (~Rheanna@218.78.53.13) (Remote host closed the connection)
[07:52:27] <rcf> amosbird: actually figuring this out is a fairly difficult problem in the general case. 
[07:53:57] *** Joins: cm007magnum (~Rheanna@218.78.79.129)
[07:54:05] *** Quits: mahmutov_ (~mahmutov@37.155.56.185) (Ping timeout: 256 seconds)
[07:54:54] <rcf> amosbird: you would generally defer to file system-specific fsck to decide 
[07:54:55] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[07:55:28] <rcf> And something like SMART to monitor the hardware itself 
[07:56:21] *** Quits: retroid_ (~retro@2e41e9c8.skybroadband.com) (Ping timeout: 268 seconds)
[07:59:11] *** Quits: ChromaCat248 (~ChromaCat@user/chromacat248) (Remote host closed the connection)
[07:59:28] *** Joins: Viewday5 (~Viewday@user/viewday)
[07:59:34] *** Joins: retroid_ (~retro@2e41e9c8.skybroadband.com)
[08:00:32] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 240 seconds)
[08:01:27] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[08:01:27] *** Viewday5 is now known as Viewday
[08:05:03] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 250 seconds)
[08:07:26] <fentanyl> Is the "command" that they mentioned operations like "add/remove"? Like, we encapsupate those operations under "lookup" like "lookup(key, command)" such that we try to rehash everytime when we perform an operation on the hash table?
[08:10:34] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[08:14:57] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[08:15:25] *** Joins: riksu-raksu (riksteri@gateway/vpn/airvpn/riksteri)
[08:15:50] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:18:27] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Ping timeout: 256 seconds)
[08:27:48] *** Joins: Viewday1 (~Viewday@user/viewday)
[08:29:22] *** Quits: Viewday (~Viewday@user/viewday) (Read error: Connection reset by peer)
[08:29:23] *** Viewday1 is now known as Viewday
[08:30:11] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Quit: Laa shay'a waqi'un moutlaq bale kouloun moumkine)
[08:32:38] *** Joins: mkv (~znc@ubuntu/member/m4v)
[08:33:02] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 240 seconds)
[08:33:02] *** mkv is now known as m4v
[08:33:03] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[08:34:31] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 250 seconds)
[08:35:44] *** Quits: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net) (Quit: Leaving)
[08:41:12] <dragonmaster> fentanyl: I think the answer to your 2nd question is correct.   Each of the hash table API methods (get, put , remove) requires that the particular entry in the table be located.    So they use Locate(key, command) to ensure that every API method can contribute to rehashing the table and thus amortize the cost of rehashing over all operations, not just select put() calls.
[08:41:13] *** Quits: cm007magnum (~Rheanna@218.78.79.129) (Remote host closed the connection)
[08:41:50] <dragonmaster> It's an interesting paper
[08:44:00] *** Joins: cm007magnum (~Rheanna@218.78.67.149)
[08:44:05] <fentanyl> dragonmaster: I see, thanks.
[08:46:24] <rsjw> fentanyl: regarding your first question, it seems that a bucket cleaning doesn't happen halfway, so you can associate with each bucket a bit that signifies whether or not that bucket has been cleaned, as is described a few paragraphs into section 2.1.
[08:47:23] *** Joins: Viewday3 (~Viewday@user/viewday)
[08:47:38] <rsjw> the bit signifying whether the table is cleaned would just be the bitwise OR of all of those bucket bits in the same table
[08:47:52] <rsjw> sorry, AND, not OR
[08:49:24] <fentanyl> Does this section sumarize the basic idea briefly https://en.wikipedia.org/wiki/Hash_table#Alternatives_to_all-at-once_rehashing ?
[08:49:37] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[08:49:37] *** Viewday3 is now known as Viewday
[08:50:52] <dragonmaster> Given that they cite the paper in question, I think it's fair to say that it's a summary of the idea in the paper :)
[08:51:08] <fentanyl> Alright, I was editing that.
[08:51:23] <dragonmaster> Ah.  Then I'll read it more carefully
[08:51:59] *** Joins: Viewday6 (~Viewday@user/viewday)
[08:52:09] <fentanyl> I was copy editing the whole article for a week now
[08:53:20] <dragonmaster> s/expansive/expensive
[08:54:09] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[08:54:09] *** Viewday6 is now known as Viewday
[08:54:52] * fentanyl done
[08:57:56] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[08:58:12] <dragonmaster> "n such case, the rehashing operation is done incrementally i.e. prior memory block allocated for old hash table gets extended.
[08:58:14] <dragonmaster> gah.
[08:59:06] <dragonmaster> The first part of the sentencd is talking about rehashing, and the second part is talking about extending the memory used by the table.  While these are both parts of the process of incremental rehashing of the table, the two parts are not directly related.
[09:01:27] <dragonmaster> You should separate the ideas of extending the allocated memory and the incremental rehashing (in my opinion)
[09:02:48] *** Quits: nyjets (~zz@2001:8003:1612:d500:90ae:f6da:98b8:499) (Ping timeout: 260 seconds)
[09:04:51] *** Quits: AsenMx (~AsenMx@user/asenmx) (Ping timeout: 250 seconds)
[09:05:01] *** Joins: Nistar (Nistar@gateway/vpn/protonvpn/nistar)
[09:05:29] <fentanyl> dragonmaster: now? i modified that.
[09:05:41] <fentanyl> i.e. was ambigious
[09:05:56] *** Joins: derjanni (~textual@p508ee2f2.dip0.t-ipconnect.de)
[09:06:11] <dragonmaster> I think that's much better
[09:10:01] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 256 seconds)
[09:10:58] *** Joins: Raguile (~Raguile@user/raguile)
[09:11:25] *** Joins: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net)
[09:11:35] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9971-ce5a-c805-3e08.res6.spectrum.com) (Remote host closed the connection)
[09:12:02] *** Joins: Viewday0 (~Viewday@user/viewday)
[09:12:36] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[09:13:59] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[09:13:59] *** Viewday0 is now known as Viewday
[09:14:03] *** Joins: i336 (~i336@101.174.243.53)
[09:15:17] <i336> hey all. did GCC change default C standard between 8.3.0 and 10.2.1, and does the newer C standard have different behavior relating to multiple definitions? or do I have a broken GCC installation? https://stackoverflow.com/questions/69908418/multiple-definition-of-first-defined-here-on-gcc-10-2-1-but-not-gcc-8-3-0
[09:15:59] *** Joins: nyjets (~zz@2001:8003:1612:d500:5d1:6077:62ce:c82d)
[09:16:00] <i336> feel free to answer there and/or here, no preference. I primarily want to understand what I've done wrong :D
[09:16:20] <i336> s/definitions/declarations/
[09:16:32] <floatcomplex> the default c standard did not change
[09:16:34] <caze> Yeah, gcc was broken for a while, and everyone learned the broken code that it was allowing, and then they started to follow the standard, and everyone's code broke.
[09:16:38] <rsjw> I'm a little confused on the bucket-cleaning algorithm... what's the purpose of step 2: "The bucket B(h_new(key)) is cleaned."?
[09:16:47] <i336> floatcomplex: thanks, so it's not that then.
[09:16:52] <i336> caze: oh?
[09:17:31] <fentanyl> rsjw: to rehash the pre-existing items at B(h_new(key))
[09:17:34] <rsjw> i336: they just changed the default for common variables
[09:17:50] <i336> aaaaaaaaa
[09:18:07] *** Quits: thesemicolons (~thesemico@user/thesemicolons) (Quit: leaving)
[09:18:07] <i336> so I crashed into the only change...? :D
[09:18:26] <floatcomplex> whatever change you are talking about has nothing to do with a change in the c standard
[09:18:37] <i336> floatcomplex: okay then. still learning, long way to go.
[09:18:52] <rsjw> i336: https://gcc.gnu.org/gcc-10/porting_to.html you can just add -fcommon
[09:19:11] <floatcomplex> i336: plug your code into godbolt.org, make sure it's in C mode instead of C++ mode, select your compiler version, see if you can mimic the change
[09:19:19] <rsjw> i336: "just" as in "simply", not "only" :)
[09:19:50] <rsjw> fentanyl: but why would you need to do that? wouldn't it be done by steps 1 or 3?
[09:20:04] <caze> Somebody was here complaining that they should have changed the standard, instead of changing the behavior of gcc.
[09:20:20] *** Joins: ts (~ts@114.254.0.60)
[09:20:34] <i336> rsjw: ah.... I see; I've crashed into -fno-common. I was actually looking at example code of people using `extern` and was like ".....I'm /sure/ I've not seen that in stuff GCC has compiled..."
[09:20:44] *** ts is now known as Guest6799
[09:20:49] <i336> welp. time to update my head with correct sources of truth :)
[09:21:26] * i336 fires an "extern" confetti cannon at all the header files
[09:22:31] <fentanyl> rsjw: lets say h_old(key) hashes to index 8, so we go there and get the item and if it exists, we need to rehash that, so we use new hash fn, h_new(key) and it hashes to 10, but what if some elements already exist 10?, we need to "clean" that bucket by first rehashing bucket 10 and come back again to insert the 'key'.
[09:22:33] <i336> rsjw: if you want to plonk that into an answer on SO I'll accept it
[09:22:55] <fentanyl> So, we recursively do that
[09:23:27] <caze> i336: Your question is probably a dupe, tbh.
[09:23:31] <fentanyl> I should have mentioned that its done recursively, but thats an implementation detail.
[09:24:02] <i336> caze: there are a tonne of dupes asking about "multiple definition" "first defined here" but none of them cover the GCC 10 update, just newbie Arduino developers learning about definition vs declaration
[09:24:05] <rsjw> fentanyl: but if you're recursively doing that you've just blown your real-time constraints, which goes against the whole thesis of the paper
[09:24:37] *** Quits: pucara (~i@181.92.84.24) (Quit: Lost terminal)
[09:25:19] <caze> Hmm, let me grep my channel logs.
[09:25:22] <fentanyl> rsjw: I think per amortized analysis, only a single call to rehashing of h_new(key) will be done with high probability.
[09:25:33] <caze> 04/21/21 13:00:20       <lemonade`>     LuKaRo: GCC 10 introduced a change in its default settings where it uses -fno-common instead of -fcommon. see https://gcc.gnu.org/gcc-10/porting_to.html
[09:25:43] <fentanyl> that's why they mention amortized cost.
[09:26:14] <rsjw> fentanyl: again, the whole point of the paper's algorithm was not not rely on amortization, but to have a fixed upper bound for real-time constraints
[09:26:27] <caze> 09/10/20 10:48:09       <poprocks>      oh wow I'm dumb, I read it backwards. *starting* in gcc10, fno-common is the default.
[09:26:30] <rsjw> fentanyl: unless I'm misunderstanding something
[09:26:41] <caze> 09/10/20 10:40:48       <twkm>  gcc needs even more coercion to obey the standard, i.e., -fno-common.
[09:27:09] <caze> 07/15/20 17:23:26       <Redfoxmoon>    yeah, gcc 10 switched from defaulting to -fcommon to -fno-common
[09:27:16] <rsjw> (It's quite possible I'm misunderstanding something)
[09:27:17] <caze> Well I guess there's a reason for IRC to exist.
[09:27:32] <i336> interesting
[09:27:50] <fentanyl> rsjw: At page 5, see point 1 of "4 Conclusion"
[09:27:57] <i336> now we just need an artificial-general-intelligence based IRC to stackoverflow bridge
[09:28:01] <fentanyl> "Amortization of expensive operations can play an important role in migrating a data structure to realtime."
[09:28:38] <fentanyl> So, I think they're relying on amortization with high probability that only a single call to rehashing of h_new(key) would be done in the procedure.
[09:28:59] <floatcomplex> how is it that i have been writing code for all these years including across the gcc 10 boundary and have never needed to know about -fno-common
[09:29:44] <caze> Maybe because you learned C correctly and never ran into it?
[09:29:58] <rsjw> fentanyl: ooh... right... I was thinking of amortization in a different way. yes, they're talking about spreading out the cost over several calls and calling that amortization. I was thinking of something else
[09:30:06] *** Quits: nyjets (~zz@2001:8003:1612:d500:5d1:6077:62ce:c82d) (Quit: WeeChat 1.1.1)
[09:31:17] <fentanyl> But I still think rehashing all in one go, like allocating new table, rehashing and deallocating the old table as a whole, would still give better lookup performance (also add/remove) than compared to this method on the paper. But, again, its memory-performance trade-off (we can only have one thing at a time, classical problem) :)
[09:31:20] *** Quits: cm007magnum (~Rheanna@218.78.67.149) (Remote host closed the connection)
[09:31:22] <fentanyl> rsjw: 
[09:32:10] <fentanyl> Space–time tradeoff I mean
[09:32:28] <rsjw> fentanyl: but my point remains that I don't think they're relying on probability that it won't be recursive
[09:32:43] *** Joins: cm007magnum (~Rheanna@101.91.232.166)
[09:34:42] <rsjw> I don't think space-time tradeoff is the right term. it's more of a "do it later" thing rather than a "do it in less time at the cost of more memory" thing or vice versa
[09:35:17] *** Parts: hotep (~yeurt@copyfree/advocate/tusko) (Byeee)
[09:35:27] *** Joins: amorel (~amorel@mx.mompl.net)
[09:36:00] <fentanyl> assuming we have a decent hash functions, the posibility of getting a collision just after we doubled the size of the hash table is relatively lower. So, I think when we hash the key with h_new(new), I'd guess the collision in here would be probabilistically lower.
[09:36:11] <rsjw> oh sorry, yes, space-time tradeoff, I missed your previous message that gave context to what you were talking about
[09:36:11] *** Quits: neunon (~neunon@user/neunon) (Quit: ZNC 1.8.2 - https://znc.in)
[09:36:41] *** Joins: aliosablack (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374)
[09:37:25] *** Joins: Viewday6 (~Viewday@user/viewday)
[09:37:45] *** Joins: neunon (~neunon@user/neunon)
[09:37:51] <aosync> would you people rather use variants structs with unions, or rather using type-punning of a structure containing the type that all substructures contain, and then up/downcast based on the actual type
[09:38:15] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[09:38:30] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[09:38:57] <fentanyl> rsjw: see the paragraph at p. 4 below Fig. 3
[09:39:00] *** Quits: Viewday (~Viewday@user/viewday) (Read error: Connection reset by peer)
[09:39:00] *** Viewday6 is now known as Viewday
[09:39:12] <fentanyl> "This is a direct result of the resize-amortization feature of our implementation: it spreads the operations of an entire resize over multiple calls to the table, so the average time per call suffers."
[09:39:19] <rsjw> aosync: listing all the possible types in a union limits the kinds of variants you can have in the future, which may or may not fit your situation
[09:40:04] <caze> You already limit it by putting it into a struct.
[09:40:15] <rsjw> fentanyl: right, it spreads it out over multiple calls. however, that doesn't imply that it is recursive
[09:40:29] <floatcomplex> aosync: what is this for
[09:40:34] <floatcomplex> aosync: my gut reaction is yagni
[09:41:03] <aosync> in my case (i am making an ast representation and the variants are the different kind of statements/expr) having the possible types limited is not a problem
[09:41:39] <floatcomplex> ok that sounds reasonable
[09:41:42] <floatcomplex> don't overgeneralize it
[09:42:58] <fentanyl> rsjw: like i mentioned, the recursive part is executed when there alreaxy exists some items at location h_new(key) because, we can't just insert `key` into h_new(key) when its not empty. So, we check `if h_new(key) == T[h_new(key)].FIRST_ITEM.index` and if its false, we know we have to rehash this pre-existing item so we call the function again, it gets rehashed, returns, and we continue inserting the `key` 
[09:43:04] <fentanyl> (from the first call) into h_new(key)
[09:44:49] <rsjw> fentanyl: why can't we insert 'key' into B(h_new(key)) when it's not empty? it's just a linked list
[09:45:54] *** Joins: magic_ninja (~sparkie1@ip24-255-219-188.ks.ks.cox.net)
[09:45:58] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[09:46:30] <fentanyl> rsjw: Because, the pre-existing items at B(h_new(key)) (lets call it x') doesn't necessarily supposed to be there, meaning h_new(x'.key) doesn't always equal h_new(key); so in that case we are inserting keys into buckets which doesn't hash into the same bucket
[09:47:42] <fentanyl> in that case, we need to move the item x' to the bucket B(h_new(x'.key))
[09:48:10] *** Joins: immibis (~hexchat@62.156.144.218)
[09:48:23] <fentanyl> *remember, the hash values of the items change once we rehash and resize due to modulo operation
[09:49:18] <fentanyl> So, h_new(x'.key) % N != h_new(x'.key) % M
[09:49:36] <fentanyl> So, we need to rehash x'
[09:50:14] <aosync> float: thanks. are there other options besides what i listed
[09:50:44] *** Joins: puke (~puke@user/puke)
[09:52:19] *** Joins: thesemicolons (~thesemico@user/thesemicolons)
[09:52:48] <floatcomplex> aosync: probably, but the tagged union of a finite number of subtypes is the way i'd do it if i were doing that
[09:52:49] <rsjw> "in that case we are inserting keys into buckets which doesn't hash into the same bucket" you're inserting the key into the bucket determined by h_new, which is of course the same bucket. this statement seems contradictory
[09:53:20] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[09:53:34] <floatcomplex> aosync: i go out of my way not to do teh kinds of things that a tagged union is the right tool for, though :)
[09:53:45] <floatcomplex> like ast stuff
[09:54:59] <rsjw> fentanyl: I thought h_old versus h_new took into account the difference in hash table sizes
[09:57:22] *** Quits: dan_berg_pub (2c6463a49d@2604:bf00:710:0:5054:ff:feea:5006) (Read error: Connection reset by peer)
[09:57:29] *** Joins: dan_berg_pub (2c6463a49d@chat.sr.ht)
[09:58:18] *** Quits: soapsudsxx (~soapsudsx@209.221.40.144) (Remote host closed the connection)
[10:02:19] *** Quits: Viewday (~Viewday@user/viewday) (Read error: Connection reset by peer)
[10:02:32] *** Joins: Viewday (~Viewday@user/viewday)
[10:12:46] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[10:13:02] *** Joins: kish` (~aqua@user/aqua)
[10:15:42] <aosync> float: lol
[10:21:02] *** Quits: Enitin (~Enitin@82.102.22.86) (Ping timeout: 240 seconds)
[10:21:07] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 250 seconds)
[10:21:12] *** Joins: Enitin (~Enitin@82.102.22.85)
[10:21:21] *** Quits: cm007magnum (~Rheanna@101.91.232.166) (Remote host closed the connection)
[10:21:37] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:23:33] *** Joins: cm007magnum (~Rheanna@101.89.150.168)
[10:24:23] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:26:41] *** Joins: Viewday5 (~Viewday@user/viewday)
[10:28:45] *** Parts: rsjw (~quassel@user/rsjw) ()
[10:28:47] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[10:28:48] *** Viewday5 is now known as Viewday
[10:29:30] *** Joins: strajder (~strajder@user/strajder)
[10:30:19] *** Joins: mrig (~AdiIRC@user/mrig)
[10:38:36] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[10:40:32] *** Quits: Nistar (Nistar@gateway/vpn/protonvpn/nistar) (Ping timeout: 240 seconds)
[10:43:19] *** Joins: M77hamster7[m] (~M77hamste@2001:470:69fc:105::1:308a)
[10:47:42] *** Joins: Viewday6 (~Viewday@user/viewday)
[10:48:41] *** Joins: Famine- (~Famine@user/famine)
[10:49:45] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[10:49:45] *** Viewday6 is now known as Viewday
[10:51:41] *** Quits: Famine_ (~Famine@user/famine) (Ping timeout: 246 seconds)
[10:55:32] *** Quits: i336 (~i336@101.174.243.53) (Ping timeout: 240 seconds)
[10:59:45] *** Joins: bzng (~bzng4@2a02:60a0:102:4302:2451:e64:c86e:2a4e)
[11:01:38] *** Joins: i336 (~i336@101.174.249.94)
[11:02:39] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[11:03:09] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[11:04:08] *** Quits: MrMobius_ (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net) (Read error: Connection reset by peer)
[11:05:25] *** Joins: gproto23 (~gproto23@user/gproto23)
[11:07:05] *** Quits: i336 (~i336@101.174.249.94) (Ping timeout: 246 seconds)
[11:08:50] *** Joins: i336 (~i336@101.175.41.249)
[11:10:29] *** Joins: Rounin (~david@84.212.130.215)
[11:10:40] *** wils is now known as wilz
[11:11:13] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:11:13] *** Quits: cm007magnum (~Rheanna@101.89.150.168) (Remote host closed the connection)
[11:12:15] *** Joins: Viewday4 (~Viewday@user/viewday)
[11:13:23] *** Joins: vysn (~vysn@user/vysn)
[11:13:24] *** Joins: cm007magnum (~Rheanna@61.171.69.141)
[11:13:38] *** Quits: nop (~Murray@89.109-247-180.customer.lyse.net) (Quit: leaving)
[11:14:02] *** Quits: i336 (~i336@101.175.41.249) (Ping timeout: 240 seconds)
[11:14:06] *** Joins: Murray7501 (~Murray@89.109-247-180.customer.lyse.net)
[11:14:07] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[11:14:07] *** Viewday4 is now known as Viewday
[11:15:19] *** Joins: Inst (~Inst@2601:6c4:4080:3f80:75c6:91f1:4f95:975b)
[11:15:43] *** Quits: p0g0 (~p0g0@23.252.179.181) (Ping timeout: 250 seconds)
[11:16:01] *** Joins: i336 (~i336@121.217.196.215)
[11:18:34] *** Joins: rgrinberg (~textual@190.113.102.153)
[11:18:34] *** Quits: mven` (~mven@ip68-104-39-54.lv.lv.cox.net) (Quit: ZNC 1.8.2 - https://znc.in)
[11:19:23] *** Joins: p0g0 (~p0g0@216.211.156.94)
[11:19:34] *** Quits: amorel (~amorel@mx.mompl.net) (Quit: Leaving)
[11:20:42] *** Quits: i336 (~i336@121.217.196.215) (Ping timeout: 260 seconds)
[11:22:12] *** Joins: amorel (~amorel@mx.mompl.net)
[11:26:01] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 256 seconds)
[11:26:46] *** Quits: Inst (~Inst@2601:6c4:4080:3f80:75c6:91f1:4f95:975b) (Ping timeout: 245 seconds)
[11:30:11] *** Quits: rahl- (~rahl@102.114.76.71) (Ping timeout: 246 seconds)
[11:30:46] *** Quits: kaji (~kajiryoji@2001:470:69fc:105::405b) (Quit: Client limit exceeded: 20000)
[11:32:00] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Quit: Leaving)
[11:32:02] *** Quits: alch (~alch@151.46.1.91) (Read error: Connection reset by peer)
[11:32:08] *** Joins: rahl (~rahl@102.114.116.223)
[11:32:48] *** Quits: gce108 (~gce@user/gce108) (Remote host closed the connection)
[11:33:41] *** Joins: gce108 (~gce@user/gce108)
[11:36:10] *** Joins: i336 (~i336@101.175.202.29)
[11:36:11] *** Joins: Famine_ (~Famine@user/famine)
[11:36:33] *** Joins: alch (~alch@151.46.60.218)
[11:37:09] *** Joins: Viewday8 (~Viewday@user/viewday)
[11:38:12] *** Quits: Raguile (~Raguile@user/raguile) (Ping timeout: 260 seconds)
[11:39:03] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[11:39:03] *** Viewday8 is now known as Viewday
[11:39:07] *** Quits: Famine- (~Famine@user/famine) (Ping timeout: 250 seconds)
[11:42:41] *** Joins: nun (~nun@178.115.236.156.static.drei.at)
[11:44:45] *** Quits: i336 (~i336@101.175.202.29) (Ping timeout: 250 seconds)
[11:46:25] *** Joins: i336 (~i336@121.217.104.202)
[11:51:18] *** Quits: i336 (~i336@121.217.104.202) (Ping timeout: 268 seconds)
[11:52:34] *** Joins: i336 (~i336@101.175.194.169)
[11:52:34] *** Joins: aradesh (~aradesh@user/aradesh)
[11:53:21] *** Joins: V-T60 (~v@91.203.24.166)
[11:54:34] *** Quits: malloy (~jimery@116.30.220.108) (Ping timeout: 250 seconds)
[11:56:46] *** Joins: malloy (~jimery@116.30.220.108)
[11:59:22] *** Joins: lionkor (~lionkor@beammp/staff/lionkor)
[12:01:41] *** Quits: cm007magnum (~Rheanna@61.171.69.141) (Remote host closed the connection)
[12:01:46] *** Quits: i336 (~i336@101.175.194.169) (Ping timeout: 245 seconds)
[12:01:49] *** Joins: Viewday2 (~Viewday@user/viewday)
[12:03:09] *** Joins: cm007magnum (~Rheanna@218.78.109.69)
[12:03:59] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[12:03:59] *** Viewday2 is now known as Viewday
[12:12:32] *** Quits: simon323 (~simon323@2409:8a34:46c:5830:a81d:9c68:9138:e31e) (Ping timeout: 246 seconds)
[12:12:49] *** Joins: i336 (~i336@101.174.241.14)
[12:15:00] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[12:15:00] *** Joins: brelod (~me@90.244.150.142)
[12:18:25] *** Quits: katnis (uid15849@id-15849.helmsley.irccloud.com) ()
[12:20:10] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[12:22:25] *** Joins: al3xprey (~al3xprey@82.119.80.178)
[12:22:28] *** Joins: Viewday9 (~Viewday@user/viewday)
[12:23:31] *** Joins: noob1 (~noob1@ip5f590919.dynamic.kabel-deutschland.de)
[12:23:51] *** Quits: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com) (Read error: Connection reset by peer)
[12:24:03] *** Quits: al3xprey (~al3xprey@82.119.80.178) (Changing host)
[12:24:03] *** Joins: al3xprey (~al3xprey@user/al3xprey)
[12:24:15] *** Parts: al3xprey (~al3xprey@user/al3xprey) ()
[12:24:23] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[12:24:23] *** Viewday9 is now known as Viewday
[12:26:02] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 240 seconds)
[12:26:57] *** Joins: al3xprey (~al3xprey@user/al3xprey)
[12:27:09] *** Joins: loganlee (~Thunderbi@user/loganlee)
[12:27:47] *** Quits: i336 (~i336@101.174.241.14) (Ping timeout: 256 seconds)
[12:28:09] *** Joins: i336 (~i336@121.217.197.61)
[12:34:18] *** Parts: al3xprey (~al3xprey@user/al3xprey) ()
[12:35:05] *** Joins: system_error (~SystemErr@user/systemerror)
[12:35:40] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[12:38:08] *** Joins: arinov (~arinov@213.194.126.155)
[12:38:17] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[12:42:04] *** Joins: acerbic (~acerbic@cs-xdata-50-86-48-149.cspire.com)
[12:42:32] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[12:46:03] *** Quits: Guest6799 (~ts@114.254.0.60) (Quit: Leaving)
[12:47:33] *** Joins: Viewday7 (~Viewday@user/viewday)
[12:48:19] *** Quits: riposte (~finalripo@2403-5802-74-2-20c-29ff-fef3-ce22.ip6.aussiebb.net) (Quit: Quitting)
[12:49:19] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[12:49:19] *** Viewday7 is now known as Viewday
[12:51:59] *** Quits: V-T60 (~v@91.203.24.166) (Quit: Leaving.)
[12:52:13] *** Joins: riposte (~finalripo@2403-5802-74-2-20c-29ff-fef3-ce22.ip6.aussiebb.net)
[12:52:13] *** Joins: Y4knotiS (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:52:27] *** Quits: rgrinberg (~textual@190.113.102.153) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:52:40] *** Joins: V-T60 (~v@91.203.24.166)
[12:57:39] *** Joins: Aloli_9264 (~Administr@2408:820c:8f3f:2b10:8457:661:a511:ba25)
[13:00:06] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:01:29] *** Joins: freakazoid333 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038)
[13:01:42] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[13:02:11] *** Quits: andjjj23 (~irc@107.170.228.47) (Ping timeout: 264 seconds)
[13:02:32] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038) (Ping timeout: 240 seconds)
[13:04:10] *** Joins: CaCode (~CaCode@user/cacode)
[13:04:27] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038)
[13:05:04] *** Joins: earnestly (~earnest@user/earnestly)
[13:05:11] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[13:07:17] *** Quits: freakazoid333 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038) (Ping timeout: 264 seconds)
[13:07:35] *** Joins: Viewday3 (~Viewday@user/viewday)
[13:07:49] *** Guest6197 is now known as Tom^
[13:09:09] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[13:09:09] *** Viewday3 is now known as Viewday
[13:13:31] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[13:13:37] *** Joins: Famine- (~Famine@user/famine)
[13:13:51] *** Joins: gproto23 (~gproto23@user/gproto23)
[13:15:57] *** Joins: seninha (~seninha@user/seninha)
[13:15:58] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038)
[13:17:05] *** Quits: Famine_ (~Famine@user/famine) (Ping timeout: 256 seconds)
[13:19:17] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038) (Ping timeout: 264 seconds)
[13:20:13] *** Joins: loganlee (~Thunderbi@user/loganlee)
[13:20:44] *** Joins: larry87 (~quassel@2601:2c7:4280:17a0:774c:2e23:a824:936d)
[13:21:02] *** Quits: highrate (~presonic@111-22-237-24.gci.net) ()
[13:22:44] *** Joins: gera (~gera@user/gera)
[13:24:34] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[13:25:07] <gera> Hello. I can't figure out why does double free happen in add function when I do reallocarray https://pst.moe/paste/cpuepe
[13:25:09] *** Joins: kaji (~kajiryoji@2001:470:69fc:105::405b)
[13:28:42] <dave0> gera: what is reallocarray ?
[13:29:17] *** Joins: simon323 (~simon323@2409:8a34:46c:5830:95d7:122b:d31f:33e4)
[13:29:31] <fizzie> Possibly unrelated to that, but your `string_length` in that function is too small by one.
[13:29:50] <fizzie> You need strlen(s) + 1 bytes for a copy of the string s.
[13:32:03] *** Joins: xa0s (~xa0s@mab.sdf.org)
[13:32:04] <fizzie> I'm also relatively suspicious about `reallocarray(..., new_size + 1, ...)` together with the assignments of the string and the null pointer being to `new_size - 2` and `new_size - 1` respectively.
[13:32:19] <gera> fizzie: Yes I forgot about strlen + 1. But it still crashes
[13:32:21] <rcf> dave0: it's what you get when you make realloc more like calloc, if that makes sense. No need to calculate the size yourself, and it will be guaranteed to not overflow. 
[13:32:36] *** Joins: Viewday8 (~Viewday@user/viewday)
[13:32:41] <dave0> rcf: is it a thing? i can't find it in posix
[13:32:45] *** Joins: CaCode_ (~CaCode@user/cacode)
[13:32:46] <rcf> Not POSIX, no. 
[13:32:56] <rcf> I would very much like for it to be in POSIX, though. 
[13:33:12] <fizzie> Also, use some sort of memory debugger (-fsanitize=address, valgrind), those tend to show the actual root causes more often than waiting for the allocation functions to fail.
[13:34:06] <rcf> Indeed, they'll tell you where it was first freed. 
[13:34:10] <dave0> gera: stick a   fprintf(stderr, "%lx ", (long)stringarray);   just after reallocarray ... i suspect stringarray is changing but the change is not updated in main()
[13:34:15] *** Quits: ryt (~ryt@precari.at) (Ping timeout: 260 seconds)
[13:34:39] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[13:34:39] *** Viewday8 is now known as Viewday
[13:34:52] <fizzie> Here's ASan on that code, for example: https://0x0.st/-5lf.txt
[13:35:13] <trenka> gera: in your stringarray_add you change stringarray, but it's not changed in main
[13:35:15] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 250 seconds)
[13:35:35] <fizzie> Yeah, that's more or less what the ASan error says too.
[13:35:49] <gera> trenka: so i need triple pointer?
[13:36:01] <trenka> gera: or return it like your reallocarray()
[13:36:14] <dave0> gera: yes but easier to read is simply    return stringarray;
[13:36:15] <gera> ok i got it
[13:36:40] <dave0> gera: stringarray = stringarray_add(stringarray, "a");
[13:36:45] *** Quits: Celelibi (celelibi@user/celelibi) (Ping timeout: 268 seconds)
[13:37:07] <gera> yay works
[13:37:23] <dave0> triple * is just too baroque!
[13:37:39] <fizzie> Never pass a chance to become a three-star programmer.
[13:39:59] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[13:41:12] <fizzie> (Might give some thought for a `struct { char **strings; size_t len, cap; }` over a null-pointer-terminated `char **` though. Allows other realloc strategies than just +1, and an O(1) access to the size.)
[13:41:12] *** Quits: cm007magnum (~Rheanna@218.78.109.69) (Remote host closed the connection)
[13:41:46] *** Joins: Celelibi (celelibi@user/celelibi)
[13:43:03] <dave0> go uses that cap thing :-(
[13:43:18] *** Joins: cm007magnum (~Rheanna@218.78.79.129)
[13:44:06] <dave0> address and length is enough
[13:44:32] <fizzie> It's not if you want to be able to, say, double the size.
[13:44:58] <fizzie> (Per realloc, I mean.)
[13:47:10] *** Joins: _nightw0lf (~nightw0lf@77.125.126.63)
[13:52:00] <markand> reallocarray is in next POSIX
[13:52:19] <markand> with strlcpy and strlcat as well
[13:52:40] *** Joins: Viewday8 (~Viewday@user/viewday)
[13:53:06] <markand> https://www.austingroupbugs.net/view.php?id=1218 
[13:53:10] <candide> Title of markand's link: 0001218: Add reallocarray() - Austin Group Defect Tracker
[13:53:20] *** Quits: Viewday (~Viewday@user/viewday) (Read error: Connection reset by peer)
[13:53:20] *** Viewday8 is now known as Viewday
[13:55:06] *** Joins: Klinda (~superleag@user/klinda)
[13:55:27] *** Joins: ___nightw0lf (~nightw0lf@77.125.126.63)
[13:55:32] *** Quits: _nightw0lf (~nightw0lf@77.125.126.63) (Quit: leaving)
[13:55:35] *** Quits: ___nightw0lf (~nightw0lf@77.125.126.63) (Remote host closed the connection)
[13:55:50] *** Joins: _nightw0lf (~nightw0lf@77.125.126.63)
[13:56:57] *** Quits: _nightw0lf (~nightw0lf@77.125.126.63) (Remote host closed the connection)
[14:00:06] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[14:00:10] <varaindemian> Bou: 
[14:00:55] <varaindemian> Bou: what can I use to reconstruct this binary here? https://github.com/cowrie/cowrie/issues/733#issuecomment-383149099
[14:00:57] <candide> Title of varaindemian's link: Using echo to build binary · Issue #733 · cowrie/cowrie · GitHub
[14:01:12] *** Joins: andjjj23 (~irc@107.170.228.47)
[14:02:18] <Bou> well the commands are right there
[14:02:31] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:02:31] <Bou> run the echo's and you have the binary
[14:03:37] <Bou> (do NOT run that last line as it will execute the payload, whatever it is)
[14:03:49] *** Joins: ko (~i.am@user/marlboro)
[14:04:41] *** Quits: lkronnus (~kron@179097066103.provale.com.br) (Ping timeout: 256 seconds)
[14:05:00] <amosbird> Hmm, I guess I have to write a test file first before testing if it's readonly
[14:05:08] <amosbird> but the write itself might fail...
[14:06:21] *** Quits: inomoz (~inomoz@176.59.125.26) (Quit: WeeChat 3.3)
[14:07:02] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[14:07:50] *** Joins: lkronnus (~kron@179097066103.provale.com.br)
[14:08:05] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[14:09:03] *** Joins: frost (~frost@user/frost)
[14:12:47] *** Parts: gera (~gera@user/gera) (Leaving)
[14:14:25] <slidercrank> instead of 'echo' one can use 'xxd'. but it's not always present in the system.
[14:16:02] *** Quits: frost (~frost@user/frost) (Ping timeout: 240 seconds)
[14:16:51] <varaindemian> Bou: yeah, got it. I thought there might be a more elegant way
[14:18:06] *** Joins: Viewday6 (~Viewday@user/viewday)
[14:18:21] *** Joins: NeoCron (~NeoCron@p200300c4cf161b0075b55a4b5f100d7e.dip0.t-ipconnect.de)
[14:19:59] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[14:19:59] *** Viewday6 is now known as Viewday
[14:20:12] *** Joins: random-nick (~random-ni@87.116.176.55)
[14:21:20] *** Quits: lkronnus (~kron@179097066103.provale.com.br) (Ping timeout: 246 seconds)
[14:21:53] *** Quits: NeoCron (~NeoCron@p200300c4cf161b0075b55a4b5f100d7e.dip0.t-ipconnect.de) (Remote host closed the connection)
[14:24:09] <Bou> varaindemian: it's an ELF binary with an ARM machine flag, and it has a `GET /bins/usb_bus.arm` string in there, that's all I can see for now
[14:25:18] <varaindemian> Bou: yep, and your process of reconstrction was to copy and paste each command?
[14:25:19] <Bou> there's only one google result with that URL so you found something obscure I guess
[14:26:17] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[14:26:25] <Bou> I stripped off the dates and "; /gweerwe323f" with a regex and ran the echo's yeah
[14:27:18] *** Joins: lkronnus (~kron@179097066116.provale.com.br)
[14:29:09] *** Joins: nyah (~nyah@94.6.71.219)
[14:29:51] *** Joins: frost (~frost@user/frost)
[14:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:31:02] *** Joins: csrf (~csrf@user/csrf)
[14:31:14] *** Quits: cm007magnum (~Rheanna@218.78.79.129) (Remote host closed the connection)
[14:32:22] *** Joins: nobody_ (~nobody@host-79-16-187-29.retail.telecomitalia.it)
[14:32:37] *** Quits: nobody_ (~nobody@host-79-16-187-29.retail.telecomitalia.it) (Remote host closed the connection)
[14:33:06] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[14:34:17] *** Joins: cm007magnum (~Rheanna@218.78.79.129)
[14:36:17] *** Joins: katnis (uid15849@id-15849.helmsley.irccloud.com)
[14:38:31] *** Joins: Viewday4 (~Viewday@user/viewday)
[14:40:23] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[14:40:23] *** Viewday4 is now known as Viewday
[14:41:55] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:43:58] *** Quits: lkronnus (~kron@179097066116.provale.com.br) (Ping timeout: 268 seconds)
[14:47:04] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Read error: Connection reset by peer)
[14:47:39] *** Joins: lkronnus (~kron@179097066201.provale.com.br)
[14:47:50] *** Quits: ckdCreations (~ckdCreati@147.55.130.37) (Read error: Connection reset by peer)
[14:48:03] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[14:52:11] *** Joins: rando25892 (~user@user/rando25892)
[14:52:17] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[14:52:56] *** Joins: ckdCreations (~ckdCreati@147.55.133.130)
[14:53:15] *** Quits: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net) (Ping timeout: 250 seconds)
[14:53:25] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[14:57:09] *** Quits: dexter0 (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net) (Ping timeout: 250 seconds)
[14:57:18] *** Joins: dexter0_ (~dexter0@c-69-181-126-161.hsd1.ca.comcast.net)
[14:57:43] *** dexter0_ is now known as dexter0
[14:58:14] *** Joins: karakedi (~eAC53C340@user/karakedi)
[14:58:59] <fizzie> ... | sed -e "s|[^']*'||;s|'.*||;s|\\\x||g" | xxd -r -ps > out.elf   if you want an "elegant" way that doesn't involve executing the echo commands. ;)
[14:59:07] *** Joins: Viewday8 (~Viewday@user/viewday)
[15:00:31] *** Quits: puke (~puke@user/puke) (Quit: puke)
[15:00:47] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[15:00:47] *** Viewday8 is now known as Viewday
[15:01:41] *** Joins: cart_man (~rynot@host-78-144-127-199.as13285.net)
[15:02:40] *** Joins: puke (~puke@user/puke)
[15:07:35] *** Joins: Viewday6 (~Viewday@user/viewday)
[15:09:17] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[15:09:17] *** Viewday6 is now known as Viewday
[15:13:04] *** Joins: Atque (~Atque@user/atque)
[15:15:05] *** Quits: Zenton (~user@user/zenton) (Ping timeout: 264 seconds)
[15:21:15] *** Quits: cm007magnum (~Rheanna@218.78.79.129) (Remote host closed the connection)
[15:21:51] <varaindemian> fizzie: input is the entire comment?
[15:22:13] <varaindemian> sorry for my ignorance
[15:23:47] *** Joins: cm007magnum (~Rheanna@218.78.109.69)
[15:23:47] <fizzie> Just the lines with the data, not the last one.
[15:23:56] <varaindemian> fizzie: 
[15:23:59] <varaindemian> okay
[15:24:02] <varaindemian> thank you!
[15:24:08] *** Joins: Viewday8 (~Viewday@user/viewday)
[15:24:11] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Quit: leaving)
[15:25:43] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[15:25:44] *** Viewday8 is now known as Viewday
[15:26:18] <varaindemian> looks painful 😅
[15:26:29] <Bou> I'm pretty sure that was the intent
[15:27:52] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: bbl testing sway and wayland.)
[15:28:21] *** Joins: Viewday1 (~Viewday@user/viewday)
[15:28:24] *** Quits: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com) (Quit: leaving)
[15:30:15] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[15:31:53] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[15:32:02] *** Quits: lkronnus (~kron@179097066201.provale.com.br) (Ping timeout: 240 seconds)
[15:33:00] *** Quits: alch (~alch@151.46.60.218) (Read error: Connection reset by peer)
[15:33:57] *** Joins: lkronnus (~kron@179097066201.provale.com.br)
[15:35:07] *** Joins: Iarfen (~quassel@181.43.59.114)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:32] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:53] *** Joins: alch (~alch@151.44.38.228)
[15:38:33] *** Joins: bliminse (~bliminse@host86-185-253-43.range86-185.btcentralplus.com)
[15:38:41] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038) (Read error: Connection reset by peer)
[15:38:50] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[15:39:26] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038)
[15:39:41] *** Quits: lionkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 264 seconds)
[15:39:42] *** Quits: frost (~frost@user/frost) (Ping timeout: 260 seconds)
[15:46:09] <fizzie> It's not as bad as it looks. The sed part is basically just "remove everything up to the first single quote, inclusive; then remove everything starting from the first single quote, inclusive; then remove all '\x' pairs" (leaving just a plain hexdump), and for xxd `-ps` means a plain ("PostScript-style") hexdump, and `-r` to do the reverse (from dump to binary rather than binary to dump).
[15:47:15] *** Quits: Viewday1 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[15:47:18] *** Quits: CaCode_ (~CaCode@user/cacode) (Quit: Leaving)
[15:47:21] *** Quits: int (~int@0x4.cx) (Quit: see you :))
[15:47:32] *** Quits: derjanni (~textual@p508ee2f2.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[15:49:13] *** Quits: noob1 (~noob1@ip5f590919.dynamic.kabel-deutschland.de) (Quit: Connection closed)
[15:49:49] *** Joins: int (~int@0x4.cx)
[15:54:05] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[15:54:27] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[15:55:27] *** Joins: Zenton (~user@user/zenton)
[15:57:14] *** Quits: Iarfen (~quassel@181.43.59.114) (Ping timeout: 246 seconds)
[15:58:17] *** Joins: Iarfen (~quassel@ec2-3-225-168-229.compute-1.amazonaws.com)
[15:59:11] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[16:01:35] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:01:48] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[16:02:52] *** Joins: mononote (~mononote@user/mononote)
[16:04:52] *** Joins: CaCode (~CaCode@user/cacode)
[16:05:05] *** Joins: humky (~humky@user/humky)
[16:05:55] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[16:06:51] <Bou> could sed do the hex>bin conversion itself? you'd have to match on two hex chars, say '4d', and have sed evaluate \x4d somehow
[16:09:57] <Bou> you can have two calls, one that builds a 's||\x7f\x45|' string and then pipe it to xargs sed, but I'd like one command
[16:10:01] <Bou> elegance!
[16:11:42] *** Quits: cm007magnum (~Rheanna@218.78.109.69) (Remote host closed the connection)
[16:13:56] *** Joins: cm007magnum (~Rheanna@61.171.38.68)
[16:16:05] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[16:17:05] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[16:17:32] *** Quits: Iarfen (~quassel@ec2-3-225-168-229.compute-1.amazonaws.com) (Ping timeout: 240 seconds)
[16:19:02] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 240 seconds)
[16:19:26] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[16:20:44] *** Joins: Atque (~Atque@user/atque)
[16:20:59] *** Joins: panda88kazag (~RadimPavl@176-74-132-138.netdatacomm.cz)
[16:21:01] *** Joins: RadimPavlik_ (~RadimPavl@176-74-132-138.netdatacomm.cz)
[16:24:01] *** Quits: panda88kazag (~RadimPavl@176-74-132-138.netdatacomm.cz) (Client Quit)
[16:28:20] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[16:28:40] *** Joins: Iarfen (~quassel@181.43.59.114)
[16:32:34] *** Joins: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au)
[16:36:03] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[16:38:01] *** Quits: V-T60 (~v@91.203.24.166) (Quit: Leaving.)
[16:38:35] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[16:41:24] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[16:42:32] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[16:43:16] *** Joins: phao (~phao@2804:d45:8e7a:de00:addf:5d52:53ef:63f6)
[16:48:05] *** Quits: Iarfen (~quassel@181.43.59.114) (Ping timeout: 250 seconds)
[16:48:39] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:acbe:450a:d37b:37c7)
[16:48:48] *** Joins: Iarfen (~quassel@181.43.59.114)
[16:52:20] *** Joins: Macuser (~Macuser@216.30.159.201)
[16:52:50] *** Quits: Macuser (~Macuser@216.30.159.201) (Client Quit)
[16:55:21] *** Joins: V-T60 (~v@91.203.24.166)
[16:56:41] *** Joins: constxd (~brad@192.75.101.164)
[16:59:25] *** Joins: MrMobius (~MrMobius@pool-108-31-243-125.washdc.fios.verizon.net)
[17:01:15] *** Quits: cpuid_ (~cpuid@static.136.43.161.5.clients.your-server.de) (Ping timeout: 244 seconds)
[17:01:15] *** Quits: cm007magnum (~Rheanna@61.171.38.68) (Remote host closed the connection)
[17:01:18] *** Joins: AJRS (~AJRS@user/ajrs)
[17:02:42] *** Joins: cm007magnum (~Rheanna@218.78.99.237)
[17:03:02] *** Parts: AJRS (~AJRS@user/ajrs) ()
[17:03:05] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:05:41] <martti> hmm. I'm playing around with doubly linked list, and I seem to have created an interesting bug: dl_index(struct dl *root, size_t n) { size_t i; for(i = 0; i < n; i++) root = root->next; return root; }; struct dl **perm; dl_index(*perm, i) // *perm would now point at the result of dl_index???
[17:07:54] <Bou> eh but you don't store the result of dl_index anywhere
[17:08:38] <martti> it would be stored in struct dl *other, in the concrete code, which... oh.
[17:10:19] <martti> I do have perm = &other somewhere else. so apparently if I want to have a changeable start of the list, the double indirection pointer is a terrible fit.
[17:10:48] *** Quits: makersmasher (~makersmas@2600:6c40:5b00:158d::f8b) (Remote host closed the connection)
[17:11:12] <martti> I actually want struct dl *perm; and then perm = other // now I'm free to reassign other elsewhere without modifying perm.
[17:12:42] *** Quits: coc0nut (~coc0nut@user/coc0nut) (Quit: ZNC 1.8.2 - https://znc.in)
[17:13:02] *** Quits: Iarfen (~quassel@181.43.59.114) (Ping timeout: 240 seconds)
[17:13:28] *** Joins: Iarfen (~quassel@ec2-3-225-168-229.compute-1.amazonaws.com)
[17:13:48] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[17:13:49] <Bou> in your code "root = root->next" only changes what "root" points to, and root is just a parameter, no longer exists after your function returns
[17:14:35] *** Quits: aliosablack (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374) (Ping timeout: 246 seconds)
[17:14:41] *** Quits: Iarfen (~quassel@ec2-3-225-168-229.compute-1.amazonaws.com) (Client Quit)
[17:15:02] *** Joins: Iarfen (~quassel@ec2-3-225-168-229.compute-1.amazonaws.com)
[17:15:25] *** Joins: WilliamLeara (~wdl@cpe-76-185-2-28.tx.res.rr.com)
[17:15:28] <martti> I did print &root and perm, and they didn't point to the same spot, yes. but I figured out I assigned perm = &other; earlier. problem solved
[17:15:37] *** Joins: chomwitt (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374)
[17:15:38] *** Joins: humky_ (~humky@user/humky)
[17:15:57] *** Quits: humky (~humky@user/humky) (Read error: Connection reset by peer)
[17:16:24] <Bou> `dl_index` still does nothing, but okay, apparently you fixed it :)
[17:18:05] *** Joins: humky (~humky@user/humky)
[17:20:09] *** Quits: humky_ (~humky@user/humky) (Read error: Connection reset by peer)
[17:20:38] *** Joins: superboot (~agentgasm@user/superboot)
[17:22:24] *** Joins: alioui (~medeva293@197.238.42.60)
[17:24:41] *** Quits: humky (~humky@user/humky) (Read error: Connection reset by peer)
[17:25:03] *** Quits: puke (~puke@user/puke) (Quit: puke)
[17:25:25] *** Joins: servytor (uid525486@id-525486.hampstead.irccloud.com)
[17:25:31] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 245 seconds)
[17:26:10] *** Joins: motherfsck (~motherfsc@user/motherfsck)
[17:26:39] *** Joins: useretail (~useretail@185.132.19.151)
[17:26:54] *** Joins: BSaboia (~bsaboia@177.37.198.83)
[17:30:00] *** Quits: CaCode (~CaCode@user/cacode) (Quit: Leaving)
[17:35:03] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[17:35:11] *** Quits: Enitin (~Enitin@82.102.22.85) (Ping timeout: 264 seconds)
[17:37:33] *** Joins: Enitin (~Enitin@82.102.22.86)
[17:40:31] *** Quits: eblip (~eb0t@90.209.247.46) (Ping timeout: 245 seconds)
[17:42:44] *** Joins: eblip (~eb0t@90.199.241.70)
[17:48:07] *** justCity is now known as justache
[17:51:22] *** Quits: cm007magnum (~Rheanna@218.78.99.237) (Remote host closed the connection)
[17:53:00] *** Joins: cm007magnum (~Rheanna@61.171.21.169)
[17:53:20] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:55:47] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[18:01:31] *** Joins: sedeki (~textual@user/sedeki)
[18:03:38] *** Quits: bzng (~bzng4@2a02:60a0:102:4302:2451:e64:c86e:2a4e) (Quit: Leaving)
[18:06:05] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 250 seconds)
[18:06:33] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[18:07:35] *** Quits: phao (~phao@2804:d45:8e7a:de00:addf:5d52:53ef:63f6) (Quit: Leaving)
[18:07:47] *** Quits: sedeki (~textual@user/sedeki) (Ping timeout: 246 seconds)
[18:08:23] *** Joins: sedeki (~textual@user/sedeki)
[18:09:43] *** Quits: V-T60 (~v@91.203.24.166) (Quit: Leaving.)
[18:11:24] *** Joins: makersmasher (~makersmas@2600:6c40:5b00:158d::f8b)
[18:12:30] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[18:12:46] *** Joins: wovixo (~wovixo@128.104.205.49)
[18:13:15] *** Joins: V-T60 (~v@91.203.24.166)
[18:14:47] *** Joins: dsrt^ (~dsrt@h50.174.139.63.static.ip.windstream.net)
[18:16:11] *** Joins: Inline (~Inline@aftr-37-201-240-235.unity-media.net)
[18:18:48] *** Joins: manjaroi3 (~manjaro-i@125.131.131.26)
[18:19:27] *** Quits: slidercrank (~slidercra@user/slidercrank) (Read error: Connection reset by peer)
[18:20:07] *** Joins: slidercrank (~slidercra@user/slidercrank)
[18:21:34] *** Quits: Samian (~s@user/samian) (Read error: Connection reset by peer)
[18:23:45] *** Quits: Aloli_9264 (~Administr@2408:820c:8f3f:2b10:8457:661:a511:ba25) (Quit: Leaving.)
[18:24:13] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[18:24:43] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[18:24:49] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:24:49] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:24:49] *** Joins: wroathe (~wroathe@user/wroathe)
[18:26:04] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[18:30:03] *** Quits: ko (~i.am@user/marlboro) (Quit: I come down here for a fat woman and that's what I'm havin.)
[18:36:23] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 264 seconds)
[18:37:56] *** Joins: CoolerX (~user@user/coolerx)
[18:38:02] <CoolerX> is there a reason to do this? https://github.com/apple/cups/blob/branch-2.2/scheduler/ipp.c#L9831
[18:38:08] <CoolerX> else if (!filetype)
[18:38:19] <CoolerX> just else should be enough
[18:38:32] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 240 seconds)
[18:39:37] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[18:39:52] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[18:41:13] *** Quits: cm007magnum (~Rheanna@61.171.21.169) (Remote host closed the connection)
[18:42:24] <DarkUranium> CoolerX: not really, no. Probably an artefact of some refactor in the past.
[18:42:29] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[18:42:43] <DarkUranium> I *do* sometimes do `else //if (!filetype)` (note the comment), since it clarifies things.
[18:42:55] <DarkUranium> Especially in long & complex if-else chains; to document assumptions.
[18:43:01] *** Joins: cm007magnum (~Rheanna@101.91.232.166)
[18:43:07] <DarkUranium> (for really complex ones, I'll instead do an assert or ensure())
[18:43:54] <slidercrank> ah, it's do teal with tri-state logic. true, false, neither true nor false :)
[18:45:50] <nomagno> Where is _Complex described in the C standard?
[18:46:26] *** Joins: Nistar (Nistar@gateway/vpn/protonvpn/nistar)
[18:47:06] <fizzie> C11 6.2.5p11-13 + chapter 7.3 for the library side.
[18:49:22] *** Joins: Andrew_ (~andrew@user/andrewyu)
[18:50:11] <DarkUranium> slidercrank: it would actually make sense in SQL :P
[18:50:15] *** Quits: AndrewYu (~andrew@user/andrewyu) (Read error: Connection reset by peer)
[18:51:16] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[18:52:34] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[18:52:34] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[18:52:34] *** Joins: wroathe (~wroathe@user/wroathe)
[18:53:29] *** Quits: V-T60 (~v@91.203.24.166) (Remote host closed the connection)
[18:53:47] *** Joins: p_____ (~dyeplexer@user/dyeplexer)
[18:54:23] *** Quits: p_____ (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[18:56:13] *** Joins: asen_ (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[18:56:46] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 245 seconds)
[18:57:02] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 240 seconds)
[18:57:19] *** Joins: pulse (~pulse@user/pulse)
[18:58:11] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[19:00:23] *** Joins: mimmy (~mimmyjau@72.142.88.18)
[19:04:47] *** Joins: dohtem (uid524096@user/dohtem)
[19:05:29] *** Joins: V-T60 (~v@91.203.24.166)
[19:09:10] *** Quits: mimmy (~mimmyjau@72.142.88.18) (Quit: WeeChat 3.3)
[19:12:34] *** Joins: serbest (~serbest@user/serbest)
[19:13:05] *** Joins: magla (~gelignite@55d416cc.access.ecotel.net)
[19:14:05] *** Quits: serbest (~serbest@user/serbest) (Client Quit)
[19:15:01] *** Joins: jusski (~user@78-63-85-123.static.zebra.lt)
[19:16:53] *** Quits: Iarfen (~quassel@ec2-3-225-168-229.compute-1.amazonaws.com) (Ping timeout: 264 seconds)
[19:19:26] *** Joins: Iarfen (~quassel@181.43.59.114)
[19:21:18] *** Quits: V-T60 (~v@91.203.24.166) (Quit: Leaving.)
[19:24:51] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[19:25:12] *** Quits: Famine- (~Famine@user/famine) (Read error: Connection reset by peer)
[19:25:36] *** Joins: Famine- (~Famine@user/famine)
[19:27:47] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Quit: zzz)
[19:27:59] *** Quits: asen_ (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Read error: Connection reset by peer)
[19:28:05] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[19:28:16] *** Joins: asen_ (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143)
[19:28:21] *** Quits: bindu (~bindu@user/bindu) (Remote host closed the connection)
[19:28:37] *** Joins: bindu (~bindu@user/bindu)
[19:28:55] *** Quits: asen_ (~asen@2408:821b:618:2ef0:ab85:814b:bf8f:a143) (Max SendQ exceeded)
[19:31:32] *** Quits: cm007magnum (~Rheanna@101.91.232.166) (Remote host closed the connection)
[19:32:16] *** Quits: alch (~alch@151.44.38.228) (Read error: Connection reset by peer)
[19:35:45] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Remote host closed the connection)
[19:36:05] *** Joins: Senicar (~Senicar@gateway/tor-sasl/senicar)
[19:36:22] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[19:36:53] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[19:37:16] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:b86f:881a:ecd7:30b5)
[19:37:17] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:b86f:881a:ecd7:30b5) (Changing host)
[19:37:17] *** Joins: skapata (~Skapata@user/skapata)
[19:37:19] *** Quits: RadimPavlik_ (~RadimPavl@176-74-132-138.netdatacomm.cz) (Ping timeout: 256 seconds)
[19:37:22] *** Joins: alch (~alch@151.46.54.158)
[19:38:24] *** Joins: gproto23 (~gproto23@user/gproto23)
[19:41:09] *** Joins: chair1 (~bbs@187.109.18.204)
[19:41:12] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 268 seconds)
[19:41:52] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[19:46:11] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 250 seconds)
[19:48:16] * floatcomplex senses tingling
[19:49:18] *** Quits: cust (amaama@blackbox.amaama.org) (Ping timeout: 260 seconds)
[19:49:46] <DarkUranium> floatcomplex: ?
[19:49:58] <floatcomplex> nomagno is reading about _Complex
[19:50:12] <DarkUranium> Oh.
[19:50:27] <system_error> floatcomplex> don't do --i++ :P
[19:51:15] <floatcomplex> ,english --i++
[19:51:16] <candide> floatcomplex: Pre-decrement increment `i` by one.
[19:51:33] <floatcomplex> well that clears it up
[19:56:37] *** Quits: cart_man (~rynot@host-78-144-127-199.as13285.net) (Quit: Konversation terminated!)
[19:58:34] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-6407-dc09-fb7a-51c4.res6.spectrum.com)
[20:01:21] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (Ping timeout: 245 seconds)
[20:03:07] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[20:04:02] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[20:07:00] *** Joins: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru)
[20:08:08] *** Parts: alioui (~medeva293@197.238.42.60) ()
[20:11:25] *** Quits: slidercrank (~slidercra@user/slidercrank) (Quit: Why not ask me about Sevastopol's safety protocols?)
[20:14:32] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (Ping timeout: 240 seconds)
[20:16:13] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[20:17:06] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:18:39] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[20:18:59] *** Joins: teepee (~teepee@openscad/teepee)
[20:21:31] *** Quits: SamuelMarks (~samuel@user/samuelmarks) (Ping timeout: 256 seconds)
[20:21:36] *** Joins: cm007magnum (~Rheanna@101.89.150.168)
[20:25:39] <nomagno> floatcomplex: Why are you sensing tingling- OOOOOH that's what your name means
[20:25:43] <nomagno> Literally `float complex`
[20:25:51] <nomagno> Well done, me
[20:30:41] *** Quits: lkor (~lionkor@beammp/staff/lionkor) (Ping timeout: 264 seconds)
[20:30:58] *** Joins: lkor (~lionkor@beammp/staff/lionkor)
[20:32:10] *** Joins: rgrinberg (~textual@200.5.63.76)
[20:32:22] <sham1> Polar or square
[20:33:30] *** Joins: SamuelMarks (~samuel@user/samuelmarks)
[20:33:31] *** Joins: mahmutov_ (~mahmutov@37.155.56.185)
[20:34:10] <floatcomplex> sham1: "polar" is just a representation for humans
[20:34:56] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:36:20] <sham1> Well it also makes some arithmetic simpler and such, since it might require fewer square roots and divisions for certain operations
[20:37:28] <floatcomplex> not the operations that matter though
[20:37:51] <floatcomplex> complex numbers are in c99 so that you can do fft's and tridiagonal solvers and things without having to use fortran
[20:43:05] *** Quits: katnis (uid15849@id-15849.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[20:43:26] *** Quits: makersmasher (~makersmas@2600:6c40:5b00:158d::f8b) (Ping timeout: 245 seconds)
[20:50:25] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[20:53:22] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[20:54:36] *** Joins: V-T60 (~v@91.203.24.166)
[20:54:55] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:381f:5f31:286f:e038) (Read error: Connection reset by peer)
[20:55:11] *** Joins: V-T601 (~v@91.203.24.166)
[20:55:40] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-381f-5f31-286f-e038.inf6.spectrum.com)
[20:56:20] *** Joins: makersmasher (~makersmas@097-092-244-194.res.spectrum.com)
[20:57:16] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-6407-dc09-fb7a-51c4.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[20:58:14] *** Joins: phyto (~phyto@host-198-114.txbrags.bryan.tx.us.clients.pavlovmedia.net)
[21:03:43] *** Joins: hexteex (~hexteex@gateway/tor-sasl/hexteex)
[21:04:52] *** Joins: cust (amaama@blackbox.amaama.org)
[21:05:34] <SamuelMarks> floatcomplex - just do ffts in asm
[21:05:54] <floatcomplex> no
[21:06:05] *** Quits: Iarfen (~quassel@181.43.59.114) (Ping timeout: 264 seconds)
[21:06:18] <floatcomplex> my pure c99 fft is faster than the cmsis one
[21:06:47] <floatcomplex> i write plenty of asm but that's not the time
[21:07:04] <SamuelMarks> Did you see the NN FFT?
[21:07:05] *** Joins: Iarfen (~quassel@ec2-3-225-168-229.compute-1.amazonaws.com)
[21:07:23] <floatcomplex> oh the one that guesses the answer?
[21:07:38] <SamuelMarks> Hey cool he did a PhD in it https://www.cs.waikato.ac.nz/~ihw/PhD_theses/Anthony_Blake.pdf - SIMD FFT
[21:07:39] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 250 seconds)
[21:07:42] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[21:08:53] <floatcomplex> fftw is not really the state of the art anymore, it made some design decisions that made a lot of sense in the 90s
[21:09:19] <floatcomplex> there are faster implementations that are a lot lighter-weight and permissively licensed
[21:09:52] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[21:10:23] <floatcomplex> some guy took the old linpack fft or whatever and ported it to c, cleaned up the code a bit, and trivially simdified it and it easily beats fftw on arm when compiled with a modern c compiler
[21:10:41] <SamuelMarks> floatcomplex - Nah I think I was thinking of https://onlinelibrary.wiley.com/doi/full/10.1002/sam.11531
[21:10:44] <candide> Title of SamuelMarks's link: Fourier neural networks as function approximators and differential equation solvers - Ngom - - Statistical Analysis and Data Mining: The ASA Data Science Journal - Wiley Online Library
[21:10:53] <floatcomplex> right yeah the one that guesses the answer :)
[21:11:00] <SamuelMarks> floatcomplex that thesis was 2012 I think
[21:11:06] <SamuelMarks> :)
[21:11:14] *** Quits: cm007magnum (~Rheanna@101.89.150.168) (Remote host closed the connection)
[21:11:42] <floatcomplex> if that "guess" was deterministic and in integer-only math it would be a really good intermediate step for lossless audio compression
[21:11:48] <floatcomplex> but alas
[21:11:51] *** Quits: manjaroi3 (~manjaro-i@125.131.131.26) (Ping timeout: 268 seconds)
[21:11:55] <SamuelMarks> a lass
[21:12:49] *** Joins: X-Scale` (~ARM@165.201.137.78.rev.vodafone.pt)
[21:13:04] <floatcomplex> for lossless audio compression stuff you really want to predict the next sample given the recent previous samples in like a few tens of clock cycles at most, and the encoder and decoder need to always guess the same guess
[21:13:12] *** Quits: ckdCreations (~ckdCreati@147.55.133.130) (Quit: Leaving)
[21:13:19] <SamuelMarks> Also I never drop to C99 unless I actually need floating point, and never go to C11 unless I use threading (unicode is meh)
[21:13:39] <tyzoid> What do you normally use SamuelMarks C17?
[21:13:44] <SamuelMarks> C89
[21:13:52] <tyzoid> Gotcha
[21:13:54] <floatcomplex> weirdo
[21:13:55] <floatcomplex> :)
[21:13:58] *** Joins: cm007magnum (~Rheanna@218.78.67.149)
[21:14:07] <tyzoid> I use C99 by default for most things
[21:14:22] <tyzoid> I did get a request to support C89 internally
[21:14:25] <tyzoid> which was funny
[21:14:28] <floatcomplex> from whom?
[21:14:36] <tyzoid> ${DAYJOB}
[21:14:45] <floatcomplex> tyzoid: does someone expect you to compile stuff for m68k using metrowerks codewarrior
[21:14:52] <floatcomplex> because you can use gcc for that
[21:15:02] <tyzoid> floatcomplex: I did tell them that
[21:15:05] *** Quits: X-Scale (~ARM@31.22.162.107) (Ping timeout: 264 seconds)
[21:15:06] <floatcomplex> smh
[21:15:06] <tyzoid> Different platform, but similar concept
[21:15:08] *** Quits: nvmd (~nvmd@user/nvmd) (Quit: Later, nerds.)
[21:15:17] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[21:15:33] <apotheon> I'm clearly not a serious enough C dev.  I don't run into cases where I need anything typical C11 compilers provide that typical C99 compilers don't.
[21:15:52] *** Joins: de-facto (~de-facto@user/de-facto)
[21:16:07] <apotheon> There are things C11 includes that would be nice, but aren't supported by most compilers.
[21:16:30] <SamuelMarks> I keep sending PRs to random C projects giving them C89 [and CMake]
[21:16:32] <floatcomplex> apotheon: anonymous unions of anonymous structs are nice syntactic sugar, and stdatomic is really really useful even on single-core microcontrollers. but if you don't have those things you can get by using compiler extensions
[21:16:45] *** X-Scale` is now known as X-Scale
[21:16:48] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Remote host closed the connection)
[21:16:49] <apotheon> I suspect Microsoft insisted on making deterministically zeroed memory an optional update.
[21:17:08] <floatcomplex> c89 and cmake lol
[21:17:15] <SamuelMarks> yeah and all those nice _s extensions never made it, but MSVC forces it (basically, I mean you can disable their warn)
[21:17:49] <SamuelMarks> floatcomplex - Honestly I would rather code in a language with pattern matching, but if I'm going C I'd better go all the way ;)
[21:17:51] <apotheon> SamuelMarks: Why CMake?
[21:17:58] <floatcomplex> SamuelMarks: c89 is not "all the way"
[21:18:04] <SamuelMarks> apotheon - Third-party library support in a cross-platform way
[21:18:07] <apotheon> SamuelMarks: Is that as a replacement for autofoo, or what?
[21:18:11] <SamuelMarks> floatcomplex - What, you want me to go K&R?
[21:18:17] <floatcomplex> it's a version of the language that was standardized before the language was complete enough to be a replacement for fortran 77
[21:18:23] <floatcomplex> sorry
[21:18:26] <apotheon> Are you adding CMake to projects that just use bare Make?
[21:18:30] <SamuelMarks> yeah
[21:18:54] <SamuelMarks> See my GitHub https://github.com/SamuelMarks
[21:19:06] <sham1> I basically never use stuff that isn't also in C89 or C99 yet I usually still use C18 and will probably be looking into the future and C23. Because why not. All the platforms I tend to care about have either modern GCC or clang
[21:19:06] <floatcomplex> SamuelMarks: are you the chaotic evil one on the alignment chart of your coworkers
[21:19:14] <SamuelMarks> https://github.com/SamuelMarks?tab=repositories&q=&type=fork&language=c
[21:19:18] <floatcomplex> forcing them to use a weird modern build system AND a weird ancient language dialect
[21:19:24] *** Joins: Senicar (~Senicar@gateway/tor-sasl/senicar)
[21:19:34] <SamuelMarks> :P
[21:19:46] *** Joins: tradar (~tradar@user/tradar)
[21:19:49] <SamuelMarks> floatcomplex - Actually this is basically a hobby, I don't have coworkers
[21:20:02] <sham1> Although C23 is actually gonna be huge. 2s complement as requirement? Yay
[21:20:05] <apotheon> floatcomplex: It's not force if they can just reject the pull request.
[21:20:11] <floatcomplex> rue
[21:20:14] <SamuelMarks> Just finished reading the K&R book, and am halfway through Deep C Secrets
[21:20:23] <SamuelMarks> So it's also a way to try and become non-shitty at C
[21:21:15] <floatcomplex> writing new code in c89 in 2021 is not the way to become non-shitty at c
[21:21:20] <floatcomplex> it's the way to never learn how to be const correct
[21:21:31] *** ski_ is now known as ski
[21:21:37] <floatcomplex> because -Wdeclaration-after-statement and const-correctness are in direct conflict
[21:22:12] <SamuelMarks> floatcomplex - Well my main interest in C is cross-platform cross-language interoperability.
[21:22:28] <apotheon> cross-language
[21:22:33] <apotheon> Do you mean spoken languages?
[21:22:38] <SamuelMarks> I'm not writing a database in C (though maybe I'll implement some consensus algorithms… hmm maybe I am writing a db)
[21:22:54] <sham1> Well for FFI you still want some C99 stuff, like fixed width integers
[21:22:57] <system_error> I think I liked variadic macro in c99, they allow some crazy crap :)
[21:23:08] <SamuelMarks> apotheon - I'm writing compilers for: Rust, TypeScript, Swift, Java, Kotlin, C, C++
[21:23:24] <floatcomplex> clang is pissed at me lol
[21:23:25] <SamuelMarks> To translate between each language, maintaining the interfaces
[21:23:32] <apotheon> SamuelMarks: You're busy.
[21:23:34] <sham1> floatcomplex: what did you do
[21:23:39] <floatcomplex> do this = next, next = (this + n / this) / 2; while (next < this);
[21:23:40] <SamuelMarks> Along the way I ended up writing package managers
[21:23:44] <SamuelMarks> apotheon =D
[21:23:51] <floatcomplex> "possible misuse of a comma operator here"
[21:24:25] <sham1> Well yeah, that doesn't seem like something where you'd use the comma
[21:24:39] <sham1> Err, waif
[21:24:40] <sham1> What
[21:24:40] <floatcomplex> gcc is like you do you
[21:24:44] <floatcomplex> :)
[21:24:51] <fizzie> Maybe floatcomplex has to pay extra per each {}.
[21:25:06] <SamuelMarks> floatcomplex - Yeah the comma direction isn't guranteed
[21:25:21] <SamuelMarks> (the order of evaluation of things between commas isn't defined by the standard)
[21:25:22] <apotheon> SamuelMarks: I just saw your GitHub profile.  You're *very* busy.
[21:25:23] <fizzie> What? Comma operator evaluation order *is* guaranteed.
[21:25:30] <SamuelMarks> apotheon =D =D =D
[21:25:35] <apotheon> I don't see a single no-contributions day in the grid.
[21:25:57] <floatcomplex> gaming your git history is sus
[21:26:10] <apotheon> . . . though I do see a number of one-contribution days, so someone might be gaming the system.
[21:26:11] <fizzie> C11 6.5.17p2: "The left operand of a comma operator is evaluated as a void expression; there is a sequence point between its evaluation and that of the right operand. Then the right operand is evaluated; the result has its type and value."
[21:26:14] <SamuelMarks> fizzie - Wait you sure? - In K&R they said it wasn't (at least on function arguments)
[21:26:26] <pragma-> Doesn't merely commenting on an issue now count as a contribution?
[21:26:29] <fizzie> The comma in a function call is not the comma operator.
[21:26:44] <SamuelMarks> ah
[21:26:44] <fizzie> It's just a piece of syntax separating the arguments. Yes, the evaluation order of arguments in a function call is not guaranteed.
[21:27:11] <SamuelMarks> pragma- Mine are legit. All public and open-source, so you can search through everything I've done the last many years
[21:28:51] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[21:30:44] *** Joins: alefir (~alefir@rrcs-24-43-248-58.west.biz.rr.com)
[21:30:58] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[21:31:16] <SamuelMarks> fizzie: C89 "A pair of expressions separated by a comma is evaluated left-to-right, and the value of the left expression is discarded." - yeah you're right
[21:33:04] <tyzoid> SamuelMarks: I've abused the comma operator in macros in some of my code
[21:33:24] <tyzoid> Useful for macro "return values"
[21:33:36] <sham1> This is the kind of stuff we have to do since we don't have statement expressions
[21:33:54] <sham1> Come on wg14
[21:34:19] <earnestly> > 3rd law
[21:36:53] <floatcomplex> oh this is better
[21:36:57] <floatcomplex> for (unsigned long long next = this; (next = (this + n / this) / 2) < this; this = next);
[21:37:11] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-6407-dc09-fb7a-51c4.res6.spectrum.com)
[21:37:26] *** Joins: [SyntaxError] (~user@user/syntaxerror/x-9308191)
[21:38:12] <sham1> Does this count as abuse of control structures, I am not sure
[21:38:22] <floatcomplex> clang's not complaining anymore
[21:38:23] <sham1> What I am sure about is that this looks brilliant
[21:39:26] <tyzoid> what is `n`?
[21:39:36] *** Quits: mononote (~mononote@user/mononote) (Ping timeout: 268 seconds)
[21:39:37] <floatcomplex> an unsigned long long long integer
[21:39:40] <floatcomplex> very long
[21:39:54] <earnestly> > https://www.youtube.com/watch?v=6-1Ue0FFrHY
[21:39:54] <tyzoid> Ah, I see. A looooooooooooooooooooooong boi
[21:39:55] <candide> Title of earnestly's link: Long Long Man - YouTube
[21:40:31] <sham1> Each o in that long better correspond to the amount of 64 bit words it's made of
[21:40:41] <floatcomplex> tyzoid: it's this value specifically: 9007199254740881
[21:40:47] <floatcomplex> the largest prime <= 2^53
[21:40:48] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:acbe:450a:d37b:37c7) (Read error: Connection reset by peer)
[21:41:53] *** Quits: LordJohn (~lordjohn@l37-192-203-250.novotelecom.ru) (Read error: Connection reset by peer)
[21:43:15] <floatcomplex> (the largest prime you can store in an ieee double, because all integers >= 2^53 that you can store in a double are even, and therefore cannot be primes. so the largest prime you can use for comparing speed of prime number stuff between languages when one of the languages forces all numbers to be represented as doubles)
[21:43:40] <sham1> Now I'm just wonder what the next prime would be
[21:43:48] <sham1> Time to ask Wolfram Alpha
[21:44:11] <floatcomplex> 9007199254740997
[21:44:37] <sham1> Hm
[21:45:30] <sham1> Wolfram is not giving me an anwer. Curious
[21:45:46] <floatcomplex> lol
[21:46:24] <sham1> "(no such number found)" That's it lads, Wolfram Alpha has proven number theory incorrect
[21:46:37] <SamuelMarks> earnestly - oh man I remember that vid
[21:47:08] <sham1> Looking for "primes > 9007199254740881" shouldn't result in "(no such number found)"
[21:47:09] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[21:48:18] <floatcomplex> well it's that number
[21:48:29] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:acbe:450a:d37b:37c7)
[21:49:59] *** Quits: riposte (~finalripo@2403-5802-74-2-20c-29ff-fef3-ce22.ip6.aussiebb.net) (Quit: Quitting)
[21:51:16] <nomagno> Wolfram, a math program, refuses to run actual algorithms. Wow
[21:51:19] <sham1> It works with smaller primes, so unless Wolfram Alpha is using floats, something is being silly
[21:52:06] *** Joins: X-Scale` (~ARM@31.22.202.101)
[21:52:42] *** Joins: riposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net)
[21:53:19] *** Quits: X-Scale (~ARM@165.201.137.78.rev.vodafone.pt) (Ping timeout: 256 seconds)
[21:54:14] <SamuelMarks> 2^{82589933}-1 is a pretty big prime
[21:54:31] <sham1> And that technically matches the query, so there
[21:54:33] <sham1> You get the job
[21:55:11] <SamuelMarks> yay
[21:55:12] <nomagno> You get to be the new Wolfram Alpha
[21:55:19] <nomagno> Get inside the mainframe!
[21:55:25] <SamuelMarks> plz plz, just call me Alpha
[21:55:35] <sham1> Tungsten Alpha
[21:55:42] <sham1> So it's not copyright infringement
[21:56:06] *** X-Scale` is now known as X-Scale
[21:56:37] *** Quits: simon323 (~simon323@2409:8a34:46c:5830:95d7:122b:d31f:33e4) (Quit: simon323)
[21:56:54] <floatcomplex> ,cc unsigned long long x = 9007199254740881; double y = x; unsigned long long z = y; puts(x == z ? "true" : "false");
[21:56:57] <candide> floatcomplex: true
[21:56:58] <floatcomplex> ,cc unsigned long long x = 9007199254740997; double y = x; unsigned long long z = y; puts(x == z ? "true" : "false");
[21:57:01] <apotheon> sham1: That's a matter of trademark, not copyright.
[21:57:01] <candide> floatcomplex: false
[21:57:10] <sham1> Yes
[21:57:12] <sham1> That
[21:57:29] <floatcomplex> ,qrpn 9007199254740997 isprime
[21:57:29] <candide> floatcomplex: 0
[21:57:32] <pragma-> ,wa what is the largest prime number?
[21:57:34] <candide> pragma-: Euclid's second theorem establishes that there are infinitely many primes. As a result, there is no largest p​rime number. As of December 2018, the largest p​rime number known is the Mersenne p​rime given by 2^82589933 minus 1, which has 24862048 decimal digits
[21:57:35] <floatcomplex> ,qrpn 9007199254740881
[21:57:40] <floatcomplex> ,qrpn 9007199254740881 isprime
[21:57:56] <floatcomplex> grr
[21:57:58] <floatcomplex> ,qrpn 9007199254740881 isprime
[21:58:00] <candide> floatcomplex: 1
[21:58:24] <floatcomplex> testing the larger of those two values should be a domain error rather than a false negative
[21:58:28] <SamuelMarks> try just taking 2^82589933 and adding 1 until you reach the next prime
[21:58:29] <floatcomplex> oh well
[21:58:30] <SamuelMarks> :P
[21:58:31] *** Joins: cust_ (amaama@blackbox.amaama.org)
[21:58:41] *** Joins: pgib (~textual@173.38.117.83)
[21:58:42] <floatcomplex> SamuelMarks: you'd need to do that with integer bignum arithmetic
[21:58:42] <nomagno> I wonder, is it actually justified for certain countries to consider new prime numbers weaponry?
[21:58:47] *** Quits: i336 (~i336@121.217.197.61) (Ping timeout: 246 seconds)
[21:58:56] <apotheon> no
[21:59:05] <cehteh> weapons grade numbers :)
[21:59:08] <sham1> Is it justified? Yes. Is it justifiable? No. Is it done? Yes
[21:59:13] *** Quits: cust (amaama@blackbox.amaama.org) (Ping timeout: 250 seconds)
[21:59:14] <apotheon> weapons of math instruciton
[21:59:18] <apotheon> s/iton/tion/
[21:59:31] <sham1> Cryptography is a military asset, after all
[21:59:35] *** Joins: i336 (~i336@101.174.113.1)
[21:59:37] <apotheon> depends on your definition of "justified"
[22:00:01] <SamuelMarks> lol it's a thing https://www.google.com/search?q=exponent+bomb
[22:00:08] <apotheon> If you mean "made an effort to make it appear justified" . . .
[22:00:22] <SamuelMarks> apotheon fully justified?
[22:00:22] <cehteh> haha lets make t-shirts with "Primes Murder" :)
[22:00:24] <SamuelMarks> #TeX
[22:01:03] <nomagno> Cyptography is the only reasonable alternative to fully public communication nowadays. Military asset as much as talking
[22:01:24] *** Quits: cm007magnum (~Rheanna@218.78.67.149) (Remote host closed the connection)
[22:01:28] <floatcomplex> https://imgs.xkcd.com/comics/legal_hacks.png
[22:01:59] <SamuelMarks> floatcomplex - not clicking any xkcd link without alt text :P
[22:02:16] <apotheon> Yes, communication is a military asset.
[22:02:35] <chair1> I don't get the prime numbers as weaponry?
[22:02:45] <apotheon> Prime numbers are important in cryptography.
[22:02:49] <sham1> Life munitions: https://upload.wikimedia.org/wikipedia/commons/9/96/Munitions_T-shirt_%28front%29.jpg
[22:02:56] <apotheon> Militaries consider cryptography a military asset.
[22:03:10] <apotheon> chair1: hope that helps
[22:03:22] *** Joins: cm007magnum (~Rheanna@218.78.104.50)
[22:03:23] <nomagno> Military assets are considered military by cryptography
[22:03:26] <nomagno> Wait, messed that up
[22:03:34] <sham1> Good thing they used Perl for that. It'd otherwise be too easy for foreign nationals to implement RSA :P
[22:03:50] <chair1> Oh ok hahha
[22:03:54] <floatcomplex> SamuelMarks: it also really depresses me that a new thesis came out as recently as 2012 that even indirectly perpetuates the myth that limiting yourself to only doing an fft of powers of two is reasonable
[22:04:04] <floatcomplex> that was true for two years from 1962 to 1964
[22:04:23] <apotheon> sham1: If they really wanted to obfuscate it, they'd use PHP.
[22:04:32] <floatcomplex> plenty of opportunities to simdify five-smooth numbers and plenty of useful fft implementations that do
[22:04:38] *** Quits: Nistar (Nistar@gateway/vpn/protonvpn/nistar) (Quit: WeeChat 3.3)
[22:05:14] <SamuelMarks> floatcomplex mmmmmmmm
[22:06:19] * SamuelMarks scrolls through https://liu.diva-portal.org/smash/get/diva2:1300794/FULLTEXT01.pdf
[22:07:46] <apotheon> SamuelMarks: What's that? (other than a PDF)
[22:08:16] <SamuelMarks> World’s Fastest FFT Architectures: Breaking the
[22:08:16] <SamuelMarks> Barrier of 100 GS/s
[22:09:49] *** Quits: CoolerX (~user@user/coolerx) (Ping timeout: 268 seconds)
[22:09:50] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:11:05] <cehteh> does that exist in real hardware?
[22:12:21] *** Joins: ckdCreations (~ckdCreati@147.55.133.142)
[22:14:02] <floatcomplex> SamuelMarks: the trouble with papers like this (still looking at the earlier one you sent from 2012) is that they cannot be published without name dropping and commenting on all the prior art, but no grad student has anywhere near the amount of time necessary to truly understand all that came before, so the papers end up being full of bullshit statements about the prior work that sound like they might be 
[22:14:08] <floatcomplex> correct but are coming from just a cursory glance at some prior paper that did the same thing
[22:14:39] *** Joins: Macuser (~Macuser@216.30.159.201)
[22:14:51] <floatcomplex> so you have to go back 30+ years to find papers whose first couple pages aren't just box-checking bullshit statements
[22:15:09] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[22:16:15] <floatcomplex> in the academic paper publishing game the only winning move is not to play
[22:16:34] <apotheon> Publish somewhere other than gatekeeper journals.
[22:16:54] <floatcomplex> apotheon: it's not just the journals, it's their advisors too
[22:17:15] *** Quits: riksu-raksu (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksu-raksu)
[22:17:20] <floatcomplex> like, career prospects directly depend on that name dropping
[22:17:28] <floatcomplex> they can't just switch it off
[22:18:42] *** Quits: mhi (~mhi@user/mhi) (Ping timeout: 260 seconds)
[22:19:31] <apotheon> floatcomplex: I look forward to the explosion of non-academic science that seems to be poised to occur.
[22:19:39] *** Joins: mhi (~mhi@46.23.94.209)
[22:19:40] *** Joins: Ox151 (~user@user/ox151)
[22:21:00] *** Joins: paku (~paku@2409:4070:221c:6d4e:57c:4654:30eb:5d7)
[22:24:13] <floatcomplex> apotheon: i think what is gonna happen is that companies are gonna stop giving academics the benefit of the doubt
[22:24:19] <floatcomplex> that may have already happened
[22:24:41] <caze> "science is just another religion"
[22:24:46] <paku> Hi people
[22:25:17] <floatcomplex> maybe SamuelMarks has the right idea and we should all just be gaming our git history instead of our publication history
[22:27:00] *** Joins: masterbuilder (~user@user/masterbuilder)
[22:27:33] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Remote host closed the connection)
[22:27:50] *** Quits: s4ndm4n (sandman13@jujube.ircnow.org) (Ping timeout: 246 seconds)
[22:29:09] *** Quits: paku (~paku@2409:4070:221c:6d4e:57c:4654:30eb:5d7) (Quit: Leaving)
[22:29:21] *** Quits: makersmasher (~makersmas@097-092-244-194.res.spectrum.com) (Remote host closed the connection)
[22:29:45] *** Quits: justache (~justache@user/justache) (Read error: Connection reset by peer)
[22:29:53] *** Joins: bingulo (~bingulo@45.4.32.206)
[22:30:16] *** Joins: Narrat (~omnius@p200300df5f0ba03406ea56fffe2e7cdc.dip0.t-ipconnect.de)
[22:30:21] *** Joins: justache (~justache@user/justache)
[22:30:42] *** Joins: paku (~paku@2409:4070:221c:6d4e:57c:4654:30eb:5d7)
[22:31:23] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[22:31:46] *** Quits: rgrinberg (~textual@200.5.63.76) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:33:04] <apotheon> 18:54 < caze> "science is just another religion"
[22:33:07] <apotheon> no, not really
[22:33:18] <earnestly> Nostic cult 2.0
[22:33:39] <apotheon> There is a "religion" out there based on the term "science", but science itself is a process for verification of ideas.
[22:33:51] *** Quits: V-T601 (~v@91.203.24.166) (Ping timeout: 245 seconds)
[22:33:52] <apotheon> earnestly: Do you mean "gnostic"?
[22:34:00] <earnestly> There's science as a method and 'The Science'
[22:34:05] <earnestly> apotheon: Yes, I don't know hy I did that
[22:34:14] <earnestly> Oh maybe that's why
[22:34:24] <apotheon> I think you just restated what I said, but more clearly than my statement.
[22:34:32] *** Quits: V-T60 (~v@91.203.24.166) (Ping timeout: 240 seconds)
[22:34:36] <apotheon> . . . so yeah:
[22:34:50] <apotheon> chair1: As earnestly said, "there's science as a method and 'The Science'".
[22:35:07] <apotheon> oops
[22:35:09] <apotheon> chair1: not you
[22:35:11] <apotheon> caze: you
[22:35:30] <caze> Why me?
[22:35:36] *** Joins: sandman13 (sandman13@jujube.ircnow.org)
[22:35:49] <apotheon> responding to your previous statement
[22:36:07] <caze> It was a quote.
[22:36:23] *** Quits: jusski (~user@78-63-85-123.static.zebra.lt) (Ping timeout: 256 seconds)
[22:36:26] <earnestly> floatcomplex: I think a good thing to look out for is a replacement of the peer review process, if any new journals and such start doing this
[22:36:57] *** Quits: Iarfen (~quassel@ec2-3-225-168-229.compute-1.amazonaws.com) (Ping timeout: 256 seconds)
[22:37:03] <earnestly> Because that process is the heart of the corruption and one of the worst systems of validation.  E.g. consider placing requirements on papers to be accepted based on how many times it has been repeated
[22:37:18] *** Joins: slidercrank (~slidercra@user/slidercrank)
[22:37:29] <caze> apotheon: But thanks for explaining it to me.
[22:37:32] *** Quits: mhi (~mhi@46.23.94.209) (Ping timeout: 240 seconds)
[22:37:37] <earnestly> It needs at least 5 replications to be added and then incentivise more replications to improve its standing
[22:38:05] <floatcomplex> earnestly: i'm not sure replacing the rules currently being gamed with different rules to be gamed is the answer
[22:38:19] <earnestly> floatcomplex: How do you game replication?
[22:39:13] <floatcomplex> i don't know but some sociopathic early career academic will figure it out, without breaking any rules
[22:39:19] <floatcomplex> it's a good thought, though
[22:39:23] *** Joins: mhi (~mhi@46.23.94.209)
[22:39:29] <floatcomplex> there needs to be a culture of valuing reproduceability
[22:39:33] <earnestly> Given the whole point of the method is to produce predictable/repeatible results then incentivising that outcome precisely instead of indirectly
[22:40:03] *** Quits: lemontree (~chat@user/lemontree) (Ping timeout: 268 seconds)
[22:40:21] <floatcomplex> right now there is a culture of not getting scooped, and some possibly-regional biases against inadvertently teaching anyone anything useful
[22:40:24] <earnestly> floatcomplex: I could imagine review circles forming like they do now where each just "say" it replicated it
[22:40:54] *** Joins: lemontree (~chat@user/lemontree)
[22:41:01] <earnestly> So there'd have to be something to ensure the replication is valid, in a cryptographic sort of sense.  I'm not smart enough to do think of this though
[22:41:31] <floatcomplex> had a problem, used blockchain lol
[22:41:36] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Remote host closed the connection)
[22:41:55] *** Joins: Senicar (~Senicar@gateway/tor-sasl/senicar)
[22:43:08] <floatcomplex> it needs to be a culture shift. confirming existing results in an independent study needs to be as valued as original exploration, and original exploration should be judged on how unnecessarily hard they made it to try to reproduce
[22:43:25] *** Joins: CoolerX (~user@user/coolerx)
[22:43:47] *** marcj- is now known as marcj
[22:44:25] <earnestly> Yeah I'm not suggesting blockchain
[22:44:25] <floatcomplex> right now there are whole institutions who either teach or select for, i'm not sure, the ability to use your words to prove you're the smartest person in the room without accidentally teaching any of the listeners anything
[22:44:42] <earnestly> I think arxiv is showing us that something is starting to happen
[22:45:05] *** Quits: Haxxa (~Haxxa@122.199.46.64) (Quit: Haxxa flies away.)
[22:46:01] *** Quits: Inline (~Inline@aftr-37-201-240-235.unity-media.net) (Ping timeout: 250 seconds)
[22:46:02] *** Quits: lemontree (~chat@user/lemontree) (Ping timeout: 240 seconds)
[22:46:23] *** Quits: paku (~paku@2409:4070:221c:6d4e:57c:4654:30eb:5d7) (Quit: Leaving)
[22:47:13] *** Joins: Haxxa (~Haxxa@89nnjg0xckz9ggn6r5xm.ip6.superloop.com)
[22:47:24] *** Joins: lemontree (~chat@user/lemontree)
[22:48:08] *** Quits: mhi (~mhi@46.23.94.209) (Ping timeout: 246 seconds)
[22:49:23] *** Joins: mhi (~mhi@46.23.94.209)
[22:50:43] *** Joins: CaCode (~CaCode@user/cacode)
[22:51:21] *** Quits: cm007magnum (~Rheanna@218.78.104.50) (Remote host closed the connection)
[22:52:32] *** Quits: chomwitt (~chomwitt@2a02:587:dc0f:7c00:12c3:7bff:fe6d:d374) (Ping timeout: 240 seconds)
[22:53:35] *** Joins: cm007magnum (~Rheanna@218.78.105.67)
[22:53:38] *** Joins: ARoxdale (~ARoxdale@84.203.31.229)
[22:55:04] *** Joins: shivesh (~shivesh@user/shivesh)
[22:57:05] *** Joins: derjanni (~textual@ip-88-153-100-48.hsi04.unitymediagroup.de)
[22:59:18] *** Joins: ko (~i.am@user/marlboro)
[23:00:59] *** Quits: hexteex (~hexteex@gateway/tor-sasl/hexteex) (Quit: Leaving)
[23:02:49] *** Joins: CaCode_ (~CaCode@user/cacode)
[23:02:55] *** Quits: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au) (Ping timeout: 250 seconds)
[23:05:02] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 240 seconds)
[23:05:16] *** Joins: kurahaupo (~kurahaupo@123-243-221-134.tpgi.com.au)
[23:06:25] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[23:07:00] *** Parts: CoolerX (~user@user/coolerx) ()
[23:07:56] *** Joins: horribleprogram (~user@user/horribleprogram)
[23:08:00] <horribleprogram> jesus christ #C++ is useless
[23:08:04] <horribleprogram> i need a makefile
[23:08:15] <horribleprogram> UNAME := $(shell uname) all: echo $(UNAME)
[23:08:39] <tyzoid> wut
[23:12:03] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:12:10] *** Joins: De4nWhit3 (~De4nWhit3@165-73-119-36.ip.afrihost.capetown)
[23:12:26] <De4nWhit3> Hello everyone.
[23:12:35] <chair1> horribleprogram: Dunno what's your question, but regarding those tools in general, perhaps ##workingset can help
[23:12:48] *** Joins: cousteau (~cousteau@user/cousteau)
[23:13:33] <chair1> hi De4nWhit3 
[23:15:11] <horribleprogram> nvm #C++ figured it out
[23:15:13] <horribleprogram> it was my bad
[23:15:26] *** Joins: Raguile (~Raguile@user/raguile)
[23:15:30] <horribleprogram> i didn't catch the $(NAME) ... 
[23:15:37] <horribleprogram> kept trying to expand a variable that didn't exist
[23:15:44] <cousteau> this sounds a lot like a work for ##workingset
[23:16:13] <horribleprogram> I got kicked from ##workingset for asking C++ questions
[23:16:19] <cousteau> oh
[23:16:22] <horribleprogram> LOL jks
[23:16:25] <horribleprogram> but yeah I'll join now
[23:16:33] <horribleprogram> i always forget the name of that channel
[23:16:34] <cousteau> yeah that seemed unlikely
[23:16:42] <cousteau> tbf it's a hard to remember name
[23:16:51] <De4nWhit3> Hello cousteau
[23:17:03] <horribleprogram> yeah it should be called... #buildtools
[23:17:05] <horribleprogram> or something
[23:19:43] *** Joins: AsenMx (~AsenMx@user/asenmx)
[23:23:08] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[23:23:36] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[23:25:11] *** Quits: [SyntaxError] (~user@user/syntaxerror/x-9308191) (Quit: see you soon)
[23:26:31] *** Quits: Ox151 (~user@user/ox151) (Quit: ERC (IRC client for Emacs 27.2))
[23:26:45] <cousteau> #buildtools sounds nice, yes
[23:26:55] *** Joins: wootehfoot (~wootehfoo@user/wootehfoot)
[23:27:19] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[23:29:48] *** Joins: plastico (~plastico@neomutt/plastico)
[23:30:15] <horribleprogram> [New Thread 0x2003 of process 1756]
[23:30:16] <horribleprogram>  
[23:30:35] <horribleprogram> (gdb) run 
[23:30:59] <horribleprogram> do I "attach" to it with something like gdb -p 1756 in another terminal?
[23:31:58] <horribleprogram> yeah it doesn't work... even with system integrity protection disabled in recovery mode for macOS
[23:32:10] <horribleprogram> gotta do this on my Linux computer :'(
[23:32:27] <cousteau> #gdb or ##workingset, I guess.  (Seems more like a gdb question than a C question)
[23:32:30] <horribleprogram> dude
[23:32:44] <cousteau> not my fault I only know C!
[23:32:53] <horribleprogram> lol 
[23:33:00] <horribleprogram> it's all good sorry for off-topic
[23:33:01] *** Quits: horribleprogram (~user@user/horribleprogram) (Remote host closed the connection)
[23:33:02] <cousteau> This is a channel for getting answers for C questions!  What did you expect?
[23:33:15] <cousteau> ...also yes, use linux if possible :D
[23:34:36] <cousteau> like, windows and mac are more thought for everyday usage, and may not play well with compilers and stuff like that (some compilers even have their result "eaten" by antiviruses and the like)
[23:34:45] *** Quits: alch (~alch@151.46.54.158) (Ping timeout: 256 seconds)
[23:34:49] <cousteau> (looking at you, mingw32!)
[23:36:02] <De4nWhit3> Are you talking to a computer?
[23:36:41] *** Quits: pgib (~textual@173.38.117.83) (Quit: 00 PC LOAD LETTER)
[23:36:43] *** Joins: alch (~alch@151.44.85.48)
[23:36:45] <cousteau> I was talking to the hypothetical person that left a while ago. -_-"
[23:37:19] <De4nWhit3> Oh lol. I was about to say that's rad. lol
[23:37:39] *** Quits: chair1 (~bbs@187.109.18.204) (Quit: Good talk fellas, see you)
[23:37:50] <cousteau> I'm not crazy!  Just dumb.
[23:40:16] *** Joins: sachahjkl (~sachahjkl@jon13-h02-176-172-91-51.dsl.sta.abo.bbox.fr)
[23:41:11] <De4nWhit3> Same. I'm about to make a shrine to Dennis  and pray I can make it into a junior C job next year. XD
[23:41:17] *** Quits: cm007magnum (~Rheanna@218.78.105.67) (Remote host closed the connection)
[23:43:10] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[23:43:31] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[23:43:33] <cousteau> cool!
[23:44:23] *** Joins: cm007magnum (~Rheanna@218.78.53.13)
[23:44:57] *** Joins: rgrinberg (~textual@200.5.63.76)
[23:45:27] <apotheon> De4nWhit3: cool
[23:45:42] <apotheon> De4nWhit3: What does making a shrine to dmr entail?
[23:46:12] <De4nWhit3> What is dmr? apotheon
[23:46:17] <floatcomplex> two stone tablets with and a broken third one about coroutines
[23:46:35] <floatcomplex> s/with//
[23:46:37] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[23:46:40] <apotheon> De4nWhit3: Dennis M Ritchie
[23:46:41] *** Joins: mononote (~mononote@user/mononote)
[23:48:31] *** Joins: De4nWhit356 (~De4nWhit3@165-73-119-36.ip.afrihost.capetown)
[23:48:34] <apotheon> hmm
[23:48:53] <apotheon> De4nWhit3: just to catch you up . . .
[23:48:54] <apotheon> 20:15 < apotheon> De4nWhit3: What does making a shrine to dmr entail?
[23:48:59] <apotheon> 20:16 < De4nWhit3> What is dmr? apotheon
[23:49:02] <apotheon> 20:16 < apotheon> De4nWhit3: Dennis M Ritchie
[23:49:19] <De4nWhit356> <3
[23:49:38] <De4nWhit356> It is to pay respects and ask for guidance.
[23:49:39] <apotheon> I want to know about this shrine-building process.
[23:51:06] *** Quits: De4nWhit3 (~De4nWhit3@165-73-119-36.ip.afrihost.capetown) (Ping timeout: 260 seconds)
[23:52:00] *** Quits: sachahjkl (~sachahjkl@jon13-h02-176-172-91-51.dsl.sta.abo.bbox.fr) (Read error: Connection reset by peer)
[23:52:35] <cousteau> I can give you guidance if the job is related to embedded applications
[23:52:42] <cousteau> Use volatile!!!
[23:52:46] <cousteau> (end of advice)
[23:53:36] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[23:53:43] <De4nWhit356> Haha, thank you cousteau '=D 
[23:54:03] <floatcomplex> if you don't know whether to use volatile, don't use volatile
[23:55:03] <De4nWhit356> Hello floatcomplex 
[23:55:15] <floatcomplex> o/
[23:57:10] <cousteau> floatcomplex: unless you're working with embedded systems
[23:57:17] *** Joins: Guest4249 (~Guest42@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[23:57:59] <cousteau> my friends at uni had this running joke because whenever some embedded C code wouldn't work, they'd ask me, I'd just answer "did you try with volatile?", and their code would magically work
[23:58:31] *** Joins: banc- (banc@gateway/vpn/airvpn/banc)
[23:58:51] <cousteau> and then whenever they have a problem, and eventually learn that they had to use volatile, they ping me like "this is all your fault!"
[23:59:07] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 256 seconds)
