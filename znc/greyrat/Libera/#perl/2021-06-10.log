[01:08:36] *** Joins: greyrat (~greyrat@ip202.ip-51-178-215.eu)
[01:08:36] *** Server sets mode: +nt 
[01:11:05] <greyrat> What is the regex `(11+?)`? How can `?` come after `+`?
[01:12:00] <choroba> it's used for "frugal" quantifiers
[01:12:13] <Grinnz> possessive quantifiers
[01:12:17] <revhippie> greyrat: see https://perldoc.perl.org/perlre#Quantifiers
[01:12:18] <Paperbot> Link title(s): [ perlre - Perl regular expressions - Perldoc Browser ]
[01:12:24] <integral> there's a handy doc at https://perldoc.pl/perlreref
[01:12:24] <Paperbot> Link title(s): [ perlreref - Perl Regular Expressions Reference - Perldoc Browser ]
[01:13:43] <Grinnz> basically if the match gets up to that second 1 while trying things from left to right, the match must include as many following 1s, it won't backtrack if the rest of the match fails because of it
[01:14:15] <Grinnz> for example, m/(11+?)1/ can never match; the possessive quantifier will eat all the 1s, and leave none to be matched by the following
[01:14:28] <Grinnz> usually it's used more usefully
[01:14:58] <integral> aren't you mixing up ?+ with +? ?
[01:15:22] *** Joins: monkey_ (~user@181.114.17.106)
[01:16:02] <Grinnz> oh, you're right, i'm thinking of ++
[01:16:10] <Grinnz> +? is non-greedy
[01:16:38] <choroba> 1+? matches at least one 1, but it matches the shortest possible
[01:17:09] <Grinnz> normally the first thing regex will try is the most possible repetitions, and it will only try less if it has to backtrack
[01:17:18] <Grinnz> non-greedy means the first thing it will try is the least possible repetitions
[01:17:32] <xenu> i made the same mistake in my head, in fact, i've just realized that when i wrote a regex here for someone a few days ago, i used *? instead of the correct *+
[01:17:57] <revhippie> eval: $_ = "12333345"; [ [ /(123+)(\d+)/ ], [ /(123+?)(\d+)/ ] ]
[01:17:58] <perlbot> revhippie: [[123333,45],[123,33345]]
[01:18:04] <Grinnz> "shortest possible" is a bit misleading, since it will not try to make it shorter by backtracking behind the quantifier or anything
[01:18:12] <Grinnz> it just means, which it tries first
[01:18:18] <choroba> true
[01:18:19] <integral> so is X++ equivalent to (?>X+) then?
[01:18:23] <Grinnz> yes
[01:18:30] <integral> but with confusing syntax?
[01:18:38] <Grinnz> ?> is the way to write it before 5.10
[01:18:49] <Grinnz> depends on which one is less confusing to you i guess
[01:18:49] <choroba> I'd say shorter rather than confusing
[01:19:23] <integral> it wasn't confusing to me...
[01:20:16] <xenu> btw, non-greedy matching may seem useful on the surface, but there's rarely a good reason to use it
[01:20:32] *** Quits: magla (~gelignite@55d44a14.access.ecotel.net) (Quit: Stay safe!)
[01:20:52] <Grinnz> sweval: ['122223' =~ m/(2+?)3/] # this still matches all the 2s, because nongreedy doesn't change where it starts trying to match them
[01:20:53] <perlbot> Grinnz: [2222]
[01:21:13] <Grinnz> most common misunderstanding of nongreedy
[01:21:40] <xenu> for example "[^"]*" is much better than ".*?"
[01:21:57] <Adura> Regex is like god, powerful but confusing.
[01:22:07] <integral> yeah I use [^/]* lots in matching paths
[01:23:19] <Grinnz> the biggest hurdle is just understanding that regex is a state engine, not a grammar
[01:23:58] <Grinnz> backtracking makes it feel a little grammary but 1) can be really slow 2) only does so much
[01:25:04] <greyrat> raku had some grammary stuff, I wonder if perl 7 is going to adopt them?
[01:25:07] <revhippie> xenu: because of the backtracking?  i use "[^"]*" pretty often and always feel a twinge of guilt for not using ".*?".
[01:25:32] <Grinnz> unlikely, that sort of thing would show up on cpan first if anything
[01:25:53] <xenu> revhippie: reasoning about the behavior of ? when backtracking happens really makes my head hurt
[01:26:00] <choroba> BTW, ever heard of Upland? Seen a Perl job ad, but never heard of them.
[01:26:11] <xenu> someone wrote an article about this
[01:26:12] <xenu> lemme find it
[01:26:20] * GumbyPAN CPAN Upload: Weasel-0.28 by EHUELS https://metacpan.org/release/EHUELS/Weasel-0.28
[01:26:23] <xenu> https://www.perlmonks.org/?node_id=24640
[01:26:25] <xenu> it's ancient!
[01:26:26] <Paperbot> Link title(s): [ Death to Dot Star! ]
[01:26:55] <Grinnz> revhippie: "(.*?)" matches "foo"" like this: "" (fail) "f" (fail) "fo" (fail) "foo" (success)
[01:26:58] <greyrat> revhippie: I always used `[^"]*`, because I did not know of the non-greedy quals :))
[01:27:11] <Grinnz> "[^"]*" matches "foo" like: "foo" (success)
[01:27:51] <Grinnz> there are times when nongreedy is the only way to find the terminator correctly, such as when it consists of a multicharacter pattern
[01:27:56] <Grinnz> like \r\n
[01:28:23] <revhippie> xenu, Grinnz - thanks!
[01:28:23] <Grinnz> but if it's just a single character, the negated character class method is always faster
[01:28:47] <xenu> i know that's impossible, but i really wish regex was a pure state machine. when people write more complex, grammar-like regexes (in the order of a few hundred lines), they very often use atomic groups, .*+ etc. to suppress that annoying backtracking behavior
[01:29:16] <integral> eval: "abc\r\nxyz\r\n" =~ m{((?!\r\n).)*\r\n}s; $&
[01:29:18] <perlbot> integral: abc 
[01:29:37] <xenu> i wish that wasn't necessary
[01:29:53] <Grinnz> i'm pretty sure that's slower than just a nongreedy match
[01:30:18] <Grinnz> also its ugly
[01:31:19] <Grinnz> xenu: yeah, but then on the other hand people expect regexes to "just work" without understanding it's a state machine
[01:31:35] <Grinnz> and backtracking makes that illusion work for most normal cases
[01:32:12] <Grinnz> i do wish a nonbacktracking engine like re2 was available in core
[01:32:25] <Grinnz> but thats a wishlist item
[01:32:38] *** Quits: zakame (~zakame@user/zakame) (Ping timeout: 268 seconds)
[01:32:41] <Grinnz> (the "not gonna happen" sort)
[01:35:21] *** Joins: zakame (~zakame@user/zakame)
[01:37:17] *** Joins: grovershor (~groversho@193.36.225.184)
[01:46:20] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:49:54] *** Quits: ufobat_ (~martin@dynamic-095-117-119-093.95.117.pool.telefonica.de) (Ping timeout: 268 seconds)
[01:56:05] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[02:02:28] *** Quits: brunoramoslu (~brunoramo@94.252.122.109) (Remote host closed the connection)
[02:03:39] *** Joins: brunoramoslu (~brunoramo@94.252.122.109)
[02:04:47] *** Quits: brunoramoslu (~brunoramo@94.252.122.109) (Remote host closed the connection)
[02:06:24] * GumbyPAN CPAN Upload: Weasel-0.29 by EHUELS https://metacpan.org/release/EHUELS/Weasel-0.29
[02:06:24] * GumbyPAN CPAN Upload: IPC-Shareable-1.00 by STEVEB https://metacpan.org/release/STEVEB/IPC-Shareable-1.00
[02:09:18] *** Joins: brunoramoslu (~brunoramo@94.252.122.109)
[02:15:47] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Ping timeout: 252 seconds)
[02:17:08] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 264 seconds)
[02:21:29] *** Joins: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com)
[02:23:05] <pflanze> I wonder if there's a way or a module that gives closures names when assigned to globs (perhaps using Sub::Name).
[02:23:32] <pflanze> Essentially executing: *foo = subname "foo", make_closure ...;
[02:24:28] <pflanze> So, something like sub foo($name, $coderef) { no strict "refs"; *$name = subname $coderef } # untested, I'm sure I'm getting glob referencing wrong or something
[02:24:50] <pflanze> ehr s/foo/def/,  sub def($name, $coderef) { ... }
[02:25:07] <pflanze> so that I could write  `def "foo", make_closure ...`
[02:26:25] <pflanze> But perhaps even better if a pragma or something would simply assign the glob's name to the coderef when assigned to it and the coderef is currently unnamed / __ANON__.
[02:27:36] *** Quits: monkey_ (~user@181.114.17.106) (Read error: Connection reset by peer)
[02:30:52] *** Joins: bfr (~yaaic@ip-109-40-131-214.web.vodafone.de)
[02:32:02] <ether> sounds like a combination of B::Hooks::EndOfScope and curry?
[02:37:58] <pflanze> I wasn't looking for curry, but just the naming part. So, you mean hooking up to the end of scope and then checking all CODE slots in all globs whether they contain an unnamed sub and name them if so?
[02:38:09] <pflanze> Sounds like a possibility.
[02:39:12] <pflanze> I'll play around with both approaches I guess. 
[02:40:39] <pflanze> I remember people told me that I shouldn't use globs as people don't know them. So I'm tempted to go the 'def' route, but that almost feels like giving way to a mob. I *can* do what people tell me but why?
[02:42:01] <pflanze> (Ok I could at least omit the quotes via `def foo => givemeaclosure...`. Still?)
[02:44:34] *** Quits: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[02:44:43] *** Joins: Yaakov_ (~yaakov@2601:245:c600:d4:c62c:3ff:fe1e:bc3c)
[02:44:53] *** Quits: Yaakov (~yaakov@user/Yaakov) (Ping timeout: 244 seconds)
[02:45:40] *** Quits: Yaakov_ (~yaakov@2601:245:c600:d4:c62c:3ff:fe1e:bc3c) (Changing host)
[02:45:40] *** Joins: Yaakov_ (~yaakov@user/Yaakov)
[02:45:59] *** Yaakov_ is now known as Yaakov
[02:47:08] *** Quits: pierrot (~pi@user/pierrot) (Quit: ZNC 1.6.4 - http://znc.in)
[02:47:44] *** Joins: pierrot (~pi@user/pierrot)
[02:49:01] *** Quits: Pali (~pali@user/pali) (Ping timeout: 244 seconds)
[02:52:21] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[02:53:50] *** Joins: mattil (~mattil@87-92-46-97.bb.dnainternet.fi)
[02:54:44] *** Quits: pierrot (~pi@user/pierrot) (Quit: ZNC 1.6.4 - http://znc.in)
[02:55:19] *** Joins: pierrot (~pi@user/pierrot)
[02:56:14] *** Joins: PlayerOne (~PlayerOne@55-207-55-95.baltnet.ru)
[02:56:24] <PlayerOne> Hey all ^^
[02:56:55] <PlayerOne> May I ask how would one output changes made by: perl -pi -e 's/.*a.*//' fileTest
[02:58:01] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:58:20] <PlayerOne> Like, this empties every line matching the pattern, but curious if it's possible to return the line's number which changed
[02:58:32] *** Quits: mattil (~mattil@87-92-46-97.bb.dnainternet.fi) (Ping timeout: 264 seconds)
[02:59:46] <xenu> i didn't test it but probably perl -pi -E 's/.*a.*// && say STDERR $.' fileTest
[03:00:28] <Grinnz> pflanze: Mojo::Util::monkey_patch
[03:00:44] <PlayerOne> -E?
[03:00:53] <Grinnz> pflanze: I sent a PR to Sub::Install to add the sub naming as an option, but I don't think it's gone in
[03:01:13] <xenu> PlayerOne: -E is like -e but it enables all the new features, without it say() doesn't work
[03:01:31] <PlayerOne> But it did!
[03:01:36] <PlayerOne> I mean, let me check
[03:01:36] <Grinnz> pflanze: no reason to throw magic at it when you can just use a subroutine to do both the install and the naming
[03:02:07] <pflanze> The reason for "magic" is that I'm not sure why Perl shouldn't be doing this by default.
[03:02:17] <xenu> PlayerOne: anyway, you can use print() instead: print STDERR $., "\n";
[03:02:21] <Grinnz> because you don't always want to rename a sub when installing it
[03:02:24] <Grinnz> e.g. imports
[03:02:27] <pflanze> So for compat, maybe only do it with a pragma. So, implement pragma somehow. So maybe magic.
[03:02:49] <pflanze> Only name them if they do not already have a name (i.e. arenamed ...::__ANON__).
[03:03:09] <pflanze> Once they have a name, leave them as is.
[03:03:13] <Grinnz> possibly. I suspect it's because for a while it was considered deep magic to be manually assigning to code slots
[03:03:23] <Grinnz> while now it's a rather common practice to install dynamic subs
[03:04:16] <xenu> PlayerOne: also STDERR->say($.) will work even without -E and it might be more readable
[03:04:43] <Grinnz> also because the name only matters to stack inspection, so doesn't tend to matter for actual functionality
[03:05:00] <Grinnz> so it's nice to have, but wasn't a big deal
[03:05:18] <pflanze> Stack inspection is important, though. It's very confusing to only see __ANON__ and possibly from an *unexpected* package.
[03:05:29] <Grinnz> sure, when you're inspecting the stack ;)
[03:05:49] <pflanze> I understand that it wasn't a big deal, but once you start using combinators and currying it quickly becomes important :)
[03:05:52] <PlayerOne> Holy smokes! It works!
[03:05:59] <Grinnz> i just mean, its apparent importance depends on whether you're trying to debug it yet
[03:06:13] <PlayerOne> xenu thank you so much! Interesting, does it have the initial data to output?
[03:06:19] <PlayerOne> Like, the string it replaced
[03:06:24] <xenu> PlayerOne: wait, i forgot that perl outputs $_ to the file, not STDOUT, i was confused, you don't need STDERR at all
[03:06:44] *** Joins: kst (~user@cpe-70-95-182-43.san.res.rr.com)
[03:06:50] <xenu> (although you will need it if you use pipes instead of files)
[03:06:59] <xenu> PlayerOne: i don't understand the question
[03:07:30] <pflanze> Grinnz, yes. Also, FP::Show actually tries to *find* a code ref if it doesn't carry a name (not released yet). But that's of no use for backtraces as I've realized today. So that's where I am. I've made an FP::def now and am playing with it.
[03:07:33] <xenu> "initial data"?
[03:07:43] <PlayerOne> Like, it replaced a string and it outputs it to STROUD
[03:07:46] <PlayerOne> STDOUT*
[03:08:01] <PlayerOne> $. is the replaced line, right?
[03:08:06] <PlayerOne> line number*
[03:08:08] <xenu> $. is the current line
[03:08:09] <Grinnz> pflanze: seems a reasonable approach to me (the def function)
[03:08:40] <PlayerOne> $line ?
[03:08:50] <xenu> perl -nE 'say $.' file.txt will output 1..<number of lines in file>
[03:08:57] <pflanze> Grinnz, it's just a pain to have to tell people yet *more* things to consider. So I think a pragma (that could be included in v7.whatever) would be better.
[03:09:03] <Grinnz> pflanze: just remember the name you set has to be fully qualified, or you'll get a random package on it
[03:09:21] <Grinnz> (not so random, but)
[03:09:23] <pflanze> Grinnz, ah, thanks for the heads up
[03:09:42] <Grinnz> it just sets it in the package of the code calling set_subname iirc
[03:10:42] <PlayerOne> xenu, for example, there's a string "test" on line 2. It outputs 2 and replaces that line in the output file. Is it possible to also output that string to STDOUT? The one which has changed?
[03:10:53] <Grinnz> pflanze: yeah, first step is either bringing it up on p5p to see what people think, or putting together such a pragma to try it out on cpan
[03:11:10] <xenu> PlayerOne: output the original line or the new line?
[03:11:29] <pflanze> Yes, I'll see.
[03:11:29] <PlayerOne> Yes ^^
[03:11:32] <Grinnz> a core one can be done much less magically, of course
[03:11:47] <PlayerOne> \*ARGV was something close, I guess, but it outputs a memory address or something
[03:12:09] <Grinnz> it woudl probably be a feature, and not a pragma
[03:12:35] <PlayerOne> __FILE__ and __LINE__?
[03:12:42] <xenu> PlayerOne: you answered "yes" to 'XXX or XXX' question
[03:12:59] <vague> xenu, he wants the line number and original line
[03:13:41] <PlayerOne> Oh. I'm sorry. The original line which changed.
[03:14:20] <vague> I would do $line=$_; ... && STRERR->say("$.: $line");
[03:14:32] <vague> Maybe there is a better way
[03:14:51] <xenu> yeah, that's how i would do it
[03:15:14] <PlayerOne> Oh. I see!
[03:15:28] <PlayerOne> So, the $_ stores current line and $. is its index?
[03:15:48] <xenu> yes, and s/// modifies $_ and then $_ gets printed to the file
[03:16:01] <xenu> s/foo/bar/; is eqivalent to $_ =~ s/foo/bar/;
[03:16:47] <PlayerOne> perl -pi -e '$line=$_; s/.*a.*//g && print STDOUT $., ":", $line' test2
[03:16:47] <xenu> that's why you have to assign it to $line before s///
[03:16:56] <PlayerOne> Holy smokes!
[03:17:12] <PlayerOne> Purely magnificent!
[03:17:20] <PlayerOne> Thank you very much, People!
[03:17:32] <PlayerOne> <3  Perl
[03:17:41] <vague> You want a ,"\n" there too
[03:17:55] <xenu> well, $line usually already contains a newline
[03:17:56] <PlayerOne> vague it seems it outputs \n from the file
[03:18:14] *** Joins: SincereFox (uid337158@user/sincerefox)
[03:18:15] <vague> Ah, right, no chomp :)
[03:18:47] <PlayerOne> It seems, the s///g <- g is doesn't make sense, right?
[03:19:43] <xenu> in this particular situation i believe it's impossible the pattern will match twice
[03:19:51] <xenu> so yeah, it's not needed
[03:20:13] <PlayerOne> What if the pattern is more specific?
[03:20:20] <PlayerOne> Something like s/a//
[03:20:23] <vague> Even .* is superfluous
[03:20:53] <xenu> vague: it would be with m/// but s/// operates on the matched part of the string
[03:20:54] <PlayerOne> vague without it, it only removes the character 'a', instead of a file
[03:20:54] <vague> Ah, no, sorry, you want to delete the line
[03:21:02] <vague> Getting late :)
[03:21:08] * Exodist thinks he should change his 'test2' ping to 'test2::'
[03:21:16] <PlayerOne> vague what if not the line, but part of?
[03:21:41] <PlayerOne> /g would work on multiple matches on the same line, right?
[03:21:59] <xenu> yes s/a// will remove just one 'a', s/a//g will remove all of them
[03:22:04] <PlayerOne> Makes sense!
[03:22:25] <PlayerOne> $. has the line, $, has the position? XD
[03:22:39] <PlayerOne> Like, char's position in the string
[03:22:43] <PlayerOne> I'll try seraching
[03:22:51] <PlayerOne> searching Google for this one
[03:23:14] <Adura> Hah, good luck, or... https://perldoc.perl.org/perlvar
[03:23:14] <Paperbot> Link title(s): [ perlvar - Perl predefined variables - Perldoc Browser ]
[03:23:18] <PlayerOne> Anyways, thank you very very much, dear awesome people!
[03:23:25] <xenu> PlayerOne: $-[0]
[03:23:34] <xenu> all the variables are documented here: https://perldoc.perl.org/perlvar
[03:23:34] <Paperbot> Link title(s): [ perlvar - Perl predefined variables - Perldoc Browser ]
[03:23:51] <xenu> to be honest 90% them are *very* rarely used
[03:24:13] <xenu> and even the experts have to look them up every time
[03:24:34] <Adura> Use all the characters!
[03:25:25] <xenu> 90% of them*
[03:25:33] <leont> Generally speaking, only about 5 of them are useful in normal programs
[03:25:54] <PlayerOne> $-[0] is the offset of the start of the last successful match.
[03:26:21] <PlayerOne> Roger that! It's awesome that such great tool exists, oh dear.
[03:26:32] * GumbyPAN CPAN Upload: Beekeeper-0.05 by JMICO https://metacpan.org/release/JMICO/Beekeeper-0.05
[03:28:02] <xenu> anyway, if you're wondering what, let's say, "$," means use the search on perldoc.perl.org *or* this command: perldoc -v '$,'
[03:29:20] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[03:30:20] <PlayerOne> Interesting
[03:30:37] <PlayerOne> $-[0] outputs 4 where the character 'a' exists in 0 pos
[03:30:54] <PlayerOne> Like, the line is 'a aa a' and $-[0] is set to 4
[03:30:54] *** Quits: ominionx (~ominionx@38.135.235.14) (Quit: Leaving)
[03:30:57] <PlayerOne> instead of 0
[03:31:25] <PlayerOne> perl -pi -e '$line=$_; s/a//g && print STDOUT $., ":", $-[0], ":", $line' test2
[03:31:32] *** Quits: pierrot (~pi@user/pierrot) (Quit: ZNC 1.6.4 - http://znc.in)
[03:32:07] *** Joins: pierrot (~pi@user/pierrot)
[03:33:05] <xenu> yeah, because it's the *last* successful match, and because of /g you made multiple matches
[03:34:07] *** Joins: adherzog (uid387168@id-387168.tooting.irccloud.com)
[03:34:15] <PlayerOne> Oh. I see.
[03:35:27] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 252 seconds)
[03:39:28] *** Parts: Yaakov (~yaakov@user/Yaakov) ()
[03:39:29] *** Joins: Yaakov (~yaakov@user/Yaakov)
[03:40:59] <PlayerOne> Holy smokes!
[03:41:06] <PlayerOne> perl -pi -e $'$line=$_; $count=0; s/a(?{ $count++ })//g && print STDOUT $., ":", $count, ":", $line' test2
[03:41:11] <PlayerOne> Now we have a counter
[03:41:13] <PlayerOne> !
[03:41:39] <Adura> Yeah, was going to mention you could just put code in your regex... crazy and complicated, but that's a nice simple example.
[03:41:45] <PlayerOne> Oh dear, yet didn't found how to get the first successful match
[03:42:27] <PlayerOne> perl -pi -e $'$line=$_; $first=-1; $count=0; s/a(?{ (if $first is not set, set?)$count++ })//g && print STDOUT $., ":", $count, ":", $line' test2
[03:43:37] <PlayerOne> Like, we should set out own variable like that or it's possible to retrieve the first position of each successful match?
[03:45:02] <PlayerOne> Like, if 3 'a' appears on the line, then output to STDOUT would be: 0:1:1:a \n 0:2:2:a \n 0:4:3:a where the line is ' aa a'
[03:45:20] <xenu> i don't think there's a magic variable for that
[03:45:26] <xenu> >if $first is not set, set
[03:45:41] <PlayerOne> I see.
[03:45:41] <xenu> you want //=
[03:45:47] <PlayerOne> Say what?
[03:45:48] <PlayerOne> :D
[03:46:25] <xenu> *don't* initialize $first with -1, and then inside the regex, you can do (?{ $first //= $-[0] })
[03:46:42] <xenu> //= means "assign only if the left side is undefined"
[03:48:00] <PlayerOne> Can we put multiple of such in curly braces?
[03:48:13] <xenu> you can put whatever you want there
[03:48:14] <PlayerOne> Like (?{ do; do; })?
[03:48:59] <PlayerOne> Interesting: Missing right curly or square bracket at -e line 1, within pattern
[03:49:06] <PlayerOne> perl -pi -e $'$line=$_; $start=0; $count=0; s/a(?{ $first //= $-[0]; $count++ })//g && print STDOUT $., ":", $start, ":", $count, ":", $line' test2
[03:49:17] <PlayerOne> Wait a minute
[03:49:20] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[03:49:38] <PlayerOne> Err. perl -pi -e $'$line=$_; $start=0; $count=0; s/a(?{ $start //= $-[0]; $count++ })//g && print STDOUT $., ":", $start, ":", $count, ":", $line' test2
[03:50:03] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Remote host closed the connection)
[03:50:48] <PlayerOne> I don't see any bracket absence
[03:51:30] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[03:52:09] <xenu> ah yes, stupid parser
[03:52:20] <xenu> it got confused by //=
[03:52:37] *** Parts: bfr (~yaaic@ip-109-40-131-214.web.vodafone.de) ()
[03:52:40] <xenu> use a different separator for s///, e.g. s!!! or s### or s{}{}
[03:52:42] <xenu> whatever you want
[03:52:51] <PlayerOne> Oh dear! I see.
[03:53:04] <PlayerOne> \/\/=
[03:53:19] <Adura> Seems unwise... hah.
[03:53:38] *** Quits: markgrady (~markgrady@204.246.246.254) (Remote host closed the connection)
[03:53:53] <xenu> also the code won't work, because you initialized $start to '0', so it's always defined
[03:54:09] <xenu> either don't initialize it *or* use ||= instead of //=
[03:54:23] <xenu> /= assigns if the variable is undefined
[03:54:29] <xenu> //= *
[03:54:36] <xenu> while ||= assigns when it's false
[03:54:47] <xenu> 0 is defined but false
[03:57:17] <PlayerOne> I see I see
[03:57:34] <PlayerOne> It seems we also need to unset it after successful match
[03:57:58] <PlayerOne> Something like undef $start;
[03:58:12] <xenu> hmm... you can declare it: my $start; at the beginning
[03:58:26] <xenu> that way it's no longer global and it will be automatically reset after the end of each iteration
[03:59:04] <xenu> basically, in oneliners without 'use strict' all variables are global until you declare them with my()
[04:00:38] <xenu> and since -p (or -n) put an implicit loop in your code, all lexicals (that is, declared with my()) variables are reset after each iteration/line
[04:02:01] <PlayerOne> Heh. For some reason, it doesn't work..
[04:02:33] <PlayerOne> perl -pi -e $'$line=$_; $start; $count=0; s#a(?{ $start //= $-[0]; $count++ })##g && print STDOUT $., ":", $start, ":", $count, ":", $line, "\n" && undef $start;' test2
[04:02:54] <PlayerOne> It doesn't output $start at all and also outputs full line instead of each match
[04:03:48] <PlayerOne> The mission: each match: {line}:{start}:{length}:{match}
[04:04:19] <PlayerOne> Or {line}:{start}:{length}:{count}:{match}
[04:04:31] <PlayerOne> I'll try, though
[04:04:43] <PlayerOne> Thank you very much, by the way!
[04:04:47] <PlayerOne> Really
[04:05:02] <xenu> you have an operator precedence problem in your code
[04:05:17] <xenu> to understand this, put "-MO=Deparse,-p" before "-pi"
[04:05:30] <xenu> it will show you how perl parses the code
[04:07:17] <xenu> tl;dr: add parens around print
[04:07:57] <xenu> also
[04:08:04] <xenu> "$start" on its own does literally nothing
[04:17:44] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[04:25:53] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[04:26:53] *** Quits: gryphn (~gryphon@191.96.106.193) (Quit: kthxbye)
[04:41:26] <Grinnz> PlayerOne: searching punctuation variables is supported by perldoc.perl.org
[04:46:07] <PlayerOne> This is it: https://paste.ee/p/iNZtV#XgytDpkTmqH3SqLxh5eIKfUNXH41JAz8
[04:46:07] <Paperbot> Link title(s): [ Paste.ee - View paste iNZtV ]
[04:48:12] <PlayerOne> Currently struggling making that script work per every match on the same line
[04:48:44] <PlayerOne> Perhaps, it requires an additional loop for each match?
[04:56:25] *** Joins: gast0n (~g4570n@user/gast0n)
[05:06:23] <xenu> PlayerOne: you mean something like this?
[05:06:25] <xenu> perl -pi -e '$line=$_; $count=0;print(STDOUT $., ":", $-[0], ":", $count++, ":", $line) while s/a//;' test2
[05:07:50] <xenu> er ++$count, not $count++
[05:13:55] <corwin> I read this today and felt the signal to noise ratio of the internet was moved thereby > If we want to add grammar, we need to search for the point that Paul's motivation and our consensus matches .
[05:13:56] <corwin>  
[05:24:54] *** Quits: brtastic (~Thunderbi@185.24.91.138) (Ping timeout: 252 seconds)
[05:25:57] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:27:00] *** Quits: pekster (~rewt@user/pekster) (Ping timeout: 245 seconds)
[05:27:08] *** Joins: pekster (~rewt@user/pekster)
[05:29:37] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[05:33:30] *** Joins: thunder (~thunder@185.163.110.93)
[05:33:37] *** Quits: thunder (~thunder@185.163.110.93) (Changing host)
[05:33:37] *** Joins: thunder (~thunder@user/thunder)
[05:37:35] *** Quits: jpmh (uid445439@id-445439.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[05:49:51] *** Quits: adherzog (uid387168@id-387168.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[05:54:20] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 264 seconds)
[05:55:16] <gamo> Good night 
[05:55:47] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[05:56:48] <gamo> Hi. I want to parse equations, but I don't know how to grab parentesees
[05:58:20] <waltman> Anyone else running into this bug? I can't install 5.34 until it gets fixed.
[05:58:25] <waltman> https://github.com/perl5-dbi/DBD-mysql/issues/329
[05:58:25] <Paperbot> Link title(s): [ rt85919-fetch-lost-connection.t failing on MySQL 8.0.24+ due to new error code · Issue #329 · per... ]
[06:08:03] <ether> waltman: sounds like it's easy to patch
[06:08:45] *** Quits: Su-Shee (~Susanne@p4ffc7501.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[06:08:54] *** Joins: Dorward_ (~dorward@daviddorward.plus.com)
[06:10:17] *** Joins: Su-Shee (~Susanne@p4ffc71e8.dip0.t-ipconnect.de)
[06:10:43] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:10:57] <waltman> ether: So easy that the fact that the maintainer has had a month and hasn't done it is a bit concerning.
[06:11:06] *** Quits: Dorward (~dorward@daviddorward.plus.com) (Ping timeout: 252 seconds)
[06:18:01] <Grinnz> DBD::mysql is essentially abandoned
[06:19:15] <Grinnz> the maintainers were briefly around when pali was submitting patches, but then they reverted all of those and it was forked to DBD::MariaDB
[06:19:32] <ether> waltman: perhaps, but it's not unusual at all
[06:19:33] <Grinnz> and its pretty much back to no movement again
[06:20:06] <ether> your best bet is to provide a complete patch yourself, then track down everyone who has release permissions for the module and ask them to merge and release it
[06:20:10] <waltman> You shouldn't volunteer to maintain a major module like that if you're not serious about maintaining it.
[06:20:40] * ether ಠ_ಠ
[06:21:16] <xenu> lol
[06:21:18] <ether> I feel your frustration, but we're all volunteers here
[06:22:08] <xenu> no, seriously, what a person who is no longer willing to maintain a module is supposed to do? kill themselves?
[06:22:26] <waltman> Find someone else?
[06:22:30] <Adura> Write something that automatically maintains it.
[06:22:47] <xenu> it's not easy to find the right person
[06:23:02] <waltman> I'm sympathetic to them no longer being willing to maintain it, but part of your responsibility is finding someone else.
[06:23:07] <Grinnz> it's a fair point actually, they should put it on HANDOFF at least
[06:23:13] <xenu> there's absolutely *no* responsibility
[06:23:20] <xenu> you aren't paying them anything, there's no contract
[06:23:28] <xenu> and you're being *extremely* entitled
[06:23:52] <Adura> I'm still on 5.20 and it works fine.
[06:24:15] <waltman> This is apparently an issue caused by a new version of mysql
[06:24:28] <gchristensen> it is their moral obligation to troll by scrubbing it from the internet
[06:24:56] *** Quits: radu242 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[06:25:29] *** Joins: radu2422 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net)
[06:25:30] <v`> i'm trying to be real diplomatic about this,
[06:25:41] <v`> what went on with chanserv getting taken
[06:25:43] <v`> on freenode
[06:25:50] <Grinnz> incompetence
[06:26:06] <Grinnz> it wasn't taken, just squatted while services were down
[06:26:17] <xenu> what?
[06:26:25] <xenu> what happened?
[06:26:29] *** Parts: jabberwok (~wlindley@75.105.20.104) ()
[06:27:20] <Grinnz> freenode services went down, at least a couple of the new freenode servers don't have their nicks reserved, and so https://gist.github.com/Grinnz/4ee49d9cdcb94da98f4ad301bb371120
[06:27:21] <Paperbot> Link title(s): [ Freenode services outage · GitHub ]
[06:27:43] <xenu> lmao
[06:27:46] <Grinnz> after someone squatted chanserv and someone else squatted nickserv, the opers klined them and squatted them themselves
[06:28:01] <xenu> i wonder how many passwords were stolen
[06:28:06] <ether> I copied all my configs over from freenode to libera, and failed to notice that this means I was re-using my nickserv password. so now if I connected to freenode I'd try to identify with their "nickserv" which has now harvested my password. so I changed my passwords today :)
[06:28:27] <Grinnz> well, the services are up now
[06:28:28] <gchristensen> after this null@unaffiliated/kisser was promoted to staff
[06:31:18] <Grinnz> https://twitter.com/irydacea/status/1402654877260693505 https://twitter.com/plainoldchair/status/1402685764937338881
[06:31:18] <Paperbot> Queen Iris 💜 (@irydacea) 10h9m ago: IRC services on freenode went down over 20 minutes ago and it turns out service nicks are not RESV'd
[06:32:52] <Adura> Yummy passwords.
[06:34:32] <Grinnz> gchristensen: that makes me wonder if it's a suckup or blackmail
[06:34:48] <PlayerOne> Indeed, xenu. Thank you very much! Found something, too ^^ Like: https://stackoverflow.com/a/19031736/5113030
[06:34:48] <Paperbot> Link title(s): [ Perl one-liner to match all occurrences of regex - Stack Overflow ]
[06:39:08] *** Quits: radu2422 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net) (Read error: Connection reset by peer)
[06:39:36] *** Joins: radu2422 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net)
[06:42:00] <gchristensen> :)
[06:45:56] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 264 seconds)
[06:47:27] <v`> Grinnz: do u mind if i paste a couple of your lines to another channel
[06:47:59] <Grinnz> sure
[06:49:11] <xenu> well, i put this on HN https://news.ycombinator.com/item?id=27455926
[06:49:11] <Paperbot> Link title(s): [ Some Freenode nickname passwords may have been compromised | Hacker News ]
[06:49:27] <johnjay> you know i just realized all the logs from freenode are going to disappear at some point
[06:49:33] <johnjay> maybe not tomorrow but at some point
[06:49:47] <johnjay> unless channels back them up separately
[06:50:08] <Grinnz> why would they? irc servers don't host logs
[06:50:08] <xenu> freenode didn't have centralized logging, it was up to each channel to manage that
[06:51:12] <xenu> for example, there are no public #perl logs, because we don't allow that
[06:51:19] <xenu> #raku otoh has this: https://colabti.org/irclogger/irclogger_logs/raku
[06:51:20] <Paperbot> Link title(s): [ #raku irc log ]
[06:51:29] <xenu> although it seems they didn't point the bot to the new libera channel
[06:52:03] <Grinnz> https://twitter.com/ariadneconill/status/1402745586273685509
[06:52:03] <Paperbot> Ariadne Conill (@ariadneconill) 4h29m ago in reply to @ariadneconill #1402743895012909061: but really, lets be a little bit more honest:  if you're on a network owned and operated by a person embroiled in dozens of lawsuits relating to a lack of moral terpitude, your password is probably compromised anyway.
[06:52:49] <Grinnz> xenu: they did
[06:53:15] <Grinnz> freenode #raku has been dead since the bot takeover
[06:54:23] <xenu> oh, i looked at today's logs and i've seen no activity so i assumed it wasn't moved
[06:54:47] <xenu> but it seems there was some yesterday, so i guess their channel is just less busy than ours
[06:55:12] <xenu> s/moved/updated/
[06:57:58] *** Quits: SincereFox (uid337158@user/sincerefox) (Quit: Connection closed for inactivity)
[07:02:09] <johnjay> i heard about raku but didn't look too closely at it
[07:02:18] <johnjay> apparently the regex syntax was different to perl which confused me abit
[07:05:02] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:05:02] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (mercury.libera.chat (Nickname regained by services)))
[07:05:02] *** finn_elija is now known as FinnElija
[07:05:43] <xenu> btw ariadne seems to be publishing interesting screenshots with eskimo, one of freenode ircops
[07:05:47] <xenu> https://twitter.com/ariadneconill]
[07:05:50] <xenu> https://twitter.com/ariadneconill
[07:05:59] <xenu> sadly they aren't in a single thread, so i can't link that
[07:10:28] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[07:12:13] *** Quits: radu2422 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net) (Quit: The Lounge - https://thelounge.chat)
[07:13:35] *** Joins: radu2422 (~radu242@pool-108-41-101-29.nycmny.fios.verizon.net)
[07:17:16] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Remote host closed the connection)
[07:17:25] *** Joins: aquanite (~aquanight@174-126-159-166.cpe.sparklight.net)
[07:17:36] *** aquanite is now known as aquanight
[07:40:54] *** Quits: riceandbeans (~zach@user/riceandbeans) (Ping timeout: 245 seconds)
[07:46:59] * GumbyPAN CPAN Upload: App-Dex-0.002000 by SYMKAT https://metacpan.org/release/SYMKAT/App-Dex-0.002000
[07:53:32] *** Parts: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net) ()
[07:56:44] *** Quits: Martchus (~martchus@2a01:c23:c071:7600:d250:99ff:fe49:3cce) (Ping timeout: 245 seconds)
[07:57:05] *** Joins: Martchus (~martchus@2a01:c22:6e60:8800:d250:99ff:fe49:3cce)
[07:58:54] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 252 seconds)
[07:59:42] *** Joins: P1RATEZ (piratez@cpe98524ab27125-cm98524ab27123.cpe.net.cable.rogers.com)
[08:01:25] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:03:37] *** Joins: PlayerOne58 (~PlayerOne@55-207-55-95.baltnet.ru)
[08:03:46] *** Quits: PlayerOne58 (~PlayerOne@55-207-55-95.baltnet.ru) (Client Quit)
[08:14:00] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 244 seconds)
[08:25:35] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Remote host closed the connection)
[08:29:33] <ology> kaitlyn++
[08:32:04] * GumbyPAN CPAN Upload: App-csv2tsv-0.58 by TULAMILI https://metacpan.org/release/TULAMILI/App-csv2tsv-0.58
[08:40:59] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[08:47:05] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[08:59:24] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 252 seconds)
[09:06:02] <Grinnz> andrew lee announced all the weird shit he's been putting up https://freenode.net/news/taking-irc-further
[09:06:02] <Paperbot> Link title(s): [ Taking IRC Further - freenode ]
[09:06:58] <Grinnz> the bouncer is the sanest one of that list
[09:07:21] *** Joins: alarix (~alarix@59.88.30.217)
[09:07:28] <Grinnz> he thinks people are going to go in his half-broken irc channels to use those websites
[09:08:02] <PlayerOne> So now they want to get all our credentials and store our history? :D
[09:08:17] <xenu> how does this anonymizer work?
[09:08:18] <Grinnz> they're running freenode, they already have those things
[09:08:43] <Grinnz> xenu: it's literally just a bot that relays your messages with a random username
[09:09:10] <PlayerOne> But don't you use tell them store your personal private by adding to the bouncer list?
[09:09:25] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[09:09:51] <xenu> 06:39 -!- mode/#anonchan [+b xenu!*@*] by AnonChan
[09:09:51] <xenu> 06:39 -!- xenu [~xenu@carychium-tridentatum.xenu.pl] has left #anonchan [requested by AnonChan (Sorry, but only primary nicks may join this channel.)]
[09:09:58] <Grinnz> yes, thats the half broken part
[09:10:18] <Grinnz> they seem to think the only way to authenticate users is to force you to use your primary nick
[09:10:25] <Grinnz> all of these channels do that
[09:10:56] <Grinnz> by the way, you can change your primary nick
[09:11:03] <Grinnz> so its not even a good mechanism
[09:11:41] <xenu> lol, i would ask why he didn't implement anonymous chat directly in ircd, but i know the answer 
[09:12:11] <Grinnz> literally all you ahve to do is +r the channels and then have the bots check what actual account sent the messages
[09:13:05] <Grinnz> by the way, the +b is because at first the bot would just kick loop people who had autojoin
[09:13:14] <xenu> chit is the weirdest of his invention
[09:13:17] <xenu> inventions*
[09:13:36] <xenu> i don't exactly understand its purpose
[09:14:35] <Grinnz> i dont know if anyone does
[09:14:39] <xenu> it kinda looks like twitter but it seems it's being used as a comment section for bbs
[09:15:24] <xenu> and nothing on the frontpage explains anything and it's not possible to explore people's accounts
[09:16:07] <xenu> also, i joined #anonchat and unsurprisingly it's 100% spam
[09:17:10] *** Quits: roy[m] (~roybitnex@2001:470:69fc:105::93b) (Read error: Connection reset by peer)
[09:17:10] *** Quits: BigRedS[m] (~bigredsma@2001:470:69fc:105::ec0) (Read error: Connection reset by peer)
[09:17:10] *** Quits: demostanis[m] (~demostani@2001:470:69fc:105::2c2) (Read error: Connection reset by peer)
[09:17:10] *** Quits: ilmari_ (~ilmari@user/ilmari) (Write error: Connection reset by peer)
[09:17:11] *** Quits: Rubin (~rubin@2001:470:69fc:105::17e) (Write error: Connection reset by peer)
[09:17:11] *** Quits: latk (~latk@2001:470:69fc:105::255) (Read error: Connection reset by peer)
[09:17:11] *** Quits: gordonfish[m] (~gordonfis@2001:470:69fc:105::31) (Read error: Connection reset by peer)
[09:17:23] <Grinnz> its funny the bouncer service and the anonchat depend entirely on trusting the people running the service, and they actively destroy trust
[09:17:46] *** Joins: gordonfish[m] (~gordonfis@2001:470:69fc:105::31)
[09:18:11] *** Quits: Zubi[n] (~rubin@ender.afternet.org) (Ping timeout: 252 seconds)
[09:18:16] <xenu> to be fair, even if anonchat was created by anyone else, the result would've been the same
[09:18:17] *** Joins: ilmari_ (~ilmari@user/ilmari)
[09:18:17] *** Joins: latk (~latk@2001:470:69fc:105::255)
[09:18:17] *** Joins: Rubin (~rubin@2001:470:69fc:105::17e)
[09:18:17] *** Joins: demostanis[m] (~demostani@2001:470:69fc:105::2c2)
[09:18:30] *** Joins: roy[m] (~roybitnex@2001:470:69fc:105::93b)
[09:18:36] *** Joins: BigRedS[m] (~bigredsma@2001:470:69fc:105::ec0)
[09:18:42] <Grinnz> well you could design something with cryptographic security
[09:18:48] <Grinnz> but he didnt bother with anything useful like that
[09:19:29] <xenu> sure, but the point is why would anyone want to chat on a random irc channel whose the only distinguishing feature is anonymity
[09:19:55] <xenu> i get that imageboards work well, but it's not the same
[09:20:19] <Grinnz> because andrew lee is nostalgic for efnet
[09:20:25] *** Joins: Zubi[n] (~rubin@ender.afternet.org)
[09:20:28] <Grinnz> and thinks it makes sense in 2021
[09:21:07] <xenu> maaaaaybe if it was a whole anonymous network and it had topical channels, it would've made sense
[09:21:18] <xenu> but it's just one channel on freenode
[09:21:49] <xenu> yeah, it's definitely nostalgia combined with being a moron
[09:22:01] <Grinnz> i also like "share links with the freenode community" like there's a community there
[09:22:24] <xenu> at the beginning of the whole drama some people suspected he wanted to monetize freenode or something, but it's clearly not the case
[09:22:27] <xenu> he's just delusional
[09:22:29] <Grinnz> just one, singular community who wants to share links with each other, via irc but not on irc
[09:23:10] <xenu> he's basically a very rich 13 years old kid 
[09:24:14] <xenu> sadly, freenode still has more than 50k online users
[09:24:57] <Grinnz> idlers will inherit the ~~earth~~ irc
[09:25:29] <xenu> someone had a theory that those users are bots connected to some kind of c&c. botnets sometimes use irc for that
[09:26:04] <xenu> in reality it's probably indeed the long tail of tiny channels and idlers
[09:26:26] <Grinnz> social channels likely make up all of the remaining activity
[09:27:55] <xenu> according to isfreenodedeadyet.com libera gets ~2x more PRIVMSGs than freenode
[09:29:10] <Grinnz> i wonder if those spambots are still spamming people who havent set +R
[09:31:58] *** Joins: Dreadnaught (Kulrak@n122-109-33-182.rdl1.qld.optusnet.com.au)
[09:32:42] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[09:35:43] *** Quits: Kulrak (Kulrak@n122-109-33-182.rdl1.qld.optusnet.com.au) (Ping timeout: 272 seconds)
[09:54:42] *** Joins: jplesnik (~jplesnik@nat-pool-brq-t.redhat.com)
[09:57:27] *** Quits: tg_ (~tg@rockylinux/infra/tg) (Quit: tg_)
[09:58:55] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 268 seconds)
[09:59:50] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[10:01:38] *** Quits: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net) (Ping timeout: 252 seconds)
[10:02:03] *** Joins: jmcgnh (~jmcgnh@c-98-229-233-252.hsd1.nh.comcast.net)
[10:08:06] *** ChanServ sets mode: +o Grinnz
[10:08:15] *** Grinnz changes topic to 'No pasting, paste to https://l.perl.bot/#perl | perl-5.34.0 released! https://bit.ly/342Xxw8 | https://perl7faq.grinnz.com | Channel rules (diff mgmt): https://bit.ly/3fxtuDv | Docs: https://perldoc.perl.org | Module Search: https://metacpan.org | https://youtube.com/playlist?list=PLA9_Hq3zhoFzMAS-IYBS8aLyfCh0k9hej'
[10:08:48] *** Grinnz changes topic to 'No pasting, paste to https://l.perl.bot/#perl | perl-5.34.0 released! https://bit.ly/342Xxw8 | https://perl7faq.grinnz.com | Channel rules (diff mgmt): https://bit.ly/3fxtuDv | Docs: https://perldoc.perl.org | Module Search: https://metacpan.org | TPRC 2021 https://youtube.com/playlist?list=PLA9_Hq3zhoFzMAS-IYBS8aLyfCh0k9hej'
[10:08:55] *** Grinnz sets mode: -o Grinnz
[10:09:58] <Grinnz> i don't get why youtube doesn't have youtu.be links for playlists
[10:11:13] <Grinnz> or why playlist ids are 3x as long as video ids
[10:15:37] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[10:29:48] *** Joins: horsepatat (~horsepata@80.89.78.117)
[10:31:20] *** Quits: horsepatat (~horsepata@80.89.78.117) (Read error: Connection reset by peer)
[10:33:45] *** Joins: mattil (~mattil@helsinki.portalify.com)
[10:34:53] *** Joins: horsepatat (~horsepata@80.89.78.117)
[10:35:23] *** Joins: Gin (~Gin@172.104.48.83)
[10:36:10] <Gin> my @array = [1, 2, [3,4,5] ];
[10:36:27] <Gin> my @arrayOfArray = $array[2];
[10:36:58] <Gin> Why can't I access $arrayOfArray[0]?
[10:38:17] <Gin> I am a little confused about the syntax of parenthesis and square brackets. An array should be defined using square brackets and a list should be defined with parenthesis, right?
[10:38:54] <Gin> But in Perl there is only array type, which actually indicates a list.
[10:39:29] *** Joins: art1 (~romeyke@p200300ccdf0bb4005d168f1bf218701b.dip0.t-ipconnect.de)
[10:40:52] <pragma-> There are also references.
[10:41:33] <Gin> pragma, so the square brackets should only be used in defining a reference?
[10:41:37] <pragma-> In your snippet, the square brackets represent references to arrays, not arrays.
[10:41:51] <pragma-> You'd assign them to a scalar.
[10:42:02] <Grinnz> Arrays store a series of scalar values. square braces create an anonymous array, and return a reference to it, which is a single value
[10:42:20] <Grinnz> so that's how you effectively store an array *in* an array, but it's not how you put things in an array
[10:42:33] <Grinnz> so: my @array = (1, 2, [3,4,5]);
[10:42:40] <Grinnz> the parentheses there are only for precedence
[10:42:53] <Grinnz> perlbot: tell Gin about lists
[10:42:53] <perlbot> Gin: http://altreus.blogspot.com/2011/08/lists-and-things-made-of-lists.html
[10:43:38] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 244 seconds)
[10:43:56] <Gin> Grinnz, I notice that an array within a pair of parenthesis will be expanded into several scalars, right?
[10:44:03] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[10:44:05] <Grinnz> yes, because that's not an array.
[10:44:23] <Grinnz> parentheses don't do anything relevant to arrays, they are just for precedence, and in a few edge cases they cause list context
[10:44:27] <Grinnz> but not in this case
[10:44:42] <Grinnz> sweval: my @array = 1..10; \@array
[10:44:44] <perlbot> Grinnz: [1,2,3,4,5,6,7,8,9,10]
[10:44:51] <Grinnz> sweval: my @array = 42; \@array
[10:44:53] <perlbot> Grinnz: [42]
[10:45:02] <Grinnz> essentially, the parentheses are only needed because of the comma operator
[10:45:13] <Gin> Grinnz, thanks, I haven't comprehended the syntax of parenthesis
[10:45:20] <sneep> sweval: (1,2,3)[1]
[10:45:21] <perlbot> sneep: 2
[10:45:29] <sneep> sweval: [1,2,3][1]
[10:45:31] <perlbot> sneep: ERROR: syntax error at (IRC) line 1, near "][" 
[10:45:33] <Gin> I just relate it to an array
[10:45:34] <sneep> sweval: [1,2,3]->[1]
[10:45:35] <perlbot> sneep: 2
[10:45:49] <sneep> Maybe that illustrates things a bit?
[10:46:05] <Grinnz> Gin: arrays are a variable where a series of values is stored. lists are the series of values itself, being passed between places
[10:46:12] <Grinnz> the link above has good details on this
[10:46:18] * GumbyPAN CPAN Upload: Feed-Find-0.09 by DAVECROSS https://metacpan.org/release/DAVECROSS/Feed-Find-0.09
[10:46:29] *** Quits: P1RATEZ (piratez@cpe98524ab27125-cm98524ab27123.cpe.net.cable.rogers.com) (Changing host)
[10:46:29] *** Joins: P1RATEZ (piratez@user/p1ratez)
[10:46:51] <Gin> Grinnz, Ok, I will check on that link. Thanks
[10:47:14] <Grinnz> (...)[] is a list slice, one of those edge cases i mentioned where the parentheses are actually part of the syntax
[10:47:19] *** Quits: P1RATEZ (piratez@user/p1ratez) ()
[10:48:27] <Gin> Grinnz, so can I use the syntax `my @list = [1,2, "3"];`?
[10:48:42] <Grinnz> you can, but that will store a single value in the array
[10:48:48] <Grinnz> the array reference returned by []
[10:48:58] <Gin> oops
[10:48:58] <xenu> so by "you can" you meant "you can't"
[10:49:02] <Gin> I forgot that again
[10:49:17] <Grinnz> i meant you can, but you usually don't want to :P
[10:49:22] <pragma-> more like "you can but it's not what you want"
[10:49:26] <pragma-> yeah
[10:49:27] <Gin> Yep
[10:50:21] <Gin> So I can just drop the parenthesis in a quite simple snippet like `my @array = 1, 2, "3";`, right?
[10:50:27] <pragma-> no
[10:50:54] <Grinnz> parentheses are needed for precedence over the commas
[10:51:03] <Gin> Grinnz, I got that
[10:51:08] <Grinnz> otherwise, that is equivalent to: (my @array = 1), 2, '3';
[10:51:14] <pragma-> it'd still store the first value again, and discard the others as useless void contexts
[10:51:42] <Gin> what will the rest of the literals do in that snippet?
[10:51:52] <Grinnz> be ignored, and warn if you enabled warnings (you should)
[10:51:59] <Gin> Ok
[10:52:39] <pragma-> personally i always felt that warnings should be opt-out, not opt-in. c compilers, perl, etc.
[10:53:08] <Grinnz> use 7 (and maybe even use v5.36) will get us closer to that
[10:53:10] <Gin> pragma-, what do you mean by "opt-out" and "opt-in"
[10:53:42] <pragma-> Gin: that warnings are enabled by default and must be explicitly disabled.
[10:54:04] <Gin> Ok
[10:55:33] <Gin> I wonder if I can just `(1, 2, 3)[0]` to access the first element
[10:55:52] <Grinnz> yes, that's a list slice - a bit advanced but it works
[10:56:03] <Grinnz> https://perldoc.perl.org/perldata#Slices
[10:56:04] <Paperbot> Link title(s): [ perldata - Perl data types - Perldoc Browser ]
[10:56:09] <Gin> It looks just like string literal in C
[11:00:54] *** Joins: habamax (~habamax@user/habamax)
[11:01:24] <Gin> I've read a mail in the mailing list which argues that ARRAY should be changed to LIST.
[11:01:26] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:02:01] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[11:02:24] <Gin> I cannot help wondering whether there is an official definition of an array in addition to `[1, 2, 3]` returning a reference.
[11:02:25] *** Joins: ufobat_ (~martin@dynamic-095-117-119-093.95.117.pool.telefonica.de)
[11:02:27] <Grinnz> no, that was about internal naming - nothing you need to care about
[11:02:39] <Grinnz> yes, an array is a variable
[11:03:06] <Grinnz> [] is called an anonymous array, because it still constructs an array, but you don't get the variable, you just get a reference to it
[11:03:45] <Gin> Grinnz: So what is a list? I mean I would like to know the differences syntactically.
[11:03:56] <Grinnz> well that's the thing, a list is not syntax, it's a concept
[11:04:08] <Grinnz> any series of 0 or more values in list context is a list
[11:04:46] <Gin> So the array in Perl is a subset of "list" concept, right?
[11:04:47] <Grinnz> my @things = @other_things; # this takes the elements of the @other_things array, as a list, and copies them to @things
[11:04:53] <Grinnz> no, an array is a variable
[11:05:06] <Grinnz> it is where a series of values may be stored
[11:06:06] <Grinnz> foo 42; # this calls the foo function, and passes it an argument list containing a single value
[11:06:53] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 244 seconds)
[11:07:38] *** Joins: metasintactic (~thunder@185.163.110.93)
[11:07:49] *** Quits: metasintactic (~thunder@185.163.110.93) (Changing host)
[11:07:49] *** Joins: metasintactic (~thunder@user/thunder)
[11:10:02] <Grinnz> lists and arrays seem similar to most people, but they're functionally very different, so couldn't really be called subsets of each other
[11:10:22] <Gin> Ok
[11:10:29] *** Quits: thunder (~thunder@user/thunder) (Ping timeout: 245 seconds)
[11:11:04] <Grinnz> it's like... array is a bucket, list is a bunch of toys you could put in that bucket
[11:11:10] <Grinnz> or you could put somewhere else
[11:11:11] *** Joins: thunder (~thunder@185.163.110.107)
[11:11:22] *** Quits: thunder (~thunder@185.163.110.107) (Changing host)
[11:11:22] *** Joins: thunder (~thunder@user/thunder)
[11:11:38] <Grinnz> once you put them in the bucket, it's a bucket of toys
[11:12:01] <Grinnz> dunno if that helps, it's too late for analogies :P
[11:12:06] <Gin> Grinnz: What do you by "put them in a bucket"?
[11:12:06] <greyrat> How do I search and replace a literal string? I currently use `'s/\Q$ENV{AGR_FROM}\E/$ENV{AGR_TO}/g'`, but I think this would break if `ENV{AGR_FROM}` contains `\E`, no?
[11:12:30] <Grinnz> erm... exactly that?
[11:12:44] <Grinnz> greyrat: nope, \E only works literally
[11:12:55] <Grinnz> it's intentional
[11:13:14] <Gin> Grinnz: Is `my @array = [1, 2, [3, 4, 5]]` equivalent to `my @array = [ [1], [2], [3,4,5] ]`?
[11:13:21] <Grinnz> if the string contains \E, then you'll just match the \ character followed by the E character
[11:13:57] <Grinnz> Gin: nope, second one is an array reference containing three array references
[11:14:07] *** Quits: metasintactic (~thunder@user/thunder) (Ping timeout: 244 seconds)
[11:14:50] <Gin> Does the first one mean an array reference containing two scalars and one array reference?
[11:15:00] <Grinnz> yes
[11:15:10] <Gin> Grinnz: Thanks!
[11:15:16] <Gin> I kind of get it now.
[11:15:23] <Grinnz> note references are also scalars, which is why they can go in arrays
[11:15:54] <greyrat> Grinnz: Thanks, you are right. Is this the most concise way? Isn't there a CLI flag or sth that forces literal matching?
[11:15:56] <Gin> I grasp that earlier last night.
[11:15:57] <Grinnz> this is the other reason lists are very different from arrays: they don't exist inside the actual array
[11:16:14] <Grinnz> arrays just have a single series of scalar values
[11:16:45] <Grinnz> so to keep lists separate, array references are useful
[11:17:37] <Grinnz> my @array = (1, 2, (3, 4, 5)); # parentheses still do nothing here, this just assigns 5 scalar values to the array
[11:18:06] <Grinnz> my @array = (1, 2, @other_array); # same thing, this assigns two scalar values and then all of the scalar values from @other_array
[11:18:22] <Gin> Is (1, 2, (3, 4, 5)) a list in your theory?
[11:18:43] <Grinnz> the syntax isn't, but it represents the list of values that will be assigned
[11:18:46] *** Quits: thunder (~thunder@user/thunder) (Ping timeout: 244 seconds)
[11:19:20] <Gin> Yes, I know that. An array only contains scalars. So an array within an array will be expanded into all its elements.
[11:19:25] <Grinnz> greyrat: there isn't
[11:19:49] <Grinnz> greyrat: you can use the substr function to see if a literal string is contained within another string, and even replace it with another string
[11:19:55] <Gin> Grinnz: Also reference is a scalar, so it can go into an array.
[11:19:58] <Grinnz> but s/// is usually easier
[11:20:05] <Grinnz> Gin: exactly.
[11:20:19] <Gin> But what does list contain?
[11:20:33] <Grinnz> scalars, too
[11:20:38] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[11:21:04] <Grinnz> but the list is the set of scalars itself; it's not a place to put them
[11:21:16] <Gin> I got it
[11:21:38] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[11:22:20] <Gin> Grinnz: A list is a collection of scalars, but an array is a concept in memory which contains all the elements, right?
[11:22:30] <Grinnz> yes
[11:22:39] <Gin> Cool
[11:23:01] <Gin> Another trivial question
[11:23:09] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[11:23:15] <Gin> How can I store the chat history in this channel?
[11:23:25] <Grinnz> depends on your irc client
[11:23:38] <Grinnz> you're on the webchat, so, you'll have to copypaste it somewhere
[11:23:54] <Gin> I access the IRC on my browser. 
[11:24:38] *** Quits: jplesnik (~jplesnik@nat-pool-brq-t.redhat.com) (Quit: Leaving)
[11:25:16] <greyrat> Gin: Do you have a server somewhere (sth that is always on)?
[11:25:31] <Grinnz> you could copy-paste it to a private gist on gist.github.com for example, just don't share it publicly, there is a policy against public logging without consent
[11:25:54] *** Joins: jplesnik (~jplesnik@213.175.37.12)
[11:26:11] *** Quits: randir (~randir@95-25-113-192.broadband.corbina.ru) (Remote host closed the connection)
[11:27:52] <Grinnz> other IRC clients will automatically log chats for you - hexchat (graphical desktop client), weechat (terminal client), irccloud (client that will keep up to 2hrs of chat for you after you disconnect, or stay connected forever if you pay for it)
[11:28:15] <Gin> cool
[11:28:43] <Gin> Let me try a few clients first :-)
[11:30:56] <greyrat> Grinnz: How is the no-logging policy enforced? I kind of feel that it gives a false sense of security, as bad actors can easily keep logs of everything, and publish them if it suits them.
[11:31:14] <Grinnz> it's the honor system, sure
[11:31:24] <Grinnz> everyone has logs of everything you say on irc, you should expect that
[11:31:44] <greyrat> So what's the use of the policy?
[11:31:52] <Grinnz> it's just impolite to publish them, and if you do so with your name we'll probably ban you
[11:32:01] <El_Che> Grinnz: I have logs where you say the opposite, you hypocrite
[11:32:05] <Grinnz> (if intentional, that is)
[11:32:32] <Grinnz> the use of the policy is to make it known that it's impolite
[11:32:49] <Grinnz> most people who want to continue participating in a community like to be polite
[11:33:15] *** Joins: thunder (~thunder@185.163.110.104)
[11:33:28] *** Quits: thunder (~thunder@185.163.110.104) (Changing host)
[11:33:28] *** Joins: thunder (~thunder@user/thunder)
[11:33:31] <Grinnz> anyway it's a libera.chat policy, this channel just tends to agree with it
[11:33:50] <Grinnz> other channels do allow public logging or even provide it
[11:34:07] <Gin> my @hashref = { scalar => { description => "hello", sigil => '$' }
[11:34:25] <Gin> what does 'scalar', 'description' and s
[11:34:30] <Gin> 'sigil' 
[11:34:35] <Grinnz> stop storing references in arrays :P
[11:34:56] <greyrat> I just thought that the public utility that public logging could provide (e.g., think sth like http://hn.algolia.com/ ) is very concrete, while banning the logging doesn't have any concrete benefits that I can see. Anyhow, I keep logs for myself, so it doesn't matter much for me.
[11:34:56] <Grinnz> "bareword =>" is exactly equivalent to "'bareword', "
[11:34:57] <Paperbot> Link title(s): [ HN Search powered by Algolia ]
[11:35:00] <Gin> That is an example snippet from the perlintro
[11:35:24] <Grinnz> greyrat: yes, some places find it useful enough
[11:36:01] <Grinnz> it can change the atmosphere if public logging is known to be happening, is one reason against
[11:36:50] <Grinnz> Gin: => is known as "fat comma" because it is mostly just a comma, except that a string before it does not need to be quoted, if it only consists of letters/numbers/underscore
[11:37:12] <greyrat> I agree with that, but I already feel like I am logged, and am suitably 'chilled.' I would create throwaways if I wanted to say anything too controversial.
[11:37:12] <Grinnz> it's used for hash keys very often, because the same rules allow you to use a bareword to access that hash key
[11:38:01] <Grinnz> greyrat: for the record i personally prefer public logging, but in the case of this channel i don't care enough to make the case for it
[11:38:21] *** Joins: randir (~randir@93.159.239.42)
[11:38:25] <Grinnz> the perl development channel on the other hand, i've thought about suggesting it
[11:38:32] <Grinnz> some conversations there are very important
[11:39:03] <greyrat> 🤠
[11:39:22] <Gin> Grinnz: How can I learn something from mailing lists?
[11:39:38] <Gin> I only know IRC and mailing lists now.
[11:39:41] *** Quits: alarix (~alarix@59.88.30.217) (Quit: leaving)
[11:39:49] <Grinnz> Gin: uh... not sure what you mean
[11:39:57] <greyrat> Gin: (Google or send an email?)
[11:40:28] <Adura> Gin, you learn who is angry.
[11:40:44] <Gin> I haven't formed a workflow yet.
[11:41:02] <Gin> What kind of questions I can send an email with
[11:41:02] <greyrat> Grinnz: Discourse is also very good in my experience. New languages usually have one, but I haven't seen them for more mature langs.
[11:41:33] <xenu> i hate it, it's the worst forum software i have ever seen
[11:41:34] <Gin> And who I should send an email to
[11:41:41] <Grinnz> Gin: dunno how to answer that. i suggest watching the list to get an idea
[11:41:46] <greyrat> Gin: Have you found Stackoverflow wanting?
[11:42:04] <Grinnz> Gin: the mailing list page describes how to subscribe to the list, and how to send a mail to it
[11:42:14] <Grinnz> (on lists.perl.org)
[11:42:19] <greyrat> xenu: What do you dislike about it? 
[11:42:25] <Gin> greyrat: I haven't
[11:42:54] <Gin> How can I get some knowledge about that?
[11:43:54] <xenu> greyrat: mostly the fact that it lazy loads the posts using javascript and because of that it hijacks ctrl+f
[11:45:02] <greyrat> xenu: Yes, that would be very awful. Can it not be turned off?
[11:45:20] <xenu> i think it can't
[11:45:27] <greyrat> I hadn't tried scraping the forum pages before, so I hadn't noticed. 
[11:45:40] <greyrat> xenu: They are opensource, open an issue?
[11:45:53] <xenu> i believe that's an architectural problem
[11:46:04] <xenu> and they are well aware
[11:46:36] <greyrat> xenu: You can always use the site's own search though. It can even integrate with algolia.
[11:46:59] <greyrat> I also think publishing dumps of the site's data is possible.
[11:47:44] <Gin> greyrat: What is Stackoverflow wanting?
[11:48:00] <xenu> also i dislike how it automatically scrolls down in the thread view to the point where you left off
[11:48:44] *** Quits: thunder (~thunder@user/thunder) (Ping timeout: 244 seconds)
[11:49:30] <greyrat> Gin: I mean, use SO. It will probably answer your questions, and the archives are better suited for future visitors.
[11:49:56] <greyrat> xenu: I like that. 😺
[11:50:02] <Gin> Yep, I use Stackoverflow
[11:50:22] <greyrat> Gin: So why do you want to ask questions on the mailing list?
[11:50:58] <Gin> I don't mean the newbie questions
[11:50:59] <xenu> Gin: "to find something wanting" is an idiom, it means "unsatisfactory, lacking something needed"
[11:51:36] <Gin> xenu: Thanks for your help
[11:52:28] <Gin> greyrat: My thought is that some more insightful questions can be asked through mailing lists.
[11:52:56] <Grinnz> stack overflow isn't very suitable for questions which need a discussion. it's only suited for "i have this specific problem, and need a specific answer"
[11:53:06] <Grinnz> which is fine, but it's not for everything
[11:53:34] <Gin> Grinnz: So what do you use mailing lists for?
[11:53:51] <Grinnz> that said, there aren't many perl mailing lists good for questions - irc and reddit are more used for that
[11:53:52] <greyrat> True, mailing lists are better for advanced questions.
[11:54:11] <Grinnz> unless it's a question about a very specific part of perl which has a mailing list for that purpose
[11:54:28] <xenu> p5p mailing list is mostly used for 1) discussions about perl development and future 2) advanced questions about perl's internals
[11:54:38] *** Joins: brtastic (~Thunderbi@185.24.91.138)
[11:54:43] <Grinnz> ^ this, it is one of the only mailing lists i regularly use
[11:55:11] <Gin> From my perspective, mailing lists and IRC channels are both utilities for the community. But I don't know how I can make use of them.
[11:55:11] <Grinnz> it isn't very useful for standard perl coding
[11:55:13] <xenu> tbh i think the best place for perl help is this very channel
[11:55:39] <Gin> xenu: That's the point.
[11:55:49] <xenu> there's also perlmonks.org
[11:56:18] <Adura> The subreddit does people's coursework for them, too.
[11:56:21] <xenu> although it's seen better days
[11:56:41] <Grinnz> yeah, reddit and perlmonks are the two places i would suggest for websites you can ask questions on - perlmonks appearance usually turns people away though
[11:56:46] <Grinnz> also its functionality and userbase
[11:57:31] <Grinnz> Adura: ask the right question and apaprently there are a lot of bored coders :P
[11:57:40] <xenu> i wish we had a modern version of perlmonks
[11:57:53] *** Joins: markgrady (~markgrady@2a02:c7f:f72d:f300:54fe:a960:204a:f439)
[11:59:11] <xenu> also a modern version of blogs.perl.org, but apparently it's cursed, there were two failed TPF grants to upgrade it
[11:59:35] <greyrat> In `print DES $_;`, Is it equivalent to `print (DES $_)` or `print DES, $_`?
[11:59:39] <Adura> I can make a blog, but it'll look like shit.
[11:59:51] <Grinnz> greyrat: first one - the filehandle argument is not followed by a comma
[11:59:51] <xenu> i guess an agregator like planet perl is the future
[12:00:13] <greyrat> Adura: Can't they just use a standard solution like Hugo?
[12:00:16] <Grinnz> greyrat: it has custom parsing
[12:01:10] <daxim> xenu, https://web.archive.org/web/201201/http://perlnights.com/
[12:01:13] <Paperbot> Link title(s): [ Perl Nights ]
[12:02:11] <xenu> daxim: i never heard of it, it kinda looks like perlmonks
[12:02:32] <daxim> https://old.reddit.com/r/perl/comments/m4rx0s/if_anyone_wonders_why_blogsperlorg_doesnt_have/
[12:02:33] <Paperbot> Link title(s): [ If anyone wonders why blogs.perl.org doesn't have https yet, Aristotle has posted an in-depth exp... ]
[12:02:37] <Grinnz> looks liek a real site though
[12:02:57] <Grinnz> perlmonks looks like... a database that accidentally ended up on a website
[12:03:05] <Grinnz> because it is
[12:03:10] <daxim> Logicus was unhappy at pm, so he made his own (with blackjack and hookers)
[12:03:12] <xenu> the problem is i have no idea what e.g. "The Armoury" is supposed to mean
[12:03:26] <daxim> as you can see, it failed adoption
[12:03:40] <Grinnz> critical mass is hard to overcome for this sort of project
[12:03:53] <Grinnz> you need users to get users
[12:04:22] <xenu> clearly the author didn't do his homework, when you creative an alternative to an already existing site, you have to ddos your competitor
[12:04:23] <Grinnz> so to start with, there needs to be an external reason that random perl users would use your site
[12:04:34] <xenu> s/creative/create/
[12:04:34] *** Joins: thunder (~thunder@185.163.110.100)
[12:04:38] *** Joins: choroba (~E.Choroba@89-101-243-80.cust.centrio.cz)
[12:04:43] *** Quits: thunder (~thunder@185.163.110.100) (Changing host)
[12:04:43] *** Joins: thunder (~thunder@user/thunder)
[12:05:54] *** Joins: kensanata (~user@user/kensanata)
[12:06:26] <daxim> if you have tuits to spare, offer them to aristotle for b.p.o and see what comes of it
[12:06:29] <pragma-> Grinnz: https://metacpan.org/pod/Bot::Maverick::Plugin::Core is 404ing for me
[12:06:59] <Grinnz> maverick is not on cpan
[12:07:03] <pragma-> It's linked from the readme in https://github.com/Grinnz/maverick
[12:07:04] <Paperbot> Link title(s): [ GitHub - Grinnz/maverick: Perl Mojo::IRC Bot framework ]
[12:07:16] <Grinnz> yeah, sorry, you just have to look in the lib/ dir
[12:07:20] <pragma-> oh ok
[12:08:07] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:09:00] *** Joins: semeion (~semeion@user/semeion)
[12:09:49] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.1)
[12:18:03] *** Joins: habamax_ (~habamax@vpn.avast.com)
[12:18:50] *** Quits: habamax_ (~habamax@vpn.avast.com) (Changing host)
[12:18:50] *** Joins: habamax_ (~habamax@user/habamax)
[12:18:50] *** habamax is now known as Guest8957
[12:18:50] *** habamax_ is now known as habamax
[12:19:13] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 244 seconds)
[12:19:39] *** Quits: thunder (~thunder@user/thunder) (Ping timeout: 245 seconds)
[12:21:36] *** Quits: Guest8957 (~habamax@user/habamax) (Ping timeout: 272 seconds)
[12:21:55] *** Joins: thunder (~thunder@185.163.110.88)
[12:22:03] *** Quits: thunder (~thunder@185.163.110.88) (Changing host)
[12:22:03] *** Joins: thunder (~thunder@user/thunder)
[12:23:42] *** Joins: metasintactic (~thunder@185.163.110.85)
[12:23:53] *** Quits: metasintactic (~thunder@185.163.110.85) (Changing host)
[12:23:53] *** Joins: metasintactic (~thunder@user/thunder)
[12:26:40] *** Quits: thunder (~thunder@user/thunder) (Ping timeout: 272 seconds)
[12:27:13] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[12:31:11] *** Joins: Pali (~pali@user/pali)
[12:31:58] *** Quits: Gin (~Gin@172.104.48.83) (Quit: Client closed)
[12:32:20] *** Joins: feriman (~feriman@188.163.113.127)
[12:42:59] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 244 seconds)
[12:51:14] *** Quits: horsepatat (~horsepata@80.89.78.117) (Read error: Connection reset by peer)
[12:51:24] *** Joins: horsepatat (~horsepata@80.89.78.117)
[12:51:48] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[12:52:12] *** Joins: larkfisherman (~larkfishe@217.75.204.126)
[12:55:54] *** Quits: horsepatat (~horsepata@80.89.78.117) (Ping timeout: 245 seconds)
[12:59:04] <Altreus> morning, fools
[13:00:02] *** Quits: Pali (~pali@user/pali) (Ping timeout: 244 seconds)
[13:01:35] *** Joins: jplesnik_ (~jplesnik@nat-pool-brq-t.redhat.com)
[13:02:15] <lopid> shut your jibberjabber
[13:03:02] <Altreus> well I never
[13:03:49] *** Quits: jplesnik (~jplesnik@213.175.37.12) (Ping timeout: 245 seconds)
[13:07:02] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[13:16:52] <gustaf> how rude! 
[13:18:07] *** Joins: Gin (~Gin@172.104.48.83)
[13:18:08] *** Joins: horsepatat (~horsepata@80.89.78.117)
[13:20:24] <lopid> that guy's crazier than murdoch
[13:20:38] <Altreus> crazier than murlocs?
[13:23:09] <Grinnz> looks like netsplit.de's libera channel listing got fixed https://netsplit.de/channels/details.php?room=%23perl&net=Libera.Chat
[13:23:10] <Paperbot> Link title(s): [ #perl Libera.Chat - IRC Chat - Perl, Programming ]
[13:25:31] <Altreus> that looks like something that would shine with some of the new tech
[13:27:23] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[13:27:30] <Grinnz> like slapping some bootstrap in there?
[13:27:56] *** Joins: mattil (~mattil@airio.portalify.com)
[13:31:18] <Grinnz> i like how ##rust is now the only project-community namespace with no project channel
[13:31:23] <Grinnz> in the top channels
[13:31:43] <Grinnz> no primary project channel i should say
[13:32:06] <Grinnz> well, i guess ##freenode counts, it's a real project
[13:32:13] *** Joins: Luks_Nuke (~LuksNuke@94.242.245.63)
[13:32:16] <Grinnz> for now
[13:34:39] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Ping timeout: 245 seconds)
[13:37:08] <Altreus> like an SVG-based interactive graph thingy
[13:37:31] <Altreus> Was there no #rust on freenode?
[13:38:45] <Grinnz> nope
[13:39:15] *** Joins: thunder (~thunder@185.163.110.116)
[13:39:22] *** Quits: thunder (~thunder@185.163.110.116) (Changing host)
[13:39:22] *** Joins: thunder (~thunder@user/thunder)
[13:40:37] <Altreus> What phenomenon needs to happen within a community for a single-hash project channel to be created for it?
[13:41:44] *** Quits: metasintactic (~thunder@user/thunder) (Ping timeout: 245 seconds)
[13:42:29] <xenu> well i suppose it's up to whoever controls the rust project
[13:42:51] *** Joins: metasintactic (~thunder@185.163.110.85)
[13:43:00] *** Quits: metasintactic (~thunder@185.163.110.85) (Changing host)
[13:43:00] *** Joins: metasintactic (~thunder@user/thunder)
[13:43:27] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[13:43:35] <xenu> in our case it probably should be TPF's job but for legacy reasons it isn't
[13:44:15] <Altreus> We were just very foresighted
[13:44:39] *** Quits: thunder (~thunder@user/thunder) (Ping timeout: 245 seconds)
[13:44:44] <xenu> (thank god it isn't, btw)
[13:45:03] <Altreus> quite so
[13:49:55] <Altreus> netsplit.de looks like somewhere that could have all the channel metadata listed
[13:55:54] *** Quits: metasintactic (~thunder@user/thunder) (Ping timeout: 245 seconds)
[13:59:58] *** Quits: kensanata (~user@user/kensanata) (Ping timeout: 244 seconds)
[14:01:38] * GumbyPAN CPAN Upload: Text-Amuse-Compile-1.63 by MELMOTHX https://metacpan.org/release/MELMOTHX/Text-Amuse-Compile-1.63
[14:03:39] *** Joins: thunder (~thunder@185.163.110.89)
[14:04:28] *** thunder is now known as Guest847
[14:05:09] *** Joins: metasintactic (~thunder@185.163.110.100)
[14:05:20] *** Quits: metasintactic (~thunder@185.163.110.100) (Changing host)
[14:05:20] *** Joins: metasintactic (~thunder@user/thunder)
[14:07:39] *** Joins: markgrad_ (~markgrady@204.246.246.254)
[14:07:59] *** Quits: Guest847 (~thunder@185.163.110.89) (Ping timeout: 245 seconds)
[14:10:04] *** Quits: metasintactic (~thunder@user/thunder) (Ping timeout: 245 seconds)
[14:10:32] *** Quits: markgrady (~markgrady@2a02:c7f:f72d:f300:54fe:a960:204a:f439) (Ping timeout: 272 seconds)
[14:11:49] *** Joins: metanode (~metanode@user/metanode)
[14:12:16] *** Parts: metanode (~metanode@user/metanode) ()
[14:16:26] *** Quits: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[14:21:26] *** Quits: Gin (~Gin@172.104.48.83) (Quit: Client closed)
[14:22:46] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[14:22:47] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Read error: Connection reset by peer)
[14:23:01] *** Quits: mattil (~mattil@airio.portalify.com) (Read error: Connection reset by peer)
[14:23:26] *** Joins: thunder (~thunder@185.163.110.118)
[14:23:27] *** Joins: mattil (~mattil@airio.portalify.com)
[14:23:35] *** Quits: thunder (~thunder@185.163.110.118) (Changing host)
[14:23:35] *** Joins: thunder (~thunder@user/thunder)
[14:26:41] *** Joins: metanode (~metanode@185.163.110.120)
[14:26:55] *** Parts: metanode (~metanode@185.163.110.120) ()
[14:29:05] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[14:31:53] *** Joins: metanode (~metanode@185.163.110.120)
[14:32:28] *** Parts: metanode (~metanode@185.163.110.120) ()
[14:39:19] *** Joins: Smedles (~quassel@2403-5800-5100-f00-aaa1-59ff-fe53-1a69.ip6.aussiebb.net)
[14:40:32] *** Quits: Su-Shee (~Susanne@p4ffc71e8.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[14:41:48] *** Joins: Su-Shee (~Susanne@p4ff496cb.dip0.t-ipconnect.de)
[14:44:06] *** Joins: Adoi (~Adoi@217.138.199.102)
[14:47:20] *** Quits: Adoi (~Adoi@217.138.199.102) (Changing host)
[14:47:20] *** Joins: Adoi (~Adoi@user/adoi)
[14:47:34] *** Quits: Adoi (~Adoi@user/adoi) (Client Quit)
[14:47:43] *** Quits: pucara (~i@181.93.165.204) (Quit: Lost terminal)
[14:47:50] *** Joins: Adoi (~Adoi@user/adoi)
[14:56:44] * GumbyPAN CPAN Upload: HTTP-Any-0.13 by KNI https://metacpan.org/release/KNI/HTTP-Any-0.13
[15:00:34] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 272 seconds)
[15:01:44] * GumbyPAN CPAN Upload: Robots-Validate-v0.2.3 by RRWO https://metacpan.org/release/RRWO/Robots-Validate-v0.2.3
[15:04:10] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[15:04:34] *** Joins: metasintactic (~thunder@185.163.110.92)
[15:04:43] *** Quits: metasintactic (~thunder@185.163.110.92) (Changing host)
[15:04:43] *** Joins: metasintactic (~thunder@user/thunder)
[15:06:01] *** Quits: thunder (~thunder@user/thunder) (Ping timeout: 268 seconds)
[15:15:46] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 272 seconds)
[15:17:57] *** Quits: horsepatat (~horsepata@80.89.78.117) (Read error: Connection reset by peer)
[15:18:31] *** Joins: Su-Shee_ (~Susanne@p4ffc725e.dip0.t-ipconnect.de)
[15:20:29] *** Quits: Su-Shee (~Susanne@p4ff496cb.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[15:31:19] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[15:34:12] *** Joins: mattil_ (~mattil@helsinki.portalify.com)
[15:37:34] *** Quits: mattil (~mattil@airio.portalify.com) (Ping timeout: 245 seconds)
[15:42:45] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Read error: Connection reset by peer)
[15:43:52] *** Joins: diskin (~diskin@87.117.57.233)
[15:45:22] *** Quits: Luks_Nuke (~LuksNuke@94.242.245.63) (Ping timeout: 244 seconds)
[15:45:36] *** Joins: pj (~pj@ghettoforge/pj)
[15:49:43] <gustaf> isn't Rust using Matrix? 
[15:52:07] *** Joins: tcohen (~tcohen@192.141.149.51)
[16:02:38] <ilmari> gustaf: no, they went to discord when mozilla started talking about shutting down IRC :(
[16:04:17] *** Joins: Luks_Nuke (~LuksNuke@94.242.245.63)
[16:11:17] <Altreus> > mozilla started talking about shutting down IRC  # This feels like a deep reference and I don't know it
[16:16:50] *** Quits: feriman (~feriman@188.163.113.127) (Quit: WeeChat 3.1)
[16:16:53] <gustaf> Altreus: couple years ago 
[16:17:22] <ilmari> Altreus: irc.mozilla.org is no more, they moved to matrix
[16:17:25] <gustaf> and it wasn't "shutting  down IRC" in general, just Mozilla's presence there 
[16:18:12] *** Quits: gizmomathboy_ (~gizmomath@206.127.53.107) (Ping timeout: 265 seconds)
[16:20:51] <Altreus> ah gotcha
[16:21:10] <Altreus> I assumed it was *their* IRC but then I thought maybe they were saying strange things and there was a story
[16:21:54] * GumbyPAN CPAN Upload: Interchange-Search-Solr-0.21 by HORNBURG https://metacpan.org/release/HORNBURG/Interchange-Search-Solr-0.21
[16:24:59] <gustaf> Mozilla didn't feel that IRC had the mod tools they needed to deal with spam and harassment 
[16:27:02] *** Joins: feriman (~feriman@188.163.113.127)
[16:27:35] <Altreus> I can see that argument
[16:27:47] <Altreus> If you set a higher bar for those, IRC doesn't reach it
[16:29:53] *** Quits: tcohen (~tcohen@192.141.149.51) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:33:34] *** Joins: tcohen (~tcohen@192.141.149.51)
[16:33:43] *** Joins: gizmomathboy_ (~gizmomath@206.127.53.107)
[16:34:12] *** Quits: feriman (~feriman@188.163.113.127) (Quit: WeeChat 3.1)
[16:35:26] *** Joins: feriman (~feriman@188.163.113.127)
[16:40:48] *** Joins: tg (~tg@rockylinux/infra/tg)
[16:43:19] *** Quits: mattil_ (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[16:43:41] *** Joins: mattil (~mattil@helsinki.portalify.com)
[16:45:29] *** Quits: metasintactic (~thunder@user/thunder) (Ping timeout: 245 seconds)
[16:48:24] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 245 seconds)
[16:51:04] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[16:55:29] *** Joins: superherointj (~superhero@189-113-69-2.static.sumicity.net.br)
[16:57:18] *** Joins: thunder (~thunder@185.163.110.124)
[16:57:21] *** Quits: thunder (~thunder@185.163.110.124) (Changing host)
[16:57:21] *** Joins: thunder (~thunder@user/thunder)
[17:00:53] *** Quits: diskin (~diskin@87.117.57.233) (Killed (NickServ (GHOST command used by diskin_!~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com)))
[17:00:53] *** Joins: diskin_ (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com)
[17:07:48] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Ping timeout: 252 seconds)
[17:20:02] *** Quits: Luks_Nuke (~LuksNuke@94.242.245.63) (Quit: Leaving)
[17:20:20] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[17:21:07] *** Joins: gizmomathboy (~gizmomath@206.127.53.107)
[17:21:16] *** Quits: gizmomathboy (~gizmomath@206.127.53.107) (Client Quit)
[17:25:08] *** Quits: diskin_ (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com) (Quit: Leaving)
[17:25:22] *** Joins: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com)
[17:38:52] *** Joins: hash45 (~hash@139.177.184.26)
[17:39:13] <hash45> I would like to hear some explanations about last statement
[17:40:12] <hash45> The documentation explains that it is like "break" in C, but I find it wanting because it doesn't explain the EXPR or LABEL following "last".
[17:40:48] <Altreus> ah
[17:40:49] <hash45> I think maybe the LABEL refers to the loop I would like to jump out of.
[17:40:53] <Altreus> that is correct
[17:41:08] <Altreus> EXPR is not so oft used and I would suggest to avoid it even though I'm sure it works fine
[17:41:18] <Altreus> It smells like "no strict warnings" to me
[17:41:41] <hash45> I don't need that fancy feature for now.
[17:42:06] *** Quits: larkfisherman (~larkfishe@217.75.204.126) (Quit: Leaving)
[17:42:14] <Altreus> I don't think I've ever done last LABEL except for clarity
[17:42:29] <Altreus> i.e. it means you don't have to remember what the context of the loop is
[17:43:01] <ology> I use it to jump out of an inner loop and proceed with the next outer.
[17:43:02] <zgu> i've occasionally done last with no label in short for loops
[17:43:04] <hash45> I suppose it would be convenient if there are multiple nested loops
[17:43:15] <zgu> although i only occasionally use last in general
[17:43:20] <ology> hash45: exactly
[17:43:32] <hash45> ology: Thanks
[17:43:36] <zgu> yes, if you have multiple layers of loops you can break out of a specific one with a label
[17:43:57] <hash45> I don't like that actually
[17:44:25] <ology> You can use whiles and an appropriate condition...
[17:44:27] <hash45> In C, nested loops usually indicate poor quality of code design
[17:44:34] <Yaakov> Hellology.
[17:44:43] <ology> Heyyaakov!
[17:44:52] <ology> ltns
[17:44:59] <Yaakov> Where have you been, it's been years!
[17:45:01] <zgu> doesn't necessarily mean bad quality, just polynomial time
[17:45:11] <ology> Yaakov: Been here! heh
[17:45:22] <Yaakov> Oh, right. I was the one away.
[17:45:26] <ology> You have been the abset one.
[17:45:30] <ology> absent
[17:45:34] <ology> :)
[17:45:38] <Altreus> Jumping all the way to an outer loop is occasionally helpful but I often find that this only lasts until the next feature request
[17:45:47] <Yaakov> I LOVE YOU ALL WITH A GREAT HUGE LOVE
[17:45:50] <Yaakov> &c.
[17:45:52] <Altreus> oh hi Yaakov 
[17:45:54] <Yaakov> Hello, Altreus.
[17:45:58] <Altreus> I've missed this all-caps pronouncement
[17:46:13] <Yaakov> So have I, frankly.
[17:46:22] <ology> Yaakov: Programming in perl again are you?
[17:46:22] <Yaakov> Life... it throws stuff at you.
[17:46:26] <Altreus> perhaps you have missed a community that deserves it
[17:46:33] <hash45> Another question: what does "[a => 'abc']" mean?
[17:46:42] <Altreus> hash45: it's an arrayref
[17:46:48] <ology> hash45: ['a', 'abc']
[17:46:50] <Altreus> a is being quoted by => and therefore a string
[17:46:56] <Altreus> so ye that
[17:46:57] <Yaakov> ology: I am retired. But... yes, I have projects and perl won't leave me alone.
[17:46:59] <Altreus> well technically
[17:47:07] <Altreus> "[a => 'abc']" is a string with no special meaning :D
[17:47:09] <hash45> Why does it look like a hash
[17:47:17] <ology> Yaakov: aha. Bravo on being retired.
[17:47:18] <Altreus> because you are being fooled by =>
[17:47:22] <Altreus> it is sneaky
[17:47:23] <ology> hash45: Because of the => ?
[17:47:28] <Altreus> It is really just a ,
[17:47:45] <Altreus> But sometimes, it is useful to maintain the ordering of things, while writing them with hash semantics
[17:47:52] <Altreus> Often, HTTP headers
[17:47:53] <hash45> Alterus: Can I access it with {} instead of []?
[17:47:58] <Yaakov> ology: I was summoned by forces in the Liberaverse when the rift in IRC-space occured. I wouldn't have noticed for a long time otherwise.
[17:48:08] <hash45> Sorry for the typo
[17:48:15] <ology> Aha yes.
[17:48:19] <Altreus> no, but you can turn it into a hash: +{ @$arrayref }->{key}
[17:48:23] <Yaakov> ology: I hope you've been well. You too, Altreus.
[17:48:25] <zgu> => is the fat comma that lets you type the left operand without quotes in certain cases
[17:48:34] <zgu> namely if it's a bareword
[17:48:34] <Altreus> Yaakov: I have new meds making me functional
[17:48:36] <Altreus> Things are looking up
[17:48:46] <Yaakov> Altreus: Brilliant.
[17:49:07] <Altreus> How about you? No major downturns at least?
[17:49:24] <ology> Yaakov: I was trying to freelance = feast/famine for years. Gave up and got a dream job. Started Monday.
[17:49:47] <Altreus> ology: hey I didn't know that, nice one
[17:49:53] <ology> :)
[17:50:06] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 264 seconds)
[17:50:07] <Altreus> I'm currently a contractor who is accidentally basically permanent so that's decent bread too
[17:50:15] <ology> good
[17:50:18] <Yaakov> I am actually, using a modern version of Irssi! I went from 0.8.15 to whatever the Ubuntu package manager installs. 
[17:50:21] <Altreus> I'm gonna be moving out of software in the next year or two hopefully
[17:50:25] <Yaakov> ology: Very nice indeed!
[17:50:33] <Altreus> I say out of software
[17:50:35] <Yaakov> ology: May it always be dreamlike.
[17:50:40] <Altreus> I'm gonna be doing it cos I want to :P
[17:50:41] <ology> Danke
[17:50:48] <hash45> Altreus: Does bareword have to be followed by "=>"?
[17:51:00] <Yaakov> Altreus: What will you be doing?
[17:51:11] <hash45> if I want to make a list of scalars
[17:51:16] <Altreus> hash45: depends on "have to be". => simply quotes it, but there are other ways of making the bareword valid
[17:51:22] <Altreus> Yaakov: tutoring
[17:51:41] <Altreus> hash45: for example, you might prefer [ qw/a abc cat dog mouse/ ]
[17:51:56] <Yaakov> Altreus: Nice.
[17:52:00] <Altreus> or you might just have to quote everything individually, or some combination
[17:52:03] * GumbyPAN CPAN Upload: Term-TablePrint-0.135 by KUERBIS https://metacpan.org/release/KUERBIS/Term-TablePrint-0.135
[17:52:23] <Altreus> [ qw/a abc cat dog mouse/, "emperor penguin" ]
[17:52:41] <zgu> it's a shortcut that works most of the time since hash keys are often barewords, and it makes code more readable by making the key-value relationship more obvious
[17:52:46] <Yaakov> Well, I am doing veraious things now. I am concentrating on photography and will soon be hawking merch to bird and nature lovers.
[17:53:03] <zgu> TIMTOWTDI :)
[17:53:20] <ology> Yaakov: Do you have photos online somewhere?
[17:53:22] <Altreus> oh wait I knew you were photographying
[17:53:40] <Altreus> I think some of your photos have leaked into the perl blogosphere maybe
[17:53:56] <Altreus> So I've seen "Photo by Yaakov's real name" or stuff
[17:54:06] <Yaakov> ology: Not a curated gallery, but: https://www.instagram.com/yaakovsloman/
[17:54:07] <Paperbot> Link title(s): [ Ya'akov Sloman (@yaakovsloman) on Instagram • 1,016 photos and videos ]
[17:54:39] <ology> cool
[17:54:44] <hash45> Altreus: I've read the documentation and it said "A word that has no other interpretation in the grammar will be treated as if it were a quoted string"
[17:54:49] <Altreus> Did you know that I like birds
[17:54:53] <hash45> I got your point now 
[17:54:54] <Altreus> So I like these photos
[17:55:01] <Yaakov> Altreus: Birbs are the bomb.
[17:55:15] <Altreus> hash45: right on. a => is 'a' but a() => is still a() =>
[17:55:28] <Yaakov> Altreus: gizmomathboy_ follows me on Twitter and retweets some, so maybe that's it.
[17:55:52] <Altreus> maybe maybe
[17:56:00] <hash45> Altreus: Do you mean a subroutine by "a()"?
[17:56:08] <Altreus> yeah it'll call it
[17:56:17] <Altreus> and use the result as the value
[17:56:22] <Altreus> (which might be a list!)
[17:56:25] <hash45> Altreus: Thanks for your patience!
[17:56:28] <Altreus> This makes hashes go wrong sometimes
[17:56:41] <Altreus> hash45: Thanks for asking questions that make sense!
[17:56:51] <ology> I like making up names for birds outside my window. "Ooo! There's a black-hooded monk-bird!" etc.
[17:57:54] <Yaakov> ology: The real names are sometimes confusing. For example this is a red-bellied woodpecker: https://www.instagram.com/p/CPYebVkgC0R/?utm_source=ig_web_copy_link
[17:57:55] <Paperbot> Link title(s): [ Ya'akov Sloman on Instagram: “Red Bellied Woodpecker—Ignore the head, the faint coloring on this ... ]
[17:58:32] <Yaakov> ology: But that's becasue the more obvious name was already used for this guy: https://www.instagram.com/p/CPoNd0KA1_o/?utm_source=ig_web_copy_link
[17:58:32] <Paperbot> Link title(s): [ Ya'akov Sloman on Instagram: “Red Headed Woodpecker   #bird #birds #birdsofinstagram #birdphotogr... ]
[17:58:55] <ology> Ah. Naming things is hard.
[17:58:58] <hash45> I've read the documentation about subroutine. And it says "Assigning to the whole array @_ removes that aliasing, and does not update any arguments."
[17:59:34] <Yaakov> It's been one of the crowning achievements of my career to be good at naming things. If oyu get the names right, the rest is just details.
[17:59:47] *** gizmomathboy_ is now known as gizmomathboy
[17:59:49] <hash45> I wonder if a assign another value to $_[0], for example. Will the arguments be changed forever.
[17:59:57] <Yaakov> Hello, gizmomathboy.
[18:00:38] *** Joins: RandalSchwartz (~Adium@c-73-221-215-233.hsd1.wa.comcast.net)
[18:00:39] <gizmomathboy> Yaakov, indeed I do retweet your excellent pics :-)
[18:00:49] <hash45> And what does it mean by "assigning to the whole array @_"
[18:00:58] <Yaakov> gizmomathboy: And I appreciate it every time, I feel seen.
[18:01:51] <choroba> hash45: Have you tried it?
[18:02:10] <hash45> Yep
[18:02:27] <choroba> eval: sub xx { $_[0] = 12 } my $x = 10; xx($x); print $x
[18:02:29] <perlbot> choroba: 12
[18:02:35] <choroba> eval: sub xx { @_ = 12 } my $x = 10; xx($x); print $x
[18:02:36] <perlbot> choroba: 10
[18:02:38] <Yaakov> I haven't used or configured Irssi in such a long time it's *alomst* like starting over with all the obscurity, but it's coming back.
[18:02:41] <hash45> I suppose it means that I lost all arguments stored in @_
[18:02:58] <choroba> it means the aliasing is lost
[18:03:27] <choroba> See my two examples ^^
[18:03:39] <hash45> choroba: Thanks!
[18:04:14] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 245 seconds)
[18:04:23] <ology> irssi++
[18:05:38] <hash45> choroba: By "lose aliasing", does it mean that I cannot access the arguments passed in using @_?
[18:05:38] <Altreus> lots of tits and breasts in ornithology
[18:05:43] <Yaakov> Now I have to update my scripts to work with a version that's not more than a decade old!
[18:06:07] <Yaakov> Altreus: Well, other things too.
[18:06:27] *** Joins: txtsd (~txtsd@user/txtsd)
[18:06:31] <Yaakov> Altreus: I mean other body parts.
[18:06:35] <Altreus> warbling and the like
[18:06:49] <Altreus> oh, true, but I tend to hyperfocus on my interests
[18:06:49] <Yaakov> Male chickens, for example.
[18:07:23] <choroba> hash45: No, it means you can't change the variables used as arguments.
[18:07:42] <choroba> You can't access the arguments in @_ either, but that's expected.
[18:07:51] <Yaakov> OK, I have to head down to the river to strike the liknesses of some birbs.
[18:07:57] <Yaakov> BBIAB
[18:08:06] <Altreus> :)
[18:08:18] <ology> ttyl
[18:09:01] <Altreus> hash45: it is a rarely-used feature, that you can (attempt to) update someone else's variable by assigning to $_[n]
[18:09:17] <Altreus> hash45: but if you assign @_ = (foo, bar) then you don't get that
[18:11:03] *** Quits: txtsd (~txtsd@user/txtsd) (Ping timeout: 252 seconds)
[18:11:29] *** Joins: txtsd (~txtsd@user/txtsd)
[18:14:21] *** Quits: mattil (~mattil@helsinki.portalify.com) (Remote host closed the connection)
[18:14:59] *** Joins: mattil (~mattil@helsinki.portalify.com)
[18:15:28] *** Joins: larkfisherman (~larkfishe@217.75.204.126)
[18:19:51] *** Quits: mattil (~mattil@helsinki.portalify.com) (Ping timeout: 252 seconds)
[18:21:55] *** Quits: Adoi (~Adoi@user/adoi) (Ping timeout: 244 seconds)
[18:22:33] <hash45> Altreus: Thanks!
[18:24:07] <hash45> choroba: what do you mean by "but that's expected"? 
[18:24:36] <hash45> choroba: maybe an example is more effective.
[18:25:02] <Altreus> hash45: I think he means that if you assign to @_ then you lose the arguments that were in it!
[18:25:20] <hash45> Altreus: That is my thought too.
[18:25:34] <hash45> That is exactly how I understand it.
[18:26:27] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 252 seconds)
[18:26:55] <hash45> Altreus: if I can modify the arguments by assigning values to $_[$i], it is not pass-by-value at all, right?
[18:27:47] <choroba> That's the aliasing.
[18:28:11] *** Joins: metasintactic (~thunder@185.163.110.104)
[18:28:22] *** Quits: metasintactic (~thunder@185.163.110.104) (Changing host)
[18:28:22] *** Joins: metasintactic (~thunder@user/thunder)
[18:31:13] *** Quits: thunder (~thunder@user/thunder) (Ping timeout: 244 seconds)
[18:31:39] <hash45> choroba: your example: sub xx { $_[0] = 12 } my $x = 10; xx($x); print $x
[18:32:00] <OnlineCop> I'm trying to copy some C++ line comments from one file (orig.h) into another file (feature.h). (An example is [here](https://regex101.com/r/A6Zqfc/2) if you want a sample/reference.) Would this be too complicated of a task to perl-pie?
[18:32:00] <Paperbot> Link title(s): [ regex101: build, test, and debug regex ]
[18:32:15] <hash45> $x is modified outside the subroutine scope
[18:32:48] <Altreus> that's right, it's not a reference because that term is already meaningful in perl
[18:32:52] <Altreus> but it's not a copy either
[18:35:44] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Ping timeout: 264 seconds)
[18:39:03] <hash45> Altreus: it is a reference if I understand it from the perspective of memory manipulation.
[18:39:23] <Altreus> hash45: in C terms basically yes
[18:39:45] <Altreus> but in Perl terms a reference is created with \ and will always be a reference until you dereference it
[18:40:04] <Altreus> specifically, if $_[0] is a Perl reference, my $x = $_[0]; remains a Perl reference, but it is no longer an alias
[18:40:17] <hash45> Altreus: I treat Perl reference as a pointer in C though.
[18:40:38] *** Quits: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com) (Quit: Leaving)
[18:40:43] <Altreus> yeah, but if the doc said reference instead of alias then they'd be wrong :)
[18:41:04] <hash45> Altreus: what do you mean by "it is no longer an alias"?
[18:41:27] <Altreus> hash45: the sub xx example from earlier only works if you assign to $_[0]
[18:41:28] <hash45> I suppose I should check out the documentation for "alias" 
[18:42:04] <Altreus> If you do «my $var = $_[0]; $var = 10» then the output will still be 12
[18:42:38] <hash45> sub xx { $_[0] = 12 } my $x = 10; xx($x); print $x
[18:42:47] <hash45> Altreus: Do you mean this one>
[18:42:48] <hash45> ?
[18:42:53] <Altreus> right
[18:43:19] <Altreus> sweval: sub xx { my $var = $_[0]; $var = 12; } my $x = 10; xx($x); print $x
[18:43:20] <perlbot> Altreus: 10
[18:43:24] <Altreus> when i said 12 I meant 10 :D
[18:43:28] <Altreus> I got the outputs confused from earlier
[18:43:56] <hash45> Altreus: Which is an alias?
[18:44:00] <hash45> $_[0]?
[18:44:11] <Altreus> yes
[18:44:16] <Altreus> $var is ... just a variable
[18:44:23] <Altreus> but look!
[18:44:31] <hash45> $_[0] is a Scalar, right?
[18:44:38] <Altreus> sweval: sub xx { my $var = $_[0]; $$var = 12; } my $x = 10; xx(\$x); print $x
[18:44:39] <perlbot> Altreus: 12
[18:44:52] <hash45> Oh 
[18:44:56] <Altreus> yep, $ means scalar
[18:45:10] <hash45> $_[0] is a reference now
[18:45:14] <Altreus> That's right
[18:45:26] <Altreus> But in order to change the value in it, I had to use $$var to dereference it
[18:45:42] <hash45> I got it
[18:45:52] <Altreus> nice
[18:46:10] <hash45> It just doesn't seem that consistent
[18:46:34] <hash45> Because I can modify the argument by assigning to $_[n] directly
[18:46:51] <huf> yes, but that only works because the contents of @_ are aliases
[18:46:55] <huf> references work everywhere
[18:47:01] <huf> and they dont break as soon as you copy them around
[18:47:16] <Altreus> Aliases are rarely used and sometimes used by accident
[18:47:17] <huf> aliases are created in a few very specific spots normally
[18:47:52] <hash45> Altreus: Are there any recommended docs or blogs about aliases?
[18:47:55] <huf> i think we tend to pretend they dont exist except in for loops?
[18:48:57] *** Joins: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com)
[18:49:00] <Altreus> hash45: dunno, I just sort of go "oh yeah, I forgot" when I use them by accident, and forget about them the rest of the time
[18:59:12] <hash45> Altreus: I understand aliases as the argument list
[19:01:12] *** Joins: Su-Shee (~Susanne@p4ffc7740.dip0.t-ipconnect.de)
[19:03:08] *** Quits: Su-Shee_ (~Susanne@p4ffc725e.dip0.t-ipconnect.de) (Ping timeout: 272 seconds)
[19:03:21] <Altreus> we mostly use them in: s/x/y/ for @things;
[19:03:36] <Altreus> and it's kinda hidden there
[19:04:02] <Altreus> but you could do: sub fix { $_[0] =~ s/x/y/; } fix $_ for @things;
[19:04:50] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[19:06:33] <PlayerOne> Hmm...
[19:06:56] <PlayerOne> Why would: if (/$ENV{pattern}/) { print(STDERR $., ":", $-[0], ":", $_) } 
[19:07:04] <PlayerOne> not output empty lines?
[19:07:13] <PlayerOne> The pattern is '^$'
[19:08:07] <PlayerOne> This is the script: https://paste.ee/p/x9ssr#wtL2NTdEqWsbu8uNJaf2u2ISMp7WUaxT
[19:08:07] <Paperbot> Link title(s): [ Paste.ee - View paste x9ssr ]
[19:08:27] *** Joins: ufobat__ (~martin@dynamic-095-117-092-027.95.117.pool.telefonica.de)
[19:10:04] *** Quits: pj (~pj@ghettoforge/pj) (Ping timeout: 245 seconds)
[19:12:38] *** Quits: ufobat_ (~martin@dynamic-095-117-119-093.95.117.pool.telefonica.de) (Ping timeout: 272 seconds)
[19:13:24] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 245 seconds)
[19:15:43] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[19:16:02] <gordonfish> PlayerOne: Maybe the lines are actually empty, but have an EOL (e.g., \n)
[19:16:16] <gordonfish> s/are\b/aren't/
[19:17:01] <PlayerOne> They are just new lines without any data
[19:18:01] <gordonfish> I'm saying /^$/ wont match a line that looks like "\n"
[19:18:18] <PlayerOne> Understood, but how would you match it then?
[19:18:59] <gordonfish> Or wait, that should match, since $ match before the \n if there is one
[19:19:15] <PlayerOne> Yup
[19:19:17] *** Joins: garo (~garo@ptr-1pln5puxqxmejxq9kws.18120a2.ip6.access.telenet.be)
[19:21:36] *** Joins: rwbrambler (~Thunderbi@65.183.138.202)
[19:22:21] <RandalSchwartz> > I'm saying /^$/ wont match a line that looks like "\n"
[19:22:26] <RandalSchwartz> but yes it will.
[19:22:40] *** Joins: pj (~pj@ghettoforge/pj)
[19:22:42] <RandalSchwartz> $ is "end of line, or end of line past newline"
[19:22:44] <gordonfish> I'm trying to open your paste but paste.ee is timing out, could you paste it elsewhere (like https://l.perl.bot in the /topic)
[19:22:45] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[19:22:56] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[19:23:03] <RandalSchwartz> Oops… "before newline" not after.
[19:23:14] <RandalSchwartz> not enuugh cafffiene
[19:23:17] <PlayerOne> https://l.perl.bot/p/p6o8rj
[19:23:18] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[19:24:41] <gordonfish> You're sending the output to /dev/null, so you're not going to see anything..
[19:25:27] <huf> stop helping, this aint your day
[19:25:36] <PlayerOne> gordonfish print(STDERR
[19:25:37] <huf> they're printing to stderr
[19:25:45] <gordonfish> Oh bah
[19:25:48] <gordonfish> Too early
[19:26:05] <huf> without seeing the file, i dont think we can help
[19:26:13] <PlayerOne> No problem at all, dear gordonfish! Thank you, btw! ^^
[19:26:14] <huf> but maybe there are spaces?
[19:26:25] <PlayerOne> huf nope
[19:26:30] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 244 seconds)
[19:27:06] <gordonfish> PlayerOne: Please paste the contents of the file test2
[19:27:19] <PlayerOne> Wait a minute
[19:27:26] <PlayerOne> I found the issue :D  
[19:27:26] *** Joins: LuksNuke (~LuksNuke@94.242.245.63)
[19:27:27] <huf> winders newlines?
[19:27:50] <PlayerOne> For some reason, the freaking test file was overwritten removing its emoty lines O.o
[19:27:53] <gordonfish> (or a hex dump of it)
[19:27:55] <PlayerOne> 'm sory :D  
[19:27:57] <huf> :)
[19:28:02] <gordonfish> Oh
[19:28:03] <huf> the bug is in another castle
[19:28:10] <PlayerOne> Ahah
[19:28:34] <PlayerOne> Holy smokes...
[19:29:36] *** Quits: jplesnik_ (~jplesnik@nat-pool-brq-t.redhat.com) (Ping timeout: 244 seconds)
[19:32:13] <LeoNerd> Ovid's OO talk at the conference now: http://www.youtube.com/watch?v=FO5ift28RyE
[19:32:13] <Paperbot> YouTube video linked by LeoNerd: Rummaging in the clOOset - Curtis “Ovid” Poe - published by Conference in the Cloud! A Perl and Raku Conf
[19:32:14] <Paperbot> Link title(s): [ Rummaging in the clOOset - Curtis “Ovid” Poe - YouTube ]
[19:37:14] *** Joins: jetchisel (jetchisel@user/jetchisel)
[19:38:51] <hash45> What is the intention of "=>" to quote a bareword? Is it originally designed for bareword hash key only? 
[19:39:23] *** Joins: Guest40 (~Guest40@190.159.68.105)
[19:40:15] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[19:40:25] <gustaf> it's a "fat comma"
[19:40:37] <gustaf> it magically quotes the preceding bareword
[19:40:48] <gustaf> used to distinguish keys from values in hashes 
[19:41:07] <gustaf> https://squareperl.com/en/operator/fat-comma
[19:41:08] <Paperbot> Link title(s): [ Operator => (fat comma) in Perl ]
[19:41:10] <gustaf> bbl
[19:41:40] <hash45> gustaf: is it a good practice to use it in array?
[19:41:53] <hash45> Like this: [ name => 'abc']
[19:42:01] *** Joins: kylese (~kylese@p5483550e.dip0.t-ipconnect.de)
[19:42:31] <alh> Depends on the intent of your array, if it's really "a hash where keys might repeat", then sure, or if the values relate to each other
[19:42:59] <PlayerOne> Is it possible to output the current byte of the match? Like -b of grep?
[19:43:11] <PlayerOne> `tell` returns something weird 
[19:43:56] <ilmari> tell returns the seek position of the specified (or last read) filehandle
[19:43:58] <alh> pos if  using /g
[19:44:15] <ilmari> pos() tells you where the last m//g stopped
[19:44:57] *** Joins: thrig (~thrig@65.113.153.50)
[19:46:03] <PlayerOne> No /g is used
[19:46:21] <PlayerOne> The script: https://l.perl.bot/p/rl5o6s
[19:46:21] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[19:47:14] * GumbyPAN CPAN Upload: App-colsummary-0.055 by TULAMILI https://metacpan.org/release/TULAMILI/App-colsummary-0.055
[19:47:16] <PlayerOne> I'm trying to achieve the same output as grep's, but also with the match position on the line
[19:48:12] <huf> there's some variable, what's it called
[19:48:34] <huf> @- and @+?
[19:48:36] <PlayerOne> Which one?
[19:49:19] <PlayerOne> last match start and end
[19:49:31] <PlayerOne> This is per line
[19:49:57] *** Parts: Guest40 (~Guest40@190.159.68.105) ()
[19:50:17] <PlayerOne> $-[0] is the same as @-, it seems
[19:51:54] *** Quits: habamax (~habamax@user/habamax) (Ping timeout: 272 seconds)
[19:53:56] *** Quits: larkfisherman (~larkfishe@217.75.204.126) (Remote host closed the connection)
[19:54:26] <ilmari> no, one is a single element, the other is an array
[19:54:41] <ilmari> $-[0] is the first element of the array @-
[19:55:33] <PlayerOne> I see
[19:55:49] <zgu> if there's only one element in @- then ($-[0]) would be the same as @-
[19:56:32] <PlayerOne> $-[0], $+[0]
[19:57:15] <Altreus> hash45: to humans it means "These are related", yes
[19:57:17] <PlayerOne> The main problem is getting current byte offset
[19:57:33] <thrig> eval: @ani=qw(mlatu); [ scalar @ani, $ani[0] ]
[19:57:34] <perlbot> thrig: [1,"mlatu"]
[19:57:43] *** Joins: thunder (~thunder@user/thunder)
[19:57:46] <Altreus> hash45: whether that's using a real hash or going into an array is usually a development decision, not a human one
[19:58:43] <Yaakov> HELLO THRIG
[19:59:11] <PlayerOne> o.o
[20:00:08] *** Quits: metasintactic (~thunder@user/thunder) (Ping timeout: 272 seconds)
[20:00:16] *** Joins: horsepatat (~horsepata@80.89.78.117)
[20:00:30] *** Quits: hash45 (~hash@139.177.184.26) (Quit: Client closed)
[20:01:11] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:02:15] * GumbyPAN CPAN Upload: Webservice-OVH-0.44 by JEGADE https://metacpan.org/release/JEGADE/Webservice-OVH-0.44
[20:02:15] * GumbyPAN CPAN Upload: Webservice-OVH-0.43 by SFPAJEND https://metacpan.org/release/SFPAJEND/Webservice-OVH-0.43
[20:02:18] * GumbyPAN welcomes ALEXPAN - Alexander Panteleev to CPAN!
[20:04:34] <Altreus> if we used the thorn his name would be girth backwards
[20:06:27] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[20:06:43] <Yaakov> Altreus: Þ
[20:07:26] <Yaakov> Þrig
[20:08:53] <gordonfish> That'll do, Þrig. That'll do
[20:09:10] <Altreus> Þat'll do
[20:09:24] <PlayerOne> ÞoÞ
[20:09:49] <Yaakov> It's easier to type "prig", but you will all know what I really mean...
[20:09:53] <gordonfish> Þush
[20:10:19] <PlayerOne> Þ.P
[20:10:40] <simcop2387> Yaakov: hello! long time no see
[20:10:51] <Yaakov> Howdy, simcop2387!
[20:11:04] <Yaakov> Good to see you.
[20:11:12] <gordonfish> Is Yaakov one of the slavik warner bros.?
[20:11:42] <simcop2387> gordonfish: nah old soviet comedian, origin of the joke, "In soviet russia, ____ does ___ to you!"
[20:11:46] <Yaakov> Turns out, þ is part of this input locale, so easey peasey chicken sneezy.
[20:11:57] <simcop2387> https://en.wikipedia.org/wiki/Yakov_Smirnoff
[20:11:57] <gordonfish> (Along with Vakow and Dotowska)
[20:11:58] <Paperbot> Link title(s): [ Yakov Smirnoff - Wikipedia ]
[20:12:11] <gordonfish> simcop2387: Oh that one
[20:12:20] <simcop2387> Yaakov, yea, i'm back on the east coast now, after having been over in southern california for a number of years.
[20:12:21] <Yaakov> None of the above: Ya'akov != Yakov or Yako.
[20:12:34] <simcop2387> Yaakov: but it's more fun to joke :)
[20:12:56] <Yaakov> simcop2387: I hope this is considered good in your world. Some folks like the left, some the right.
[20:13:22] <simcop2387> i'm living in my brother's basement so i'm close to family.  the circumstances that lead me to it weren't good but the end result so far has been
[20:13:32] <gordonfish> Yaakov: Depends on the dance number
[20:13:39] <simcop2387> i've gotten to spend a lot more time with my niece and nephew (and now newest niece) along with having work again
[20:13:43] <Yaakov> simcop2387: Well, good then! 
[20:13:58] <Yaakov> I am retired, with two grandchildren.
[20:14:03] <Altreus> oh the Russian Reversal
[20:14:38] <simcop2387> Yaakov: nice, I think we looked you up a month or two ago and saw the photgraphy stuff looked like fun
[20:15:54] *** Quits: horsepatat (~horsepata@80.89.78.117) (Ping timeout: 252 seconds)
[20:16:10] <Yaakov> simcop2387: Yes, I am building up a protfolio of birds and landscapes so I can hawk merch to the birb and landscape fans.
[20:16:51] <PlayerOne> m// is the same as //?
[20:17:02] <Altreus> yes¹
[20:17:10] <simcop2387> PlayerOne: m/.../ is the same as /.../, // without anything in it is the defined-or operator.
[20:17:18] <PlayerOne> I see: https://perldoc.perl.org/perlop#m%2FPATTERN%2Fmsixpodualngc
[20:17:18] <Paperbot> Link title(s): [ perlop - Perl operators and precedence - Perldoc Browser ]
[20:17:31] <Altreus> except when it's the empty pattern and accidentally has magical behaviour!
[20:17:56] <PlayerOne> //?
[20:18:08] <PlayerOne> Err. ///?
[20:18:17] <simcop2387> yea $foo =~ // wouldn't be the defined-or operator.
[20:18:45] <PlayerOne> Has that a sense? -> =~ ///
[20:19:17] <simcop2387> that'll be a syntax error, you'd want to do /\// or m/\// or m|/| or m{/} or a number of other symbols that'll work
[20:20:13] <PlayerOne> I see
[20:21:42] <Altreus> or use s
[20:21:56] <PlayerOne> Does perl has a variable of the current byte being checked? I mean, the only one idea came so far. Run a loop for each char like /./ where increase a variable(byte count) and do other stuff.
[20:21:57] <simcop2387> ah yea that might be what he wanted
[20:21:59] <Altreus> s is always required if you want s, but m is optional in simple cases
[20:22:32] <PlayerOne> simcop2387 not really, just was asking if it has any sense without anything. It appears - not.
[20:22:36] <thrig> you would probably write a lex-like scanner (perldoc perlop) instead
[20:22:52] <PlayerOne> thrig like seek()?
[20:23:07] <thrig> no, seek would not be involved in a lex-like scanner
[20:23:15] <PlayerOne> I see
[20:23:36] <simcop2387> you might be thinking of pos() instead of seek().
[20:23:56] <PlayerOne> Interesting why perl didn't allow such functionality by default. Like an option -b or something which would increments its value each match or test internally
[20:24:04] <PlayerOne> This might help a lot :D
[20:24:16] <PlayerOne> simcop2387 pos() doesn't work without /g it seems
[20:24:55] <simcop2387> I think you can do it without /g by using \
[20:25:00] <simcop2387> I think you can do it without /g by using \G as the first anchor iirc
[20:26:04] <thrig> grep -bon  is roughly  print join ":", $., $o + $-[0], $1 while /(...)/g; $o = tell
[20:26:23] <simcop2387> nope i'm wrong, that needs /g too
[20:27:28] <Yaakov> HELLO THRIG
[20:29:08] <Yaakov> Woohoo. I got a nice shot of an eastern kingbird—first of the year.
[20:29:13] <simcop2387> nice
[20:30:01] <thrig> is it a real king, or a pretender, though?
[20:30:12] <Yaakov> It's always fun to get a new or first-of-the-year species.
[20:30:31] <Yaakov> Hey, thrig. Where have you been? I haven't seen you in years!
[20:30:52] <PlayerOne> WHAT THE HECk
[20:31:02] <PlayerOne> thrig how did you do that?!
[20:31:07] <PlayerOne> Insane...
[20:31:13] <thrig> by typing on a keyboard, that's how
[20:31:30] <PlayerOne> With what?!
[20:31:37] <simcop2387> a brane
[20:31:37] <thrig> my nose
[20:31:37] <Yaakov> thrig is well known for his typing, particularly on keyboards.
[20:31:48] <revhippie> it helps that he has 15 fingers.
[20:31:53] <Altreus> is it strong typing?
[20:32:06] <PlayerOne> <3  strong typing!
[20:32:07] <PlayerOne> FTW
[20:32:11] <Yaakov> Altreus: He goes through a keyboard every two weeks, so...
[20:32:37] <thrig> actually the keyboard on the 2009 macbook finally went bad, 'a' and 's' don't really work no more
[20:33:15] <PlayerOne> Have you tried low profile keyboards like G915?
[20:33:21] <Yaakov> thrig: How have you been?
[20:34:23] *** Joins: jabberwok (~wlindley@75.105.20.104)
[20:34:53] *** Joins: randir (~randir@95-25-113-192.broadband.corbina.ru)
[20:36:19] * GumbyPAN CPAN Upload: Minion-10.22 by SRI https://metacpan.org/release/SRI/Minion-10.22
[20:36:21] <Altreus> PlayerOne: no but they're so hard to find :)
[20:36:30] <Altreus> yes it was a pun
[20:36:33] <PlayerOne> So, the $o = tell sets the current match byte offeset and then $-[0] sums it with the current line position?
[20:37:09] <PlayerOne> Altreus indeed... it seems their keycaps are also very rare
[20:37:22] <thrig> tell is the end-of-the-current-line, or the start of the next
[20:37:54] *** Quits: feriman (~feriman@188.163.113.127) (Ping timeout: 252 seconds)
[20:38:11] <PlayerOne> In bytes of the file read?
[20:38:29] <PlayerOne> Ah neverming. I'll check now.
[20:39:19] <PlayerOne> Altreus iirc its Kailh Choc (Brown, Red or White)
[20:40:36] <greyrat> How do I use interpolation instead of the dummy variable `b` in
[20:40:39] <greyrat> $b = scalar @a;
[20:40:39] <greyrat> print "$#a, $b\n";
[20:41:10] <PlayerOne> > The return value of tell for the standard streams like the STDIN depends on the operating system: it may return -1 or something else.
[20:41:25] <PlayerOne> Holy smokes. This sounds unreliable for STDIN.
[20:42:09] <PlayerOne> greycat, have you tried (scalar $@)\n ...?
[20:42:28] <PlayerOne> Err. (scalar @a) *
[20:42:55] <revhippie> greyrat: you can impose scalar context with the concatenation operator -- print "$#a, " . @a . "\n";
[20:43:12] <revhippie> also:
[20:43:15] <revhippie> perlbot: $a
[20:43:15] <perlbot> revhippie: Don't use $a or $b as variable names. Not even in examples. They are not normal variables and will not behave like normal variables. The only place they are cromulent is in a sort or List::Util block. Please see https://metacpan.org/pod/Perl::Critic::Policy::Freenode::DollarAB ; consider using $x, $y instead. | https://perldoc.perl.org/variables/$a
[20:45:20] <PlayerOne> revhippie say what?!
[20:45:33] <PlayerOne> I didn't really get how Freenode is related to Perl's $a and $b
[20:46:29] <ilmari> PlayerOne: the policy is named after the freenode #perl IRC community
[20:46:45] <PlayerOne> And what does tha mean?
[20:46:50] <PlayerOne> that*
[20:46:54] <ilmari> perlbot: $a =~ s/Freenode/Community/
[20:46:54] <perlbot> ilmari: Stored $a as Don't use $a or $b as variable names. Not even in examples. They are not normal variables and will not behave like normal variables. The only place they are cromulent is in a sort or List::Util block. Please see https://metacpan.org/pod/Perl::Critic::Policy::Community::DollarAB ; consider using $x, $y instead. | https://perldoc.perl.org/variables/$a
[20:47:15] <PlayerOne> eval $a
[20:47:21] <PlayerOne> eval: $a
[20:47:23] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:47:23] <perlbot> PlayerOne: No output.
[20:47:29] <simcop2387> good to see the s/// on factoids gets used
[20:47:32] <ilmari> PlayerOne: it means that the people who used to be on freenode #perl created a set of perl::critic policies that encode their recommendations
[20:47:33] <PlayerOne> eval: print $a
[20:47:35] <perlbot> PlayerOne: 1
[20:48:02] <ilmari> PlayerOne: see the two links perlbot gave
[20:48:07] <simcop2387> Perl::Critic is what's called a linter
[20:48:37] <PlayerOne> I've already checked the first link and its description is quite very tiny
[20:49:11] *** Joins: Medlir (Medlir@c-68-55-218-49.hsd1.mi.comcast.net)
[20:49:21] <PlayerOne> Oh I see.
[20:49:24] <PlayerOne> > The special variables $a and $b are reserved for sort() and similar functions which assign to them to iterate over pairs of values.
[20:49:35] <PlayerOne> > These are global variables, and declaring them as lexical variables with my to use them outside this context can break usage of these functions. Use different names for your variables.
[20:50:02] <PlayerOne> Why not use some variables like $% or $, ?
[20:50:29] <PlayerOne> Such already exist :D  
[20:51:38] <simcop2387> i'm just upset that %% and @@ aren't variables
[20:51:49] <simcop2387> eval: my @@ = (1..10);
[20:51:51] <perlbot> simcop2387: ERROR: Can't use global @@ in "my" at (IRC) line 1, near "my @@ " 
[20:51:56] <simcop2387> oh that one is?
[20:52:10] *** Quits: tcohen (~tcohen@192.141.149.51) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:52:21] <LeoNerd> It already is a variable. You don't need to `my` it
[20:52:27] <simcop2387> ah not defined as one in perlvar, just probably reserved
[20:52:31] <LeoNerd> eval: @@ = (1..10); print $@[4]
[20:52:33] <perlbot> LeoNerd: 5
[20:53:33] <LeoNerd> Every special global variable that is implemented by a GV (i.e. all of them) by _necessity_ has all of the scalar, array, hash, and code slots already present
[20:54:19] <LeoNerd> That's how Altreus implemented the $_{name} feature of ... was it Opt::Ionally or something? I forget the name
[20:54:30] <LeoNerd> %_ exists, because $_ and @_ do
[20:55:07] <vague> Opt::Imistic ?
[20:55:22] <zgu> Opt::Imus::Prime?
[20:56:41] <Altreus> :)
[20:56:46] <Altreus> vague knows
[20:56:55] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 244 seconds)
[20:57:01] <thrig> knows what?
[20:57:06] <Altreus> the truth
[20:57:09] <Altreus> ish
[20:57:14] <thrig> that sounds pretty vague
[20:57:25] <vague> I am what I am
[20:58:43] *** Joins: Vicissitude (~Vicissitu@user/vicissitude)
[20:58:45] <vague> I will also put punctuation where I want. So I read 'that sounds pretty vague' as 'that sounds, pretty vague' and thank you, thrig 
[20:59:13] <Altreus> that sounds petty, vague
[20:59:19] *** Joins: Pali (~pali@user/pali)
[20:59:27] <vague> Tom Petty?
[20:59:42] <Vicissitude> deceased
[20:59:46] <Altreus> Johnny "Petty" Cash?
[20:59:47] <revhippie> he don't come around here, no more
[21:01:56] <Yaakov> HELLO LEONERD
[21:03:20] *** Parts: art1 (~romeyke@p200300ccdf0bb4005d168f1bf218701b.dip0.t-ipconnect.de) ()
[21:04:33] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[21:06:59] <LeoNerd> HELLO
[21:07:53] *** eseyman_ is now known as eseyman
[21:08:28] <Yaakov> LeoNerd: How is things?
[21:08:49] <LeoNerd> Good. Finishing off my slides for my talk in... oh about 2½ hours time
[21:09:33] <Yaakov> LeoNerd: far too organized. You should be finishing them at the lectern.
[21:10:21] *** Joins: gryphn (~gryphon@191.96.106.193)
[21:10:30] *** Joins: ingy (~ingy@104.236.228.44)
[21:13:20] <PlayerOne> https://i.imgur.com/rfzZDTR.png
[21:13:22] <PlayerOne> Noooooo
[21:13:54] <Altreus> LeoNerd: what are you taaaaaaaaaaaaaaaaaalking abaaaaaaaaaaaaaaht
[21:14:01] <Altreus> this reference may not hit home
[21:14:05] <Altreus> The question still applies
[21:14:55] *** Joins: monkey_ (~user@190.104.116.134)
[21:15:56] *** Joins: _73` (~user@pool-96-252-123-136.bstnma.fios.verizon.net)
[21:17:50] *** Joins: tcohen (~tcohen@192.141.149.81)
[21:23:33] *** Quits: _73` (~user@pool-96-252-123-136.bstnma.fios.verizon.net) (Ping timeout: 252 seconds)
[21:23:46] *** Joins: _73``` (~user@pool-96-252-123-136.bstnma.fios.verizon.net)
[21:24:29] *** Quits: kst (~user@cpe-70-95-182-43.san.res.rr.com) (Remote host closed the connection)
[21:25:40] <PlayerOne> Check this out: https://l.perl.bot/p/j1q5mj
[21:25:41] <Paperbot> Link title(s): [ Perlbot Pastebin ]
[21:26:01] <PlayerOne> Outputs Line:Position:Byte:Match
[21:26:56] <PlayerOne> Thank you all very much!
[21:27:00] <PlayerOne> Really
[21:27:08] *** Parts: _73``` (~user@pool-96-252-123-136.bstnma.fios.verizon.net) ()
[21:27:53] <thrig> -ple and remove the "\n" stuff
[21:28:21] <Altreus> looks like it prints 5 things to me
[21:28:31] <Altreus> oh position is 2
[21:29:01] <thrig> off by ones are traditional in computing
[21:29:28] <Yaakov> thrig: A tradition I uphold with great vigor.
[21:29:40] *** Joins: magla (~gelignite@55d4f5e7.access.ecotel.net)
[21:29:46] <PlayerOne> thrig ha!
[21:29:52] <PlayerOne> Indeed, but why?
[21:30:06] <PlayerOne> It says: -l[octal]         enable line ending processing, specifies line terminator
[21:36:23] <Altreus> just use say
[21:36:40] <PlayerOne> -e comes right after -l\
[21:37:05] <Altreus> yeah but you've still got print STDERR "\n"
[21:37:17] <Altreus> you might as well say STDERR on the previous line and use -E
[21:37:38] *** Joins: s0l__ (mars@80-108-49-21.cable.dynamic.surfer.at)
[21:39:14] *** Quits: sol_ (mars@80-108-49-21.cable.dynamic.surfer.at) (Ping timeout: 245 seconds)
[21:39:14] *** s0l__ is now known as sol_
[21:41:14] <PlayerOne> Is it possible to disable defualt stdout behavior?
[21:41:21] <PlayerOne> So to remove > /dev/null?
[21:42:44] <PlayerOne> I mean, we can open my $saveout, ">&STDOUT";
[21:42:44] <PlayerOne>     open STDOUT, '>', File::Spec->devnull();
[21:42:47] <PlayerOne> But...
[21:43:03] <Grinnz> lots of things are possible, but *something* has to tell STDOUT you dont want to use it
[21:43:11] <thrig> x=... perl -nle 'print join ":",$.,$o+$-[0],$1 while /($ENV{x})/g;$o=tell'
[21:43:27] <Grinnz> what are you even discarding? i don't see antyhing printing to STDOUT in your script
[21:43:38] <Grinnz> oh, the -p
[21:43:42] <Grinnz> use -n instead, yeah
[21:43:53] <PlayerOne> Grinnz for some reason it outputs each line
[21:43:54] <Grinnz> -n is just -p without printing
[21:44:02] <PlayerOne> SAY WHAT
[21:44:09] <Grinnz> read perldoc perlrun :)
[21:44:24] <PlayerOne> I mean, what's purpose of printing in -p then?
[21:44:35] <gryphn> Extra printing.
[21:44:35] <Grinnz> when using perl as a filter input -> output
[21:44:39] <PlayerOne> :D
[21:44:40] <Grinnz> -p is very useful
[21:44:53] <PlayerOne> I see. So -p prints every match?
[21:45:00] <Grinnz> it prints every line
[21:45:05] <ilmari> it prints the value of $_
[21:45:07] <Grinnz> specifically, $_, with any modifications you've done to it
[21:45:22] <PlayerOne> Now that makes sense
[21:45:33] <ilmari> typically used with s/// and other things that mutate $_
[21:45:34] <PlayerOne> $_ = "";
[21:45:39] <PlayerOne> ...void...
[21:45:39] <thrig> (echo foo;echo bar) | perl -ple 's/[aeiou]/y/g'
[21:45:59] <ilmari> basheval: (echo foo;echo bar) | perl -ple 's/[aeiou]/y/g'
[21:46:00] <perlbot> ilmari: fyy␤byr␤
[21:46:12] <PlayerOne> oO
[21:46:47] <thrig> (echo foo;echo bar) | perl -nle 's/[aeiou]/y/g;print'
[21:47:37] <PlayerOne> Purely magnificent...
[21:47:44] <PlayerOne> Thank you very much, People!!
[21:47:59] <PlayerOne> You are awesome, for sure
[21:53:28] <Yaakov> ITYM: "Perly magnificent"
[21:55:33] *** choroba is now known as choroba_
[21:55:39] *** Quits: Vicissitude (~Vicissitu@user/vicissitude) (Quit: there is sun. i must hide from it.)
[21:55:57] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[21:56:17] *** Quits: choroba_ (~E.Choroba@89-101-243-80.cust.centrio.cz) (Quit: Leaving)
[21:58:40] *** Joins: deadmarshal (~deadmarsh@95.38.113.167)
[22:03:59] <Altreus> PlayerOne: Why have perl write to STDERR and then have to worry about STDOUT, when you can just let perl default to STDOUT and have the shell put it on STDERR?
[22:07:28] <PlayerOne> Altreus because of -p option which is now replaced with -n
[22:07:57] <PlayerOne> -p prints to STDOUT by default (each $_ ~ line)
[22:20:24] *** Quits: Deesl (~bsdboy@redhat/psirt/Deesl) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:20:37] <Altreus> yep, but you could also have done $_ = join ...
[22:20:55] <Altreus> and with -l the \n is still taken care of for you!
[22:21:10] *** Joins: Gin (~Gin@172.104.48.83)
[22:21:17] <Yaakov> Wow, I can't understand the oneliners I used to write. I really need to refresh my brane.
[22:21:22] *** Quits: LuksNuke (~LuksNuke@94.242.245.63) (Ping timeout: 272 seconds)
[22:21:29] * GumbyPAN CPAN Upload: App-colsummary-0.056 by TULAMILI https://metacpan.org/release/TULAMILI/App-colsummary-0.056
[22:21:52] <Altreus> isn't that a feature of oneliners?
[22:22:24] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 252 seconds)
[22:22:43] *** Joins: kst (~user@cpe-70-95-182-43.san.res.rr.com)
[22:22:46] <genio> I'm apparently able to see into the future. I told y'all "next thing you know, Yaakov will be in here"
[22:23:35] *** Quits: ufobat__ (~martin@dynamic-095-117-092-027.95.117.pool.telefonica.de) (Ping timeout: 252 seconds)
[22:24:37] <genio> Yaakov: Several people who hadn't been on IRC in a while showed up shortly after the move to libera.chat and I jokingly said that ^^ Now here you are. Hope things are going well
[22:25:01] *** Joins: monkey_ (~user@190.104.116.134)
[22:25:44] <gordonfish> genio: I'd guess that someone had lit a fire under them that got them stirring
[22:26:16] *** Joins: habamax (~habamax@user/habamax)
[22:26:21] <Grinnz> Yaakov: <3
[22:26:22] <simcop2387> genio: now we just need: fook, oblio, beth, and kitchen i think
[22:26:35] <simcop2387> oblio was perlbot before there was perlbot
[22:26:36] <perlbot> simcop2387: Stored oblio was perlbot before there was
[22:26:49] <simcop2387> perlbot: revisions oblio
[22:26:50] <perlbot> simcop2387: [15627 by simcop2387: oblio was perlbot before there was]  [4617 by perlbot: oblio is no more! long live!]
[22:26:51] *** Joins: ufobat__ (~martin@dynamic-095-117-092-027.95.117.pool.telefonica.de)
[22:26:58] <simcop2387> eh good enough
[22:27:01] <jdv> is it just conf now time that the old crowd emerges to say hi and disappear again?
[22:27:13] <simcop2387> jdv: that might be part of it
[22:29:54] <Altreus> guessing LeoNerd is on in a minute?
[22:30:34] <simcop2387> wish i could watch live, but can't right now
[22:30:55] <Altreus> Guessing it's this conference in the cloud channel
[22:31:14] <Altreus> There's not a parallel competitor going on is there? :)
[22:31:53] <Gin> Hi fellas! I would like to know your insights about how to learn from an open source project.
[22:32:10] <Altreus> Create it, popularise it
[22:32:14] <Altreus> You'll learn a LOT
[22:32:23] <Altreus> mostly about how nice people are!
[22:32:41] <Gin> Altreus: But now I am not capable of creating some tools
[22:33:14] <LeoNerd> Altreus: +1 hour from now
[22:33:18] <thrig> level up INT then complain at the dungeon master when ...
[22:33:20] <LeoNerd> At least I hope so - I'm about to have my dinner
[22:33:28] <Altreus> nobody's streaming at all on this channel
[22:33:37] <Altreus> Surely it would be going by now
[22:33:45] <LeoNerd> https://tprc2021cic.sched.com/event/jLxi/perls-amazing-time-machine  -- will be the link
[22:33:46] <Gin> I've learnt C language for 3 years, and attempt to learn from some nice source codes like a little bit of kernel and nginx
[22:33:46] <Paperbot> Link title(s): [ The Perl and Raku Conference (In the Cloud): Perl's Amazing Time Machine ]
[22:33:55] <Altreus> Gin: ah! Then do you use a tool?
[22:34:01] <Altreus> One you would like to help with?
[22:34:22] <Altreus> that is quite a link for it to be on the wrong machine
[22:34:23] <Gin> I am making an effort to find a way to improve myself.
[22:34:40] <Gin> I haven't embarked on programming until college.
[22:35:03] <Gin> But now I am very eager to learn how this intriguing open source world works.
[22:35:20] <Altreus> awesome
[22:35:25] <Altreus> um :D
[22:35:28] <Gin> Altreus: Now I have embarked on Perl
[22:35:55] <Altreus> Various people here have projects that could do with assistance but I don't know how one would learn from them
[22:35:57] <Gin> I have used some tools like Shadowsocks, OpenResty and so on.
[22:36:31] <Gin> I believe I can make some, though maybe trivial, contributions.
[22:36:31] * GumbyPAN CPAN Upload: App-expandtab-0.010 by TULAMILI https://metacpan.org/release/TULAMILI/App-expandtab-0.010
[22:36:41] <Gin> And I would like to learn how to develop a tool
[22:36:43] *** Quits: tcohen (~tcohen@192.141.149.81) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:36:59] <Gin> How to design the architecture, how to come up with an idea and how to implement it all the way up.
[22:37:12] <PlayerOne> Gin I'd recommend: https://www.amazon.com/Programming-Language-2nd-Brian-Kernighan/dp/0131103628
[22:37:14] <Paperbot> Link title(s): [ Amazon.com: C Programming Language, 2nd Edition (8601410794231): Brian W. Kernighan, Dennis M. Ri... ]
[22:37:40] <Altreus> I'm very much hoping to be home by 8
[22:37:50] <Altreus> but I am being held prisoner!
[22:38:08] <Altreus> I mean I could walk out of here but I wouldn't sully myself
[22:38:16] <Gin> PlayerOne: Thanks first, but I have learnt enough fundamentals now.
[22:38:35] <Gin> But I find myself unfamiliar about how to develop something.
[22:38:57] <PlayerOne> What do you mean?
[22:39:09] *** Joins: tcohen (~tcohen@192.141.149.60)
[22:39:21] <Gin> On github, when I dive into a project, they are just so complicated, from compilation to the core implementations.
[22:39:55] <Gin> I cannot even understand how the authors decide the file hierarchy
[22:40:09] <Gin> It just seems overwhelming to me.
[22:40:23] <Altreus> Such things are overwhelming because there's so much of it :)
[22:40:34] <Altreus> It's OK: most of us don't know either
[22:40:49] <Altreus> Personally I get various tools to do it for me - mostly Dist::Zilla
[22:41:19] <PlayerOne> Like some wise person said: Do not just learn programming language, but try developing with something you really need with reading lessons and articles.
[22:41:28] <Gin> Altreus: Do you mean you attempt to reap as many tools you need as possible?
[22:41:40] <Grinnz> Gin: convention is for modules to be in lib/, tests in t/, scripts in script/ or bin/
[22:41:46] <Grinnz> everything else is up to the author
[22:41:58] <PlayerOne> Gin find a target and go to it. Do you want to develop something particular?
[22:42:12] <Grinnz> Gin: this is just perl convention of course
[22:42:23] <Gin> PlayerOne: Sadly I haven't found one yet.
[22:42:40] <PlayerOne> Assume a progrmaming language learning an Enigma cracking. Without a target, it may run relatively unfinitely.
[22:43:25] <PlayerOne> Gin then find one and start from it. Do you like somethin related? Like games, music, kernel, drivers, graphics etc.?
[22:43:28] <Gin> PlayerOne: Do you mean learning programming is like cracking Enigma machine
[22:43:37] <Gin> kernel is what I like
[22:43:57] <Gin> Recently I am quite interested in nginx.
[22:44:03] <PlayerOne> What do you like in Kernel?
[22:44:13] <Gin> I am curious.
[22:44:22] <PlayerOne> Nginx as a web development or its internals ?
[22:44:31] <Gin> internals
[22:44:54] <Gin> Its architecture is so attractive to me.
[22:44:58] <PlayerOne> Then #nginx (also Freenode.org) they might help you! 
[22:45:01] <PlayerOne> Also: https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
[22:45:01] <Paperbot> Link title(s): [ Pitfalls and Common Mistakes | NGINX ]
[22:45:13] <PlayerOne> Indeed, nginx is a great thingy!
[22:45:18] <Gin> Haha
[22:45:34] <PlayerOne> Not great, but purely awesome ^^
[22:45:59] <Gin> PlayerOne: What projects do you think are great?
[22:46:41] <Gin> I spent a lot of time purely learning nginx, but I still cannot practice programming skills.
[22:46:50] <Yaakov> Perl is the great progenitor and quite great.
[22:47:07] <Gin> Yaakov: Yep! I have embarked on Perl now.
[22:47:08] <PlayerOne> Gin, one can't suggest actually without knowing another, their needs, interests and desires etc.
[22:47:41] <PlayerOne> So, I'm sorry, but I can't really suggest because I may damage your actual goal
[22:47:44] <Gin> PlayerOne: Never mind. I just find insights from other people interesting
[22:48:28] <Gin> Isn't it perfect to know what other people think?
[22:48:29] <PlayerOne> That's a spirit! If you like C, you might like embedded devices like PIC or Arduino etc.
[22:48:50] <PlayerOne> If you want more, go C++ or C#.
[22:49:01] <PlayerOne> Both are magnificent
[22:49:06] <Gin> I am not that fond of embedded system.
[22:49:16] <Gin> But I will explore more communities
[22:49:36] <Altreus> Gin: yeah, but also I mean that Dist::Zilla does so much already you don't really need another
[22:49:43] <PlayerOne> C nowadays is usually used in embeddings
[22:49:55] <Altreus> I mean you do, but it takes a lot of difficulty away
[22:50:06] <Gin> Altreus: What is Dist:Zilla?
[22:50:11] <Gin> I should Google it.
[22:50:14] *** Quits: tcohen (~tcohen@192.141.149.60) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:50:30] <Altreus> Gin: It handles all those things you mentioned like file structure and things that can be automated
[22:50:32] <Altreus> releases
[22:50:36] <PlayerOne> Looks like a FileZilla + CloneZilla + GodZilla :D
[22:50:40] <ology> Gin: No. Use https://metacpan.org/
[22:50:41] <Paperbot> Link title(s): [ Search the CPAN - metacpan.org ]
[22:51:09] <PlayerOne> > MetaCPAN is an open source search engine for the Comprehensive Perl Archive Network 
[22:51:54] <Altreus> google seems to be returning correct perl answers these days
[22:52:04] <ology> cool
[22:52:28] <ology> I often google for site:metacpan.org foo
[22:52:29] <Altreus> or at least answers from stackoverflow and not matt's script archive
[22:52:30] <PlayerOne> Gin so... all in all. Without an actual project. Leraning languages and stuff may result in quite nonsense. Consder finding one you really like and go with it using a more appropriate tool/language found online in top lists, for examle.
[22:53:19] <PlayerOne> Who's Matt?
[22:53:29] <thrig> MATT DAEMON
[22:53:54] <gordonfish> JSON bind?
[22:54:13] <ology> perlbot, Matt's script archive
[22:54:13] <perlbot> ology: A central archive for all bad things Perl. Go here to learn what not to do with Perl. Dozens and dozens of scripts that are highly volatile, easily broken, and generally not to be used.
[22:54:23] <Gin> Altreus: Do you mean Dist::Zilla is the tool they use when developing a new project?
[22:54:38] <Gin> Or do you just mean it is a tool for Perl project?
[22:54:46] <ology> s/they/one can/
[22:55:10] *** Joins: tcohen (~tcohen@192.141.149.90)
[22:55:23] <PlayerOne> thrig https://i.imgur.com/jcxv4pB.jpg
[22:55:37] <gordonfish> MSA is easily one of the worse parts of the original web
[22:56:08] <Altreus> Gin: "they" is a lot of people but I like it a lot (it has a lot of plugins so you can do a lot of things!)
[22:56:33] <Gin> Altreus: What are the plugins mainly for?
[22:57:18] <Altreus> Well like you say, starting new projects is one
[22:57:39] <Altreus> They handle files that CPAN needs but development doesn't (like MANIFEST)
[22:57:57] <Altreus> They can release your module and work with your git repo all at once
[22:58:11] <Altreus> Then there are ones designed for frameworks so you can work with those
[22:58:31] <Altreus> Some of them generate documentation!
[22:58:50] <Gin> Great
[22:59:04] *** Quits: tcohen (~tcohen@192.141.149.90) (Client Quit)
[22:59:46] <PlayerOne> Gin oh. Try fractoring RSA260 :D  https://en.wikipedia.org/wiki/RSA_numbers#RSA-260
[22:59:46] <Paperbot> Link title(s): [ RSA numbers - Wikipedia ]
[23:00:27] <PlayerOne> I mean, you see. Projects may really differ, so..
[23:00:28] <Gin> PlayerOne: Can you share how you found your goal?
[23:00:44] <Gin> I got your point :-)
[23:00:56] *** Joins: tcohen (~tcohen@192.141.149.54)
[23:01:03] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[23:01:10] <PlayerOne> Did anyone here find their goal, yet?
[23:01:53] <PlayerOne> What do you mean by goal?
[23:02:03] <Gin> Your interested field
[23:02:23] <Gin> How you learn to achieve something, like tools, features and so on
[23:03:27] <Gin> Altreus: Do you mind sharing your insights here?
[23:03:57] <Altreus> hihi
[23:04:12] <Altreus> er I don't think I've had the privilege of actually writing code I'm interested in
[23:04:23] <PlayerOne> Of course, like any other out there. Currently, graspin some Perl because projects here require it and it's purely amazing!
[23:04:53] <Altreus> Gin: I've been writing API::Discord for Raku when I have spare time to work on code for myself
[23:05:08] <Altreus> I don't really use Perl for personal projects any more
[23:05:09] <Gin> What do you do for living?
[23:05:13] <Gin> May I ask
[23:05:20] <Altreus> Perl :D
[23:05:25] <Gin> Wow
[23:05:32] <Altreus> Mostly Catalyst (web framework)
[23:05:36] <PlayerOne> There are multiple projects including personal which should be done. And I hope, I'll make them as soon as possible ^^
[23:05:52] <Gin> Emm, what are your personal projects like?
[23:06:03] <Altreus> sparse and on pause :D
[23:06:28] <Gin> PlayerOne: I am doing a project now too. I am working for intel in college
[23:06:56] <Gin> Specifically a protocol-stack for 5G emulator
[23:07:19] <Gin> But the project is way far from a good one.
[23:07:23] <PlayerOne> There's some project related to 802.11 vulnerability. Another to game development. Another to music producing. Another to server management (cert generation, cloud configuration etc.)
[23:07:31] <PlayerOne> There are... bunch...
[23:07:49] <PlayerOne> I'm trying to accomplish them ^^
[23:08:15] <PlayerOne> When some free time appear of course...
[23:08:41] <Altreus> oh yeah I have a Lua project too
[23:08:48] <Gin> Lua!
[23:09:01] <Gin> Wow that is something I quite interested in.
[23:09:03] <PlayerOne> Oh. I recall developing Lua while using AwesomeWM.
[23:09:14] <Gin> But I haven't found a scene for it.
[23:09:18] <PlayerOne> Also, Wireshark uses Lua.
[23:09:33] *** Quits: seand (~seand@69.54.136.33) (Remote host closed the connection)
[23:09:41] <Gin> I originally intended to learn Perl to get a skill in text processing.
[23:10:00] * PlayerOne handshakes Gin
[23:10:09] <Altreus> I'm writing a game using the Löve framework
[23:10:18] <PlayerOne> Say what/!
[23:10:24] <Gin> Haha
[23:11:08] <PlayerOne> Nice! I started with C++ and SDL2
[23:11:11] <fuzzix> love2d is great. I keep thinking I need to make something like it based on Perl SDL ... but I lack tuits and, more importantly, knowledge.
[23:11:27] <PlayerOne> fuzzix Check out LazyFoo's tuts
[23:11:29] <Altreus> It's a simple game but I wanted to try dev
[23:11:31] <Gin> PlayerOne: How do you find interesting IRC channels?
[23:11:39] <PlayerOne> https://lazyfoo.net/tutorials/SDL/
[23:11:39] <Paperbot> Link title(s): [ Lazy Foo' Productions - Beginning Game Programming v2.0 ]
[23:11:41] <Altreus> PlayerOne: well I misread that!
[23:11:54] <PlayerOne> Gin depends on People in them ^^
[23:12:14] <PlayerOne> fuzzix posted above
[23:12:18] <fuzzix> Then I think "Meh, I'll just use love2d and middleclass"
[23:12:25] <Gin> All I got is Perl IRC channel now
[23:12:53] <fuzzix> And then I have no good game ideas, or tuits, so ...
[23:13:18] <Altreus> yeah, tuits are in short supply
[23:13:20] <fuzzix> PlayerOne: Not tuts, tuits. They're round.
[23:13:29] <Altreus> I'm thinking I'll probably get around to it by turning it into a stream
[23:13:30] <PlayerOne> Game `Into_the_Breach` is written on SDL2, i.e.
[23:13:45] <Altreus> That looked good but I didn't play it
[23:14:07] <Adura> You didn't grapple the leaper?
[23:14:27] <Gin> Altreus: I remember you are help prisoner now?
[23:14:35] <Gin> Literally a prisoner?
[23:14:47] <Altreus> Gin: no, we just only brought one car to the office
[23:14:50] <Altreus> So I can't leave!
[23:14:52] <Gin> Or just too bored at work:-)
[23:15:11] <Altreus> ah, it's time to go!
[23:15:13] <Altreus> Later
[23:15:15] <Altreus> o/
[23:15:21] <PlayerOne> 92% positive Steam reviews, so. https://steamdb.info/app/590380/
[23:15:22] <Paperbot> Link title(s): [ Into the Breach · AppID: 590380 · SteamDB ]
[23:15:31] <PlayerOne> Stay safe, dear Altreus ^^
[23:15:42] *** Joins: Deesl (~bsdboy@redhat/psirt/Deesl)
[23:16:03] *** Joins: metasintactic (~thunder@185.163.110.74)
[23:16:05] *** Quits: metasintactic (~thunder@185.163.110.74) (Changing host)
[23:16:05] *** Joins: metasintactic (~thunder@user/thunder)
[23:16:28] <PlayerOne> Gin you might also like Steam Development or even Valve company. They accept job requests: https://www.valvesoftware.com/en/
[23:16:29] <Paperbot> Link title(s): [ Valve Corporation ]
[23:16:34] * GumbyPAN CPAN Upload: App-perlimports-0.000009 by OALDERS https://metacpan.org/release/OALDERS/App-perlimports-0.000009
[23:16:42] <PlayerOne> Related: https://partner.steamgames.com/
[23:16:43] <Paperbot> Link title(s): [ Steamworks ]
[23:16:46] <Gin> Haha
[23:16:52] <PlayerOne> Anyways. I'm sorry, for somet off-topic ^^
[23:16:59] <Gin> PlayerOne: Where do you live in?
[23:17:05] <PlayerOne> I just love Valve and Steam ^^
[23:17:05] <Gin> Never mind.
[23:17:11] <Gin> Nice thoughts
[23:17:32] *** Joins: Shaeto (~Shaeto@94.25.234.141)
[23:17:48] <PlayerOne> Gin, I'm sorry, but I'd like to not share that. I don't really like the country I'm in and I'll try to leave it.
[23:18:07] <Gin> Sorry for asking your privacy
[23:18:19] <Gin> My bad
[23:18:27] <PlayerOne> No problem at all. Oh dear. We are all on the same tiny planet in this Space, huh!
[23:18:30] <pragma-> I am starting to see more and more code using the experimental signatures pragma. Is it starting to stablize now?
[23:18:51] <Grinnz> pragma-: sort of. just not officially
[23:18:51] <PlayerOne> https://www.youtube.com/watch?v=ynbEvYb1FiY 
[23:18:51] <Paperbot> YouTube video linked by PlayerOne: GodWave Rises - published by Volkor X - Topic
[23:18:52] <Paperbot> Link title(s): [ GodWave Rises - YouTube ]
[23:19:00] *** Quits: thunder (~thunder@user/thunder) (Ping timeout: 244 seconds)
[23:19:16] <choroba> they still lack named parameters :-(
[23:19:40] <Gin> PlayerOne: I am just so eager to find a way to make something concrete. I mean, living on this planet sometimes feels so lonely and desperate.
[23:20:13] <Gin> Not being able to get in touch with interesting people just makes me feel like a walking dead.
[23:20:18] <Adura> Perhaps it's not apparent, but unless you apply for a cloak you can determine where people are connecting from.
[23:20:53] <PlayerOne> Haha! Why? The life is so freaking magnificent oh dear! So much to investigate! So much to experience! Oh dear...
[23:20:54] <Adura> Then again, PlayerOne may be using a proxy.
[23:21:17] <Gin> Adura: Why is that?
[23:21:17] <PlayerOne> Adura proxied here ^^
[23:21:35] * GumbyPAN CPAN Upload: Bitcoin-Crypto-0.997_01 by BRTASTIC https://metacpan.org/release/BRTASTIC/Bitcoin-Crypto-0.997_01
[23:21:38] <Adura> Gin, how the network is set up.
[23:21:49] <Gin> Emm, firewalls?
[23:21:59] <Adura> No... just the IRCd.
[23:22:04] <PlayerOne> Adura it should be some Russian proxy right now
[23:22:16] <Adura> PlayerOne, that it is.
[23:22:26] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 268 seconds)
[23:22:33] <Gin> So how the author of nginx came up with that idea?
[23:22:51] <PlayerOne> I mean, is there a reason for a cloak? It doesn't really hide the stuff.
[23:23:12] <Gin> What is a cloak?
[23:23:18] <PlayerOne> Although, thank you for mentioning, Adura ^^
[23:23:27] <Gin> PlayerOne: Mind explaining a little bit?
[23:23:30] <Adura> PlayerOne, I guess it's not a foolproof means of hiding your IP, but I enjoy it.
[23:23:54] <Adura> /whois Gin
[23:23:56] <PlayerOne> Gin, some info https://freenode.net/kb/answer/cloaks
[23:23:56] <Paperbot> Link title(s): [ User and Project Cloaks - freenode ]
[23:24:28] <Gin> Does a cloak hide your IP from other users?
[23:24:38] <Adura> Yup
[23:24:44] <Gin> I have seen that service before.
[23:25:00] <PlayerOne> It "cloaks" it, not hides.
[23:25:07] <PlayerOne> > I have seen that service before.
[23:25:22] <Adura> It's not a proxy, just makes the IRCd not report your IP via /who and /whois
[23:25:24] <PlayerOne> Years of running and that's what might be left as the rsult...
[23:25:39] <v`> https://i.imgur.com/zirsnF0.png
[23:26:00] <pragma-> It used to be possible to use ChanServ's AKICK command in conjunction with UNBAN to iteratively reveal the user's real IP behind the cloak. That's been patched *very* recently.
[23:26:35] <PlayerOne> Gin related: https://gist.github.com/joepie91/df80d8d36cd9d1bde46ba018af497409
[23:26:37] <Paperbot> Link title(s): [ freenode-faq.md · GitHub ]
[23:27:21] <Gin> Okay
[23:27:27] <Gin> I will check on that
[23:27:27] *** Quits: PlayerOne (~PlayerOne@55-207-55-95.baltnet.ru) (Changing host)
[23:27:27] *** Joins: PlayerOne (~PlayerOne@user/playerone)
[23:28:49] <PlayerOne> Adura done ^^ Thank you for bothering, though!
[23:29:18] <Gin> PlayerOne: Have you experienced a phase in your life when you learnt enough fundamentals but failed to find a concrete project to work with?
[23:30:07] <Gin> Altreus seems still online. :-)
[23:30:43] <PlayerOne> Did anyone learned enough of fundamentals, tbf?
[23:31:06] <PlayerOne> Sometimes one need to recall some stuff
[23:31:08] <Gin> Emm, I mean enough to work on something.
[23:31:21] <PlayerOne> Once more. It really depends on something.
[23:32:00] <PlayerOne> Generally, I wouldn't learn something without a target, so
[23:32:13] <PlayerOne> so I was always sure what to build
[23:32:23] <PlayerOne> relatively always :D  
[23:32:47] <Gin> But without fundamentals, how can you decide what to learn so that you can achieve the target?
[23:33:14] <choroba> I started with sites like HackerRank, Rosalind.info, Project Euler, etc.
[23:34:00] *** Quits: kylese (~kylese@p5483550e.dip0.t-ipconnect.de) (Quit: Leaving)
[23:34:29] <PlayerOne> Gin the fundamentals were given either at school or life. Next is a target and further investigating.
[23:34:53] <PlayerOne> It's nice when other people collaborate and do stuff together also. So consider finding a team.
[23:35:11] <PlayerOne> Have you played in a band, for example?
[23:36:22] <Gin> I am in a team now for a project of Intel
[23:36:56] <Gin> But we are just students and the project was mostly debugging now.
[23:37:08] <Gin> It isn't something interesting at all.
[23:38:09] <Gin> And I started to think that we need to iterate a complete project, so that we can learn the workflow as well as the skills we need.
[23:38:51] <Gin> I suppose working with a bunch of students of my age and working with senior engineers from google are totally different.
[23:39:14] <Gin> That is why I want to learn from open source projects.
[23:40:31] <Gin> Now I cannot meet brilliant developers face to face, but I can learn from their codes on github and so on.
[23:41:05] *** Joins: Guest97 (~Guest9@43.241.144.108)
[23:42:12] <Gin> PlayerOne: Are you still online? :-）
[23:42:18] <Gin> :-)
[23:45:20] <gordonfish> Ready PlayerOne
[23:46:37] * GumbyPAN CPAN Upload: Types-Numbers-v1.0.0 by GSG https://metacpan.org/release/GSG/Types-Numbers-v1.0.0
[23:47:36] <PlayerOne> Gin yes.
[23:47:39] <PlayerOne> gordonfish always.
[23:48:06] *** metasintactic is now known as thunder
[23:49:56] <Gin> love to know you ideas :-)
[23:50:01] <Gin> PlayerOne
[23:50:05] *** Quits: deadmarshal (~deadmarsh@95.38.113.167) (Ping timeout: 272 seconds)
[23:50:50] <PlayerOne> Please have a pleasant time and stay safe out there, People! ^^
[23:59:45] *** Joins: jpmh (uid445439@id-445439.stonehaven.irccloud.com)
