[00:01:28] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[00:01:43] *** Quits: FreeBDSM (~uzer@user/freebdsm) (Quit: Leaving.)
[00:07:31] *** Joins: mci64 (~mci64@185.242.190.95)
[00:09:24] *** Joins: seninha (~seninha@user/seninha)
[00:10:56] *** Joins: pystardust (~pystardus@117.96.229.96)
[00:12:06] *** Quits: mci64 (~mci64@185.242.190.95) (Ping timeout: 256 seconds)
[00:12:26] *** Quits: pystardust (~pystardus@117.96.229.96) (Client Quit)
[00:16:09] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 248 seconds)
[00:21:10] *** Joins: gothicserpent (~gothicser@2605:e000:7fc0:62:ac91:6611:a2ee:3733)
[00:23:19] *** Quits: magla (~gelignite@55d4ac4e.access.ecotel.net) (Quit: Stay safe!)
[00:27:26] *** Quits: randomuser (~randomuse@user/randomuser) (Quit: Leaving)
[00:27:28] *** Joins: Guest40 (~Guest40@pool-72-65-50-80.bflony.fios.verizon.net)
[00:31:27] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[00:33:00] *** Joins: humky (~humky@user/humky)
[00:33:26] <Guest40> simply trying to reorder columns with awk, can anyone tell me what i'm doing wrong here? https://bpa.st/raw/LZPQ
[00:34:00] *** Joins: simpl_e (~user@user/simpl-e/x-8589812)
[00:34:07] <Guest40> i swear i've done this before, and all my googling seems to suggest what i'm already doing
[00:34:20] <greycat> there's #awk too
[00:35:02] *** Joins: sazawal (~sazawal@122.161.170.192)
[00:35:17] <Guest40> wait i just figured it out: test: ASCII text, with CRLF line terminators
[00:35:26] <Guest40> apparently awk is choking on the CRLF
[00:38:51] *** Quits: gothicserpent (~gothicser@2605:e000:7fc0:62:ac91:6611:a2ee:3733) (Quit: Leaving)
[00:42:49] *** Quits: mjbatty (~mjbatty@82.2.17.205) (Ping timeout: 248 seconds)
[00:45:10] *** Quits: edlou (uid413273@id-413273.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[00:45:40] <geirha> awk isn't, but the terminal is having a blast
[00:46:11] *** Joins: mjbatty (~mjbatty@82.2.17.205)
[00:46:44] *** Joins: Nact (~l@host-85-27-122-107.dynamic.voo.be)
[00:46:53] *** Quits: rememberYou (~someone@user/rememberyou) (Read error: Connection reset by peer)
[00:47:45] <Guest40> geirha what's the best way to handle this?
[00:48:17] <geirha> !cr
[00:48:17] <greybot> Carriage Return (ASCII 13). Often represented by ^M or \r. CRs are found just before newlines in text files generated by DOS/Windows apps. You can see them with ''sed -n l''. See http://mywiki.wooledge.org/BashFAQ/052 to get rid of them.
[00:48:32] <greycat> Depends on where the input data comes from.  You can either remove the CRs from the input file permanently, if it's a static resource, or you can strip them during the read each time, if it's a short-lived resource.
[00:48:33] <emanuele6> Guest40: there is #awk'
[00:48:43] <geirha> I'd say, don't edit files with notepad.exe in the first place
[00:50:10] <emanuele6> Guest40: you can just use `awk -F, -vRS='\r?\n' '{ print $2 "," $1 }'' to make it work with both CRLF and LF files
[00:50:29] <Guest40> this was actually a text snippet from awk i downloaded, thanks emanuele6
[00:50:33] <geirha> that requires GNU awk
[00:50:39] <emanuele6> but I think regular expression RS only work with GNU awk
[00:50:42] <Guest40> from *slack* not awk
[00:51:07] <geirha> sub(/\r$/, "")
[00:51:15] <greycat> if you're in a shell script, you can always throw a tr -d '\r' somewhere in the pipeline
[00:51:47] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[00:52:16] *** Quits: rendar (~rendar@user/rendar) ()
[00:53:01] *** Joins: CrtxReavr (crtxreavr@shodan.trioptimum.com)
[00:53:19] <CrtxReavr> Anyone written a script to automate unison?
[00:53:34] <CrtxReavr> I'm trying to come-up with a good "change trigger" to base other events on.
[00:56:09] *** Quits: mjbatty (~mjbatty@82.2.17.205) (Ping timeout: 248 seconds)
[00:56:57] *** Quits: Guest40 (~Guest40@pool-72-65-50-80.bflony.fios.verizon.net) (Quit: Client closed)
[01:00:03] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[01:01:46] *** Joins: YaoNai (~YaoNai@user/yaonai)
[01:02:19] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[01:03:06] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 256 seconds)
[01:03:08] *** Quits: mikeliuk (~mikeliuk@109.249.187.96) (Quit: Connection closed)
[01:05:13] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[01:07:35] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[01:10:50] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[01:11:03] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Quit: Leaving)
[01:13:06] *** Joins: nobody_ (~nobody@87.13.30.222)
[01:15:18] *** Quits: roadie (~user@2a02:8108:ec0:1427:c0ce:4dac:74cc:6f8f) (Ping timeout: 272 seconds)
[01:17:03] *** Quits: sinaowolabi (~SinaOwola@102.134.114.19) (Read error: Connection reset by peer)
[01:18:01] *** Quits: lsrtl__ (~lsrtl@user/lsrtl) (Ping timeout: 248 seconds)
[01:19:38] *** Quits: sazawal (~sazawal@122.161.170.192) (Quit: Leaving)
[01:20:04] *** Quits: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070) (Quit: I Break D Ert)
[01:20:18] *** Quits: barjac (~quassel@host86-191-31-231.range86-191.btcentralplus.com) (Ping timeout: 258 seconds)
[01:21:17] *** Quits: _unary (unary@ternary.ca) (Ping timeout: 252 seconds)
[01:21:25] *** Joins: barjac (~quassel@host86-191-31-231.range86-191.btcentralplus.com)
[01:22:18] *** Quits: sjohnson (sjohnson@cow.sj.rfc1459.net) (Ping timeout: 240 seconds)
[01:22:23] *** Quits: dmonschein (dmonschein@2600:3c03::f03c:91ff:fe05:7562) (Ping timeout: 252 seconds)
[01:24:00] *** Joins: dmonschein (dmonschein@2600:3c03::f03c:91ff:fe05:7562)
[01:24:26] *** Joins: earthbreaker (earthbreak@2600:3c03::f03c:91ff:fece:9070)
[01:24:56] *** Joins: unary (unary@ternary.ca)
[01:25:06] *** Quits: Ad1Tech_IT (~Ad1Tech@193.218.151.167.static.telsat.wroc.pl) (Quit: Leaving)
[01:25:07] *** Joins: sjohnson (sjohnson@cow.sj.rfc1459.net)
[01:25:17] *** Joins: tradar (~tradar@user/tradar)
[01:25:32] *** Joins: Ad1Tech (~Ad1Tech@193.218.151.167.static.telsat.wroc.pl)
[01:27:37] *** Quits: Ad1Tech (~Ad1Tech@193.218.151.167.static.telsat.wroc.pl) (Client Quit)
[01:31:04] *** Joins: mci64 (~mci64@185.242.190.95)
[01:33:22] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[01:35:49] *** Joins: mz` (~mz`@user/mz/x-8532539)
[01:36:37] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Quit: leaving)
[01:39:41] *** Quits: kill (~killown@user/killown) (Quit: Leaving)
[01:39:55] *** Quits: Mudkip875 (~blackred@173.208.202.60) (Quit: WeeChat 3.2)
[01:40:37] *** Quits: lavaball (felix@31.204.155.215) (Remote host closed the connection)
[01:40:56] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 268 seconds)
[01:41:08] *** Joins: roadie (~user@2a02:8108:ec0:1427:5137:958c:c1a9:8cc8)
[01:42:27] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[01:43:38] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[01:43:49] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[01:45:30] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:45:41] *** Joins: ash_worksi (~ash_m@user/ash-m/x-3292451)
[01:46:10] *** Quits: roadie (~user@2a02:8108:ec0:1427:5137:958c:c1a9:8cc8) (Ping timeout: 256 seconds)
[01:46:14] <ash_worksi> why doesn't `IFS='&' curl ... -d "${my_array[*]}"` join my_array with ampersands?
[01:46:51] <twkm> because the change to IFS is only for curl's environment, not yours.
[01:46:52] <phy1729> Because IFS in the environment of curl doesn't help you
[01:47:03] <phy1729> !faq foo=bar
[01:47:03] <greybot> https://mywiki.wooledge.org/BashFAQ/104 -- Why doesn't foo=bar echo "$foo" print bar?
[01:47:11] <ash_worksi> nvm
[01:47:12] <twkm> ( IFS='&'; curl ... "${a[*]}" )
[01:47:15] <ash_worksi> yes
[01:47:47] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Client Quit)
[01:47:51] <ash_worksi> thanks twkm phy1729 
[01:48:10] <twkm> sure thing.
[01:49:54] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[01:57:06] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[01:59:34] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[02:00:07] *** Quits: makara (~sol@196.61.111.63) (Ping timeout: 245 seconds)
[02:01:45] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[02:02:48] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 272 seconds)
[02:04:43] *** Joins: mz` (~mz`@user/mz/x-8532539)
[02:05:59] *** Quits: n4dir (~user@mue-88-130-56-247.dsl.tropolys.de) (Remote host closed the connection)
[02:07:04] *** Quits: Camilo (~hugh@host-92-20-143-244.as13285.net) (Ping timeout: 258 seconds)
[02:10:48] *** Joins: dre (~dre@2001:8003:c932:c301:cdc7:f294:b67b:4c2c)
[02:11:51] *** Joins: roadie (~user@2a02:8108:ec0:1427:5137:958c:c1a9:8cc8)
[02:12:37] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[02:12:45] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[02:13:00] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 272 seconds)
[02:13:37] *** Joins: Lope (~lope@user/lope)
[02:13:46] <Lope> how can I make this work in a sh shell?
[02:14:00] <Lope> [[ $foo == bar ]] && echo yes
[02:15:13] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Quit: Leaving)
[02:15:34] <phy1729> [ "$foo" = bar ] && echo yes
[02:15:57] <Lope> lol, interesting :)
[02:16:05] <Lope> !qefs
[02:16:05] <greybot> "$Quote" "$Every" "$Fucking" "$Substitution"
[02:16:10] *** Quits: birkoff (birkoff@user/birkoff) (Ping timeout: 240 seconds)
[02:17:39] <hwrd> that's a good command.
[02:20:07] *** Quits: roadie (~user@2a02:8108:ec0:1427:5137:958c:c1a9:8cc8) (Ping timeout: 245 seconds)
[02:20:39] *** docmax__ is now known as docmax
[02:25:03] <twkm> not always appropriate, but close enough.
[02:25:13] <emanuele6> !$(("
[02:25:13] <greybot> Quotes expanding in math contexts is a bash-specific feature. If you must use substitutions in a math context (e.g. you need to do maths on $?, $# or ${#var}) and you are targeting POSIX sh, you should not quote those substitutions since the quotes are not guaranteed to expand: e.g. `echo "$(( "$#" + 1 ))"' causes a syntax error in dash and zsh; use `echo "$(( $# + 1 ))"' instead.
[02:25:14] *** Joins: kill (~killown@user/killown)
[02:25:28] *** Joins: cdown_ (~cdown@89.32.122.5)
[02:28:02] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 245 seconds)
[02:28:11] *** Quits: michigan (uid507982@id-507982.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[02:28:14] *** cdown_ is now known as cdown
[02:29:24] *** Quits: kj (~kj@beta.aerisnetwork.net) (Ping timeout: 272 seconds)
[02:30:18] *** Quits: Liblx (~Alex@2a02:810c:280:59c:7471:c11:7e53:10ff) (Quit: WeeChat 3.2)
[02:30:57] *** Joins: mz` (~mz`@user/mz/x-8532539)
[02:32:13] *** Quits: greycat (~greg@209.142.155.49) (Quit: Bye)
[02:32:38] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 256 seconds)
[02:34:20] *** Quits: dre (~dre@2001:8003:c932:c301:cdc7:f294:b67b:4c2c) (Ping timeout: 256 seconds)
[02:36:36] <Lope> [: prereqs: unexpected operator
[02:36:47] <Lope> [ "$1" == "prereqs" ] && { prereqs; exit 0; }
[02:36:54] <Lope> this is in a sh shell
[02:37:06] <emg> Lope: = not ==
[02:37:10] <emg> == is a bashism
[02:37:14] <Lope> oh, thanks
[02:38:45] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[02:40:18] *** Joins: shaggysi0 (~shaggysi0@46.69.95.119)
[02:40:27] *** Quits: ircseeker3 (~nodebot@185.187.243.123) (Remote host closed the connection)
[02:40:55] <Lope> emg, if a substitution do you still need to quote it in a sh shell?
[02:41:08] <Lope> like [ $number -eq 1 ]
[02:41:13] <emg> yes
[02:41:14] <emg> always
[02:41:19] <Lope> okay
[02:41:20] <Lope> thanks
[02:42:11] <Lope> emg: "/dev/disk/by-uuid/$foo" or /dev/disk/by-uuid/"$foo" ?
[02:42:24] *** Joins: sublim20 (~sublim20@user/sublim20)
[02:42:34] <emg> either
[02:43:08] *** Quits: iomari891 (~iomari891@105.112.138.38) (Read error: Connection reset by peer)
[02:44:40] <Lope> emg, bash seems to not care about quoting stuff that doesn't contain spaces
[02:44:54] <Lope> but sh seems to be non negotiable inside square brackets?
[02:45:13] <Lope> cos bash is happy to do [ $number -eq 1 ]
[02:45:24] <Lope> I think, I normally double bracket in bash.
[02:45:28] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[02:45:53] <Lope> yeah, bash doesn't mind no brackets.
[02:46:07] <Lope> If there's no space inside the variable.
[02:46:39] *** Joins: roadie (~user@2a02:8108:ec0:1427:5137:958c:c1a9:8cc8)
[02:48:00] <earnestly> Lope: [[ is a keyword, [ is a command (builtin).  The rules that apply to ls(1) are the same that apply to [
[02:48:50] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[02:49:01] <earnestly> Quoting properly in bash while using [ is still necessary
[02:49:29] <earnestly> # v='.bash*'; [ $v = .bashrc ] && echo whoops
[02:49:30] <shbot> earnestly: whoops
[02:49:39] *** Joins: kj (~kj@kj.aerisnetwork.net)
[02:50:14] <earnestly> Where [[ is more like case, it has different rules where glob expansions operate on patterns and not files
[02:50:25] *** Quits: kill (~killown@user/killown) (Remote host closed the connection)
[02:51:25] *** Joins: iomari891 (~iomari891@105.112.138.38)
[02:51:53] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[02:54:00] <Lope> ok, that's a bit beyond my comprehension, but I sort of get what you're talking about :)
[02:54:07] <Lope> thank you :)
[02:54:19] *** Quits: kj (~kj@kj.aerisnetwork.net) (Ping timeout: 268 seconds)
[02:54:37] *** Joins: akoana (~ah@user/akoana)
[02:55:07] *** Quits: roadie (~user@2a02:8108:ec0:1427:5137:958c:c1a9:8cc8) (Ping timeout: 245 seconds)
[02:55:08] <Lope> oh, wow, I didn't know you can glob stuff inside bash just like that.
[02:55:15] <Lope> I just tried it.
[02:57:41] *** Joins: mz` (~mz`@user/mz/x-8532539)
[02:58:03] <llua> when in doubt, quote it; if you do something wrong it is most likely going to blow up in your face pretty fast. where as bugs from not quoting is more subtle
[02:58:23] <Lope> ok :)
[02:58:26] *** Quits: xx (~xx@user/xx) (Ping timeout: 258 seconds)
[03:03:06] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[03:03:44] *** Joins: keypusher (keypusher@user/keypusher)
[03:05:42] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[03:06:16] <Lope> good night :)
[03:06:18] *** Quits: Lope (~lope@user/lope) (Quit: Leaving)
[03:06:20] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[03:06:22] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[03:09:20] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[03:09:28] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 256 seconds)
[03:11:26] *** Joins: dre (~dre@2001:8003:c932:c301:e84:4d36:2dec:8e23)
[03:11:27] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[03:13:11] *** Quits: chomwitt (~chomwitt@athedsl-32301.home.otenet.gr) (Remote host closed the connection)
[03:19:43] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[03:20:08] *** Joins: JohnML (~JohnML@37.201.129.30)
[03:21:50] *** Joins: roadie (~user@2a02:8108:ec0:1427:5137:958c:c1a9:8cc8)
[03:21:59] *** Joins: rigid- (~rigid@user/rigid)
[03:22:32] *** Quits: rigid (~rigid@user/rigid) (Read error: Connection reset by peer)
[03:22:38] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[03:22:43] *** Joins: Inline_ (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[03:23:14] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Ping timeout: 272 seconds)
[03:24:28] *** Quits: luvalon1 (~luva@178.239.167.170) (Read error: Connection reset by peer)
[03:24:37] *** Joins: luvalon13 (~luva@178.239.167.170)
[03:25:08] *** Quits: JohnML (~JohnML@37.201.129.30) (Ping timeout: 268 seconds)
[03:25:09] *** Joins: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[03:25:29] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Ping timeout: 248 seconds)
[03:25:32] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 245 seconds)
[03:26:01] *** Joins: MenschZwoNull (~MenschZwo@p200300c8571e370094ab5ecbac584ac2.dip0.t-ipconnect.de)
[03:26:46] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[03:27:25] *** Joins: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl)
[03:29:51] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[03:30:32] *** Quits: roadie (~user@2a02:8108:ec0:1427:5137:958c:c1a9:8cc8) (Ping timeout: 252 seconds)
[03:32:53] *** Quits: jsrnop (~mark@user/jsrnop) (Read error: Connection reset by peer)
[03:33:18] *** Joins: GuiToris (~GuiToris@user/guitoris)
[03:33:18] *** Joins: jsrnop (~mark@user/jsrnop)
[03:38:22] *** Joins: mz` (~mz`@user/mz/x-8532539)
[03:43:22] *** Joins: milosz__ (~milosz@user/milosz)
[03:45:05] *** Joins: Atque (~Atque@user/atque)
[03:45:32] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Ping timeout: 245 seconds)
[03:45:56] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[03:46:08] *** Joins: john1__ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[03:46:22] *** Quits: john1_ (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Ping timeout: 245 seconds)
[03:46:22] *** Quits: luvalon13 (~luva@178.239.167.170) (Ping timeout: 245 seconds)
[03:46:42] *** Joins: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com)
[03:46:43] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[03:47:04] *** Joins: luvalon1 (~luva@178.239.167.170)
[03:47:10] *** Joins: igemnace (~ian@user/igemnace)
[03:47:21] *** Quits: milosz_ (~milosz@user/milosz) (Ping timeout: 248 seconds)
[03:48:00] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[03:48:41] *** Quits: GuiToris (~GuiToris@user/guitoris) (Quit: Sieben Acht Gute Nacht!)
[03:50:59] *** Joins: michigan (uid507982@id-507982.charlton.irccloud.com)
[03:53:00] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[03:54:30] *** Quits: timj1 (~timj@user/timj) (Remote host closed the connection)
[03:55:53] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[03:57:00] *** Quits: darkxploit (~jay@32.209.19.50) (Read error: Connection reset by peer)
[03:58:33] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[04:01:25] *** Joins: darkxploit (~jay@32.209.19.50)
[04:03:44] *** Joins: sublim20 (~sublim20@user/sublim20)
[04:04:39] *** Joins: timj (~timj@user/timj)
[04:05:15] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[04:06:36] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[04:08:10] *** Joins: ZucZero (~Zucca@user/zucca)
[04:08:55] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[04:10:34] *** Quits: Zucca (~Zucca@user/zucca) (Ping timeout: 240 seconds)
[04:10:36] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[04:11:20] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[04:13:30] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 256 seconds)
[04:15:02] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:15:12] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 256 seconds)
[04:15:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[04:17:21] *** Joins: mz` (~mz`@user/mz/x-8532539)
[04:17:22] *** Parts: akoana (~ah@user/akoana) ()
[04:19:44] *** Joins: birkoff (birkoff@thunderirc.net)
[04:19:44] *** Quits: birkoff (birkoff@thunderirc.net) (Changing host)
[04:19:44] *** Joins: birkoff (birkoff@user/birkoff)
[04:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[04:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[04:23:05] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[04:24:33] *** Quits: Fernando-Basso (~fernandob@2001:470:69fc:105::d1d4) (Ping timeout: 252 seconds)
[04:24:33] *** Quits: AnisBarghouthi[m (~anis-barg@2001:470:69fc:105::6ebb) (Ping timeout: 252 seconds)
[04:24:33] *** Quits: easy[m] (~easymatri@2001:470:69fc:105::c312) (Ping timeout: 252 seconds)
[04:24:34] *** Quits: sixecho (~sixecho@2001:470:69fc:105::32) (Ping timeout: 240 seconds)
[04:24:34] *** Quits: madcloud (~kmacdev@2001:470:69fc:105::bad5) (Ping timeout: 240 seconds)
[04:24:34] *** Quits: M4k]cJ1{C^K^7IzF (~sub2matri@2001:470:69fc:105::c18c) (Ping timeout: 240 seconds)
[04:24:54] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[04:25:06] *** Quits: kakos[m] (~kakos@2001:470:69fc:105::c965) (Ping timeout: 252 seconds)
[04:25:06] *** Quits: s0dyy[m] (~s0dymatri@2001:470:69fc:105::d0f4) (Ping timeout: 252 seconds)
[04:25:11] *** Quits: ormaaj (~ormaaj@user/ormaaj) (Ping timeout: 268 seconds)
[04:25:12] *** Quits: Helmholtz (~leibnizma@user/helmholtz) (Ping timeout: 268 seconds)
[04:25:14] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[04:25:15] *** Quits: Guest330 (~jmcantrel@user/jmcantrell) (Ping timeout: 276 seconds)
[04:25:15] *** Quits: kuhilas (~kuhilas@2001:470:69fc:105::3040) (Ping timeout: 276 seconds)
[04:25:15] *** Quits: nicoty[m] (~nicoty@user/nicoty) (Ping timeout: 276 seconds)
[04:25:15] *** Quits: AppAraat[m] (~apparaatm@2001:470:69fc:105::8c3) (Ping timeout: 276 seconds)
[04:25:18] *** Quits: [old]freshgumbub (~freshgum-@2001:470:69fc:105::504f) (Ping timeout: 272 seconds)
[04:25:18] *** Quits: pexes[m] (~pexesmatr@2001:470:69fc:105::c7c3) (Ping timeout: 272 seconds)
[04:25:22] *** Quits: lautre[m] (~lautreg@2001:470:69fc:105::311f) (Ping timeout: 240 seconds)
[04:25:23] *** Quits: keeganza (~keeganza@2001:470:69fc:105::c842) (Ping timeout: 272 seconds)
[04:25:23] *** Quits: lasr[m] (~lasrhalog@2001:470:69fc:105::c875) (Ping timeout: 272 seconds)
[04:25:30] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[04:25:32] *** Quits: Baggypants (~baggypant@2001:470:1f09:349::baad:daad) (Ping timeout: 252 seconds)
[04:25:39] *** Quits: creme[m] (~creme@2001:470:69fc:105::31c8) (Ping timeout: 252 seconds)
[04:25:48] *** Quits: lkhn (~lkhn@user/lkhn) (Ping timeout: 268 seconds)
[04:25:48] *** Quits: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee) (Ping timeout: 268 seconds)
[04:25:48] *** Quits: freshgumbubbles[ (~freshgum_@2001:470:69fc:105::c1a5) (Ping timeout: 268 seconds)
[04:25:48] *** Quits: mrjpaxton[m] (~mrjpaxton@2001:470:69fc:105::8ec4) (Ping timeout: 268 seconds)
[04:25:48] *** Quits: seachala[m] (~rosefoxma@2001:470:69fc:105::c74e) (Ping timeout: 268 seconds)
[04:25:54] *** Quits: kreyren[m] (~kreyrentc@2001:470:69fc:105::bafb) (Ping timeout: 276 seconds)
[04:26:00] *** Quits: teawhydee[m] (~teawhydee@2001:470:69fc:105::d6ee) (Ping timeout: 272 seconds)
[04:27:59] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[04:28:13] *** Quits: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[04:28:35] *** Joins: Baggypants (~baggypant@cpc94362-ward12-2-0-cust376.10-2.cable.virginm.net)
[04:29:06] *** Joins: shokohsc (~shokohsc@161.88.195.77.rev.sfr.net)
[04:29:46] *** Joins: kj (~kj@kj.aerisnetwork.net)
[04:31:35] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[04:32:01] *** Joins: thiras (~thiras@user/thiras)
[04:33:45] *** Joins: mz` (~mz`@user/mz/x-8532539)
[04:33:49] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[04:34:49] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[04:35:05] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[04:37:17] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[04:38:27] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 245 seconds)
[04:40:42] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[04:41:30] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[04:43:27] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 245 seconds)
[04:45:20] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[04:45:31] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[04:47:23] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Remote host closed the connection)
[04:47:37] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[04:48:27] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 245 seconds)
[04:49:36] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[04:50:18] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[04:52:37] *** Joins: jmcantre2 (~weechat@user/jmcantrell)
[04:53:12] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 276 seconds)
[04:53:33] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[04:54:01] *** Quits: FoodMan (~FoodMan@cpc104776-belf12-2-0-cust417.2-1.cable.virginm.net) (Ping timeout: 248 seconds)
[04:54:46] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[04:54:50] *** Joins: jmcantre3 (~weechat@user/jmcantrell)
[04:55:17] *** Joins: Helmholtz (~leibnizma@2001:470:69fc:105::3124)
[04:56:27] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 276 seconds)
[04:57:17] *** Joins: mz` (~mz`@user/mz/x-8532539)
[04:57:51] *** Quits: jmcantre2 (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[04:58:24] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 276 seconds)
[05:01:29] *** Quits: nobody_ (~nobody@87.13.30.222) (Ping timeout: 248 seconds)
[05:01:37] *** Joins: Bhavuk (~BTaneja@122.173.26.212)
[05:03:44] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:06:02] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[05:08:43] *** Joins: lautre[m] (~lautreg@2001:470:69fc:105::311f)
[05:11:16] *** Joins: madcloud (~kmacdev@2001:470:69fc:105::bad5)
[05:14:31] *** Joins: _AJ (~AJAlabs@pool-71-183-83-145.nycmny.fios.verizon.net)
[05:16:10] *** Joins: M4k]cJ1{C^K^7IzF (~sub2matri@2001:470:69fc:105::c18c)
[05:18:19] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.2)
[05:18:22] *** Joins: nobody_ (~nobody@87.13.30.222)
[05:22:11] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[05:22:33] *** Quits: DaNeenjah (~jake@adsl-74-230-6-204.hsv.bellsouth.net) (Quit: WeeChat 3.2)
[05:24:46] *** Joins: sixecho (~sixecho@2001:470:69fc:105::32)
[05:26:39] *** Joins: roadie (~user@2a02:8108:ec0:1427:5137:958c:c1a9:8cc8)
[05:30:30] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:24] *** Joins: mz` (~mz`@user/mz/x-8532539)
[05:34:42] *** Joins: vlm (~vlm@user/vlm)
[05:34:58] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[05:35:01] *** Joins: humky_ (~humky@user/humky)
[05:36:05] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[05:36:56] *** Quits: roadie (~user@2a02:8108:ec0:1427:5137:958c:c1a9:8cc8) (Ping timeout: 272 seconds)
[05:38:33] *** Joins: edlou (uid413273@id-413273.brockwell.irccloud.com)
[05:39:28] *** Quits: jmcantre3 (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[05:40:10] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[05:40:12] *** Quits: humky_ (~humky@user/humky) (Read error: Connection reset by peer)
[05:40:19] *** Joins: humky (~humky@user/humky)
[05:40:25] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 248 seconds)
[05:42:19] *** Joins: WinterStar (~IceLight@user/icelight)
[05:44:41] *** Joins: seachala[m] (~rosefoxma@2001:470:69fc:105::c74e)
[05:45:56] *** Quits: nobody_ (~nobody@87.13.30.222) (Ping timeout: 252 seconds)
[05:55:09] *** Joins: freshgumbubbles[ (~freshgum_@2001:470:69fc:105::c1a5)
[05:55:27] *** Joins: ormaaj (~ormaaj@user/ormaaj)
[05:56:08] *** Quits: forgotmynick (uid24625@id-24625.stonehaven.irccloud.com) (Quit: Connection closed for inactivity)
[05:56:25] *** Quits: humky (~humky@user/humky) (Remote host closed the connection)
[05:57:19] *** Joins: humky (~humky@user/humky)
[06:02:47] *** Joins: AnisBarghouthi[m (~anis-barg@2001:470:69fc:105::6ebb)
[06:04:08] *** Joins: easy[m] (~easymatri@2001:470:69fc:105::c312)
[06:06:14] *** Joins: mrjpaxton[m] (~mrjpaxton@2001:470:69fc:105::8ec4)
[06:10:09] *** Quits: _AJ (~AJAlabs@pool-71-183-83-145.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:12:53] *** Quits: mci64 (~mci64@185.242.190.95) (Ping timeout: 268 seconds)
[06:15:55] *** Quits: MercilessDeth (~brad@136.49.61.2) (Quit: Konversation terminated!)
[06:16:21] *** Joins: Fernando-Basso (~fernandob@2001:470:69fc:105::d1d4)
[06:16:54] *** Joins: nicoty[m] (~nicoty@user/nicoty)
[06:17:15] *** Joins: mz` (~mz`@user/mz/x-8532539)
[06:19:19] *** Joins: pexes[m] (~pexesmatr@2001:470:69fc:105::c7c3)
[06:19:47] *** Joins: lkhn (~lkhn@user/lkhn)
[06:20:17] *** Quits: michigan (uid507982@id-507982.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[06:24:33] *** Joins: ferdna (~ferdna@user/ferdna)
[06:24:58] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[06:27:15] *** Joins: zeden (~zeden@user/zeden)
[06:27:53] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[06:28:08] *** Joins: keeganza (~keeganza@2001:470:69fc:105::c842)
[06:29:21] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:30:12] *** Joins: lasr[m] (~lasrhalog@2001:470:69fc:105::c875)
[06:31:47] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 245 seconds)
[06:32:12] *** Joins: keypusher (keypusher@user/keypusher)
[06:32:21] *** Joins: joshcom (~joshcom@2600:8800:a706:2b00:4692:e3ec:239c:8c8)
[06:32:35] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 252 seconds)
[06:32:57] *** Joins: AppAraat[m] (~apparaatm@2001:470:69fc:105::8c3)
[06:35:05] *** Quits: smlavine (smlavine@sourcehut/user/smlavine) (Ping timeout: 268 seconds)
[06:37:03] *** Joins: Guest330 (~jmcantrel@user/jmcantrell)
[06:40:24] *** Joins: kakos[m] (~kakos@2001:470:69fc:105::c965)
[06:41:06] *** Joins: elemongw[m] (~elemongwk@2001:470:69fc:105::34ee)
[06:42:10] *** Quits: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl) (Quit: Bye!)
[06:42:35] *** Joins: [old]freshgumbub (~freshgum-@2001:470:69fc:105::504f)
[06:43:11] *** Quits: joshcom (~joshcom@2600:8800:a706:2b00:4692:e3ec:239c:8c8) (Quit: Leaving)
[06:44:01] *** Joins: kuhilas (~kuhilas@2001:470:69fc:105::3040)
[06:46:05] *** Quits: ormaaj2 (~ormaaj2@user/ormaaj) (Quit: Client closed)
[06:47:39] *** Joins: mz` (~mz`@user/mz/x-8532539)
[06:49:16] *** Quits: reset (~reset@user/reset) (Quit: reset)
[06:51:37] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[06:51:57] *** Joins: _AJ (~AJAlabs@pool-71-183-83-145.nycmny.fios.verizon.net)
[06:53:57] *** Joins: Pall (~Pall@cpc139184-sprt3-2-0-cust125.17-2.cable.virginm.net)
[06:54:53] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[06:55:24] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 272 seconds)
[06:55:58] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[06:56:09] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[06:58:31] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[06:58:55] *** Joins: MercilessDeth (~brad@136.49.61.2)
[06:59:21] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[06:59:54] *** Joins: s0dyy[m] (~s0dymatri@2001:470:69fc:105::d0f4)
[07:03:43] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[07:03:58] *** Quits: _AJ (~AJAlabs@pool-71-183-83-145.nycmny.fios.verizon.net) (Quit: Textual IRC Client: www.textualapp.com)
[07:04:24] *** Joins: jos2 (~jos3@dyndsl-178-142-071-191.ewe-ip-backbone.de)
[07:08:18] *** Joins: scoobydoo (~scooby@138.199.59.36)
[07:08:23] *** Quits: jos1 (~jos3@dyndsl-091-248-054-003.ewe-ip-backbone.de) (Ping timeout: 268 seconds)
[07:09:09] *** Joins: lq820105 (~lq@180.167.42.2)
[07:10:49] *** Quits: lq (~lq@180.167.42.2) (Read error: Connection reset by peer)
[07:12:13] *** Joins: gnoo (~gnoo@user/gnoo)
[07:12:30] *** Joins: kreyren[m] (~kreyrentc@2001:470:69fc:105::bafb)
[07:14:53] *** Joins: teawhydee[m] (~teawhydee@2001:470:69fc:105::d6ee)
[07:15:57] *** Quits: scaleww (~scaleww@77-41-20-31.ftth.glasoperator.nl) (Quit: Leaving)
[07:17:13] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[07:19:29] *** Joins: creme[m] (~creme@2001:470:69fc:105::31c8)
[07:22:06] *** Joins: mz` (~mz`@user/mz/x-8532539)
[07:29:21] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[07:30:39] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[07:32:03] *** Joins: downunder (~downunder@110.151.122.76)
[07:32:21] *** Joins: roadie (~user@2a02:8108:ec0:1427:5137:958c:c1a9:8cc8)
[07:33:32] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 256 seconds)
[07:34:33] *** Quits: joo (~joo@fsf/member/joo--) (Ping timeout: 248 seconds)
[07:40:02] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.2)
[07:40:20] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:40:52] *** Quits: Strykar (~wakka@signald/Strykar) (Quit: Leaving.)
[07:42:19] *** Quits: mnrmnaugh (~mnrmnaugh@68.162.206.56) (Remote host closed the connection)
[07:42:29] *** Quits: roadie (~user@2a02:8108:ec0:1427:5137:958c:c1a9:8cc8) (Ping timeout: 258 seconds)
[07:42:49] *** Joins: mnrmnaugh (~mnrmnaugh@68.162.206.56)
[07:44:59] *** Joins: Strykar (~wakka@signald/Strykar)
[07:46:12] *** Joins: dermoth_ (~dermoth@user/dermoth)
[07:46:29] *** Quits: dermoth (~dermoth@user/dermoth) (Killed (NickServ (GHOST command used by dermoth_)))
[07:46:31] *** dermoth_ is now known as dermoth
[07:46:55] *** Joins: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks)
[07:47:57] *** Joins: mz` (~mz`@user/mz/x-8532539)
[07:48:05] *** Joins: joo (~joo@fsf/member/joo--)
[07:50:26] *** Joins: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f)
[07:50:27] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[07:53:43] *** Joins: roadie (~user@2a02:8108:ec0:1427:e5cc:be78:1fb7:d763)
[07:54:00] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 268 seconds)
[07:56:54] *** Joins: igemnace (~ian@user/igemnace)
[07:57:05] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 268 seconds)
[07:58:01] *** Quits: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f) (Quit: Leaving)
[07:58:23] *** Quits: roadie (~user@2a02:8108:ec0:1427:e5cc:be78:1fb7:d763) (Ping timeout: 252 seconds)
[07:58:56] *** Quits: blink (~x@awknode.com) (Ping timeout: 252 seconds)
[08:05:17] *** Joins: roadie (~user@2a02:8108:ec0:1427:e5cc:be78:1fb7:d763)
[08:06:15] *** Quits: mz` (~mz`@user/mz/x-8532539) (Ping timeout: 258 seconds)
[08:08:06] *** Joins: roadie` (~user@2a02:8108:ec0:1427:e5cc:be78:1fb7:d763)
[08:09:13] *** Joins: Atque (~Atque@user/atque)
[08:09:54] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[08:10:05] *** Quits: roadie (~user@2a02:8108:ec0:1427:e5cc:be78:1fb7:d763) (Ping timeout: 258 seconds)
[08:15:58] *** Quits: xernaron (~xernaron@box.xernaron.ch) (Quit: ZNC 1.8.2 - https://znc.in)
[08:17:39] *** Quits: carlos (~pum@user/carlos) (Remote host closed the connection)
[08:17:45] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 248 seconds)
[08:19:34] *** Joins: straykitten (~straykitt@subs24-116-206-8-24.three.co.id)
[08:21:28] *** Joins: mz` (~mz`@user/mz/x-8532539)
[08:24:56] *** Joins: Burrr (~Burrr@urmomma-fux0rs-with.burrr.nl)
[08:25:38] *** Joins: blink (~x@awknode.com)
[08:25:41] *** Quits: straykitten (~straykitt@subs24-116-206-8-24.three.co.id) (Read error: Connection reset by peer)
[08:26:48] *** Joins: xernaron (~xernaron@box.xernaron.ch)
[08:27:36] *** Inline_ is now known as Inline
[08:32:53] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[08:33:08] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[08:34:12] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 272 seconds)
[08:35:33] *** Joins: WinterStar (~IceLight@user/icelight)
[08:36:56] *** Joins: totenkoph (~scythe@user/totenkoph)
[08:38:25] *** Quits: mz` (~mz`@user/mz/x-8532539) (Ping timeout: 268 seconds)
[08:38:40] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[08:38:41] *** Joins: straykitten (~straykitt@subs24-116-206-8-47.three.co.id)
[08:38:43] *** Joins: pystardust (~pystardus@117.96.229.96)
[08:40:56] *** Quits: xernaron (~xernaron@box.xernaron.ch) (Quit: ZNC 1.8.2 - https://znc.in)
[08:42:48] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:42:56] *** Quits: roadie` (~user@2a02:8108:ec0:1427:e5cc:be78:1fb7:d763) (Ping timeout: 252 seconds)
[08:43:17] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[08:45:41] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 252 seconds)
[08:48:38] *** Parts: justsomeguy (~justsomeg@user/justsomeguy) (WeeChat 3.2)
[08:48:41] *** Joins: qub411 (~user@203-219-207-138.tpgi.com.au)
[08:49:23] *** Quits: dermato (~dermatobr@154.21.23.75) (Quit: WeeChat 3.1)
[08:49:38] *** Joins: roadie` (~user@2a02:8108:ec0:1427:e5cc:be78:1fb7:d763)
[08:52:27] *** Joins: mz` (~mz`@user/mz/x-8532539)
[08:52:37] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 244 seconds)
[08:53:56] *** Joins: smlavine (smlavine@sourcehut/user/smlavine)
[08:54:33] *** Quits: roadie` (~user@2a02:8108:ec0:1427:e5cc:be78:1fb7:d763) (Ping timeout: 258 seconds)
[08:54:35] *** Joins: dom2 (~dom2@c-65-96-173-68.hsd1.ma.comcast.net)
[08:55:47] *** Quits: smlavine (smlavine@sourcehut/user/smlavine) (Client Quit)
[08:56:00] *** Joins: smlavine (smlavine@sourcehut/user/smlavine)
[08:57:22] *** Quits: pystardust (~pystardus@117.96.229.96) (Quit: nyaa~)
[08:57:40] *** Joins: pystardust (~pystardus@117.96.229.96)
[09:01:38] <jmcantrell> What's the difference between ${x,,} and ${x@L} ?
[09:04:46] *** kulernil is now known as kuler
[09:09:10] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[09:10:03] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[09:10:46] <ormaaj> jmcantrell: they're the same
[09:11:05] *** Quits: mz` (~mz`@user/mz/x-8532539) (Ping timeout: 248 seconds)
[09:11:24] *** ekaj is now known as a1
[09:13:04] <ormaaj> `@L` might be a bit faster. `${x,,*}` might be faster than `${x,,}` also.
[09:13:33] *** Quits: pystardust (~pystardus@117.96.229.96) (Ping timeout: 268 seconds)
[09:14:28] <ormaaj> not sure why it defaults to `?` for the `,,` variant since it's the same as *
[09:16:23] *** Joins: thiras (~thiras@user/thiras)
[09:16:29] *** Joins: pystardust (~pystardus@2405:204:5686:bc9e:a735:f92e:13fc:4e3c)
[09:19:22] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[09:20:16] *** Joins: roadie` (~user@2a02:8108:ec0:1427:e5cc:be78:1fb7:d763)
[09:20:58] *** Quits: LiftLeft (~LiftLeft@212.102.58.168) (Ping timeout: 268 seconds)
[09:22:19] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[09:23:14] *** Quits: pystardust (~pystardus@2405:204:5686:bc9e:a735:f92e:13fc:4e3c) (Quit: Quit)
[09:24:08] *** Joins: vishal (~vishal@fedora/vishal)
[09:26:09] *** Joins: makara (~sol@196.61.111.63)
[09:27:17] *** Joins: timj1 (~timj@user/timj)
[09:28:23] *** Joins: mz` (~mz`@user/mz/x-8532539)
[09:28:30] *** Joins: pystardust (~pystardus@117.96.229.96)
[09:28:34] *** Quits: roadie` (~user@2a02:8108:ec0:1427:e5cc:be78:1fb7:d763) (Ping timeout: 256 seconds)
[09:29:13] *** Quits: timj (~timj@user/timj) (Ping timeout: 248 seconds)
[09:30:00] *** thursdaylark is now known as thurstylark
[09:30:01] *** Quits: riff_IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:55] *** Joins: lordrishav (~lordrisha@157.35.244.75)
[09:31:00] *** Joins: roadie` (~user@2a02:8108:ec0:1427:e5cc:be78:1fb7:d763)
[09:31:03] *** lordrishav is now known as LordRishav
[09:31:22] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:34:49] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[09:34:50] *** Joins: LiftLeft (~LiftLeft@154.21.28.54)
[09:38:56] *** Joins: furrymcgee (~devuan@31.179.186.66)
[09:40:12] *** Joins: ztx (~ztx@user/ztx)
[09:45:15] <jmcantrell> interesting
[09:47:15] <jmcantrell> is there a way to expand an array with redirection? something like: a=(1 2 3); n=a; v=${!n[*]}
[09:48:39] *** Quits: LordRishav (~lordrisha@157.35.244.75) (Quit: Konversation terminated!)
[09:48:56] <geirha> declare -n n=a
[09:49:31] <geirha> !nameref
[09:49:32] <greybot> namerefs (typeset -n) are a ksh93 feature that work like C++ references for passing data structures between functions. Bash 4.3+ and mksh have a limited but usable version of namerefs. http://mywiki.wooledge.org/BashFAQ/006 https://gist.github.com/ormaaj/5682807
[09:52:09] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[09:52:57] <jmcantrell> oh neat. thanks geirha 
[09:59:56] *** Joins: alzgh (~alzgh@216.155.158.214)
[10:02:05] <alzgh> my shitty book calls "Here Documents" "inline input redirection"
[10:02:30] <emanuele6> what book is this?
[10:03:17] <geirha> it's not a bad description, but I would call it here documents only so you have something you can look up in the manual
[10:08:04] <alzgh> Linux Command Line and Shell Scripting Bible by Richard Blum and Christine Bresnahan emanuele6
[10:08:30] <alzgh> I heard good things about it but am disappointed
[10:08:44] <alzgh> Maybe the book is too basic for my level, IDK
[10:11:13] *** Joins: michigan (uid507982@id-507982.charlton.irccloud.com)
[10:12:39] <emanuele6> is there a way to quote a substitution such that it is not expanded by PS1? I have PS1="blabla $var blabla"
[10:13:00] <emanuele6> ${var@Q} would not work since that also quotes ~ and * that are not expanded by PS1
[10:15:03] <emanuele6> i am currently using var=${var//\\/\\\\} var=${var//\`/\\\`} before setting PS1 since I know that I won't have problems with the $ character; after the substitution it can only be followed by `/' or ` '
[10:15:41] <emanuele6> so, if i am not missing something, i should be good ( i initially forgot about the backquote :( )
[10:16:23] <pystardust> is it possible to change date format in bash? (i have a date format in seconds %s and I wanna convert it to some other format, without involking the date util)
[10:16:43] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Remote host closed the connection)
[10:17:29] <emanuele6> pystardust: yes
[10:17:39] <pystardust> WinterStar: how do I do it?
[10:17:43] <ormaaj> pystardust: printf '%(fmt)T'
[10:17:44] <pystardust> emanuele6*
[10:17:53] <emanuele6> pystardust: 
[10:17:56] <emanuele6> oops
[10:18:05] <pystardust> ormaaj: that prints the current time not the time I want
[10:18:19] <emanuele6> pystardust: pass as an argument the unix timestamp
[10:18:30] <pystardust> I have time in %s and wanna change the for mat of it
[10:18:45] <pystardust> emanuele6: could you give an example
[10:18:50] <emanuele6> printf '%(fmt)T' "$time_in_s"
[10:19:23] *** Joins: mz` (~mz`@user/mz/x-8532539)
[10:19:23] <emanuele6> # printf -v output_var '%(%H)T' 1628833637; declare -p output_var 
[10:19:25] <shbot> emanuele6: declare -- output_var="05"
[10:19:37] <emanuele6> shbot is on UTC
[10:19:42] <pystardust> emanuele6: thanks
[10:19:44] <emanuele6> but that is not guaranteed
[10:19:54] <emanuele6> if you want to force UTC, use TZ= before printf
[10:20:00] <emanuele6> # TZ= printf -v output_var '%(%H)T' 1628833637; declare -p output_var 
[10:20:02] <shbot> emanuele6: declare -- output_var="05"
[10:20:41] <emanuele6> # TZ=Europe/Zurich printf -v output_var '%(%H)T' 1628833637; declare -p output_var 
[10:20:43] <shbot> emanuele6: declare -- output_var="05"
[10:21:08] <emanuele6> I think that is not a valid time zone, wait
[10:21:14] <emanuele6> # TZ=Europe/London printf -v output_var '%(%H)T' 1628833637; declare -p output_var 
[10:21:16] <shbot> emanuele6: declare -- output_var="05"
[10:21:20] <emanuele6> weird
[10:21:32] <emanuele6> maybe shbot doesn't have timezone data installed
[10:21:37] <emanuele6> that's probably it
[10:21:46] <jmcantrell> is there a way to put the stdout of a command in one variable and stderr in another?
[10:22:34] <pystardust> jmcantrell: redirect them to files and then mapfile? $() captures only stdout
[10:22:59] <jmcantrell> pystardust: i was afraid of that, but ok thanks
[10:23:51] *** Quits: LiftLeft (~LiftLeft@154.21.28.54) (Ping timeout: 268 seconds)
[10:25:47] *** Quits: straykitten (~straykitt@subs24-116-206-8-47.three.co.id) (Ping timeout: 258 seconds)
[10:26:01] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[10:28:39] <alzgh> jmcantrell there are some solution online that don't use temp files, but they look very ugly to me.
[10:29:20] <jmcantrell> alzgh: yeah, i think i saw the same ones. agreed. using temp files is fine
[10:31:13] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[10:32:19] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[10:32:50] <alzgh> what is piping called in bash manual?
[10:33:32] <emanuele6> alzgh: the section is called "Pipelines"
[10:34:08] <alzgh> thanks
[10:34:52] *** Quits: roadie` (~user@2a02:8108:ec0:1427:e5cc:be78:1fb7:d763) (Ping timeout: 256 seconds)
[10:34:57] *** Quits: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca) (Ping timeout: 268 seconds)
[10:35:06] <furrymcgee> jmcantrell: temp files, named pipes, coproc or anything more ugly?
[10:35:35] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Ping timeout: 268 seconds)
[10:35:52] <jmcantrell> furrymcgee: i don't understand
[10:36:23] *** Joins: roadie` (~user@2a02:8108:ec0:1427:e5cc:be78:1fb7:d763)
[10:36:31] <furrymcgee> what solution did you see online for your problem?
[10:38:00] <emanuele6> furrymcgee: doesn't coproc only work with stdin and stdout?
[10:38:20] <alzgh> `command1 2>&1 | command2` Does this mean that both the stdout and stderr of command1 are piped into stdin of command2?
[10:38:28] *** Quits: howdoi (uid224@id-224.tooting.irccloud.com) (Quit: Connection closed for inactivity)
[10:38:30] *** Joins: straykitten (~straykitt@subs24-116-206-8-12.three.co.id)
[10:38:37] <emanuele6> oh, wait. you are suggesting some shenanigans like: err=$({ coproc cmd ;} 2>&1); coprocstuff here
[10:38:40] *** Joins: sharperguy_ (~sharpergu@2001:16b8:5c50:fa00:cc97:eba3:55df:9c03)
[10:38:46] <emanuele6> no, that would not work either
[10:38:56] <emanuele6> because the coproc would be running in a subshell
[10:39:03] <emanuele6> i'm not sure what furrymcgee means
[10:40:04] <jmcantrell> furrymcgee: https://stackoverflow.com/questions/11027679/capture-stdout-and-stderr-into-different-variables
[10:40:13] <furrymcgee> files, named pipes and coproc all work with stdin and stdout
[10:40:55] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[10:41:11] *** Quits: roadie` (~user@2a02:8108:ec0:1427:e5cc:be78:1fb7:d763) (Ping timeout: 252 seconds)
[10:43:21] *** Joins: mz` (~mz`@user/mz/x-8532539)
[10:45:52] <geirha> I guess a coproc could be used to read and store one of the streams, while the other stream is captured by a command substitution. Then after, read back the data from the coproc
[10:46:17] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 244 seconds)
[10:47:28] <pystardust> geirha: wouldn't coproc run in the bg, can a subshell capture that?
[10:47:35] *** Joins: fdan (~fdan@192.146.154.3)
[10:47:55] *** Joins: gnoo (~gnoo@user/gnoo)
[10:48:16] <geirha> ah wait, it wouldn't work. As soon as coproc's stdin gets closed, the coproc gets killed
[10:49:52] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[10:50:47] *** Joins: mjbatty (~mjbatty@82.2.17.205)
[10:52:55] <geirha> hm, no, seems to work actually ...
[10:53:29] <geirha> http://ix.io/3vRf
[10:58:00] <geirha> mapfile out 2>&"${hold[1]}" < <(f)   # for a little less redirection gymnastics
[10:58:25] <geirha> though that could add error messages from mapfile into err
[10:58:28] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[10:58:54] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[10:58:58] *** Joins: fdan (~fdan@192.146.154.3)
[10:59:08] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 258 seconds)
[11:00:22] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 256 seconds)
[11:00:22] *** Lord_of_Life_ is now known as Lord_of_Life
[11:01:35] *** Joins: rendar (~rendar@user/rendar)
[11:01:51] <jmcantrell> geirha: i get: line 12: exec: {hold[1]}: not found
[11:02:07] <geirha> it's bash syntax
[11:02:22] <jmcantrell> i'm running it with bash
[11:04:04] <geirha> 42# coproc hold { :; }; exec {hold[1]}>&-
[11:04:06] <shbot> geirha: [1] 55
[11:04:06] <shbot> geirha: bash: exec: {hold[1]}: not found
[11:04:08] <geirha> 43# coproc hold { :; }; exec {hold[1]}>&-
[11:04:09] <shbot> geirha: [1] 55
[11:04:44] <geirha> arrays were probably not allowed in {}> before 4.3 then
[11:04:53] *** Joins: sazawal (~sazawal@122.161.170.192)
[11:05:26] <geirha> 42# coproc hold { :; }; fd=${hold[1]}; exec {fd}>&-
[11:05:27] <shbot> geirha: [1] 55
[11:05:35] <jmcantrell> i'm using 5.1
[11:05:46] <geirha> 51# coproc hold { :; }; exec {hold[1]}>&-
[11:05:47] <shbot> geirha: [1] 52
[11:06:37] <geirha> 5.1 was what I tested it with too.
[11:07:09] *** Joins: roadie` (~user@2a02:8108:ec0:1427:e5cc:be78:1fb7:d763)
[11:08:43] <geirha> sure you don't happen to have two versions of bash installed? 4.x and 5.1?
[11:09:53] <alzgh> is `bc` builtin?
[11:10:01] <geirha> # type bc
[11:10:03] <shbot> geirha: bc is /bin/bc
[11:10:06] <geirha> no
[11:10:12] <jmcantrell> oof. shfmt is turning "exec {hold[1]}>&-" into "exec {hold[1]} >&-"
[11:11:23] <alzgh> this book of mine is full of horrendous errors
[11:11:27] <alzgh> says bc is builtin
[11:12:28] <emanuele6> fc is builtin :)
[11:12:53] <geirha> compgen -A builtin   are builtins
[11:13:29] *** Joins: lordrishav (~lordrisha@157.35.90.190)
[11:14:42] <alzgh> thanks emanuele6 didn't know about fc
[11:14:53] *** Quits: roadie` (~user@2a02:8108:ec0:1427:e5cc:be78:1fb7:d763) (Remote host closed the connection)
[11:14:56] <alzgh> thanks geirha this is completely new to me :)
[11:15:06] *** Joins: roadie` (~user@2a02:8108:ec0:1427:e5cc:be78:1fb7:d763)
[11:15:13] <emanuele6> it is not at all similar to bc though
[11:15:29] <alzgh> how do you keep track of these gems?
[11:15:49] *** Quits: roadie` (~user@2a02:8108:ec0:1427:e5cc:be78:1fb7:d763) (Client Quit)
[11:15:57] <alzgh> emanuele6 I know. checked it. It's useful with long commands
[11:16:44] *** Joins: mz` (~mz`@user/mz/x-8532539)
[11:17:44] <alzgh> `!!` is a shortcut I like. Subs the last executed command. `sudo !!` turns out very useful.
[11:18:49] <geirha> I turn history expansion off. I hate it when it triggers because I happened to have a ! somewhere in my line. "Oh sure, I totally meant to inject that sudo command from last week in the middle there"
[11:19:55] <pystardust> alzgh: what book are you using? try reading the bash manual from gnu. Its very well written and fun
[11:20:29] <emanuele6> pystardust: the book is Linux Command Line and Shell Scripting Bible by Richard Blum and Christine Bresnahan
[11:21:30] <pystardust> oh heard of it, how is the book apart from its bash contents?
[11:22:42] <alzgh> I'm supplementing the bash manual. For arithmetic expansion it teaches `$[]` and does not mention `$(())`. I'm not at that level to only read the manual for learning. I guess the book has been good some years back but isn't properly maintained anymore.
[11:23:03] <geirha> that immediately puts it in the garbage category
[11:23:06] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[11:23:35] <alzgh> I'm a novice and the amount of wrong it teaches baffles me.
[11:23:42] <pystardust> i can't find that in the manual but it works, didn't know it existed `$[`
[11:23:49] <llua> so why are you still reading it
[11:24:32] <geirha> $[] existed for a short while in the late 80s early 90s because POSIX intended to standardize it, but POSIX instead ended up with $(()), so $[] was promptly deprectaded, and was removed from the documentation almost three decades ago
[11:24:46] <alzgh> Do you know of a better book llua ? I need to commit myself to something.
[11:25:09] <llua> the guide in the topic
[11:25:13] <pystardust> geirha: interesting, where do you read up all these facts?
[11:25:37] <alzgh> llua which guide?
[11:25:38] <geirha> The bug-bash mailing list, mostly
[11:25:47] <pystardust> oh
[11:26:12] <alzgh> geirha that's quite old school I guess
[11:26:19] <llua> there is only one
[11:27:21] *** Quits: JanC (~janc@user/janc) (Remote host closed the connection)
[11:27:25] <geirha> The Bash Beginners Guide at tldp also teaches you to use the long deprecated $[] syntax. Suffice to say it's also in the garbage category. Probably where that bible got it from
[11:27:58] *** lordrishav is now known as LordRishav
[11:28:02] <emanuele6> alzgh: the mailing list is pretty active; there is a lame flamewar about the GROUPS special variable going on right now
[11:28:29] <alzgh> llua I don't know what you are referring to with "guide in the topic"
[11:28:51] <emanuele6> alzgh: http://mywiki.wooledge.org/BashGuide
[11:28:57] <geirha> https://lists.gnu.org/archive/html/bug-bash/2012-04/msg00034.html
[11:29:32] <pystardust> a small script I wrote to generate passwords in greek ( it be made to use any language by putting its unicode start and end range ) http://0x0.st/-J6a.bash
[11:30:23] <emanuele6> don't use for { } :( 
[11:30:35] <alzgh> geirha this is cool. like history unfolding.
[11:30:50] <pystardust> emanuele6: why not?
[11:30:56] <emanuele6> for { is just as bad as $[
[11:31:08] <pystardust> oh.. is it deprecated?
[11:31:19] <emanuele6> it is undocumented legacy syntax that was never standardised by posix
[11:31:24] <emanuele6> !for{
[11:31:24] <greybot> Bash's syntax allows { ;} in place of do;done in for loops. This is undocumented. Do not use. https://lists.gnu.org/archive/html/bug-bash/2020-08/msg00061.html
[11:31:41] <emanuele6> https://lists.gnu.org/archive/html/bug-bash/2020-08/msg00061.html
[11:31:54] <pystardust> emanuele6: thanks for letting me know, so its better I just use ; do ;done syntax
[11:32:16] <geirha> !$[
[11:32:16] <greybot> $[...] is an obsolete, deprecated syntax for math. Don't use it. Use $((...)) instead.
[11:32:35] <emanuele6> !forget $[
[11:32:36] <greybot> OK, emanuele6
[11:32:43] <geirha> !learn $[ $[...] is an obsolete, deprecated syntax for math. Don't use it. Use $((...)) instead. https://lists.gnu.org/archive/html/bug-bash/2012-04/msg00034.html
[11:32:43] <greybot> OK, geirha
[11:32:55] <emanuele6> :)
[11:32:57] <geirha> ninja edit!
[11:33:36] <pystardust> emanuele6: do these features die out (the ones that are undocumented) or will they lie around forever
[11:33:56] <geirha> they tend to stick around forever
[11:34:00] *** Quits: dre (~dre@2001:8003:c932:c301:e84:4d36:2dec:8e23) (Quit: Leaving)
[11:34:13] <llua> to be discovered by people then used because they think its cool
[11:34:22] <pystardust> also I noticed they don't hold well when nested
[11:34:27] <emanuele6> pystardust: they have existed for 30 years and never been documented or standardised; so they'll just lie around forever i guess
[11:34:47] <pystardust> hmmmm ill just stop using it, thanks
[11:35:05] <alzgh> $[] is mentioned in bash manual briefly
[11:35:24] <alzgh> it says it's deprecated and will be removed in the future
[11:35:28] <pystardust> really? which section
[11:35:29] <geirha> Not in the vanilla manual. Some distros patch the manual to include a note about it
[11:35:35] <pystardust> ah
[11:35:45] <geirha> debian being one of those idiots
[11:35:54] *** Joins: aakashi2001 (~aakashi20@103.61.255.59)
[11:35:59] <alzgh> yeah, my ubuntu has it
[11:36:01] <emanuele6> on my distribution it is not mentioned
[11:36:04] <alzgh> under Arithmetic Expansion
[11:36:32] <alzgh> I don't think anyone has t he balls to remove these features
[11:36:39] <alzgh> half the internet will stop working
[11:36:48] *** Joins: mz` (~mz`@user/mz/x-8532539)
[11:37:40] *** Quits: sgn (~sgn@user/sgn) (Read error: Connection reset by peer)
[11:37:42] <pystardust> to keep bash scripts portable which version should I be compatible with? 
[11:38:32] <geirha> !faq 61
[11:38:32] <greybot> https://mywiki.wooledge.org/BashFAQ/061 -- Is there a list of which features were added to specific releases (versions) of Bash?
[11:38:44] *** Joins: sgn (~sgn@user/sgn)
[11:39:07] *** Joins: JanC (~janc@user/janc)
[11:39:11] <geirha> pick a suitable number of years, 5 or 10, then pick the latest version at that year
[11:39:24] <pystardust> woah thats really cool: having those features documented in chronological order
[11:39:26] <geirha> unless you want portability with MacOS which is stuck on the ancient bash 3.2
[11:40:12] <geirha> apart from MacOS though, I doubt you'll find anything older than 4.2 in the wild
[11:40:14] <pystardust> shoot SRANDOM is so new
[11:40:56] <alzgh> is bash still actively developed?
[11:41:14] <geirha> yes
[11:41:18] <pystardust> # echo $SRANDOM
[11:41:19] <shbot> pystardust: 207270836
[11:41:33] <creme[m]> sorry for the little question... where can I find the source of greybot?
[11:41:42] <geirha> oh man, that random number looks so secure
[11:41:51] <pystardust> # echo $BASH_VERSION
[11:41:53] <shbot> pystardust: 5.1.8(1)-release
[11:41:53] *** Joins: Hax0r (~Hax0r@87.101.193.195)
[11:42:00] <geirha> !greybot
[11:42:00] <greybot> I'm a bot. I'm written in perl. My source, factoids, and stats are at http://wooledge.org/~greybot/ . See !help for a list of my commands. git mirror https://github.com/im14/greybot
[11:42:09] <creme[m]> THX :D
[11:42:56] <pystardust> geirha: yup its a 32 bit random number, any number from 0-(2^32-1), insanely random
[11:43:09] <pystardust> !SRANDOM
[11:43:09] <greybot> 32bit more random number
[11:43:10] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[11:43:37] <alzgh> man there is a lifetime of work behind that bot
[11:45:17] <emanuele6> # printf '%s\n' "$RANDOM$RANDOM$RANDOM"
[11:45:18] <shbot> emanuele6: 5331887315308
[11:45:58] <pystardust> emanuele6: that wouldn't be a uniform discrete distribution
[11:46:07] *** Joins: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it)
[11:47:08] *** Joins: pma153 (~pma153@bband-dyn74.95-103-78.t-com.sk)
[11:47:35] <pystardust> random only gives till 2^16, adding won't help as X+X won't be uniform
[11:47:47] <geirha> 2^15
[11:48:18] <pystardust> yup*
[11:49:47] <pystardust> is there a way to get a random number from /dev/urandom with pure bash?
[11:49:58] <pystardust> without using SRANDOM ofc
[11:54:49] *** Quits: odinsbane (~mbs@pat-pool-138.crick.ac.uk) (Ping timeout: 248 seconds)
[11:54:54] <geirha> # LC_ALL=C; for i in {0..3}; do IFS= read -rN1 -d '' 'r[i]'; done < /dev/urandom; printf %02x "${r[@]/#/\'}"
[11:54:55] <shbot> geirha: 3849f326
[11:54:57] *** Joins: xx (~xx@user/xx)
[11:55:10] <emanuele6> # rand=0; for (( i = 1; i <= 32; ++i )); do read -rn1 && (( rand += $(LC_CTYPE=C printf %d "'$REPLY") )); done < /dev/urandom; echo "$rand"
[11:55:11] <shbot> emanuele6: 4666
[11:55:29] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[11:55:37] <geirha> emanuele6: that'll treat newline and NUL as 00
[11:55:48] <emanuele6> right
[11:55:51] *** Joins: odinsbane (~mbs@pat-pool-138.crick.ac.uk)
[11:56:47] <emanuele6> # rand=0; for (( i = 1; i <= 32; ++i )); do IFS= read -rn1 byte || byte=$'\n'; (( rand += $(LC_CTYPE=C printf %d "'$byte") )); done < /dev/urandom; echo "$rand"
[11:56:49] <shbot> emanuele6: 4244
[11:58:22] <emanuele6> i always get a number between 3500-5000 so i'm probably missing something 
[11:59:32] <geirha> now it always treats newline and NUL as newline
[12:00:04] *** Joins: mjbatty_ (uid512825@id-512825.charlton.irccloud.com)
[12:00:37] <geirha> well, you're adding four numbers between 0 and 255 together, so the max value is 
[12:00:46] <geirha> # printf '%d\n' "$((255*4))"
[12:00:48] <shbot> geirha: 1020
[12:01:02] *** Joins: kulernil (~kulernil@gateway/tor-sasl/kuler)
[12:01:03] <geirha> ah no, you do it 32 times, not 4
[12:01:15] <geirha> so around 8k
[12:01:31] *** Quits: kuler (~kulernil@gateway/tor-sasl/kuler) (Remote host closed the connection)
[12:01:35] <pystardust> emanuele6: can any byte be printed as integer like that? if so what is the upper and lower bound of that
[12:03:31] <emanuele6> # LC_CTYPE=C printf '%d' $'\'\xff'; LC_CTYPE=C printf '%d' $'\'\x00'
[12:03:33] <shbot> emanuele6: 2550
[12:03:45] <emanuele6> # LC_CTYPE=C printf '%d ' $'\'\xff'; LC_CTYPE=C printf '%d' $'\'\x00'
[12:03:46] <shbot> emanuele6: 255 0
[12:04:30] *** Joins: mz` (~mz`@user/mz/x-8532539)
[12:04:41] <geirha> # LC_ALL=C; for i in {0..3}; do IFS= read -rn1 -d '' 'r[i]'; done < <(printf '\0\n \xff'); printf %02x "${r[@]/#/\'}"
[12:04:43] <shbot> geirha: 000a20ff
[12:05:16] <geirha> od -An -tx4 -N4 /dev/urandom
[12:05:18] <geirha> # od -An -tx4 -N4 /dev/urandom
[12:05:19] <shbot> geirha:  53f73a53
[12:05:36] <pystardust> geirha: something with pure bash, like using printf itslef
[12:05:41] *** Joins: sublim20 (~sublim20@user/sublim20)
[12:05:57] <geirha> # LC_ALL=C; for i in {0..3}; do IFS= read -rn1 -d '' 'r[i]'; done < /dev/urandom; printf %02x "${r[@]/#/\'}"
[12:05:58] <shbot> geirha: e17cc75c
[12:07:01] <emanuele6> # TIMEFORMAT='%R|%U|%S'; time { LC_ALL=C; for i in {0..3}; do IFS= read -rn1 -d '' 'r[i]'; done < /dev/urandom; printf %02x "${r[@]/#/\'}" ;}
[12:07:03] <shbot> emanuele6: 462fbf400.011|0.011|0.000
[12:07:18] <emanuele6> # TIMEFORMAT='%R|%U|%S'; time od -An -tx4 -N4 /dev/urandom
[12:07:20] <shbot> emanuele6:  544c81ee
[12:07:20] <shbot> emanuele6: 0.036|0.027|0.009
[12:07:26] <pystardust> why do you quote r[i], are arrays meant to be read like that?
[12:07:36] <geirha> so it won't match a file named ri
[12:07:49] <emanuele6> [i] is glob syntax for a class that contains i
[12:08:04] <emanuele6> !glob
[12:08:04] <greybot> Globs are shell patterns that can be used for matching strings or expanding pathnames: [[ $name = Bob* ]]; rm -- *.txt; see http://mywiki.wooledge.org/glob
[12:09:39] *** Joins: frostwork (~frostwork@user/frostwork)
[12:09:44] <jmcantrell> geirha: but why would it match a file named ri?
[12:10:00] <geirha> # touch ri; echo r[i]
[12:10:02] <shbot> geirha: ri
[12:10:19] <pystardust> geirha: isn't that argument the place for the name of the variable?
[12:10:31] *** Joins: karakedi (~eAC53C340@user/karakedi)
[12:10:33] <pystardust> I am so confused on how u made it an array like that
[12:10:51] <geirha> read is a simple command, as is echo. Any unquoted words will be subjected to pathname expansion
[12:10:51] <emanuele6> glob expansion always happens before running commands
[12:11:04] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[12:11:06] <jmcantrell> oh, i see
[12:11:16] <emanuele6> glob expansion and pathname expansion are synonymous 
[12:12:16] *** Joins: lordrishav_ (~lordrisha@157.35.244.75)
[12:13:32] *** Quits: LordRishav (~lordrisha@157.35.90.190) (Killed (NickServ (GHOST command used by lordrishav_!~lordrisha@157.35.244.75)))
[12:13:47] *** lordrishav_ is now known as LordRishav
[12:14:15] *** Joins: Camilo (~hugh@host-92-20-143-244.as13285.net)
[12:19:56] <pystardust> geirha: I get it now, thanks
[12:20:47] <jmcantrell> anyone use bats?
[12:21:02] *** Quits: Atque (~Atque@user/atque) (Ping timeout: 268 seconds)
[12:21:46] <geirha> Looked briefly at the source and chuckled a bit, but not actually used it
[12:22:02] <jmcantrell> geirha: that bad?
[12:24:23] *** Quits: absc (~absc@dynamic-adsl-94-34-201-166.clienti.tiscali.it) (Quit: Leaving.)
[12:25:45] *** Quits: straykitten (~straykitt@subs24-116-206-8-12.three.co.id) (Ping timeout: 248 seconds)
[12:25:48] <geirha> They're doing some weird stuff in there, but mostly I don't use it because automated unit tests are usually a waste of time
[12:28:46] <geirha> And if I do need automated tests, I'll just do it without weird frameworks like bats
[12:30:04] *** Quits: LordRishav (~lordrisha@157.35.244.75) (Quit: Konversation terminated!)
[12:30:44] *** Joins: shad (~shad@user/shad)
[12:30:57] *** Joins: mz` (~mz`@user/mz/x-8532539)
[12:37:10] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[12:37:49] *** Joins: mci64 (~mci64@62.96.68.145)
[12:38:05] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:38:15] *** Joins: straykitten (~straykitt@subs25-116-206-9-48.three.co.id)
[12:38:26] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[12:38:58] *** Quits: kurahaupo (~kurahaupo@pa49-195-39-191.pa.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[12:39:51] *** Quits: mci64 (~mci64@62.96.68.145) (Client Quit)
[12:40:22] *** Joins: mci64 (~mci64@62.96.68.145)
[12:40:24] *** Joins: LordRishav (~LordRisha@157.42.118.75)
[12:40:57] <alzgh> I like reading this book, comparing it with the manual and shit on its error.
[12:41:13] <alzgh> This motivates me to keep reading.
[12:41:21] <alzgh> Also helps me to better understand.
[12:41:35] <jmcantrell> geirha: thanks for confirming my suspicions
[12:41:46] <jmcantrell> alzgh: what book?
[12:42:50] <alzgh> jmcantrell Linux Command Line and Shell Scripting Bible by Richard Blum and Christine Bresnahan
[12:43:52] *** Joins: mikeliuk (~mikeliuk@109.249.187.96)
[12:45:35] *** Joins: earnestly (~earnest@user/earnestly)
[12:48:06] *** Joins: mci6425 (~mci64@185.242.190.95)
[12:48:07] *** Quits: fdan (~fdan@192.146.154.3) (Ping timeout: 246 seconds)
[12:48:15] *** Quits: mci6425 (~mci64@185.242.190.95) (Client Quit)
[12:49:49] *** Joins: mci6434 (~mci64@185.242.190.95)
[12:50:05] *** Quits: mci6434 (~mci64@185.242.190.95) (Client Quit)
[12:51:53] *** Quits: mci64 (~mci64@62.96.68.145) (Ping timeout: 248 seconds)
[12:52:15] *** Quits: mjbatty (~mjbatty@82.2.17.205) (Quit: Leaving)
[12:52:16] *** mjbatty_ is now known as mjbatty
[12:52:32] *** Quits: Hax0r (~Hax0r@87.101.193.195) (Quit: Leaving)
[12:53:32] *** Joins: mjbatty_ (~mjbatty@82.2.17.205)
[12:57:43] *** Quits: LordRishav (~LordRisha@157.42.118.75) (Quit: Connection closed)
[12:58:03] *** Joins: lordrishav (~lordrisha@157.42.118.75)
[12:58:04] *** Joins: mz` (~mz`@user/mz/x-8532539)
[12:59:47] *** Quits: lordrishav (~lordrisha@157.42.118.75) (Client Quit)
[13:00:07] *** Joins: lordrishav (~lordrisha@157.42.118.75)
[13:02:50] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.2)
[13:02:52] *** Quits: lordrishav (~lordrisha@157.42.118.75) (Client Quit)
[13:04:18] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[13:04:28] *** Joins: lavaball (felix@31.204.155.215)
[13:08:26] *** Quits: sharperguy_ (~sharpergu@2001:16b8:5c50:fa00:cc97:eba3:55df:9c03) (Ping timeout: 256 seconds)
[13:10:47] *** Quits: michigan (uid507982@id-507982.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[13:10:50] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 3.2)
[13:10:58] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 268 seconds)
[13:11:15] *** Joins: csm3105 (~csm3105@static-137-236-61-95.ipcom.comunitel.net)
[13:12:12] *** Joins: mci64 (~mci64@185.242.190.95)
[13:14:05] *** Quits: Gerula (~Gerula@user/gerula) (Ping timeout: 252 seconds)
[13:14:19] *** Joins: kurahaupo (~kurahaupo@pa49-180-106-121.pa.nsw.optusnet.com.au)
[13:14:49] <alzgh> is there any difference between `if (( $num1 < $num2 ))` and `if [[ $num1 -lt $num2]]` ?
[13:15:14] *** Quits: Kvothe (~weechat@user/elodin) (Ping timeout: 256 seconds)
[13:15:33] *** Joins: Lope (~lope@user/lope)
[13:15:43] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[13:15:46] <Lope> how can I run bash, and tell it where the profile file is?
[13:15:46] <geirha> there shouldn't be any difference, but the parsing will be slightly different so there might be some edge cases I'm not seeing at the moment
[13:15:53] *** Quits: aakashi2001 (~aakashi20@103.61.255.59) (Ping timeout: 248 seconds)
[13:16:03] <Lope> like /bin/bash -XYZ=/path/to/.profile
[13:16:11] <alzgh> thanks geirha
[13:16:12] <Lope> starting an interactive shell
[13:16:21] *** Joins: Kvothe (~weechat@user/elodin)
[13:16:51] <joo> is there an easy way to find out how a funciton in bash is defined? what is the source for it? i cant remember which include has the actual function and my grepsearch was of no  avail
[13:16:54] <geirha> Lope: it only reads .profile for login shells. interactive mode use .bashrc
[13:17:09] <geirha> alzgh: in either case I'd remove the dollars
[13:17:27] <Lope> geirha, sorry, I don't understand the differennce between interactive mode and a login shell.
[13:17:30] *** Quits: csm3105 (~csm3105@static-137-236-61-95.ipcom.comunitel.net) (Ping timeout: 256 seconds)
[13:17:31] *** Joins: chomwitt (~chomwitt@2a02:587:dc04:9a00:12c3:7bff:fe6d:d374)
[13:17:38] <geirha> !dotfiles
[13:17:38] <greybot> Set up your environment (PATH, LANG, EDITOR, ...) in ~/.bash_profile. Set up your bash shell (PS1, functions, shopts, ...) in ~/.bashrc. Then source .bashrc from .bash_profile. See <http://mywiki.wooledge.org/DotFiles>. For GUI logins, SEE YOUR DOCUMENTATION or ask your OS channel because they're all different and we don't know.
[13:17:39] <Lope> what mode is it when you simply run `/bin/bash`
[13:17:39] *** Quits: straykitten (~straykitt@subs25-116-206-9-48.three.co.id) (Read error: Connection reset by peer)
[13:17:58] <geirha> interactive non-login mode. It'll read .bashrc
[13:18:00] <izabera> # num1='123+(45' num2='67)'; (( $num1 < $num2 )) && echo '(( )) succeeds'; [[ $num1 -lt $num2 ]] || echo '[[ ]] fails'
[13:18:02] <izabera> alzgh: ^
[13:18:03] <shbot> izabera: (( )) succeeds
[13:18:03] <shbot> izabera: bash: [[: 123+(45: missing `)' (error token is "45")
[13:18:03] <shbot> izabera: [[ ]] fails
[13:18:22] <geirha> which you can override with --rcfile otherfile
[13:19:05] <Lope> geirha, okay, so I can run `/bin/bash --rcfile /path/to/.bashrc` ?
[13:19:20] <geirha> yes
[13:19:31] <Lope> geirha, thank you very much!!!
[13:21:17] <Lope> brb
[13:21:19] *** Quits: Lope (~lope@user/lope) (Quit: Leaving)
[13:21:59] <alzgh> geirha That's interesting. [[ looks more robust to me then. I don't understand why you say I should remove the dollar sign. Aren't you using them in your example?
[13:23:03] <geirha> # num1='123+(45' num2='67)'; (( num1 < num2 )); [[ num1 -lt num2 ]]
[13:23:05] <shbot> geirha: bash: ((: 123+(45: missing `)' (error token is "45")
[13:23:05] <shbot> geirha: bash: [[: 123+(45: missing `)' (error token is "45")
[13:23:15] <geirha> a little more sensible error messages
[13:24:23] <geirha> arithmetic contexts allow arbitrary code execution, so in either case you should always validate input before using it in arithmetic context, whether [[ -lt ]] or (( < ))
[13:24:56] <alzgh> O, I see.
[13:25:41] *** Joins: mz` (~mz`@user/mz/x-8532539)
[13:25:45] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[13:26:01] <geirha> with izabera's example, where it still used $num1 and $num2, (( $num1 < $num2 )) got expanded to (( 123+(45 < 67) ))  which turned out to be valid
[13:28:25] <geirha> if you make sure beforehand that both variables contain only digits with optional - or + as prefix, they should all behave the same
[13:31:46] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[13:34:56] <ormaaj> how do you print the job id of a pipeline? I can't make jobs output anything.
[13:35:02] *** Quits: waxfire (~waxfire@65.119.2.240) (Ping timeout: 268 seconds)
[13:35:32] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[13:36:09] <geirha> # { sleep 2 | sleep 2 & } 2>/dev/null; jobs; jobs -p
[13:36:10] <shbot> geirha: [1]+  Running                 sleep 2 | sleep 2 &
[13:36:10] <shbot> geirha: 51
[13:38:03] <ormaaj> hm. so that sets $! then too, but none of that works without the `&` ?
[13:39:11] <geirha> If I run sleep 10 | sleep 10 (without &) and suspend it with Ctrl+Z, jobs and jobs -p both list the pipeline for me
[13:40:18] <geirha> have you messed with set -m perhaps?
[13:40:35] *** Joins: TomyWork (~TomyLobo@p200300e80f06af0035559f99bfe69448.dip0.t-ipconnect.de)
[13:44:18] *** Joins: OnkelTem (~OnkelTem@user/onkeltem)
[13:46:09] <Soliton> joo: type func; declare -f func
[13:46:51] *** Joins: waxfire (~waxfire@65.119.2.240)
[13:46:59] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[13:48:07] <OnkelTem> Hi folks
[13:48:25] <OnkelTem> I need to add an optional argument when ivoking a program in the GitLab CI
[13:48:46] <OnkelTem> I think about adding something like:
[13:48:47] <joo> Soliton, thx, declare looks kindof like func, - they specify what is inside the func, but not where the devil it is coming from
[13:48:49] <OnkelTem> npm run release $(if [ `git branch --show-current` == 'develop' ]; then echo '-- --prerelease dev'; fi)
[13:49:01] <OnkelTem> Does it look good for you folks?
[13:49:01] <joo> Soliton, i mean declare looks like type :-)
[13:49:34] <Soliton> sure, that info is not saved.
[13:50:11] *** Joins: mz` (~mz`@user/mz/x-8532539)
[13:50:19] <joo> ok i guess i will have to insert a lot of breakpoints and do this the hard way then :-)
[13:50:35] <joo> maybe that will teach me a lesson or two about organizing my code better
[13:50:42] <Soliton> !PS4
[13:50:42] <greybot> The value of $PS4 is printed (after expansion) before each command bash displays during an execution trace. See man bash, under PROMPTING. # http://wiki.bash-hackers.org/scripting/debuggingtips#use_shell_debug_output Try PS4='+($?) $BASH_SOURCE:$FUNCNAME:$LINENO:'
[13:51:18] <geirha> OnkelTem: don't use `...`,  and == is not a defined operator for the [ command
[13:51:24] <joo> i got another question , it is related to running the nextcloud cmd file sync - it has -u and -p parameters for users and passwords, the problem with this is that when any user runs ps aux, they will see the params and thus the user and password, how can i go around this ?
[13:51:48] <OnkelTem> geirha: hi! yeah, I would like to make it all shells compatible
[13:51:48] <geirha> and I'd use a variable rather than having $() output multiple arguments
[13:51:55] <joo> Soliton, that looks pretty cool, i think i have been looking for this for a while ! thx
[13:52:23] <OnkelTem> ah, I see geirha. Two liners. Why not
[13:52:38] <OnkelTem> two-liner * :)
[13:52:45] <Soliton> joo: there is surely a sane way to provide the password as well.
[13:52:59] <geirha> if [ "$(git branch --show-current 2>/dev/null)" = develop ]; then set -- --prerelease dev "$@"; fi; npm run release -- "$@"
[13:53:29] <OnkelTem> :-/
[13:53:52] <OnkelTem> still reading :)
[13:54:05] *** Joins: julius_c (~julius_c@59.red-88-0-56.dynamicip.rima-tde.net)
[13:54:35] <OnkelTem> `set -- --prerelease dev "$@"` this one is totally new for me
[13:54:53] *** Joins: moha (uid506645@id-506645.brockwell.irccloud.com)
[13:55:05] <joo> Soliton, there is no mention of any other way in the manual :(
[13:55:12] <geirha> # set -- foo bar; printf 'args are %s\n' "$*"; set -- moar args "$@"; printf 'args are %s\n' "$*"
[13:55:13] <shbot> geirha: args are foo bar
[13:55:14] <shbot> geirha: args are moar args foo bar
[13:55:53] <geirha> it (re)sets the shell's arguments (or function's arguments if used in a function)
[13:56:32] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[13:59:14] <geirha> another way is   if [ "$(git...)" = develop ]; then dev=1; fi; npm run release -- ${dev:+--prerelease dev}
[13:59:42] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[14:00:10] *** Joins: besnn (~besnn@user/besnn)
[14:00:50] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 252 seconds)
[14:01:33] *** Joins: ztx (~ztx@user/ztx)
[14:02:45] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[14:05:57] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[14:08:00] *** Joins: lordrishav (~LordRisha@157.35.244.75)
[14:09:13] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[14:10:24] *** Quits: lordrishav (~LordRisha@157.35.244.75) (Client Quit)
[14:10:47] *** Joins: lordrishav (~LordRisha@157.42.118.75)
[14:11:04] *** Joins: nobody_ (~nobody@87.13.30.222)
[14:11:13] *** Quits: lordrishav (~LordRisha@157.42.118.75) (Client Quit)
[14:14:25] *** Joins: mz` (~mz`@user/mz/x-8532539)
[14:16:09] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 248 seconds)
[14:18:44] *** Joins: ztx (~ztx@user/ztx)
[14:20:56] *** Quits: Nact (~l@host-85-27-122-107.dynamic.voo.be) (Quit: Konversation terminated!)
[14:21:34] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[14:22:54] *** Quits: Fernando-Basso (~fernandob@2001:470:69fc:105::d1d4) (Quit: Reconnecting)
[14:23:08] *** Joins: Fernando-Basso (~fernandob@2001:470:69fc:105::d1d4)
[14:23:51] *** Quits: ztx (~ztx@user/ztx) (Quit: ztx)
[14:24:53] *** Joins: ztx (~ztx@user/ztx)
[14:28:50] *** Joins: reset (~reset@user/reset)
[14:38:19] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[14:43:38] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 256 seconds)
[14:44:12] *** Quits: ackyshake (~ackyshake@user/ackyshake) (Ping timeout: 256 seconds)
[14:44:30] *** Joins: ztx (~ztx@user/ztx)
[14:45:07] *** Joins: mz` (~mz`@user/mz/x-8532539)
[14:45:25] *** Quits: Strom (strom@fedora/strom) ()
[14:45:57] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[14:46:38] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[14:46:58] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[14:47:02] *** Joins: Strom (strom@fedora/strom)
[14:47:53] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[14:48:05] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[14:51:14] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[14:51:18] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[14:52:54] *** Joins: lordrishav (~LordRisha@157.35.244.75)
[14:59:41] <izabera> gnu/bsd xargs have a -o option that does </dev/tty before running the command
[14:59:51] *** Joins: gnooooo (~gnoo@user/gnoo)
[15:00:00] <izabera> i don't use xargs all that often and i only found out
[15:00:49] <izabera> i wonder if it would break anything if i made it the default 
[15:02:02] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 244 seconds)
[15:03:13] *** lordrishav is now known as LordRishav
[15:03:48] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[15:05:08] *** Quits: mci64 (~mci64@185.242.190.95) (Quit: Connection closed)
[15:05:37] <earnestly> til
[15:07:09] <pj> izabera: I don't see the option for GNU xargs in the man page, it recommends a different construct to accomplish the same thing.
[15:07:39] <izabera> uh i have xargs 4.8.0
[15:07:43] *** Joins: mz` (~mz`@user/mz/x-8532539)
[15:07:55] <izabera>        -o, --open-tty
[15:07:57] <izabera>               Reopen stdin as /dev/tty in the child process before executing the command.  This is useful if you want xargs to run an interactive application.
[15:08:15] <pj> I have 4.6.0
[15:08:22] <izabera> time to upgrade!
[15:09:15] <pystardust> I just found out that ${a[var]} is the same as ${a[$var]}, but I am not able to find this in the bash manual. The only statement that I found is this: Any  reference  to  a variable using a valid subscript is legal
[15:09:15] <pj> It has this:       xargs sh -c 'emacs "$@" < /dev/tty' emacs
[15:09:16] <pj>        Launches  the  minimum  number  of copies of Emacs needed, one after the other, to edit the files listed on xargs' standard input.  This example achieves the same effect as BSD's -o option, but in a
[15:09:16] <pj>        more flexible and portable way.
[15:09:54] <earnestly> Maximum emacs
[15:10:20] *** Quits: downunder (~downunder@110.151.122.76) (Quit: WeeChat 3.2)
[15:10:25] <earnestly> pj: 4.8.0 has -o at least, so they threw away that principle pretty rapidly
[15:10:31] <izabera> pystardust: the subscript in that case undergoes arithmetic expansion
[15:10:40] *** Quits: LordRishav (~LordRisha@157.35.244.75) (Ping timeout: 272 seconds)
[15:10:46] <izabera> it's like (($var)) vs ((var))
[15:11:39] *** Joins: mci64 (~x@185.242.190.95)
[15:12:27] *** Joins: LordRishav (~LordRisha@157.35.88.240)
[15:13:14] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[15:13:55] * earnestly frequently mistypes getfattr as getfatter
[15:14:14] <izabera> lol
[15:17:22] *** Quits: Helmholtz (~leibnizma@2001:470:69fc:105::3124) (Changing host)
[15:17:22] *** Joins: Helmholtz (~leibnizma@user/helmholtz)
[15:18:38] *** Quits: maledict1um (~crux@81.193.73.156) (Ping timeout: 268 seconds)
[15:20:01] *** Quits: alzgh (~alzgh@216.155.158.214) (Ping timeout: 246 seconds)
[15:20:07] *** Joins: maledictium (~crux@81.193.73.156)
[15:24:13] <Soliton> pystardust: "The subscript is treated as an arithmetic expression that must evaluate to a number."
[15:24:31] *** Joins: mz` (~mz`@user/mz/x-8532539)
[15:24:42] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 245 seconds)
[15:25:19] *** Quits: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz) (Quit: A random quit message)
[15:25:38] <pystardust> Soliton: oh yes that makes it clear
[15:25:49] <pystardust> thanks Soliton izabera 
[15:25:57] *** Joins: ztx (~ztx@user/ztx)
[15:26:00] *** Joins: elibrokeit (eschwartz@archlinux/bugwrangler/eschwartz)
[15:27:23] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[15:27:47] *** Quits: XV8 (~XV8@c-73-148-120-152.hsd1.va.comcast.net) (Quit: Leaving)
[15:27:47] *** Joins: ano (~weechat@user/ano)
[15:28:30] *** Quits: mikeliuk (~mikeliuk@109.249.187.96) (Quit: Connection closed)
[15:28:47] *** Joins: keypusher (keypusher@user/keypusher)
[15:29:46] *** Quits: nobody_ (~nobody@87.13.30.222) (Ping timeout: 258 seconds)
[15:29:59] *** Quits: mci64 (~x@185.242.190.95) (Quit: Leaving)
[15:30:16] *** Joins: mci64 (~x@185.242.190.95)
[15:30:33] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[15:32:32] *** Joins: sinaowolabi (~SinaOwola@102.134.114.19)
[15:35:03] *** Quits: mci64 (~x@185.242.190.95) (Client Quit)
[15:35:22] *** Quits: chomwitt (~chomwitt@2a02:587:dc04:9a00:12c3:7bff:fe6d:d374) (Ping timeout: 272 seconds)
[15:37:26] *** Quits: pma153 (~pma153@bband-dyn74.95-103-78.t-com.sk) (Ping timeout: 258 seconds)
[15:39:05] *** Joins: elf_fortrez (~elf_fortr@adsl-72-50-7-29.prtc.net)
[15:39:21] *** Joins: sublim20 (~sublim20@user/sublim20)
[15:40:19] *** Joins: mci64 (~x@185.242.190.95)
[15:40:25] *** Quits: ztx (~ztx@user/ztx) (Ping timeout: 248 seconds)
[15:41:27] *** Joins: ztx (~ztx@user/ztx)
[15:44:16] *** Joins: mz` (~mz`@user/mz/x-8532539)
[15:45:03] *** Quits: furrymcgee (~devuan@31.179.186.66) (Quit: leaving)
[15:46:15] *** Quits: shad (~shad@user/shad) (Ping timeout: 258 seconds)
[15:46:36] *** Joins: michigan_ (uid507982@id-507982.charlton.irccloud.com)
[15:46:59] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[15:51:09] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[15:55:00] *** Quits: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[15:57:13] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[15:58:12] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[15:58:26] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[15:58:34] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[15:59:30] *** Joins: jmcantre1 (~weechat@user/jmcantrell)
[16:00:26] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 258 seconds)
[16:02:17] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[16:03:07] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:9006:7dfb:984d:b090)
[16:05:04] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[16:05:26] *** Joins: arya_ (uid512841@id-512841.charlton.irccloud.com)
[16:06:15] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[16:07:00] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:908f:abc5:8c06:be43)
[16:07:46] *** Joins: jmcantrell (~weechat@user/jmcantrell)
[16:10:47] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 258 seconds)
[16:10:49] *** Quits: jmcantre1 (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[16:12:00] *** Quits: Bhavuk (~BTaneja@122.173.26.212) (Quit: Leaving)
[16:12:20] *** Joins: mz` (~mz`@user/mz/x-8532539)
[16:14:02] *** Joins: __jmcantrell__ (~weechat@user/jmcantrell)
[16:14:02] *** Joins: abhi (~abhi@182.70.233.123)
[16:14:08] <abhi> hu
[16:14:25] *** Quits: abhi (~abhi@182.70.233.123) (Quit: zzz)
[16:15:24] *** Joins: l3vi (~levi@c-73-152-195-178.hsd1.va.comcast.net)
[16:17:13] *** Quits: jmcantrell (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[16:18:06] <l3vi> When does wildcard expansion happen? Say, I have a folder with 5 files ending with .iso, and I type `cmd *.iso`, and the cmd takes an hour for each file. Would it only run on those original 5 files if another file was copied to that folder before the cmd finished?
[16:18:25] *** Quits: mz` (~mz`@user/mz/x-8532539) (Max SendQ exceeded)
[16:18:33] <Soliton> the calling shell expands the glob.
[16:18:50] <Soliton> cmd does not see the glob at all.
[16:19:00] <l3vi> thank you
[16:19:01] <pystardust> l3vi: as soon as u run the command the shell globs and gives the arguments to cmd and then the command runs with those args
[16:19:23] <l3vi> thanks :)
[16:22:55] *** Joins: seninha (~seninha@user/seninha)
[16:26:08] *** Parts: l3vi (~levi@c-73-152-195-178.hsd1.va.comcast.net) (thanks!)
[16:26:17] *** Quits: __jmcantrell__ (~weechat@user/jmcantrell) (Ping timeout: 248 seconds)
[16:26:53] *** Quits: ano (~weechat@user/ano) (Remote host closed the connection)
[16:27:15] *** Joins: ano (~weechat@user/ano)
[16:28:45] *** Quits: shaggysi0 (~shaggysi0@46.69.95.119) (Remote host closed the connection)
[16:28:57] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 248 seconds)
[16:29:48] *** Quits: winstonsmith (~winstonsm@109.201.152.164) (Remote host closed the connection)
[16:30:05] *** Joins: winstonsmith (~winstonsm@77.247.181.217)
[16:30:23] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Ping timeout: 244 seconds)
[16:30:41] *** Joins: mbatty (~mbatty@82.2.17.205)
[16:33:28] *** Joins: Liblx (~Alex@2a02:810c:280:59c:3581:6527:4f24:5729)
[16:36:20] *** Joins: zeden (~zeden@user/zeden)
[16:38:43] *** Joins: mz` (~mz`@user/mz/x-8532539)
[16:40:26] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[16:41:27] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Ping timeout: 258 seconds)
[16:41:54] *** Joins: Mudkip875 (~blackred@63.141.236.246)
[16:42:06] *** Quits: elf_fortrez (~elf_fortr@adsl-72-50-7-29.prtc.net) (Quit: Client closed)
[16:42:58] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[16:50:14] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:908f:abc5:8c06:be43) (Ping timeout: 252 seconds)
[16:51:53] *** Joins: alzgh (~alzgh@51.15.0.88)
[16:52:54] *** Joins: seninha (~seninha@user/seninha)
[16:54:16] *** Quits: moha (uid506645@id-506645.brockwell.irccloud.com) (Quit: Connection closed for inactivity)
[16:55:38] *** Joins: shad (~shad@user/shad)
[16:58:56] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:908f:abc5:8c06:be43)
[17:04:17] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[17:05:33] *** Joins: apos (~apos@gateway/tor-sasl/apos)
[17:05:47] *** gnooooo is now known as gnoo
[17:05:48] *** Quits: rando25902 (~sthk@c-98-240-233-64.hsd1.mn.comcast.net) (Quit: leaving)
[17:07:38] <alzgh> in conditionals `test` has the same effect as `[  ]`, or almost the same as I understand. But there's also `[[ ]]` . Considering that you have to escape some signs when using `[  ]` , is there any good reason to use `test` or `[  ]` instead of `[[ ]]` ?
[17:08:33] <geirha> not really, which is why we recommand not using test/[ in bash
[17:08:37] <geirha> !tests
[17:08:37] <greybot> Use [[ .. ]] for testing strings or files, (( .. )) for testing numbers, and ''if ..'' for testing commands. Do *NOT* use [ .. ] in bash (only in sh). See <http://mywiki.wooledge.org/tests> and <http://wiki.bash-hackers.org/commands/classictest>. Difference between [ and [[: <http://mywiki.wooledge.org/BashFAQ/031>
[17:09:59] *** Quits: mongy (~mongy@user/mongy) (Quit: WeeChat 3.2)
[17:10:49] <alzgh> I'm learning this stuff in my shitty book :D. It's a good resource for learning what not to do.
[17:10:56] <alzgh> Thanks
[17:14:16] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[17:16:56] <alzgh> O man, I found another caveat, which you guys probably know already.
[17:17:13] <alzgh> # sort <(printf "sort\nSort\n")
[17:17:14] <shbot> alzgh: Sort
[17:17:14] <shbot> alzgh: sort
[17:17:55] <alzgh> this is different than my bash
[17:18:28] <geirha> it depends on locale
[17:18:54] <alzgh> # if [ sort > Sort ]; then echo "sort is greater"; else echo "Sort is greater"; fi
[17:18:56] <shbot> alzgh: sort is greater
[17:18:58] <geirha> # export LANG=en_US.UTF-8; printf '%s\n' sort Sort | sort
[17:18:59] <shbot> geirha: sort
[17:18:59] <shbot> geirha: Sort
[17:19:20] <alzgh> # if [[ sort > Sort ]]; then echo "sort is greater"; else echo "Sort is greater"; fi
[17:19:21] <shbot> alzgh: sort is greater
[17:19:33] <geirha> no try with LANG=en_US.UTF-8
[17:19:37] <geirha> *now
[17:20:28] <alzgh> # export LANG=en_US.UTF-8; if [ sort > Sort ]; then echo "sort is greater"; else echo "Sort is greater"; fi
[17:20:30] <shbot> alzgh: sort is greater
[17:21:06] <alzgh> # export LANG=en_US.UTF-8; if [[ sort > Sort ]]; then echo "sort is greater"; else echo "Sort is greater"; fi
[17:21:08] <shbot> alzgh: Sort is greater
[17:21:13] <Soliton> > is redirection
[17:21:22] <alzgh> o, SHIT
[17:21:28] <Soliton> in [[ it's lexical sort.
[17:21:34] <alzgh> in single bracket, I forgot
[17:21:57] <alzgh> my tests are wong :D
[17:22:07] <alzgh> forgot to escape in single bracket
[17:23:11] <geirha> # printf '%s\n' aa bb cc | LC_COLLATE=en_US.UTF-8 sort | paste -s
[17:23:12] <shbot> geirha: aa      bb      cc
[17:23:18] <geirha> # printf '%s\n' aa bb cc | LC_COLLATE=nb_NO.UTF-8 sort | paste -s
[17:23:19] <shbot> geirha: bb      cc      aa
[17:23:35] <Soliton> crazy norwegians
[17:24:08] <geirha> We got bigger alphabet!
[17:24:25] *** Quits: mci64 (~x@185.242.190.95) (Ping timeout: 248 seconds)
[17:24:36] <alzgh> what I wanted to show was that string comparison with [[ follows sort's behavior but with [ it isn't so.
[17:24:45] <alzgh> More reason to use [[
[17:24:59] <alzgh> but my presentation was flawed
[17:25:40] *** Quits: mbatty (~mbatty@82.2.17.205) (Quit: WeeChat 2.8)
[17:25:58] <Soliton> a better reason is that you can use </> naturally without escaping.
[17:26:22] <Soliton> pretty sure that is an extension to test anyway.
[17:26:59] *** Joins: sublim20 (~sublim20@user/sublim20)
[17:27:08] <alzgh> yes, I just read that [ and test should only be used in sh
[17:28:05] <geirha> now for some magic
[17:28:10] <geirha> # arr=(dd ee aa bb cc ff); asort arr; declare -p arr
[17:28:11] <shbot> geirha: declare -a arr=([0]="aa" [1]="bb" [2]="cc" [3]="dd" [4]="ee" [5]="ff")
[17:28:58] *** Joins: mbatty (~mbatty@82.2.17.205)
[17:29:11] <alzgh> :)
[17:29:19] <alzgh> I'm happy I understand this
[17:29:33] <alzgh> although I couldn't come up with it on the top of my head
[17:29:47] <pystardust> alzgh: its there is bash only for backward compatibility, no reason to use it when writing bash scripts
[17:30:19] <alzgh> pystardust you mean `[` and `test` right?
[17:30:32] <pystardust> yes
[17:30:38] *** Joins: mci64 (~x@185.242.190.95)
[17:30:38] <alzgh> OK
[17:31:02] *** Quits: mbatty (~mbatty@82.2.17.205) (Client Quit)
[17:32:42] *** Quits: julius_c (~julius_c@59.red-88-0-56.dynamicip.rima-tde.net) (Quit: Leaving)
[17:33:09] <alzgh> lately, when I look at some bash scripts I understand and it feels really good
[17:33:28] <alzgh> I know a few programming languages (kind of) but bash is the most mysterious of them all
[17:33:42] <alzgh> had never this feeling with other languages
[17:33:45] *** Quits: mci64 (~x@185.242.190.95) (Client Quit)
[17:33:52] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:908f:abc5:8c06:be43) (Ping timeout: 245 seconds)
[17:33:53] <alzgh> maybe when I learned the first language
[17:34:12] *** Joins: mbatty (~mbatty@82.2.17.205)
[17:34:44] *** Quits: mbatty (~mbatty@82.2.17.205) (Client Quit)
[17:35:45] *** Quits: ormaaj2 (~ormaaj2@user/ormaaj) (Quit: Client closed)
[17:36:19] *** Quits: LordRishav (~LordRisha@157.35.88.240) (Quit: WeeChat 2.8)
[17:36:26] <pystardust> geirha: when I use declare -a and get sting. Is there a way to initialize the variable with eval? or is there a better way?
[17:36:50] <pystardust> like a better way that doesn't use eval
[17:37:10] <geirha> just  arr=( arg1 arg2 ... )  no need for declare
[17:38:12] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.0.1)
[17:38:16] <pystardust> No my questions is, suppose i store the output of declare -p in a string, how do i set the variable again using this string?
[17:38:25] *** Joins: mci64 (~x@185.242.190.95)
[17:38:37] <geirha> ah, you eval
[17:38:54] <pystardust> no ther way?
[17:39:03] <geirha> the output of declare -p is intended to be evaled by bash, so it's safe
[17:39:25] <pystardust> oh, thanks
[17:41:00] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[17:42:29] *** Quits: seninha (~seninha@user/seninha) (Ping timeout: 252 seconds)
[17:43:16] *** Quits: mci64 (~x@185.242.190.95) (Client Quit)
[17:43:31] *** Joins: mci64 (~x@185.242.190.95)
[17:43:51] *** Joins: rando25892 (~sthk@user/rando25892)
[17:43:52] *** Joins: seninha (~seninha@user/seninha)
[17:44:00] *** Quits: pystardust (~pystardus@117.96.229.96) (Quit: detox)
[17:45:48] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[17:45:49] *** Quits: gnoo (~gnoo@user/gnoo) (Ping timeout: 244 seconds)
[17:47:30] *** Joins: mbatty (~mbatty@82.2.17.205)
[17:50:04] *** Quits: mci64 (~x@185.242.190.95) (Quit: Leaving)
[17:50:07] *** Quits: mbatty (~mbatty@82.2.17.205) (Client Quit)
[17:50:41] *** Joins: mci64 (~x@185.242.190.95)
[17:50:53] *** Joins: mbatty (~mbatty@82.2.17.205)
[17:50:59] *** Quits: mci64 (~x@185.242.190.95) (Read error: Connection reset by peer)
[17:52:11] *** Joins: mci64 (~x@185.242.190.95)
[17:53:05] *** Quits: mbatty (~mbatty@82.2.17.205) (Client Quit)
[17:53:28] *** Joins: nobody_ (~nobody@87.13.30.222)
[17:54:02] *** Joins: mbatty (~mbatty@82.2.17.205)
[17:55:21] *** Joins: dunpeal (~dunpeal@2001:470:69fc:105::3e80)
[17:58:33] *** Joins: LiftLeft (~LiftLeft@154.21.114.116)
[18:00:05] *** Quits: mbatty (~mbatty@82.2.17.205) (Quit: WeeChat 2.8)
[18:00:51] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:908f:abc5:8c06:be43)
[18:01:09] *** Joins: mbatty (~mbatty@82.2.17.205)
[18:04:14] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 256 seconds)
[18:07:27] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[18:07:37] *** Joins: zeden (~zeden@user/zeden)
[18:08:23] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[18:08:49] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[18:09:09] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[18:09:39] *** Joins: joshcom (~joshcom@2600:8800:a706:2b00:4692:e3ec:239c:8c8)
[18:13:35] *** Joins: Crescendo (~Crescendo@user/crescendo)
[18:15:44] *** Quits: mbatty (~mbatty@82.2.17.205) (Quit: WeeChat 2.8)
[18:16:47] *** Joins: sn1tch3r (~sn1tch3r@user/sn1tch3r)
[18:16:52] *** Quits: sn1tch3r (~sn1tch3r@user/sn1tch3r) (Remote host closed the connection)
[18:17:05] *** Joins: mbatty (~mbatty@82.2.17.205)
[18:17:44] *** Quits: joo (~joo@fsf/member/joo--) (Read error: Connection reset by peer)
[18:20:11] *** Joins: chomwitt (~chomwitt@athedsl-32301.home.otenet.gr)
[18:20:15] *** Joins: superboot (~agentgasm@user/superboot)
[18:20:40] *** Quits: MarderIII (~MarderIII@2001:985:e889:1:908f:abc5:8c06:be43) (Ping timeout: 272 seconds)
[18:21:22] *** Quits: mjbatty_ (~mjbatty@82.2.17.205) (Quit: Leaving)
[18:21:39] <superboot> Is there a way to capture the output of the time command? 
[18:21:55] <superboot> # time sleep 2 | grep '^real'
[18:21:59] <shbot> superboot: real: 0m2.019s, user: 0m0.028s, sys: 0m0.027s
[18:22:16] <Soliton> yes.
[18:22:20] <Soliton> !next
[18:22:20] <greybot> Another satisfied customer! Next please!
[18:22:36] <superboot> Ha ha. How?
[18:22:37] *** Joins: mjbatty_ (~mjbatty@82.2.17.205)
[18:22:40] *** Quits: alzgh (~alzgh@51.15.0.88) (Quit: Client closed)
[18:22:46] <Soliton> !time
[18:22:46] <greybot> time is a bash keyword. See ''help time''. There may also be a time command installed on the system, documented in ''man time'' -- see faq 86 to bypass bash's time keyword, or faq 32 to redirect the output of time to a file.
[18:23:00] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[18:23:07] *** Quits: mjbatty_ (~mjbatty@82.2.17.205) (Remote host closed the connection)
[18:23:14] <superboot> Soliton: Thank you very much. :)
[18:23:31] *** Joins: mjbatty_ (~mjbatty@82.2.17.205)
[18:23:51] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[18:24:32] *** Quits: mjbatty_ (~mjbatty@82.2.17.205) (Remote host closed the connection)
[18:24:50] *** Quits: mbatty (~mbatty@82.2.17.205) (Quit: WeeChat 2.8)
[18:24:55] *** Joins: mjbatty_ (~mjbatty@82.2.17.205)
[18:25:10] *** Quits: mjbatty_ (~mjbatty@82.2.17.205) (Remote host closed the connection)
[18:27:43] *** Joins: mjbatty_ (~mjbatty@82.2.17.205)
[18:29:01] *** Joins: gschanuel (~gschanuel@user/gschanuel)
[18:29:36] *** Quits: mjbatty_ (~mjbatty@82.2.17.205) (Client Quit)
[18:30:42] *** Quits: nobody_ (~nobody@87.13.30.222) (Remote host closed the connection)
[18:31:24] *** Joins: kill (~killown@user/killown)
[18:32:43] *** Joins: nobody_ (~nobody@87.13.30.222)
[18:33:07] <pj> !faq32
[18:33:07] <greybot> https://mywiki.wooledge.org/BashFAQ/032 -- How can I redirect the output of 'time' to a variable or file?
[18:41:20] *** Joins: mjbatty_ (~mjbatty@82.2.17.205)
[18:42:27] *** Joins: darkbit (~db@152.32.99.67)
[18:42:49] *** Joins: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi)
[18:43:10] *** arya_ is now known as arya
[18:43:49] *** Quits: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi) (Remote host closed the connection)
[18:44:11] *** Joins: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi)
[18:46:35] <dunpeal> Hi. I have a script `foo.bash` containing two lines: sleep 30; do-something
[18:46:40] <anddam> emanuele6: I was and ${1:-$HOME} in fact worked
[18:48:10] <dunpeal> Is there an elegant way to do this in the background, while directing all streams to /dev/null?
[18:49:11] <dunpeal> The key difficulty is that I need both commands to run in the same way (background and >/dev/null). I may add commands later as well.
[18:49:32] <twkm> run the script in the background.
[18:50:12] *** Joins: vmeson (~rmacleod@198-48-226-187.cpe.pppoe.ca)
[18:50:20] <twkm> i tend to prefer screen over discarding output.
[18:51:00] *** Joins: alzgh (~alzgh@51.15.0.88)
[18:52:18] <dunpeal> twkm: it's something I use often throughout my development cycle, so I want the invocation to be as simple and short as possible.
[18:52:20] *** Joins: aeadio (~aead@ec2-52-2-178-231.compute-1.amazonaws.com)
[18:54:33] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 248 seconds)
[18:54:52] *** Quits: aead (~aead@pool-96-232-187-142.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[18:56:55] <Soliton> f() { foo "$@" >/dev/null 2>&1; }
[18:57:14] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Remote host closed the connection)
[18:57:15] *** Joins: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net)
[18:57:20] <twkm> if sleep is in the background do-something will run immediately, so you must find a way of not backgrounding the sleep.
[18:57:26] <Soliton> or bind a key to it.
[18:57:28] *** Joins: adanwan (~adanwan@gateway/tor-sasl/adanwan)
[18:58:04] <ormaaj> I imagine screen was absolute godsend prior to the ubiquitous homogenization of terminal emulators.
[18:58:40] <CrtxReavr> screen is spiffy. . .. reptyr is a godsend.
[18:59:01] <ormaaj> hard to fully appreciate what it really does these days.
[18:59:04] <CrtxReavr> And I've only fairly recently learend of its existance.
[18:59:09] <Soliton> why would you run stuff outside of screen?
[19:01:02] *** Joins: ChmEarl (~chmearl@user/chmearl)
[19:01:10] <CrtxReavr> Well, I like to set a terminal title, but screen can mess with that.
[19:01:47] <ormaaj> reptyr is just a gross ptrace bodge like all non-debugging ptrace bodges. 
[19:02:06] <CrtxReavr> Um. . . no.
[19:02:12] <CrtxReavr> Not sure what gives you that idea.
[19:02:36] <Soliton> !reptyr
[19:02:36] <greybot> ptrace-based hack that forces modification of a process's controlling terminal. https://github.com/nelhage/reptyr
[19:02:51] *** Quits: mci64 (~x@185.242.190.95) (Quit: Leaving)
[19:03:10] *** Joins: mci64 (~x@185.242.190.95)
[19:03:34] <ormaaj> oh the OS / API doesn't do useful thing? Should I fix that? Nah, ptrace bodge.
[19:04:58] *** Joins: zebrag (~chris@user/zebrag)
[19:05:14] <CrtxReavr> Once more. with feeling. . . Linux is not the entire universe.
[19:05:30] <CrtxReavr> So reptry.
[19:07:44] *** Quits: besnn (~besnn@user/besnn) (Ping timeout: 252 seconds)
[19:09:27] *** Joins: terabyte (~terabyte@27.176-105-213.static.virginmediabusiness.co.uk)
[19:09:37] <dunpeal> I thought people liked tmux more than screen nowadays...
[19:09:49] *** Quits: terabyte (~terabyte@27.176-105-213.static.virginmediabusiness.co.uk) (Client Quit)
[19:10:03] *** Joins: terabyte (~terabyte@27.176-105-213.static.virginmediabusiness.co.uk)
[19:10:14] *** Joins: travisghansen (~travisgha@192.74.130.86)
[19:10:30] *** Quits: mci64 (~x@185.242.190.95) (Ping timeout: 268 seconds)
[19:11:04] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Ping timeout: 244 seconds)
[19:11:49] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[19:11:50] *** Joins: cdown_ (~cdown@163.114.131.1)
[19:12:00] <dunpeal> Soliton: I don't want to have a permanent global function + an executable.
[19:13:04] <twkm> so hiding complexity in a script is okay but not if it involves an executable?  weird.
[19:13:14] <Soliton> what's a permanent global function?
[19:13:27] <dunpeal> The `f()` you suggested.
[19:13:40] <terabyte> hey, trying to use xargs but passing it to a script doesn't seem to work, but echo does, any ideas? https://gist.github.com/danielburrell/f240829f29369bc5e0869a9b42a0623a
[19:13:42] <CrtxReavr> dunpeal, many do. . . but I've used screen for literally decades and am very comformtable with its CLI & hotkeys.
[19:13:49] <dunpeal> In your solution, I'd have both a `foo.bash` executable, and a global function `foo()` calling it.
[19:14:01] <dunpeal> CrtxReavr: 
[19:14:13] <Soliton> i don't know why you want both but you can, sure.
[19:14:22] <dunpeal> CrtxReavr: I'm the same way, using screen for decades.
[19:14:37] <dunpeal> Soliton: I don't. I want to have `foo.bash` and that's it.
[19:14:48] *** Quits: cdown (~cdown@89.32.122.5) (Ping timeout: 268 seconds)
[19:14:55] *** cdown_ is now known as cdown
[19:14:59] <dunpeal> The only problem is that I want `foo.bash` to run entirely in the background with null outputs.
[19:15:18] <dunpeal> So I'm thinking of having a `bash -c <<<HEREDOC_OF_SCRIPT`
[19:15:36] <dunpeal> Inside `foo.bash`.
[19:15:52] <Soliton> and for some reason you cannot background and redirect in the script?
[19:16:09] <twkm> terabyte: so?  your openstack command doesn't like stdin being other than a terminal.  echo doesn't give a shit about stdin.
[19:16:43] <dunpeal> Soliton: I can, I need to background and redirect the entire script, including the sleep for example.
[19:16:47] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[19:16:59] <CrtxReavr> dunpeal, and 20+ years ago, screen was damned cool, vs. backgrounding tasks, and the sketchy process of brining them back to the forground.
[19:17:04] <twkm> terabyte: you might consider using expect to make openstack think a terminal is present.
[19:17:27] <alzgh> are there any gotchas in integers comparison with (( )) syntax?
[19:17:45] <dunpeal> CrtxReavr: no doubt, before tmux, screen was a must-have and the only choice.
[19:17:55] <terabyte> twkm i have control over the openstack script, it's a `docker run -ti ...` command 
[19:18:20] <CrtxReavr> There's been a few other screen-alikes along the way, though I'm pretty sure tmux was the only one to get any traction.
[19:18:46] <terabyte> twkm what i find strange though is that it took args in the first command fine, but is unhappy with the second
[19:19:00] *** Joins: besnn (~besnn@user/besnn)
[19:19:21] <Soliton> dunpeal: if you don't like functions then use just: { ...; } >/dev/null 2>&1 &
[19:19:38] <terabyte> twkm it works if i remove the `-i`
[19:19:39] <terabyte> thanks
[19:19:40] <dunpeal> @soli
[19:19:45] *** Quits: apos (~apos@gateway/tor-sasl/apos) (Quit: Bye!)
[19:19:48] <dunpeal> Sorry, Soliton thanks, I'll try that.
[19:20:07] <dunpeal> Sorry for all the aborted lines, I'm using a Matrix.org client for a change.
[19:21:29] <twkm> not throwing away data makes more sense, but meh.
[19:21:34] <dunpeal> BTW, any reason you prefer `>/dev/null 2>&1` to the shorter `&>/dev/null`?  Presumably everyone is using a new enough bash at this point.
[19:22:20] *** Joins: lonewulf` (~lonewulf@user/lonewulf)
[19:22:57] <Soliton> !&>
[19:22:57] <greybot> &> is a bash-specific feature. «&>file» is equivalent to «>file 2>&1». There is no &>> until Bash4. Use «>>file 2>&1» instead. We recommend not using &> or &>> in scripts, because it will break some valid scripts (see !badredir), and is an unintuitive syntax for beginners.
[19:24:28] <dunpeal> OK sure, though I'd be surprised if anyone is using Bash < 4.0
[19:24:35] *** Joins: rustyshackleford (uid236774@id-236774.brockwell.irccloud.com)
[19:24:38] <twkm> alzgh: it will chase indirection, which can be nice, but can be surprising too.
[19:25:18] <alzgh> twkm what will chase indirection?
[19:25:26] <twkm> (())
[19:25:35] <twkm> by now most should be using 5.0 or later, but macos still exists with its 3.2.
[19:25:36] <alzgh> O
[19:26:29] <twkm> # foo=bar bar=4 ; ((foo++)) ; echo $foo
[19:26:30] <shbot> twkm: 5
[19:26:38] <Soliton> # var1=var2 var2=var1; ((var1))
[19:26:40] <shbot> Soliton: bash: ((: var2: expression recursion level exceeded (error token is "var2")
[19:27:11] <dunpeal> OK, this is odd. When I have in `foo.bash`: { sleep 30; do-something; } >/dev/null 2>&1
[19:27:12] <dunpeal> + &
[19:27:26] <dunpeal> `do-something` happens immediately.
[19:27:31] *** Joins: joo (~joo@80-62-116-190-mobile.dk.customer.tdc.net)
[19:27:31] *** Quits: joo (~joo@80-62-116-190-mobile.dk.customer.tdc.net) (Changing host)
[19:27:31] *** Joins: joo (~joo@fsf/member/joo--)
[19:27:52] <twkm> handy, sometimes.  surprising, sometimes -- once you get used to it it isn't as surprising,
[19:28:08] <e36freak> dunpeal: what is the actual code?
[19:28:23] <dunpeal> However, when I do { sleep 30 && do-something; } it waits and then runs `do-something`. Why?  I'd expect it to wait in both cases.
[19:28:46] <alzgh> OK, thanks. I'm gonna keep that in mind. Probably need to come back to it when I learned some more.
[19:28:59] <e36freak> dunpeal: it will. there's more to what you have going on
[19:29:18] <dunpeal> Thanks, I'll debug this then.
[19:29:20] <dunpeal> You seem to be right.
[19:30:23] <alzgh> twkm (( integer comparison is available in bash 5.0 and higher, you said, did I get that right? (apart from the indirection thing)
[19:31:32] <Soliton> !faq version
[19:31:32] <greybot> https://mywiki.wooledge.org/BashFAQ/061 -- Is there a list of which features were added to specific releases (versions) of Bash?
[19:32:03] <Soliton> "2.0 (1996)"
[19:32:25] <dunpeal> Solved it, thanks guys.
[19:32:58] <alzgh> man, I should get used to using that wiki more.
[19:33:02] <alzgh> thanks
[19:35:45] <twkm> re bash 5.0, i was saying that most would be using 5.0 were it not for macos using 3.2.
[19:39:57] <alzgh> yeah, sorry, I got things confused :)
[19:40:20] *** Joins: cjohnson (~cjohnson@li133-72.members.linode.com)
[19:41:11] *** Joins: cdown_ (~cdown@89.32.122.5)
[19:44:02] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 252 seconds)
[19:44:08] *** cdown_ is now known as cdown
[19:47:36] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Quit: ZNC 1.8.2 - https://znc.in)
[19:47:45] *** Quits: OnkelTem (~OnkelTem@user/onkeltem) (Ping timeout: 258 seconds)
[19:47:56] *** Joins: drd (~drd@93-39-151-19.ip76.fastwebnet.it)
[19:50:24] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:51:15] *** Joins: mongy (~mongy@user/mongy)
[19:53:31] <cjohnson> What is the appropriate way, in a script that has `set -euo pipefail` at the top (I know I know), to write a variable that has a part of a curl command and then later call that variable as a command?
[19:53:35] <cjohnson> Example:
[19:53:50] <cjohnson> CURL_CMD="curl -H '...foo' https://bar.com/"
[19:54:05] <cjohnson> VALUE=$(${CURL_CMD}some/base/url)
[19:54:39] <cjohnson> or e.g. while ! ${CURL_CMD}/some/other/url; do
[19:55:02] *** Quits: michigan_ (uid507982@id-507982.charlton.irccloud.com) (Quit: Connection closed for inactivity)
[19:55:51] <llua> is using a function not possible?
[19:56:05] <llua> storing code is kinda their thing
[19:57:01] <cjohnson> Basically I'm inheriting a script where they define a CURL prefix at the top and then call it a thousand times below. I went to add some quoted args to the curl prefix and it wasn't happy about that
[19:57:02] <phy1729> !faq complex
[19:57:02] <greybot> https://mywiki.wooledge.org/BashFAQ/050 -- I'm trying to put a command in a variable, but the complex cases always fail!
[19:57:19] <cjohnson> I can probably refactor it entirely but was hoping to see if there was a simpler solution
[19:57:37] <phy1729> The simple solution is refactor to use a function
[19:58:02] <cjohnson> Yeah like I said, I was wondering if there were a simpler solution, since as I explain that isn't very simple at all
[19:58:07] <cjohnson> Thanks for the feedback though
[19:59:47] <Soliton> if you want literal quotes interpreted as code you need eval.
[20:02:15] <twkm> ewww, errexit, nounset an pipefail.
[20:02:25] <phy1729> and strings as code
[20:02:26] <cjohnson> I didn't write this script lol
[20:02:33] <cjohnson> I would have done it totally differently trust me
[20:02:38] *** Joins: michigan_ (uid507982@id-507982.charlton.irccloud.com)
[20:03:25] <cjohnson> So if I'm writing this as a function, I want to pass it a url suffix and then "any extra params" get passed through. Is this the way to write that?  function foo() { url=$(shift); curl -s -H '...' "https://whatever.com/${url}" "$@" }
[20:03:43] <phy1729> url=$1; shift; ...
[20:03:47] <cjohnson> foo '/v1/base/url' -k --whatever-else
[20:03:48] <cjohnson> Ah right
[20:05:50] <Liblx> Hello, is it possible to read from an event? I would like to use an 'if mouse_move ...' or 'if not logged off'. Is there any solution?
[20:06:27] <Soliton> what is an event?
[20:06:50] <CrtxReavr> bash may not be a good choice if you're worried about mouse movement.
[20:08:25] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[20:08:47] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[20:08:55] <Liblx> if not I'll use python. no problem.
[20:09:23] *** Joins: milkt_ (~debian@gateway/tor-sasl/milkt)
[20:09:27] <Liblx> I thought that maybe there's any variable showing activity.
[20:09:29] *** Quits: milkt_ (~debian@gateway/tor-sasl/milkt) (Client Quit)
[20:09:50] <Liblx> So, maybe by watching for new processes starting.
[20:10:29] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Ping timeout: 244 seconds)
[20:11:14] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[20:11:40] <twkm> with bash you know if you stat a process.  if you would bash watch for a program to materialize as other than its own child, then no it doesn't do that.
[20:13:53] <Liblx> okay, thanks for the help!
[20:17:18] *** Joins: docmax_ (~docmax@dynamic-095-116-052-131.95.116.pool.telefonica.de)
[20:17:23] *** Quits: shad (~shad@user/shad) (Quit: WeeChat 3.0)
[20:18:17] *** Quits: sinaowolabi (~SinaOwola@102.134.114.19) (Ping timeout: 248 seconds)
[20:18:46] *** Joins: sinaowolabi (~SinaOwola@102.134.114.19)
[20:20:13] *** Quits: sdu (~doo@185.44.146.64) (Remote host closed the connection)
[20:21:00] *** Quits: docmax (~docmax@dynamic-077-006-236-079.77.6.pool.telefonica.de) (Ping timeout: 272 seconds)
[20:22:01] *** Quits: gr33nR10t (~greenriot@host-82-57-201-34.retail.telecomitalia.it) (Ping timeout: 248 seconds)
[20:22:18] *** Joins: gr33nR10t (~greenriot@host-82-57-201-34.retail.telecomitalia.it)
[20:23:02] *** Quits: alzgh (~alzgh@51.15.0.88) (Quit: Client closed)
[20:30:03] *** Quits: lq820105 (~lq@180.167.42.2) (Read error: Connection reset by peer)
[20:32:33] *** Joins: lq820105 (~lq@116.228.78.184)
[20:34:36] *** Joins: MarderIII (~MarderIII@2001:985:e889:1:908f:abc5:8c06:be43)
[20:37:08] *** Joins: vysn (~vysn@user/vysn)
[20:38:25] *** Joins: alzgh (~alzgh@51.15.0.88)
[20:39:18] *** Quits: chomwitt (~chomwitt@athedsl-32301.home.otenet.gr) (Ping timeout: 268 seconds)
[20:40:22] *** Quits: kj (~kj@kj.aerisnetwork.net) (Quit: Textual IRC Client: www.textualapp.com)
[20:41:14] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:9006:7dfb:984d:b090) (Quit: Textual IRC Client: www.textualapp.com)
[20:41:20] *** Joins: frostwork (~frostwork@user/frostwork)
[20:46:03] <superboot> Does anyone have a good intro to the completion system (compsec)?
[20:46:44] *** Joins: pystardust (~pystardus@117.96.229.96)
[20:47:05] *** Joins: andydude (~arobbins@c-76-111-101-250.hsd1.md.comcast.net)
[20:48:56] *** Joins: tecnico (~tecnico@207.157.74.130)
[20:59:24] *** Joins: n4dir (~user@mue-88-130-56-193.dsl.tropolys.de)
[20:59:41] *** Quits: JanC (~janc@user/janc) (Read error: Connection reset by peer)
[20:59:58] *** Joins: JanC (~janc@user/janc)
[21:01:17] *** Quits: keypusher (keypusher@user/keypusher) (Remote host closed the connection)
[21:02:38] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:02:44] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[21:03:18] <alzgh> take back my question
[21:03:22] <alzgh> got an answer
[21:03:31] *** Joins: keypusher (keypusher@user/keypusher)
[21:21:30] *** Quits: totenkoph (~scythe@user/totenkoph) (Quit: totenkoph)
[21:22:43] *** Joins: ackyshake (~ackyshake@user/ackyshake)
[21:23:02] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[21:24:39] *** Quits: kurahaupo (~kurahaupo@pa49-180-106-121.pa.nsw.optusnet.com.au) (Quit: Quit)
[21:25:21] *** Quits: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi) (Read error: Connection reset by peer)
[21:26:38] *** Joins: fdan (~fdan@192.146.154.3)
[21:26:52] <alzgh> used `sed -r 's/ /\n/g' <(ls)` and later learned there's `ls -1`
[21:28:15] *** Joins: kurahaupo (~kurahaupo@pa49-181-237-197.pa.nsw.optusnet.com.au)
[21:28:53] *** Joins: julius_c (~julius_c@59.red-88-0-56.dynamicip.rima-tde.net)
[21:30:12] *** Quits: wolfgang (~wolfgang@101.174.170.3) (Remote host closed the connection)
[21:31:03] *** Quits: rendar (~rendar@user/rendar) ()
[21:32:16] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:32:37] *** Joins: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi)
[21:33:48] *** Joins: wolfgang (~wolfgang@101.174.170.3)
[21:35:14] <koollman_> alzgh: or, just ls. or don't use ls, and just use *, maybe
[21:35:34] *** Quits: alzgh (~alzgh@51.15.0.88) (Ping timeout: 246 seconds)
[21:35:54] *** Joins: jetchisel (jetchisel@user/jetchisel)
[21:37:04] *** Quits: cdown (~cdown@89.32.122.5) (Remote host closed the connection)
[21:38:04] *** Quits: makara (~sol@196.61.111.63) (Quit: WeeChat 2.8)
[21:42:19] *** Joins: lalitmee (~lalitmee@180.94.33.239)
[21:47:37] *** Joins: mci64 (~x@185.242.190.95)
[21:48:15] *** Joins: nvmd (~nvmd@user/nvmd)
[21:49:29] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 248 seconds)
[21:49:56] *** Joins: anton (anton@tloks.com)
[21:50:46] *** Joins: Crescendo (~Crescendo@user/crescendo)
[21:50:56] *** Joins: chomwitt (~chomwitt@athedsl-32301.home.otenet.gr)
[21:51:55] *** Quits: lalitmee (~lalitmee@180.94.33.239) (Quit: Konversation terminated!)
[21:52:12] *** Joins: lalitmee (~lalitmee@180.94.33.239)
[21:54:03] *** Quits: lalitmee (~lalitmee@180.94.33.239) (Client Quit)
[21:54:19] *** Joins: lalitmee (~lalitmee@180.94.33.239)
[21:55:03] *** Quits: mci64 (~x@185.242.190.95) (Remote host closed the connection)
[21:56:38] *** Joins: mci64 (~x@185.242.190.95)
[21:59:17] *** Quits: besnn (~besnn@user/besnn) (Quit: Leaving)
[22:00:25] *** Quits: mci64 (~x@185.242.190.95) (Client Quit)
[22:00:43] *** Joins: mci64 (~x@185.242.190.95)
[22:01:33] <kurahaupo> alzgh: wget etc | sudo dd of=filename.gpg
[22:02:52] *** Joins: nitro (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[22:04:19] *** Quits: mci64 (~x@185.242.190.95) (Client Quit)
[22:05:27] <kurahaupo> superboot: do you mean compgen?
[22:06:33] *** Joins: mci64 (~x@185.242.190.95)
[22:10:29] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Quit: WeeChat 3.2)
[22:10:46] *** Joins: Betal (~Betal@user/betal)
[22:13:21] *** Quits: autopsy (~autopsy@2600:8800:ff0d:400:802e:52a3:5fa9:b1e2) (Remote host closed the connection)
[22:13:34] *** Joins: aakashi2001 (~aakashi20@103.61.255.38)
[22:13:58] *** Joins: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f)
[22:14:49] *** Joins: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[22:15:31] *** Quits: AnAverageHuman (~AnAverage@user/anaveragehuman) (Ping timeout: 244 seconds)
[22:16:07] *** Quits: drd (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 268 seconds)
[22:16:56] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[22:17:40] *** Joins: AnAverageHuman (~AnAverage@user/anaveragehuman)
[22:20:02] *** Quits: frostwork (~frostwork@user/frostwork) (Quit: Leaving)
[22:22:09] *** Joins: howdoi (uid224@id-224.tooting.irccloud.com)
[22:23:45] *** Joins: lalitmee_ (~lalitmee@180.94.33.244)
[22:24:05] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431) (Quit: Leaving)
[22:24:30] *** Quits: lalitmee (~lalitmee@180.94.33.239) (Ping timeout: 272 seconds)
[22:27:49] *** Quits: Mudkip875 (~blackred@63.141.236.246) (Ping timeout: 268 seconds)
[22:28:06] *** Quits: TomyWork (~TomyLobo@p200300e80f06af0035559f99bfe69448.dip0.t-ipconnect.de) (Quit: Leaving)
[22:29:43] *** Joins: alzgh (~alzgh@216.155.158.214)
[22:34:49] *** Quits: smlavine (smlavine@sourcehut/user/smlavine) (Ping timeout: 248 seconds)
[22:37:22] *** Quits: fdan (~fdan@192.146.154.3) (Quit: Client closed)
[22:37:28] *** Joins: smlavine (smlavine@sourcehut/user/smlavine)
[22:39:09] *** Joins: TomyLobo (~TomyLobo@p200300e80f06af00b84b04bd244b8efb.dip0.t-ipconnect.de)
[22:41:57] *** Joins: YaoNai (~YaoNai@user/yaonai)
[22:43:24] *** Quits: lonewulf` (~lonewulf@user/lonewulf) (Quit: leaving)
[22:43:47] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:b82f:5054:db86:987b)
[22:43:47] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:b82f:5054:db86:987b) (Changing host)
[22:43:47] *** Joins: skapata (~Skapata@user/skapata)
[22:44:46] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c035:deeb:51be:5431)
[22:51:17] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[22:54:53] *** Quits: mr-red (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 252 seconds)
[22:55:46] *** Joins: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4)
[22:55:57] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 245 seconds)
[23:02:06] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[23:04:05] *** Joins: mr-red (~drd@93-39-151-19.ip76.fastwebnet.it)
[23:04:17] *** Quits: drd (~drd@2001:b07:a70:9f1f:1562:34de:f50f:77d4) (Ping timeout: 245 seconds)
[23:05:02] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[23:05:20] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:05:52] *** Quits: alzgh (~alzgh@216.155.158.214) (Ping timeout: 246 seconds)
[23:09:16] *** Quits: aakashi2001 (~aakashi20@103.61.255.38) (Quit: Leaving)
[23:12:14] *** Quits: sinaowolabi (~SinaOwola@102.134.114.19) (Ping timeout: 268 seconds)
[23:14:34] *** Joins: han-solo (~hanish@user/han-solo)
[23:18:34] <superboot> kurahaupo: Yes. 
[23:19:34] *** Quits: me-sudoer-dentne (~me-sudoer@2402:e280:3d25:53d:14e4:a16a:66ca:906f) (Quit: Leaving)
[23:21:40] *** Quits: mattil (~mattilinn@84-253-224-16.bb.dnainternet.fi) (Remote host closed the connection)
[23:22:56] *** Quits: unixman_ (~aunixman@209.165.134.7) (Quit: rm -rf /)
[23:23:49] *** Joins: unixman (~aunixman@209.165.134.7)
[23:24:25] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[23:26:45] *** Quits: joo (~joo@fsf/member/joo--) (Remote host closed the connection)
[23:26:48] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[23:27:22] *** Quits: mjbatty_ (~mjbatty@82.2.17.205) (Quit: Leaving)
[23:27:47] *** Joins: kingjulian (~kingjulia@41.1.139.138)
[23:28:54] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[23:31:01] *** Quits: lalitmee_ (~lalitmee@180.94.33.244) (Quit: Konversation terminated!)
[23:31:27] *** Joins: lalitmee_ (~lalitmee@180.94.33.244)
[23:32:04] *** Joins: Steeve (~steve@user/steeve)
[23:32:06] *** Quits: lalitmee_ (~lalitmee@180.94.33.244) (Client Quit)
[23:32:17] *** Quits: joshcom (~joshcom@2600:8800:a706:2b00:4692:e3ec:239c:8c8) (Ping timeout: 252 seconds)
[23:32:20] *** Quits: kingjulian (~kingjulia@41.1.139.138) (Ping timeout: 256 seconds)
[23:32:22] *** Joins: lalitmee (~lalitmee@180.94.33.244)
[23:33:05] *** Joins: joo (~joo@80-62-116-190-mobile.dk.customer.tdc.net)
[23:33:05] *** Quits: joo (~joo@80-62-116-190-mobile.dk.customer.tdc.net) (Changing host)
[23:33:05] *** Joins: joo (~joo@fsf/member/joo--)
[23:33:20] *** Joins: guest856 (~guest@host45.186-125-29.telecom.net.ar)
[23:33:41] *** Quits: sazawal (~sazawal@122.161.170.192) (Quit: Leaving)
[23:39:22] *** Quits: zro (~zro@user/zro) (Quit: WeeChat 3.2)
[23:39:43] *** Joins: zro (~zro@user/zro)
[23:43:01] *** Joins: alzgh (~alzgh@163.172.90.118)
[23:43:40] *** Quits: mr-red (~drd@93-39-151-19.ip76.fastwebnet.it) (Ping timeout: 268 seconds)
[23:47:08] *** Joins: greycat (~greg@209.142.155.49)
[23:49:06] *** Joins: han-solo_ (~hanish@103.104.46.13)
[23:49:16] *** Quits: han-solo (~hanish@user/han-solo) (Killed (NickServ (GHOST command used by han-solo_!~hanish@103.104.46.13)))
[23:49:41] *** Parts: han-solo_ (~hanish@103.104.46.13) ()
[23:50:34] *** Joins: han-solo (~hanish@user/han-solo)
[23:57:18] *** Quits: karakedi (~eAC53C340@user/karakedi) (Ping timeout: 258 seconds)
[23:57:43] *** Quits: kurtthemaker (~kurt@S010644a56e3e0ee9.cn.shawcable.net) (Quit: leaving)
