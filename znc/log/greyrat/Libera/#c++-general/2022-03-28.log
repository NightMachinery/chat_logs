[00:08:14] *** Joins: hfsoulz (~hfsoulz@user/hfsoulz)
[00:09:40] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[00:09:51] *** Joins: proller (~p@80.240.216.69)
[00:10:18] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[00:11:16] <johnny> i saw this piece of code and i don't understand what's going on with these two #define https://paste.centos.org/view/40be1569
[00:12:08] <johnny> as far as i can tell NRF_FICR->DEVICEADDR[1] is not something you can get at compile time
[00:12:28] *** Quits: CoderCharmander (~CoderChar@20014C4C12563000BCCDBFC417CDB7F0.catv.pool.telekom.hu) (Quit: Leaving)
[00:12:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[00:13:31] *** Joins: artok (~azo@mobile-access-bcee29-102.dhcp.inet.fi)
[00:17:13] *** Quits: sh00p (~z@89-253-71-70.customers.ownit.se) (Ping timeout: 250 seconds)
[00:18:35] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c)
[00:25:03] *** Quits: kill-animals (~anon@199.119.235.247) (Ping timeout: 256 seconds)
[00:34:07] <CarloWood> Does anyone have experience with yubikey? If so, should I buy it? Should I buy one with fingerprint?
[00:34:12] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 240 seconds)
[00:37:31] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[00:39:33] *** Quits: rond_ (~rond_@90.254.208.190) (Quit: Client closed)
[00:39:54] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c) (Remote host closed the connection)
[00:39:54] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 252 seconds)
[00:40:13] *** Quits: Terminus (~null@user/terminus) (Ping timeout: 240 seconds)
[00:40:27] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c)
[00:42:44] *** Joins: Terminus (~null@user/terminus)
[00:44:43] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c) (Ping timeout: 250 seconds)
[00:45:05] <Alipha> johnny: #define is literally just a text substitution. So line 5 is the same as utox8(NRF_FICR->DEVICEADDR[1], &name[0]);
[00:45:15] *** Joins: flooded (flooded@gateway/vpn/protonvpn/flood/x-43489060)
[00:45:33] <johnny> then what's the purpose?
[00:45:34] *** flooded is now known as _flood
[00:45:38] <johnny> why would you write it like that?
[00:46:43] <Alipha> johnny: seems to be for documentation purposes. To clarify that NRF_FICR->DEVICEADDR[1] is the first part of the serial number
[00:46:50] <johnny> ah ok
[00:46:55] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c)
[00:46:56] *** Quits: magla (~gelignite@d536552c.access.ecotel.net) (Quit: Stay safe!)
[00:47:07] <Alipha> johnny: in c++, or even c, I wouldn't use a #define for that
[00:47:59] <Alipha> auto& SERIAL_NUMBER_WORD_0 = NRF_FICR->DEVICEADDR[1];
[00:48:36] <johnny> well it is embedded, so i wonder about compiler oddities in regards to optimizing it out
[00:49:31] *** Joins: calcul0n_ (~calcul0n@2a01:e0a:150:6030:1db2:ff04:3e7a:526a)
[00:50:26] <Alipha> I would be highly surprised if the compiler generated different code for auto& vs #define with optimizations turned on. Though it seems common that people don't trust their compiler
[00:51:23] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[00:52:00] *** Quits: calcul0n (~calcul0n@2a01:e0a:150:6030:4012:c816:317c:3628) (Ping timeout: 252 seconds)
[00:53:02] <johnny> every bit counts when it comes to these little avr machines, and even though this code is in a "port" for another board, it'd make sense to keep it standardized
[00:53:37] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:8973:823e:aea0:3392)
[00:55:39] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[01:06:13] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[01:06:24] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[01:09:23] <kalven> CarloWood: i have a few
[01:10:44] <CarloWood> kalven: Can I use one to protect banking passwords in a way that if someone hacks root access to my PC they still can't get access to my banking account?
[01:11:44] <Shell> not unless your bank supports yubikeys
[01:12:12] <kalven> CarloWood: if your bank supports them then it'll protect you in case someone gets access to your password. if your PC gets hacked then it's game over regardless
[01:12:30] <CarloWood> Right now I have financial sites that I use just a password + Google authenticator. I'd like to change that to the need to possess a piece of hardware.
[01:13:54] <CarloWood> kalven: why would that be game over? I am afraid I don't understand how these things work :/.  Assuming the bank supports them (which I doubt)- then isn't it that they send a challenge that only the hardware on the key can answer, and only if I touch it?
[01:14:38] *** Quits: robod34 (Username@79.113.200.158) (Quit: Goe offline! ( http://marius.sucan.ro/ ))
[01:15:40] <Shell> if someone has access to your computer while you are logged into your bank, they can just... do whatever with your bank while you're logged in, technically. (this is a far less common attack than stealing your password + phishing your TOTP code and using it from elsewhere, mind.)
[01:16:16] <ville> Shell: still need to input a response code to commit a transaction at least on my bank
[01:16:37] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 240 seconds)
[01:16:50] <ville> and the response codes are generated by a separate piece of hardware, not my computer
[01:17:32] <CarloWood> True - if they have access they basically look at what I am doing and can type on my keyboard - so as soon as I login, they have access. However - all banking systems require me signing/authorizing everything that actually transfers money. So, even while I am logged in, they can't do anything when I don't touch the device.
[01:18:07] <Shell> anyway, CarloWood, yubikey does support OATH TOTP (the protocol Google Authenticator implements) if you configure it so, so if that's what your bank does, knock yourself out.
[01:18:31] <ville> one of these silly things: https://www.luminor.lv/sites/default/files/img/code-calculator_en.jpg
[01:19:23] <Raziel> ville, enlargement of codes ( ͡° ͜ʖ ͡°)
[01:19:38] <CarloWood> ville: yeah, I use that too for my real bank... Unlike some people who install an App from their bank and can do everything with a single touch - fingerprint scanner for example lol.
[01:19:40] <Shell> ville: fun. mine both boil down to me using Touch ID on my phone, heh.
[01:19:43] <CarloWood> Peopl are crazy.
[01:20:12] <CarloWood> I scan a colored code and type in numbers from a separate piece of hardware every single time :p
[01:20:29] <ville> Shell: yeah i am not going to involve my phone for banking
[01:20:31] <CarloWood> That thing also requires my bank pass to be inserted
[01:20:42] <Shell> technically I can pay 35 euros for a device which scans a colored code and blah blah blah but I don't see why tbh.
[01:21:19] <CarloWood> Shell: maybe that's cause you don't have any money? :p
[01:21:46] <Shell> CarloWood: I do have quite a bit of money. :p
[01:22:00] <Shell> it has yet to be stolen.
[01:22:21] <CarloWood> Then it seems scary to keep access to all that money with just one fingerprint scanner (which aren't secure at ALL).
[01:22:43] <Raziel> CarloWood, usually you also need your password for any transaction
[01:22:51] <Raziel> fingerprint only gets you in to see your history and balance and shit
[01:22:53] <Raziel> on my bank, at least
[01:23:07] <Shell> Raziel: nope, my banks do not require password.
[01:23:11] <Raziel> welp :p
[01:23:52] <CarloWood> passwords are not secure either. Assume someone installs malware on your phone.. you installed the wrong thing. That's what you have to assume, of course; otherwise your money is probably secure.
[01:24:03] <Raziel> fair
[01:24:05] *** Joins: sbrothy (~sbrothy@192038132086.mbb.telenor.dk)
[01:25:39] <kalven> try to not get malware on your stuff in the first place
[01:26:31] <CarloWood> Sure, but how certain are you that that won't happen? $100,000 certain?
[01:27:05] <kalven> if this is a real concern then dedicate a machine to your banking
[01:27:54] <ville> ...or as an interim step use one of those calculator things that costs 0.
[01:28:21] <Shell> CarloWood: in order to do this an attacker would need to (a) steal my phone, (b) bypass touch id, (c) connect it to the internet and perform the transaction before I have remote-wiped it. I've not heard of this as an attack your average thief has the capability for yet.
[01:28:57] <Shell> also I don't have to be $100,000 certain, I have to be $2500 certain, that's my max daily amount I can transfer without going into a branch.
[01:29:08] <Shell> uhh, euros. :)
[01:29:12] <CarloWood> You mean one that is disconnected until I do banking? I suppose you reduce the risk, but if someone would have invisible access to my LAN - it wouldn't improve security that much. You still have to connect it and turn it on sometime.
[01:29:51] <InPhase> Shell: For touch ID to be secure, it's important to not carry your fingers around with you while outside with your phone.
[01:29:54] <CarloWood> Hmm, I'm pretty sure I can transfer 20,000 at a time.
[01:30:02] *** Joins: proller (~p@2a02:6b8:b081:b503::1:2e)
[01:31:21] <Shell> "Today's remaining online transfer limit is 2.300,00 € out of 2.500,00 €." :)
[01:31:31] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[01:31:58] <CarloWood> Probably more from stock exchange sites - they don't have limits - but they only transfer to your own bank account I guess.  Maybe the crypto that is managed by the crypto exchange is most vulnerable... they could be sent to another crypto account directly. But yeah, I don't see how anyone could do that even with root access to my PC
[01:32:21] <Shell> if you have crypto you're already assuming you have 0 money if you're smart :|
[01:33:38] <CarloWood> lol I do - I think my crypto investments are at 50% of what I put in? But yeah, don't invest what you can't lose.
[01:34:09] <Raziel> I mined 200k doge when it came out, then I sold it right before elon made it so it would've been worth about 20k instead of 2k
[01:34:14] <Raziel> I am not good at this
[01:34:24] <johnny> it's not like you could have predicted it
[01:34:33] <Raziel> true
[01:34:38] <Raziel> still, sucks a bit :p
[01:35:04] <johnny> elon musk is a chaos monkey, so who knows what'll happen
[01:35:15] <CarloWood> It's not just a gamble - you play against players that OWN the market. So, they best thing is to never buy or sell.  Well, buy once and then sit on it.
[01:36:22] <CarloWood> I did some day trading in a distance past... that worked pretty damn well. Until it didn't.
[01:36:35] <Shell> gambling is fun lol
[01:36:36] <Raziel> yeah after that I pretty much just put it all in staking and I'll check on it in another two years or so
[01:37:29] <CarloWood> I currently only have gold and oil... I'm not saying I saw the war coming, but yeah.
[01:37:43] <CarloWood> The big question is now: when to sell?
[01:37:53] <paule32> hello, i have following code:  https://dpaste.com/BQ8599EKR
[01:38:15] <Raziel> well the gold, idk if you ever wanna sell it unless you actually need the cash right now
[01:38:19] <paule32> give it a way, to elegant fill the vectors with default values
[01:38:21] <Raziel> oil is a bit trickier
[01:39:06] <Raziel> paule32, that's a lot of vectors
[01:39:11] <paule32> yes
[01:39:24] <Raziel> you can inline init them?
[01:39:31] <CarloWood> std::vector< HelpNDocAPI > HndUtils = {{ "aaa", "bbb" }, { ... }, ... };  doesn't work?
[01:39:36] <Raziel> yeah, like that
[01:39:46] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 272 seconds)
[01:39:50] *** Quits: jsbach (~jsbach@2a01:c23:60ca:b800:c6e7:dc2f:74ea:1ca9) (Ping timeout: 252 seconds)
[01:40:21] <paule32> and when func_type is int ? then  {{ "aa", 42 }, ..   ?
[01:40:48] <paule32> okay
[01:40:50] <Raziel> sure
[01:41:03] <paule32> can i init the vectors, after declaration
[01:41:04] <paule32> ?
[01:41:16] <Raziel> yes, but why would you? :p
[01:41:31] <paule32> optic
[01:41:55] <paule32> i think with emplace_back ?
[01:42:41] <Raziel> emplace isn't really an initialization per se, but sure, you could achieve the same effect with it
[01:42:56] <paule32> or in the ctor:  HndUtils.push_back ?
[01:43:10] <Raziel> sure
[01:43:48] <CarloWood> paule32: https://wandbox.org/permlink/Bc0exbOZVQIhBgp3
[01:43:57] <paule32> HndUtils.push_back( {"aaa", "bbb"}, { }, ... }); ?
[01:44:06] <CarloWood> You said "elegant".
[01:44:17] <Raziel> I find inline init to be a lot cleaner than... those alternatives
[01:44:34] <Raziel> keeps the defaults all in one place, doesn't pollute your .cpp file or constructors with a shitload of default values
[01:44:39] <Raziel> makes em easier to find
[01:44:43] <Raziel> but, you do you
[01:45:10] <paule32> CarloWood: error
[01:45:20] <paule32> Raziel: inline ?
[01:45:28] <Raziel> yeah, like what CarloWood did
[01:45:31] <CarloWood> paule32: no error for me
[01:45:46] <CarloWood> https://gyazo.com/b73252264751e9004ad3f81c020d0416
[01:45:59] <Raziel> it does error if you tell it to use C++03 :^)
[01:46:00] <CarloWood> You have -std=gnu++2b too?
[01:46:31] <CarloWood> What is C++03? I don't think I was born yet then.
[01:46:31] *** Quits: proller (~p@2a02:6b8:b081:b503::1:2e) (Ping timeout: 260 seconds)
[01:46:43] <paule32> ah ok
[01:46:53] <Raziel> anything newer than 03 seems to work fine
[01:47:12] <paule32> thanks
[01:47:35] <Raziel> paule32, I hope for your sake that you're not actually compiling against 03 lol
[01:47:36] <InPhase> CarloWood: Comments that make me feel old...
[01:47:45] <CarloWood> Either use C++11 because you're an idiot working for an idiot company; or use C++17 because you're an old fart. But C++03? wtf - tell me where you live and I'll pay you a visit.
[01:47:45] <paule32> and what, when i have more than two fields, but only two fields are init ?
[01:48:12] <paule32> no i work with g++ 10
[01:48:26] <CarloWood> because?
[01:48:26] <Raziel> CarloWood, I use C++20 because I can. but 17 is fine too :p
[01:48:31] <paule32> so think -stdc++=17
[01:48:51] <CarloWood> -std=c++17
[01:48:59] <paule32> ehm yes
[01:49:29] <InPhase> CarloWood: I have plenty of C++03 code, because C++11 was only stable about 9 years ago, and lots of my code predates that and has not undergone enough maintenance to be worth updating.
[01:50:31] <Raziel> InPhase, I have updated an entire pre-11 codebase to work fine on 20 with pedantic/no-permissive. fun on a bun.
[01:50:33] <InPhase> CarloWood: Obviously I sure wouldn't use it on new projects.
[01:51:54] <CarloWood> InPhase: if you haven't compiled it in 10 years then it isn't worth much.  If you did, then you should have updated it :p.  I recently dropped all support for C++17. https://github.com/CarloWood/ai-utils-testsuite/commit/97339119d5d8011839116057256ec1a04ab364a0
[01:52:21] <CarloWood> Note the commit comment: C++20 is now mandatory.
[01:52:31] <CarloWood> *ALL* my projects use 'utils'.
[01:52:36] <InPhase> Dropping C++17 is pretty unwise.  C++20 is not finished yet in the major compilers.
[01:53:49] <InPhase> For production code you want to be careful using an incomplete implementation of a standard.  Some of those failures have historically been incomplete features that were behavior breaking in their incompleteness.
[01:54:32] <CarloWood> If anyone likes (chess) puzzles - well, not reallllly chess. It's more like logic puzzle on an infinitely large board.
[01:54:38] <CarloWood> I posted this today: https://chess.stackexchange.com/questions/39550/fastest-algorithm-to-give-mate-with-kr-vs-k-on-infinite-large-board-as-function
[01:54:59] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[01:55:34] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[01:58:39] <paule32> i get error:  https://dpaste.com/BGQXZD6JS
[02:01:27] <johnny> being unfinished in implementation doesn't seem like a good reason not to use it. however that behaviour breaking part.. now that's a reason
[02:01:28] <CarloWood> I wonder how one would write a C++ program to investigate my chess problem - since it is for a theoretically infinitely large board. Although, I suppose that for a board of 50 x 20 you already have enough space to find the correct algorithms.
[02:02:14] *** Joins: jsbach (~jsbach@dynamic-078-054-099-032.78.54.pool.telefonica.de)
[02:02:36] <johnny> uggh.. i don't wana do this
[02:02:39] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[02:03:05] <johnny> i can't seem to figure out how to get an instance of the thing i want, so i'm about to freakin subclass it instead :(
[02:03:26] <johnny> maybe one of the maintainers or users will help me figure out hw to get a proper instance
[02:03:51] <johnny> i see plenty of methods on how to get the file handle, but the file handle is not what i want :(
[02:04:02] <CarloWood> paule32: that's because your HelpNDocAPI is a class with private members and only a default constructor. Post a minimal example on wandbox and we'll fix it.
[02:06:21] <CarloWood> johnny: I don't know what your question is.
[02:06:31] <johnny> it's not a question :(
[02:06:42] <CarloWood> no code to show?
[02:06:45] <johnny> you couldn't answer it unless you knew the api
[02:07:03] <johnny> it's a full rtos, so i'm not tryin to ask anybody to spelunk it for me
[02:07:50] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:8973:823e:aea0:3392) (Quit: Quit)
[02:08:27] <paule32> CarloWood: https://ideone.com/1pOrtP
[02:09:26] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[02:12:09] <CarloWood> You mean: error: ISO C++ forbids declaration of ‘HrlpNDocAPI_Contsiner’ with no type
[02:12:35] <CarloWood> This is where I suggest people to choose a different career... usually.
[02:14:43] <CarloWood> I have to go to bed... nite nite.
[02:15:17] <sbrothy> i remeber a scientific american article with a guide for playing a mix of chess and go
[02:15:26] <CarloWood> (the reason for the new career is that a programmer should have a good idea for detail... you made to horrible typos there, and don't see it)
[02:15:41] <CarloWood> s/idea/eye/
[02:15:44] <paule32> https://ideone.com/58x6lc
[02:15:48] <Shell> two*
[02:15:50] <Shell> :p
[02:16:17] <Raziel> and didn't*
[02:16:19] <CarloWood> https://wandbox.org/permlink/rvUGvu5RZcjhsB4C
[02:16:20] <Raziel> perhaps
[02:16:48] <paule32> CarloWood: application error
[02:16:55] <Raziel> also, if you have issues with typos, just use a polite IDE?
[02:17:35] <CarloWood> paule32: nope https://gyazo.com/4b9a9bee5358647a27501260afcd6665
[02:17:59] <Raziel> like, everyone fat-fingers a key or such every once in a while
[02:18:24] <CarloWood> Sure, but then you see you made a typo when you get the error :P
[02:18:51] <CarloWood> I think I need on average 10 seconds per compile error - most of which is spent to decoding the error message.
[02:19:46] <Raziel> Right, or alternatively the IDE shows you the error before you even try to compile
[02:20:11] <CarloWood> I don't make that kind of typos :P
[02:20:20] <CarloWood> /home/carlo/projects/aicxx/linuxviewer/linuxviewer/src/vulkan/Application.cxx:355:49: error: 'pipeline_cache_filename' is a private member of 'task::SynchronousWindow'
[02:20:20] <CarloWood>     pipeline_factory_list_w->operator[](window->pipeline_cache_filename()).push_back(window);
[02:20:37] <paule32> this error:  https://dpaste.com/2CLR874YU
[02:21:01] <CarloWood> why on Earth are we back to dpaste.com?
[02:21:07] <CarloWood> What happened to wandbox?
[02:21:35] <paule32> i can not open wandbox
[02:21:44] <paule32> application error - script error
[02:24:23] <Shell> I would suggest you update your web browser to be compatible with websites made in the past decade. :p
[02:24:58] <CarloWood> https://ideone.com/Ca1Xui
[02:25:08] <CarloWood> now I am to bed for real
[02:25:49] <paule32> thx CarloWood
[02:26:01] <paule32> well sleeps
[02:32:17] <paule32> it works, now
[02:32:19] <paule32> thank you
[02:33:45] *** Quits: sbrothy (~sbrothy@192038132086.mbb.telenor.dk) (Ping timeout: 252 seconds)
[02:41:16] *** Joins: proller (~p@2a02:6b8:b081:b646::1:3c)
[02:42:01] *** Joins: pulse (~pulse@user/pulse)
[02:43:09] *** Joins: badone (~badone@209.132.189.152)
[02:44:32] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[02:44:40] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[02:44:40] *** ChanServ sets mode: +v npaperbot
[02:50:37] *** Quits: ivii (~ivan@user/ivii) (Remote host closed the connection)
[02:57:20] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:58:02] *** Quits: calcul0n_ (~calcul0n@2a01:e0a:150:6030:1db2:ff04:3e7a:526a) (Ping timeout: 260 seconds)
[02:59:53] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint struts into the sunset on the beach.)
[03:04:55] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[03:13:00] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[03:14:14] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[03:17:26] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Remote host closed the connection)
[03:19:05] *** Joins: seninha (~seninha@user/seninha)
[03:19:50] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[03:24:42] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c) (Remote host closed the connection)
[03:25:15] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c)
[03:28:57] *** Quits: Spirit532 (~Spirit532@user/Spirit532) (Killed (NickServ (GHOST command used by Spirit5326)))
[03:28:59] *** Joins: Spirit532 (~Spirit532@user/Spirit532)
[03:29:24] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[03:29:51] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c) (Ping timeout: 252 seconds)
[03:31:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[03:35:33] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[03:41:04] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c)
[03:43:40] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[03:49:35] *** Quits: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com) ()
[03:53:39] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[04:09:48] *** Quits: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro) (Ping timeout: 240 seconds)
[04:25:19] *** Joins: shailangsa (~shailangs@host86-162-150-212.range86-162.btcentralplus.com)
[04:25:26] *** Quits: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de) (Remote host closed the connection)
[04:34:13] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 240 seconds)
[04:36:45] *** Joins: seifeslimene (~seifeslim@102.156.202.190)
[04:44:21] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c) (Ping timeout: 256 seconds)
[04:47:53] *** Joins: pulse (~pulse@user/pulse)
[05:02:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[05:03:40] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c)
[05:08:25] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c) (Ping timeout: 268 seconds)
[05:10:05] *** Quits: seifeslimene (~seifeslim@102.156.202.190) (Ping timeout: 256 seconds)
[05:13:00] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[05:16:28] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c)
[05:29:13] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[05:29:41] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[05:31:19] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:36:07] *** Quits: emerent (~quassel@p200300cd5743c334ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[05:36:38] *** Quits: jose_ (~goose@111.199.80.15) (Ping timeout: 272 seconds)
[05:36:54] *** Joins: emerent (~quassel@p200300cd5743c33bba27ebfffed28a59.dip0.t-ipconnect.de)
[05:43:47] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[05:44:42] *** Joins: malloy (~jimery@116.30.222.122)
[05:55:35] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[05:58:17] *** Quits: jsbach (~jsbach@dynamic-078-054-099-032.78.54.pool.telefonica.de) (Ping timeout: 240 seconds)
[05:59:35] *** Joins: teepee (~teepee@openscad/teepee)
[06:02:37] *** Joins: Soni (~quassel@autistic.space)
[06:13:24] *** Quits: xuxx (~xuxx@86.228.71.37.rev.sfr.net) (Ping timeout: 240 seconds)
[06:18:36] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c) (Ping timeout: 240 seconds)
[06:20:20] *** Quits: sonic (~sonic@user/sonic) (Quit: WeeChat 3.3)
[06:20:34] *** Quits: Roughy (~mdaw45ns@user/roughy) (Quit: Meadow Fresh milk)
[06:25:59] *** Quits: eck (~root@user/eck) (Quit: PIRCH98:WIN 95/98/WIN NT:1.0 (build 1.0.1.1190))
[06:26:35] *** Joins: Inline__ (~Inline@p200300cd47094800372fcc81f701114e.dip0.t-ipconnect.de)
[06:27:04] *** Joins: eck (~root@user/eck)
[06:29:19] *** Quits: Inline (~Inline@p200300cd473c9e009f1d7d6dc4a648e3.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[06:32:31] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c)
[06:37:13] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c) (Ping timeout: 268 seconds)
[06:44:32] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[06:44:40] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[06:44:40] *** ChanServ sets mode: +v npaperbot
[06:50:58] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[06:53:30] *** Quits: Rayke (rayke@user/rayke) (Quit: WeeChat 3.4)
[07:05:56] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c)
[07:09:32] *** Joins: adeliktas9 (~adeliktas@i59F4DE4D.versanet.de)
[07:10:17] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c) (Ping timeout: 240 seconds)
[07:11:47] *** Quits: adeliktas (~adeliktas@i59F5FB20.versanet.de) (Ping timeout: 260 seconds)
[07:11:48] *** adeliktas9 is now known as adeliktas
[07:14:14] *** Joins: xiongxin (~Thunderbi@2409:8954:3814:5943:4c51:c061:a965:2878)
[07:14:41] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[07:18:36] *** Quits: xiongxin (~Thunderbi@2409:8954:3814:5943:4c51:c061:a965:2878) (Ping timeout: 240 seconds)
[07:23:26] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c)
[07:26:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:29:53] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[07:30:18] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[07:50:55] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 240 seconds)
[07:58:19] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[08:00:14] *** Joins: Hug-Animals (uid548360@id-548360.hampstead.irccloud.com)
[08:16:59] *** Quits: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it) (Read error: Connection reset by peer)
[08:17:14] *** Joins: sigma_ (~sigma@5.119.71.235)
[08:20:53] *** Quits: Hug-Animals (uid548360@id-548360.hampstead.irccloud.com) (Quit: Updating details, brb)
[08:21:01] *** Joins: Kill-Animals (uid548360@id-548360.hampstead.irccloud.com)
[08:21:54] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 252 seconds)
[08:23:32] <sigma_> hi, i have question : if i have 2mb file and i open it with fstream the memory  fill with 2mb? i want process big file like 1GB but with limited memory allocation. process file step by step with my bus size
[08:26:55] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c) (Ping timeout: 260 seconds)
[08:27:12] <ent58> it's totally possible to fill a buffer way smaller then your file and process each chunk piecemeal
[08:27:42] <ent58> I like tuning for the the method where you have a small buffer sized such that you can have two, do file i/o on one while processing the other
[08:31:50] <sigma_> ent58: i konw, i can do process with limited buffer but how?
[08:31:53] *** Joins: Burgundy (~NA@5-12-91-184.residential.rdsnet.ro)
[08:35:42] <ent58> well, you load a partial amount, say 32 MB of data
[08:36:04] <ent58> and then you either process it entirely, or when your user needs to view more, you "scroll" by loading more data
[08:36:30] <ent58> you just have to handle the case where a particular piece of your data is incomplete, split across two buffer events
[08:38:45] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[08:43:15] <thad_the_man> Anyone familar with GTK4? Does it have a better C++ interface?
[08:50:24] <kalven> doesn't gtkmm support it?
[08:51:20] <Kill-Animals> isnt gtk done in C? I've never used it.
[08:56:35] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c)
[08:57:01] *** Joins: Jupp_S (~quassel@ip-088-153-154-129.um27.pools.vodafone-ip.de)
[08:58:14] <kalven> it is
[08:59:14] *** Quits: badone (~badone@209.132.189.152) (Quit: ZNC 1.7.5 - https://znc.in)
[08:59:46] *** Joins: kaph (~kaph@net-109-116-124-149.cust.vodafonedsl.it)
[09:02:14] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[09:02:37] *** Joins: sonic (~sonic@user/sonic)
[09:02:46] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[09:05:45] *** Quits: talisein (~talisein@user/talisein) (*.net *.split)
[09:05:48] *** Quits: epony (epony@user/epony) (*.net *.split)
[09:05:49] *** Quits: Stryyker (~stryyke1@about/windows/staff/stryyker) (*.net *.split)
[09:05:49] *** Quits: kaichiuchi (uid547644@user/kaichiuchi) (*.net *.split)
[09:05:49] *** Quits: causative_ (~halberd@user/causative) (*.net *.split)
[09:05:49] *** Quits: rouji (~rouji@x0.at) (*.net *.split)
[09:05:49] *** Quits: TinoDidriksen (~TinoDidri@tinodidriksen.com) (*.net *.split)
[09:05:50] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (*.net *.split)
[09:05:50] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (*.net *.split)
[09:06:01] *** Joins: kaichiuchi (sid547644@user/kaichiuchi)
[09:06:28] *** Joins: TinoDidriksen (~TinoDidri@tinodidriksen.com)
[09:06:41] *** Joins: Stryyker (~stryyke1@about/windows/staff/stryyker)
[09:06:51] *** Joins: talisein (~talisein@user/talisein)
[09:06:55] *** Joins: causative_ (~halberd@user/causative)
[09:08:30] <Alipha> sigma_: opening a file doesn't automatically load it into memory. You only load into memory what you read. Well, that's not entirely true--fstream has an internal streambuf which holds a small buffer, but I'm guessing it's only like 4kb or around there
[09:09:12] *** Joins: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com)
[09:09:32] *** Joins: Guest6037 (epony@lz2.eu)
[09:10:12] *** Joins: rouji (~rouji@x0.at)
[09:10:15] <Alipha> sigma_: of course, the OS may end up loading/caching more than that in memory, but you have no control over that.
[09:12:13] <amosbird> Hello! What's the correct way of casting std::vector<std::string *>.data() into void ** ?
[09:13:18] <sigma_> Alipha: so you say fstream already has 4kb cache and if i open big file doesnt load total file?
[09:14:07] <Alipha> sigma_: correct
[09:14:25] <Alipha> amosbird: don't? Why do you want a void**?
[09:14:58] <thad_the_man> Alipha: Not even with memory mapped IO?
[09:16:33] <kalven> thad_the_man: memory mapped files are loaded on demand
[09:17:13] <amosbird> Alipha: It's used in some interface to only check nullptr of each element with type erasure
[09:19:28] <Alipha> amosbird: assuming sizeof(void*) == sizeof(std::string*), then you can just reinterpret_cast. I'm sure that's UB, but *shrugs*
[09:23:15] <amosbird> "I'm sure that's UB" Hmm, pointer size can be different?
[09:26:05] <Alipha> Unless it's changed in a more recent standard, the only requirement for object pointer sizes is that void* must be able to store any object pointer. That is, sizeof(T*) <= sizeof(void*)
[09:26:45] <Alipha> char* might also have that same requirement
[09:36:26] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[09:36:57] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[09:42:44] *** Quits: nq_ (~nq@2a02:2f08:e015:a900:541c:4edd:d976:8aa) (Ping timeout: 252 seconds)
[09:45:38] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[10:01:07] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c) (Ping timeout: 256 seconds)
[10:02:07] *** Quits: ravan_ (~ravan@user/ravan) (Ping timeout: 260 seconds)
[10:04:49] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c)
[10:07:25] *** Joins: calcul0n_ (~calcul0n@2a01:e0a:150:6030:1db2:ff04:3e7a:526a)
[10:11:10] <johnny> thad_the_man, gtkmm is pretty much it. i wonder how it is nowadays
[10:19:51] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:20:54] *** Quits: sigma_ (~sigma@5.119.71.235) (Quit: Konversation terminated!)
[10:23:52] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c) (Remote host closed the connection)
[10:24:03] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c)
[10:27:09] *** Quits: malloy (~jimery@116.30.222.122) (Ping timeout: 265 seconds)
[10:27:42] * thad_the_man sighsd. The last decent widget set was VCL.
[10:29:01] *** Joins: malloy (~jimery@116.30.222.122)
[10:36:45] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c) (Remote host closed the connection)
[10:37:18] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c)
[10:41:19] *** Joins: plastico (~plastico@neomutt/plastico)
[10:42:02] *** Joins: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl)
[10:42:12] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c) (Ping timeout: 260 seconds)
[10:44:33] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[10:44:40] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[10:44:40] *** ChanServ sets mode: +v npaperbot
[10:48:56] *** Quits: calcul0n_ (~calcul0n@2a01:e0a:150:6030:1db2:ff04:3e7a:526a) (Remote host closed the connection)
[10:51:21] *** Quits: ent58 (~ent58@rrcs-97-76-214-244.se.biz.rr.com) (Quit: Client closed)
[10:53:02] *** Joins: calcul0n (~calcul0n@2a01:e0a:150:6030:7d85:9901:c4f9:1225)
[10:53:58] *** Joins: xiongxin (~Thunderbi@117.136.33.130)
[10:54:49] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c)
[11:01:34] *** Joins: jsbach (~jsbach@2a01:c22:35df:5200:e30e:9d54:124d:b5be)
[11:10:27] <amosbird> Alipha: I see
[11:16:02] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[11:18:17] <paule32> hello
[11:18:29] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[11:19:08] <paule32> can it be, that the g++ 10 compiler generate hash strings (in the binary code) as result for optimzing things ?
[11:20:09] <paule32> this is in my code:
[11:20:11] <paule32> std::vector< std::string > HndUtils_FunctionNames = {
[11:20:19] <paule32> {"FilterAlphaNumericString"},
[11:20:19] <geordi> error: expected unqualified-id before ',' token
[11:20:22] <paule32> }
[11:20:57] <paule32> and in the executable FilterAlpha seems to be hashed
[11:21:55] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c) (Remote host closed the connection)
[11:22:07] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c)
[11:28:02] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[11:28:24] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[11:34:31] <kalven> how are you seeing this?
[11:37:01] <paule32> in the binary executable by a hex viewer
[11:37:11] *** Quits: CalamityBloo (~CalamityB@user/CalamityBlue) (Read error: Connection reset by peer)
[11:42:02] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[11:49:47] *** Quits: Siborgium[m] (~siborgium@2001:470:69fc:105::ecc) (Quit: Bridge terminating on SIGTERM)
[11:49:54] *** Quits: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4) (Quit: Bridge terminating on SIGTERM)
[11:49:58] *** Quits: sss123next[m] (~sss123nex@2001:470:69fc:105::1:ceac) (Quit: Bridge terminating on SIGTERM)
[11:50:50] *** Joins: RazielZ (~Raziel@user/raziel)
[11:53:30] *** Joins: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4)
[11:54:44] *** Quits: Raziel (~Raziel@user/raziel) (Ping timeout: 272 seconds)
[11:56:40] *** Quits: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl) (Quit: KVIrc 5.0.1 Aria http://www.kvirc.net/)
[11:56:44] *** Joins: robod34 (Username@79.113.200.158)
[11:58:24] *** Joins: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl)
[11:59:05] *** Joins: sss[m] (~sss123nex@2001:470:69fc:105::1:ceac)
[11:59:05] *** Joins: Siborgium[m] (~siborgium@2001:470:69fc:105::ecc)
[12:04:14] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[12:04:35] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[12:04:51] *** Joins: kenantu (~kenanmara@user/kenanmarasli)
[12:09:17] <malloy> hello, someone using grpc? i find that grpc don't release memory, the more requests that client make, the more memory it counsumes, and client killed by oom at the end.
[12:13:22] <malloy> when i transfer thousands files using grpc, there's a very significant memory usage
[12:16:06] *** Joins: john99 (~john99@134.238.222.5)
[12:19:53] <TinoDidriksen> From a few Google hits it looks like a recurring problem with no solution.
[12:20:18] <paule32> malloy: let's rumbble "valgrind"
[12:23:37] <malloy> paule32:  valgrind don't report definit memory leak
[12:25:24] <paule32> and strace ?
[12:26:07] <paule32> definit ?  you use python ?
[12:26:16] <malloy> TinoDidriksen: really? where do you see that?
[12:26:34] <malloy> paule32:  it's "definitely lost: 0 bytes in 0 blocks"
[12:27:12] <TinoDidriksen> I searched for "gRPC memory leak" and I see people complaining that it's very easy to balloon memory.
[12:27:37] <paule32> if you plan to code an exploir, remove 0 byte codes
[12:28:21] <ville> do you have a list of the files ahead of time? try sorting them biggest first and see if that helps?
[12:28:27] *** Joins: jose_ (~goose@111.199.80.15)
[12:28:56] <paule32> me? sorry ville
[12:29:21] <ville> no, malloy
[12:31:42] <malloy> ville:  why it helps? i use set to hold file paths(sorted), and 3 thread concurrently handle them.
[12:32:06] <malloy> file name is sorted
[12:32:22] *** Joins: Xardas (~Xardas@149.233.51.127)
[12:32:57] <ville> malloy: no idea if it helps. just a guess it could. another one would be to dynamically load grpc, transfer N number of files, unload it, load again...
[12:33:41] <paule32> what is the best way, when i have a std::vector< argument > args;  where < argument > could be "int, char*, std::string, ..." ?
[12:34:17] <malloy> ville:  i don't think it helps, cause my program is killed at the end, using more than 13GiB
[12:34:24] <malloy> of memory
[12:34:39] <paule32> hui
[12:36:07] *** Quits: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[12:36:39] <ville> malloy: with out looking at the internals of grpc but it sounds they're caching something. whether that's allocations or what i've no clue. and they seem nice enough to clean "the caches" properly at the end so at leat no leak report by valgrind. dunno if you could get it to trigger similar by for example using dlopen/dlclose to load it periodically
[12:39:20] <malloy> ville:  ok, i'll try, thank you!
[12:40:07] <ville> perhaps faster to construct a proof-of-concpet case from scratch with your own dummy library
[12:41:08] <malloy> ok
[12:41:48] <ville> at any rate it's a wild guess, so yeah very likely not to produce anything useful
[12:43:18] <ville> perhaps just using a different library to do file transfers is more likely option
[12:44:08] *** Joins: ivii (~ivan@user/ivii)
[12:45:57] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[12:56:36] *** gentooclimax is now known as climax
[13:01:18] *** Quits: Cyp (~cyp@213.237.85.100) (Read error: Connection reset by peer)
[13:03:03] *** Joins: Cyp (~cyp@213.237.84.236)
[13:03:41] *** climax is now known as gentooclimax
[13:05:06] *** Joins: paul424 (~tom@ip-5-172-236-62.multi.internet.cyfrowypolsat.pl)
[13:07:43] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:36fc:f177:e967:2de3:80eb)
[13:08:54] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[13:10:29] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[13:10:43] *** Quits: xiongxin (~Thunderbi@117.136.33.130) (Ping timeout: 246 seconds)
[13:11:23] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:155:24cb:e9df:d924:87eb)
[13:11:29] <CarloWood> I'm going to write a quick program to solve https://chess.stackexchange.com/questions/39550/fastest-algorithm-to-give-mate-with-kr-vs-k-on-infinite-large-board-as-function
[13:12:13] *** Quits: xiongxin1 (~Thunderbi@2409:8954:2e14:36fc:f177:e967:2de3:80eb) (Ping timeout: 250 seconds)
[13:13:38] <CarloWood> I think that the best option is using brute force where the black king is always on 0,0 and the white king is restricted to [-4, 4] for both coordinates, and the white rook too - but allowing one coordinate to be +/-inf.
[13:16:59] <CarloWood> Then the state space is roughly (9*9 - 3*3) * 11*11  ish = 8712 - so it should take 1 microsecond to solve :P - nah - slightly larger because also need to keep track of m and n (or rather m+n). Anyway - must be super fast.
[13:20:36] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:155:24cb:e9df:d924:87eb) (Ping timeout: 240 seconds)
[13:27:42] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 252 seconds)
[13:28:56] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[13:30:09] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:33:23] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[13:39:45] *** gentooclimax is now known as climax
[13:41:20] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c) (Remote host closed the connection)
[13:44:59] *** Joins: xiongxin (~Thunderbi@117.136.40.172)
[13:54:42] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c)
[13:55:24] *** Quits: Furai (~Furai@furai.pl) (Remote host closed the connection)
[13:55:52] *** Joins: Furai (~Furai@furai.pl)
[13:55:57] *** Quits: climax (~gentoocli@81-64-65-213.rev.numericable.fr) (Remote host closed the connection)
[13:56:01] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c) (Remote host closed the connection)
[13:56:22] *** Joins: climax (~gentoocli@81-64-65-213.rev.numericable.fr)
[14:03:50] *** Quits: rg (~r-g@51-15-187-53.rev.poneytelecom.eu) (Read error: Connection reset by peer)
[14:05:55] *** Quits: c4017 (~c4017@2604:3d08:747f:7c90:71df:e182:e7d8:25a7) (Quit: Leaving)
[14:09:13] *** Joins: CFP- (~CFP-@2a02:c7f:180d:e500:84a6:1d07:1d35:a842)
[14:25:23] <paule32> CarloWood: in cheese, there are 2x8 white, and 2x8 black figures
[14:25:45] <paule32> both: white, and black kingswomen stand on his color
[14:25:57] <paule32> so, black queen on black
[14:26:09] <paule32> so, white queen on white
[14:26:23] <paule32> the king right from queen
[14:26:36] <paule32> so, white king, on black
[14:26:46] <paule32> so, black king, on white
[14:26:49] <Haohmaru> you should return that cheese to the supermarket and ask for refund
[14:27:02] <paule32> haha , yes, sorry
[14:28:12] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:21e7:3c97:3b7b:5477:b92)
[14:28:16] <paule32> the two towers, left>black, and right->white
[14:28:44] *** Joins: markong (~kvirc@213.146.188.203)
[14:28:47] <paule32> then the two horses
[14:28:56] <CarloWood> two towers (rooks)?
[14:29:03] <CarloWood> You mean four.
[14:29:16] <paule32> yes, each player has two
[14:29:40] <paule32> two horses
[14:29:45] <CarloWood> knights
[14:29:49] <paule32> and two bishop
[14:29:49] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c)
[14:30:01] * CarloWood wonders where this is going.
[14:30:03] <paule32> two knightd, each player one
[14:30:12] <paule32> wut
[14:30:38] *** Quits: kenantu (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[14:30:56] *** Quits: Guest6037 (epony@lz2.eu) (Quit: QUIT)
[14:31:51] *** Quits: xiongxin (~Thunderbi@117.136.40.172) (Ping timeout: 260 seconds)
[14:32:41] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:34:58] <paule32> hello
[14:34:59] *** Quits: xiongxin1 (~Thunderbi@2409:8954:2e14:21e7:3c97:3b7b:5477:b92) (Ping timeout: 250 seconds)
[14:35:12] <paule32> i have a std::vector< foo > bar;
[14:35:37] <paule32> foo is a class in the moment, and should be access with a std::vector, too
[14:36:06] <paule32> in foo, there should be store the numbers of arguments that a function signature describe
[14:36:33] <paule32> which one class or template can i use for this ?
[14:37:05] <paule32> i dont know if "any" a good idea
[14:37:17] <paule32> or is variant better ?
[14:37:26] <paule32> what do you think ?
[14:37:57] <paule32> not only the numbers should store, the type, too
[14:38:13] *** Joins: c4017 (~c4017@2604:3d08:747f:7c90:f136:f9d6:17ab:1405)
[14:38:19] <ville> any suggest unknown set of types, but you probably do have a closed set. for example int, float, class type.
[14:38:32] <Svitkona> you can use a parameter pack to store the arguments and their types
[14:38:32] <paule32> yes
[14:38:42] <Svitkona> kinda hard to say if that's appropriate though without seeing how you want to use it
[14:41:39] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[14:41:51] <onizu> hi
[14:42:02] *** Joins: sigma_ (~sigma@5.119.71.235)
[14:44:15] <paule32> Svitkona: https://ideone.com/7mY6dy
[14:44:21] <onizu> There's a header file ( https://paste.gg/p/anonymous/856f64099f4940d299127c9c12d948e8 ) using which if I am creating a function ( https://paste.gg/p/anonymous/c4a5dfbd9a624ee49fc84ed3d789fd31 ), I'm getting an error while returning the object of the type defined in the header. I've marked the error-msg in a comment after the return statement. Why is it not able to return the object?
[14:44:22] <paule32> onizu: hello
[14:44:33] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[14:44:41] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[14:44:41] *** ChanServ sets mode: +v npaperbot
[14:45:23] *** Joins: epony (epony@user/epony)
[14:46:13] <sigma_> hi, in fstream we know the EOF so i can get process Percentage with this    perc = ((marks obtained)/(total marks))*100 ?
[14:47:03] <paule32> 100 %  => file size
[14:47:18] <paule32> x  % => file position
[14:47:33] <paule32> 100 * file position / file size
[14:47:39] <onizu> The compiler says, 'cannot access private member declared in class'  --- but why is it happening while returning? If I omit the return, there's no error.
[14:47:44] <paule32> x = 100 * file position / file size
[14:48:11] <sigma_> paule32 : how get file size?
[14:48:44] <paule32> fseek to end, then ftell, fseek 0 (beginn)
[14:49:15] *** Quits: epony (epony@user/epony) (Max SendQ exceeded)
[14:49:20] <Haohmaru> paule32 that should be (100*position)/total
[14:49:46] <Haohmaru> because / comes before *
[14:49:54] <PJBoy> no it doesn't
[14:49:59] <Haohmaru> >:/
[14:50:07] <CarloWood> onizu: because that constructor is private
[14:50:09] *** Joins: cursey (~cursey@user/cursey)
[14:50:16] <Haohmaru> << (100*1/100)
[14:50:17] <geordi> 1
[14:50:19] <paule32> Haohmaru: x = (100 * file position) / file size
[14:50:27] <onizu> ok, but i'm not even using that constructor @CarloWood
[14:50:37] <CarloWood> And you should use  Class(Class const&) = delete;   instead of making it private.
[14:50:54] <onizu> CarloWood: I didn't write that class.. it's from a library
[14:50:58] <CarloWood> you are by returning that value
[14:51:06] <sigma_> onizu: contructor and deconstructor always is public
[14:51:21] <PJBoy> `f.seekg(0, std::ios::end); size_t file_size = f.tellg();` for fstream
[14:51:25] <paule32> x is in percent
[14:51:53] <onizu> CarloWood: how is the private constructor used by returning that value?
[14:51:55] <PJBoy> probably followed by `f.seekg(0, std::ios::beg);` to do more file operations
[14:52:03] <CarloWood> Even when the copy constructor isn't called because of copy elision, it still must be accessible.
[14:52:04] <paule32> PJBoy: right
[14:53:39] <CarloWood> onizu: make a minimal example on wandbox.org and I'll fix it - not going to make changes in a paste bin thingy :/
[14:53:40] <sigma_> paule32: tnx man :)
[14:53:46] <onizu> CarloWood: does that mean that class's object cannot be transferred between functions?
[14:53:56] *** Quits: sigma_ (~sigma@5.119.71.235) (Quit: Konversation terminated!)
[14:54:20] <CarloWood> what the factiod for minimal test case?
[14:54:32] <onizu> CarloWood: I cannot change the library header, if that's what you're thinking of editing
[14:54:57] <CarloWood> Then state "this part can't be changed"
[14:54:58] <paule32> CarloWood: 2! ?
[14:55:12] <CarloWood> 2! = 1 * 2 = 2
[14:55:36] *** Joins: radu242 (~radu242@pool-96-250-220-83.nycmny.fios.verizon.net)
[14:55:40] <CarloWood> !minimal
[14:55:42] <nolyc> CarloWood: Error: "minimal" is not a valid command.
[14:55:53] <TinoDidriksen> !testcase
[14:55:54] <nolyc> A testcase is the _least_ amount of code that replicates your problem. Paste it to: https://godbolt.org/ and make sure it really does replicate your problem. This does not mean that you dump all your code there. You _must_ use that website. Do _not_ use a different website. Do _not_ paste code to the channel. See the testcase checklist at http://eel.is/iso-c++/testcase/
[14:55:56] <PJBoy> onizu, I think the idea is that you return a unique_ptr to that class
[14:55:59] <CarloWood> Thanks
[14:56:03] <paule32> min(2!,10!)
[14:56:27] <onizu> PJBoy: not a normal pointer?
[14:56:33] <CarloWood> Why must they use godbolt? I am more happy with wandbox.org
[14:56:42] <onizu> ClassName* obj1
[14:56:49] <PJBoy> or possibly ClientConnectionRef
[14:57:07] <PJBoy> returning a normal pointer just sounds like extra work for no benefit
[14:57:29] <paule32> how can i use a set of types ?
[14:57:32] <TinoDidriksen> Wandbox apparently ceased working for a bunch of people.
[14:57:46] <CarloWood> :(
[14:57:49] <PJBoy> yeah wandbox is throwing a loading error on people's firefox
[14:57:59] <paule32> i did not working yesterday
[14:58:06] <TinoDidriksen> Works on my Firefox ESR.
[14:58:23] <paule32> application error
[14:58:50] <paule32> then a box with script errors
[14:58:59] *** Joins: xiongxin (~Thunderbi@117.136.40.176)
[14:59:09] <CarloWood> What browser and OS are you using paule32?
[14:59:37] <paule32> firefox 98.0.2 64 bit  windows 11 64 bit
[15:00:15] <TinoDidriksen> I've got Firefox 91.7.1 ESR (64 bit), and works for me.
[15:00:26] <PJBoy> works on my windows 10 firefox 98.0.2
[15:00:41] <paule32> maybe a addon bug
[15:00:54] <paule32> on my side
[15:01:26] <TinoDidriksen> Anyway, several people have been reporting that Wandbox simply doesn't work well, so it's temporarily better to stick with Godbolt.
[15:02:08] <paule32> ok, today, https://wandbox.org/  seems to work
[15:02:15] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[15:02:19] <paule32> magic things going on there
[15:02:41] <PJBoy> I'm just mad at wandbox in general now
[15:03:21] <PJBoy> I wanna make my own paste site now >:(
[15:03:45] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[15:03:52] <Svitkona> even back then before the new UI i used to have issues every now and then with wandbox
[15:03:57] <Svitkona> it's working for me now but /shrug
[15:04:44] <LordKalma> Ididn't realize they have a new UI
[15:04:59] <LordKalma> seems like something out of the boostrap 4 tutorial
[15:05:25] <PJBoy> I think it is, yeah
[15:06:19] <PJBoy> nothing like a website whose initial state is <body></body>
[15:06:23] <paule32> this is the output, after i click SHARE:
[15:06:25] <paule32> https://dpaste.com/8Y38JNTTX
[15:06:46] <LordKalma> you don't develop in production? :D
[15:06:55] <paule32> no
[15:07:06] <LordKalma> what a sense of humor...
[15:07:16] <paule32> yeah
[15:07:18] <LordKalma> if only compiler explorer's multi-file mode was less bad...
[15:07:38] <PJBoy> compiler explorer has a bunch of things that should be less bad
[15:07:54] <LordKalma> Matt knows too much assembly and too little UX
[15:07:57] <LordKalma> he knows that
[15:08:18] <PJBoy> he gets sponsorship money now right?
[15:08:22] <PJBoy> he should pay a webdev
[15:08:26] <LordKalma> yes
[15:08:28] <LordKalma> there's a patreon
[15:08:39] *** Joins: xiongxin1 (~Thunderbi@2409:8954:2e14:238c:7f88:ea0:54ea:d5a)
[15:08:44] <PJBoy> good, now I can complain at him for the free service he provides me
[15:08:47] *** Quits: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl) (Ping timeout: 260 seconds)
[15:08:52] <LordKalma> hahah
[15:09:05] *** Quits: paul424 (~tom@ip-5-172-236-62.multi.internet.cyfrowypolsat.pl) (Remote host closed the connection)
[15:09:12] <LordKalma> he said in a talk at cppcon, when someone asked at the end, that it costs him over 300€/month just for infra
[15:09:16] <LordKalma> and that was couple years ago
[15:09:25] <LordKalma> should be well over 500€/month if I had to guess
[15:09:47] <PJBoy> that sounds like more than is reasonable
[15:10:10] <PJBoy> it does perform pretty well though
[15:10:24] <LordKalma> AWS is cheap if you use its as-service bits
[15:10:30] <LordKalma> CE is a bunch of VMs. Those are expensive
[15:10:32] <PJBoy> idk
[15:10:43] <PJBoy> part of what makes A
[15:10:55] <PJBoy> part of what makes AWS expensive is the time you invest into working out how much everything costs
[15:10:55] <Svitkona> wow, 500 seems like a lot
[15:11:29] <LordKalma> for example, if you're on Heroku, it's cheap if you connect to their database server
[15:11:51] <LordKalma> if you just push a docker compose that runs its own pgsql, you're going to pay extra for that
[15:12:03] *** Quits: xiongxin (~Thunderbi@117.136.40.176) (Ping timeout: 250 seconds)
[15:12:03] *** xiongxin1 is now known as xiongxin
[15:12:20] <PJBoy> I choose to interpret the statement more like "AWS is even more expensive if you do old school webdev"
[15:12:25] <LordKalma> Svitkona, just guessing, but that talk where he said about 300€ was from before 2020 iirc
[15:12:37] <Svitkona> i mean 300 seems like a lot too
[15:12:46] <LordKalma> lots of VMs...
[15:12:55] <Svitkona> for a hobby project
[15:13:12] <LordKalma> 300€/month is totally expected for like 10 crappy VMs
[15:13:21] <LordKalma> and CE uses more than 10 and better rthan crappy
[15:13:23] *** Joins: seninha (~seninha@user/seninha)
[15:14:23] <PJBoy> my digitalocean droplet is $6/month, so that'd only be $60/month for 10 >_>
[15:14:28] <LordKalma> PJBoy, with old school webdev you control the platform. With things like AWS, they end up selling you everything as service, which is cheaper, but ends up pinning you to their ecosystem
[15:14:40] <LordKalma> PJBoy, sorry, yeah, I can't multiply by 10 today hahah :(
[15:14:55] <PJBoy> nah on AWS you were probably right
[15:15:05] <LordKalma> like, if you use AWS functions, or whatever it's called for answering requests, it's quite cheap
[15:15:16] <LordKalma> a dime a dousand, but you're stuck using AWS
[15:15:26] <PJBoy> I really don't think it's that cheap
[15:15:46] <LordKalma> considering the realibility metrics they then provide, it kinda is
[15:15:53] <LordKalma> but yeah, I host my VPS elsewhere as well :)
[15:16:02] <PJBoy> I think their VPS are just super expensive
[15:16:12] <LordKalma> on Hetzner, little over 6€/month for 2 cores and 4gb ram
[15:16:43] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[15:17:02] <CarloWood> I made a cool start: https://wandbox.org/permlink/T6XHTGZvV5CuTCVt
[15:17:07] <LordKalma> yeah, I noticed that too. When I was looking into cloud computing I noticed google cloud and AWS are super non-competitive in terms of VMs
[15:17:09] <LordKalma> but we digress
[15:18:25] *** Joins: paule32_ (~paul@nat-91-137-21-12.net.encoline.de)
[15:18:25] *** Quits: paule32_ (~paul@nat-91-137-21-12.net.encoline.de) (Changing host)
[15:18:25] *** Joins: paule32_ (~paul@user/paule32)
[15:20:11] <PJBoy> I'd probably consider those other random AWS services if they used fewer brand names and more english
[15:21:26] <PJBoy> the time investment they're asking of me to understand their ecosystem is insurmountable
[15:21:50] *** Quits: paule32 (~paul@user/paule32) (Ping timeout: 272 seconds)
[15:26:33] <ville> LordKalma: i'd challenge that idea of cheaper as well. with old school webdev you just don't need that much crunching power as its not being wasted on bust of nonsense
[15:26:46] <ville> err bunch of nonsense
[15:28:31] *** Joins: xkuru (~xkuru@user/xkuru)
[15:29:53] *** Joins: JohnMS_WORK (~kvirc@194.110.240.100)
[15:31:08] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[15:31:33] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:238c:7f88:ea0:54ea:d5a) (Ping timeout: 260 seconds)
[15:35:11] *** Quits: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4) (Quit: User was banned)
[15:35:18] *** Quits: sss[m] (~sss123nex@2001:470:69fc:105::1:ceac) (Quit: User was banned)
[15:35:54] *** Quits: Siborgium[m] (~siborgium@2001:470:69fc:105::ecc) (Quit: User was banned)
[15:45:35] <very_sneaky> is it that expensive? $6k/year doesn't seem too bad given the prominence of CE
[15:46:48] <Svitkona> if it's covered by the patreon then fine
[15:46:58] <Svitkona> for a hobby project though that's pretty expensive imo!
[15:47:31] <very_sneaky> it is sponsored by intel
[15:47:39] *** Joins: andreasbuhr (~quassel@p549db996.dip0.t-ipconnect.de)
[15:47:39] *** Quits: andreasbuhr (~quassel@p549db996.dip0.t-ipconnect.de) (Client Quit)
[15:47:45] <paule32_> so here a little code:  https://dpaste.com/EV2L3X37Q
[15:47:53] <paule32_> how can i use _type ?
[15:48:15] *** paule32_ is now known as paule32
[15:48:21] *** Joins: xiongxin (~Thunderbi@117.136.33.131)
[15:48:49] <LordKalma> Svitkona, Matt did say the patrons, at the time, were actually generating gross revenue, he intended to put back into development
[15:49:19] <LordKalma> Now with corporate sponsoring, i assume the project, while perhaps not lucrative enough for a team of webdevs, certainly isn't bleeding Matt's money
[15:49:23] *** Joins: epony (epony@user/epony)
[15:50:17] <onizu> PJBoy: it worked with std::unique_ptr  (https://paste.gg/p/anonymous/79742a4f04514909a113f2283b7e75ce)
[15:50:30] <onizu> thanks
[15:50:41] <urdh> paule32: wdym "use"?
[15:51:08] <very_sneaky> jeez - i'm looking at a haskell project to work out how i can contribute. my god the syntax is confusing
[15:51:37] <urdh> nah it just takes getting used to
[15:51:48] <paule32> urdh: i would like collect arguments in a std::vector, where the _type is, how you can see it on paste, also each vector item has a _type
[15:51:55] <urdh> once it clicks, everything just makes sense
[15:52:03] <PJBoy> haskell syntax is quite simple and at times elegant
[15:52:11] <PJBoy> but the way people write haskell, oof
[15:52:23] <very_sneaky> urdh: i mean, this is a first look without any research into the syntax whatsoever. most languages i can sort of guesstimate what's going on, but this is alien as hell
[15:52:47] <PJBoy> the main thing to get used to is the lack of function call parentheses
[15:53:00] <very_sneaky> i mean i'm used to python in that regard
[15:53:08] <urdh> very_sneaky: yeah granted, it's not like your average imperative language
[15:53:12] <PJBoy> python has function call parentheses...
[15:53:17] <urdh> but that's more paradigm than haskell tbh
[15:53:18] <urdh> you
[15:53:28] <very_sneaky> PJBoy: oh you mean  `()` not `{}`
[15:53:30] <urdh> you'd be just as confused reading Erlang or whatever
[15:53:40] <PJBoy> ah right, yeah
[15:53:57] <urdh> paule32: I still don't understand what you're trying to do
[15:54:01] <very_sneaky> https://github.com/LaurentRDC/pandoc-plot/blob/ab50ac6ed882be1b4512746a604be7b76ed9f35b/src/Text/Pandoc/Filter/Plot/Renderers.hs#L74-L86 _what_
[15:54:03] <PJBoy> haskell be like `sum = add x y`
[15:54:11] <very_sneaky> __what__
[15:54:21] <PJBoy> or `summer = add x` for a partial function
[15:54:37] <PJBoy> ah that's a monad
[15:54:44] <PJBoy> that's like a whole separate language
[15:55:15] <paule32> urdh: a function signatur is   (int), should be stored in  a vector< _type > func_args;
[15:55:16] <urdh> do notation is meh as well
[15:55:20] <very_sneaky> yeah, somehow i feel like this is something that i won't be able to just "jump in to"
[15:55:47] <PJBoy> non pure stuff like IO requires this stuff
[15:55:51] <urdh> just wait until you get to all the fun >>= operators
[15:55:52] <PJBoy> check out https://wiki.haskell.org/Introduction_to_IO real quick
[15:55:52] *** Joins: gareppa (~gareppa@user/gareppa)
[15:56:19] <very_sneaky> i'm sure there's actually a lot of value in using a language like haskell
[15:56:23] <urdh> that particular function doesn't look too bad tho
[15:56:28] <very_sneaky> i'm sure there are a bunch of design paradigms that would improve my C++
[15:57:04] <urdh> paule32: what function signature? so far all we've seen is a struct template and a using-declaration
[15:58:01] *** Quits: gareppa (~gareppa@user/gareppa) (Remote host closed the connection)
[15:58:17] *** Quits: CFP- (~CFP-@2a02:c7f:180d:e500:84a6:1d07:1d35:a842) (Quit: Client closed)
[15:58:24] <paule32> urdh: a function/membar "foo" can have the signature "int", so the function is of the form: "foo(int)"
[15:59:20] <paule32> now, i would like "virtual" store this arguments of a virtual function in a std::vector< _type > bar = {{int}};
[15:59:50] <paule32> also hard coded by hand/manually
[16:01:06] *** Joins: Roughy (~mdaw45ns@user/roughy)
[16:04:26] <very_sneaky> PJBoy: yeah, having finished that i still don't feel at all comfortable with it
[16:04:27] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[16:04:55] <PJBoy> fair
[16:04:57] <very_sneaky> I think i'd have to go through some real "for dummies" examples to get a feel. it seems like it follows a pretty similar philosophy to unix cli applications though
[16:05:08] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[16:05:16] <very_sneaky> with the composibility of actions
[16:05:23] <very_sneaky> or, the pipe operator i should say
[16:05:39] <PJBoy> that's functional programming in a nutshell
[16:05:53] <very_sneaky> yeah i guess that's true
[16:06:15] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:950:287b:c4be:ac00)
[16:06:39] *** Quits: proller (~p@2a02:6b8:b081:b646::1:3c) (Ping timeout: 252 seconds)
[16:06:46] <very_sneaky> anybody seen any good cppcon talks recently? i've got a few in my backlog but haven't watched many yet
[16:07:27] <very_sneaky> (cppcon 2021)
[16:08:05] <urdh> paule32: you can't have a std::vector "of types", since types are resolved at compile-time
[16:08:30] <urdh> paule32: the closest you get is std::tuple, but even then it's still only interesting to operate on those types at compile-time
[16:09:00] <paule32> urdh: how can I simulate it then ?
[16:09:06] <urdh> paule32: but this sounds vaguely like an X/Y problem; what is it that you are trying to achieve?
[16:09:13] <vdamewood> very_sneaky: Only thing I can think of is cppcon 2019
[16:09:27] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:f9b9:c2d3:ad62:759d) (Ping timeout: 250 seconds)
[16:10:32] <paule32> urdh: a parser like, store names in a vector class where the class define the name as function, with std::string nameforthefun; and a vector of arguments for this function
[16:11:03] <PJBoy> I should check out alexandrescu's cppcon
[16:11:18] *** Quits: xiongxin (~Thunderbi@117.136.33.131) (Read error: Connection reset by peer)
[16:12:20] <PJBoy> which is how to write std::variant apparently
[16:13:01] <paule32> urdh: https://dpaste.com/7LMQMQK64
[16:13:13] <paule32> urdh: this is the actual code
[16:13:28] <PJBoy> is this a notepad++ plugin?
[16:14:33] <PJBoy> oh nvm
[16:14:47] <paule32> no
[16:15:43] <paule32> ok, then std::variant
[16:15:50] <paule32> how can i use it
[16:16:10] <CarloWood> In position 13 and 14, white gives away its rook. But how can that happen? Only line 108 I make that an illegal position, so it should never ever have been push to the vector :/? https://wandbox.org/permlink/8u3qX1a2DX5uYMjp
[16:16:28] <CarloWood> s/Only line/On line/
[16:16:47] <CarloWood> s/push/pushed/
[16:17:56] <paule32> you will push the rook/tower ?
[16:18:49] <CarloWood> The push on line 166 ... horizontal rook move by white.
[16:19:41] <paule32> this can be, if you have clear field between the knight, and the rook, if the line is clear/empty, rook is not moved before, and knight, too, then you can push the knight two field left or right, and the tower comes to the old position of the knight
[16:20:18] <CarloWood> k is king
[16:20:25] <PJBoy> think this calls for some traditional debugging with logging or stepping through
[16:20:29] <CarloWood> k is black king and K is white King.
[16:20:59] <CarloWood> PJBoy: yeah... I'll copy it locally :/
[16:21:13] *** Joins: Guest94 (~Guest94@2a02:fe0:c140:6061:948a:8e3d:dbc9:7591)
[16:21:37] <paule32> first line: A-H (1)  rook on A1, k or K A4
[16:21:55] <paule32> line is (1) A-A4 empty
[16:22:25] <paule32> then you can move king two fields left, and the rook there where the king stands
[16:22:50] <paule32> but only, if you don't move the king AND tower  NOT before
[16:23:32] *** Joins: vaasu (~faya@90-228-194-182-no542.tbcn.telia.com)
[16:25:16] <paule32> end positiom
[16:25:30] <paule32> K A2 ; R4
[16:25:37] <paule32> K A2 ; R A4
[16:26:46] <paule32> if you want to calculate, if the push valid, you can made a tricky trick
[16:26:48] *** Quits: climax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[16:27:12] <paule32> each line A1 - A8 , set the fields with prime numbers
[16:27:22] <paule32> A1 = 2, A2 = 4 ...
[16:27:37] <paule32> same for B1 .. B8
[16:27:43] <paule32> ..till H
[16:28:06] <paule32> this give huge numbers, yes, but then, you can valide the position
[16:29:21] <CarloWood> Ah lol
[16:29:33] <CarloWood> PJBoy: nope, gdb is not necessary :P
[16:29:41] <CarloWood> it's just wrong that line.
[16:29:51] <CarloWood> return std::abs(wRx) < 2 && std::abs(wRy) < 2 && std::abs(wRx - wKx) > 1 && std::abs(wRy - wKy) > 1;
[16:30:32] <CarloWood> That says that the white king protects the rook if either the x diff is < 2 OR the y diff is < 2 :/
[16:30:40] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:133b:d7a1:eab5:64b4:5441)
[16:30:41] <CarloWood> Protection from a distance :)
[16:31:10] <paule32> that is valid
[16:31:13] <paule32> only one
[16:32:44] <CarloWood>   return std::abs(wRx) < 2 && std::abs(wRy) < 2 && !(std::abs(wRx - wKx) < 2 && std::abs(wRy - wKy) < 2);
[16:33:01] <CarloWood> I'll use that... "close to enemy king and NOT close to own king"
[16:33:45] <CarloWood> Perfect, now it goes from
[16:33:48] <CarloWood>    · · · · · · · · · k · K · · · · · · ·
[16:33:48] <CarloWood>    · · · · · · · R · · · · · · · · · · ·
[16:33:49] <CarloWood> to
[16:33:55] <CarloWood>    · · · · · · · · · k · K · · · · · · ·
[16:33:56] <CarloWood>    · · · · · · · · · · R · · · · · · · ·
[16:34:35] *** Quits: adeliktas (~adeliktas@i59F4DE4D.versanet.de) (Ping timeout: 260 seconds)
[16:35:55] <Haohmaru> what's this discoteque?
[16:36:20] <CarloWood> You not being able to see UTF8 chars maybe?
[16:37:39] <Haohmaru> no, u
[16:42:14] *** Joins: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3)
[16:44:40] *** tonitch_ is now known as tonitch
[16:49:59] <paule32> CarloWood: http://kallup.zapto.org/tmp/pic/cheese.png
[16:50:39] <CarloWood> Wrong colors, the right hand corner must be a white square.
[16:51:15] <CarloWood> Also, that's not how you castle.
[16:51:59] <paule32> it is a example
[16:56:38] *** Joins: seninha (~seninha@user/seninha)
[16:57:37] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:133b:d7a1:eab5:64b4:5441) (Ping timeout: 256 seconds)
[17:05:56] <CarloWood> Hmm, my computer doesn't like 37412 deep recursive calls...
[17:06:07] <CarloWood> How to fix that? :/
[17:06:51] *** Quits: pepperoni (~pepperoni@172.58.102.236) (Read error: Connection reset by peer)
[17:06:59] <PJBoy> avoiding recursion
[17:07:08] <CarloWood> Yeah, but how? :) https://bpa.st/4BVQ
[17:07:20] <CarloWood> Can that be turned into tail recursion?
[17:07:47] *** Joins: pepperoni (~pepperoni@172.58.102.236)
[17:08:23] *** Joins: nwulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[17:08:40] <paule32> CarloWood: please reupload
[17:08:43] <paule32> relink
[17:08:56] <paule32> ehm download sorry
[17:08:59] <paule32> CarloWood: http://kallup.zapto.org/tmp/pic/cheese.png
[17:09:20] <CarloWood> very good
[17:09:30] *** PJBoy is now known as Guest9198
[17:09:30] *** Quits: Guest9198 (~PJBoy@user/pjboy) (Killed (strontium.libera.chat (Nickname regained by services)))
[17:09:33] *** Joins: PJBoy (~PJBoy@user/pjboy)
[17:10:00] <PJBoy> you can generically convert a recursive algorithm into a loop + stack of arguments
[17:10:27] <CarloWood> as in std::stack?
[17:10:55] <PJBoy> or some such, yeah
[17:10:57] <paule32> no good idea for this case
[17:11:11] <paule32> 2^200 possibility moves !
[17:11:14] <CarloWood> Only nw needs to be kept.
[17:11:23] *** Quits: kevr (~kevr@user/kevr) (Remote host closed the connection)
[17:11:44] *** Joins: kevr (~kevr@user/kevr)
[17:11:54] <CarloWood> paule32: just curious - how old are you?
[17:12:02] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 272 seconds)
[17:12:55] <paule32> 43
[17:13:17] <CarloWood> And are you doing C+ for work, or as a hobby?
[17:13:21] <CarloWood> C++
[17:13:26] <paule32> hobby
[17:13:36] <CarloWood> How long have you been coding in C++?
[17:13:47] <paule32> since i was 20
[17:13:58] <paule32> also before delphi, and normal C
[17:14:06] <paule32> turbo pascal ...
[17:14:48] <paule32> why ?
[17:15:10] <CarloWood> You don't want to know that :/.  I was just curious.
[17:18:52] *** Joins: hnOsmium0001[m] (~hnosmium0@2001:470:69fc:105::15d4)
[17:20:48] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[17:21:04] *** Joins: marius_ (~Username@79.113.213.133)
[17:23:20] <CarloWood> I think this is a good moment to go for a walk... so I can think about how to do this algorithm :/.
[17:23:21] <CarloWood> bbl
[17:23:28] *** Joins: sss[m] (~sss123nex@2001:470:69fc:105::1:ceac)
[17:23:28] *** Joins: Siborgium[m] (~siborgium@2001:470:69fc:105::ecc)
[17:23:33] *** Quits: robod34 (Username@79.113.200.158) (Ping timeout: 260 seconds)
[17:23:41] *** marius_ is now known as robod34
[17:24:12] <rpav> chess?
[17:24:25] <paule32> yes
[17:31:29] <Haohmaru> cheese
[17:33:07] <paule32> a webcam application, i know : )
[17:33:23] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[17:37:51] *** Quits: proller (~p@2a02:6b8:0:408:eafc:afff:fec7:a7a3) (Ping timeout: 245 seconds)
[17:38:43] *** Joins: Rayke (rayke@user/rayke)
[17:53:39] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[17:54:13] *** Joins: proller (~p@2a02:6b8:b081:6402::1:6)
[17:56:26] *** Joins: marius_ (~Username@79.113.213.133)
[18:00:06] *** Quits: robod34 (~Username@79.113.213.133) (Ping timeout: 260 seconds)
[18:00:14] *** marius_ is now known as robod34
[18:06:02] *** Joins: xiongxin (~Thunderbi@117.136.40.175)
[18:10:05] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c) (Remote host closed the connection)
[18:10:40] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[18:15:28] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Ping timeout: 260 seconds)
[18:15:53] *** Joins: xiongxin1 (~Thunderbi@117.136.39.222)
[18:16:01] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[18:18:35] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Remote host closed the connection)
[18:18:47] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c)
[18:19:11] *** Quits: xiongxin (~Thunderbi@117.136.40.175) (Ping timeout: 252 seconds)
[18:19:11] *** xiongxin1 is now known as xiongxin
[18:24:16] <paule32> hello
[18:24:27] <paule32> how can I add values to:
[18:24:28] <paule32> std::vector< std::variant<int, double, std::string> >
[18:24:29] <paule32> HelpNDocAPI_Type;
[18:25:19] <paule32> is it enough: std::variant<int,double,std::string> foo; HelpNDocAPI_Type.push_back(foo);
[18:25:20] <paule32> ?
[18:27:59] <fiesh> geordi: { std::variant<int, double, std::string> v; int foo{}; v.push_back(foo); }
[18:27:59] <geordi> error: 'class variant<int, double, string >' has no member named 'push_back'
[18:28:15] <fiesh> geordi: { std::vector<std::variant<int, double, std::string>> v; int foo{}; v.push_back(foo); }
[18:28:16] <geordi>  
[18:31:41] <paule32> thx
[18:36:28] *** Quits: JohnMS_WORK (~kvirc@194.110.240.100) (Ping timeout: 260 seconds)
[18:42:38] *** Joins: zy (~cc@user/zy)
[18:42:52] <zy> https://github.com/llvm-mirror/libcxx/blob/78d6a7767ed57b50122a161b91f59f19c9bd0d19/src/condition_variable.cpp#L58-L59
[18:42:56] <zy> Does anyone know the reason for clamping nanosecs since epoch to 0x59682F000000E941 ?
[18:44:34] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[18:44:41] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[18:44:41] *** ChanServ sets mode: +v npaperbot
[18:47:46] *** Quits: xiongxin (~Thunderbi@117.136.39.222) (Read error: Connection reset by peer)
[18:50:14] <paule32> hello, how can i fill the map ?
[18:50:16] <paule32> https://dpaste.com/BDAU6NJSH
[18:56:57] *** Joins: gooooose (~goose@111.199.80.15)
[18:57:24] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[18:59:19] *** Quits: jose_ (~goose@111.199.80.15) (Ping timeout: 246 seconds)
[19:02:31] *** Quits: Guest94 (~Guest94@2a02:fe0:c140:6061:948a:8e3d:dbc9:7591) (Quit: Client closed)
[19:02:35] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 240 seconds)
[19:04:57] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[19:06:58] *** Joins: jose_ (~goose@111.199.80.15)
[19:09:42] *** Quits: gooooose (~goose@111.199.80.15) (Ping timeout: 260 seconds)
[19:14:41] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Quit: For the Red Army!)
[19:15:58] *** Joins: gooooose (~goose@111.199.80.15)
[19:18:40] *** Inline__ is now known as Inline
[19:18:42] *** Quits: jose_ (~goose@111.199.80.15) (Ping timeout: 272 seconds)
[19:21:34] *** Joins: useful_idiot7 (~useful_id@gateway/vpn/pia/usefulidiot/x-43226899)
[19:21:34] *** Joins: CalamityBlue (~CalamityB@user/CalamityBlue)
[19:23:31] *** Quits: useful_idiot (~useful_id@gateway/vpn/pia/usefulidiot/x-43226899) (Ping timeout: 260 seconds)
[19:23:32] *** useful_idiot7 is now known as useful_idiot
[19:24:12] *** Joins: meator (~meator@user/meator)
[19:28:34] *** Joins: useful_idiot4 (~useful_id@gateway/vpn/pia/usefulidiot/x-43226899)
[19:28:35] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[19:30:44] *** Quits: useful_idiot (~useful_id@gateway/vpn/pia/usefulidiot/x-43226899) (Ping timeout: 272 seconds)
[19:30:45] *** useful_idiot4 is now known as useful_idiot
[19:31:17] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:602c:3e29:2572:190c) (Remote host closed the connection)
[19:31:49] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[19:32:32] <CarloWood> Why?
[19:32:35] <CarloWood> { vector<int> v; gen(v, 0); SHOW(v); } vector<int> moves(int d) { if (d >= 2) return {}; return { d, d }; } void gen(vector<int>& v, int d) { auto v2 = moves(0); v.insert(v.end(), v2.begin(), v2.end()); for (int i : v2) { gen(v, d + 1); } }
[19:32:36] <geordi> Undefined behavior detected.
[19:33:41] <CarloWood> oh
[19:33:44] <CarloWood> nm
[19:33:55] <CarloWood> { vector<int> v; gen(v, 0); SHOW(v); } vector<int> moves(int d) { if (d >= 2) return {}; return { d, d }; } void gen(vector<int>& v, int d) { auto v2 = moves(d); v.insert(v.end(), v2.begin(), v2.end()); for (int i : v2) { gen(v, d + 1); } }
[19:33:56] <geordi> v = {0, 0, 1, 1, 1, 1}
[19:36:17] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Ping timeout: 256 seconds)
[19:37:07] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 246 seconds)
[19:37:45] *** Parts: meator (~meator@user/meator) (Leaving)
[19:38:10] *** Quits: zy (~cc@user/zy) (Ping timeout: 246 seconds)
[19:38:34] *** Joins: pulse (~pulse@user/pulse)
[19:39:17] *** Joins: markong (~kvirc@213.146.188.203)
[19:40:41] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[19:44:56] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Ping timeout: 245 seconds)
[19:47:37] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[19:50:01] *** Joins: zy (~cc@user/zy)
[19:51:17] *** Joins: kenantu (~kenanmara@user/kenanmarasli)
[19:54:53] *** Quits: zy (~cc@user/zy) (Ping timeout: 252 seconds)
[19:59:30] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[20:16:55] *** Quits: imMute (~immute@user/immute) (Quit: Im betting i wasnt supposed to be pulling on that wire)
[20:18:52] *** Joins: jackblasted (~quassel@173.239.197.19)
[20:23:34] *** Joins: xiongxin (~Thunderbi@117.136.40.183)
[20:24:17] *** Joins: imMute (~immute@user/immute)
[20:25:04] *** Quits: xiongxin (~Thunderbi@117.136.40.183) (Read error: Connection reset by peer)
[20:25:43] *** Joins: xiongxin (~Thunderbi@2409:8954:2e14:1922:b0bb:f21:d408:d79e)
[20:27:04] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Remote host closed the connection)
[20:27:36] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[20:31:25] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[20:33:41] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Ping timeout: 245 seconds)
[20:33:48] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[20:34:24] *** Joins: pictour (~pictour@179.96.186.24)
[20:34:33] *** Parts: pictour (~pictour@179.96.186.24) ()
[20:36:08] *** Joins: adeliktas (~adeliktas@i59F4DE4D.versanet.de)
[20:42:07] <Alipha> paule32: what do you intend to do with these function signatures once you store them in the vector? do you want to actually call the functions, or?
[20:44:31] *** Quits: xiongxin (~Thunderbi@2409:8954:2e14:1922:b0bb:f21:d408:d79e) (Ping timeout: 245 seconds)
[20:45:16] *** Quits: john99 (~john99@134.238.222.5) (Quit: Client closed)
[20:46:03] <paule32> Alipha: not directly, i would codeing a transpiller
[20:49:48] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[20:59:07] <paule32> https://dpaste.com/82R3RWURQ
[20:59:27] <paule32> how can i add f to a
[20:59:54] <paule32> how can i add f to Function
[21:04:15] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:04:15] *** Quits: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch) (Read error: Connection reset by peer)
[21:04:57] *** Joins: soman (~soman@83.139.179.68)
[21:05:40] <soman> I read user input using getline(cin, &someString); (I do it in a for loop) Why I get some characters from cout in someString then?
[21:05:53] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:06:17] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Remote host closed the connection)
[21:06:25] *** Joins: jackblasted_ (~quassel@173.239.197.19)
[21:06:30] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[21:06:33] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:06:37] <imMute> what is someString?
[21:06:42] *** Quits: jackblasted_ (~quassel@173.239.197.19) (Client Quit)
[21:06:50] <imMute> because getline() takes the std::string by reference, so that "&" is wrong...
[21:07:13] <soman> imMute: getline(cin, arr[i].area) where arr is array of structs
[21:07:42] <CarloWood> Can someone understand why the size of this std::set<> grows indefinitely (I run out of 64 GB of ram): https://bpa.st/7AXA#1L196  The function 'generate() is called once, and never returns; keeps adding to 'states'.
[21:07:45] <imMute> is "area" a std::string?
[21:07:49] <soman> imMute: yes
[21:07:51] *** Joins: zy (~cc@user/zy)
[21:08:04] *** Quits: xkoncek (xkoncek@lounge.fi.muni.cz) (Quit: Ping timeout (120 seconds))
[21:08:07] <imMute> soman: then it's something else because you're reading from cin, ie, STDIN.  stdout is totally separate
[21:08:16] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:08:16] *** Joins: xkoncek (xkoncek@lounge.fi.muni.cz)
[21:08:18] <CarloWood> My main reason for saying that this should not be possible is because it stores 'State' objects of which there can only be a very limited number....
[21:08:28] *** Joins: cbreak (~cbreak@77-58-201-132.dclient.hispeed.ch)
[21:08:44] <soman> imMute: two structures are filled correctly byt last 3rd one contains something like 'Input: _user_input_'
[21:09:38] <CarloWood> Aka - line 47 - with max = 3 (line 68) gives me ... 2 * 7 * 7 * 8 * 8 = 6272 possible states - not millions.
[21:10:04] <Alipha> paule32: you can't just write `std::variant` or `std::map` (lines 17 and 21). you have to specify the full template argument list each time.
[21:10:14] <zy> hm
[21:10:23] <LordKalma> using is nice to use
[21:10:56] <imMute> soman: I can't tell what it is with so little information.  try breaking the problem down into smaller pieces
[21:12:17] <CarloWood> (the whole thing is a one-file program - so you copy it and compile it locally to try out)
[21:12:22] <CarloWood> you can*
[21:13:08] <Alipha> paule32: https://godbolt.org/z/x7Y7Grxe7
[21:13:39] <CarloWood> oh shit.. I see it, I think.
[21:13:58] <CarloWood> Hmm no.
[21:15:31] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[21:16:47] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Remote host closed the connection)
[21:17:19] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[21:19:09] <CarloWood> It is adding multiple of the same states... how is that possible with a std::set? :/
[21:20:58] <paule32> Alipha: thx
[21:21:47] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Ping timeout: 252 seconds)
[21:23:15] *** Quits: mgaunard (~mgaunard@ec2-52-210-158-23.eu-west-1.compute.amazonaws.com) (Remote host closed the connection)
[21:23:27] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[21:24:15] *** Joins: noarb (~noarb@user/noarb)
[21:25:34] <imMute> CarloWood: maybe your operator< or operator== ?
[21:25:55] <CarloWood> std::set only uses operator< no>
[21:25:59] <CarloWood> no?*
[21:26:08] <CarloWood> I already checked, that is called.
[21:26:30] <CarloWood> panic mode:
[21:26:32] <CarloWood> https://gyazo.com/c9e0891d0f7c2426b2577634e7d94e7f
[21:26:59] <CarloWood> Oh that isn't even correct
[21:27:12] <CarloWood>  assert(states.find(state));
[21:28:02] <CarloWood>    assert(states.find(state) != states.end()); even
[21:28:31] <CarloWood> And it asserts there...
[21:28:44] <CarloWood> I guess 'find' uses operator== ...
[21:30:05] <CarloWood> Oh damn NOW I see it...
[21:30:21] <CarloWood> It HAD to be the operator< right? :/ ... and it is.
[21:31:07] <CarloWood> wew - now it works :)
[21:32:20] <CarloWood> 4956 states seems ok?
[21:32:33] *** gentooclimax is now known as climax
[21:32:48] <CarloWood> I guess it is... too hard to verify :P
[21:34:12] <CarloWood> Ok, now I generate all possible states breadth first... But I need make some kind of internal graph of it or its useless.
[21:34:14] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[21:35:33] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[21:36:33] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Quit: BE VIGILANT.)
[21:38:20] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[21:39:43] *** Joins: Xardas (~Xardas@149.233.51.127)
[21:40:12] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Ping timeout: 260 seconds)
[21:41:24] *** Quits: johnny (~johnny@user/johnny) (Ping timeout: 240 seconds)
[21:45:21] <CarloWood> I guess I'll add to State:
[21:45:24] <CarloWood>   std::vector<State*> m_reachable;
[21:45:24] <CarloWood>   std::vector<State*> m_reachable_from;
[21:45:28] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:b8d6:aaba:d42d:fbd1)
[21:45:28] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:b8d6:aaba:d42d:fbd1) (Changing host)
[21:45:28] *** Joins: skapata (~Skapata@user/skapata)
[21:47:43] <rpav> std::unordered_set<std::tuple<State*,State*>>
[21:49:53] <rpav> though really if you want graph walking some compressed-edge structure probably the best you can do
[21:50:28] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[21:50:30] *** Quits: soman (~soman@83.139.179.68) (Quit: Client closed)
[21:53:30] *** Quits: letto (~letto@188.27.114.171) (Quit: Konversation terminated!)
[21:56:06] *** Joins: letto (~letto@188.27.114.171)
[21:56:16] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:d73:e6b7:30e6:fe45)
[21:58:50] *** Joins: rg (~r-g@51-15-187-53.rev.poneytelecom.eu)
[21:59:58] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 260 seconds)
[22:00:17] *** Joins: xuxx (~xuxx@86.228.71.37.rev.sfr.net)
[22:00:32] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[22:01:11] <CarloWood> wtf - I pick a random position from the 288276 that are generated... and the white king is standing on top of the black king.
[22:02:14] <paule32> white kill black
[22:02:16] <paule32> : )
[22:02:37] <CarloWood> yes, heheh. A.I. never ceases to amaze you with creativity.
[22:02:37] <paule32> sorry, white solves
[22:03:15] <CarloWood> Position is marked as illegal though - so something weird is going on :/
[22:03:30] <paule32> no, this move is valid
[22:03:42] <CarloWood> a.out: kingrook.cpp:249: int main(): Assertion `!p->illegal_position()' failed.
[22:03:44] <CarloWood> yes
[22:04:35] *** climax is now known as gentooclimax
[22:04:47] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:d73:e6b7:30e6:fe45) (Ping timeout: 250 seconds)
[22:04:49] <paule32> the best way ever is, to save images
[22:04:55] <paule32> of each board
[22:05:02] <paule32> each move
[22:05:42] <paule32> and compare it with actual session
[22:07:00] <paule32> on first move, you should have 16 images
[22:07:42] <paule32> ehm 15
[22:08:10] <paule32> the first move is subtracted, because the placer one or two move it
[22:08:26] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:cf7:8430:63f0:eabe)
[22:08:28] <paule32> player
[22:09:17] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[22:11:43] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[22:15:35] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Remote host closed the connection)
[22:15:38] *** RazielZ is now known as Raziel
[22:16:09] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[22:17:12] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Remote host closed the connection)
[22:17:24] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[22:18:12] <CarloWood> Against a mystery :/.  I never insert an illegal position into the set. Return from the function and it has illegal position(s)... how?
[22:19:01] <CarloWood> https://gyazo.com/c1cfd5808e72ecc6a20d472a77eb039e
[22:19:21] <CarloWood> How can that last assert ever fail? :/
[22:19:39] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[22:20:00] <CarloWood> oh
[22:20:02] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[22:20:09] <CarloWood> I forgot to devide the size by two :P
[22:20:31] <CarloWood> I meant to do:
[22:20:33] <CarloWood>   for (int i = 0; i < states.size() / 2; ++i)
[22:20:33] <CarloWood>     ++p;
[22:24:02] <Alipha> CarloWood: does next_layer ever == layers[layer]? because then next_layer.push_back would invalidate node
[22:25:19] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[22:25:31] <CarloWood> ha ha - that one is funny.  Since I have the black king always in the center of the board (at 0, 0) - when black does a move I instead update the positions of the white king and rook.  But, if the rook as coordinate -10 or 10 it means "infinitely far away".  So, right now I see that because black does a move the white rook goes from distance 9 to infinite :p
[22:25:33] <CarloWood> Oops
[22:26:10] <CarloWood> No next_layer is always a ref to layers[layer + 1]
[22:27:23] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Remote host closed the connection)
[22:27:57] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[22:32:42] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Ping timeout: 260 seconds)
[22:35:30] *** Quits: Leone (~Leo@216.154.12.122) (Read error: Connection reset by peer)
[22:36:04] *** Joins: geranim0 (~geranim0@modemcable242.171-178-173.mc.videotron.ca)
[22:36:05] *** Joins: blackbird_0 (~blackbird@102.156.210.226)
[22:37:33] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[22:38:25] <paule32> CarloWood: when black moves, white does not change his position
[22:38:39] <paule32> untill it is a valid move
[22:38:56] <paule32> if the black king wipe white figure
[22:39:35] <paule32> the king can do 5 moves at one time
[22:39:40] <paule32> 1. left
[22:39:40] <Raziel> what are we doin
[22:39:44] <Raziel> chess?
[22:39:48] <paule32> 2. right
[22:39:52] <paule32> 3. up
[22:39:55] <paule32> 4. down
[22:40:10] <Raziel> 5. up-right, down-right, up-left or down-left
[22:40:11] <Raziel> :^)
[22:40:13] <paule32> 5. left up (diagonal)
[22:40:22] <paule32> 6. right up (diagonal)
[22:40:27] <blackbird_0> Hi, please I need to know what's the time complexity of this code: https://godbolt.org/z/Eav9K5P5o  , is O(log_2 n) or O(2^(log_2 n +1)?
[22:40:41] <paule32> 7. left down (diagonal)
[22:40:50] <paule32> 8. right down (diagonal)
[22:40:50] <Friithian> uh, that sounds like homework there
[22:41:21] <paule32> okay, more as 5, i forget that the king stand in the middle, not on the first line
[22:41:41] <Raziel> Friithian, obviously homework, have you seen anyone actually use recursion?
[22:41:43] <Raziel> :^)
[22:41:50] <Friithian> ok, true
[22:41:56] <Friithian> recursion and big O
[22:42:03] <PJBoy> ahaha
[22:42:28] <Raziel> I think the only thing I've ever actually used recursion in is a combinational sum computation
[22:42:36] <Raziel> and I'd rather avoid it there too v:
[22:42:50] <PJBoy> I've used it for tree traversal plenty of times
[22:43:01] <Friithian> bah, trees
[22:44:00] <CarloWood> It's O(2^(log_2 n +1)
[22:44:11] <CarloWood> And now you learned nothing.
[22:44:12] <paule32> O is scaling
[22:44:34] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[22:44:41] <paule32> so, 2^(log_2 n + 1)
[22:44:41] <Raziel> CarloWood, You cheated not only the game, but yourself. You didn't grow. You didn't improve. You took a shortcut and gained nothing. You experienced a hollow victory. Nothing was risked and nothing was gained. It's sad that you don't know the difference.
[22:44:43] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[22:44:43] *** ChanServ sets mode: +v npaperbot
[22:44:58] <Raziel> am I doing it right
[22:46:09] <CarloWood> Raziel: the first comma is a bit confusing - but yeah, something like that.
[22:47:51] <CarloWood> Also, my program is telling me that it can reach the random position from one where white is to play and black is in check *sigh* - not to mention that the king moved 9 places in one move?
[22:48:00] <blackbird_0> CarloWood, Friithian; not a home work, I wrote the solution by myself, and I did the computation of the complexity by myself too
[22:48:18] <blackbird_0> I found O(2^(log_2 n +1)
[22:48:20] <paule32> 8
[22:48:32] <blackbird_0> I just ask to be sure
[22:48:33] <paule32> ehm 1
[22:48:35] <paule32> sorry
[22:48:42] <Raziel> blackbird_0, what is the actual problem that solution is for? v:
[22:48:53] <paule32> king can only move 1 position at round
[22:48:54] <Raziel> and is O(2^(log_2 n +1) better than the obvious O(n) solution?
[22:48:58] <CarloWood> blackbird_0: in that case I have to take back what I said: I assume it was multiple choice.
[22:49:08] <CarloWood> assumed*
[22:49:25] <CarloWood> If the answer also can be "neither" - then I don't know.
[22:50:11] *** Joins: v4mp (~v4mp@user/v4mp)
[22:50:41] <blackbird_0> Raziel: It is a solution for a problem fro educational purpose on dmoj.
[22:50:46] <CarloWood> It's probably neither yeah.
[22:50:53] <paule32> why did you make you so hard, create layers in a 0, add 1  8 x 8 array, so you have 64 layers to start from, make one rule table and run
[22:51:01] *** Quits: proller (~p@2a02:6b8:b081:6402::1:6) (Ping timeout: 240 seconds)
[22:51:11] <CarloWood> O(2^(log_2 n +1) is not what you'd normally use - that is just O(n)
[22:51:16] <blackbird_0> CarloWood: No,  O(2^(log_2 n +1) is not better than the obvious O(n) solution
[22:52:09] <paule32> -add +and
[22:52:32] <PJBoy> as CarloWood said, they're equivalent
[22:53:07] <paule32> the tricky trick is to work with primes
[22:53:21] <paule32> for each col, each col, you create a prime number
[22:53:22] <CarloWood> 2^(log_2 n +1) = 2 * 2^log_2 n = 2n
[22:53:29] *** Joins: xq (~xq@user/xq)
[22:53:43] <paule32> these you, store in a data base
[22:53:52] <CarloWood> paule32: I have to ask - did you take you anti psychotic meds?
[22:53:54] <paule32> som you don't need calculate all the time
[22:54:10] <CarloWood> It's getting tiresome
[22:54:12] <paule32> wut
[22:54:32] <paule32> there is lot of bootstrap, yes
[22:54:42] <paule32> but you want a playable game ?
[22:54:42] <CarloWood> muted
[22:54:58] <PJBoy> you seem to just string together random sentences
[22:55:09] <paule32> indeed
[22:55:15] <blackbird_0> CarloWood: https://i.imgur.com/6bwD58e.png
[22:56:23] <PJBoy> c'est ennuyeux
[22:58:14] <paule32> the problem on chese is, it is not linar
[22:58:25] <paule32> and you have to backtrack
[22:58:47] *** Quits: blackbird_0 (~blackbird@102.156.210.226) (Remote host closed the connection)
[22:59:02] <paule32> so, kiddy game development are layers
[22:59:15] *** Joins: blackbird_0 (~blackbird@102.156.210.226)
[22:59:42] <blackbird_0> PJBoy: Et bah oui
[23:00:16] <blackbird_0> CarloWood: https://godbolt.org/z/Y1bEh9W81  I'm just playing with complexities ;)
[23:00:40] *** Joins: gareppa (~gareppa@user/gareppa)
[23:01:11] <paule32> 2x R, 2x H, 2x B, 1x Q, and 1x K in line 1 (A), and 8x B in line 2 (front: B) - times 2 - for each player one
[23:01:21] *** Quits: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr) (Quit: Konversation terminated!)
[23:02:07] *** Joins: z8z (~x@ac255238.ppp.asahi-net.or.jp)
[23:02:20] <paule32> so each player has 16 figures - times 2, 32 figures
[23:02:23] *** Joins: proller (~p@2a02:6b8:b081:b70d::1:e)
[23:03:31] <paule32> at round 1, you can move a B on line 2 (one of the 8), of your desire
[23:03:55] <paule32> you can open so, french or spain session
[23:04:43] <paule32> so, you have 8 decisions in the first round !
[23:04:59] <paule32> and
[23:05:18] *** Quits: blackbird_0 (~blackbird@102.156.210.226) (Remote host closed the connection)
[23:05:22] *** Quits: zy (~cc@user/zy) (Ping timeout: 246 seconds)
[23:05:25] <paule32> at first move of each player, you can move the B two fields in front
[23:05:45] *** Joins: blackbird_0 (~blackbird@102.156.210.226)
[23:07:14] <paule32> sorry, not B, P - pawn
[23:07:23] <paule32> B is bishop
[23:07:45] <Raziel> blackbird_0, do you actually care about complexities proper, or about performance?
[23:08:43] *** Quits: gareppa (~gareppa@user/gareppa) (Quit: Leaving)
[23:08:45] <blackbird_0> Raziel: Both
[23:08:51] <Raziel> I mean, big O is nice and all, but it can't beat a good benchmark, as far as my engineering-focused approach is concerned :p
[23:09:11] <paule32> right
[23:09:38] <CarloWood> In the end the only way to make something fast is picking the right algorithm though.
[23:09:58] <blackbird_0> right
[23:10:02] <ville> ...which may not have anything to do with which has better big-O
[23:10:09] <paule32> it give no one algo
[23:10:23] <CarloWood> It can be very important. But you need to know if you 'n' is going to be large. If it isn't then you might be better of concentrating on something else than big O
[23:10:27] <Raziel> and which may involve a lot more than it sounds like
[23:10:45] <paule32> the queen can move over the board fields diagonal, horizontal, vertical by 8 or one move
[23:10:46] <ville> big-O just says there exists N where something wins. if your data never is that N then yeah you're not going to get the win there
[23:10:56] <CarloWood> Ie, very often a vector with O(n) is better/faster than a map with O(log n)
[23:11:19] <Raziel> CarloWood, faster at doing what? :p
[23:11:32] <CarloWood> Generating the porn imagine
[23:11:38] <CarloWood> What else is there in life?
[23:11:47] *** Quits: blackbird_0 (~blackbird@102.156.210.226) (Remote host closed the connection)
[23:11:50] <CarloWood> I can't type... image*
[23:11:55] <Raziel> it sure is monday eh
[23:12:17] *** Joins: blackbird_0 (~blackbird@102.156.210.226)
[23:12:51] <paule32> with image, i mean a 8x8 array, filled with 0, and a number of each figures, and that for black, and white
[23:12:59] <paule32> not bitmap or so
[23:13:16] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:cf7:8430:63f0:eabe) (Ping timeout: 245 seconds)
[23:13:17] *** Joins: Tobbi__ (~Tobbi@2a02:8108:1240:48ec:f0cf:f5b0:60ea:907f)
[23:13:37] <paule32> and 1
[23:13:43] <paule32> o is black, 1 is white
[23:14:00] <paule32> 0
[23:14:09] <blackbird_0> big-O give you an idea about the efficiency of your code and speed.
[23:14:15] <blackbird_0> right?
[23:14:31] <paule32> the possibility, yes
[23:14:53] <Raziel> blackbird_0, sure, but real code tends to be too complex for big-O to be worth trying to compute
[23:15:16] <paule32> right
[23:15:21] <Raziel> within smaller parts, yeah, sure, but it also tends to be obvious how fucked you are just based on how many nested loops you have :p
[23:15:35] <blackbird_0> a O(n log n) is slower than O(log n)?
[23:15:41] <Raziel> obviously
[23:16:18] <blackbird_0> Raziel: that's why I'm coding very slow :D
[23:16:37] *** Quits: malloy (~jimery@116.30.222.122) (Ping timeout: 265 seconds)
[23:17:03] <paule32> it give the  natural log, and the counter part, mostly, the counter part is slower
[23:17:21] <Raziel> blackbird_0, there's also a quote that goes something like "premature optimization is the root of all evil"
[23:17:22] <blackbird_0> I always to code small parts with better time complexities of the whole project
[23:18:01] <paule32> code is not equal code
[23:18:04] <paule32> sometimes
[23:18:18] <paule32> aka BASIC
[23:18:24] *** Joins: malloy (~jimery@116.30.222.122)
[23:19:17] <blackbird_0> paule32: or Python :)
[23:19:28] <Raziel> blackbird_0, in your earlier example, I'd go for the polite iterative loop just because it's much easier to read, has no issues with stack overflows, and may be faster
[23:19:35] <paule32> nowadays application codes dont use GOTO, see Java
[23:19:41] <Raziel> If a benchmark would show the recursive method to be significantly faster, then maybe I'd use that instead :p
[23:19:53] <paule32> but i don't know why c++ use it, theoretical
[23:20:23] <Raziel> if we also go into parallelization, then the iterative one is definitely going to be faster.
[23:20:38] <blackbird_0> Raziel: Yeah I live that saying :)
[23:20:53] <paule32> under a GUI applications/OS, you have to add the graphical stuff ...
[23:21:58] <blackbird_0> Raziel: yeah with recursion, there is a lot of problems.
[23:22:11] <paule32> windows starts minimal two sessions each process
[23:22:31] <blackbird_0> Recursion, is never used in embedded systems for example.
[23:22:32] <paule32> so if you have luck, you have three running processes / forks
[23:22:48] <rpav> even basic had GOSUB
[23:22:56] <paule32> and DATA
[23:23:00] <paule32> i loved it ...
[23:23:05] <paule32> :(
[23:23:20] <rpav> eh .. quickbasic was OK but still not really good compared to C
[23:24:32] <paule32> hehe, no. the good old evening days which consists of writing down the code of a book, or magazine, to come to the clue at end, that there must be an valide error
[23:24:37] <paule32> yes, that was cewl
[23:25:08] <PJBoy> embedded still uses recursion
[23:25:48] <CarloWood> Alipha: do set<> iterators invalidate when you insert a new element? I thought not :/
[23:25:57] <CarloWood> I'm still getting nonsense :/
[23:26:02] <PJBoy> I've even see tail recursion in old SNES games
[23:26:28] <Alipha> CarloWood: no. Unless you erase the element an iterator is pointing at, clearly
[23:26:32] <CarloWood> Especially in old systems: less memory
[23:26:35] <paule32> the static AI is cool at mario
[23:26:52] <CarloWood> k - thought so, but then why do I get this nonsense :/
[23:27:27] <PJBoy> Alipha, erasing the element an iterator is pointing at by inserting a new element?
[23:27:31] <PJBoy> :p
[23:27:42] <paule32> na
[23:28:05] <Alipha> CarloWood: are you compiling with `-fsanitize=address,undefined -D_GLIBCXX_DEBUG`?
[23:28:57] <Alipha> PJBoy: i'll write a class which uses std::set::erase in its constructor, just for you
[23:29:04] <CarloWood> https://bpa.st/5J3Q
[23:29:17] <PJBoy> haha, very good
[23:29:26] <PJBoy> does insert do construction though?
[23:29:47] <PJBoy> yeah it could do a conversion
[23:30:20] <PJBoy> although that would happen before the insert call is made
[23:30:21] <PJBoy> so no
[23:30:33] <CarloWood> That last position in my paste is printed with:
[23:30:42] <CarloWood>   for (auto i : p->m_reachable_from)
[23:30:51] <CarloWood> and m_reachable_from is filled as:
[23:30:53] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[23:31:12] <CarloWood>         // Update move graph.
[23:31:12] <CarloWood>         node->m_reachable.push_back(res.first);
[23:31:12] <CarloWood>         res.first->m_reachable_from.push_back(node);
[23:31:15] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[23:31:33] <CarloWood> So how can m_reachable be ok and m_reachable_from not? :/
[23:31:45] *** Joins: magla (~gelignite@d53668d6.access.ecotel.net)
[23:31:48] *** Quits: blackbird_0 (~blackbird@102.156.210.226) (Remote host closed the connection)
[23:32:15] *** Joins: blackbird_0 (~blackbird@102.156.210.226)
[23:34:21] *** Joins: johnny (~johnny@user/johnny)
[23:38:18] *** Quits: blackbird_0 (~blackbird@102.156.210.226) (Remote host closed the connection)
[23:38:44] *** Joins: blackbird_0 (~blackbird@102.156.210.226)
[23:40:06] *** Quits: v4mp (~v4mp@user/v4mp) ()
[23:41:10] <CarloWood>         if (res.first->equals(1, -9, 5, -4, 1) && node->equals(0, 2, 0, 2, 1))
[23:41:10] <CarloWood>           std::cout << "WE GET HERE!" << std::endl;
[23:41:11] <CarloWood>         res.first->m_reachable_from.push_back(node);
[23:41:17] <CarloWood> Never printed ...
[23:42:24] *** Tobbi__ is now known as Tobbi
[23:44:00] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Remote host closed the connection)
[23:45:25] <CarloWood> This is where I'll have to add an O(n^2) sanity_check that I call every line of the source code...
[23:45:29] *** Joins: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103)
[23:50:18] *** Quits: Mat_42 (~mat_42@2a02:21b0:644f:d96f:cc9b:fd51:bab3:7103) (Ping timeout: 260 seconds)
[23:50:48] *** Joins: paul424 (~tom@ip-5-172-239-15.multi.internet.cyfrowypolsat.pl)
[23:51:28] <Raziel> CarloWood, sometimes it do be that way
[23:52:47] *** Quits: jsbach (~jsbach@2a01:c22:35df:5200:e30e:9d54:124d:b5be) (Ping timeout: 260 seconds)
[23:54:00] <Friithian> there's a reason you have debug and release builds
[23:54:48] <Raziel> there's also nothing wrong with having checks like that just temporarily. use them to help you figure out what's wrong and fix it, then remove em
[23:54:57] *** Joins: RoKenn (~RoKenn@2001:a61:35b1:ca01:8138:d022:eb69:4daf)
[23:54:57] *** Quits: RoKenn (~RoKenn@2001:a61:35b1:ca01:8138:d022:eb69:4daf) (Changing host)
[23:54:57] *** Joins: RoKenn (~RoKenn@user/rokenn)
[23:55:21] <Friithian> a million couts/cerr s to check that shit be working is how I debug
[23:55:24] <Friithian> a debugger? what's that?
[23:57:01] <Alipha> !grab Friithian
[23:57:01] <nolyc> Alipha: The operation succeeded.
[23:57:48] <ville> here's a gdb frontend i hadn't seen before: https://github.com/nakst/gf
[23:58:52] <ville> haven't tried anything more than a hello world with it though, so who knows
[23:59:59] <Friithian> that cannot be a unique quote
