[00:02:27] *** Quits: OnAironaut (~OnAir@user/onaironaut) (Ping timeout: 256 seconds)
[00:12:05] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[00:14:30] <geraman21[m]> What is the way to uninstall GR if I installed it from source ?
[00:14:50] <geraman21[m]> No matter what I try, GRC is still there
[00:15:20] <geraman21[m]> and 
[00:15:20] <geraman21[m]> `gnuradio-config-info --version` returns
[00:15:20] <geraman21[m]> `v3.10.0.0git-387-g16d1b021`
[00:16:33] <drmpeg> @geraman21 If you changed pybind11, you can have problems with version mismatch.
[00:17:02] <drmpeg> And you'll get that error message.
[00:17:26] *** Joins: IanW_ (~IceChat9@arcanum.force9.co.uk)
[00:17:48] <geraman21[m]> drmpeg: I dont recall doing it, but as I said, VS code installed bunch of extensions, and nothing the error popped
[00:20:30] <drmpeg> It's weird that you have version 2.6.2. Ubuntu 20.04 comes with 2.4.3.
[00:20:57] <geraman21[m]> Oh I have updated Ubuntu yesterda to 20.10
[00:21:15] <geraman21[m]> Shouldnt have done it either :(
[00:22:08] <geraman21[m]> Is there a guide somewhere on how to uninstall GR before a fresh install from source ?
[00:22:28] <flash[m]> does grmodtool use virtual inheritance? That caused me a bit of heartache, for no benefit
[00:22:43] <drmpeg> Do you still have your build directory?
[00:23:13] <geraman21[m]> yes
[00:23:26] <geraman21[m]> oh I should do it from there
[00:23:42] <drmpeg> Then it's just sudo cmake uninstall
[00:24:03] <flash[m]> make uninstall ?
[00:24:23] <flash[m]> or cmake --build --target uninstall ?
[00:24:48] <bpadalino> i have gotten out of the habit to sudo install .. i tend to install to like ~/opt or some other place where it doesn't affect the system
[00:24:50] <drmpeg> Oh yeah. sudo make uninstall.
[00:26:30] <drmpeg> If your CMake version also changed, it may bomb though.
[00:26:52] <geraman21[m]> Uninstallation was ok
[00:27:01] <drmpeg> Sweet.
[00:27:36] <geraman21[m]> Which branch should I install from ?
[00:27:36] <drmpeg> Your lucky you kept the build directory around.
[00:27:59] <geraman21[m]> I honestly wanted to delete it, but forgot where I installed them to begin with, oh well...
[00:28:15] <drmpeg> You had master branch before.
[00:28:24] <flash[m]> the import error says that when Python tried to import "square_ff" it then walked the bases and found "gr::block" and didn't know what to do with that. Looks like something is missing in the pybind layer
[00:28:25] <geraman21[m]> Yes, I am on master now
[00:28:46] <flash[m]> "gr::block" isn't a valid python identifier, so something needs to wrap it
[00:29:15] <drmpeg> @flash Yeah, that's the sign of a pybind11 mismatch.
[00:29:38] <flash[m]> I haven't grown up to pybind11 yet. Still in SWIG
[00:29:46] <drmpeg> The issue came up with the ppa.
[00:30:10] <drmpeg> It was built against a certain version.
[00:30:23] <drmpeg> And folks had trouble with it.
[00:30:59] <flash[m]> meh ... I clicked the wrong link.. I thought I had geraman's code but I had the import issue instead
[00:34:18] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 260 seconds)
[00:48:36] <geraman21[m]> Thanks guys, Reinstalling GR solved it. I guess pybinds were updated with ubuntu update. 
[00:51:19] <drmpeg> I never update Ubuntu like that. I like to use an LTS to the bitter end and then do a fresh install of the new LTS on another disk.
[00:52:04] <geraman21[m]> I shouldnt do that either... Learning on my mistakes slowly, but surely xD
[00:56:08] *** Joins: guerby_ (~guerby@ip165.tetaneutral.net)
[00:56:11] *** Joins: bauw (blupon@zamok.crans.org)
[00:56:27] *** Joins: matt_mills[m]1 (~f0urtyfiv@2001:470:69fc:105::e142)
[00:56:43] <drmpeg> I did update my RISC-V platform to 21.10. But I didn't have much on it, so I just wiped the NVME and did a fresh install.
[00:56:43] *** Quits: guerby (~guerby@ip165.tetaneutral.net) (Read error: Connection reset by peer)
[00:56:43] *** Quits: JacobHoltom[m] (~jholtomgn@2001:470:69fc:105::e159) (Ping timeout: 246 seconds)
[00:56:43] *** Quits: Cienisty (Cienisty@user/cienisty) (Killed (strontium.libera.chat (Nickname regained by services)))
[00:56:47] *** Quits: pomeroy3[m] (~pomeroy3g@2001:470:69fc:105::1:230f) (Ping timeout: 246 seconds)
[00:56:47] *** Quits: neelpandeya[m] (~neelpande@2001:470:69fc:105::e17f) (Ping timeout: 246 seconds)
[00:56:47] *** Quits: gingineer[m] (~gingineer@2001:470:69fc:105::ea49) (Ping timeout: 246 seconds)
[00:56:47] *** Quits: throwaway127[m] (~throwaway@2001:470:69fc:105::e85b) (Ping timeout: 246 seconds)
[00:56:47] *** Quits: mwk088[m] (~mwk088gnu@2001:470:69fc:105::f040) (Ping timeout: 246 seconds)
[00:56:47] *** Quits: CillianODriscoll (~odriscign@2001:470:69fc:105::eb88) (Ping timeout: 246 seconds)
[00:56:47] *** Quits: mait[m] (~maitrforg@2001:470:69fc:105::e170) (Ping timeout: 246 seconds)
[00:56:47] *** Quits: matt_mills[m] (~f0urtyfiv@2001:470:69fc:105::e142) (Ping timeout: 246 seconds)
[00:56:48] *** Quits: cleverca22[m] (~cleverca2@2001:470:69fc:105::9a0) (Ping timeout: 246 seconds)
[00:56:48] *** Joins: mwk088[m] (~mwk088gnu@2001:470:69fc:105::f040)
[00:56:48] *** Quits: frainz[m] (~frainzfai@2001:470:69fc:105::ea2e) (Ping timeout: 246 seconds)
[00:56:48] *** Quits: chm[m] (~chmgnurad@2001:470:69fc:105::1:2451) (Ping timeout: 246 seconds)
[00:57:10] *** Joins: Cienisty (Cienisty@user/cienisty)
[00:57:11] <drmpeg> Still had some annoying issues.
[00:57:15] *** Quits: dionys (dionys@user/dionys) (Ping timeout: 260 seconds)
[00:57:15] *** Quits: thewyliestcoyote (~thewylies@2001:470:69fc:105::e1ab) (Ping timeout: 268 seconds)
[00:57:15] *** Quits: Bewe[m] (~bewegnura@2001:470:69fc:105::e744) (Ping timeout: 268 seconds)
[00:57:15] *** Quits: dreamerchrisMO[m (~dreamerch@2001:470:69fc:105::795c) (Ping timeout: 268 seconds)
[00:57:15] *** Quits: Maescool[m] (~pietermae@2001:470:69fc:105::14a2) (Ping timeout: 268 seconds)
[00:57:15] *** Quits: cognosco[m] (~cognoscoj@2001:470:69fc:105::f152) (Ping timeout: 268 seconds)
[00:57:15] *** Quits: blackvs[m] (~blackvsgn@2001:470:69fc:105::fd25) (Ping timeout: 268 seconds)
[00:57:15] *** Quits: JonathonPendlum[ (~soylentye@2001:470:69fc:105::ec1a) (Ping timeout: 268 seconds)
[00:57:15] *** Quits: AaronGiles[m] (~scangeekg@2001:470:69fc:105::e1a1) (Ping timeout: 268 seconds)
[00:57:15] *** Quits: funkylab[m] (~funkylabg@2001:470:69fc:105::e148) (Ping timeout: 268 seconds)
[00:57:16] *** Quits: xloem[m] (~xloemmatr@2001:470:69fc:105::460d) (Ping timeout: 268 seconds)
[00:57:16] *** Quits: Arathorn (~arathorn@2001:470:69fc:105::1f) (Ping timeout: 268 seconds)
[00:57:16] *** Quits: rmkSDR[m] (~rmkattign@2001:470:69fc:105::1:24b6) (Ping timeout: 268 seconds)
[00:57:16] *** Quits: chibill[m] (~chibillm]@2001:470:69fc:105::5ce) (Ping timeout: 268 seconds)
[00:57:16] *** Quits: geraman21[m] (~geraman21@2001:470:69fc:105::e79d) (Ping timeout: 268 seconds)
[00:57:16] *** Quits: Aang23[m] (~aang23alt@2001:470:69fc:105::c8a1) (Ping timeout: 268 seconds)
[00:57:16] *** Quits: bsf (~bsf@user/bsf) (Ping timeout: 268 seconds)
[00:57:46] *** Quits: ChrisKocks[m] (~cgkocksgn@2001:470:69fc:105::ff33) (Ping timeout: 246 seconds)
[00:57:46] *** Quits: JoshuaJablonowsk (~joshjabgn@2001:470:69fc:105::fc1b) (Ping timeout: 246 seconds)
[00:57:46] *** Quits: ejk[m] (~ejkgnurad@2001:470:69fc:105::e13d) (Ping timeout: 246 seconds)
[00:57:46] *** Quits: JoshMorman[m] (~mormjgnur@2001:470:69fc:105::e17a) (Ping timeout: 246 seconds)
[00:57:46] *** Quits: flynn378[m] (~flynn378g@2001:470:69fc:105::e145) (Ping timeout: 246 seconds)
[00:57:46] *** Quits: troycurtisjr[m] (~troycurti@2001:470:69fc:105::f156) (Ping timeout: 246 seconds)
[00:58:04] *** Quits: prime (~prime@user/prime) (Ping timeout: 268 seconds)
[00:58:11] *** Joins: bsf (~bsf@user/bsf)
[00:58:23] *** Quits: cow225cow[m] (~cow225cow@2001:470:69fc:105::1:1e8d) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: woohay[m] (~woohaygnu@2001:470:69fc:105::1:e0) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: ShaneFlandermeye (~shaneflan@2001:470:69fc:105::e938) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: ajayadahal[m] (~ajayadaha@2001:470:69fc:105::1:35a) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: Blupon (blupon@user/blupon) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: eph123[m] (~eph123gnu@2001:470:69fc:105::e13e) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: kkeller[m] (~kkellergn@2001:470:69fc:105::1:922) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: ransaraw[m] (~ransarawg@2001:470:69fc:105::1:27da) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: jason[m]123 (~jasongnur@2001:470:69fc:105::1:2602) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: VasilVelichkov[m (~vvvelichk@2001:470:69fc:105::e1af) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: muaddib[m] (~muaddibgn@2001:470:69fc:105::fd1f) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: brayan_w[m] (~brayanwgn@2001:470:69fc:105::e755) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: rodrirq[m] (~rodrirqgn@2001:470:69fc:105::ebdb) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: mspears-VE3AGS[m (~mspearsgn@2001:470:69fc:105::eb5e) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: Jayaraj[m] (~jyjnairma@2001:470:69fc:105::8590) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: Cadair (~cadair@2001:470:69fc:105::12) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: psydruid[m] (~psydruidm@2001:470:69fc:105::6fd) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: hu6o[m] (~hu6ognura@2001:470:69fc:105::1:2c46) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: tikhonov[m] (~tikhonovg@2001:470:69fc:105::1:224a) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: benoit[m]1 (~benoitgnu@2001:470:69fc:105::e73b) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: SEhrhard[m] (~typeregnu@2001:470:69fc:105::ec5d) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: tilak[m] (~tilakgnur@2001:470:69fc:105::ec45) (Ping timeout: 264 seconds)
[00:58:23] *** Quits: DerekKozel[m] (~dkozelgnu@2001:470:69fc:105::2f14) (Ping timeout: 264 seconds)
[00:58:44] <drmpeg> Actually, now that I think about it, you may have problems with gr_modtool bind on 21.10
[00:59:38] *** Joins: prime (~prime@user/prime)
[01:00:00] *** Joins: JacobHoltom[m] (~jholtomgn@2001:470:69fc:105::e159)
[01:00:01] *** Joins: pomeroy3[m] (~pomeroy3g@2001:470:69fc:105::1:230f)
[01:00:05] *** Joins: neelpandeya[m] (~neelpande@2001:470:69fc:105::e17f)
[01:00:12] *** Joins: throwaway127[m] (~throwaway@2001:470:69fc:105::e85b)
[01:00:13] *** Joins: CillianODriscoll (~odriscign@2001:470:69fc:105::eb88)
[01:00:13] *** Joins: mait[m] (~maitrforg@2001:470:69fc:105::e170)
[01:00:27] *** Joins: gingineer[m] (~gingineer@2001:470:69fc:105::ea49)
[01:00:37] *** Joins: cow225cow[m] (~cow225cow@2001:470:69fc:105::1:1e8d)
[01:00:39] *** Joins: ajayadahal[m] (~ajayadaha@2001:470:69fc:105::1:35a)
[01:00:39] *** Joins: ShaneFlandermeye (~shaneflan@2001:470:69fc:105::e938)
[01:00:50] *** Joins: woohay[m] (~woohaygnu@2001:470:69fc:105::1:e0)
[01:02:33] *** Joins: frainz[m] (~frainzfai@2001:470:69fc:105::ea2e)
[01:02:57] *** Joins: dreamerchrisMO[m (~dreamerch@2001:470:69fc:105::795c)
[01:03:13] *** Joins: Arathorn (~arathorn@2001:470:69fc:105::1f)
[01:03:13] *** Joins: xloem[m] (~xloemmatr@2001:470:69fc:105::460d)
[01:06:05] *** Joins: blackvs[m] (~blackvsgn@2001:470:69fc:105::fd25)
[01:06:06] *** Joins: Bewe[m] (~bewegnura@2001:470:69fc:105::e744)
[01:06:07] *** Joins: thewyliestcoyote (~thewylies@2001:470:69fc:105::e1ab)
[01:06:07] *** Joins: JonathonPendlum[ (~soylentye@2001:470:69fc:105::ec1a)
[01:06:07] *** Joins: AaronGiles[m] (~scangeekg@2001:470:69fc:105::e1a1)
[01:06:18] *** Joins: cognosco[m] (~cognoscoj@2001:470:69fc:105::f152)
[01:06:47] *** Joins: Maescool[m] (~pietermae@2001:470:69fc:105::14a2)
[01:06:55] *** Joins: funkylab[m] (~funkylabg@2001:470:69fc:105::e148)
[01:07:56] *** Joins: ChrisKocks[m] (~cgkocksgn@2001:470:69fc:105::ff33)
[01:07:58] *** Joins: flynn378[m] (~flynn378g@2001:470:69fc:105::e145)
[01:07:58] *** Joins: JoshuaJablonowsk (~joshjabgn@2001:470:69fc:105::fc1b)
[01:07:59] *** Joins: ejk[m] (~ejkgnurad@2001:470:69fc:105::e13d)
[01:07:59] *** Joins: JoshMorman[m] (~mormjgnur@2001:470:69fc:105::e17a)
[01:08:12] *** Joins: chm[m] (~chmgnurad@2001:470:69fc:105::1:2451)
[01:09:53] *** Joins: dionys (dionys@user/dionys)
[01:10:09] *** Joins: psydruid[m] (~psydruidm@2001:470:69fc:105::6fd)
[01:11:09] *** Joins: Cadair (~cadair@2001:470:69fc:105::12)
[01:12:19] *** Joins: muaddib[m] (~muaddibgn@2001:470:69fc:105::fd1f)
[01:12:19] *** Joins: jason[m]123 (~jasongnur@2001:470:69fc:105::1:2602)
[01:12:20] *** Joins: VasilVelichkov[m (~vvvelichk@2001:470:69fc:105::e1af)
[01:12:20] *** Joins: brayan_w[m] (~brayanwgn@2001:470:69fc:105::e755)
[01:12:20] *** Joins: ransaraw[m] (~ransarawg@2001:470:69fc:105::1:27da)
[01:12:20] *** Joins: eph123[m] (~eph123gnu@2001:470:69fc:105::e13e)
[01:12:20] *** Joins: kkeller[m] (~kkellergn@2001:470:69fc:105::1:922)
[01:12:20] *** Joins: mspears-VE3AGS[m (~mspearsgn@2001:470:69fc:105::eb5e)
[01:12:20] *** Joins: rodrirq[m] (~rodrirqgn@2001:470:69fc:105::ebdb)
[01:12:25] *** Joins: Jayaraj[m] (~jyjnairma@2001:470:69fc:105::8590)
[01:15:00] <Hash[m]> drmpeg: Just found the website dspguide.com while trying to learn more about the FFT design you shared that works so well. That's a pretty nice site
[01:15:12] *** Joins: cleverca22[m] (~cleverca2@2001:470:69fc:105::9a0)
[01:17:13] *** Joins: rmkSDR[m] (~rmkattign@2001:470:69fc:105::1:24b6)
[01:17:18] *** Joins: Aang23[m] (~aang23alt@2001:470:69fc:105::c8a1)
[01:17:19] *** Joins: chibill[m] (~chibillm]@2001:470:69fc:105::5ce)
[01:17:39] *** Joins: geraman21[m] (~geraman21@2001:470:69fc:105::e79d)
[01:19:06] *** Joins: benoit[m]1 (~benoitgnu@2001:470:69fc:105::e73b)
[01:19:06] *** Joins: tikhonov[m] (~tikhonovg@2001:470:69fc:105::1:224a)
[01:19:07] *** Joins: tilak[m] (~tilakgnur@2001:470:69fc:105::ec45)
[01:19:12] *** Joins: SEhrhard[m] (~typeregnu@2001:470:69fc:105::ec5d)
[01:19:12] *** Joins: hu6o[m] (~hu6ognura@2001:470:69fc:105::1:2c46)
[01:19:14] *** Joins: DerekKozel[m] (~dkozelgnu@2001:470:69fc:105::2f14)
[01:19:39] <drmpeg> There's also https://www.dsprelated.com
[01:21:31] *** Joins: troycurtisjr[m] (~troycurti@2001:470:69fc:105::f156)
[01:22:54] <drmpeg> Here's an article about "tricky FSK" :) https://www.dsprelated.com/showarticle/1016.php
[01:24:49] <Hash[m]> Thanks! I didn't have time to dive in and learn because I was trying to get all this working before giving a talk for a security conference that was recorded this morning. So now I can chill out a bit and read
[01:25:13] <Hash[m]> Tricky FSK 🤣
[01:25:19] <drmpeg> Lots of math though.
[01:25:44] <drmpeg> I wish I was better at math.
[01:25:54] <Hash[m]> Down the rabbit hole
[01:27:38] <Hash[m]> Yea, when I win the lottery i'm just going to kick back and become a meth nerd
[01:27:49] <Hash[m]> s/meth/math/
[01:28:11] <nickoe> intentional typo ... I see
[01:28:23] <nickoe> What are you trying to hide? :D
[01:28:32] <drmpeg> Freudian slip.
[01:28:58] <bpadalino> when you say one thing but meant your mother?
[01:29:31] <Hash[m]> If I win the lottery, i'll spring for something classier than meth ;) 
[01:29:38] *** Joins: kraxel[m] (~kraxelgnu@2001:470:69fc:105::1:2c89)
[01:31:15] *** Joins: pharaoh10x[m] (~pharaoh10@2001:470:69fc:105::1:2c8a)
[01:31:59] <drmpeg> I think my drug of choice these days is Häagen-Dazs.
[01:32:12] <kraxel[m]> Hi im trying to figure out how to use an embedded python block to set the center frequency for a osmocom source block, any ideas?
[01:32:31] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 268 seconds)
[01:32:48] <Hash[m]> drmpeg: Mine is reverse engineering and SDR ;)
[01:33:20] <funkylab[m]> kraxel: not the right tool, as far as I reverse, the osmocom source doesn't take in command messages, so there's nothing that an embedded python block could send to it
[01:33:47] <kraxel[m]> i was thinking setting the parameter value in some way?
[01:33:47] <funkylab[m]> I'll be AFK for a while, but it might be a good idea to describe what the overall system you'd want to build is
[01:34:25] <funkylab[m]> kraxel[m]: yes, but an embedded python block is a *block*, and there's nothing you could connect that block to, so you really need no block :)
[01:34:52] <kraxel[m]> Ok ill try to explain it
[01:35:10] *** Quits: murrayn (~murray@static.38.4.181.135.clients.your-server.de) (Changing host)
[01:35:10] *** Joins: murrayn (~murray@user/murrayn)
[01:35:19] <pharaoh10x[m]> I'm in a world of the unknown. Havent been able to use this hackrf as a signal generator 
[01:35:22] <kraxel[m]> Im using a python code to scan for available frequencies and that list i want to send to the osmocom source
[01:35:45] <kraxel[m]> like the top frequency of the list and that list is dynamic
[01:36:00] <kraxel[m]> like a continously running process
[01:37:15] <pharaoh10x[m]> Sorry to just budge in like this, if anyone has any starter flowgraphs for the newer version of gnuradio and hackrf one please let me know
[01:37:40] <pharaoh10x[m]> all im trying to do is generate a signal to jam audio in a meeting room
[01:38:07] <kraxel[m]> oh ok well in that case i guess you just need to a sine signal source and a hackrf_sink
[01:38:28] <kraxel[m]> i think...
[01:38:57] <pharaoh10x[m]> Everywhere i read it says its simple. this newer gnu radio is giving me issues
[01:39:03] <pharaoh10x[m]> havent been havent to transmit anything
[01:39:07] <pharaoh10x[m]> able*
[01:39:46] <pharaoh10x[m]> I'm going to try an older release 3.7.9 on an older ubuntu 18.04
[01:40:00] <funkylab[m]> pharaoh10x[m]: I'd advise you to not do that
[01:40:37] <funkylab[m]> you're not winning anything by going back in time, and "I can't transmit anything" isn't really giving us any clue that your problem has even the slightest relation to the GNU Radio version!
[01:41:16] <funkylab[m]> 3.7 is really in "legacy" mode, nobody uses it for new stuff anymore, and there's very tangible brain drain, because people have stopped using it, so getting help is harder
[01:41:24] <pharaoh10x[m]> The main reason for the back in time concept is due to the WT GUI that is no longer avaliable 
[01:41:37] <funkylab[m]> WX was dead for years 
[01:42:08] <funkylab[m]> we've got replacement for WX, it's QT, and aside from a few specialized visualizations, it can do the same and more!
[01:42:23] <Hash[m]> pharaoh10x[m]: Don't let that part discourage you, just look at and get familiar with the QT versions of those
[01:42:28] <pharaoh10x[m]> hmm ok, ill take your advice 
[01:43:03] <Hash[m]> Then you can run through the Michael Ossmann videos and be good to go
[01:43:18] <funkylab[m]> <kraxel[m]> "Im using a python code to scan..." <- so, this is an interesting problem
[01:43:19] <kraxel[m]> Hmm so if i dont need a block to put my python code in should i just use GRC to generate python that does almost everything i want and put my code there?
[01:43:25] <pharaoh10x[m]> ok, in the mean time any simple scripts?
[01:43:40] <pharaoh10x[m]> flowgraphs*
[01:43:57] <funkylab[m]> kraxel: in later versions of GNU Radio, we'd have multiple approaches to this; what's the version of GNU Radio you're using?
[01:44:36] <funkylab[m]> pharaoh10x: as kraxel said, connect a sine source to a hackrf sink, that's it. There's no simpler flowgraph, not even theoretically!
[01:44:44] <pharaoh10x[m]> Just updated to the latest version, with an updated firmware on the hackrf as well.
[01:45:20] <kraxel[m]> funkylab[m]: im on 3.8.10
[01:45:55] <kraxel[m]> In my mind i realise its a trivial issue but i havent used Gnuradio for 10 years so im stumped to where i should start looking to learn
[01:46:31] <funkylab[m]> ah, sad ;) I don't fully remember, but I think "Python Snippets" came after that. And if you had a recent 3.9, you could use gr-soapy instead of the osmo/hackrf source, and that soapySDR source has a message port where you could actually connect a Python embedded block to :)
[01:46:56] <funkylab[m]> (sad: the version being just a tad too old, but let me check twice, gimme a second!)
[01:47:22] <drmpeg> There's a 3.8.10?
[01:47:47] <pharaoh10x[m]> Can someone literally walk me through this? lol.
[01:47:57] <funkylab[m]> drmpeg: I interpolated a `.` between the 0 and the 1
[01:47:57] <kraxel[m]> oh ill guess i can just update to gnuradio 3.9 and use SoapySDR with my RTL-SDR dongles then
[01:48:00] <pharaoh10x[m]> Just a little push is all thats needed before im here all day
[01:48:39] <drmpeg> What kind of transmitter are you trying to jam?
[01:48:55] <funkylab[m]> pharaoh10x:  this sounds like you'll need a GRC tutorial,, or am I misjudging the situation
[01:49:03] <pharaoh10x[m]> Just the audio in a small meeting room about 120sqft
[01:49:18] <funkylab[m]> kraxel[m]: don't forget that you'll also need the soapySDR rtlsdr driver
[01:49:45] <drmpeg> Again, what kind of transmitter are you trying to jam?
[01:49:52] <kraxel[m]> funkylab[m]: i have the soapysdr source it just doesnt have a msg port
[01:49:58] <funkylab[m]> huh
[01:50:46] <pharaoh10x[m]> drmpeg: No idea
[01:50:50] <pharaoh10x[m]> 0.0
[01:51:21] <drmpeg> Then how do you know what frequency to jam?
[01:51:33] <kraxel[m]> funkylab[m]: it has "command" input to the source just like the osmocom sources
[01:51:42] <kraxel[m]> im using DragonOS btw
[01:51:42] <funkylab[m]> aaaaah!
[01:51:56] <kraxel[m]> But how do i use that?
[01:52:01] <funkylab[m]> if the osmocom source has a command input: that's exactly the message port I was presuming missing!!
[01:52:22] <funkylab[m]> you write a block that has an output message port, which you connect to that port
[01:52:24] <kraxel[m]> Oh i just havent figured out how to set the frequency through the command input
[01:52:43] <pharaoh10x[m]> drmpeg: havent figured that part out yet to be honest
[01:53:17] <kraxel[m]> So how do i set the frequency in the block to get it from the command message?
[01:53:23] <funkylab[m]> pharaoh10x:  you know what? You should **not** be messing with the spectrum everyone needs to use when being that careless. Picture my forehead frowned and my voice stern.
[01:53:23] <Yamakaja[m]> pharaoh10x: Okay, so the first step for you would be to go take a look at the spectrum and determine what you actually want to do ...
[01:53:48] <kraxel[m]> ah thanks anyways
[01:54:16] <Yamakaja[m]> And yeah, please keep funkylabs words in mind, because jamming is a very sensitive topic and i don't think you're ready for it, all the legal issues aside
[01:54:16] <pharaoh10x[m]> pharaoh10x[m]: im fully aware that the tutorials must be gone through
[01:54:23] <drmpeg> Yeah, jamming is pretty evil.
[01:54:27] <pharaoh10x[m]> Will have time soon
[01:54:56] <funkylab[m]> jamming can be pretty evil, but not even knowing what you'll be jamming is just really irresponsible
[01:55:01] <funkylab[m]> this has nothing to do with tutorials
[01:55:28] <pharaoh10x[m]> im trying to create a white noise generator
[01:55:45] <pharaoh10x[m]> so if there is an evil person that cannot obtain illegal data
[01:55:52] <funkylab[m]> that's not how that works.
[01:55:55] <Yamakaja[m]> Uh ....
[01:56:04] <pharaoh10x[m]> im here to learn
[01:56:19] <jholtom> that is very much not how this works lol
[01:56:28] <flash[m]> you need a speaker, not a radio
[01:56:39] <pharaoh10x[m]> ok thanks
[01:56:40] <pharaoh10x[m]> bye
[01:57:00] <jholtom> pharaoh10x[m]: in engineering, there is a lot of context required
[01:57:12] <jholtom> you can certainly jam audio or RF signals with GR
[01:57:50] <Hash[m]> Definitely better success rate jamming audio using a speaker with white noise than trying to do it via RF
[01:58:23] <jholtom> in the jamming for protection of sensitive things, you have to really understand your threat model
[01:58:46] <jholtom> because just having a loud white noise source will not protect you, if I have an array of fancy and sensitive microphones lol
[01:58:57] <jholtom> and your white noise source can be isolated spatially
[01:59:20] <funkylab[m]> pharaoh10x:  please don't think we're concerned because this is a *technical* issue that you've underresearched. As jholtom says, you need to understand what you're intending to do before trying to do it. Because you can do real harm, and be totally ineffective, if you don't understand what you're doing, and without trying to put you down here, that is the case here.
[01:59:53] <pharaoh10x[m]> Majored in cybersecurity
[01:59:55] <pharaoh10x[m]> im fully aware 
[01:59:56] <funkylab[m]> oh dear
[02:00:14] <pharaoh10x[m]> ill do more research, appreciate the help
[02:00:16] <funkylab[m]> no offense, but you haven't done relevant research into your system if this is actually your profession
[02:00:27] <jholtom> funkylab[m]: could also be they can't share the context of the design
[02:00:32] <jholtom> happens a lot with 'security'
[02:00:35] <pharaoh10x[m]> no offense taken
[02:00:48] <jholtom> pharaoh10x[m]: we are happy to help though.  do you actually have an RF system you're trying to jam?
[02:01:42] <jholtom> this definitely comes back to threat model as it seems you're trying to protect a meeting room
[02:01:55] <jholtom> there are government specifications for audio security in meeting rooms, typical mitigations do not include jamming
[02:02:32] <Yamakaja[m]> Are you trying to protect yourself from hidden microphones?
[02:03:19] <pharaoh10x[m]> No. In my meeting room there is no audio or video recording. People tend to not follow through
[02:03:48] <Yamakaja[m]> Oh, that's not something you can jam ... you could try using ultrasound to interfere with the microphones though :D
[02:04:09] <pharaoh10x[m]> jamming wasnt the correct term
[02:04:10] <pharaoh10x[m]> fuzz
[02:04:16] <pharaoh10x[m]> ruin the data
[02:04:26] <funkylab[m]> that's again not how that works, sorry. 
[02:04:27] <pharaoh10x[m]> it can play a song for all i care
[02:04:46] <Yamakaja[m]> If a human can hear it, a microphone usually can too ...
[02:05:09] <jholtom> if your goal is to prevent recording, you must effectively ban all non-your-control electronic devices from the room
[02:05:09] <pharaoh10x[m]> they have those ultrasonic generators
[02:05:19] <pharaoh10x[m]> should have bought that for the price of the rf
[02:05:34] <jholtom> again, the ultrasonic ones don't solve the problem
[02:05:41] <Yamakaja[m]> pharaoh10x: The issue with the ultrasound stuff is, that some microhpones that have water protection like on the iphones are imune to that
[02:06:01] <funkylab[m]> pharaoh10x[m]: um, you're trying to buy security against an underspecified threat. That's probably just opening you to snake oil.
[02:06:05] <Yamakaja[m]> s/ultrasound/ultrasonic/
[02:06:15] <funkylab[m]> you're really not approaching this systematically enough.
[02:06:40] <jholtom> also, I could cite my colleagues work: https://ieeexplore-ieee-org.ezproxy1.lib.asu.edu/abstract/document/9048862
[02:06:40] <funkylab[m]> so, what exactly is your threat model?
[02:06:49] <jholtom> https://ieeexplore.ieee.org/abstract/document/9048862
[02:06:53] <jholtom> without the zotero auto-proxy lol
[02:07:43] <Yamakaja[m]> jholtom: Sound-isolated faraday cage meeting room :D
[02:07:56] <flash[m]> sometimes they play music at the walls/ceiling pointed out, to protect against exterior recording
[02:07:56] <Yamakaja[m]> I'm sure that's a thing somewhere ...
[02:07:58] <funkylab[m]> Yamakaja: you mean abandoned salt mine
[02:08:01] <pharaoh10x[m]> Yamakaja[m]: this sounds about right
[02:08:17] <Yamakaja[m]> pharaoh10x: Not really, that wont help against a sound recorder 
[02:08:28] <pharaoh10x[m]> nothing will?
[02:08:37] <funkylab[m]> again, threat model?
[02:08:49] <Yamakaja[m]> You need that room (or salt mine), metal / electronics detectors at the entrances, or just make everybody enter naked without any equipment :D
[02:09:17] <Yamakaja[m]> Oh wait, that still wont covery everything ... see where i'm going? You need a thread model!
[02:09:25] <flash[m]> think of the human ear as a microphone. You need people to hear, so how can you prevent a microphone from receiving?
[02:09:26] <pharaoh10x[m]> wont be able to answer that without fully understanding radios
[02:10:06] <funkylab[m]> Yamakaja[m]: I don't think taht suffices. Guess the market that decided this specific shape (hint: it's not people who want to carry their phone on their ear) https://www.amazon.com/L8star-Bluetooth-Headset-Earphone-Support/dp/B07KP82TMB/ref=sr_1_5?keywords=Tiny+Phone&qid=1636151944&sr=8-5
[02:10:19] <funkylab[m]> s/I don't think taht suffices. Guess the market that decided this specific shape (hint: it's not people who want to carry their phone on their ear) https://www.amazon.com/L8star-Bluetooth-Headset-Earphone-Support/dp/B07KP82TMB/ref=sr_1_5?keywords=Tiny+Phone&qid=1636151944&sr=8-5/I don't think taht suffices. Guess the market that decided this specific shape (hint: it's not people who want to carry their phone on their ear) /
[02:10:31] <funkylab[m]> s/I don't think taht suffices. Guess the market that decided this specific shape (hint: it's not people who want to carry their phone on their ear) https://www.amazon.com/L8star-Bluetooth-Headset-Earphone-Support/dp/B07KP82TMB/ref=sr_1_5?keywords=Tiny+Phone&qid=1636151944&sr=8-5/I don't think taht suffices. Guess the market that decided this specific shape (hint: it's not people who want to carry their phone on their ear)
[02:10:31] <funkylab[m]> https://www.amazon.com/XBOSS-Mobile-Smallest-Design-Unlocked/dp/B087XWYG1M/ref=sr_1_6?keywords=Tiny+Phone&qid=1636151944&sr=8-6/
[02:11:43] <Yamakaja[m]> Yeah i figured ;)
[02:11:49] <pharaoh10x[m]> alright, im more brain damaged than when i started
[02:11:55] <funkylab[m]> pharaoh10x[m]: that's why we ask you for a threat model, not a *perceived solution model*
[02:13:06] <Yamakaja[m]> pharaoh10x: The important part here is really to take a step back and think about what you actually want to do. Do you want to prevent nation state actors from listening in on your private meetings, or do you want to prevent Karen from accounting from recording your conversation?
[02:13:45] <pharaoh10x[m]> Both are illegal
[02:14:03] <Yamakaja[m]> That's not the point
[02:14:04] <muaddib[m]> Yamakaja[m]: It’s ALWAYS Karen
[02:14:24] <flash[m]> Karen works for a nation state ... for the right price
[02:14:26] <pharaoh10x[m]> nation state actors cannot be stopped, a karen can
[02:14:34] <pharaoh10x[m]> omg....
[02:14:54] <flash[m]> that's why the insider threat is the hardest to secure
[02:15:44] <Hoernchen> oh dear
[02:15:57] <pharaoh10x[m]> There are cameras on my building with muted audio
[02:15:58] <pharaoh10x[m]> static feeds at times
[02:16:52] <pharaoh10x[m]> anyways i wont be able to communicate with you aliens
[02:17:10] <pharaoh10x[m]> the knowledge barrier is great
[02:17:33] <patchvonbraun[m]> https://en.m.wikipedia.org/wiki/Cone_of_Silence_(Get_Smart)
[02:17:36] <pharaoh10x[m]> im going to return this hackrdf
[02:17:48] <pharaoh10x[m]> and purchase one of those ultrasonic jammers and leave it on
[02:17:58] <pharaoh10x[m]> if it works great 
[02:18:08] <pharaoh10x[m]> if not.. oh well lol
[02:18:16] <funkylab[m]> yep, good security comes from buying devices, not from understanding and mitigating your actual threats!
[02:20:02] <Yamakaja[m]> pharaoh10x: Please don't just purchase random devices that claim they solve your issue. Specifically ultrasonic devices have very limited operational range and can require something close to line of sight to the microphone. Also, like i said, some microphones inherently filter out ultrasonic frequencies due to their water proofing, making your "protection" useless
[02:20:22] <patchvonbraun[m]> I have a cromulent phase detractor I’d be willing to sell.
[02:20:51] <Yamakaja[m]> I always have a Turboencabulator or two on hand 
[02:21:13] <Yamakaja[m]> patchvonbraun: Wait, are we talking about the same thing? 
[02:21:56] <funkylab[m]> Yamakaja: I think you might, but I think the Plumbus made it obsolete; not quite sure, though
[02:23:58] <pharaoh10x[m]> it was a pleasure guys
[02:24:08] <pharaoh10x[m]> im going to return this thing, take care
[02:24:32] *** Parts: pharaoh10x[m] (~pharaoh10@2001:470:69fc:105::1:2c8a) ()
[02:24:43] <patchvonbraun[m]> I have a turbo encabulator rusting in the back yard. Hope the pion power coupling doesn’t let go.
[02:25:22] <Yamakaja[m]> https://www.youtube.com/watch?v=jj_rrlZOBrw
[02:25:22] <Yamakaja[m]> "It's not cheap, but i'm sure the government will buy it" 😂
[02:26:08] <Hash[m]> That was an epic conversation 
[02:26:53] <flash[m]> hard to read that with a straight face
[02:26:54] <patchvonbraun[m]> Yamakaja: one needs to watch that again every few years.
[02:28:42] <Hash[m]> "Dingle-arm"
[02:28:48] <Hash[m]> I died
[02:29:47] <Hash[m]> Only $750MM though, Elon Musk might buy one with Dogecoin just to troll :) 
[02:31:01] <flash[m]> https://en.wikipedia.org/wiki/Turboencabulator Retro-Proto-Turbo-Encabulator
[02:31:26] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[02:31:40] <flash[m]> Cyberencabulator ... that's what he needed!
[02:32:48] <patchvonbraun[m]> Needs a helically fed frosnick bushing.
[02:33:38] <flash[m]> http://content.time.com/time/subscriber/article/0,33009,886972,00.html 1946 ... that's some forward thinking
[02:34:43] <Hash[m]> I think all he needed was to quit saying things in conference rooms that would get him fired or indicted if it was recorded... But no one ever wants to do that
[02:36:45] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:41:26] <drmpeg> https://www.w6rz.net/plumbus.mp4
[02:42:28] <flash[m]> that look .... pornographic
[02:42:40] <flash[m]> s/look/looks/
[02:43:06] <patchvonbraun[m]> When my boss catches me saying inappropriate things in my office I usually tell him to go dark himself. But, you know. I’m self employed.
[02:43:39] <funkylab[m]> flash[m]: It's not. 
[02:43:55] <funkylab[m]> ok, at least if you're not a fleeb, but they're not sentient
[02:46:18] <drmpeg> On HBO Max, you can watch Rick and Morty without all the f-bombs bleeped out.
[02:48:57] <Hash[m]> I've never really watched Rick and Morty but have had a few good friends who religiously watch it, might have to pick it up
[02:50:52] <drmpeg> It's pretty bizarre. Maybe not for everyone.
[02:52:18] <Hash[m]> The one episode they had me watch was definitely bizarre but seems like the deeper you get in the more hilarious it is
[02:52:42] <drmpeg> The part I like is that episodes are complex. It takes a few watches to get it all.
[02:53:04] <Yamakaja[m]> It's not really my style either, but there are some good scenes https://www.youtube.com/watch?v=fpZZQ2ov4lc
[02:54:14] <patchvonbraun[m]> My son loves Rick and Morty.
[02:55:00] <patchvonbraun[m]> Me I went on an Archer binge last year.
[02:57:07] <Hash[m]> Yamakaja[m]: That was amazing
[03:01:50] *** Quits: IanW_ (~IceChat9@arcanum.force9.co.uk) (Quit: Bye)
[03:02:36] <jholtom> patchvonbraun[m]: Archer is such a blast
[03:03:35] <patchvonbraun[m]> “Phrasing mother”
[03:06:02] <Hash[m]> drmpeg: Can you explain the high level difference between the Polyphase Synthesizer and the FFT method of combining signals? Where for example would you only be able to use one vs the other?
[03:08:35] <drmpeg> The PFB does a better job at filtering. With the IFFT, there's lots of crud between the repeated signals.
[03:09:44] <drmpeg> I'd have to look at the code to give you a better answer.
[03:14:16] <Hash[m]> I'll take a look on my spectrum analyzer when I finally pull the trigger
[03:15:17] <drmpeg> Are you planning on doing real FHSS?
[03:18:53] <Hash[m]> Yea, for just pure entertainment I wanted to figure out how the hopping pattern is determined. I believe it's a function of the last half of the meter ID, network ID and some lookup table perhaps. Once I can do that then I can build a FHSS transmitter that synchronizes with a meter
[03:19:31] <Yamakaja[m]> What kind of hop-rate are we talking about, and what's the frequency range?
[03:20:01] <Hash[m]> I used a SPI analyzer to listen to the traffic between the uC and the RFIC so I could see the full pattern it hops to set the receiver every 700mS
[03:20:31] <Hash[m]> 260 channels spaced 100kHz, 902-928MHz
[03:21:29] <Yamakaja[m]> 700ms? Sounds like you won't have too much trouble keeping up :D
[03:21:45] <drmpeg> Ok. The IFFT makes things easier. Instead of repeating the signal X times into the IFFT, you would only use 1 slot and fill the rest with zeroes. Which slot you chose would be the frequency in the sequence.
[03:21:49] <Hash[m]> Yea, it's pretty slow 
[03:21:54] <drmpeg> So no tuning.
[03:22:39] <drmpeg> But you'll have to write your own custom block.
[03:22:58] <Yamakaja[m]> Hash: What SDR are you working with?
[03:23:11] <Yamakaja[m]> USRP?
[03:23:22] <Hash[m]> yea, B200
[03:23:54] <Hash[m]> But I like the custom block method and not tying myself to the B200 or any specific hardware 
[03:24:23] <Hash[m]> Lower the cost and barrier to entry for people
[03:24:24] <Yamakaja[m]> Once you start getting into FHSS and timing critical operations, you really can't get too abstract
[03:25:00] <Hash[m]> Yea, at 700mS I might have the luxury, but if it was faster then likely not
[03:25:19] <Yamakaja[m]> How are TX / RX aligned? I.e. how does the transmitter know which frequency bin the receiver is currently listening on? (Even if they both know the sequence, they need to get aligned somehow)
[03:25:43] <Yamakaja[m]> Hash: Even then, you can't really rely on there never being a single dropped sample :/
[03:26:35] <Hash[m]> That's all proprietary information, I believe they synchronize with timestamps that are part of their broadcast transmissions. timing data in hundreths of a second are sent with each burst to specify where in the hop pattern they are
[03:26:49] <Yamakaja[m]> I see
[03:27:29] <Hash[m]> But i'm excited to try this "All The Rfz" transmitter in my faraday cage with some test meters
[03:44:28] *** Quits: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt) (Ping timeout: 268 seconds)
[04:04:17] *** Quits: techwolf12 (~techwolf1@chix-ch.rev.red-panda.be) (Quit: Ping timeout (120 seconds))
[04:04:33] *** Joins: techwolf12 (~techwolf1@chix-ch.rev.red-panda.be)
[04:21:27] *** Joins: Macuser (~Macuser@216.30.159.201)
[06:45:09] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:56:27] *** Quits: techwolf12 (~techwolf1@chix-ch.rev.red-panda.be) (Quit: Ping timeout (120 seconds))
[07:56:42] *** Joins: techwolf12 (~techwolf1@chix-ch.rev.red-panda.be)
[08:42:26] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[08:48:59] *** Quits: Crofton (sid401373@id-401373.lymington.irccloud.com) (Ping timeout: 264 seconds)
[08:50:36] *** Quits: benreynwar (sid299523@id-299523.lymington.irccloud.com) (Ping timeout: 265 seconds)
[08:51:48] *** Joins: benreynwar (sid299523@2a03:5180:f:2::4:9203)
[08:51:52] *** Joins: Crofton (sid401373@2a03:5180:f:2::6:1fdd)
[10:17:31] *** Joins: bandnyquist1 (~Rheanna@101.70.63.236)
[10:17:59] *** Quits: bandnyquist1 (~Rheanna@101.70.63.236) (Remote host closed the connection)
[10:19:26] *** Quits: bandnyquist (~Rheanna@101.70.63.236) (Ping timeout: 260 seconds)
[10:21:07] *** Joins: bandnyquist (~Rheanna@101.70.63.236)
[11:13:27] *** Joins: jemius (~imperator@2001:16b8:2d9b:b200:1fa0:8f28:5578:abac)
[11:40:20] *** Joins: Acinonyx (~acinonyx@user/acinonyx)
[12:30:04] *** Quits: dbanks[m] (~dbanksgnu@2001:470:69fc:105::e134) (Quit: You have been kicked for being idle)
[12:30:04] *** Quits: gnuub[m] (~gnuubgnur@2001:470:69fc:105::1:f45) (Quit: You have been kicked for being idle)
[12:30:09] *** Quits: woohay[m] (~woohaygnu@2001:470:69fc:105::1:e0) (Quit: You have been kicked for being idle)
[13:04:33] *** Joins: wolf1 (~jack@159.196.134.50)
[13:05:12] *** Parts: wolf1 (~jack@159.196.134.50) ()
[13:07:28] <geraman21[m]> Hello guys, my GR is suddenly only using 1 core, this is the case since tomorrow morning. Any ideas on what might be wrong ?
[13:07:30] *** Quits: jemius (~imperator@2001:16b8:2d9b:b200:1fa0:8f28:5578:abac) (Quit: Leaving)
[13:16:01] <DerekKozel[m]> There used to be a single threaded scheduler, but it's been removed for a while now (at least since 3.9)
[13:17:32] <geraman21[m]> Yesterday evening, it was fine, I ran my flowgraph without issues, but from today morning, my acquisition suddenly takes 20 seconds to process, and only 1 core is at 100%, maybe its an issue with the OS, I will try to stress test, to see if it works alright
[13:18:06] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:90c7:972b:4aae:d73a)
[13:18:06] <Yamakaja[m]> You always run into the weirdest issues :D
[13:18:37] <Yamakaja[m]> Are you absolutely sure only one core is being used? Are there still threads for the other blocks?
[13:19:09] <DerekKozel[m]> I don't think there's anything in GNU Radio that could give you that behavior. Something could be pinning all the processes to one core, but that's not something thats likely to happen accidently
[13:19:34] <geraman21[m]> Yamakaja: Ive got ryzen 2700x with 16 threads, only one core is hitting 100% others are at like 15%
[13:20:02] <Yamakaja[m]> geraman21: Well, that's still something. Have you checked out what that one core is being maxed out by?
[13:21:19] <geraman21[m]> Yamakaja: Actually my flowgraph is crashing with >>> Done (return code -11), this is overflow if I remember correctly, I think I might have broken something in the OS maybe
[13:21:33] <Yamakaja[m]> -11 is a segfault
[13:22:26] <DerekKozel[m]> That the flowgraph is segfaulting (or crashing with any error) is a bigger problem than a possible thread assignment problem :)
[13:22:39] <geraman21[m]> Yamakaja: Yes. So I might have overwritten something somewhere. Let me restart and give it another try
[13:23:00] <Yamakaja[m]> Ah sorry, yes. Did you take a look at the backtrace?
[13:25:26] <geraman21[m]> Yamakaja: No I havent, how can I do that ?
[13:25:55] <Yamakaja[m]> Take a look at the kernel logs (journalctl / demsg). If you have system, you can also take a look at the coredump that may have been produced using coredumpctl
[13:26:11] <Yamakaja[m]> s/system/systemd/
[13:26:31] <Yamakaja[m]> s/demsg/dmesg/, s/system/systemd/
[13:26:36] <geraman21[m]> FYI restarting didnt solve the core issue.
[13:28:54] <geraman21[m]> Trying to look into the logs
[13:28:58] <DerekKozel[m]> Did it solve the segfault issue? Do you have a flowgraph running stably first?
[13:29:26] <geraman21[m]> Nope, I have to figure that out :) I have a bug somewhere, I will look into it now
[13:30:07] <DerekKozel[m]> My advice: ignore the cores until you get that solved
[13:40:52] <geraman21[m]> I have fixed the segfault issue, the core issue is still there though 
[13:41:45] <geraman21[m]> I dont really know, how to approach it to be honest. 
[13:42:28] <Yamakaja[m]> Could it be that a single block/thread is just dominating the workload and slowing everything else down?
[13:43:01] <geraman21[m]> Yes, it is the case. So I have one block, which doesnt have any stream input/output ports, only message ports
[13:43:14] <geraman21[m]> This my sort of async block that does heavy computation
[13:43:47] <geraman21[m]> So ususally this block would do its thing for like 4-5 seconds and send results via messages
[13:44:11] <geraman21[m]> But now, it takes 20 seconds for some reason
[13:45:22] <Yamakaja[m]> Are you using any volk kernels, and could something have happened to your volk profile?
[13:46:57] <geraman21[m]> I am doing number of ffts and inverse ffts thereusing gr::fft::fft_complex_fwd and rev
[13:47:08] <geraman21[m]> Thats about it, everything else is basic
[13:48:03] <geraman21[m]> I might have uninstalled a lot of packages yesterday, when trying to remove GR and didnt go through the dependencies installations before building again. But I am pretty sure, everything was fine yesterday evening hm
[13:48:11] <geraman21[m]> I definitely didnt touch volk though
[13:48:27] <geraman21[m]> I will try to install all deps again, to see if something is missing.
[13:49:19] <Yamakaja[m]> gr::fft is using fftw, and a 4x performance regression is really not something i'd have expected out of an fftw update 🤔
[13:50:40] <geraman21[m]> But think before even when this block was running the load was still split among all cores
[13:50:50] <geraman21[m]> I never had a core hitting 100% before
[13:51:08] * geraman21[m] uploaded an image: (22KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/82fdec45c357a932db0f844b26301a2f857d247a/Screenshot%20from%202021-11-06%2010-49-54.png >
[13:51:30] <geraman21[m]> and now this is how my sys monitor looks when acquisition is running
[13:53:36] <geraman21[m]> Okay, all deps were fine.
[13:55:01] *** Joins: IanW_ (~IceChat9@arcanum.force9.co.uk)
[13:55:14] <Yamakaja[m]> Take a look at htop to verify that it's actually your acquisition block that's the bottleneck
[13:55:37] <Yamakaja[m]> The next step would probably to run perf and figure out where your cycles are going
[13:56:10] <geraman21[m]> On it
[14:09:30] <geraman21[m]> the perf looks something like this
[14:09:35] * geraman21[m] uploaded an image: (558KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/d48255b9bf1d8c795c75e1ef99d50af13881faa0/Screenshot%20from%202021-11-06%2011-39-10.png >
[14:11:02] * geraman21[m] uploaded an image: (568KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/1fca602d3a738404cfb1f2fac1a331424fdb88d2/Screenshot%20from%202021-11-06%2011-40-07.png >
[14:12:38] <geraman21[m]> Its just, yesterday evening after I installed the new GR, everything was fine, I just dont understand what changed overnight 
[14:15:15] <Yamakaja[m]> Did you maybe recompile in debug mode?
[14:16:09] <Yamakaja[m]> Try building your OOT module using -DCMAKE_BUILD_TYPE=RelWithDebInfo
[14:20:25] <geraman21[m]> Oh I think I have figured it out
[14:21:11] <geraman21[m]> I have removed Cmake tools this morning, and apparently it was using some weird c++ compiler, I reinstalled it, selected gcc 11.2 and everything works as expected :/
[14:22:01] <geraman21[m]> I have learned a lot of debuggin tools and fixed my segfault problem though, so nothing was in vain, thank you guys :)
[14:22:09] <Yamakaja[m]> Haha, awesome!
[14:30:30] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:90c7:972b:4aae:d73a) (Ping timeout: 260 seconds)
[14:31:21] *** Quits: Acinonyx (~acinonyx@user/acinonyx) (Ping timeout: 245 seconds)
[14:32:05] *** Joins: Acinonyx (~acinonyx@user/acinonyx)
[14:58:21] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 256 seconds)
[15:13:17] *** Quits: yesno (~yesno@109.98.151.179) (Quit: Leaving)
[15:17:51] <schneider> I've got a question about the behaviour of the GPS LED of USRP B210s. I've got the original GPSDO in there, but even with query_gpsdo_sensors saying that it is locked, the LED stays off
[15:18:16] <schneider> is that expected? I can see the LED turn on for a few seconds when the device gets initialized the first time
[15:32:49] <DerekKozel[m]> There's a few different firmwares on those GPSDOs, I don't remember the LED behaviors. Maybe you can find something from Jackson Labs' datasheets
[15:34:54] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[15:38:29] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:90c7:972b:4aae:d73a)
[15:42:12] *** Joins: yesno (~yesno@109.98.151.179)
[15:43:40] *** Joins: duude__- (~duude__@user/duude/x-4676560)
[15:44:49] *** Quits: duude__ (~duude__@user/duude/x-4676560) (Ping timeout: 256 seconds)
[15:45:00] *** duude__- is now known as duude__
[17:12:12] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[17:17:29] <jholtom> schneider: yeah, I have that happen sometimes, and other times the LED does come on when locked
[17:17:55] <jholtom> If I perform certain GPS operations after lock, the LED does seem to come on
[17:22:14] *** Joins: BrianG61UK__ (~BrianG61U@2a02:8010:66b7:dddd:d8fb:653:7302:119b)
[17:24:39] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:d8fb:653:7302:119b) (Ping timeout: 268 seconds)
[17:29:56] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[17:45:00] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:255d:d226:c216:de5d) (Ping timeout: 268 seconds)
[17:45:37] *** Quits: BrianG61UK__ (~BrianG61U@2a02:8010:66b7:dddd:d8fb:653:7302:119b) (Ping timeout: 268 seconds)
[18:06:04] *** Joins: Macuser (~Macuser@216.30.159.201)
[18:07:45] *** Quits: vishwin (~brioux@pool-108-36-200-79.phlapa.fios.verizon.net) (Quit: < debdrup> What is this /quit thing?)
[18:08:04] *** Joins: vishwin (~brioux@2001:470:1f07:302::1)
[18:09:52] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:5472:f098:b74d:61c4)
[18:10:30] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:d8fb:653:7302:119b)
[18:17:12] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:90c7:972b:4aae:d73a) (Quit: uros)
[18:25:07] *** Quits: TheCoffeMaker_ (~TheCoffeM@125-121-245-190.fibertel.com.ar) (Quit: So long and thanks for all the fish)
[18:27:03] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[19:30:08] *** Quits: gingineer[m] (~gingineer@2001:470:69fc:105::ea49) (Quit: You have been kicked for being idle)
[19:57:32] *** Joins: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt)
[20:35:49] *** Joins: jemius (~imperator@2001:16b8:2d9b:b200:1fa0:8f28:5578:abac)
[20:58:15] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:90c7:972b:4aae:d73a)
[21:24:10] <DerekKozel[m]> The Open Tapeout mini-conference is going live in 10 minutes. Folks interested in how analog and digital ICs are designed should catch the livestreams.
[21:24:10] <DerekKozel[m]> https://www.youtube.com/watch?v=wvPZREaP7E0
[21:24:14] <DerekKozel[m]> It's running for two hours today, two hours tomorrow.
[21:24:43] <DerekKozel[m]> Schedule is at https://opentapeout.dev/
[21:27:55] *** Joins: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net)
[21:48:39] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[21:52:31] *** Joins: pcero (~pcero@187.135.224.99)
[21:54:51] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[22:01:46] *** Quits: pcero (~pcero@187.135.224.99) (Ping timeout: 245 seconds)
[22:16:09] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:90c7:972b:4aae:d73a) (Quit: uros)
[22:37:37] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:39:02] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[23:26:12] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:36:06] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:90c7:972b:4aae:d73a)
[23:37:38] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:38:25] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:90c7:972b:4aae:d73a) (Client Quit)
[23:39:03] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
