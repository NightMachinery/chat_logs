[00:05:04] *** Joins: independent56 (~independe@2.25.26.77)
[00:07:22] *** Parts: ubh (~ubh@2001:470:69fc:105::852) ()
[00:08:34] *** Joins: kayprish (~kayprish@cable-188-2-229-172.dynamic.sbb.rs)
[00:09:25] *** Quits: tachoknight (~tachoknig@45.20.162.1) (Quit: Some random bits)
[00:12:21] *** Joins: edrocks (~Ed@user/edrocks)
[00:15:39] *** Quits: src (~src@user/src) (Quit: leaving)
[00:21:09] *** Quits: sizeof_void34 (~Thunderbi@109.252.75.112) (Quit: sizeof_void34)
[00:22:17] <Tv_> ikke: fyi bugfix pushed
[00:23:03] <Tv_> ikke: if this looks really useful, i can extract it. i was kinda planning on doing that anyway, just later
[00:23:19] *** Joins: monke (~monke@user/monke)
[00:23:57] <ikke> I don't have any usecase for it, just interested in how it's implemented
[00:25:42] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[00:26:23] *** Joins: kulak1 (~kulak@user/kulak)
[00:27:49] *** Joins: andlabs (~andlabs@71.190.119.164)
[00:30:11] *** Joins: tachoknight (~tachoknig@45.20.162.1)
[00:32:00] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[00:32:44] *** Quits: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi) (Ping timeout: 255 seconds)
[00:38:55] *** Quits: tachoknight (~tachoknig@45.20.162.1) (Quit: Some random bits)
[00:39:03] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[00:39:18] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[00:39:32] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[00:40:30] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 265 seconds)
[00:40:39] *** Quits: Vigdis (~danj@ns4.chown.me) (Ping timeout: 255 seconds)
[00:41:04] *** Quits: tebruno99 (~quassel-c@c-67-175-180-140.hsd1.il.comcast.net) (Remote host closed the connection)
[00:44:36] *** Quits: jespada (~jespada@90.254.247.46) (Quit: Textual IRC Client: www.textualapp.com)
[00:50:39] *** Joins: dr0n (~nabromov@195.200.221.75)
[00:51:07] *** Quits: independent56 (~independe@2.25.26.77) (Read error: Connection reset by peer)
[00:51:18] *** Joins: independent56 (~independe@2.25.26.77)
[00:52:21] *** Quits: rthur (~arthur@lfbn-idf1-1-912-97.w86-238.abo.wanadoo.fr) (Ping timeout: 255 seconds)
[00:54:24] *** Quits: be3uykpy (~be3uykpy@141.226.9.247) (Quit: Leaving)
[00:56:10] *** Joins: Vigdis (~danj@ns4.chown.me)
[00:57:28] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[00:58:07] *** Joins: kulak1 (~kulak@user/kulak)
[00:59:52] *** Quits: Torr (~Torr@user/torr) (Quit: leaving)
[01:01:54] *** Joins: independent_ (~independe@2.25.26.77)
[01:05:24] *** Quits: lonelycode (~marti@202.150.118.61) (Ping timeout: 255 seconds)
[01:06:08] *** Joins: dhollinger (~dhollinge@ip68-13-48-63.om.om.cox.net)
[01:08:11] *** Joins: arinov (~arinov@212.156.215.30)
[01:09:41] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[01:09:50] *** Quits: edrocks (~Ed@user/edrocks) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:17:05] *** Joins: DeltaNova (~DeltaNova@user/deltanova)
[01:18:26] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - http://znc.in)
[01:20:03] *** Quits: DeltaNova (~DeltaNova@user/deltanova) (Client Quit)
[01:29:37] *** Quits: theoceaniscool (~theoceani@119.12.241.167) (Ping timeout: 258 seconds)
[01:35:33] *** Quits: dr0n (~nabromov@195.200.221.75) (Ping timeout: 255 seconds)
[01:47:36] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1002)
[01:50:38] *** Quits: notepad (~notepad@129.159.46.243) (Quit: The Lounge - https://thelounge.chat)
[01:51:33] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 265 seconds)
[01:52:01] *** Joins: notepad (~notepad@129.159.46.243)
[01:52:42] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1002) (Quit: ZNC 1.8.2 - https://znc.in)
[01:53:44] *** Joins: tebruno99 (~quassel-c@c-67-175-180-140.hsd1.il.comcast.net)
[01:54:06] *** Quits: Kane (~Kane@2a01:e34:ee89:5d90:3408:ac54:94e7:7659) (Quit: Leaving)
[02:03:17] *** Joins: jespada (~jespada@90.254.247.46)
[02:09:49] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[02:11:05] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Quit: Leaving)
[02:15:11] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[02:22:36] *** Quits: mikoto-chan (~mikoto-ch@ip-213-49-189-31.dsl.scarlet.be) (Ping timeout: 252 seconds)
[02:24:20] *** Joins: arcatech (~arcatech@user/arcatech)
[02:29:26] *** Joins: dr0n (~nabromov@195.200.221.75)
[02:37:39] *** Quits: arinov (~arinov@212.156.215.30) (Ping timeout: 276 seconds)
[02:38:33] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[02:38:58] *** Joins: kulak1 (~kulak@user/kulak)
[02:42:58] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[02:47:06] *** Quits: independent56 (~independe@2.25.26.77) (Ping timeout: 255 seconds)
[02:47:24] *** Quits: independent_ (~independe@2.25.26.77) (Ping timeout: 276 seconds)
[02:49:01] *** Quits: kayprish (~kayprish@cable-188-2-229-172.dynamic.sbb.rs) (Remote host closed the connection)
[02:53:21] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[02:54:08] *** Quits: OnkelUlla (~uol@ptx.hi.pengutronix.de) (Ping timeout: 272 seconds)
[02:54:13] *** Joins: kulak1 (~kulak@user/kulak)
[02:55:12] *** Quits: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net) (Quit: ZNC 1.8.2 - https://znc.in)
[02:56:17] *** Quits: huh_ (~huh@HSI-KBW-109-193-238-226.hsi7.kabel-badenwuerttemberg.de) (Ping timeout: 255 seconds)
[02:56:24] *** Quits: jannis (~jannis@user/xjs) (Quit: Good night.)
[02:58:50] *** Quits: moto (~moto@user/moto) (Ping timeout: 268 seconds)
[02:59:20] *** Joins: OnkelUlla (~uol@ptx.hi.pengutronix.de)
[02:59:28] *** Joins: moto (~moto@user/moto)
[02:59:41] *** Joins: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net)
[03:03:16] *** Joins: rschmied (~huh@HSI-KBW-109-193-238-226.hsi7.kabel-badenwuerttemberg.de)
[03:04:52] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:06:30] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[03:06:46] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[03:08:33] *** Joins: andlabs (~andlabs@71.190.119.164)
[03:11:25] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[03:15:13] *** Joins: arcatech (~arcatech@user/arcatech)
[03:15:34] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[03:21:53] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[03:28:52] *** Joins: arcatech (~arcatech@user/arcatech)
[03:30:30] *** Quits: dr0n (~nabromov@195.200.221.75) (Quit: WeeChat 2.8)
[03:31:24] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:31:46] *** Joins: jsrnop (~mark@user/jsrnop)
[03:37:08] *** Quits: mort (~mort@188.166.114.29) (Quit: Ping timeout (120 seconds))
[03:37:08] *** Quits: iivvoo (~l@m3r.nl) (Quit: Ping timeout (120 seconds))
[03:37:08] *** Quits: hwm4rgs (~hwm4rgs@user/hwm4rgs) (Quit: Ping timeout (120 seconds))
[03:37:13] *** Joins: spirgel_ (spirgel@gateway/vpn/protonvpn/spirgel)
[03:37:22] *** Joins: hwm4rgs (~hwm4rgs@user/hwm4rgs)
[03:37:28] *** Joins: iivvoo (~l@m3r.nl)
[03:37:41] *** Quits: maidhc (~maidhc@user/maidhc) (Ping timeout: 252 seconds)
[03:37:41] *** Joins: mort (~mort@188.166.114.29)
[03:38:08] *** Quits: mgubyt (u@mgub.yt) (Quit: ZNC - https://znc.in)
[03:38:09] *** Rhvs is now known as Rhys
[03:38:09] *** Quits: Spydar007 (~spydar007@user/spydar007) (Quit: Quit)
[03:38:20] *** Joins: mgubyt (u@mgub.yt)
[03:39:06] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Read error: Connection reset by peer)
[03:39:15] *** Joins: maidhc (~maidhc@user/maidhc)
[03:40:09] *** Joins: Spydar007 (~spydar007@user/spydar007)
[03:40:26] *** Quits: spirgel (spirgel@gateway/vpn/protonvpn/spirgel) (Ping timeout: 252 seconds)
[03:43:43] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[03:46:34] *** Joins: Atque (~Atque@user/atque)
[03:48:31] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[03:50:34] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[03:57:12] *** Quits: Mutsumi (~Mutsumi@99-93-141-12.lightspeed.mssnks.sbcglobal.net) (Quit: What a beautiful day for an airstrike!)
[03:58:59] *** Quits: pepee (~user@user/pepee) (Ping timeout: 268 seconds)
[03:58:59] *** Quits: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net) (Ping timeout: 268 seconds)
[03:59:28] *** Joins: Mutsumi (~Mutsumi@99-93-141-12.lightspeed.mssnks.sbcglobal.net)
[03:59:31] *** Joins: buu (~buu@70-142-48-147.lightspeed.austtx.sbcglobal.net)
[04:00:21] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[04:00:31] *** Joins: pepee (~user@user/pepee)
[04:02:55] *** Quits: rbn (~rbn@orgizm.net) (Quit: leaving)
[04:04:33] *** Joins: rbn (~rbn@sferic.eu)
[04:29:37] *** Quits: ramen23 (~ramen23@56.pool92-178-150.dynamic.orange.es) (Read error: Connection reset by peer)
[04:30:00] *** Quits: jdrab (~jdrab@user/jdrab) (Quit: jdrab)
[04:30:17] *** Joins: ramen23 (~ramen23@56.pool92-178-150.dynamic.orange.es)
[04:30:34] *** Joins: jdrab (~jdrab@2a03:4000:48:1a8:44c5:2fff:fe15:f20d)
[04:30:34] *** Quits: jdrab (~jdrab@2a03:4000:48:1a8:44c5:2fff:fe15:f20d) (Changing host)
[04:30:34] *** Joins: jdrab (~jdrab@user/jdrab)
[04:33:56] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 255 seconds)
[04:39:00] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[04:39:54] *** Quits: tlgs (~tlgs@188-141-56-55.dynamic.upc.ie) (Quit: Leaving)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:35] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:48:11] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 258 seconds)
[04:51:03] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[04:55:45] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[05:03:29] *** Quits: hposca (~hposca@node-1w7jr9phoke2u784enbks8vht.ipv6.telus.net) (Ping timeout: 252 seconds)
[05:04:08] *** Joins: hexfive (~eric@50.35.83.177)
[05:05:45] *** Quits: spirgel_ (spirgel@gateway/vpn/protonvpn/spirgel) ()
[05:08:00] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[05:10:57] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[05:11:14] *** Joins: jsrnop (~mark@user/jsrnop)
[05:12:01] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Quit: Ping timeout (120 seconds))
[05:12:20] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[05:18:14] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[05:18:48] *** Joins: kulak1 (~kulak@user/kulak)
[05:44:50] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[05:49:16] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[05:55:36] *** Joins: califax- (~califax@user/califx)
[05:57:13] *** Joins: cskr (~cskr@49.207.218.84)
[05:58:34] *** Quits: califax (~califax@user/califx) (Ping timeout: 244 seconds)
[05:58:35] *** califax- is now known as califax
[06:00:44] *** Joins: oxum (~oxum@106.203.217.191)
[06:01:34] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:05:33] *** Quits: oxum (~oxum@106.203.217.191) (Ping timeout: 255 seconds)
[06:20:59] *** Quits: zwr (~zwr@2804:14c:5bc5:8b2c:d486:b000:9fc0:b091) (Quit: Lost terminal)
[06:21:47] *** Joins: zwr (~zwr@2804:14c:5bc5:8b2c:d486:b000:9fc0:b091)
[06:24:12] *** Quits: tebruno99 (~quassel-c@c-67-175-180-140.hsd1.il.comcast.net) (Remote host closed the connection)
[06:29:43] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[06:30:01] *** Quits: sztanpet (sztanpet@user/sztanpet) (Quit: asd)
[06:31:22] *** Quits: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1) (Ping timeout: 240 seconds)
[06:31:51] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Quit: Ping timeout (120 seconds))
[06:32:14] *** Joins: jkovac12 (~jkovac1@user/jkovac1)
[06:32:16] *** Joins: pmcnabb (~pmcnabb@user/pmcnabb)
[06:32:23] *** Joins: sztanpet (sztanpet@znc.sztanpet.net)
[06:32:23] *** Quits: sztanpet (sztanpet@znc.sztanpet.net) (Changing host)
[06:32:23] *** Joins: sztanpet (sztanpet@user/sztanpet)
[06:32:25] *** Quits: cskr (~cskr@49.207.218.84) (Quit: Leaving)
[06:32:44] *** Quits: jkovac1 (~jkovac1@user/jkovac1) (Read error: Connection reset by peer)
[06:32:45] *** jkovac12 is now known as jkovac1
[06:33:05] *** Quits: effprime (~effprime@user/effprime) (Remote host closed the connection)
[06:33:56] *** Joins: effprime (~effprime@user/effprime)
[06:38:52] *** Joins: zhangxiaofei (~fzhan@111.203.234.210)
[06:41:52] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[06:46:07] *** Joins: frost (~frost@59.71.241.179)
[06:47:14] *** Joins: oxum (~oxum@106.203.217.191)
[06:49:12] *** Quits: normen (~normen@p200300d7173dc900b42d5fd945c5ae64.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[06:52:11] *** Quits: oxum (~oxum@106.203.217.191) (Ping timeout: 265 seconds)
[06:53:21] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[06:54:08] *** Joins: kulak1 (~kulak@user/kulak)
[06:56:13] *** Joins: arcatech (~arcatech@user/arcatech)
[06:58:06] *** Joins: hposca (~hposca@node-1w7jr9phoke2tgwo5dsrqdhce.ipv6.telus.net)
[06:59:40] *** Quits: ramen23 (~ramen23@56.pool92-178-150.dynamic.orange.es) (Ping timeout: 258 seconds)
[07:01:44] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[07:03:30] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[07:04:57] *** Joins: kulak1 (~kulak@user/kulak)
[07:05:28] *** Joins: ramen23 (~ramen23@56.pool92-178-150.dynamic.orange.es)
[07:08:29] *** Joins: xsznix (~xsznix@104-14-31-126.lightspeed.austtx.sbcglobal.net)
[07:09:26] *** Joins: noteness (noteness@user/noteness)
[07:12:44] *** Parts: xsznix (~xsznix@104-14-31-126.lightspeed.austtx.sbcglobal.net) ()
[07:12:46] *** Joins: gggp (~gggp@111.63.14.119)
[07:17:46] *** Quits: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com) (Remote host closed the connection)
[07:18:35] *** Joins: normen (~normen@p200300d7173dc900b42d5fd945c5ae64.dip0.t-ipconnect.de)
[07:19:02] *** Quits: rabbitear (~juice@142.93.115.104) (Quit: Lost terminal)
[07:19:15] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Remote host closed the connection)
[07:20:52] *** Joins: LiftLeft (~LiftLeft@154.16.192.8)
[07:22:04] *** Joins: paddymahoney (~paddymaho@cpe9050ca207f83-cm9050ca207f80.cpe.net.cable.rogers.com)
[07:22:52] *** Joins: Atque (~Atque@user/atque)
[07:26:06] *** Quits: kulak1 (~kulak@user/kulak) (Ping timeout: 256 seconds)
[07:26:25] *** Joins: kulak1 (~kulak@user/kulak)
[07:27:25] *** Joins: gggp_ (~gggp@123.113.176.157)
[07:30:43] *** Quits: gggp (~gggp@111.63.14.119) (Ping timeout: 258 seconds)
[07:31:57] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[07:33:24] *** Joins: Eddward__ (~Eddward@207.138.204.132)
[07:35:45] *** Quits: Eddward_ (~Eddward@207.138.204.132) (Ping timeout: 250 seconds)
[07:36:01] *** Joins: kulak1 (~kulak@user/kulak)
[07:40:02] *** Quits: gggp_ (~gggp@123.113.176.157) (Ping timeout: 268 seconds)
[07:40:31] *** Joins: rabbitear (~juice@142.93.115.104)
[07:40:42] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[07:41:19] *** Joins: kulak1 (~kulak@user/kulak)
[07:41:24] *** Quits: normen (~normen@p200300d7173dc900b42d5fd945c5ae64.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[07:41:37] *** Quits: rabbitear (~juice@142.93.115.104) (Remote host closed the connection)
[07:43:03] *** Joins: gggp_ (~gggp@111.63.14.119)
[07:43:26] *** Quits: zhangxiaofei (~fzhan@111.203.234.210) (Ping timeout: 252 seconds)
[07:44:01] *** Joins: rabbitear (~juice@142.93.115.104)
[07:45:31] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[07:50:01] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[07:50:54] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[07:51:53] *** Joins: kulak1 (~kulak@user/kulak)
[07:54:05] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[07:55:08] *** Joins: kulak1 (~kulak@user/kulak)
[07:55:27] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[07:58:31] *** Joins: kulak1 (~kulak@user/kulak)
[07:58:43] *** Joins: zhangxiaofei (~fzhan@111.203.234.210)
[07:59:18] *** Joins: Guest85 (~Guest85@103.121.210.115)
[08:00:49] *** Quits: deafpiano (~tomlazar@cpe-65-26-56-76.wi.res.rr.com) (Ping timeout: 265 seconds)
[08:00:50] *** Quits: Guest85 (~Guest85@103.121.210.115) (Client Quit)
[08:02:30] *** Joins: deafpiano (~tomlazar@cpe-65-26-56-76.wi.res.rr.com)
[08:04:59] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:12:34] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[08:12:56] *** Joins: kulak1 (~kulak@user/kulak)
[08:14:30] *** Joins: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net)
[08:17:34] *** Parts: qrpnxz (~qrpnxz@user/qrpnxz) (Disconnected: closed)
[08:27:47] *** Quits: whoami (~whoami@d118-75-170-49.try.wideopenwest.com) (Quit: Someone reboot me.)
[08:33:45] *** Joins: gggp__ (~gggp@123.113.187.192)
[08:36:29] *** Quits: gggp_ (~gggp@111.63.14.119) (Ping timeout: 255 seconds)
[08:43:35] *** Quits: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net) (Read error: Connection reset by peer)
[08:45:46] *** Quits: noteness (noteness@user/noteness) (Ping timeout: 265 seconds)
[08:50:28] *** Quits: gggp__ (~gggp@123.113.187.192) (Read error: Connection reset by peer)
[08:52:59] *** Joins: gggpkm (~gggpkm@111.63.14.119)
[08:58:19] *** Joins: gggpkm_ (~gggpkm@60.10.194.43)
[09:00:25] *** Quits: gggpkm (~gggpkm@111.63.14.119) (Ping timeout: 258 seconds)
[09:04:42] *** Quits: arcatech (~arcatech@user/arcatech) (Ping timeout: 240 seconds)
[09:09:49] *** Joins: gggpkm (~gggpkm@123.113.187.192)
[09:11:23] *** Quits: gggpkm_ (~gggpkm@60.10.194.43) (Ping timeout: 265 seconds)
[09:13:19] *** Quits: cmc (~methos@gateway/tor-sasl/cmc) (Remote host closed the connection)
[09:13:44] *** Joins: cmc (~methos@gateway/tor-sasl/cmc)
[09:16:40] *** Quits: gst (~gst@gateway/tor-sasl/gst) (Remote host closed the connection)
[09:17:01] *** Joins: gst (~gst@gateway/tor-sasl/gst)
[09:25:41] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[09:27:50] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[09:29:19] *** Joins: kulak1 (~kulak@user/kulak)
[09:31:47] *** Joins: independent_ (~independe@2.25.26.77)
[09:31:47] *** Joins: independent56 (~independe@2.25.26.77)
[09:33:29] *** Quits: independent_ (~independe@2.25.26.77) (Remote host closed the connection)
[09:33:29] *** Quits: independent56 (~independe@2.25.26.77) (Remote host closed the connection)
[09:33:47] *** Joins: independent_ (~independe@2.25.26.77)
[09:33:47] *** Joins: independent56 (~independe@2.25.26.77)
[09:34:21] *** Quits: LiftLeft (~LiftLeft@154.16.192.8) (Ping timeout: 255 seconds)
[09:37:57] *** Quits: ramen23 (~ramen23@56.pool92-178-150.dynamic.orange.es) (Quit: Quit)
[09:38:10] *** Joins: normen (~normen@p200300d7173dc900b42d5fd945c5ae64.dip0.t-ipconnect.de)
[09:38:29] <hendry> does Go have something like eliot-tree for logging I wonder? https://eliot.readthedocs.io/en/stable/quickstart.html
[09:46:38] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[09:47:05] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[09:47:43] *** Joins: kulak1 (~kulak@user/kulak)
[09:49:00] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[09:50:33] *** Joins: kulak1 (~kulak@user/kulak)
[09:51:07] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[09:52:14] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Quit: Ping timeout (120 seconds))
[09:52:33] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[09:54:14] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[09:54:47] *** Joins: kulak1 (~kulak@user/kulak)
[09:56:59] *** Joins: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz)
[10:01:24] *** Joins: LiftLeft (~LiftLeft@37.19.198.130)
[10:07:01] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[10:08:53] *** Joins: theoceaniscool (~theoceani@119.12.241.167)
[10:11:30] *** Quits: normen (~normen@p200300d7173dc900b42d5fd945c5ae64.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[10:14:51] *** Quits: kulak1 (~kulak@user/kulak) (Ping timeout: 255 seconds)
[10:15:42] *** Joins: gggpkm_ (~gggpkm@111.63.14.119)
[10:15:54] *** Joins: kulak1 (~kulak@user/kulak)
[10:16:27] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[10:17:59] *** Quits: gggpkm_ (~gggpkm@111.63.14.119) (Remote host closed the connection)
[10:18:10] *** Quits: gggpkm (~gggpkm@123.113.187.192) (Ping timeout: 252 seconds)
[10:19:56] *** Joins: gggp (~gggp@111.63.14.119)
[10:22:20] *** Joins: kulak1 (~kulak@user/kulak)
[10:23:12] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[10:24:01] *** Quits: sgarciapdx (~serge@irc.shork.io) (Quit: The Lounge - https://thelounge.chat)
[10:25:07] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[10:25:54] *** Joins: kulak1 (~kulak@user/kulak)
[10:29:43] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[10:30:46] *** Joins: sgarciapdx (~serge@irc.shork.io)
[10:31:24] *** Joins: kulak1 (~kulak@user/kulak)
[10:31:59] *** Joins: chasmo77 (~chas77@71.63.241.168)
[10:33:37] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[10:37:42] *** Joins: kulak1 (~kulak@user/kulak)
[10:38:56] *** Quits: purpleidea (~james@user/purpleidea) (Ping timeout: 258 seconds)
[10:40:28] *** Joins: gggp_ (~gggp@111.63.14.119)
[10:42:17] *** Quits: zhangxiaofei (~fzhan@111.203.234.210) (Quit: Leaving.)
[10:42:18] *** Quits: kulak1 (~kulak@user/kulak) (Ping timeout: 240 seconds)
[10:43:16] *** Joins: kulak1 (~kulak@user/kulak)
[10:43:32] *** Quits: gggp (~gggp@111.63.14.119) (Ping timeout: 258 seconds)
[10:49:34] *** Quits: finnb (~finnb@51.15.63.237) (Read error: Connection reset by peer)
[10:49:57] *** Joins: finnb (~finnb@51.15.63.237)
[10:50:28] *** Joins: gggp__ (~gggp@123.113.187.192)
[10:50:39] *** Joins: purpleidea (~james@user/purpleidea)
[10:51:58] *** Quits: znpy (~znpy@user/znpy) (Read error: Connection reset by peer)
[10:53:44] *** Quits: gggp_ (~gggp@111.63.14.119) (Ping timeout: 255 seconds)
[10:55:10] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[10:55:49] *** Joins: kulak1 (~kulak@user/kulak)
[10:58:12] *** Quits: gggp__ (~gggp@123.113.187.192) (Remote host closed the connection)
[10:58:46] *** Joins: gggp__ (~gggp@123.113.176.157)
[11:03:08] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:05:24] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 256 seconds)
[11:05:24] *** Quits: printf (~printf@user/printf) (Read error: Connection reset by peer)
[11:05:52] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[11:06:43] *** Joins: andlabs (~andlabs@71.190.119.164)
[11:07:23] *** Joins: kulak1 (~kulak@user/kulak)
[11:07:27] *** Joins: xsteadfastx (~marv@94.31.101.21)
[11:07:31] *** Joins: printf (~printf@user/printf)
[11:07:44] <sztanpet> looks like a tracing library disguised as an overengineered logging library, yes go does have a multitude of tracing libraries
[11:08:21] *** Joins: frost (~frost@59.71.241.179)
[11:08:35] <sztanpet> jaeger et. al
[11:11:50] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Remote host closed the connection)
[11:12:00] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[11:13:12] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Remote host closed the connection)
[11:13:21] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[11:13:39] *** Quits: Wouter0100 (~Wouter010@entry.nbg.netvos.nl) (Remote host closed the connection)
[11:13:49] *** Joins: Wouter0100 (~Wouter010@entry.nbg.netvos.nl)
[11:15:02] *** Quits: lazyreader (~lazyreade@ec2-34-222-196-228.us-west-2.compute.amazonaws.com) (Read error: Connection reset by peer)
[11:15:29] *** Quits: LtHummus (~lthummus@97-126-113-251.tukw.qwest.net) (Read error: Connection reset by peer)
[11:16:00] *** Joins: LtHummus (~lthummus@97-126-113-251.tukw.qwest.net)
[11:17:12] *** Joins: lazyreader (~lazyreade@ec2-34-222-196-228.us-west-2.compute.amazonaws.com)
[11:20:30] *** Quits: Eddward__ (~Eddward@207.138.204.132) (Ping timeout: 252 seconds)
[11:21:42] *** Joins: saschagrunert (~saschagru@46.128.124.113)
[11:21:44] *** Quits: saschagrunert (~saschagru@46.128.124.113) (Remote host closed the connection)
[11:22:27] *** Joins: saschagrunert (~saschagru@46.128.124.113)
[11:25:45] *** Joins: Ergo^ (~ergo@91.238.59.144)
[11:26:12] *** Joins: rthur (~arthur@lfbn-idf1-1-912-97.w86-238.abo.wanadoo.fr)
[11:27:37] *** Quits: LiftLeft (~LiftLeft@37.19.198.130) (Ping timeout: 258 seconds)
[11:31:41] *** Quits: xsteadfastx (~marv@94.31.101.21) (Quit: WeeChat 3.2)
[11:34:22] *** Joins: xsteadfastx (~marv@94.31.101.21)
[11:40:43] *** Quits: xsteadfastx (~marv@94.31.101.21) (Quit: WeeChat 3.2)
[11:41:00] *** Joins: gggp_ (~gggp@60.10.194.43)
[11:44:14] *** Quits: gggp__ (~gggp@123.113.176.157) (Ping timeout: 268 seconds)
[11:47:19] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[11:47:32] *** Joins: xsteadfastx (~marv@94.31.101.21)
[11:51:52] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[11:54:15] *** Joins: arinov (~arinov@213.194.126.155)
[11:55:43] *** Quits: independent_ (~independe@2.25.26.77) (Ping timeout: 265 seconds)
[11:55:43] *** Quits: independent56 (~independe@2.25.26.77) (Ping timeout: 265 seconds)
[11:56:15] *** Joins: fef (~thedawn@user/thedawn)
[11:56:47] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[12:00:50] *** Joins: Xjs (~jannis@user/xjs)
[12:01:51] *** Quits: Atque (~Atque@user/atque) (Read error: Connection reset by peer)
[12:01:57] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 255 seconds)
[12:02:49] *** Quits: dalan6 (~dalan@61-68-95-57.static.tpgi.com.au) (Quit: Ping timeout (120 seconds))
[12:03:08] *** Joins: dalan6 (~dalan@61-68-95-57.static.tpgi.com.au)
[12:04:13] *** Joins: gggp__ (~gggp@123.113.176.157)
[12:07:08] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[12:07:19] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 265 seconds)
[12:08:10] *** Joins: normen (~normen@p200300d7173dc900b42d5fd945c5ae64.dip0.t-ipconnect.de)
[12:12:49] <gijs> Someone able to help me understand why calling a certain cgo function creates a pointer that escapes the heap?
[12:12:54] *** gijs is now known as gpeskens
[12:15:31] *** Quits: frost (~frost@59.71.241.179) (Quit: Connection closed)
[12:16:01] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[12:16:56] *** Quits: dupondje (~dupondje@artemis.dupie.be) (Quit: dupondje)
[12:17:58] *** Quits: blaisebool (~blaiseboo@static.247.123.46.78.clients.your-server.de) (Quit: ZNC - https://znc.in)
[12:18:36] *** Quits: xsteadfastx (~marv@94.31.101.21) (Quit: WeeChat 3.2)
[12:18:41] *** Joins: blaisebool (~blaiseboo@static.247.123.46.78.clients.your-server.de)
[12:19:04] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[12:19:18] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[12:20:07] *** Joins: xsteadfastx (~marv@94.31.101.21)
[12:27:50] *** Quits: pepee (~user@user/pepee) (Quit: bye $IRC)
[12:31:16] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[12:32:27] *** Joins: josta (~josta@68.235.36.103)
[12:32:34] *** Joins: shka (~herr@109.231.62.239)
[12:36:35] *** Quits: josta (~josta@68.235.36.103) (Client Quit)
[12:36:54] *** Quits: tnez (~el@user/tnez) (Read error: Connection reset by peer)
[12:40:27] *** Joins: gggp_ (~gggp@60.10.194.43)
[12:41:53] *** Joins: josta (~josta@23.226.133.75)
[12:42:12] *** Quits: normen (~normen@p200300d7173dc900b42d5fd945c5ae64.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[12:43:35] *** Quits: g2anj (~v@221.142.186.101) (Quit: .)
[12:44:03] *** Quits: gggp__ (~gggp@123.113.176.157) (Ping timeout: 268 seconds)
[12:45:43] *** Joins: normen (~normen@p200300d7173dc900b42d5fd945c5ae64.dip0.t-ipconnect.de)
[12:47:48] *** Quits: josta (~josta@23.226.133.75) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:48:24] *** Joins: gggp (~gggp@123.113.186.218)
[12:49:53] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 252 seconds)
[12:57:59] *** Joins: dupondje (~dupondje@artemis.dupie.be)
[13:00:27] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 255 seconds)
[13:04:59] *** Joins: Ox151 (~user@user/ox151)
[13:06:34] *** Joins: josta (~josta@68.235.36.99)
[13:06:38] <Ox151> hello, i am trying to use a regexp to exlude a character. I have it as regexp.MustCompile(`(?s)^(\s+)?>[^>](.+)?`) but this does not seem to work for some reason.
[13:07:35] *** Quits: josta (~josta@68.235.36.99) (Client Quit)
[13:08:02] <Ox151> if I remove [^>] it works, but if I leave it in it does not work
[13:08:30] <Ox151> it looks for the start of line for > if it find it it matches, if its >> or >>> it does not match
[13:10:49] <Kyros> Ox151: you would probably have a better chance of getting help in #regex
[13:11:31] *** Joins: znpy (~znpy@user/znpy)
[13:12:50] <Ox151> Kyros: ok thanks, wasn't sure if it was some golang specifics. All other regex testing seems to work
[13:14:39] <Ox151> is there a way to print a string to see any hidden characters like line breaks or carage returns?
[13:15:50] *** Joins: josta (~josta@23.226.133.89)
[13:16:34] <sztanpet> if there is, it will be documented on https://pkg.go.dev/fmt
[13:16:42] <sztanpet> looks like %q
[13:21:24] *** Quits: Xjs (~jannis@user/xjs) (Ping timeout: 256 seconds)
[13:21:27] *** Quits: josta (~josta@23.226.133.89) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:22:42] *** Joins: josta (~josta@68.235.36.98)
[13:23:59] *** Joins: Xjs (~jannis@user/xjs)
[13:24:01] *** Quits: josta (~josta@68.235.36.98) (Client Quit)
[13:25:12] *** Quits: mei (~mei@user/mei) (Quit: mei)
[13:27:52] *** Quits: kochchef (~quassel@80.146.255.46) (Quit: brb)
[13:29:39] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[13:29:53] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[13:30:07] *** Joins: zoey (~zoey@2a02:8084:a080:9e00:7c8c:4b88:b1b8:70e1)
[13:30:37] *** Joins: kochchef (~quassel@80.146.255.46)
[13:34:25] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[13:35:34] *** Quits: Arahael (~arahael@60-242-119-83.tpgi.com.au) (Ping timeout: 268 seconds)
[13:38:52] *** Joins: mcfrdy (~mcfrdy@user/mcfrdy)
[13:43:37] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[13:44:28] *** Joins: josta (~josta@68.235.36.100)
[13:44:34] *** Joins: Kane (~Kane@2a01:e34:ee89:5d90:6c7f:f2b5:7fec:ea7d)
[13:46:39] *** Quits: liam (sid7517@id-7517.brockwell.irccloud.com) (Ping timeout: 252 seconds)
[13:48:03] *** Joins: liam (sid7517@id-7517.brockwell.irccloud.com)
[13:48:53] *** Quits: josta (~josta@68.235.36.100) (Client Quit)
[13:49:46] *** Joins: Arahael (~arahael@203-206-93-248.tpgi.com.au)
[13:50:02] *** Joins: josta (~josta@23.226.133.71)
[13:50:24] *** Quits: normen (~normen@p200300d7173dc900b42d5fd945c5ae64.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[13:50:31] *** Joins: src (~src@user/src)
[13:52:08] *** Quits: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606) (Ping timeout: 258 seconds)
[13:53:05] *** Quits: josta (~josta@23.226.133.71) (Client Quit)
[13:58:33] *** Joins: normen (~normen@p200300d7173dc900b42d5fd945c5ae64.dip0.t-ipconnect.de)
[14:02:33] *** Joins: unnamed (~adi@dslb-088-068-058-132.088.068.pools.vodafone-ip.de)
[14:04:18] *** Quits: xsteadfastx (~marv@94.31.101.21) (Quit: WeeChat 3.2)
[14:06:14] *** Joins: xsteadfastx (~marv@94.31.101.21)
[14:07:34] *** Joins: frost (~frost@59.71.241.179)
[14:09:34] *** Quits: Mutsumi (~Mutsumi@99-93-141-12.lightspeed.mssnks.sbcglobal.net) (Ping timeout: 256 seconds)
[14:11:03] *** Joins: Mutsumi (~Mutsumi@99-93-141-12.lightspeed.mssnks.sbcglobal.net)
[14:12:27] *** Joins: gggp_ (~gggp@123.113.185.45)
[14:13:23] *** Joins: hikhvar7960738 (~thelounge@dynamic-046-114-001-142.46.114.pool.telefonica.de)
[14:14:11] *** Joins: josta (~josta@68.235.36.104)
[14:14:42] *** Quits: gggp (~gggp@123.113.186.218) (Ping timeout: 255 seconds)
[14:15:14] *** Quits: josta (~josta@68.235.36.104) (Client Quit)
[14:15:22] *** Quits: hikhvar796073 (~thelounge@dynamic-046-114-001-143.46.114.pool.telefonica.de) (Ping timeout: 240 seconds)
[14:17:14] <mickey> is there a way to wait on multiple channels simultaneously? something alone the lines of select { case c := <- []chan ... } ?
[14:19:24] *** Joins: connor_goodwolf (~connor@user/connor-goodwolf/x-2615606)
[14:20:59] *** Quits: teasea (~teasea@user/teasea) (Quit: teasea)
[14:21:31] *** Joins: teasea (~teasea@user/teasea)
[14:22:22] <Cork> mickey: as far as i know you need a case for each chan, you could use the fallthrough statement though
[14:22:32] <fizzie> No, but what people do sometimes is to just use one channel, and start a goroutine for each of the input channels to write to that. Or just have the original senders write into a shared channel in the first place. Not always applicable, of course.
[14:22:39] *** Quits: xsteadfastx (~marv@94.31.101.21) (Ping timeout: 265 seconds)
[14:23:34] *** Joins: lompik (~lompik@user/lompik)
[14:23:57] <fizzie> "we deliberately omitted it from Go because the cost of the operation can be very high and we weren't comfortable provided such concise notation for such an expensive operation", says Rob Pike on why it's not directly supported.
[14:25:05] *** Joins: josta (~josta@23.226.133.77)
[14:30:42] *** Quits: beeza (sid53872@id-53872.tinside.irccloud.com) (Ping timeout: 240 seconds)
[14:31:43] *** Joins: beeza (sid53872@id-53872.tinside.irccloud.com)
[14:32:45] *** Quits: josta (~josta@23.226.133.77) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:34:57] *** Joins: josta (~josta@68.235.36.110)
[14:36:22] *** Quits: Herby (~quassel@merkur.graeber-clan.de) (Ping timeout: 245 seconds)
[14:38:08] *** Quits: josta (~josta@68.235.36.110) (Client Quit)
[14:42:08] *** Joins: Herby (~quassel@merkur.graeber-clan.de)
[14:43:02] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[14:43:20] *** Joins: califax (~califax@user/califx)
[14:43:26] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 265 seconds)
[14:44:15] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[14:47:04] *** Quits: Byteflux (~byte@byteflux.net) (Read error: Connection reset by peer)
[14:47:25] *** Joins: Byteflux (~byte@byteflux.net)
[14:48:38] *** Joins: josta (~josta@23.226.133.90)
[14:54:17] *** Joins: dr0n (~nabromov@92.40.255.112.threembb.co.uk)
[14:56:32] *** Quits: Ox151 (~user@user/ox151) (Remote host closed the connection)
[15:00:06] *** Joins: xsteadfastx (~marv@94.31.101.21)
[15:00:35] *** Quits: freswa (~freswa@2a01:4f8:1c0c:804b::2) (Quit: Bye!)
[15:01:25] *** Joins: freswa (~freswa@2a01:4f8:1c0c:804b::2)
[15:03:46] *** Quits: josta (~josta@23.226.133.90) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:04:49] *** Joins: josta (~josta@68.235.36.98)
[15:10:36] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[15:12:30] *** Joins: gggp__ (~gggp@111.63.14.119)
[15:15:54] *** Quits: gggp_ (~gggp@123.113.185.45) (Ping timeout: 255 seconds)
[15:22:53] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 250 seconds)
[15:24:31] *** Quits: unnamed (~adi@dslb-088-068-058-132.088.068.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[15:26:11] *** Joins: unnamed (~adi@dslb-088-068-058-132.088.068.pools.vodafone-ip.de)
[15:29:16] *** Quits: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net) (Read error: Connection reset by peer)
[15:30:00] *** Quits: roxlu (~roxlu@2a01:7c8:aac0:286:8c3a:b01c:3830:245b) (Quit: WeeChat 3.0)
[15:30:46] <Arahael> Sounds like a copout, to me.
[15:31:36] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 272 seconds)
[15:31:39] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:dc78:be8b:cbf2:3635)
[15:35:22] *** Joins: CoolerX (~CoolerX@user/coolerx)
[15:35:32] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 245 seconds)
[15:35:45] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[15:35:59] *** Joins: mickey1 (~user@user/mickey)
[15:36:21] *** Quits: flam (flam@clairlair.xyz) (Ping timeout: 276 seconds)
[15:37:14] *** Quits: mickey (~user@user/mickey) (Ping timeout: 244 seconds)
[15:37:15] *** mickey1 is now known as mickey
[15:37:56] <fizzie> Well, if you want. But the same answer (making potentially costly operations explicit in the code) is given for other design choices of Go as well.
[15:38:32] *** Quits: kwilczynski (sid379192@user/kwilczynski) (Quit: Connection closed for inactivity)
[15:40:48] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 256 seconds)
[15:41:45] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[15:45:53] *** Quits: unnamed (~adi@dslb-088-068-058-132.088.068.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[15:47:36] *** Joins: unnamed (~adi@dslb-088-068-058-132.088.068.pools.vodafone-ip.de)
[15:48:30] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[15:48:44] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[15:53:22] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[15:53:59] *** Joins: gggp_ (~gggp@60.10.194.43)
[15:57:06] *** Quits: gggp__ (~gggp@111.63.14.119) (Ping timeout: 258 seconds)
[16:02:29] *** Joins: gggp__ (~gggp@123.113.187.192)
[16:05:47] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 250 seconds)
[16:11:27] *** Joins: dza (~dza@user/dza)
[16:13:35] *** Quits: hikhvar7960738 (~thelounge@dynamic-046-114-001-142.46.114.pool.telefonica.de) (Ping timeout: 258 seconds)
[16:15:32] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 245 seconds)
[16:15:54] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[16:17:51] *** Joins: independent56 (~independe@2.25.26.77)
[16:17:51] *** Joins: independent_ (~independe@2.25.26.77)
[16:19:03] *** Quits: independent56 (~independe@2.25.26.77) (Remote host closed the connection)
[16:19:03] *** Quits: independent_ (~independe@2.25.26.77) (Remote host closed the connection)
[16:19:21] *** Joins: independent_ (~independe@2.25.26.77)
[16:19:21] *** Joins: independent56 (~independe@2.25.26.77)
[16:26:32] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[16:27:39] *** Joins: gueorgui (~gueorgui@2.30.136.31)
[16:30:02] *** Quits: josta (~josta@68.235.36.98) (Read error: Connection reset by peer)
[16:31:12] *** Joins: mei (~mei@user/mei)
[16:31:29] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 244 seconds)
[16:37:13] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[16:38:03] *** Joins: yoonkn (~user@175.197.208.79)
[16:42:31] *** Joins: agsv (~agsv@207.232.14.6)
[16:42:45] *** Quits: agsv (~agsv@207.232.14.6) (Remote host closed the connection)
[16:43:55] *** Joins: nabromov (~nabromov@94.11.23.235)
[16:44:21] *** Joins: fef (~thedawn@user/thedawn)
[16:44:42] *** Joins: agsv (~agsv@207.232.14.6)
[16:44:50] *** Quits: independent_ (~independe@2.25.26.77) (Ping timeout: 256 seconds)
[16:44:50] *** Quits: independent56 (~independe@2.25.26.77) (Ping timeout: 256 seconds)
[16:45:54] *** Quits: dr0n (~nabromov@92.40.255.112.threembb.co.uk) (Ping timeout: 255 seconds)
[16:47:10] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[16:47:23] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[16:58:14] *** Quits: unnamed (~adi@dslb-088-068-058-132.088.068.pools.vodafone-ip.de) (Ping timeout: 255 seconds)
[16:59:59] <agsv> hi guys, I have a HTTP server that is missing a newline in its responses, and (justifiably) the golang http client errors when it parses the response.
[17:00:12] <agsv> demoed here: https://play.golang.org/p/RgAKzel6inf
[17:00:39] <agsv> is there anything easy I can apply from the go side to read the response?
[17:01:03] <agsv> the target system is some really old legacy one so I can't alter that.
[17:01:11] <CommunistWolf> overriding the stdlib code would require quite a lot of copy-pasting
[17:01:24] <CommunistWolf> perhaps go through a proxy server that fixes the http response?
[17:02:49] <CommunistWolf> well, you might be able to get away with implementing a custom RoundTripper: https://pkg.go.dev/net/http#RoundTripper
[17:03:26] *** Quits: xsteadfastx (~marv@94.31.101.21) (Quit: WeeChat 3.2)
[17:03:27] *** Joins: independent_ (~independe@2.25.26.77)
[17:03:27] *** Joins: independent56 (~independe@2.25.26.77)
[17:06:03] *** Joins: edrocks (~Ed@user/edrocks)
[17:10:32] *** Joins: hikhvar7960738 (~thelounge@dynamic-046-114-001-142.46.114.pool.telefonica.de)
[17:14:00] *** Joins: gggp_ (~gggp@123.113.186.51)
[17:15:24] <agsv> CommunistWolf: yea, I figured those are my options :S thanks for the input!
[17:17:16] *** Quits: gggp__ (~gggp@123.113.187.192) (Ping timeout: 252 seconds)
[17:19:33] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:20:07] *** Joins: xsteadfastx (~marv@94.31.101.21)
[17:25:17] *** Quits: karhunkynsii (~karhunkyn@user/karhunkynsi) (Remote host closed the connection)
[17:26:18] *** Quits: xsteadfastx (~marv@94.31.101.21) (Ping timeout: 240 seconds)
[17:26:27] *** Quits: Nex8192 (~Nex8192@user/nex8192) (Quit: Don't watch me die)
[17:26:38] *** Joins: karhunkynsii (~karhunkyn@user/karhunkynsi)
[17:26:41] *** Quits: noarb (~noarb@user/noarb) (Quit: ZNC 1.8.2 - https://znc.in)
[17:26:43] *** Joins: Nex8192 (~Nex8192@user/nex8192)
[17:26:59] *** Joins: noarb (~noarb@user/noarb)
[17:27:34] *** Quits: glider (~glider@user/glider) (Quit: ZNC 1.9.x-git-111-f2cdc3db - https://znc.in)
[17:27:46] *** Quits: mastardet (~mastardet@user/mastardet) (Ping timeout: 265 seconds)
[17:28:20] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[17:29:13] *** Quits: chasmo77 (~chas77@71.63.241.168) (Ping timeout: 265 seconds)
[17:29:35] *** Joins: mastardet (~mastardet@user/mastardet)
[17:29:57] *** Joins: glider (~glider@user/glider)
[17:30:28] *** Joins: chasmo77 (~chas77@71.63.241.168)
[17:30:34] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[17:30:50] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[17:35:26] *** Joins: gggp__ (~gggp@123.113.182.218)
[17:38:33] *** Quits: gggp_ (~gggp@123.113.186.51) (Ping timeout: 255 seconds)
[17:42:03] *** Quits: gggp__ (~gggp@123.113.182.218) (Read error: Connection reset by peer)
[17:43:58] *** Joins: yoonkn` (~user@175.197.208.79)
[17:44:29] *** Joins: cullsure_ (~cullsure@pool-96-237-166-123.bstnma.fios.verizon.net)
[17:44:37] *** Joins: mollerup (~nmollerup@customer-2a00-7660-1612-0168-cfa8-be86-5a22-ee27.ip6.gigabit.dk)
[17:44:55] *** Joins: Xu_R4 (~dev-dsk-x@user/xu-r/x-9187770)
[17:45:05] *** Joins: iivvoo6 (~l@m3r.nl)
[17:45:06] *** Joins: noonien6 (~noonien@user/noonien)
[17:45:19] *** Joins: Ruxnor9 (kevin@user/kddlb)
[17:45:22] *** Joins: amigan_ (dramoray@dtvax.dynatron.me)
[17:45:22] *** Quits: Ruxnor (kevin@user/kddlb) (Killed (NickServ (GHOST command used by Ruxnor9)))
[17:45:23] *** Ruxnor9 is now known as Ruxnor
[17:45:34] *** Joins: gsthnz- (~gsthnz@user/gsthnz)
[17:45:59] *** Joins: dove_ (~jordan@li1158-85.members.linode.com)
[17:46:01] *** Joins: hsiktas_ (sid224847@id-224847.tooting.irccloud.com)
[17:46:02] *** Joins: DaftCheets_ (sid201914@user/daftmonk)
[17:46:06] *** Joins: LtHummus_ (~lthummus@97-126-113-251.tukw.qwest.net)
[17:47:12] *** Joins: milosz_ (~milosz@user/milosz)
[17:47:13] *** Joins: kochchef_ (~quassel@80.146.255.46)
[17:47:22] *** Quits: noonien6 (~noonien@user/noonien) (Client Quit)
[17:47:24] *** Joins: Torr (~Torr@user/torr)
[17:47:33] *** Joins: pmcnabb3 (~pmcnabb@user/pmcnabb)
[17:47:42] *** Joins: mort1 (~mort@188.166.114.29)
[17:47:56] *** Joins: wolfshappen_ (~waff@irc.furworks.de)
[17:48:18] *** Joins: Herby_ (~quassel@merkur.graeber-clan.de)
[17:48:22] *** Joins: dkeohane1 (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com)
[17:48:24] *** Joins: rabbitear_ (~juice@142.93.115.104)
[17:48:27] *** Joins: explodes_ (~explodes@user/explodes)
[17:48:37] *** Joins: aigoo_ (~aigoo@user/aigoo)
[17:48:40] *** Joins: _rayke (rayke@user/rayke)
[17:48:44] *** Quits: hsiktas (uid224847@id-224847.tooting.irccloud.com) (Ping timeout: 255 seconds)
[17:48:44] *** Quits: DaftCheets (sid201914@user/daftmonk) (Ping timeout: 255 seconds)
[17:48:44] *** Quits: gsthnz (~gsthnz@user/gsthnz) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: yamchah2 (~yamchah2@user/yamchah2) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: dkeohane (~dkeohane@ec2-18-189-29-140.us-east-2.compute.amazonaws.com) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: rabbitear (~juice@142.93.115.104) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: hexfive (~eric@50.35.83.177) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: acidsys (~LSD@2.lsd.systems) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: explodes (~explodes@user/explodes) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: aigoo (~aigoo@user/aigoo) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: koolazer (~koo@user/koolazer) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: Rayke (rayke@user/rayke) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: sjas (~sjas@irc.sjas.de) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: albertito (~nil@37.228.214.223) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: yoonkn (~user@175.197.208.79) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:dc78:be8b:cbf2:3635) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: Herby (~quassel@merkur.graeber-clan.de) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: kochchef (~quassel@80.146.255.46) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: LtHummus (~lthummus@97-126-113-251.tukw.qwest.net) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: printf (~printf@user/printf) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: pmcnabb (~pmcnabb@user/pmcnabb) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: mort (~mort@188.166.114.29) (Ping timeout: 255 seconds)
[17:48:45] *** Quits: iivvoo (~l@m3r.nl) (Ping timeout: 255 seconds)
[17:48:46] *** Quits: darkapex (~darkapex@user/darkapex) (Ping timeout: 255 seconds)
[17:48:46] *** Quits: cullsure (~cullsure@pool-96-237-166-123.bstnma.fios.verizon.net) (Ping timeout: 255 seconds)
[17:48:46] *** Quits: milosz (~milosz@user/milosz) (Ping timeout: 255 seconds)
[17:48:46] *** Quits: ska (~ska@user/ska) (Ping timeout: 255 seconds)
[17:48:46] *** Quits: Thinkofname (~thinkthin@2a01:430:17:1::ffff:1980) (Ping timeout: 255 seconds)
[17:48:46] *** Quits: acid (~acid@user/acid) (Ping timeout: 255 seconds)
[17:48:46] *** Quits: con3 (~con3@143.198.53.32) (Ping timeout: 255 seconds)
[17:48:46] *** Quits: alip (~alip@exherbo/developer/alip) (Ping timeout: 255 seconds)
[17:48:46] *** Quits: nmollerup (~nmollerup@customer-2a00-7660-1612-0168-9b17-b03f-d43a-0145.ip6.gigabit.dk) (Ping timeout: 255 seconds)
[17:48:46] *** Quits: amigan (dramoray@dtvax.dynatron.me) (Ping timeout: 255 seconds)
[17:48:46] *** Quits: nperez (~nperez@86-93-223-59.fixed.kpn.net) (Ping timeout: 255 seconds)
[17:48:46] *** Quits: darkmuggle (darkmuggle@redhat/darkmuggle) (Ping timeout: 255 seconds)
[17:48:46] *** Quits: samhza (sam@2600:3c03::f03c:92ff:fe40:814c) (Ping timeout: 255 seconds)
[17:48:46] *** Quits: noonien (~noonien@user/noonien) (Ping timeout: 255 seconds)
[17:48:46] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 255 seconds)
[17:48:46] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 255 seconds)
[17:48:46] *** Quits: L1Cafe (~L1Cafe@user/l1cafe) (Ping timeout: 255 seconds)
[17:48:46] *** Quits: Xu_R (~dev-dsk-x@user/xu-r/x-9187770) (Ping timeout: 255 seconds)
[17:48:46] *** Quits: dove (~jordan@li1158-85.members.linode.com) (Ping timeout: 255 seconds)
[17:48:46] *** Quits: dale (dale@user/dale) (Ping timeout: 255 seconds)
[17:48:47] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 255 seconds)
[17:48:47] *** Joins: alip (~alip@chesswob.org)
[17:48:47] *** Joins: albertito (~nil@37.228.214.223)
[17:48:47] *** Joins: dale (dale@2600:3c02::f03c:92ff:feb4:61d1)
[17:48:47] *** Joins: samhza (sam@2600:3c03::f03c:92ff:fe40:814c)
[17:48:47] *** DaftCheets_ is now known as DaftCheets
[17:48:47] *** hsiktas_ is now known as hsiktas
[17:48:47] *** Quits: alip (~alip@chesswob.org) (Changing host)
[17:48:47] *** Joins: alip (~alip@exherbo/developer/alip)
[17:48:47] *** Xu_R4 is now known as Xu_R
[17:48:48] *** Quits: dale (dale@2600:3c02::f03c:92ff:feb4:61d1) (Changing host)
[17:48:48] *** Joins: dale (dale@user/dale)
[17:48:53] *** mort1 is now known as mort
[17:48:53] *** pmcnabb3 is now known as pmcnabb
[17:48:53] *** iivvoo6 is now known as iivvoo
[17:48:54] *** Joins: Thinkofname1 (~thinkthin@37.205.12.211)
[17:48:59] *** Joins: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de)
[17:49:03] *** Quits: dostoyevsky2 (~sck@static.251.39.47.78.clients.your-server.de) (Changing host)
[17:49:03] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[17:49:08] *** Joins: L1Cafe (~L1Cafe@user/l1cafe)
[17:49:11] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:dc78:be8b:cbf2:3635)
[17:49:25] *** Joins: con3 (~con3@2604:a880:4:1d0::be:d000)
[17:49:26] *** Joins: darkmuggle (darkmuggle@here.for-the.chat)
[17:49:27] *** Joins: darkapex (~darkapex@user/darkapex)
[17:49:34] *** Joins: acid (~acid@user/acid)
[17:49:35] *** Joins: yamchah2 (~yamchah2@user/yamchah2)
[17:49:45] *** Joins: hexfive (~eric@50.35.83.177)
[17:49:46] *** Joins: ska (~ska@user/ska)
[17:50:05] *** Joins: sjas (~sjas@irc.sjas.de)
[17:50:09] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[17:50:15] *** Joins: LSD (~LSD@2.lsd.systems)
[17:50:18] *** Joins: koolazer (~koo@user/koolazer)
[17:51:19] *** Joins: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be)
[17:53:36] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[17:54:29] *** Joins: nperez (~nperez@86-93-223-59.fixed.kpn.net)
[17:56:48] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 256 seconds)
[17:57:35] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[17:58:54] *** Quits: cullsure_ (~cullsure@pool-96-237-166-123.bstnma.fios.verizon.net) (Remote host closed the connection)
[17:59:58] *** Quits: milosz_ (~milosz@user/milosz) (Remote host closed the connection)
[18:01:46] *** Joins: Atque (~Atque@user/atque)
[18:02:50] <CoolerX> Is there a file system based database?
[18:03:21] <CoolerX> https://github.com/etcd-io/bbolt
[18:05:50] *** Joins: gggpkm (~gggpkm@60.10.194.43)
[18:11:54] *** Joins: Eddward__ (~Eddward@207.138.204.132)
[18:15:01] *** Quits: martinkennelly (~martinken@84.203.21.166) (Quit: Leaving)
[18:18:30] *** Joins: gggpkm_ (~gggpkm@60.10.23.160)
[18:20:06] *** Joins: g2anj (~v@221.142.186.101)
[18:20:57] *** Quits: gggpkm (~gggpkm@60.10.194.43) (Ping timeout: 245 seconds)
[18:25:37] *** Joins: davidkrauser (~davidkrau@user/davidkrauser)
[18:26:20] *** Joins: lilgopher (~textual@c-73-51-174-246.hsd1.il.comcast.net)
[18:27:52] *** Quits: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net) (Quit: WeeChat 3.2)
[18:31:31] *** Joins: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[18:31:39] <j416> I'd guess most databases are based on some sort of file system.
[18:32:30] *** Quits: gggpkm_ (~gggpkm@60.10.23.160) (Ping timeout: 256 seconds)
[18:33:21] *** Joins: gggp (~gggp@111.63.14.119)
[18:33:35] *** Quits: Torr (~Torr@user/torr) (Quit: Lost terminal)
[18:37:12] *** Joins: arcatech (~arcatech@user/arcatech)
[18:40:30] *** Joins: independent__ (~independe@2.25.26.77)
[18:44:08] *** Quits: independent_ (~independe@2.25.26.77) (Ping timeout: 272 seconds)
[18:44:08] *** Quits: independent56 (~independe@2.25.26.77) (Ping timeout: 272 seconds)
[18:45:18] <siXy> CoolerX: can you be clearer about what you actually want to do?
[18:45:25] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[18:45:36] <siXy> (and why)
[18:45:40] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[18:45:55] <Tv_> sound like "not run a separate database server process/server"
[18:46:16] <Tv_> *sounds
[18:50:07] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[18:50:16] <siXy> aaaand back to the 80s we go \o/
[18:50:20] *** Quits: independent__ (~independe@2.25.26.77) (Remote host closed the connection)
[18:50:38] *** Joins: independent__ (~independe@2.25.26.77)
[18:52:20] *** Quits: independent__ (~independe@2.25.26.77) (Remote host closed the connection)
[18:52:39] *** Joins: independent__ (~independe@2.25.26.77)
[18:55:50] *** Quits: independent__ (~independe@2.25.26.77) (Remote host closed the connection)
[18:56:09] *** Joins: independent__ (~independe@2.25.26.77)
[18:57:05] *** aigoo_ is now known as aigoo
[18:57:12] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[18:58:39] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[19:01:32] *** Joins: arcatech (~arcatech@user/arcatech)
[19:04:43] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[19:06:46] *** Joins: arcatech (~arcatech@user/arcatech)
[19:07:12] *** Joins: amahl (~amahl@dsl-jklbng12-54fbca-64.dhcp.inet.fi)
[19:08:02] *** Joins: xsteadfastx (~marv@p5de129a6.dip0.t-ipconnect.de)
[19:09:10] *** Quits: arcatech (~arcatech@user/arcatech) (Client Quit)
[19:10:00] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[19:11:37] *** Joins: arcatech (~arcatech@user/arcatech)
[19:12:16] *** Joins: tebruno99 (~quassel-c@c-67-175-180-140.hsd1.il.comcast.net)
[19:17:08] <CoolerX> siXy, well for an app we need authentication and authorization
[19:17:14] <CoolerX> the app is running in a k8s cluster
[19:17:29] <CoolerX> the authentication is taken care of by a 3rd party identity provider
[19:17:48] <CoolerX> but for authorization we need to store user profiles in a database
[19:17:56] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[19:18:27] *** Quits: frost (~frost@59.71.241.179) (Ping timeout: 265 seconds)
[19:18:37] <CoolerX> I was going to go with something like mysql or some other database but the tech lead said we are going to avoid proper databases because of maintenance issues
[19:19:09] <CoolerX> databases require a team to manage them, etc.
[19:19:37] <CoolerX> so instead we opted for a simple file to store the user data
[19:19:58] *** Joins: samlamamma (~samlamamm@proxy01.se.axis.com)
[19:20:06] <CoolerX> put the info in a file in a k8s volume that gets mounted in all the k8s pods
[19:20:30] <j416> it doesn't sound like a great idea to have multiple instances of your program share a filesystem like that for storage tbh.
[19:20:56] <j416> you'd need to handle the issue with concurrent access and such
[19:21:09] <j416> which any decent database will do for you
[19:21:11] <CoolerX> j416, yeah but the bbolt database mentions that. It uses locks https://github.com/etcd-io/bbolt#opening-a-database
[19:21:16] <CoolerX> "Please note that Bolt obtains a file lock on the data file so multiple processes cannot open the same database at the same time. Opening an already open Bolt database will cause it to hang until the other process closes it. To prevent an indefinite wait you can pass a timeout option to the Open() function:"
[19:21:39] <j416> yes, and that makes the database IO a bottleneck
[19:21:46] <CoolerX> yes
[19:22:22] <CoolerX> I was thinking with a mysql database we can have a row per user and when a user request comes we only need to lock that one row in the database table
[19:22:36] <CoolerX> but with the file based approach I don't think that's an option
[19:25:39] *** Quits: yoonkn` (~user@175.197.208.79) (Remote host closed the connection)
[19:28:35] *** Quits: independent__ (~independe@2.25.26.77) (Ping timeout: 268 seconds)
[19:28:52] *** Joins: oxum (~oxum@106.203.217.191)
[19:31:53] <mikoto-chan> why would I want to use something like dep for my project?
[19:32:57] <ikke> dep was there before modules
[19:33:36] *** Quits: oxum (~oxum@106.203.217.191) (Ping timeout: 276 seconds)
[19:34:10] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 240 seconds)
[19:34:31] <mikoto-chan> so it's outdated?
[19:35:00] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[19:35:09] <ikke> " This repository has been archived by the owner. It is now read-only. "
[19:36:04] <fizzie> I mean, it's even more explicit than that in the README: "Dep was an official experiment to implement a package manager for Go. As of 2020, Dep is deprecated and archived in favor of Go modules, which have had official support since Go 1.11."
[19:36:12] <ikke> yeah
[19:37:40] *** Quits: xsteadfastx (~marv@p5de129a6.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[19:40:05] *** Joins: arinov (~arinov@213.194.126.155)
[19:44:59] *** Quits: samlamamma (~samlamamm@proxy01.se.axis.com) (Quit: Client closed)
[19:48:53] *** Joins: gggp_ (~gggp@60.10.194.43)
[19:50:11] *** Quits: mikoto-chan (~mikoto-ch@ip-193-121-10-50.dsl.scarlet.be) (Quit: mikoto-chan)
[19:51:56] *** Quits: gggp (~gggp@111.63.14.119) (Ping timeout: 255 seconds)
[19:59:36] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Quit: leaving)
[19:59:46] *** Joins: independent__ (~independe@2.25.26.77)
[19:59:49] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[20:00:03] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[20:01:41] <finnb> How do you tell what the actual git commit of a repository go downloads when using "go get"
[20:02:47] *** Quits: hatsu (~user@45.76.36.123) (Quit: hatsu)
[20:03:59] *** Joins: oxum (~oxum@106.203.217.191)
[20:04:10] *** Joins: gggp__ (~gggp@60.10.194.43)
[20:05:20] *** Joins: Snyp (~rksht@49.207.197.197)
[20:07:09] *** Quits: gggp_ (~gggp@60.10.194.43) (Ping timeout: 250 seconds)
[20:07:45] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[20:07:57] *** Joins: hatsu (~user@45.76.36.123)
[20:07:59] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[20:08:35] *** Quits: oxum (~oxum@106.203.217.191) (Ping timeout: 255 seconds)
[20:09:44] <Tv_> 08:51 <j416> which any decent database will do for you     <-- NFS locking is definitely out to hurt you
[20:09:59] <j416> Tv_: hm?
[20:10:08] *** Joins: oxum (~oxum@106.203.217.191)
[20:10:29] <j416> ah, by decent database I meant one that is a server
[20:10:43] <Tv_> j416: basically nfs-as-commonly-implemented is a layer of jello and all of the things you think of as hard guarantees are a little more.. subjective
[20:10:46] <j416> i.e., not just a database file
[20:10:56] <Tv_> ah yes
[20:11:39] <Tv_> finnb: last tagged release if available, master branch if not, you can look at the version it added to go.mod to tell
[20:12:05] <j416> nfs has bitten me more than once before, even trying to use it for what it was intended (or what I assume it was intended for, i.e. just storing and accessing files as a human)
[20:12:22] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Ping timeout: 246 seconds)
[20:12:40] <j416> not sure why but it seems just a hassle
[20:12:50] <Tv_> i ran nfs with thousands of users. it works fine for most uses, but 1) don't breath on it 2) to avoid heartache, don't mutate same files from many clients
[20:12:58] <j416> :D
[20:13:02] <Tv_> nfsv4 makes #2 a lot better, but you're at the mercy of the implementation
[20:13:43] <Snyp> It's kinda weird how you need to send the current loop variable as an argument to the goroutine spawned in a for loop - Go always passes by value, shouldn't it capture variables in a closure also by value?
[20:13:56] <Tv_> we used it for "access your homedir from anywhere", and the usual assumption is that the user is only at one physical location
[20:14:31] <Tv_> Snyp: if you have the function in the goroutine access a variable from its closure, it's the *same variable* for all loop iterations
[20:14:42] *** Quits: oxum (~oxum@106.203.217.191) (Ping timeout: 240 seconds)
[20:14:47] <Tv_> Snyp: can also work around with x := x at start of loop
[20:14:58] <j416> Tv_: nod
[20:15:00] <Tv_> then it's a variable local to that loop iteration
[20:16:30] <Tv_> diskless linux+network boot -> thin client magic -> beefy local server -> home dir that's either local or a nearby nfs server if you're "near home", over the WAN if you're remote
[20:17:22] <Tv_> for bonus points, the same home dir was available to your windows desktop too
[20:17:36] <Tv_> all held together by loving application of bubblegum
[20:23:45] *** Joins: ali (~user@37.238.46.3)
[20:23:57] <finnb> Tv_ - when I inspect the version it asks me to use, it is a huge version number from which the repository doesn't have a tagged version of but somehow go downloads that anyway.
[20:24:28] <Tv_> finnb: sounds like it's pointing at a git commit, then (no release was available / user specifically requested somethign else)
[20:24:34] <Snyp> Tv_: https://play.golang.org/p/Pb3PTrdTs8a I guess you never want to capture a variable's value in a thread anyway since that could be undefined behavior (variable getting modified as part of the loop and read by multiple goroutines without any serialization) - so it's better to pass a copy of all that you need by yourself *anyway*.  Capturing in case of a closure, sure - But then reads and writes
[20:24:36] <Snyp> happen sequentially.
[20:24:53] <Tv_> finnb: e.g. v0.0.0-20200430160008-602fc2ff4a00 is the git commit 602fc2ff4a00
[20:25:19] <finnb> yes, it's literally something like that
[20:25:32] <finnb> so what's the number that precedes the git commit?
[20:25:33] <Tv_> Snyp: https://play.golang.org/p/Cj53qIdG5Zo
[20:25:39] <Tv_> finnb: date
[20:25:45] <finnb> ah
[20:25:46] *** Quits: andlabs (~andlabs@71.190.119.164) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:26:09] *** Quits: ali (~user@37.238.46.3) (Remote host closed the connection)
[20:26:21] <Snyp> Tv_: woah.. I see.
[20:26:39] <fizzie> Pseudoversions are described at https://golang.org/ref/mod#vcs-pseudo if you're curious.
[20:26:47] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[20:26:47] <finnb> So if I wanted to write a script which downloads this repository, I could split by "-" and take the last element
[20:26:53] *** Quits: agsv (~agsv@207.232.14.6) (Remote host closed the connection)
[20:27:12] <Tv_> finnb: there's no guarantee it's even a git repository, behind it all.. what problem is being solved here?
[20:27:55] *** Joins: freakazoid333 (~matt@72.168.176.180)
[20:28:02] *** Joins: andlabs (~andlabs@71.190.119.164)
[20:28:29] <finnb> Tv_, I'd like to download all the dependencies of a go project into a specific folder to inspect what's in there.
[20:28:36] <ikke> finnb: go vendor?
[20:28:49] <Tv_> finnb: yeah go vendor, read through, rm -rf vendor
[20:29:30] <ikke> go mod vendor*
[20:29:49] *** Quits: freakazoid333 (~matt@72.168.176.180) (Read error: Connection reset by peer)
[20:29:56] *** Quits: edrocks (~Ed@user/edrocks) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:30:09] *** Joins: freakazoid333 (~matt@72.168.176.180)
[20:33:23] *** Joins: printf (~printf@user/printf)
[20:34:42] <finnb> Ah cool I didn't know about go mod vendor
[20:35:58] <finnb> Is there a way to get go to tell you if it's a tag or a commit? Like how does it know the difference between:
[20:35:58] <finnb> v0.0.0-20200430160008-602fc2ff4a00 or v1.2.2 ?
[20:35:59] *** Quits: jcajka (~jcajka@89-24-144-111.customers.tmcz.cz) (Quit: Leaving)
[20:37:21] <ikke> go expects semver, and tags to be in the format vx.y.z
[20:37:21] <Tv_> afaik it's impossible to distinguish between a specifically formatter pre-release tag vs a pseudoversion
[20:37:27] <Tv_> which is interesting on its own
[20:38:02] <Tv_> i wonder if go get handles that right, if one introduces a nasty tag
[20:38:26] <Tv_> (of course, go.sum prevents anything bad from happening)
[20:38:43] *** Joins: be3uykpy (~be3uykpy@141.226.9.247)
[20:39:00] <finnb> But could confuse someone running go get and it failing on weird tag names...
[20:39:16] <Tv_> you could DoS a repo you have write access to -- not really ne2ws
[20:39:35] <ikke> "For example, v0.0.0, v1.12.134, v8.0.5-pre, and v2.0.9+meta are valid versions."
[20:39:38] <ikke> https://golang.org/ref/mod#versions
[20:40:58] <finnb> Thanks
[20:41:14] *** Quits: saschagrunert (~saschagru@46.128.124.113) (Remote host closed the connection)
[20:51:04] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[20:51:22] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 245 seconds)
[20:51:36] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[20:51:42] *** Quits: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net) (Excess Flood)
[20:55:54] *** Joins: xlei (znc@pool-68-129-84-118.nycmny.fios.verizon.net)
[20:57:16] *** Quits: witcher (~witcher@2a01:4f8:c2c:711c::1) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[20:57:43] *** Joins: witcher (~witcher@2a01:4f8:c2c:711c::1)
[20:58:15] *** Quits: freakazoid333 (~matt@72.168.176.180) (Read error: Connection reset by peer)
[20:58:24] *** Joins: kiril (~kiril@85.91.153.163)
[20:58:41] *** Joins: freakazoid333 (~matt@72.168.176.180)
[21:06:42] *** Quits: CoolerX (~CoolerX@user/coolerx) (Ping timeout: 240 seconds)
[21:10:51] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 250 seconds)
[21:15:57] *** Quits: independent__ (~independe@2.25.26.77) (Remote host closed the connection)
[21:16:15] *** Joins: independent__ (~independe@2.25.26.77)
[21:18:14] *** Joins: orbyt_v10 (~orbyt_v10@172.92.4.78)
[21:18:57] *** Quits: independent__ (~independe@2.25.26.77) (Remote host closed the connection)
[21:19:16] *** Joins: independent__ (~independe@2.25.26.77)
[21:19:40] *** Quits: nabromov (~nabromov@94.11.23.235) (Quit: WeeChat 2.8)
[21:20:34] *** Joins: tnez (~el@user/tnez)
[21:23:04] *** Quits: orbyt_v10 (~orbyt_v10@172.92.4.78) (Ping timeout: 256 seconds)
[21:23:10] *** Joins: oxum (~oxum@106.203.217.191)
[21:28:10] *** Quits: oxum (~oxum@106.203.217.191) (Ping timeout: 256 seconds)
[21:30:58] <mickey> is there something similar to boolvar ? whatever if true : whatever if false in golang?
[21:31:28] <ikke> no, it does not have a ternary operator
[21:32:20] <mickey> so i'm going to have to prepare a bunch of variables before building up a printf?
[21:34:15] <zsnes> what are you trying to do?
[21:34:20] <zsnes> but, yes
[21:34:58] <mickey> i'm trying to do something like printf("%s", daylight?"yes":"no"), but with a bunch of stuff.
[21:35:28] <mickey> and i'd hate to have a huge if (daylight) { one = blabla; two = blabla... } else { one ... }
[21:37:15] <j416> mickey: you can use %t to print "true" or "false", but you are correct in that there's no shorthand way of printing a different string based on a condition.
[21:37:47] <mickey> damn this is going to be exhausting.
[21:38:04] <zsnes> text/template might be a better way
[21:38:06] <j416> perhaps you can structure your code differently to make it less so
[21:38:50] <ikke> You could make a cond() function that takes a predicate, and returns either the 2nd or 3d argument
[21:42:45] *** Joins: unnamed (~adi@dslb-088-068-058-132.088.068.pools.vodafone-ip.de)
[21:43:48] *** Quits: Snyp (~rksht@49.207.197.197) (Quit: WeeChat 3.2)
[21:44:09] *** Joins: pepee (~user@user/pepee)
[21:44:56] *** Quits: witcher (~witcher@2a01:4f8:c2c:711c::1) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[21:45:24] *** Joins: witcher (~witcher@static.74.224.203.116.clients.your-server.de)
[21:48:14] *** Quits: unnamed (~adi@dslb-088-068-058-132.088.068.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[21:49:24] *** Quits: dale (dale@user/dale) (Remote host closed the connection)
[21:49:54] *** Joins: unnamed (~adi@dslb-088-068-058-132.088.068.pools.vodafone-ip.de)
[21:50:13] <lungaro> what about this mickey https://play.golang.org/p/W8Qh0n928Ho
[21:50:14] *** Joins: dale (dale@user/dale)
[21:50:36] <shka> ikke: C style ternary is more useful because it evaluates only one clause
[21:50:44] *** Joins: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec)
[21:50:50] <ikke> shka: yes, I'm well aware\
[21:50:57] <shka> ok, cool
[21:51:11] *** Joins: gggp_ (~gggp@111.63.14.119)
[21:51:19] <shka> anyway, ternary operators are neat, but not really required
[21:51:43] <ikke> and this function would probably take and return interface{}
[21:51:54] <zsnes> issue with a cond() function is you  need one for each type or you need some type assertions or something
[21:52:06] <shka> and golang emphases minimalistic syntax
[21:52:11] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 252 seconds)
[21:52:19] <shka> no syntax sugar to be found
[21:52:40] *** Joins: sono (~sono@107-209-210-210.lightspeed.sntcca.sbcglobal.net)
[21:52:46] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[21:54:17] *** Quits: gggp__ (~gggp@60.10.194.43) (Ping timeout: 245 seconds)
[21:54:18] <zsnes> it is nice to have ternary for simple stuff like: printf("You have %d %s", nickels, nickels == 1 ? "nickel" : "nickels")
[21:54:44] <j416> zsnes: unless it's polish
[21:54:45] * j416 runs
[21:54:58] <zsnes> like you're not going to create a secondary variable just to store "nickels" vs "nickel"
[21:55:09] *** Quits: kiril (~kiril@85.91.153.163) (Quit: ZNC - http://znc.in)
[21:55:18] <j416> nickel(s) problem solved :)
[21:55:21] <lungaro> just make functions
[21:55:24] <lungaro> its not that hard =P
[21:55:56] <zsnes> well thats why i suggested template, because that kind of logic is appropriate to put in the view side
[21:56:11] <zsnes> more complex then that should be done before displaying the data, imo.
[21:56:36] <lungaro> makes sense
[21:57:06] <lungaro> most the stuff i build isn't that polished, lol
[21:59:59] <j416> s/ed//
[22:01:12] *** Joins: gggp__ (~gggp@111.63.14.119)
[22:03:17] *** Quits: fef (~thedawn@user/thedawn) (Quit: Leaving)
[22:04:51] <fizzie> fmt.Printf("You have %d nickel%s", nickels, map[bool]string{false: "s", true: ""}[nickels == 1])  // just kidding
[22:04:54] *** Quits: gggp_ (~gggp@111.63.14.119) (Ping timeout: 272 seconds)
[22:09:57] *** Quits: davidkrauser (~davidkrau@user/davidkrauser) (Quit: Leaving)
[22:11:53] *** Quits: gggp__ (~gggp@111.63.14.119) (Ping timeout: 255 seconds)
[22:15:31] *** Joins: xsteadfastx (~marv@94.31.101.21)
[22:16:57] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[22:17:39] *** Joins: Ox151 (~user@user/ox151)
[22:17:43] *** Joins: kulak1 (~kulak@user/kulak)
[22:19:19] *** Quits: lompik (~lompik@user/lompik) (Quit: WeeChat 3.2)
[22:24:22] <Ox151> hello, is it possible to use regex groups in golang to capture multiple of the same pattern? eg https://play.golang.org/p/imyM9RfWkmE
[22:24:42] <Ox151> I want to capture each of those links seperatly
[22:25:46] <fizzie> See the FindAllStringSubmatch method instead.
[22:26:03] *** Joins: kiril (~kiril@85.91.153.163)
[22:26:09] <fizzie> (And the package comment, which explains what the various combinations of {All, String, Submatch, Index} mean.)
[22:26:10] *** Quits: kulak1 (~kulak@user/kulak) (Ping timeout: 240 seconds)
[22:26:38] *** Joins: kulak1 (~kulak@user/kulak)
[22:26:49] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[22:26:54] <Ox151> fizzie: ok thank you, i will look at it again. initial look i guess i missed it.
[22:27:06] *** Quits: Vukan (~drazen@2a02:587:d420:c37f:8160:aa0b:cd38:47ec) (Ping timeout: 256 seconds)
[22:27:21] <shiroyasha> fizzie: Even shorter, `map[bool]string{true: "s"}[nickels != 1]` and take advantage of default value of strings :^)
[22:27:25] <shiroyasha> (Just kidding too.)
[22:27:43] <zsnes> does that work?
[22:27:47] <mickey> i decided to give templates a go, might as well learn something new. any idea why .What.Ever is invalid, if the template is provided with a struct { What: X } and X is a struct { Ever: Y }?
[22:28:07] <mickey> (sorry, What is *X, not X)
[22:28:08] <fizzie> Clever.
[22:28:15] *** Joins: kulak1 (~kulak@user/kulak)
[22:29:33] <zsnes> oh thats cool i didn't realize you could use booleans like that..but obviously not good practice :)
[22:30:15] <zsnes> thats like some old school tricks in scripting langauges that convertr booleans to 1/0 to index an array
[22:30:16] *** Quits: freakazoid333 (~matt@72.168.176.180) (Read error: Connection reset by peer)
[22:30:25] <fizzie> Ox151: The expression will probably need some tweaking as well, because the .+ is greedy and will happily match whitespace and everything. And if you want the entire matches only, you'll just need FindAllString without any ()s.
[22:30:25] *** Joins: oxum (~oxum@106.203.217.191)
[22:30:39] *** Joins: freakazoid333 (~matt@72.168.176.180)
[22:31:38] <fizzie> https://play.golang.org/p/lZ8_jQ1aSKL and so on -- though a "correct" regular expression for matching URIs is... a lot more complicated than that. And maybe not worth attempting.
[22:31:52] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[22:32:33] *** Joins: kulak1 (~kulak@user/kulak)
[22:34:55] *** Quits: fossdd (~fossdd@sourcehut/user/fossdd) (Ping timeout: 250 seconds)
[22:34:58] *** Quits: oxum (~oxum@106.203.217.191) (Ping timeout: 240 seconds)
[22:36:02] *** Joins: fossdd (~fossdd@sourcehut/user/fossdd)
[22:38:31] <zsnes> mickey: seems to work fine? https://play.golang.org/p/Hc37HP_JJk3
[22:38:51] *** Quits: kiril (~kiril@85.91.153.163) (Ping timeout: 276 seconds)
[22:39:03] <mickey> then i have to be wrong somewhere else. sorry. i'll go check again.
[22:39:40] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[22:41:56] *** Joins: komish (~quassel@47-184-200-125.dlls.tx.frontiernet.net)
[22:44:19] *** Joins: tg (~tg@rockylinux/infra/tg)
[22:45:38] *** Quits: endigma (~endigma@134.41.133.214) (Quit: Ping timeout (120 seconds))
[22:45:58] *** Joins: endigma (~endigma@134.41.133.214)
[22:47:15] *** Joins: The_Loko (~The_Loko@86.127.235.231)
[22:47:38] *** Quits: jespada (~jespada@90.254.247.46) (Ping timeout: 252 seconds)
[22:49:48] *** Joins: jespada (~jespada@90.254.247.46)
[22:54:07] *** Quits: c10l (~c10l@89.34.167.207) (Read error: Connection reset by peer)
[22:56:11] *** Joins: c10l (~c10l@89.34.167.207)
[22:56:26] *** Quits: unnamed (~adi@dslb-088-068-058-132.088.068.pools.vodafone-ip.de) (Ping timeout: 265 seconds)
[22:56:55] *** Joins: arktnld (~arktnld@179.95.9.254)
[22:57:38] *** Quits: strubbl8919419 (~strubbl@ipbcc107ea.dynamic.kabel-deutschland.de) (Quit: The Lounge - https://thelounge.github.io)
[22:59:05] *** Joins: strubbl8919419 (~strubbl@ipbcc107ea.dynamic.kabel-deutschland.de)
[23:17:12] *** Quits: xsteadfastx (~marv@94.31.101.21) (Ping timeout: 276 seconds)
[23:18:05] *** Joins: unnamed (~adi@dslb-088-068-058-132.088.068.pools.vodafone-ip.de)
[23:25:46] *** Quits: unnamed (~adi@dslb-088-068-058-132.088.068.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[23:27:42] *** Joins: unnamed (~adi@dslb-088-068-058-132.088.068.pools.vodafone-ip.de)
[23:28:18] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[23:29:36] *** Joins: kulak1 (~kulak@user/kulak)
[23:35:29] *** Quits: arinov (~arinov@213.194.126.155) (Remote host closed the connection)
[23:35:53] *** Joins: adanwan_ (~adanwan@gateway/tor-sasl/adanwan)
[23:36:11] *** Quits: adanwan (~adanwan@gateway/tor-sasl/adanwan) (Ping timeout: 244 seconds)
[23:37:14] *** Quits: kulak1 (~kulak@user/kulak) (Read error: Connection reset by peer)
[23:37:59] *** Joins: kulak1 (~kulak@user/kulak)
[23:38:36] *** Quits: Kaivo (~Kaivo@user/kaivo) (Ping timeout: 252 seconds)
[23:38:46] *** Quits: martin_ (~martin@188.113.85.137) (Quit: WeeChat 3.0)
[23:38:55] *** Joins: martin_ (nobody@188.113.85.137)
[23:40:49] *** Joins: Kaivo (~Kaivo@user/kaivo)
[23:46:25] *** Quits: unnamed (~adi@dslb-088-068-058-132.088.068.pools.vodafone-ip.de) (Ping timeout: 250 seconds)
[23:48:24] *** Quits: foobaz212 (~foobaz212@82.33.219.124) (Quit: Client closed)
[23:48:38] *** Joins: foobaz212 (~foobaz212@82.33.219.124)
[23:49:53] *** Joins: milosz (~milosz@user/milosz)
[23:51:44] *** Joins: alimiracle (~user@37.238.46.42)
[23:53:06] *** Joins: unnamed (~adi@dslb-088-068-058-132.088.068.pools.vodafone-ip.de)
[23:58:04] *** Quits: unnamed (~adi@dslb-088-068-058-132.088.068.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
