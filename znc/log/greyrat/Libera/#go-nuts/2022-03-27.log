[00:03:18] *** Quits: habamax (~habamax@user/habamax) (Quit: WeeChat 3.0)
[00:04:25] *** Joins: awmv (~awmv@2a02:1210:18ef:bb00:80f:9b7f:1cc5:b3e5)
[00:06:05] *** Joins: Valentine (~valentine@hackerspacesg/valentine)
[00:06:22] <awmv> Is there a project that generates stuff like sqlc does for CRUD operations? I would really like something to generate not only the methods for CRUD, but endpoints too, with the unit tests that I need ofc. That would be so amazing :))) Is that even realistic?
[00:08:52] *** Quits: awmv (~awmv@2a02:1210:18ef:bb00:80f:9b7f:1cc5:b3e5) (Client Quit)
[00:08:57] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[00:09:10] *** Joins: califax (~califax@user/califx)
[00:11:00] *** Joins: theoceaniscool_ (~theoceani@93.177.120.22)
[00:17:20] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[00:17:55] *** Quits: fef (~thedawn@user/thedawn) (Ping timeout: 240 seconds)
[00:18:09] *** Joins: awmv (~awmv@2a02:1210:18ef:bb00:80f:9b7f:1cc5:b3e5)
[00:20:01] *** Quits: awmv (~awmv@2a02:1210:18ef:bb00:80f:9b7f:1cc5:b3e5) (Client Quit)
[00:20:39] *** Joins: Guest9384 (~Guest93@91-157-111-166.elisa-laajakaista.fi)
[00:21:11] *** Quits: tnez (~el@user/tnez) (Quit: %bye%)
[00:22:10] *** Quits: Guest9384 (~Guest93@91-157-111-166.elisa-laajakaista.fi) (Client Quit)
[00:22:18] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[00:22:29] *** Joins: tnez (~el@user/tnez)
[00:23:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[00:25:18] *** Joins: fling (~fling@user/fling)
[00:32:34] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Remote host closed the connection)
[00:37:15] *** Quits: zap (~zap@gateway/tor-sasl/zap) (Ping timeout: 240 seconds)
[00:38:13] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[00:39:54] *** Joins: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com)
[00:45:30] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[00:47:53] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Client Quit)
[01:01:11] *** Quits: tiferrei (~tiferrei@user/tiferrei) (Remote host closed the connection)
[01:01:25] *** Joins: tiferrei (~tiferrei@user/tiferrei)
[01:08:38] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[01:12:44] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Client Quit)
[01:13:36] *** Quits: stuart (~stuart@55d4dc60.access.ecotel.net) (Ping timeout: 272 seconds)
[01:20:11] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[01:20:21] *** Quits: strubbl891941988 (~strubbl@ipbcc0c7cb.dynamic.kabel-deutschland.de) (Quit: The Lounge - https://thelounge.github.io)
[01:21:43] *** Joins: strubbl891941988 (~strubbl@ipbcc0c7cb.dynamic.kabel-deutschland.de)
[01:22:18] *** Joins: iryith1 (~iryith3@207.81-166-89.customer.lyse.net)
[01:22:29] <nebiros> tristero: I‚Äôm creating one http.Request per goroutine, the only thing I‚Äôm sharing is the http client
[01:22:43] *** Quits: iryith (~iryith3@user/iryith) (Ping timeout: 256 seconds)
[01:23:34] <nebiros> tristero: problem comes when I pass a cookie to the req.AddCookie, it ends on that data race at the Header struct
[01:23:50] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Quit: leaving)
[01:29:12] *** Joins: chandash (~chandash@ip-115-87.wireless.oberlin.edu)
[01:31:09] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 252 seconds)
[01:39:34] *** Quits: iryith1 (~iryith3@207.81-166-89.customer.lyse.net) (Remote host closed the connection)
[01:39:59] *** Joins: iryith1 (~iryith3@207.81-166-89.customer.lyse.net)
[01:43:25] *** Quits: independent56 (~independe@2.26.38.133) (Remote host closed the connection)
[01:43:47] *** Joins: independent56 (~independe@2.26.38.133)
[01:50:31] *** Quits: Midjak (~Midjak@82.66.147.146) (Quit: This computer has gone to sleep)
[01:51:04] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[01:51:20] *** Joins: foobaz212 (~foobaz212@213.205.198.66)
[01:51:45] *** Quits: foobaz212 (~foobaz212@213.205.198.66) (Client Quit)
[01:51:58] *** Joins: foobaz212 (~foobaz212@213.205.198.66)
[01:52:40] *** Quits: foobaz212 (~foobaz212@213.205.198.66) (Client Quit)
[01:53:32] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4.1)
[01:55:56] *** Quits: tyson2 (~user@cpe00fc8d34ff03-cm00fc8d34ff00.sdns.net.rogers.com) (Remote host closed the connection)
[01:58:08] *** Joins: mpldr_ (~mpldr@user/mpldr)
[02:00:42] *** Joins: kakysha (~kakysha@user/kakysha)
[02:01:28] *** Joins: admin123 (~harrymore@37.120.216.194)
[02:02:11] *** Joins: foobaz212 (~foobaz212@213.205.198.66)
[02:03:50] *** Joins: ericlee (~ericlee@23-120-34-97.lightspeed.sntcca.sbcglobal.net)
[02:05:12] *** Joins: treeford (~charleste@user/treeford)
[02:09:38] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 252 seconds)
[02:19:59] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 260 seconds)
[02:21:19] *** Quits: iryith1 (~iryith3@207.81-166-89.customer.lyse.net) (Ping timeout: 256 seconds)
[02:22:51] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[02:23:25] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Client Quit)
[02:24:24] *** Joins: mug3n (~mugen@gateway/tor-sasl/mugen)
[02:25:10] *** Quits: foobaz212 (~foobaz212@213.205.198.66) (Quit: Client closed)
[02:25:35] *** Quits: mugen (~mugen@gateway/tor-sasl/mugen) (Ping timeout: 240 seconds)
[02:25:44] *** Joins: foobaz212 (~foobaz212@213.205.198.66)
[02:27:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[02:29:02] *** Joins: fling (~fling@user/fling)
[02:32:24] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[02:32:39] <tristero> nebiros: if you post the code somewhere, someone might be able to help. I don't see how separate goroutines can access the same req.Header unless you're inadvertently sharing that request
[02:33:11] <nebiros> tristero: sure, I can share it
[02:33:17] <nebiros> hold a min
[02:37:41] *** Quits: admin123 (~harrymore@37.120.216.194) (Ping timeout: 252 seconds)
[02:45:30] *** Joins: lalitmee (~lalitmee@180.94.32.148)
[02:48:39] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[02:50:26] <nebiros> tristero: here: https://gist.github.com/nebiros/5dede8fe1985dc0ee998fc608e629cd1#file-service-go-L24-L35
[02:50:38] <nebiros> that's where I start creating goroutines
[02:53:06] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 252 seconds)
[02:53:07] *** Quits: shka (~herr@109.231.3.55) (Ping timeout: 260 seconds)
[02:59:57] *** Joins: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble)
[03:00:05] *** Quits: foobaz212 (~foobaz212@213.205.198.66) (Quit: Client closed)
[03:00:17] *** Joins: foobaz212 (~foobaz212@213.205.198.66)
[03:00:27] *** Quits: foobaz212 (~foobaz212@213.205.198.66) (Client Quit)
[03:00:29] <fizzie> On a very cursory glance at all that, sounds like maybe you need copies of the headers. Because around https://gist.github.com/nebiros/5dede8fe1985dc0ee998fc608e629cd1#file-client-go-L77 you're setting `req.Header = c.config.Header`, which just assigns a reference to the same map (http.Header is just a newtype on `map[string][]string`, not a concurrently-safe map).
[03:00:44] *** Joins: foobaz212 (~foobaz212@213.205.198.66)
[03:00:45] <fizzie> And right after that, those headers are modified (by req.AddCookie).
[03:01:21] *** Quits: foobaz212 (~foobaz212@213.205.198.66) (Client Quit)
[03:01:34] <fizzie> How about doing `req.Header = c.config.Header.Clone()` instead?
[03:03:51] <nebiros> fizzie: could be
[03:05:13] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[03:05:28] <nebiros> fizzie: woot, that was it
[03:05:33] <nebiros> no data races now
[03:05:37] <nebiros> fizzie: ++
[03:08:39] *** Joins: pepee (~pepee@user/pepee)
[03:11:12] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[03:16:13] *** Quits: chandash (~chandash@ip-115-87.wireless.oberlin.edu) (Ping timeout: 240 seconds)
[03:19:48] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[03:21:02] <nebiros> didn‚Äôt thought about it, thank you fizzie and tristero üôá‚Äç‚ôÇÔ∏è
[03:21:15] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:21:49] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[03:25:48] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[03:26:28] *** Joins: foobaz212 (~foobaz212@213.205.198.66)
[03:28:13] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[03:30:24] *** Quits: adip (~adip@dii229.neoplus.adsl.tpnet.pl) (Ping timeout: 272 seconds)
[03:31:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[03:33:21] *** Joins: fling (~fling@user/fling)
[03:33:34] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[03:33:34] *** Quits: kakysha (~kakysha@user/kakysha) (Ping timeout: 272 seconds)
[03:38:03] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[03:40:48] *** Joins: bpalmer` (~user@user/bpalmer)
[03:42:36] *** Quits: bpalmer (~user@user/bpalmer) (Ping timeout: 240 seconds)
[03:42:45] *** Quits: foobaz212 (~foobaz212@213.205.198.66) (Quit: Client closed)
[03:43:22] *** Joins: foobaz212 (~foobaz212@213.205.198.66)
[03:53:55] *** Joins: lauraaah (uid156848@id-156848.ilkley.irccloud.com)
[03:55:39] *** Quits: lalitmee (~lalitmee@180.94.32.148) (Quit: Leaving)
[04:10:00] *** Joins: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[04:16:47] *** Quits: Guest87 (~Guest87@2a02:c7f:582d:5100:55e1:ba41:e4d7:ad02) (Quit: Client closed)
[04:17:05] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:22:01] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[04:32:37] *** Quits: Vrganj (~Vrganj@93-142-89-137.adsl.net.t-com.hr) (Ping timeout: 240 seconds)
[04:33:21] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[04:35:27] *** Quits: foobaz212 (~foobaz212@213.205.198.66) (Quit: Client closed)
[04:35:43] *** Joins: foobaz212 (~foobaz212@213.205.198.66)
[04:35:53] *** Quits: foobaz212 (~foobaz212@213.205.198.66) (Write error: Broken pipe)
[04:35:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[04:36:21] *** Joins: foobaz212 (~foobaz212@213.205.198.66)
[04:36:42] *** Quits: foobaz212 (~foobaz212@213.205.198.66) (Client Quit)
[04:38:10] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[04:39:44] *** Joins: fling (~fling@user/fling)
[04:39:57] *** Quits: independent56 (~independe@2.26.38.133) (Ping timeout: 240 seconds)
[04:41:22] *** Joins: independent56 (~independe@2.26.38.133)
[04:52:54] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[04:58:20] *** Joins: treeford (~charleste@user/treeford)
[05:00:24] *** Quits: yakiza (~yakiza@cpc91202-cmbg18-2-0-cust102.5-4.cable.virginm.net) (Read error: Connection reset by peer)
[05:02:36] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 240 seconds)
[05:04:20] *** Joins: boof (~rickybob@gateway/vpn/pia/rickybob)
[05:07:24] *** Quits: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Read error: Connection reset by peer)
[05:07:33] *** Joins: rawley_ (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[05:07:55] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[05:08:17] *** Quits: rawley_ (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Remote host closed the connection)
[05:08:30] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[05:08:42] *** Joins: rawley_ (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[05:09:07] *** Joins: optic__ (~rickybob@gateway/vpn/pia/rickybob)
[05:12:36] *** Quits: boof (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 240 seconds)
[05:13:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[05:16:41] *** Quits: ramblebamble (ramblebamb@gateway/vpn/protonvpn/ramblebamble) (Quit: WeeChat 3.4.1)
[05:18:06] *** Joins: chenqisu1 (~chenqisu1@183.217.201.88)
[05:24:20] *** Joins: rcernin (~rcernin@101.189.129.123)
[05:30:24] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[05:31:34] *** Joins: foobaz212 (~foobaz212@213.205.198.66)
[05:32:03] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[05:32:13] *** Quits: foobaz212 (~foobaz212@213.205.198.66) (Client Quit)
[05:38:27] *** Joins: foobaz212 (~foobaz212@213.205.198.66)
[05:38:42] *** Quits: foobaz212 (~foobaz212@213.205.198.66) (Client Quit)
[05:39:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[05:39:36] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[05:40:35] *** Quits: zap (~zap@gateway/tor-sasl/zap) (Ping timeout: 240 seconds)
[05:41:33] *** Joins: fling (~fling@user/fling)
[05:44:45] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[05:45:51] *** Quits: mpldr_ (~mpldr@user/mpldr) (Quit: WeeChat 3.4.1)
[05:46:12] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[05:48:56] *** Joins: chandash (~chandash@ip-115-87.wireless.oberlin.edu)
[05:53:49] *** Quits: independent56 (~independe@2.26.38.133) (Ping timeout: 240 seconds)
[05:58:29] *** Joins: irontom (~user@69.174.103.168)
[05:58:37] *** Quits: rawley_ (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Quit: Leaving)
[05:58:56] *** Joins: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[05:59:50] *** Quits: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Client Quit)
[05:59:58] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:00:06] *** Joins: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[06:05:14] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[06:05:44] *** bpalmer` is now known as bpalmer
[06:15:21] *** Quits: chandash (~chandash@ip-115-87.wireless.oberlin.edu) (Ping timeout: 256 seconds)
[06:17:28] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[06:20:35] *** Joins: rairden (~rairden@2603-9000-de04-9613-0000-0000-0000-1a20.inf6.spectrum.com)
[06:21:25] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[06:30:55] *** Joins: chandash (~chandash@ip-115-87.wireless.oberlin.edu)
[06:31:15] *** Joins: hanzo (uid532183@user/hanzo)
[06:32:34] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[06:36:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[06:41:31] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[06:44:57] *** Quits: aead (~aead@user/aead) (Ping timeout: 240 seconds)
[06:46:31] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[06:46:49] *** Joins: treeford (~charleste@user/treeford)
[06:51:48] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 272 seconds)
[06:54:59] *** Quits: rcernin (~rcernin@101.189.129.123) (Quit: WeeChat 3.4.1)
[07:02:51] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Quit: Lost terminal)
[07:03:30] *** Quits: itsalexjones (~itsalexjo@82.4.99.241) (Read error: Connection reset by peer)
[07:04:46] *** Quits: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de) (Read error: Connection reset by peer)
[07:04:46] *** Quits: higgins (~higgins@static.38.6.217.95.clients.your-server.de) (Quit: Leaving)
[07:08:47] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:10:09] *** Joins: dustinm` (~dustinm@static.38.6.217.95.clients.your-server.de)
[07:13:13] *** Quits: chandash (~chandash@ip-115-87.wireless.oberlin.edu) (Quit: WeeChat 3.4)
[07:13:58] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[07:18:39] *** Joins: shtirlic_ (~shtirlic@184.22.77.202)
[07:20:51] *** Quits: shtirlic (~shtirlic@184.22.77.202) (Ping timeout: 256 seconds)
[07:28:27] *** Joins: higgins (~higgins@static.38.6.217.95.clients.your-server.de)
[07:40:12] *** Quits: irontom (~user@69.174.103.168) (Ping timeout: 240 seconds)
[07:44:34] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[07:44:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[07:45:38] *** Joins: fling (~fling@user/fling)
[07:49:25] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[08:09:15] *** Quits: deckard (~deckard@user/deckard) (Ping timeout: 256 seconds)
[08:10:04] *** Joins: deckard (~deckard@user/deckard)
[08:19:30] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:23:57] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[08:27:11] *** Quits: yuckey2d (~yuckey2d@gateway/vpn/pia/yuckey2d) (Quit: The Lounge - https://thelounge.chat)
[08:38:10] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[08:42:39] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[08:46:20] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[08:47:13] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[08:47:16] *** Quits: blinux (~blinux@pool-108-48-11-122.washdc.fios.verizon.net) (Quit: WeeChat 3.4.1)
[08:48:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[08:49:43] *** Joins: fling (~fling@user/fling)
[08:50:52] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 272 seconds)
[08:54:11] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[08:59:07] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[09:00:22] *** Quits: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca) (Remote host closed the connection)
[09:03:30] *** Quits: pepee (~pepee@user/pepee) (Quit: WeeChat 2.8)
[09:05:38] *** Quits: athawut (~athawut@2403:6200:8847:c8be:6cd5:3937:4f16:a18c) (Remote host closed the connection)
[09:09:57] *** Quits: chenqisu1 (~chenqisu1@183.217.201.88) (Ping timeout: 240 seconds)
[09:12:05] *** Quits: lauraaah (uid156848@id-156848.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[09:15:01] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[09:27:03] *** Quits: chemsmith (~chemsmith@user/chemsmith) (Remote host closed the connection)
[09:27:17] *** Joins: chemsmith (~chemsmith@user/chemsmith)
[09:28:33] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[09:33:07] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[09:42:29] *** Joins: aead (~aead@user/aead)
[09:51:38] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[09:51:55] *** Joins: fling (~fling@user/fling)
[09:57:17] *** Joins: treeford (~charleste@user/treeford)
[10:00:40] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:01:37] *** Quits: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[10:02:00] *** Joins: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net)
[10:02:01] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 256 seconds)
[10:03:38] *** Quits: aead (~aead@user/aead) (Remote host closed the connection)
[10:05:25] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[10:05:28] *** Joins: Everything (~Everythin@37.115.210.35)
[10:11:11] *** Quits: batdog (batdog@lnsq.elkins.co) (Quit: Bye)
[10:13:34] *** Joins: batdog (~batdog@lnsq.elkins.co)
[10:27:30] *** Joins: aead (~aead@user/aead)
[10:29:20] *** Quits: RhinosF1 (uid339563@miraheze/RhinosF1) (Quit: Connection closed for inactivity)
[10:35:05] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 252 seconds)
[10:35:06] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[10:40:26] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[10:42:25] *** Joins: habamax (~habamax@user/habamax)
[10:43:01] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[10:47:55] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[10:50:36] *** Joins: atomgardner (~atomgardn@user/atomgardner)
[10:56:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[10:57:54] *** Joins: fling (~fling@user/fling)
[10:58:28] *** Joins: X-Scale` (~ARM@80.199.137.78.rev.vodafone.pt)
[11:00:23] *** Quits: X-Scale (~ARM@46.50.6.46) (Ping timeout: 256 seconds)
[11:00:23] *** X-Scale` is now known as X-Scale
[11:01:03] *** Quits: hanzo (uid532183@user/hanzo) (Quit: Connection closed for inactivity)
[11:01:25] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Remote host closed the connection)
[11:01:43] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[11:07:51] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:10:17] *** Quits: leah2 (~leah@vuxu.org) (Ping timeout: 252 seconds)
[11:12:44] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[11:28:34] *** Joins: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net)
[11:32:37] *** Quits: admin123 (~harrymore@ool-2f12f5b1.dyn.optonline.net) (Ping timeout: 240 seconds)
[11:39:45] *** Joins: RhinosF1 (uid339563@miraheze/RhinosF1)
[11:40:33] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[11:42:02] *** Joins: independent56 (~independe@2.26.38.133)
[11:45:09] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[11:45:55] *** Joins: Midjak (~Midjak@82.66.147.146)
[11:59:19] *** Joins: athawut (~athawut@1.46.129.10)
[12:06:40] *** Joins: adip (~adip@dii229.neoplus.adsl.tpnet.pl)
[12:10:34] *** Joins: chenqisu1 (~chenqisu1@183.217.201.88)
[12:13:00] *** Quits: athawut (~athawut@1.46.129.10) (Read error: Connection reset by peer)
[12:13:08] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:18:01] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[12:24:26] *** Joins: athawut (~athawut@1.46.129.10)
[12:30:37] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[12:34:41] *** Quits: athawut (~athawut@1.46.129.10) (Remote host closed the connection)
[12:35:00] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[12:35:39] *** Joins: leah2 (~leah@vuxu.org)
[12:42:30] *** Quits: khyr0n (~khyr0n@2806:2f0:9260:cb2d:5fd:1a5c:dad0:bb92) (Quit: Leaving)
[12:43:29] *** Quits: idstam (~Thunderbi@185.176.247.4) (Remote host closed the connection)
[12:44:10] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[12:49:11] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[12:50:06] *** Quits: R2robot (~R2robot@user/r2robot) (Quit: Pull the lever, Kronk.  Wrong leverrrrrrr!)
[12:51:48] *** Quits: leah2 (~leah@vuxu.org) (Ping timeout: 240 seconds)
[12:52:24] *** Quits: ypszilon (~ypszilon@user/ypszilon) (Quit: ·ÆÆ)
[12:52:35] *** Joins: R2robot (~R2robot@user/r2robot)
[12:53:05] *** Joins: ypszilon (~ypszilon@user/ypszilon)
[12:53:31] *** Joins: moog__ (~moog@98.97.84.79)
[12:54:59] *** Quits: Batzy (~quassel@user/batzy) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[12:55:07] *** Joins: iryith1 (~iryith3@207.81-166-89.customer.lyse.net)
[12:56:36] *** Quits: moog_ (~moog@98.97.84.79) (Ping timeout: 272 seconds)
[12:57:23] *** Joins: Batzy (~quassel@user/batzy)
[13:08:01] *** Joins: leah2 (~leah@vuxu.org)
[13:15:36] *** Joins: ghost08 (~ghost08@adsl-dyn-50.95-102-48.t-com.sk)
[13:18:27] *** Joins: blacked (~blacked@user/blacked)
[13:18:36] <blacked> ,hi
[13:18:40] <blacked> !hi
[13:28:50] *** Quits: blacked (~blacked@user/blacked) (Quit: blacked)
[13:30:35] *** Quits: kshockey (~kyshoc@user/kyshoc) (Read error: Connection reset by peer)
[13:32:26] *** Joins: vimal (~vimal@2a02:a210:9641:8780:c1c8:67bc:35b:91da)
[13:32:54] *** Joins: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net)
[13:32:55] *** Quits: kyshoc (~kyshoc@adsl-99-93-208-248.dsl.mtry01.sbcglobal.net) (Changing host)
[13:32:55] *** Joins: kyshoc (~kyshoc@user/kyshoc)
[13:33:33] *** Joins: treeford (~charleste@user/treeford)
[13:37:48] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 240 seconds)
[13:39:27] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[13:39:44] *** Quits: noboruma (~noboruma@202-189-221-251.tokyo.fdn.vectant.ne.jp) (Remote host closed the connection)
[13:40:55] *** Joins: shka (~herr@109.231.3.55)
[13:41:10] *** Joins: noboruma (~noboruma@202-189-221-251.tokyo.fdn.vectant.ne.jp)
[13:41:17] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[13:42:48] *** Quits: ghost08 (~ghost08@adsl-dyn-50.95-102-48.t-com.sk) (Quit: WeeChat 3.4.1)
[13:44:29] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[13:54:38] *** Quits: independent56 (~independe@2.26.38.133) (Quit: Leaving)
[13:54:55] *** Joins: kakysha (~kakysha@user/kakysha)
[13:56:24] *** Joins: Vrganj (~Vrganj@93-136-77-15.adsl.net.t-com.hr)
[13:58:41] *** Quits: chenqisu1 (~chenqisu1@183.217.201.88) (Quit: Leaving)
[14:05:11] *** Quits: kakysha (~kakysha@user/kakysha) (Ping timeout: 252 seconds)
[14:05:49] *** Joins: kakysha (~kakysha@user/kakysha)
[14:07:23] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[14:08:15] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[14:08:17] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[14:08:29] *** Joins: kakysha_ (~kakysha@user/kakysha)
[14:10:39] *** Joins: fling (~fling@user/fling)
[14:11:01] *** Quits: kakysha (~kakysha@user/kakysha) (Ping timeout: 240 seconds)
[14:12:20] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:14:12] *** Quits: Vrganj (~Vrganj@93-136-77-15.adsl.net.t-com.hr) (Quit: Leaving)
[14:14:40] *** Joins: Guest42 (~Guest42@ptr-9en2yskj0hqyug88y3z.18120a2.ip6.access.telenet.be)
[14:15:01] *** Quits: Guest42 (~Guest42@ptr-9en2yskj0hqyug88y3z.18120a2.ip6.access.telenet.be) (Client Quit)
[14:15:34] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[14:17:40] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[14:18:09] *** Joins: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[14:19:07] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 260 seconds)
[14:21:55] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 260 seconds)
[14:40:06] *** Quits: kcrk (~kcrk@user/kcrk) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[14:40:35] *** Joins: kcrk (~kcrk@user/kcrk)
[14:42:36] *** Quits: kakysha_ (~kakysha@user/kakysha) (Ping timeout: 252 seconds)
[14:43:41] *** Joins: mpldr_ (~mpldr@user/mpldr)
[14:45:14] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[14:45:24] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[14:48:25] *** Quits: califax (~califax@user/califx) (Remote host closed the connection)
[14:49:28] *** Joins: califax (~califax@user/califx)
[14:49:53] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[14:50:23] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[14:51:06] *** Quits: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[14:51:27] *** Joins: athawut (~athawut@1.46.129.10)
[14:51:31] *** Joins: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net)
[14:51:37] *** Quits: dsrt^ (~dsrt@96-91-136-49-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[14:52:01] *** Quits: athawut (~athawut@1.46.129.10) (Remote host closed the connection)
[14:59:04] *** Joins: kakysha_ (~kakysha@user/kakysha)
[15:03:47] <pyzozord> one thing I'm missing in pkg.go.dev is the amount of downloads, in npm that helps decide if package is safe to use
[15:04:04] <pyzozord> what kind of methods do you use to judge if package is safe
[15:04:50] <ikke> pyzozord: the amount of public imports is visible
[15:05:00] <ikke> " Imported by 11,624 "
[15:05:51] <pyzozord> isin't imports just what other packages import it?
[15:06:09] <pyzozord> I mean a number of downloads people actually do on their computers
[15:07:47] <ikke> So if someone just runs a cron job that downloads a package every minute, it's safe to  use?
[15:07:57] * ikke takes notes
[15:08:06] <pyzozord> yeah of course it can be abused
[15:08:29] <ikke> The amount of imports is a good indication of how much it's used
[15:10:03] <pyzozord> so would this one raise any red flags https://pkg.go.dev/github.com/mandolyte/mdtopdf ?
[15:10:49] <mpldr_> pyzozord: i mean‚Ä¶ they could only give stats for googles proxy. all direct downloads or over other proxies can't really be tracked
[15:11:18] <ikke> But imho it would not add anything
[15:11:31] <ikke> Just another 'arbitrary' number
[15:11:37] <ikke> pyzozord: You have to audit the code
[15:11:39] <mpldr_> agree, it's just some endorphine dispenser
[15:11:42] <ikke> if you want to see how safe it is
[15:12:14] <pyzozord> there is the grey area where I don't have enough time to read the code indepth and I need to relay on judgement of others
[15:12:31] <ikke> If npm learns us anything, malware can be very popular
[15:12:34] <pyzozord> it's a natural thing humans do
[15:12:39] <habamax> then take a risk I guess
[15:12:43] <habamax> or don't
[15:12:55] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[15:13:07] <ikke> There is more then one case where a popular package has gone rogue
[15:13:11] <pyzozord> in npm I can at least see "oh this package is downloaded 10 times per week" and this other package is downloaded "500" times per week
[15:13:26] <pyzozord> assuming both aren't cheating, the 500 is likely to be safer
[15:13:48] <mpldr_> i wouldnt agree to that statement
[15:13:54] <ikke> pyzozord: or the first package was just there longer
[15:14:03] <ikke> but no one bothered to audit it
[15:14:15] <mpldr_> or the first package was used in a CI without caching
[15:14:15] *** Joins: fling (~fling@user/fling)
[15:14:23] <habamax> an even if audited once, it might become a no-go suddenly
[15:14:27] <pyzozord> well ok I don't want to get int othat discussion
[15:14:38] <pyzozord> I feel safer and I was asking for ways to feel safer in go
[15:14:53] <ikke> I gave you something you could look at
[15:14:57] <ikke> "imported by"
[15:15:05] <pyzozord> yeah thanks
[15:15:11] <pyzozord> what would you consider normally a safe range
[15:15:11] <mpldr_> I'd say the quality of documentation is usually something to also look out for‚Ä¶ looking at you, gorm
[15:15:22] <ikke> pyzozord: I have no clue
[15:15:45] <pyzozord> mpldr_: oh that's a good idea, what do you notice that stands out as red flags?
[15:15:48] <ikke> pyzozord: maybe a safer indiciation is looking at _what_ projects import it
[15:15:48] <albertito> pyzozord: I usually check # of imports, and overall quality of documentation and code by eyeballing the codebase. If it's a larger module I'm more suspicious than a smaller one, and things like that
[15:16:14] <mpldr_> literally *no* api docs, everything is just on some github website.
[15:16:19] <ikke> If a number of popular libraries import a package, it's probably a better indication
[15:16:19] <pyzozord> ikke: that seems like a good idea too
[15:16:32] <albertito> pyzozord: since versions are pinned by default, I also look at when was the last commit. If there was a commit yesterday, there's more chances of a bad thing having gone in unnoticed
[15:16:44] <ikke> pyzozord: like the example you gave, all imports seem to be forks
[15:17:00] <ikke> https://pkg.go.dev/github.com/mandolyte/mdtopdf?tab=importedby
[15:17:12] <pyzozord> albertito: cool heuristic, thanks
[15:17:31] <albertito> pyzozord: so generally I just eyeball the documentation, code, check who uses it, and look at the commit history to see if it seems reasonable
[15:17:36] <pyzozord> ikke: right so that would be a red flag, no?
[15:17:45] <ikke> pyzozord: not a red flag, just lack of a green flag
[15:18:15] <mpldr_> my logging lib has like 3 imports‚Ä¶ i still think it's worth using
[15:18:29] <pyzozord> ok I see so you guys check out who imports it, when was last commit, quality of documentation and size of code
[15:18:56] <mpldr_> oh, and if they stuck to a scope.
[15:19:18] <mpldr_> if your CLI parser also handles your config parsing that's a no-no for me
[15:19:23] <albertito> pyzozord: pretty much. And I don't think it's a red flag if it's not widely used, or if the latest commit is too old or too new. I just factor that in the decision
[15:19:34] <ikke> albertito: exactly
[15:19:46] <ikke> These are heuristics, not black-and-white indicators
[15:20:10] <ikke> And even if there is not a single red flag, it can still be unsafe
[15:20:28] <ikke> So it's always a trade-off
[15:21:29] <albertito> seeing tests and decent coverage is also a nice positive sign
[15:24:52] *** Joins: blacked (~blacked@user/blacked)
[15:27:42] *** Quits: blacked (~blacked@user/blacked) (Client Quit)
[15:28:15] *** Joins: treeford (~charleste@user/treeford)
[15:28:47] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[15:30:30] *** Joins: eotdlt^ (~eotdlt@96-91-136-49-static.hfc.comcastbusiness.net)
[15:32:51] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 260 seconds)
[15:35:58] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[15:42:32] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[15:43:31] <pyzozord> how would you judge this package? https://pkg.go.dev/github.com/jaytaylor/html2text#section-readme
[15:43:48] *** Quits: iryith1 (~iryith3@207.81-166-89.customer.lyse.net) (Read error: Connection reset by peer)
[15:47:09] <ikke> Looks pretty ok
[15:47:20] <ikke> https://github.com/jaytaylor/html2text/blob/master/html2text_test.go
[15:48:18] <ikke> The imports are very limited
[15:48:25] <ikke> no exec or http or something that
[15:48:59] <ikke> Of course, that's just a <2 minute assessment
[15:49:27] <bpalmer> well, the bom import is kind of silly, I think
[15:50:13] <bpalmer> depending on something that simple/small is the sort of thing that leads to leftpad situation.
[15:50:26] <habamax> what is the idiomatic way to process database rows twice/more than once? All the examples are about for rows.Next() {...
[15:51:21] <habamax> and at least pgx.Rows has no rows.First() or similar to reset iterator
[15:51:23] <bpalmer> you'd have to save the row for later ; database/sql 's Rows only move forward
[15:51:42] <habamax> okay, so kind of caching
[15:53:01] *** Joins: moldorcoder7 (~moldorcod@37.120.143.29)
[15:58:31] *** Joins: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca)
[16:00:57] *** Quits: rairden (~rairden@2603-9000-de04-9613-0000-0000-0000-1a20.inf6.spectrum.com) (Quit: rairden)
[16:01:34] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[16:04:41] *** Joins: Guest89 (~Guest89@27.34.47.57)
[16:06:55] *** Quits: Guest89 (~Guest89@27.34.47.57) (Client Quit)
[16:09:33] *** Quits: Epithium (~Epithium@2603-6080-3203-8d68-565d-9a3f-5480-e6eb.res6.spectrum.com) (Ping timeout: 256 seconds)
[16:16:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[16:19:00] *** Joins: fling (~fling@user/fling)
[16:27:51] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[16:30:41] *** Quits: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 272 seconds)
[16:31:02] *** Joins: Epithium (~Epithium@2603-6080-3203-8d68-4932-20ff-4408-5cd1.res6.spectrum.com)
[16:32:13] *** Quits: Epithium (~Epithium@2603-6080-3203-8d68-4932-20ff-4408-5cd1.res6.spectrum.com) (Remote host closed the connection)
[16:35:00] *** Joins: Epithium (~Epithium@2603-6080-3203-8d68-a9fe-010b-1d2d-81ea.res6.spectrum.com)
[16:36:23] *** Joins: Guest87 (~Guest87@2a02:c7f:582d:5100:bd56:86b6:b019:5a7a)
[16:48:13] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[16:51:15] *** Joins: rendar (~rendar@user/rendar)
[16:52:15] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[16:53:07] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[16:53:37] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 240 seconds)
[16:56:29] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[17:00:07] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[17:02:55] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 260 seconds)
[17:03:00] *** Joins: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[17:06:44] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[17:06:46] *** Quits: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 272 seconds)
[17:07:35] *** Quits: zap (~zap@gateway/tor-sasl/zap) (Ping timeout: 240 seconds)
[17:10:56] *** Joins: treeford (~charleste@user/treeford)
[17:13:17] *** Joins: athawut (~athawut@2403:6200:8847:c8be:b84d:8f94:e62:c099)
[17:14:52] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[17:14:54] *** Quits: athawut (~athawut@2403:6200:8847:c8be:b84d:8f94:e62:c099) (Remote host closed the connection)
[17:15:14] *** Joins: athawut (~athawut@2403:6200:8847:c8be:b84d:8f94:e62:c099)
[17:15:31] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 256 seconds)
[17:19:02] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[17:20:32] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[17:20:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[17:22:13] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:22:36] *** Quits: zer0bitz__ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 272 seconds)
[17:23:03] *** Joins: fling (~fling@user/fling)
[17:25:33] *** Quits: athawut (~athawut@2403:6200:8847:c8be:b84d:8f94:e62:c099) ()
[17:26:33] *** Joins: athawut (~athawut@2403:6200:8847:c8be:e090:cec:a471:64b)
[17:26:43] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[17:27:11] *** Quits: adip (~adip@dii229.neoplus.adsl.tpnet.pl) (Ping timeout: 260 seconds)
[17:28:45] *** Quits: athawut (~athawut@2403:6200:8847:c8be:e090:cec:a471:64b) (Client Quit)
[17:29:32] *** Joins: athawut (~athawut@2403:6200:8847:c8be:412b:c4b0:8b64:277b)
[17:31:00] <pyzozord> is File an io.Reader?
[17:31:06] <pyzozord> I need an io.Reader that is stdin
[17:31:55] <ikke> https://pkg.go.dev/os#File
[17:31:57] *** Joins: adip (~adip@dii229.neoplus.adsl.tpnet.pl)
[17:36:58] *** shtirlic_ is now known as shtirlic
[17:37:27] *** Quits: kakysha_ (~kakysha@user/kakysha) (Ping timeout: 260 seconds)
[17:40:21] <pyzozord> ikke: it doesn't reall say it explicitly
[17:40:40] <pyzozord> so I guess not?
[17:41:02] <ikke> Do you know how interfaces work in golang?
[17:42:50] <pyzozord> I think I do
[17:43:52] <ikke> Ok, so how would something implement the io.Reader interface?
[17:45:02] <pyzozord> would need to implement all methods defined in io.Reader
[17:45:11] <pyzozord> but then I need to check what methods io.Reader defines
[17:45:33] <ikke> That sounds like a good idea
[17:45:50] <pyzozord> yes I was hoping for direct info on the docs so I do not need to check that
[17:46:02] <ikke> The way go works, this is how you need to do it
[17:46:07] *** Parts: Everything (~Everythin@37.115.210.35) ()
[17:46:17] <ikke> Ofcourse, they could mention it in the docs
[17:48:47] <ikke> But in theory, they could decide to change the Reader interface. Then the documentation for os.File would not be correct anymore
[17:51:22] *** Quits: mickey (~user@user/mickey) (Quit: mickey)
[17:51:52] *** Joins: mickey (~user@user/mickey)
[17:53:09] <pyzozord> so people usually manually check what the interface looks like and then manually check if given type implements it?
[17:53:40] *** Quits: _rgn (~raine@2a01:4f9:c010:802e::1) (Quit: WeeChat 3.0)
[17:54:39] <ikke> yes, because there is nothing that explicitly declares something is implementing an interface
[17:54:46] <ikke> An interface is implemented if it matches
[17:56:00] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[17:57:50] <ikke> Most interfaces are very simple, just one or 2 methods
[17:58:34] <pyzozord> i'm trying to go install github.com/jaytaylor/html2text but it doesn't seem to work well
[17:58:43] <pyzozord> I was expecting I'd have html2text binary available
[17:59:09] *** Quits: phylaz (~phylaz@82.51-174-55.customer.lyse.net) (Ping timeout: 256 seconds)
[17:59:18] <pyzozord> I get "package github.com/jaytaylor/html2text is not a main package"
[17:59:30] *** Joins: treeford (~charleste@user/treeford)
[18:00:17] *** Joins: kakysha_ (~kakysha@user/kakysha)
[18:00:39] <ikke> github.com/jaytaylor/html2text/cmd/html2text
[18:00:44] <ikke> that's the main package
[18:00:54] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[18:01:11] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[18:01:12] <pyzozord> oh
[18:03:53] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[18:04:22] *** Joins: zer0bitz_ (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi)
[18:05:17] *** Quits: kakysha_ (~kakysha@user/kakysha) (Ping timeout: 240 seconds)
[18:05:55] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng32-54fbf8-224.dhcp.inet.fi) (Ping timeout: 260 seconds)
[18:07:32] *** Joins: boof (~rickybob@gateway/vpn/pia/rickybob)
[18:09:18] *** Joins: some14u (~textual@d5153017c.static.telenet.be)
[18:11:03] *** Quits: optic__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[18:11:56] *** Joins: kakysha_ (~kakysha@user/kakysha)
[18:14:23] *** Quits: aog (~aog@user/aog) (Remote host closed the connection)
[18:14:57] *** Joins: kakysha (~kakysha@user/kakysha)
[18:16:32] *** Quits: kakysha_ (~kakysha@user/kakysha) (Ping timeout: 252 seconds)
[18:24:17] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[18:24:43] *** Joins: fling (~fling@user/fling)
[18:25:24] *** Joins: han-solo (~han-solo@user/han-solo)
[18:26:54] *** Joins: optic__ (~rickybob@gateway/vpn/pia/rickybob)
[18:27:51] *** Quits: Guest87 (~Guest87@2a02:c7f:582d:5100:bd56:86b6:b019:5a7a) (Quit: Client closed)
[18:28:33] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[18:30:19] *** Quits: boof (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 256 seconds)
[18:31:06] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[18:31:11] *** Quits: optic__ (~rickybob@gateway/vpn/pia/rickybob) (Ping timeout: 250 seconds)
[18:32:15] *** Parts: robyn (~robyn@user/robyndrake) (WeeChat 2.8)
[18:32:31] *** Quits: atomgardner (~atomgardn@user/atomgardner) (Ping timeout: 260 seconds)
[18:42:42] *** Joins: aog (~aog@user/aog)
[18:45:50] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[18:51:08] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 268 seconds)
[18:53:36] <mikoto-chan> hi gophers
[18:54:04] <mikoto-chan> how do I benchmar a POST handler that calls r.PostForm? (how do I populate the form with sample data? )
[18:54:48] *** Quits: some14u (~textual@d5153017c.static.telenet.be) (Quit: My MacBook has gone to sleep. ZZZzzz‚Ä¶)
[18:55:15] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 256 seconds)
[18:59:16] *** Joins: Jigsy (~Jigsy@user/jigsy)
[19:01:06] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 252 seconds)
[19:01:38] *** Quits: shtirlic (~shtirlic@184.22.77.202) (Ping timeout: 252 seconds)
[19:03:25] <mpldr_> do you want to measure endpoint performance, or the entire http stack plus the endpoint?
[19:03:39] *** Joins: shtirlic (~shtirlic@184.22.77.202)
[19:06:25] <mpldr_> if using testing.B for the former you can b.Start/StopTimer while filling in random data, for the latter I'd recommend using siege or wrk
[19:06:45] <mikoto-chan> mpldr_: do you have an example endpoint performance measuring?
[19:07:04] <mpldr_> i don'
[19:07:06] <mikoto-chan> I'm trying to get `go test` running but it says there are not tests
[19:07:11] <mpldr_> t really do that
[19:07:11] <mikoto-chan> s/not/no
[19:07:35] <mikoto-chan> I have $PROJECT/cmd/web/handlers.go and $PROJECT/cmd/web/handlers_test.go
[19:07:35] <mpldr_> i usually add a defer log.Debug(elapsedTime)
[19:07:41] <mikoto-chan> and I made sure to export the routes
[19:07:57] <mpldr_> if you want to run the benchmarks defined in a testfile, you need to provide the -bench flag
[19:09:36] <mikoto-chan> mpldr_: forgot that my handlers are methods for my application
[19:09:43] <mikoto-chan> do I make the test a method for it too?
[19:10:31] <mpldr_> if you want a test, yes
[19:10:46] <mpldr_> but you dont need one for a benchmark
[19:11:09] <mikoto-chan> but I have to call the method inside of my benchmark
[19:11:10] <mpldr_> func BenchmarkSomeHandler(*testing.B) is the header
[19:11:16] <mikoto-chan> I know that much
[19:11:37] <mikoto-chan> but inside it I need to call SomeHandler and the only way to do this is app.SomeHandler
[19:12:00] <mikoto-chan> meaning the prototype should be `func (app *application) BenchmarkSomeHandler(*testing.B)`
[19:12:16] <mpldr_> you need to setup the benchmark
[19:13:31] <mpldr_> so initialize all structs, prepare whatever needs to be prepared and benchmark the call of the handler
[19:13:41] <mpldr_> just call it with a prepared request
[19:14:18] <mikoto-chan> https://dpaste.com/9BLRCAN5R
[19:14:44] <mikoto-chan> this is what I have right now
[19:14:59] <mpldr_> lose the type attachment
[19:15:24] <mikoto-chan> you mean remove the method part?
[19:15:27] <mpldr_> instead do a e := &engine{}
[19:15:29] <mpldr_> yes
[19:15:39] <mikoto-chan> oh like that, let's see
[19:15:45] *** Quits: arun007 (uid547465@id-547465.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[19:16:13] *** Quits: kakysha (~kakysha@user/kakysha) (Ping timeout: 256 seconds)
[19:16:29] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[19:17:02] <mikoto-chan> `go test -bench -v ./cmd/web/*` still doesn't output anything
[19:17:16] <mpldr_> you have to give it a pattern
[19:17:41] <mikoto-chan> `panic: assignment to entry in nil map`
[19:17:46] <mikoto-chan> closer :)
[19:17:48] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[19:18:12] <mpldr_> go test -bench=. -v example.com/package/cmd/web
[19:18:14] <A_Dragon> try ... instead of *
[19:18:29] <mpldr_> ^also
[19:21:17] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[19:22:04] *** Quits: rickybob (~rickybob@gateway/vpn/pia/rickybob) (Quit: rickybob)
[19:23:00] <mikoto-chan> A_Dragon: reason?
[19:26:11] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 260 seconds)
[19:26:42] <A_Dragon> mikoto-chan: because the go tools understand that to mean all packages under this directory, rather than shell expansion
[19:28:00] *** Quits: shtirlic (~shtirlic@184.22.77.202) (Ping timeout: 272 seconds)
[19:28:26] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[19:28:47] *** Joins: fling (~fling@user/fling)
[19:30:12] <mikoto-chan> A_Dragon: that's actually a really clever distinction
[19:30:42] <A_Dragon> check out `go help list`
[19:30:48] <A_Dragon> generally go list powers all of that stuff
[19:31:31] *** Parts: smlavine (~smlavine@sourcehut/user/smlavine) ()
[19:40:18] <pyzozord> I forget after I go installed some program how can I uninstall it
[19:40:22] *** Joins: arkurious (~arkurious@user/arkurious)
[19:41:54] <ikke> rm the binary
[19:42:28] <pyzozord> what about the packages that it downloaded
[19:42:40] <MrElendig> go get whatever@none
[19:42:56] <MrElendig> also mod tidy
[19:43:51] <pyzozord> can I go mod tidy in ~?
[19:44:01] <pyzozord> do a "global" tidy
[19:45:34] <ikke> not that i'm aware of
[19:46:26] <mpldr_> you can do a find for go.mod and exec go mod tidy in every directory
[19:48:17] *** Quits: jackneill (~jackneill@20014C4E180B5F005FCFAD750DF54DBD.dsl.pool.telekom.hu) (Read error: Connection reset by peer)
[19:48:36] *** Joins: jackneill (~jackneill@20014C4E180B5F008F8685D55B77DDB1.dsl.pool.telekom.hu)
[19:48:56] <mpldr_> fd -E go go\\.mod -x sh -c "cd {//} && go mod tidy"
[19:49:02] <mpldr_> something along those lines
[19:50:17] <pyzozord> it's a bit strange to me, what is the expected way to handle this?
[19:50:34] <pyzozord> or do most people just kind of ignore this and leave the garbage there
[19:51:19] <mpldr_> most people run go mod tidy inside their projects every time a dependency is added
[19:51:57] <mpldr_> or do you want to clean up unused modules from your disk?
[19:52:30] <mpldr_> in that case do a rm -rf go/pkg/mod
[19:54:04] <pyzozord> but wouldn't that remove all modules?
[19:54:17] <pyzozord> that means after that I'd need to go mod tidy in every project I want to build
[19:54:23] <mpldr_> they would just be downloaded again
[19:54:43] <pyzozord> so it really is kind of leave garbage in mod until you want more disk space
[19:54:46] <mpldr_> go mod tidy does not remove them from disk, just from the go.mod
[19:54:58] <pyzozord> then delete everything and redownload what you need
[19:55:20] <mpldr_> exactly
[19:56:20] *** Joins: zap (~zap@gateway/tor-sasl/zap)
[19:57:08] <pyzozord> huh, I'm not really used to that, it feels kind of strange, a little messy
[19:57:25] *** Joins: Guest87 (~Guest87@2a02:c7f:582d:5100:d4a1:15ae:ddf7:f2f6)
[19:57:54] <pyzozord> I'm not sure why go can't handle it like npm does it
[19:58:00] <ikke> It chooses not to
[19:58:27] <ikke> you don't explicitly download dependencies, they automatically get downloaded when required
[19:59:18] <pyzozord> huh apparently it does
[19:59:27] <pyzozord> I thought go run would complain about missing packages
[19:59:50] <pyzozord> ok that makes things a bit clearer for me
[19:59:57] <MrElendig> sandbox/container with a shared cache is what many people use to keep things clean
[20:00:08] <pyzozord> I see the approach and mindset is different
[20:00:46] <pyzozord> "sandbox/container"?
[20:00:53] <pyzozord> do you mean like linux containers?
[20:01:02] * MrElendig wouldn't mind if go would be turned into a "proper" package manager with file tracking etc
[20:01:16] <MrElendig> pyzozord: those are common
[20:01:24] * ikke does not need another package manager
[20:01:31] <mpldr_> MrElendig: could you elaborate?
[20:01:44] <mpldr_> i'm thinking of npm and get shudders
[20:01:51] <MrElendig> having it just dump files into $HOME is not the greatest
[20:02:02] <pyzozord> it's for sure simple
[20:02:20] <MrElendig> mpldr_: but we have all the downsides of npm but none of the advantages now, basically
[20:02:25] <pyzozord> as long as the dependencies are always treated as emphemeral and automatically pulled whenever not present I understand this model
[20:02:55] <pyzozord> but this model doesn't account for massive amounts of dependencies and cleaning the module cache often
[20:03:07] <pyzozord> that would mean high internet download throughput
[20:03:58] <MrElendig> pyzozord: shared download cache
[20:04:28] <pyzozord> MrElendig: ?
[20:04:49] <MrElendig> either GOCACHE or on the http level
[20:06:21] <mpldr_> MrElendig: we have the advantage, that we don't rely on a centralised platform
[20:06:35] <pyzozord> MrElendig: does that include source code for downloaded modules somehow?
[20:07:35] <pyzozord> MrElendig: what do you mean by "http level cache"?
[20:08:03] <mpldr_> npm/yarn/‚Ä¶ are about the worst package managers I had the displeasure of working with
[20:08:32] <MrElendig> https://go.dev/ref/mod#goproxy-protocol
[20:08:40] *** Quits: tyson2 (~user@bras-base-toroon0624w-grc-08-70-29-36-27.dsl.bell.ca) (Remote host closed the connection)
[20:08:53] <MrElendig> and so on
[20:10:07] *** Quits: hackers (~self@user/hackers) (Remote host closed the connection)
[20:11:31] <pyzozord> i see so use custom proxy to cache downloads
[20:12:25] *** Joins: rawley (~rawley@216-197-141-102.nbfr.hsdb.sasknet.sk.ca)
[20:12:52] <mpldr_> or if you feel like it, go mod vendor is still a thing
[20:13:56] <pyzozord> so go mod vendor creates a local copy of the modules
[20:14:32] <mpldr_> in your repo, yes‚Ä¶
[20:14:52] <mpldr_> otherwise the local copy is under go/pkg/mod
[20:14:58] <MrElendig> proxy is more useful when you have multiple projects/users
[20:15:02] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[20:15:25] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:15:52] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[20:16:03] *** Quits: eldritch (~eldritch@user/eldritch) (Quit: bye)
[20:16:03] *** Quits: glider (~glider@user/glider) (Quit: ZNC - https://znc.in)
[20:16:04] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[20:16:30] *** Joins: treeford (~charleste@user/treeford)
[20:17:27] <pyzozord> so when I remove ~/go/pkg/mod but my project has ./vendor it should still work without downloading anything?
[20:17:29] <ikke> I don't care too much about it, and from time to time just delete the mod cache
[20:17:48] *** Quits: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt) (Client Quit)
[20:17:53] <ikke> vendoring requires upkeep
[20:18:02] <pyzozord> what kind of upkeep?
[20:18:36] <ikke> Keeping the vendored modules up-to-date
[20:20:19] <pyzozord> how
[20:20:39] <pyzozord> and how is it different from the normal way
[20:20:46] <pyzozord> sorry ignore the first question
[20:20:51] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 252 seconds)
[20:21:00] <pyzozord> I assume the answer to the first question is by doing go get -u
[20:21:46] *** Joins: shtirlic (~shtirlic@184.22.77.202)
[20:21:51] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[20:22:20] *** Joins: treeford (~charleste@user/treeford)
[20:22:28] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 272 seconds)
[20:25:21] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[20:26:53] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 252 seconds)
[20:26:58] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[20:30:19] *** Joins: timkofu (~timkofu@105.161.28.178)
[20:30:19] *** Quits: timkofu (~timkofu@105.161.28.178) (Changing host)
[20:30:19] *** Joins: timkofu (~timkofu@user/timkofu)
[20:31:30] *** Joins: eldritch_ (~eldritch@user/eldritch)
[20:32:33] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[20:32:49] *** Joins: fling (~fling@user/fling)
[20:33:07] *** Joins: glider (~glider@user/glider)
[20:33:24] *** Quits: carlavilla (~carlavill@2a0c:5a84:3808:de00:21f:16ff:fe0f:275a) (Remote host closed the connection)
[20:35:25] *** Joins: carlavilla (~carlavill@2a0c:5a84:3808:de00:21f:16ff:fe0f:275a)
[20:41:30] *** Quits: timkofu (~timkofu@user/timkofu) (Quit: leaving)
[20:54:49] *** Joins: monke (~monke@user/monke)
[20:55:57] *** Quits: shtirlic (~shtirlic@184.22.77.202) (Ping timeout: 256 seconds)
[21:09:18] *** Joins: kakysha (~kakysha@user/kakysha)
[21:10:10] *** Joins: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com)
[21:10:51] *** Quits: ac5tin (~ac5tin@user/ac5tin) (Quit: WeeChat 3.4)
[21:20:07] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:24:51] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[21:30:36] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[21:36:31] *** Quits: fling (~fling@user/fling) (Quit: ZNC 1.8.2+deb2+b1 - https://znc.in)
[21:36:47] *** Joins: fling (~fling@user/fling)
[21:54:09] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[21:55:19] *** Quits: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[21:56:58] *** Joins: shtirlic (~shtirlic@184.22.77.202)
[21:59:59] *** Joins: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com)
[22:00:11] *** Quits: eotdlt^ (~eotdlt@96-91-136-49-static.hfc.comcastbusiness.net) (Remote host closed the connection)
[22:05:05] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 256 seconds)
[22:12:22] *** Joins: nattiestnate (~nate@202.138.250.62)
[22:23:15] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[22:28:14] *** Joins: paulgrmn_ (~paulgrmn@user/paulgrmn)
[22:30:09] *** Quits: leonardo (~leonardo@user/leonardo) (Quit: WeeChat 3.4)
[22:32:19] *** Joins: hackers (~self@user/hackers)
[22:34:23] *** Quits: recursion (sid504862@id-504862.ilkley.irccloud.com) (Changing host)
[22:34:23] *** Joins: recursion (sid504862@user/recursion)
[22:40:35] *** Quits: fling (~fling@user/fling) (Ping timeout: 240 seconds)
[22:42:49] *** Joins: fling (~fling@user/fling)
[22:47:04] *** Quits: tyson2 (~user@cpef492bf758151-cm688f2e29d8d0.cpe.net.cable.rogers.com) (Remote host closed the connection)
[22:52:53] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[22:53:07] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[22:54:19] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 260 seconds)
[22:58:04] *** Quits: habamax (~habamax@user/habamax) (Quit: WeeChat 3.0)
[22:58:55] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Ping timeout: 256 seconds)
[23:01:04] *** Quits: mrus (~mrus@gateway/tor-sasl/mrus) (Remote host closed the connection)
[23:01:22] *** Joins: mrus (~mrus@gateway/tor-sasl/mrus)
[23:02:47] *** Joins: llorllale (~llorllale@198.98.119.85)
[23:04:32] *** Joins: knusbaum (knusbaum@gateway/vpn/protonvpn/knusbaum)
[23:04:41] *** Quits: craekz (~craekz@user/craekz) (Read error: Connection reset by peer)
[23:05:09] *** Quits: jack_rabbit (knusbaum@gateway/vpn/protonvpn/knusbaum) (Ping timeout: 256 seconds)
[23:05:46] *** Joins: craekz (~craekz@user/craekz)
[23:08:24] *** Joins: jack_rabbit (~knusbaum@89.187.180.40)
[23:10:08] *** Quits: knusbaum (knusbaum@gateway/vpn/protonvpn/knusbaum) (Ping timeout: 268 seconds)
[23:11:29] *** Quits: han-solo (~han-solo@user/han-solo) (Quit: leaving)
[23:13:51] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
[23:16:13] *** Quits: nuclearg1 (~nucleargr@user/nuclearg1) (Ping timeout: 240 seconds)
[23:18:29] *** Quits: mikoto-chan (~mikoto-ch@213.177.151.239) (Ping timeout: 250 seconds)
[23:20:22] *** Joins: mikoto-chan (~mikoto-ch@213.177.151.239)
[23:23:27] *** Quits: justOkay (~justache@user/justache) (Read error: Connection reset by peer)
[23:24:58] *** Joins: justOkay (~justache@user/justache)
[23:28:51] *** Quits: kakysha (~kakysha@user/kakysha) (Ping timeout: 260 seconds)
[23:30:22] *** Joins: nuclearg1 (~nucleargr@user/nuclearg1)
[23:36:37] *** Joins: treeford (~charleste@user/treeford)
[23:37:00] *** Quits: mpldr_ (~mpldr@user/mpldr) (Remote host closed the connection)
[23:37:16] *** Joins: mpldr_ (~mpldr@user/mpldr)
[23:37:22] *** Joins: rickybob (~rickybob@gateway/vpn/pia/rickybob)
[23:41:03] *** Quits: treeford (~charleste@user/treeford) (Ping timeout: 252 seconds)
[23:44:58] *** Quits: fling (~fling@user/fling) (Remote host closed the connection)
[23:45:26] *** Joins: fling (~fling@user/fling)
[23:53:14] *** Quits: llorllale (~llorllale@198.98.119.85) (Ping timeout: 260 seconds)
[23:59:07] *** Quits: foobaz212 (~foobaz212@152.37.103.80) (Quit: Client closed)
[23:59:18] *** Joins: foobaz212 (~foobaz212@152.37.103.80)
