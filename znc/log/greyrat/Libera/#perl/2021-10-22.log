[00:09:45] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[00:11:36] *** Joins: diskin (~diskin@5.139.111.48)
[00:13:37] *** diskin is now known as Guest4793
[00:13:37] *** Joins: diskin_ (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com)
[00:13:37] *** Quits: Guest4793 (~diskin@5.139.111.48) (Killed (sodium.libera.chat (Nickname regained by services)))
[00:13:37] *** diskin_ is now known as diskin
[00:18:35] *** Joins: whynot (~whynot@88.155.106.248)
[00:20:53] *** Quits: magla (~gelignite@55d47f25.access.ecotel.net) (Quit: Stay safe!)
[00:22:21] *** Joins: xenial-user10 (~androirc@20014C4C17E1D200A8BB46B5E9D78617.catv.pool.telekom.hu)
[00:26:07] *** AI4AI is now known as subie
[00:26:27] <simcop2387> haj: yea it's one of the kinds of features that i'm going to end up using and requiring new perl version for when i use it.  same with how i started sprinking ->@* and such around
[00:32:27] <Grinnz> i still have no desire to use postderef other than for slices
[00:32:39] <Grinnz> and that's rare enough that it's not remotely a reason to require a new version
[00:32:56] <Grinnz> but outside of cpan i do use 5.020 for signatures
[00:36:21] <simcop2387> i deliberately want to enforce using newer perls for my stuff, but only if there's something useful for that
[00:37:08] * GumbyPAN CPAN Upload: Net-Saml2-0.41-TRIAL by TIMLEGGE https://metacpan.org/release/TIMLEGGE/Net-Saml2-0.41-TRIAL
[00:37:08] * GumbyPAN CPAN Upload: Test2-Harness-UI-0.000089 by EXODIST https://metacpan.org/release/EXODIST/Test2-Harness-UI-0.000089
[00:42:08] * GumbyPAN CPAN Upload: Test2-Harness-1.000075 by EXODIST https://metacpan.org/release/EXODIST/Test2-Harness-1.000075
[00:45:09] *** Joins: proller (~p@80.240.216.69)
[00:49:12] *** Joins: Paperbot (~Paperbot@ool-2f148218.dyn.optonline.net)
[00:49:12] *** Quits: Paperbot (~Paperbot@ool-2f148218.dyn.optonline.net) (Changing host)
[00:49:12] *** Joins: Paperbot (~Paperbot@perlbot/bot/grinnz/paperbot)
[00:49:12] *** Joins: Repaster (~Repaster@ool-2f148218.dyn.optonline.net)
[00:49:12] *** Quits: Repaster (~Repaster@ool-2f148218.dyn.optonline.net) (Changing host)
[00:49:12] *** Joins: Repaster (~Repaster@perlbot/bot/grinnz/repaster)
[00:59:40] *** Quits: xenial-user10 (~androirc@20014C4C17E1D200A8BB46B5E9D78617.catv.pool.telekom.hu) (Ping timeout: 258 seconds)
[01:01:48] *** Joins: xenial-user10 (~androirc@20014C4C17E1D20002094CFFFE807190.catv.pool.telekom.hu)
[01:03:06] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Ping timeout: 260 seconds)
[01:07:40] *** Joins: vrurg_ (~vrurg@45.74.95.181)
[01:07:40] *** Quits: vrurg (~vrurg@45.74.95.181) (Read error: Connection reset by peer)
[01:09:15] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[01:11:40] *** Quits: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net) (Quit: Leaving)
[01:12:11] * GumbyPAN CPAN Upload: Test2-Harness-UI-0.000090 by EXODIST https://metacpan.org/release/EXODIST/Test2-Harness-UI-0.000090
[01:13:34] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[01:15:05] *** Joins: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[01:17:06] *** Quits: Su-Shee (~Susanne@p4ff49e2f.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[01:18:42] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Remote host closed the connection)
[01:18:45] *** Joins: Su-Shee (~Susanne@p4ff49d94.dip0.t-ipconnect.de)
[01:24:25] *** Quits: Su-Shee (~Susanne@p4ff49d94.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[01:25:54] *** Joins: Su-Shee (~Susanne@p4ff49da3.dip0.t-ipconnect.de)
[01:26:12] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[01:26:26] *** Joins: Darkcoal (~user@139.64.63.46)
[01:38:03] *** Quits: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de) (Quit: Leaving.)
[01:42:59] *** Quits: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net) (Ping timeout: 258 seconds)
[01:43:31] *** Joins: djerius (~quassel@pool-108-20-43-199.bstnma.fios.verizon.net)
[01:50:08] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[01:57:16] * GumbyPAN CPAN Upload: Date-Julian-Simple-0.14 by MANWAR https://metacpan.org/release/MANWAR/Date-Julian-Simple-0.14
[01:57:19] *** Quits: Darkcoal (~user@139.64.63.46) (Quit: Darkcoal)
[01:57:27] *** Joins: Darkcoal (~user@2001:16a2:7737:4e00:14d2:edff:fe09:c98f)
[02:00:52] *** Joins: gast0n (~g4570n@user/gast0n)
[02:04:50] *** Quits: fling (~fling@user/fling) (Ping timeout: 258 seconds)
[02:05:23] *** Quits: kensanata (~user@user/kensanata) (Remote host closed the connection)
[02:14:36] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[02:16:18] * GumbyPAN CPAN Upload: Date-Julian-Simple-0.15 by MANWAR https://metacpan.org/release/MANWAR/Date-Julian-Simple-0.15
[02:24:30] *** Quits: Darkcoal (~user@2001:16a2:7737:4e00:14d2:edff:fe09:c98f) (Ping timeout: 260 seconds)
[02:25:56] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[02:26:14] *** Joins: Darkcoal (~user@139.64.63.46)
[02:28:35] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 264 seconds)
[02:33:33] *** Quits: whynot (~whynot@88.155.106.248) (Quit: leaving)
[02:33:49] *** Joins: pizdets (~pizdets@183.182.115.246)
[02:34:02] *** Quits: pizdets_ (~pizdets@183.182.114.214) (Ping timeout: 250 seconds)
[02:35:37] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[02:36:08] *** Joins: zenfold_ (~zenfold@user/zenfold)
[02:37:50] *** Quits: zenfold (~zenfold@user/zenfold) (Ping timeout: 260 seconds)
[02:46:24] *** Joins: mov_eax (~mov_eax@user/mov-eax/x-5035058)
[02:53:05] *** Quits: Pali (~pali@user/pali) (Ping timeout: 260 seconds)
[02:53:57] *** Quits: mov_eax (~mov_eax@user/mov-eax/x-5035058) (Quit: WeeChat 3.3)
[02:56:46] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[03:06:34] <daemon> hey all apparently this is a date: rnid1571476
[03:06:43] <daemon> anyone have any idea what type of encoding it is?
[03:08:15] <LeoNerd> eval: 1571476 / 365.25
[03:08:17] <perlbot> LeoNerd: 4302.46680355921
[03:08:38] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[03:08:50] <LeoNerd> Probably not "days since some arbitrary marker" then
[03:09:05] <daemon> the full file is: img_p639587_rnid1571476_OD.jpg
[03:09:22] <daemon> apparently: postprocess_rm_inference function will iterate through the image name in the img_name_list The image name string in the img_name_list (in a format as PatientUniqueID_Date_ImageIndex.jpg) can be split by '_', in order to get PatientUniqueID_Date.
[03:09:47] <daemon> but I have no idea how the heck OD can be an index or rnid... can be a date
[03:12:00] <xenu> surely there's more context in the code
[03:12:33] <daemon> I do not have the code I am the client to an API, when I queried why some uploads was failed I got told there is a naming convention for files, the guy who told me was not sure what it was either he has gone to ask the devs
[03:12:44] <daemon> but he left me the code snippet for if I could decypher it
[03:12:50] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 260 seconds)
[03:15:08] <daemon> ok so its total crap
[03:15:18] <daemon> $fake_name          = "p20_rnid22102021_A.jpg";
[03:15:20] <daemon> and it works
[03:15:42] <daemon> who knows guess will find out tomorrow
[03:19:01] *** Quits: xenial-user10 (~androirc@20014C4C17E1D20002094CFFFE807190.catv.pool.telekom.hu) (Ping timeout: 252 seconds)
[03:21:40] *** Quits: Darkcoal (~user@139.64.63.46) (Ping timeout: 260 seconds)
[03:23:00] *** Joins: fling (~fling@user/fling)
[03:23:43] *** Joins: Darkcoal (~user@51.15.187.53)
[03:26:21] *** Joins: proller (~p@2a02:6b8:b081:8813::1:9)
[03:43:56] *** Joins: jetchisel (jetchisel@user/jetchisel)
[03:48:55] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[03:49:43] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[03:52:00] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 260 seconds)
[03:56:56] *** Quits: Darkcoal (~user@51.15.187.53) (Read error: Connection reset by peer)
[04:00:01] *** Joins: Darkcoal (~user@139.64.63.46)
[04:00:47] <aquanight> eval: 1571476 / 86400
[04:00:48] <perlbot> aquanight: 18.1883796296296
[04:01:44] <aquanight> eval: [ map { 1571476 / $_ } (86400, 1440, 24) ]
[04:01:46] <perlbot> aquanight: ["18.1883796296296","1091.30277777778","65478.1666666667"]
[04:02:03] <zgu> eighty-six thousand four hundred minutes. how do you measure, measure a day?
[04:02:19] <aquanight> zgu: ...... it's 86400 seconds...?
[04:02:44] <zgu> s/minutes/seconds/
[04:02:49] <zgu> damnit
[04:03:03] <aquanight> eval: [ map { 1571476 / $_ => 1571476/($_*365.25) } (86400, 1440, 24) ]
[04:03:05] <perlbot> aquanight: ["18.1883796296296","0.049797069485639","1091.30277777778","2.98782416913834","65478.1666666667","179.2694501483"]
[04:03:59] <aquanight> hours might be a contender
[04:04:16] <aquanight> eval: 2021 - 179
[04:04:18] <perlbot> aquanight: 1842
[04:04:38] <aquanight> bleh that's pretty far back for an epoch. But not unprecedented
[04:04:47] <aquanight> I think f.ex COM dates are epoched at 1800
[04:05:34] <zgu> i thought it was 1900
[04:05:56] <zgu> wait is 1842 one of the various modified julian day epochs?
[04:06:11] <aquanight> 30 Dec 1899
[04:06:35] <aquanight> 1900 is Excel
[04:06:54] <aquanight> but funny fact
[04:07:16] <aquanight> because Excel incorrectly counts 1900 as a leap year the date value of 0 ends up representing 30 Dec anyway
[04:07:45] <zgu> hmm no 1858 is MJD
[04:07:49] <mst> oh right because a previous spreadsheet thing did that as well
[04:07:53] <mst> so excel had to copy it
[04:07:55] <mst> IIRC
[04:08:06] <aquanight> I think I am thinking of 1601 which is the epoch used in NTFS
[04:08:06] <zgu> and now everything has to copy excel
[04:08:28] <aquanight> zgu: Lotus 1-2-3 in particular
[04:08:54] <aquanight> I mean
[04:08:59] <aquanight> in fairness if you have to pick a day
[04:09:06] <aquanight> 1800, 1900, 1970, who gives a flip
[04:10:22] <zgu> 1970 was at least the closest recent "round number" to when unix time was invented
[04:10:22] <aquanight> you can either store a date as time since an epoch or you can store it as a structured value
[04:10:55] <aquanight> the funny thing is I would bet you in a thousand years nobody will remember why or even when any given date's epoch was
[04:11:12] <aquanight> also Excel/Lotus/OLE does a weird thing
[04:11:23] <aquanight> unix epoch is integer seconds since epoch
[04:11:30] <aquanight> Excel does days since epoch as an IEEE float
[04:11:52] <zgu> oh and then there's GPS
[04:11:57] <zgu> weeks and seconds-of-week
[04:13:21] <zgu> word to the wise: avoid running code that works with low level GPS data on saturday night if you don't trust your rollover handling
[04:17:14] *** Quits: ArtVandelayer (~ArtVandel@ip174-68-147-20.lv.lv.cox.net) (Ping timeout: 260 seconds)
[04:20:16] <Grinnz> perlbot: calc pi
[04:20:19] <perlbot> Grinnz: 3.14159265358979
[04:20:33] <Grinnz> perlbot: literal calc
[04:20:33] <perlbot> Grinnz: P:macro calc is <eval use Math::Calc::Parser 'calc'; $e=<quote d <arg>>; ''.calc $e>
[04:20:42] <Grinnz> simcop2387: how do i redefine that
[04:20:56] <mst> zgu: yeah, well, \r\n
[04:22:13] *** Joins: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net)
[04:22:15] <Grinnz> perlbot: macro calc is <eval use Math::Calc::Parser; $e=<quote d <arg>>; ''.Math::Calc::Parser->new->bignum(1)->evaluate($e)>
[04:22:16] <perlbot> Grinnz: Stored calc is <eval use Math::Calc::Parser; $e=<quote d <arg>>; ''.Math::Calc::Parser->new->bignum(1)->evaluate($e)>
[04:22:21] <Grinnz> perlbot: calc pi
[04:22:22] <perlbot> Grinnz: Error: unmatched closing parenthesis in compose
[04:22:42] <mst> perlbot: farnsworth pi
[04:22:44] <perlbot> mst:  3.14159265358979 
[04:22:47] <Grinnz> perlbot: macro calc is {eval use Math::Calc::Parser; $e={quote d {arg}}; ''.Math::Calc::Parser->new->bignum(1)->evaluate($e){
[04:22:47] <perlbot> Grinnz: Stored calc is {eval use Math::Calc::Parser; $e={quote d {arg}}; ''.Math::Calc::Parser->new->bignum(1)->evaluate($e){
[04:22:49] <Grinnz> perlbot: macro calc is {eval use Math::Calc::Parser; $e={quote d {arg}}; ''.Math::Calc::Parser->new->bignum(1)->evaluate($e)}
[04:22:49] <perlbot> Grinnz: Stored calc is {eval use Math::Calc::Parser; $e={quote d {arg}}; ''.Math::Calc::Parser->new->bignum(1)->evaluate($e)}
[04:22:52] <Grinnz> perlbot: calc pi
[04:22:54] <perlbot> Grinnz: 3.141592653589793238462643383279502884197
[04:22:57] <mst> you want calc, use the calculator
[04:23:17] <Grinnz> nah thats what i was trying to do :P
[04:23:27] <mst> farnsworth > calc
[04:23:36] <Grinnz> i won't enable it on paperbot because i dont have timeouts on it
[04:24:03] * mst hugs p3rl.org/Time::Out
[04:24:27] <Grinnz> yeah no, i'd do it by a subprocess if i needed to
[04:25:00] <Grinnz> perlbot: calc 42!
[04:25:02] <perlbot> Grinnz: 1405006117752879898543142606244511569936384000000000
[04:27:06] <Grinnz> perlbot: macro calcrat is {eval use Math::Calc::Parser; $e={quote d {arg}}; ''.Math::Calc::Parser->new->bigrat(1)->evaluate($e)}
[04:27:06] <perlbot> Grinnz: Stored calcrat is {eval use Math::Calc::Parser; $e={quote d {arg}}; ''.Math::Calc::Parser->new->bigrat(1)->evaluate($e)}
[04:31:05] *** Quits: radu242407 (~radu242@pool-141-157-204-247.nycmny.fios.verizon.net) (Ping timeout: 260 seconds)
[04:35:08] <zgu> i discovered M-x calc in emacs today
[04:42:49] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[04:54:06] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 260 seconds)
[05:01:26] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[05:06:54] *** Joins: semeion (~semeion@user/semeion)
[05:07:04] <simcop2387> yesh, finally they let me renew the domain.  was starting to get a little antsy about that
[05:10:18] <simcop2387> perlbot: revisions calc
[05:10:19] <perlbot> simcop2387: [15889 by grinnz: P:macro calc is {eval use Math::Calc::Parser; $e={quote d {arg}}; ''.Math::Calc::Parser->new->bignum(1)->evaluate($e)}]  [15888 by grinnz: P:macro calc is {eval use Math::Calc::Parser; $e={quote d {arg}}; ''.Math::Calc::Parser->new->bignum(1)->evaluate($e){]  [15887 by grinnz: P:macro calc is <eval use Math::Calc::Parser; $e=<quot... [Output truncated. Use `more` to read more]
[05:10:25] <simcop2387> bah that's still broken?
[05:11:16] <simcop2387> bah that's still broken?
[05:11:20] <simcop2387> we might disconnect shortly for a tiny bit while i change a network thing
[05:12:51] *** Joins: simcop2387_ (~simcop238@perlbot/patrician/simcop2387)
[05:13:21] *** Quits: jjatria (~jjatria@68.183.32.235) (Ping timeout: 250 seconds)
[05:13:31] *** Joins: jjatria (~jjatria@68.183.32.235)
[05:13:42] *** Joins: kaitlyn04 (~kaitlyn@user/kaitlyn)
[05:14:23] <simcop2387_> perlbot: hi
[05:14:37] <simcop2387_> bah
[05:14:42] *** Joins: meatbot_ (~meatbot@2603-6081-6401-8c00-0000-0000-0000-0d8f.res6.spectrum.com)
[05:15:10] <simcop2387_> i'm just going to wait on it to notice it itself
[05:15:28] <simcop2387_> neat ipv6
[05:15:34] *** Quits: meatbot (~meatbot@perlbot/bot/meatbot) (Ping timeout: 252 seconds)
[05:15:34] *** meatbot_ is now known as meatbot
[05:15:37] *** Quits: perldoc (~perldoc@24.88.49.194) (Ping timeout: 252 seconds)
[05:15:59] *** Quits: metabot (~metabot@perlbot/bot/metabot) (Ping timeout: 264 seconds)
[05:15:59] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Ping timeout: 264 seconds)
[05:15:59] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Ping timeout: 264 seconds)
[05:16:03] *** simcop2387_ is now known as simcop2387
[05:16:07] *** Quits: kaitlyn0 (~kaitlyn@user/kaitlyn) (Ping timeout: 258 seconds)
[05:16:07] *** kaitlyn04 is now known as kaitlyn0
[05:16:25] <simcop2387> it should autorecover
[05:16:42] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[05:16:42] *** ChanServ sets mode: +v perlbot
[05:16:52] <simcop2387> perlbot: revisions calc
[05:17:10] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[05:17:14] <simcop2387> ooo is the perlbot network namespace only setup to go that bad wroute...
[05:17:37] <zgu> i kept reading that as 'meatbot'
[05:17:41] *** Joins: perldoc (~perldoc@2603-6081-6401-8c00-0000-0000-0000-0d8f.res6.spectrum.com)
[05:17:42] <zgu> and i've only had one beer
[05:18:23] *** Quits: Su-Shee (~Susanne@p4ff49da3.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[05:19:08] <simcop2387> zgu: https://meat.bot/
[05:19:08] <Paperbot> Link title(s): [ Metabot project - Metabot - Fresh logs from the freezer ]
[05:19:12] <simcop2387> since i couldn't get meta.bot
[05:19:25] <xenu> if i ever write an OS, it will use the julian day as its epoch (12:00 nov 24, 4714 BC)
[05:19:30] <zgu> oh wait one of them did actually say meatbot
[05:19:44] *** Joins: Su-Shee (~Susanne@p4ffc79aa.dip0.t-ipconnect.de)
[05:20:30] <simcop2387> zgu: very likely yes.  metabot and meatbot are the two names for the maybe eventually possibly ban tracking/idiot tracker bot
[05:20:46] <simcop2387> that usees fancy ircv3 stuff to make it more NSA level
[05:20:55] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[05:21:36] <zgu> oh so its cover story is a bot working as a butcher in a small town grocery store?
[05:21:46] <simcop2387> essentially
[05:22:19] <simcop2387> perlbot: hi
[05:24:45] *** Quits: Darkcoal (~user@139.64.63.46) (Ping timeout: 260 seconds)
[05:25:19] <zgu> first paragraph needs a s/It's/Its/ btw
[05:25:23] <simcop2387> perlbot: hi
[05:26:22] *** Joins: Darkcoal (~user@51.15.9.205)
[05:34:55] *** Joins: jetchisel (jetchisel@user/jetchisel)
[05:40:20] <simcop2387> perlbot: hi
[05:40:26] <simcop2387> perlbot: wtf wrong with you
[05:42:35] <simcop2387> ok i've fucked up the network too much
[05:43:08] <simcop2387> i think i'm just gonna call it dead and restart the server
[05:43:44] *** Quits: kaitlyn0 (~kaitlyn@user/kaitlyn) (Quit: The Lounge - https://thelounge.chat)
[05:43:57] *** Quits: Darkcoal (~user@51.15.9.205) (Read error: Connection reset by peer)
[05:44:00] *** Quits: simcop2387 (~simcop238@perlbot/patrician/simcop2387) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[05:44:00] *** Quits: meatbot (~meatbot@2603-6081-6401-8c00-0000-0000-0000-0d8f.res6.spectrum.com) (Quit: MEATBOT listens not to your cries for mercy. ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[05:44:00] *** Quits: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[05:44:00] *** Quits: perldoc (~perldoc@2603-6081-6401-8c00-0000-0000-0000-0d8f.res6.spectrum.com) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[05:44:00] *** Quits: metabot (~metabot@perlbot/bot/metabot) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[05:47:41] *** Joins: kaitlyn0 (~kaitlyn@user/kaitlyn)
[05:49:39] *** Joins: metabot (~metabot@perlbot/bot/metabot)
[05:51:10] *** Joins: perldoc (~perldoc@24.88.49.194)
[05:53:11] *** Joins: meatbot (~meatbot@perlbot/bot/meatbot)
[05:54:42] *** Joins: simcop2387 (~simcop238@perlbot/patrician/simcop2387)
[05:54:46] *** Quits: fling (~fling@user/fling) (Ping timeout: 260 seconds)
[05:56:47] *** Quits: bn_work (uid268505@id-268505.uxbridge.irccloud.com) (Ping timeout: 264 seconds)
[05:57:15] *** Joins: perlbot (~perlbot@perlbot/bot/simcop2387/perlbot)
[05:57:15] *** ChanServ sets mode: +v perlbot
[05:57:59] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Ping timeout: 264 seconds)
[05:58:31] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 252 seconds)
[05:58:34] <aquanight> perlbot: calc 42!!
[05:58:35] *** Quits: kiwiroy (sid374179@id-374179.lymington.irccloud.com) (Ping timeout: 260 seconds)
[05:58:40] *** Quits: liam (sid7517@id-7517.helmsley.irccloud.com) (Ping timeout: 258 seconds)
[05:58:49] *** Joins: fling (~fling@user/fling)
[05:58:57] <aquanight> huh shouldn't it timeout by now
[05:59:06] <simcop2387> perlbot: hi
[05:59:18] <simcop2387> it's stuck doing stupid stuff it'll respond.
[05:59:30] *** Joins: sa (sid1055@tinside.irccloud.com)
[05:59:43] <simcop2387> POE has some pathalogical cases when you make too many events and it always hits that on restart
[05:59:48] *** Joins: yuesbeez (uid458354@tinside.irccloud.com)
[05:59:58] <aquanight> POE?
[06:00:16] <aquanight> my immediate thought is "power over ethernet" which makes no sense
[06:00:23] *** Joins: kiwiroy (sid374179@lymington.irccloud.com)
[06:00:24] <simcop2387> perlbot: -m POE
[06:00:26] *** Joins: liam (sid7517@helmsley.irccloud.com)
[06:00:29] <simcop2387> oh yea it's stuck
[06:00:41] <simcop2387> aquanight: basically the original event loop for perl
[06:00:42] <perlbot> aquanight: timeout at /home/perlbot/perl5/perlbrew/perls/perlbot-main/lib/site_perl/5.30.0/App/EvalServerAdvanced.pm line 118. 
[06:00:44] <perlbot> simcop2387: hi
[06:00:50] <aquanight> oh there it goes
[06:00:58] <perlbot> simcop2387: https://perldoc.perl.org/POE
[06:01:25] <aquanight> I mean
[06:01:26] <simcop2387> i need to fix the fucking networking setup for that server.  it doesn't need to be completely vlaned off like it originally was and it's now causing problems.
[06:02:28] <aquanight> at least it's not GetMessage, TranslateMessage, DispatchMessage
[06:12:28] *** Joins: bn_work (uid268505@uxbridge.irccloud.com)
[06:13:26] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 260 seconds)
[06:13:54] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 260 seconds)
[06:15:35] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:19:00] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[06:21:44] * GumbyPAN CPAN Upload: Types-PDL-0.04 by DJERIUS https://metacpan.org/release/DJERIUS/Types-PDL-0.04
[06:30:48] *** Quits: yuesbeez (uid458354@tinside.irccloud.com) (Quit: Connection closed for inactivity)
[06:38:50] *** Quits: proller (~p@2a02:6b8:b081:8813::1:9) (Ping timeout: 260 seconds)
[06:50:30] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 260 seconds)
[07:00:06] *** Quits: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net) (Ping timeout: 260 seconds)
[07:03:21] *** Joins: Manderson_ (manderson@gateway/vpn/protonvpn/manderson)
[07:04:30] *** Quits: Manderson (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 260 seconds)
[07:05:08] *** Joins: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net)
[07:06:36] *** Joins: Martchus_ (~martchus@2a01:c22:77b2:d800:d250:99ff:fe49:3cce)
[07:07:17] *** Quits: Martchus (~martchus@2a01:c22:6e6e:8c00:d250:99ff:fe49:3cce) (Ping timeout: 258 seconds)
[07:11:52] *** Joins: pucara (~i@host77.181-14-159.telecom.net.ar)
[07:26:51] * GumbyPAN CPAN Upload: DateTime-TimeZone-2.51 by DROLSKY https://metacpan.org/release/DROLSKY/DateTime-TimeZone-2.51
[07:33:17] *** Joins: Linux77_ (~Linux7_7@186.233.182.138)
[07:36:59] *** Quits: Linux77 (~Linux7_7@186.233.183.123) (Ping timeout: 264 seconds)
[07:46:53] * GumbyPAN CPAN Upload: Search-ESsearcher-0.4.2 by VVELOX https://metacpan.org/release/VVELOX/Search-ESsearcher-0.4.2
[08:14:47] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 264 seconds)
[08:16:52] *** Joins: ArtVandelayer (~ArtVandel@ip174-68-147-20.lv.lv.cox.net)
[08:18:42] *** Quits: ArtVandelayer (~ArtVandel@ip174-68-147-20.lv.lv.cox.net) (Read error: Connection reset by peer)
[08:18:55] *** Joins: ArtVandelayer (~ArtVandel@ip174-68-147-20.lv.lv.cox.net)
[08:23:11] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:24:29] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[08:26:11] *** Quits: daimbag (daimbag@2607:5300:60:21b::1) (Ping timeout: 264 seconds)
[08:27:46] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[08:39:00] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[08:42:33] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[08:47:13] *** Joins: art1 (~romeyke@p200300ccdf04040093811a77d57d057e.dip0.t-ipconnect.de)
[09:08:16] *** Quits: willthechill (~willthech@2600:1700:8c61:3ed0:44f3:1bf7:3293:3b70) (Ping timeout: 252 seconds)
[09:12:03] * GumbyPAN CPAN Upload: PDL-Algorithm-Center-0.12 by DJERIUS https://metacpan.org/release/DJERIUS/PDL-Algorithm-Center-0.12
[09:19:03] *** Quits: zln (~zln@c80-217-230-193.bredband.tele2.se) (Quit: WeeChat 3.2)
[09:29:54] *** Quits: blinky42 (~quassel@user/blinky42) (Ping timeout: 260 seconds)
[09:31:15] *** Joins: blinky42 (~quassel@jabber.blinkylight.net)
[09:31:15] *** Quits: blinky42 (~quassel@jabber.blinkylight.net) (Changing host)
[09:31:15] *** Joins: blinky42 (~quassel@user/blinky42)
[09:33:42] *** Shells is now known as Michelle
[09:34:22] *** Joins: daimbag (~bagdarrel@2607:5300:60:21b::1)
[09:39:05] *** Quits: daimbag (~bagdarrel@2607:5300:60:21b::1) (Ping timeout: 260 seconds)
[09:46:59] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[09:49:35] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 264 seconds)
[10:00:03] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[10:01:35] *** Joins: ckeshav (~keshavcha@103.66.50.47)
[10:11:00] *** ckeshav is now known as ckeshav_
[10:12:39] *** ckeshav_ is now known as ckeshav__
[10:13:46] *** ckeshav__ is now known as ckeshav
[10:16:11] *** Quits: ckeshav (~keshavcha@103.66.50.47) (Changing host)
[10:16:11] *** Joins: ckeshav (~keshavcha@user/ckeshav)
[10:22:16] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[10:23:34] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 260 seconds)
[10:28:25] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! 👋)
[10:29:24] *** Quits: ckeshav (~keshavcha@user/ckeshav) (Quit: Leaving)
[10:32:14] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[10:34:39] *** Quits: todd (~todd@gateway/tor-sasl/toddf) (Ping timeout: 276 seconds)
[10:35:11] *** Joins: jadesoturi (~jadesotur@user/jadesoturi)
[10:41:45] *** Quits: randir (~randir@95-25-159-246.broadband.corbina.ru) (Remote host closed the connection)
[10:47:14] * GumbyPAN CPAN Upload: Module-Generic-v0.16.4 by JDEGUEST https://metacpan.org/release/JDEGUEST/Module-Generic-v0.16.4
[10:52:58] *** Joins: randir (~randir@93.159.239.42)
[10:54:40] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[10:55:03] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[11:01:53] *** Quits: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 258 seconds)
[11:06:46] *** Joins: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03)
[11:12:16] *** Quits: pucara (~i@host77.181-14-159.telecom.net.ar) (Quit: Lost terminal)
[11:23:30] *** Quits: jdltouraine_ (~jdltourai@2a02:a03f:847b:b800:913c:73e9:9979:f03) (Ping timeout: 260 seconds)
[11:31:27] *** Joins: Manderson (manderson@gateway/vpn/protonvpn/manderson)
[11:33:25] *** Quits: Su-Shee (~Susanne@p4ffc79aa.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[11:34:35] *** Quits: Manderson_ (manderson@gateway/vpn/protonvpn/manderson) (Ping timeout: 260 seconds)
[11:34:40] *** Quits: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[11:35:00] *** Joins: dtman34 (~dtman34@c-73-62-246-247.hsd1.mn.comcast.net)
[11:35:10] *** Joins: Su-Shee (~Susanne@79.244.159.236)
[11:38:43] *** Joins: Pali (~pali@user/pali)
[11:46:21] * GumbyPAN CPAN Upload: Test-HTTP-LocalServer-0.73 by CORION https://metacpan.org/release/CORION/Test-HTTP-LocalServer-0.73
[12:33:29] *** Joins: xenial-user10 (~androirc@20014C4C17E1D20002094CFFFE807190.catv.pool.telekom.hu)
[12:36:27] * GumbyPAN CPAN Upload: HTTP-Request-FromCurl-0.32 by CORION https://metacpan.org/release/CORION/HTTP-Request-FromCurl-0.32
[12:37:54] *** Joins: haj (~haj@ip5f5beb42.dynamic.kabel-deutschland.de)
[12:50:41] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[12:51:28] * GumbyPAN CPAN Upload: Connector-1.43 by MRSCOTTY https://metacpan.org/release/MRSCOTTY/Connector-1.43
[12:54:36] *** Joins: txtsd (~txtsd@user/txtsd)
[12:58:42] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[12:59:02] *** Joins: tejr (~tejr@user/tejr)
[13:08:08] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[13:08:18] *** Quits: diskin (~diskin@ec2-18-158-74-148.eu-central-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[13:30:16] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[13:31:01] *** Joins: csrf (~csrf@user/csrf)
[13:32:45] *** Joins: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net)
[13:43:39] *** Joins: G_SabinoMullane (~G_SabinoM@pool-72-94-251-236.phlapa.fios.verizon.net)
[13:46:35] * GumbyPAN CPAN Upload: Text-Layout-0.025 by JV https://metacpan.org/release/JV/Text-Layout-0.025
[13:48:44] *** Joins: daimbag (~bagdarrel@shell.xshellz.com)
[13:54:02] *** Quits: daimbag (~bagdarrel@shell.xshellz.com) (Ping timeout: 260 seconds)
[14:11:14] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[14:11:15] *** Quits: X-Scale (~ARM@46.50.2.19) (Ping timeout: 258 seconds)
[14:12:22] *** X-Scale` is now known as X-Scale
[14:30:23] *** Quits: aquanight (~aquanight@174-126-159-166.cpe.sparklight.net) (Ping timeout: 264 seconds)
[14:30:29] *** Joins: zenfold (~zenfold@user/zenfold)
[14:33:05] *** Quits: zenfold_ (~zenfold@user/zenfold) (Ping timeout: 260 seconds)
[14:34:12] *** Joins: slopey (~slopey@user/slopey)
[14:35:48] *** Joins: semeion (~semeion@user/semeion)
[14:37:42] *** Quits: xenial-user10 (~androirc@20014C4C17E1D20002094CFFFE807190.catv.pool.telekom.hu) (Ping timeout: 258 seconds)
[14:38:11] *** Quits: TieUpYourCamel (~david@2600:1702:26a0:2000:3013:147c:4236:bf0c) (Ping timeout: 264 seconds)
[14:38:48] *** Joins: TieUpYourCamel (~david@2600:1702:26a0:2000:501:77ee:d7b0:fee9)
[14:40:07] *** Joins: X-Scale` (~ARM@83.223.233.104)
[14:40:13] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 265 seconds)
[14:41:23] *** X-Scale` is now known as X-Scale
[14:52:39] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[15:00:50] *** Joins: hethw (~heth@46.238.32.56)
[15:01:39] <hethw> I might repeat myself, but is there any decode function that will process all the hash/array/scalar nested in one another?
[15:03:36] <haj> Something like Data::Walk?  Or what do you mean with "process"?
[15:04:01] *** Linux77_ is now known as Linux77
[15:20:12] <ilmari_> Also, what do you mean by decode?
[15:25:14] <hethw> utf8 decode
[15:25:21] <hethw> I just wrote one myself
[15:25:25] <hethw> thanks anyway
[15:25:34] <Botje> hethw: you _are_ repeating yourself
[15:25:39] <hethw> I am
[15:25:48] <Botje> hethw: are you still working with that insane datasource that ships you JSON with double-encoded UTF8?
[15:25:48] <hethw> that's correct
[15:26:00] <hethw> I am yes
[15:26:05] <hethw> but it's a different case
[15:26:12] <hethw> always a different case
[15:26:35] <hethw> but I'm getting closer to eliminating it altogether
[15:28:03] <hethw> perl should have been forked when utf8 support was implemented
[15:28:22] <Botje> errr...
[15:28:23] <Altreus> and then the other fork should have been destroyed forever
[15:28:31] <hethw> yep, but later
[15:28:32] <Botje> hethw: I guess you are an american.
[15:28:38] <hethw> Botje, wrong
[15:28:47] <hethw> Balkans
[15:28:57] <Botje> then I don't understand the fork comment
[15:29:20] <hethw> well, perl is crap with encodings and their storage
[15:29:25] <Botje> it actually is not.
[15:29:30] <hethw> I hope so
[15:29:41] <Botje> a perl scalar variable is either bytes or a unicode string.
[15:29:47] <hethw> exactly
[15:29:54] <Botje> perlbot: encoding mantra
[15:29:54] <perlbot> Botje: decode goes from BYTES to UNICODE CHARACTERS. encode goes from UNICODE CHARACTERS to BYTES. decode bytes to unicode characters as soon as possible, work with unicode characters, and encode to bytes as late as possible.
[15:30:04] <Botje> you apply ^ that, and all your problems go away.
[15:30:06] <hethw> real life is different sadly
[15:30:13] <Botje> until you encounter double-encoded JSON.
[15:30:14] <Altreus> ¹ unless your problem is in shit data
[15:30:18] <hethw> and there are tons of old projects
[15:30:45] <Altreus> they should not be affected though
[15:30:47] <Botje> but even then, most modules and built-ins are perfectly clear about what flavor of string they expect.
[15:31:04] <Botje> and I think you're solving your problem the hard way by undoing the double decoding after the fact
[15:31:30] <hethw> it's a big codebase with many in/out/files
[15:31:49] <hethw> there's no other wy now
[15:32:02] <hethw> but it will be fixed
[15:32:08] <Altreus> oh yes, it will be fixed
[15:32:11] *** Quits: slopey (~slopey@user/slopey) (Quit: Leaving)
[15:32:22] <hethw> with some blood and sweat
[15:32:24] <Altreus> double-encoding-detecting middleware
[15:33:10] <hethw> when you don't have a source flag you can't do it
[15:33:47] <LeoNerd> When you're starting with bad data, you often have no choice but to try to guess
[15:33:55] <Botje> eval: use JSON; use Encode qw(encode_utf8 decode_utf8); my $garbage = encode_utf8(encode_utf8(qq{{"hallo": {"nested": "caf\x{E9}"}}})); my $clean = decode_utf8(decode_utf8($garbage));JSON->new->decode($clean)
[15:33:58] <perlbot> Botje: {hallo => {nested => "caf\x{e9}"}}
[15:34:05] <Botje> ^ is how I would solve it.
[15:34:32] <Adura> Despite my distaste for webp, it can make smaller lossless images than png does.
[15:34:47] <Altreus> what about it do you distaste?
[15:34:59] <Altreus> Yes, I verbed a noun. Get Englished
[15:35:01] <hethw> Adura, AVIF:")
[15:35:11] <Botje> not a fan of the oak aromas?
[15:35:31] <Adura> It has an odd restriction on dimensions, for one.
[15:36:59] *** Joins: proller (~p@2a02:6b8:0:408:eef4:bbff:fe62:69c8)
[15:40:33] <Altreus> does it :o
[15:41:30] <Adura> Was converting some png files and imagemagick didn't like some of them.
[15:42:52] <Adura> Not that all my images exceed 16384px, heh.
[15:47:01] *** Quits: hethw (~heth@46.238.32.56) (Quit: Leaving)
[15:47:53] <Adura> Seems AVIF doesn't do real lossless, or maybe they changed that...
[15:47:54] <Altreus> is that webp or imagemagick
[15:48:01] <Adura> That's the format.
[15:48:07] <Altreus> gosh
[15:48:19] <Altreus> 16384 pixels should be enough for anyone
[15:48:30] <Adura> Yes...
[15:55:22] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 260 seconds)
[15:59:52] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:06:06] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 260 seconds)
[16:08:47] *** Joins: trainlag1602 (~saroa@user/trainlag1602)
[16:08:53] *** Parts: trainlag1602 (~saroa@user/trainlag1602) ()
[16:20:18] *** Joins: semeion (~semeion@user/semeion)
[16:22:40] *** Quits: JayC (~JayC@gateway/tor-sasl/jayc) (Remote host closed the connection)
[16:23:08] *** Joins: JayC (~JayC@gateway/tor-sasl/jayc)
[16:29:45] *** Quits: proller (~p@2a02:6b8:0:408:eef4:bbff:fe62:69c8) (Ping timeout: 260 seconds)
[16:31:52] * GumbyPAN CPAN Upload: PPIx-Regexp-0.081 by WYANT https://metacpan.org/release/WYANT/PPIx-Regexp-0.081
[16:31:52] * GumbyPAN CPAN Upload: PPIx-QuoteLike-0.018 by WYANT https://metacpan.org/release/WYANT/PPIx-QuoteLike-0.018
[16:43:56] *** Joins: proller (~p@2a02:6b8:0:408:eef4:bbff:fe62:69c8)
[16:46:50] *** Joins: choroba (~E.Choroba@88.146.255.106)
[16:56:55] * GumbyPAN CPAN Upload: Object-Pad-0.56 by PEVANS https://metacpan.org/release/PEVANS/Object-Pad-0.56
[16:58:48] <Altreus> roles inheriting from roles sounds like big helps
[17:00:20] <Botje> how's it different from composition?
[17:00:52] <Altreus> I'm sure it's different at the edges but I suspect you could do neither before
[17:01:30] <Altreus> https://rt.cpan.org/Public/Bug/Display.html?id=139772 apparently 'role X does Y' is what LeoNerd did anyway
[17:01:31] <Paperbot> Link title(s): [ Bug #139772 for Object-Pad: Roles should be able to be based on other roles ]
[17:06:04] *** Joins: diskin (~diskin@5.139.111.48)
[17:08:35] *** Joins: diskin_ (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com)
[17:08:35] *** diskin is now known as Guest4260
[17:08:35] *** diskin_ is now known as diskin
[17:11:30] *** Quits: Guest4260 (~diskin@5.139.111.48) (Ping timeout: 265 seconds)
[17:16:04] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[17:17:39] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Ping timeout: 276 seconds)
[17:18:05] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[17:18:38] *** Joins: tobybl (~tobybl@213.31.135.91)
[17:31:59] * GumbyPAN CPAN Upload: Device-Chip-SSD1306-0.10 by PEVANS https://metacpan.org/release/PEVANS/Device-Chip-SSD1306-0.10
[17:33:31] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[17:36:50] *** Quits: ArtVandelayer (~ArtVandel@ip174-68-147-20.lv.lv.cox.net) (Ping timeout: 260 seconds)
[17:37:00] * GumbyPAN CPAN Upload: Device-Chip-AS3935-0.02 by PEVANS https://metacpan.org/release/PEVANS/Device-Chip-AS3935-0.02
[17:37:00] * GumbyPAN CPAN Upload: Device-Chip-BME280-0.03 by PEVANS https://metacpan.org/release/PEVANS/Device-Chip-BME280-0.03
[17:42:00] * GumbyPAN CPAN Upload: Device-Chip-MPL3115A2-0.09 by PEVANS https://metacpan.org/release/PEVANS/Device-Chip-MPL3115A2-0.09
[17:43:07] *** Joins: daimbag (daimbag@2607:5300:60:21b::1)
[17:48:18] *** Quits: bmeneg (~bmeneg@2001:1284:f016:3569:504d:9bbf:bfc:bc89) (Remote host closed the connection)
[17:50:36] *** Joins: tg (~tg@rockylinux/infra/tg)
[17:52:01] * GumbyPAN CPAN Upload: App-Kramerius-URI-0.01 by SKIM https://metacpan.org/release/SKIM/App-Kramerius-URI-0.01
[17:53:03] *** Quits: ugjka (~ugjka@ugjka.net) (Quit: Rabooting the server https://ugjka.net)
[17:53:37] *** Joins: ugjka (~ugjka@ugjka.net)
[17:54:43] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[18:06:00] *** Joins: pflanze (~pflanze@2001:1a88:19e:4500:a0c1:497c:91e:9cca)
[18:15:50] *** Joins: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl)
[18:19:06] *** Quits: Su-Shee (~Susanne@79.244.159.236) (Ping timeout: 260 seconds)
[18:20:46] *** Joins: Su-Shee (~Susanne@p4ff49b39.dip0.t-ipconnect.de)
[18:33:15] *** Quits: andrzejku (~andrzejku@45-11-60-125.ip4.greenlan.pl) (Read error: Connection reset by peer)
[18:34:05] *** Parts: art1 (~romeyke@p200300ccdf04040093811a77d57d057e.dip0.t-ipconnect.de) ()
[18:41:15] *** Quits: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net) (Quit: Leaving)
[18:41:34] *** Joins: thrig (~thrig@65.113.153.50)
[18:42:07] * GumbyPAN CPAN Upload: Feed-Find-0.12 by DAVECROSS https://metacpan.org/release/DAVECROSS/Feed-Find-0.12
[18:49:06] *** Quits: randir (~randir@93.159.239.42) (Remote host closed the connection)
[19:07:10] * GumbyPAN CPAN Upload: App-Device-Chip-sensor-0.03 by PEVANS https://metacpan.org/release/PEVANS/App-Device-Chip-sensor-0.03
[19:07:48] <LeoNerd> You can tell it's a Friday afternoon because I'm making lots of little releases to tidy up all the misc. loose ends I've been working on all week
[19:08:41] <Altreus> fix-it friday!
[19:11:50] *** Joins: jlenz (~jlenz@c-73-204-107-230.hsd1.fl.comcast.net)
[19:13:38] <zgu> how well does your Device::Chip::BME280 module work?
[19:13:49] *** Joins: randir (~randir@95-25-159-246.broadband.corbina.ru)
[19:14:13] <thrig> chip shortages blamed on spy industry that has "no time to die"
[19:16:48] <LeoNerd> zgu: It works better now I'm not caching failures forever more ;)
[19:23:54] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[19:27:12] *** Joins: kevin-oculus (~tomys@c188-149-14-10.bredband.tele2.se)
[19:34:35] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 264 seconds)
[19:40:07] <daemon> Altreus, f-it friday yes :)
[19:40:35] * LeoNerd grumbles "It'd be lovely if localtime/strftime supported fractional seconds
[19:40:57] <LeoNerd> my $now = Time::HiRes::time(); sprintf "%02d:%02d:%02d.%03d", (localtime $now)[2,1,0], 1000*($now - int $now)   is my current workaround
[19:40:59] <Grinnz> some of them do!
[19:41:10] <Grinnz> Time::Moment's does i believe
[19:41:27] <thrig> some of them stall out if you use %s in a format string
[19:42:02] <Altreus> LeoNerd: "
[19:42:13] <thrig> I wonder if Apple Bug 15753871 has gone anywhere
[19:42:15] <Altreus> you were putting words in others' mouths!
[19:42:43] <Grinnz> sweval: my $now = Time::Moment->now; $now->strftime('%H:%M:%S.%f')
[19:42:45] <perlbot> Grinnz: ERROR: Can't locate object method "now" via package "Time::Moment" (perhaps you forgot to load "Time::Moment"?) at (IRC) line 1. 
[19:42:51] <Grinnz> sweval: use Time::Moment; my $now = Time::Moment->now; $now->strftime('%H:%M:%S.%f')
[19:42:53] <perlbot> Grinnz: 01:12:52..148870
[19:42:59] <LeoNerd> Oooh.. %f.
[19:43:00] <Grinnz> oh it includes the . lol
[19:43:07] <Altreus> Maybe LeoNerd is a commodore 64 and strings terminate at the end of the command
[19:44:16] <Grinnz> sweval: use Time::Moment; use Time::Piece; use Time::HiRes; my $sometime = Time::Moment->from_object(localtime(Time::HiRes::time - 86400)); $sometime->strftime('%H:%M:%S%f')
[19:44:17] <perlbot> Grinnz: ERROR: Usage: Time::Moment::from_object(klass, object) at (IRC) line 1. 
[19:44:45] <Grinnz> what
[19:45:33] <Grinnz> sweval: use Time::Piece; use Time::HiRes; localtime(Time::HiRes::time)
[19:45:35] <perlbot> Grinnz: bless( [33,15,1,23,9,121,6,295,0,"1634919333.92567",1], 'Time::Piece' )
[19:46:00] <Grinnz> oh, context
[19:46:07] <Grinnz> sweval: use Time::Moment; use Time::Piece; use Time::HiRes; my $sometime = Time::Moment->from_object(scalar localtime(Time::HiRes::time - 86400)); $sometime->strftime('%H:%M:%S%f')
[19:46:08] <perlbot> Grinnz: 01:16:07.582264
[19:46:42] <Grinnz> all that to say, bit more complicated if it's not Time::Moment->now that you want
[19:52:11] *** Quits: randir (~randir@95-25-159-246.broadband.corbina.ru) (Read error: Connection reset by peer)
[19:52:18] *** Joins: randir (~randir@95-25-159-246.broadband.corbina.ru)
[19:53:30] *** Joins: YaoNai (~YaoNai@user/yaonai)
[19:58:55] *** Quits: choroba (~E.Choroba@88.146.255.106) (Quit: Leaving)
[20:06:10] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Ping timeout: 260 seconds)
[20:11:06] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[20:23:26] *** Joins: ArtVandelayer (~ArtVandel@ip174-68-147-20.lv.lv.cox.net)
[20:24:03] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[20:29:00] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Read error: Connection reset by peer)
[20:31:54] <ether> Time::Moment++
[20:32:02] <ether> the big win IMO is it's way way faster than DateTime
[20:32:14] <ether> so keep DateTime in reserve for the fancy features, and use Time::Moment for everything else
[20:36:20] <ehuelsmann[m]> ether: your remark about its speed got my attention. How does it achieve that? I'm developing a "date intensive application" (LedgerSMB => accounting) and DateTime currently is one of the bottlenecks when generating reports with many, many lines of output. I'm not doing much calculation, it's mostly just date representation.
[20:37:02] <ehuelsmann[m]> is there a list of things "Time::Moment" can't which DateTime can?
[20:37:03] <ether> it's written in XS, i.e. C.
[20:37:21] <ether> and it doesn't do timezone or leap second math
[20:37:59] <ether> I woudl definitely try to convert a bit of your program to Time::Moment and do some benchmarking
[20:38:30] <Grinnz> ehuelsmann[m]: there's two main things Time::Moment can't do, which i work around 
[20:38:33] <tm604> Date::Time also has massive layers of overhead due to validation
[20:38:55] <ether> e.g. isolate out a hot function into its own script and use Benchmark or Benchmark::Dumb to run it 1m times to compare
[20:39:11] <Grinnz> 1) it does not have a strptime or localtime to initialize a localtime moment, other than ->now - worked around with Time::Moment->from_object($time_piece_object)
[20:39:12] <thrig> the March 13, 2011 2:15am problem (in some but not all parts of the United States, anyways)
[20:39:33] <Grinnz> 2) it doesn't do time zone math (which is a significant source of DateTime's slowness), worked around with https://metacpan.org/pod/Time::Moment::Role::TimeZone
[20:39:34] <Paperbot> Link title(s): [ Time::Moment::Role::TimeZone - Adjust Time::Moment with time zone objects - metacpan.org ]
[20:39:40] <tm604> sorry, DateTime - if you run typical code through nytprof, aside from the timezone handling the Params::Valid* logic tends to show up the most
[20:40:12] <ether> if you're storing all your timestamps in UTC, then Time::Moment skipping timezone math is just dandy :)
[20:40:18] <Grinnz> if you use Time::Moment::Role::TimeZone with https://metacpan.org/pod/DateTime::TimeZone::Tzfile you can avoid DateTime::TimeZone's overhead as well
[20:40:18] <Paperbot> Link title(s): [ DateTime::TimeZone::Tzfile - tzfile (zoneinfo) timezone files - metacpan.org ]
[20:40:41] <ehuelsmann[m]> I store all timestamps in UTC and leave it up to the client (mostly JS) to convert that to local timezone times.
[20:40:53] <ether> ++
[20:40:56] <Grinnz> rather, https://metacpan.org/pod/DateTime::TimeZone::Olson is what you'd usually use
[20:40:56] <Paperbot> Link title(s): [ DateTime::TimeZone::Olson - timezones from the Olson database - metacpan.org ]
[20:41:13] <ehuelsmann[m]> but most of the time, dates don't even have a time component.
[20:41:22] <Grinnz> (wraps Time::OlsonTZ::Data into DateTime::TimeZone::Tzfile objects)
[20:41:45] <Grinnz> yeah if you're just working in UTC, then Time::Moment will likely do everything you need.
[20:42:03] <Grinnz> if you're working in the system local timezone, you may need those extra things i mentioned
[20:42:10] <Grinnz> if you're working in arbitrary timezones, you definitely will
[20:42:36] <ehuelsmann[m]> ok. I'm definitely interested in evaluating this! Thanks for all this info. I'm going to benchmark this !
[20:43:56] <Grinnz> the main reason DateTime::TimeZone::Tzfile objects are way faster than DateTime::TimeZone is that the latter suffers from exponential slowness when extrapolating timezones to the future
[20:44:22] <Grinnz> also probably just validation differences like the rest of DateTime
[20:44:37] *** Joins: magla (~gelignite@55d4ee8d.access.ecotel.net)
[20:45:25] <Grinnz> whichever type of timezone object you use, instantiating them once and caching them can help a lot as well when you're doing a lot of math on the same time zone
[20:45:49] <Grinnz> ... which makes me realize they should be singleton objects
[20:46:18] <ether> I had to fall back to DateTime once when checking if a particular timestamp was valid, if it was a leap second. DateTime maintains tables of those and Time::Moment doesn't
[20:46:33] <ether> but you only need to do that if the %S == 60
[20:46:41] <Grinnz> yeah, leap seconds will generally need the full DateTime
[20:48:09] <ehuelsmann[m]> that's an idea. I'm doing a lot of dates "around the same time". that is, reports usually include dates in the same (relatively restricted) date range.
[20:48:23] <ehuelsmann[m]> (caching, I mean)
[20:48:55] <Grinnz> i just meant the timezone objects themselves
[20:49:04] <ehuelsmann[m]> ah. ok.
[20:49:06] <Grinnz> as recreating them can be slow in tight loops
[20:49:57] <ehuelsmann[m]> well, you got me interested in doing some profiling!
[20:50:08] <ehuelsmann[m]> (and benchmarking)
[20:51:30] *** Joins: cjac (~cjac@li1196-20.members.linode.com)
[20:51:32] <cjac> hi
[20:51:53] <cjac> has anybody been secretly working on implementing the google auth client?
[20:56:47] *** Quits: Su-Shee (~Susanne@p4ff49b39.dip0.t-ipconnect.de) (Ping timeout: 264 seconds)
[20:58:22] *** Joins: Su-Shee (~Susanne@p4ff49ab8.dip0.t-ipconnect.de)
[20:59:24] <cjac> https://github.com/googleapis/google-auth-library-ruby but with different letters in the last 4 columns ?
[20:59:25] <Paperbot> Link title(s): [ GitHub - googleapis/google-auth-library-ruby: Google Auth Library for Ruby ]
[21:00:13] <thrig> forth doesn't fit there
[21:00:36] <huf> forþ
[21:00:55] <cjac> huf++
[21:01:05] <thrig> nor does APL
[21:01:32] <cjac> that is something that I had not previously considered.
[21:01:38] <LeoNerd> At times, Google seems almost actively hostile to Perl, so.. probably not a huge amount of love in the other direction either
[21:04:27] *** Joins: pucara (~i@host77.181-14-159.telecom.net.ar)
[21:04:54] <cjac> LeoNerd: I know.  I started reading the Learning Python book this week.
[21:05:06] <cjac> they took quite a few shots.  and not that python is google or anything, but...
[21:05:40] <cjac> anyway, I'm trying to turn the tide the other way, in case anyone is interested in working on one of these but for perl.
[21:06:23] <cjac> as an engineer at google, I think I can likely get a reasonable pull request accepted.
[21:06:23] * GumbyPAN CPAN Upload: Test2-Harness-1.000076 by EXODIST https://metacpan.org/release/EXODIST/Test2-Harness-1.000076
[21:08:02] <cjac> cjac@cjac:~/src/github/googleapis/google-auth-library-ruby$ find . -type f | wc -l
[21:08:02] <cjac> 101
[21:08:09] <cjac> that's not so hard, probably.
[21:08:37] <Grinnz> all i've needed to do with google apis is pass an api key so i don't really see the point of an auth library unless for stuff i'm not doing
[21:08:59] <Grinnz> Paperbot: google google
[21:08:59] <Paperbot> Grinnz: Google search result: Google - http://www.google.com/ - Search the world's information, including webpages, images, videos and more. Google has many special features to help you find exactly what you're looking ... [ 9 more results ]
[21:09:16] <Grinnz> i guess for account authenticated endpoints?
[21:09:29] <LeoNerd> cjac: Hah. well, good luck. When I was working there they just didn't seem interested
[21:10:21] * cjac is being the change
[21:10:34] <thrig> pence? nickels?
[21:12:20] *** Joins: root___ (~root@c-76-105-81-129.hsd1.ga.comcast.net)
[21:12:32] <root___> mentlegen?
[21:17:13] <mst> bless youi
[21:18:31] *** Joins: tcohen_ (~tcohen@181.167.163.87)
[21:19:55] *** Quits: tcohen_ (~tcohen@181.167.163.87) (Client Quit)
[21:20:04] *** Joins: tcohen (~tcohen@vmi626720.contaboserver.net)
[21:34:01] *** Joins: EGD (~egd@user/egd)
[21:36:07] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[21:41:27] * GumbyPAN CPAN Upload: Test2-Harness-UI-0.000091 by EXODIST https://metacpan.org/release/EXODIST/Test2-Harness-UI-0.000091
[21:46:26] *** Joins: choroba (~E_Choroba@89-101-243-80.cust.centrio.cz)
[21:47:01] *** Joins: gast0n (~g4570n@user/gast0n)
[21:49:27] *** Joins: jabberwok (~wlindley@75.105.20.104)
[21:50:08] *** Joins: unthrig (~thrig@65.113.153.50)
[21:50:35] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[21:53:57] *** unthrig is now known as thrig
[21:54:39] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[22:00:08] *** Joins: humky (~humky@user/humky)
[22:01:22] *** Joins: _73 (~user@pool-96-233-64-53.bstnma.fios.verizon.net)
[22:13:42] <cjac> mst!  Missed you!
[22:14:05] <thrig> better align the scope next time?
[22:14:47] <mst> http://trout.me.uk/foom.jpg
[22:16:54] <cjac> or mêlée range next time
[22:17:17] <cjac> mst: I imagine that to be catto's dookie.
[22:17:25] <thrig> remember, a compound bow is a great fashion accessory *after* the zombie apocalypse
[22:20:55] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 260 seconds)
[22:23:36] *** Joins: WinterStar (~IceLight@user/icelight)
[22:24:22] *** Quits: root___ (~root@c-76-105-81-129.hsd1.ga.comcast.net) (Quit: Lost terminal)
[22:31:34] *** Quits: pucara (~i@host77.181-14-159.telecom.net.ar) (Ping timeout: 260 seconds)
[22:33:32] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[22:41:51] *** Quits: arthurpbs (~arthurpbs@168.121.99.146) (Ping timeout: 258 seconds)
[22:42:06] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 265 seconds)
[22:44:57] *** Quits: thrig (~thrig@65.113.153.50) (Remote host closed the connection)
[22:45:25] *** Joins: WinterStar (~IceLight@user/icelight)
[22:46:35] * GumbyPAN CPAN Upload: Date-Julian-Simple-0.16 by MANWAR https://metacpan.org/release/MANWAR/Date-Julian-Simple-0.16
[22:51:36] * GumbyPAN CPAN Upload: Date-Julian-Simple-0.17 by MANWAR https://metacpan.org/release/MANWAR/Date-Julian-Simple-0.17
[22:54:38] *** Joins: arthurpbs (~arthurpbs@168.121.99.182)
[22:57:40] *** Quits: proller (~p@2a02:6b8:0:408:eef4:bbff:fe62:69c8) (Ping timeout: 260 seconds)
[22:58:01] *** Joins: Darkcoal (~user@2001:16a2:7737:4e00:5ccf:3fff:fea6:2111)
[22:58:03] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 265 seconds)
[23:01:07] *** Joins: WinterStar (~IceLight@user/icelight)
[23:08:35] *** Joins: _73` (~user@pool-96-233-64-53.bstnma.fios.verizon.net)
[23:10:30] *** Quits: _73 (~user@pool-96-233-64-53.bstnma.fios.verizon.net) (Ping timeout: 260 seconds)
[23:11:06] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 265 seconds)
[23:12:17] *** Joins: _73`` (~user@pool-96-233-64-53.bstnma.fios.verizon.net)
[23:13:35] *** Quits: Darkcoal (~user@2001:16a2:7737:4e00:5ccf:3fff:fea6:2111) (Ping timeout: 264 seconds)
[23:14:00] *** Quits: _73` (~user@pool-96-233-64-53.bstnma.fios.verizon.net) (Ping timeout: 265 seconds)
[23:14:04] *** Joins: WinterStar (~IceLight@user/icelight)
[23:15:28] *** Joins: Darkcoal (~user@139.64.63.46)
[23:19:11] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[23:19:48] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 265 seconds)
[23:19:58] *** Joins: _73``` (~user@pool-96-233-64-53.bstnma.fios.verizon.net)
[23:21:21] *** Quits: _73`` (~user@pool-96-233-64-53.bstnma.fios.verizon.net) (Ping timeout: 245 seconds)
[23:21:39] *** Joins: WinterStar (~IceLight@user/icelight)
[23:29:05] *** Quits: furrymcgee (~devuan@cgn-89-1-210-103.nc.de) (Remote host closed the connection)
[23:30:55] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 260 seconds)
[23:32:57] *** Joins: WinterStar (~IceLight@user/icelight)
[23:33:40] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Remote host closed the connection)
[23:34:39] *** Joins: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com)
[23:36:10] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Remote host closed the connection)
[23:36:43] *** Joins: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com)
[23:38:01] <cjac> oh, look.  there's already a grpc-perl:
[23:38:03] <cjac> git@github.com:joyrex2001/grpc-perl.git
[23:38:10] *** Quits: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com) (Remote host closed the connection)
[23:38:11] * ether ಠ_ಠ
[23:38:28] <cjac> hi ether!  are those curious eyes or sad eyes or angry eyes?
[23:38:38] <ether> that's a look of disapproval
[23:38:48] *** Joins: diskin (~diskin@ec2-3-124-171-230.eu-central-1.compute.amazonaws.com)
[23:38:51] <ether> as in https://metacpan.org/pod/Acme::LookOfDisapproval
[23:38:52] <Paperbot> Link title(s): [ Acme::LookOfDisapproval - Send warnings with ಠ_ಠ - metacpan.org ]
[23:39:09] <ether> and https://knowyourmeme.com/memes/%E0%B2%A0_%E0%B2%A0-look-of-disapproval
[23:39:09] <Paperbot> Link title(s): [ ಠ_ಠ Look of Disapproval | Know Your Meme ]
[23:39:14] <cjac> uh oh.  is bad code?  or is it google that you're disapproving of in general?
[23:39:31] <ether> gprc in general
[23:40:15] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 260 seconds)
[23:42:14] *** Joins: WinterStar (~IceLight@user/icelight)
[23:56:00] *** Quits: WinterStar (~IceLight@user/icelight) (Ping timeout: 260 seconds)
[23:57:32] *** Joins: WinterStar (~IceLight@user/icelight)
