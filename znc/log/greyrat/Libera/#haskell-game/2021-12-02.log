[00:12:25] <f-a> https://unicode.org/reports/tr14/ I would implement this but I wonder how many people would need such a library
[00:14:05] <ManofLetters[m]> wow
[00:14:26] <ManofLetters[m]> any idea how that compares to hyphenate?
[00:38:44] <f-a> they really do not overlap that much 
[00:38:50] <f-a> 9> Hyphenation improves the layout of narrow columns, especially for languages with many longer words, such as German or Finnish. For the purpose of this annex, it is assumed that hyphenation is equivalent to inserting soft hyphen characters. All other aspects of hyphenation are outside the scope of this annex.
[00:41:48] <ManofLetters[m]> oh, I see tr14 does not insert soft-hyphens, but only uses (some?) spaces and hard hyphens
[00:43:42] <f-a> ¬´Allure of the Stars, now with Unicode compliant line breaking¬ª
[00:44:49] <ManofLetters[m]> hah, yeah, in principle I should do that, in case somebody names their heroes in Thai (and provides a proper square font with Thai characters, because I mine doesn't have any; not sure about the proportional fonts I borrowed from other sources)
[01:15:36] <icrbow[m]> Allure of ‚ú®
[01:17:31] <f-a> super!
[01:18:41] <ManofLetters[m]> seriously? that's Unicode?
[01:23:11] <f-a> most likely an asterism
[01:23:30] <f-a> aaand I am wrong, ¬´sparkles¬ª
[01:23:31] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374) (Ping timeout: 252 seconds)
[01:36:47] *** Joins: Guest1731 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net)
[02:22:53] *** Quits: Guest1731 (~Guest17@eth-west-pareq2-46-193-4-100.wb.wifirst.net) (Quit: Client closed)
[04:15:28] *** Quits: __monty__ (~toonn@user/toonn) (Quit: leaving)
[04:43:55] <EvanR> thai script kinda maybe looks like it could have served in a grid-only role in an alternate history where thailand invented and pushed computer standards on everyone https://vajirayana.org/%E0%B8%9E%E0%B8%A3%E0%B8%B0%E0%B8%AD%E0%B8%A0%E0%B8%B1%E0%B8%A2%E0%B8%A1%E0%B8%93%E0%B8%B5/%E0%B8%84%E0%B8%B3%E0%B8%99%E0%B8%B3%E0%B9%80%E0%B8%A1%E0%B8%B7%E0%B9%88%E0%B8%AD%E0%B8%9E%E0%B8%B4%E0%B8%A1%E0%B8%9E%E0%B9%8C%E0%B8%84%E0%B8%A3%E0%B8%B1%E0%B9%89%E0%B8%87%E0%B9%81%
[04:43:55] <EvanR> E0%B8%A3%E0%B8%81
[04:44:12] <EvanR> I really can't paste the link hexchat? What's wrong with you
[04:46:48] <EvanR> https://vajirayana.org/‡∏û‡∏£‡∏∞‡∏≠‡∏†‡∏±‡∏¢‡∏°‡∏ì‡∏µ/‡∏Ñ‡∏≥‡∏ô‡∏≥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
[04:47:49] <EvanR> and it wouldn't have turned out nearly as bad as if it were say india
[04:49:15] <EvanR> though ISCII was a real thing xD
[06:20:57] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Quit: Leaving)
[07:50:52] <EvanR> I like how SDL.initializeAll is documented as saying equivalent to initialize [minBound..maxBound], then you check the source and that's the actual implementation xD
[07:51:08] <EvanR> i.e. "very equivalent"
[08:05:40] <EvanR> cannot use audioSpecFormat as a function due to escaped type variables, try using pattern matching instead
[08:06:02] <EvanR> data construct AudioSpec not found (it's not exported??)
[08:06:19] <EvanR> how do I get the audio format from this record xD
[08:08:40] <EvanR> it's the only type in SDL.Audio that doesn't export the constructors, other than a newtype wrapper around Text
[08:12:24] <EvanR> furthermore, that record type has 7 field accessors but only 6 of them are exported for some reason
[08:14:53] <EvanR> no mention on github...
[08:20:09] <EvanR> no worries I see you're all gearing up for Aoc in 10 minutes xD
[08:55:14] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[09:47:30] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374)
[12:11:11] *** Quits: curiousgay (~curiousga@77-120-141-90.kha.volia.net) (Quit: Leaving)
[12:30:13] *** Quits: thekyriarchy (~thekyriar@2001:470:69fc:105::493) (Quit: You have been kicked for being idle)
[12:39:13] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net) (Quit: zzz)
[15:03:10] <f-a> find a girl that fights at your side like ManofLetters[m] does, my grandma used to say
[15:03:24] *** Joins: thekyriarchy (~thekyriar@2001:470:69fc:105::493)
[16:25:12] *** Joins: __monty__ (~toonn@user/toonn)
[19:00:27] <EvanR> which one of you is doing sdl2 bindings xD
[19:03:30] <f-a> noone here iirc
[19:03:34] <f-a> i do sdl 1
[19:07:51] <ManofLetters[m]> I do sdl2-ttf only
[19:08:06] <EvanR> should I report an issue
[19:08:20] <ManofLetters[m]> sure
[19:08:26] <ManofLetters[m]> but don't expect fast reaction
[19:08:55] <ManofLetters[m]> though different bindings may have different main focus maintainers, so who knows
[19:12:11] <f-a> ofc you should
[19:14:12] <EvanR> or should I just do a PR
[19:14:40] <ManofLetters[m]> why not
[19:15:01] <EvanR> lol I already have a PR open for something else... hasn't been merged yet... 2 years
[19:15:07] <f-a> open it and see if the maintainer is friend.y, then pr
[19:15:08] <f-a> lo
[19:15:09] <f-a> l
[19:15:12] <f-a> pester them
[19:15:20] <f-a> I do that to each haskell maintainer
[19:15:28] <f-a> they hate me but my patches get merged, eventurally
[19:15:29] <f-a> -r
[19:15:48] <ManofLetters[m]> right
[19:16:41] <f-a> or they offer comaintainership :P
[19:18:53] <EvanR> this is just... evidence that nobody uses SDL2 audio in haskell
[19:19:27] <EvanR> I guess it's not 100% mission critical because you can assume you got the sample format you wanted
[19:19:46] <EvanR> since I requested float samples, I am skeptical of this though
[20:37:22] <EvanR> I submitted a PR
[20:38:01] <EvanR> how do you bug the maintainer? On the PR or otherwise?
[20:54:56] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[20:59:09] <ManofLetters[m]> thank you in the name of humanity
[20:59:24] <ManofLetters[m]> find out where he lives
[21:11:29] <ManofLetters[m]> but I think you can start by pinging him on the PR and then escalate
[21:32:51] <sm> politely
[21:32:58] <sm> and helpfully
[21:33:05] *** Quits: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[21:33:29] *** Joins: chomwitt (~chomwitt@2a02:587:dc0d:6d00:12c3:7bff:fe6d:d374)
[22:05:50] <f-a> link to the pr
[22:06:11] <f-a> he sent a pr, that is quite a polite first step
[22:06:41] <f-a> I usually write bug reports when I am exhausted and frustrated and I regret it a ¬µsecond afer pressing ‚Äúsubmit‚Äù
[22:49:28] <EvanR> two pull requests xD
[22:49:37] <EvanR> 1 today 1 in 2019
[22:51:20] <EvanR> also note I get a crash when using an audio callback unless I use -threaded
[22:52:41] <icrbow[m]> EvanR: can't you use `openDeviceSamples` field instead?
[22:53:14] <EvanR> that's not what is returned from openAudioDevice
[22:53:18] <EvanR> oh
[22:54:01] <EvanR> yeah no
[22:54:34] <EvanR> you set the desired parameters in OpenDeviceSpec which has everything exported
[22:54:48] <icrbow[m]> It just passes your input to audio spec: `Raw.audioSpecSamples = openDeviceSamples`
[22:54:49] <EvanR> it returns to use AudioSpec which you can't really work with
[22:54:57] <EvanR> I saw there is a raw API
[22:55:05] <EvanR> one option is by pass it all and use the raw API
[22:55:31] <EvanR> returns to you*
[22:55:33] <icrbow[m]> I mean, you already have this information...
[22:55:52] <EvanR> the problem is the sample format, not the number of samples
[22:56:06] <EvanR> you request a sample format, and it may come back different
[22:56:33] <icrbow[m]> Yeah, i'm adressing this part:
[22:56:33] <icrbow[m]> > This means there was no way to access the audioSpecFormat field.
[22:57:02] <icrbow[m]> oops
[22:57:25] <EvanR> right so you could pass Desire Floats, and it returns that you will have to use signed 16 bit
[22:57:37] <EvanR> hypthetically
[22:57:40] <icrbow[m]> No, this one:
[22:57:41] <icrbow[m]> > AudioSpec now exports the audioSpecSamples field 
[22:57:41] <icrbow[m]> Perhaps PR title is wrong..
[22:58:58] <icrbow[m]> and `audioSpecFormat` is exported..
[22:59:02] <EvanR> I changed it
[22:59:04] <icrbow[m]> * is exported now..
[22:59:13] <EvanR> you can't use it in any way
[22:59:20] <EvanR> audioSpecFormat
[23:00:02] <EvanR> this would work
[23:00:11] <icrbow[m]> https://hackage.haskell.org/package/sdl2-2.5.3.0/docs/SDL-Audio.html#t:AudioFormat
[23:00:11] <icrbow[m]> the formats are exported ü§î
[23:00:27] <EvanR> case spec of AudioSpec{audioSpecFormat=x} -> print (show x)
[23:00:50] <EvanR> but AudioSpec is not exported
[23:01:07] <EvanR> print (show (audioSpecFormat spec)) is illegal
[23:01:47] <icrbow[m]> EvanR: that's strange. It has its Show instance..
[23:02:01] <EvanR> Cannot use record selector ‚ÄòaudioSpecFormat‚Äô as a function due to escaped type variables
[23:02:16] <EvanR> AudioSpec has an existential type
[23:02:55] <icrbow[m]> Ah, so the record selector function is itself broken due to existentials leaking...
[23:03:00] <EvanR> yes
[23:03:34] <icrbow[m]> I wonder how and why it got hidden.
[23:06:16] <EvanR> do not know, I mean OpenDeviceSpec is essentially the same thing and is not hidden
[23:06:51] <EvanR> this code was unchanged since 2015
[23:07:16] <EvanR> I think people just don't use SDL2 audio high level or don't use it carefully
[23:09:03] <icrbow[m]> My guess is everybody is on sdl2-mixer
[23:09:27] <icrbow[m]> s/My guess is everybody is on sdl2-mixer/My guess is everybody are hugging their sdl2-mixer/
[23:09:51] <icrbow[m]> s/My guess is everybody is on sdl2-mixer/My guess is everybody is hugging their sdl2-mixer/
[23:10:53] *** Joins: curiousgay (~curiousga@77-120-141-90.kha.volia.net)
[23:30:12] <EvanR> yeah which side steps this issue
[23:30:22] <EvanR> somehow, I'm sure
[23:30:47] <EvanR> ain't nobody got time to mess with low level callback crap xD
[23:32:01] <ManofLetters[m]> myself I'd vote to make you (co)-maintainer
[23:32:38] <ManofLetters[m]> that's how I because the maintainer of sdl2-ttf; politely nagging the devs until they've had enough
[23:33:16] <ManofLetters[m]> I have a fix or two for sdl2 as well, so an active maintainer would be great
[23:33:54] <icrbow[m]> I can merge that, but can't upload to Hackage.
[23:42:52] <EvanR> well uploading to hackage requires a new release right
[23:42:59] <EvanR> that's another story
[23:44:25] <EvanR> if it were merged, at least we know it'll be fixed "eventually" xD
