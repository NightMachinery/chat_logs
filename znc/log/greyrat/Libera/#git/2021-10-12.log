[00:00:08] <cbreak> Jong: if you want to overwrite, consider why you want to merge in the first place
[00:00:22] <Jong> I figured it out!
[00:00:33] <cbreak> but you can use git checkout --ours / --theirs to get either your or their version of a file in conflict
[00:00:37] *** Joins: bkircher (~bkircher@2001:a61:25b1:b301:38c4:d8e7:23b0:bde5)
[00:00:47] <Jong> cbreak I switchted to mybranch.  I delete the file I changed. then did git rm thefilename
[00:00:47] <cbreak> or use merge strategy ours
[00:00:52] <Jong> then I did git merge main
[00:00:57] <cbreak> that seems dumb.
[00:01:01] <Jong> after git merge main, I add my source code file
[00:01:10] <cbreak> why merge?
[00:01:24] <Jong> after that I amended the commit, effectively squashing / hiding the fact that I deleted and readded the file
[00:01:39] <Jong> cbreak I needed to merge main into my branch because main was waay ahead of my branch
[00:01:49] <cbreak> you could have rebased.
[00:01:57] <Jong> I needed to get my branch ahead of main, so I can then push the branch back onto main
[00:02:01] <cbreak> that's often simpler, with only few changes
[00:02:43] <Jong> I thought this is rebasing: https://wac-cdn.atlassian.com/dam/jcr:3bafddf5-fd55-4320-9310-3d28f4fca3af/03%20Rebasing%20the%20feature%20branch%20into%20main.svg?cdnVersion=1841
[00:03:01] <Jong> how can I put my branch ahead of main when main is ahead?
[00:03:38] <Jong> ohh I see, it would just rebase the changed files?
[00:03:56] <cbreak> Jong: "git pull --rebase"
[00:04:03] <Jong> I didn't think rebase would work because I thought rebase would effective change all the source code back, almost like a revert
[00:04:09] <cbreak> it takes your commits (probably only a single commit), and puts it on top of upstream
[00:04:25] <cbreak> !cs
[00:04:25] <gitinfo> "Git for Computer Scientists" is a quick introduction to git internals for people who are not scared by phrases like Directed Acyclic Graph. http://eagain.net/articles/git-for-computer-scientists/ See also !concepts !bottomup
[00:04:41] <Jong> I think I need to play around with rebase more
[00:04:49] <cbreak> this documentation might not be helpful, but it helped me a lot in understanding git
[00:04:52] <mackerman> Makes your change into a diff that should apply to the other branch
[00:04:57] <mackerman> https://git-scm.com/book/en/v2/Git-Branching-Rebasing
[00:09:04] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[00:09:06] *** Quits: rundown (~eb0t@90.208.41.2) (Ping timeout: 260 seconds)
[00:14:12] *** Quits: FemmeAndroid (~textual@72-50-208-37.fttp.usinternet.com) (Quit: My MacBook Air has gone to sleep. ZZZzzzâ€¦)
[00:16:37] *** Quits: alkino (~quassel@user/alkino) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[00:18:14] <Disconsented> bookworm> Well ideally, I'd be looking for a tool to manage and apply patches. I'm trying to minimise the effort in updating from upstream
[00:18:14] <Disconsented> As is I have been maintaining a branch with my contributions to upstream, along side changes that I'll be maintaining for myself. Its been .. error prone
[00:22:38] *** Quits: nx_ (~nitronix@5.29.23.150) (Ping timeout: 260 seconds)
[00:23:10] *** Quits: durham (~durham@163.114.132.4) (Read error: Connection reset by peer)
[00:23:17] *** Joins: durham_ (~durham@2620:10d:c090:400::5:bc69)
[00:24:11] *** Joins: m0viefreak2 (~asdf@user/m0viefreak)
[00:24:13] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Killed (NickServ (GHOST command used by m0viefreak2)))
[00:24:14] *** m0viefreak2 is now known as m0viefreak
[00:25:18] *** Joins: m0viefreak2 (~asdf@user/m0viefreak)
[00:25:20] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Killed (NickServ (GHOST command used by m0viefreak2)))
[00:25:20] *** m0viefreak2 is now known as m0viefreak
[00:25:40] *** Joins: m0viefreak2 (~asdf@user/m0viefreak)
[00:25:42] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Killed (NickServ (GHOST command used by m0viefreak2)))
[00:25:43] *** m0viefreak2 is now known as m0viefreak
[00:26:31] *** Joins: odoood__ (~odoood@2601:c8:c003:a550::3)
[00:26:37] *** Joins: m0viefreak2 (~asdf@user/m0viefreak)
[00:26:39] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Killed (NickServ (GHOST command used by m0viefreak2)))
[00:26:39] *** m0viefreak2 is now known as m0viefreak
[00:26:57] *** Joins: m0viefreak2 (~asdf@user/m0viefreak)
[00:26:59] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Killed (NickServ (GHOST command used by m0viefreak2)))
[00:26:59] *** m0viefreak2 is now known as m0viefreak
[00:27:58] *** Joins: m0viefreak2 (~asdf@user/m0viefreak)
[00:28:00] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Killed (NickServ (GHOST command used by m0viefreak2)))
[00:28:00] *** m0viefreak2 is now known as m0viefreak
[00:28:18] *** Joins: m0viefreak2 (~asdf@user/m0viefreak)
[00:28:20] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Killed (NickServ (GHOST command used by m0viefreak2)))
[00:28:20] *** m0viefreak2 is now known as m0viefreak
[00:28:31] *** Joins: bremner (~bremner@notmuch/developer/bremner)
[00:29:17] *** Joins: m0viefreak2 (~asdf@user/m0viefreak)
[00:29:19] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Killed (NickServ (GHOST command used by m0viefreak2)))
[00:29:19] *** m0viefreak2 is now known as m0viefreak
[00:29:39] *** Joins: m0viefreak2 (~asdf@user/m0viefreak)
[00:29:41] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Killed (NickServ (GHOST command used by m0viefreak2)))
[00:29:42] *** m0viefreak2 is now known as m0viefreak
[00:29:59] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[00:30:27] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[00:32:30] *** Joins: Betal (~Betal@user/betal)
[00:38:49] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi) (Ping timeout: 252 seconds)
[00:43:08] *** Quits: ZacSharp (~ZacSharp@user/zacsharp) (Quit: ZacSharp)
[00:43:24] *** Joins: ZacSharp (~ZacSharp@user/zacsharp)
[00:50:24] *** Quits: Strom (strom@fedora/strom) ()
[00:50:32] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[00:50:34] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[00:50:45] *** Quits: emf_ (~emf@2620:10d:c090:400::5:fe52) (Quit: emf_)
[00:52:02] *** Joins: Strom (strom@fedora/strom)
[00:52:18] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[00:53:01] *** Quits: odoood__ (~odoood@2601:c8:c003:a550::3) (Ping timeout: 245 seconds)
[00:53:26] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 245 seconds)
[00:53:37] *** Lord_of_Life_ is now known as Lord_of_Life
[00:55:03] *** Quits: madewokherd (~urk@comcast.codeweavers.com) (Quit: If your computer stops responding for a long time, turn it off and then back on.)
[01:02:53] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:05:40] *** Joins: emf (~emf@2620:10d:c090:400::5:fe52)
[01:06:29] *** Joins: rgrinberg (~textual@ip235-44-15-186.ct.co.cr)
[01:07:07] *** jazzy2 is now known as jazz-o-lantern
[01:07:24] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[01:09:08] *** Quits: ttaylorr (~Taylor_Bl@104-178-186-189.lightspeed.milwwi.sbcglobal.net) (Quit: WeeChat 3.3)
[01:11:33] *** Joins: odoood__ (~odoood@2601:c8:c003:a550::3)
[01:14:01] *** Quits: ozoned (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 252 seconds)
[01:14:39] *** Quits: durham_ (~durham@2620:10d:c090:400::5:bc69) (Read error: Connection reset by peer)
[01:14:45] *** Joins: durham (~durham@2620:10d:c090:400::5:bc69)
[01:15:17] *** Quits: durham (~durham@2620:10d:c090:400::5:bc69) (Client Quit)
[01:17:14] *** Quits: ChemicalRascal (~ChemicalR@14-202-44-48.tpgi.com.au) (Read error: Connection reset by peer)
[01:18:31] *** Joins: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac)
[01:20:11] <Jong> git is an effing nightmare
[01:20:21] <Jong> I'm scared I'll eff. up the entire repo
[01:20:35] <bookworm> you gotta work really hard for that
[01:20:43] <bookworm> !reflog Jong
[01:20:43] <gitinfo> The git reflog (`git log -g`) temporarily (90 days by default) snapshots your branch states at each operation that changes the branch, making it easy to undo e.g. merges and rebases. The usual warnings about !rewriting/undoing history apply. See https://sukima.github.io/GitFixUm/ for full details.
[01:20:53] <Jong> it's like having the nuclear button right in front of you and one mistake, kapaw there goes your code
[01:21:01] <bookworm> no, read
[01:22:06] <mackerman> Also  !backup
[01:22:06] <gitinfo> Worried about your data while trying stuff out in your repo? The repository in its entirety lives inside the .git directory in the root of your work tree so to backup everything `cp -a path/to/workdir path/to/backup` or equivalent will suffice as long as the repo is not modified during backup. See also http://sethrobertson.github.com/GitBestPractices/#backups
[01:22:28] <bookworm> that's tracked changes naturally, messing up untracked changes is easy yes, especially with checkout or reset --hard but you should know how those commands work anyhow if you use git
[01:22:40] *** Joins: durham_ (~durham@2620:10d:c090:400::5:eb59)
[01:23:01] *** Quits: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac) (Ping timeout: 245 seconds)
[01:25:30] *** Quits: natrys (~natrys@user/natrys) (Quit: natrys)
[01:30:01] <Jong> bookworm  so check this out.. I forked a repo, created a branch, changed a file, and the made a pull request. When finally the pull request is approved, many commits have been made to master.  So I save off my changes, do git reset HEAD^1;  git push -f; then do git marge master. Then I paste in my changes, commit, and push..  That way it's as if I forked, changed, and merged right from the tip of master instead of from the middle of master.
[01:30:06] <Jong> what do you think?
[01:30:55] <bookworm> that you don't quite understand how it all works
[01:31:05] <Jong> :-(
[01:31:18] <bookworm> nothing is lost though, you still have everything in your local repo
[01:31:43] <bookworm> but don't use --force unless you really understand what it does
[01:32:13] <bookworm> that applies to all commands in unix... there's a reason it bails without it
[01:32:16] *** Joins: madewokherd (~urk@75-168-202-251.mpls.qwest.net)
[01:32:46] <Jong> git reset HEAD^1 pops off my change. That way my branch is basically identical to master but just behind... git merge master basically does the same thing as git pull would do were I on master branch. But instead I'm on my branch.   After git merge master, I just add my changes to the tip of the repo. Is "tip" the right word? "head" is a better word?
[01:33:25] *** Quits: srinidhi (~srinidhi@49.206.4.186) (Ping timeout: 265 seconds)
[01:33:31] <bookworm> why would you reset your commit?
[01:33:40] <bookworm> you don't need to do that
[01:33:52] <Jong> bookworm  because it's basically a commit in the middle
[01:34:27] <bookworm> if all you want to achieve is that your commit is at the very top of master the operation for that is called rebase
[01:34:28] <Jong> a,b,c (I make branch AA here), d,e,f,g,h,i
[01:34:40] <Jong> branch AA looks like a,b,c,AA
[01:34:41] *** another is now known as another|
[01:34:44] <bookworm> pull even has a shorthand for it
[01:35:22] <bookworm> and you want abcdefghiAA?
[01:35:44] <Jong> I reset so it becomes a,b,c..  THen git merge main makes it a,b,c,d,,e,f,g,h,i..  Now I reapply my changes..  a,b,c,d,e,f,g,h,i,AAchanges
[01:35:56] *** Quits: palasso (~palasso@user/palasso) (Quit: I am not a quitter!)
[01:36:02] <Jong> bookworm  yes yes
[01:36:07] <Jong> abcdefghiAA
[01:36:10] <bookworm> you don't want to do that the way you did it
[01:36:47] <bookworm> if you are on branch AA, issue a git pull --rebase and you end up with your desired state
[01:37:00] <bookworm> or use fetch && rebase
[01:37:03] <Jong> bookworm I don't want to do it because there's a better way? or because it's easy to press the wrong key and screw up? or because it causes structural mess under the hood?
[01:37:05] <bookworm> up to you
[01:37:29] *** Joins: Xatenev (~Xatenev@user/xatenev)
[01:37:44] <bookworm> it's a mess as soon as you reset more than one commit if you do it your way
[01:37:44] <Jong> well I did it my way, and I got the result I wanted... did I screw anything up even though I have the pretty sequence of commits I desired?
[01:38:01] <bookworm> you'll be rewriting the commit messages in full
[01:38:17] <Jong> huh? I don't see how that is so
[01:39:08] <Jong> bookworm do you think my manager would find out?  in githug it shows I did git push -f if you look in the pull request that is now closed. In the master branch it shows a clean pretty sequence
[01:39:49] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[01:40:19] *** Joins: Xatenev1 (~xatenev@ip4d147a26.dynamic.kabel-deutschland.de)
[01:40:38] <bookworm> you make your life complicated and you'll loose quite a bunch of time for no reason.... but you do you if you don't want to learn how it all works
[01:41:00] *** Joins: Xatenev_ (~xatenev@user/xatenev)
[01:41:31] <Jong>  I will learn tonight
[01:42:07] *** Quits: bkircher (~bkircher@2001:a61:25b1:b301:38c4:d8e7:23b0:bde5) (Ping timeout: 252 seconds)
[01:43:18] <Jong> bookworm  git merge master to get abcdefghiAA is easy when nothing else touches the files AA touched. But when subsequent commits touched the same file as AA, then merging is more difficult.  I wish there was a way to tell the computer "this is what I want this file to look like after the merge"..
[01:43:25] <Jong> and copy and paste the file
[01:43:44] <mackerman> rebase also rewinds to the common ancestor and applies a diffs.  But automatically.
[01:44:15] <Jong> mackerman  that's basically what i did manually, right?
[01:44:44] <Jong> mackerman  nice vocabulary. "rewins too the common ancestor". I'll need to use that
[01:44:50] <bookworm> also if you merge / rebase git tries to make the changes automatically. It only asks you to fix conflicts
[01:44:54] <Jong> too many typos sorry
[01:45:14] <mackerman> Probably got the same result.
[01:45:24] <bookworm> there's a bunch of merge tools that make it easy
[01:45:33] *** Parts: Xatenev1 (~xatenev@ip4d147a26.dynamic.kabel-deutschland.de) ()
[01:46:02] <Jong> from what I saw, git merge polluted the master branch with my intermediary commits on my branch
[01:48:25] <bookworm> that's not polluting, but if it bugs you, rebase, don't merge
[01:48:30] *** Quits: tuskkk____ (uid18470@id-18470.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[01:48:41] <bookworm> then you can pick and squash at your leisure
[01:49:26] <mackerman> If you fast-forward  merge your branch into master, it only moves the pointer.  Your branch's commits are visible.
[01:50:23] <bookworm> fast forward would not be possible in their example above
[01:50:27] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[01:50:32] <bookworm> as the history diverged
[01:50:52] <Jong> say I have a,b,c,AA,d,BB,e,CC,f,g,h,i,DD.   First, the diffs between commits from merged branch and master branch would look very weird, especially if the branch was significantly different from master
[01:51:23] <Jong> isn't that what merge does?
[01:51:47] <Jong> if I create branch AA,BB,CC,DD and merge it in. It'll look like  a,b,c,AA,d,BB,e,CC,f,g,h,i,DD after the merge won't it?
[01:52:14] <bookworm> no
[01:52:22] <Jong> git will stick the commits between whatever two each is between across time
[01:52:30] <bookworm> it's a graph, not a line
[01:52:50] <Jong> oh true.. git log just made it look like a line
[01:52:54] <bookworm> https://www.atlassian.com/git/tutorials/merging-vs-rebasing
[01:53:15] <Jong> i've read that. I need to reread it tonight
[01:53:27] <Jong> I'm going to make a two toy repos and practice forking and merging
[01:53:36] <Jong> that's the best way to learn right?
[01:53:54] <bookworm> look at some repos and play around
[01:54:00] <bookworm> the book helps
[01:54:01] *** Quits: jazz-o-lantern (~jaziz@user/jaziz) (Ping timeout: 268 seconds)
[01:54:05] <bookworm> !book
[01:54:05] <gitinfo> There are several good books available about git; 'Pro Git' is probably the best: https://git-scm.com/book but also look at !bottomup !cs !gcs !designers !gitt !vcbe and !parable
[01:54:21] <Jong> is "parent repo" not the right terminology? or is it "upstream repo" ?
[01:54:34] <bookworm> it's the same
[01:54:44] <bookworm> upstream as well
[01:54:46] *** Quits: theoceaniscool (~theoceani@119.12.232.133) (Ping timeout: 252 seconds)
[01:54:50] *** Quits: Xatenev (~Xatenev@user/xatenev) (Quit: Client closed)
[01:54:53] <Jong> I want to make a parent repo and child forked repo, and then practice making pull requests and merging them
[01:55:51] <Jong> I wish I had the vocabulary of you guys. I found like an effing 5 years old, and I don't like it.
[01:56:22] <bookworm> forking and pull requests are a GitHub / gitlab / $forge concept, less a git thing... git is decentralized and doesn't really care where you fetch stuff from
[01:57:11] <bookworm> you have remotes, branches and things like that in git itself, the rest is workflow dependent
[01:57:36] *** Quits: coot (~coot@37.30.52.99.nat.umts.dynamic.t-mobile.pl) (Quit: coot)
[01:58:21] <bookworm> git isn't exactly intuitive, you'll get used to it quickly though
[01:58:39] <bookworm> it's just a rather complex tool that can do many things
[01:59:33] <Jong> I feel that I'll always be second class. I want to be confident and know my stuff like all you guys
[01:59:37] *** Joins: masber (~masber@213.55.224.56)
[02:00:47] <bookworm> you haven't met _osse and _ikke yet I see ;P
[02:02:00] *** Joins: evocatus (~rg@84.51.113.13)
[02:02:11] <bookworm> there's more than one shade of grey... you don't need to be an absolute expert, some advanced middle ground is perfectly enough to get by most of the time
[02:02:22] <bookworm> if that fails, ask in here :)
[02:03:20] *** Quits: ghost43 (~ghost43@gateway/tor-sasl/ghost43) (Quit: Leaving)
[02:03:27] *** Joins: jazzy (~jaziz@user/jaziz)
[02:04:03] <Jong> You know what scares me about git? Git is the single that that literally running the wrong long can get you fired
[02:04:08] <Jong> wrong *line
[02:04:15] *** Joins: ghost43 (~ghost43@gateway/tor-sasl/ghost43)
[02:04:28] <bookworm> no
[02:04:44] <bookworm> you didn't read about the reflog did you?
[02:05:10] <Jong> it survives even if you run git push -f ?
[02:05:18] <bookworm> also it is decentralized... every single local thing can recover the history
[02:05:27] <bookworm> locally, yes
[02:05:33] <bookworm> for a time at least
[02:06:02] *** Joins: ozoned (odoood@gateway/vpn/protonvpn/odoood)
[02:06:02] <bookworm> (don't ever run a garbage collection cycle manually)
[02:08:39] *** Quits: odoood__ (~odoood@2601:c8:c003:a550::3) (Ping timeout: 250 seconds)
[02:15:07] *** Quits: Xatenev_ (~xatenev@user/xatenev) (Quit: Leaving)
[02:15:57] *** Joins: vladoski (~vladoski@2001:b07:add:d406:bdb6:a12d:1913:8f63)
[02:25:57] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[02:34:10] *** Joins: pizdets_ (~pizdets@183.182.114.60)
[02:34:41] *** Quits: rgrinberg (~textual@ip235-44-15-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[02:34:48] *** Quits: pizdets (~pizdets@183.182.111.226) (Ping timeout: 250 seconds)
[02:35:52] *** Quits: skapata (~Skapata@user/skapata) (Read error: Connection reset by peer)
[02:39:26] *** Joins: devslash- (~devslash@46.232.211.210)
[02:39:33] *** Quits: emf (~emf@2620:10d:c090:400::5:fe52) (Quit: emf)
[02:40:46] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 260 seconds)
[02:41:28] *** Joins: sarab (~sarab@103.210.200.98)
[02:41:57] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:dc9e:1427:a97:e25a) (Ping timeout: 256 seconds)
[02:42:45] *** Joins: jetchisel (jetchisel@user/jetchisel)
[02:43:21] *** Joins: ferdna (~ferdna@user/ferdna)
[02:43:26] <devslash-> I added node_modules to .gitignore but when I do git status it shows node_modules under untracked. How do I tell git to ignore node_modules
[02:48:19] <bookworm> !ignoreignore
[02:48:27] <bookworm> ...
[02:48:31] *** Joins: sarab97 (~sarab@103.210.200.98)
[02:48:56] <bookworm> !ignore_tracked
[02:48:56] <gitinfo> Git only applies ignore patterns to untracked files. You can't use ignore patterns to ignore changes to files that are already tracked by git. To remove files only from git, but keeping them on disk, use git rm --cached <file>. Still, see https://gist.github.com/1423106 for ways people have worked around the problem.
[02:49:11] <devslash-> these files arent tracked by git
[02:49:21] <devslash-> when I go to github, you cannot see node_modules in the repo
[02:49:35] *** Quits: sarab97 (~sarab@103.210.200.98) (Remote host closed the connection)
[02:49:35] *** Quits: sarab (~sarab@103.210.200.98) (Quit: Leaving)
[02:49:49] <bookworm> that doesn't mean that you aren't tracking it locally necessarily
[02:49:51] *** Joins: sarab (~sarab@103.210.200.98)
[02:50:06] <devslash-> i already did git rm --cache node_modules previously
[02:50:10] <bookworm> but the other option is that you messed up the pattern
[02:50:15] <devslash-> if i run it now it says no files matched
[02:50:30] <bookworm> what's the actual like in .gitignore?
[02:50:36] <bookworm> line*
[02:50:49] <devslash-> node_modules
[02:50:54] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[02:50:58] <devslash-> no trailing slash
[02:52:45] *** Quits: sarab (~sarab@103.210.200.98) (Client Quit)
[02:53:25] *** Joins: Kill-Animals (~Kill-Anim@S01060c8ddbc3ab4d.vs.shawcable.net)
[02:53:42] <bookworm> and node_modules is in the top level? Same level as the .gitignore file?
[02:53:51] <devslash-> yes
[02:54:12] <devslash-> at the moment i did rm -rf node_modules
[02:54:17] <devslash-> but git is still tracking it
[02:54:51] *** Joins: Nspace (~Nspace@user/nspace)
[02:55:28] *** Joins: alphasierra (~as53@2405:201:e:4d:e91c:e3b8:9701:614f)
[02:55:31] *** Quits: alphasierra (~as53@2405:201:e:4d:e91c:e3b8:9701:614f) (Remote host closed the connection)
[02:56:05] *** Joins: alphasierra (~alphasier@2405:201:e:4d:e91c:e3b8:9701:614f)
[02:57:04] *** Joins: emf (~emf@2620:10d:c090:400::5:fe52)
[03:01:38] *** Joins: igemnace (~ian@user/igemnace)
[03:01:46] *** Quits: emf (~emf@2620:10d:c090:400::5:fe52) (Ping timeout: 260 seconds)
[03:02:22] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[03:02:48] *** Joins: rgrinberg (~textual@ip235-44-15-186.ct.co.cr)
[03:03:33] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-228.sw.biz.rr.com)
[03:04:50] *** Joins: gco (~gco@2601:647:5a00:524:647e:1ab3:64de:66d1)
[03:08:24] *** Quits: vladoski (~vladoski@2001:b07:add:d406:bdb6:a12d:1913:8f63) (Quit: Textual IRC Client: www.textualapp.com)
[03:11:33] *** Joins: odoood__ (~odoood@2601:c8:c003:a550::3)
[03:12:29] *** Quits: masber (~masber@213.55.224.56) (Quit: Client closed)
[03:13:58] *** Quits: ozoned (odoood@gateway/vpn/protonvpn/odoood) (Ping timeout: 252 seconds)
[03:14:08] <Jong> bookworm  can I ask, how old are you?
[03:17:41] *** Joins: emf (~emf@2620:10d:c090:400::5:fe52)
[03:20:03] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[03:20:04] *** Joins: Lunatrius` (~Lunatrius@tm.84.52.181.125.dc.cable.static.telemach.net)
[03:20:39] *** Quits: CSWookie (~CSWookie@144.202.134.98) (Quit: Client closed)
[03:20:43] *** Quits: Lunatrius (~Lunatrius@77.38.92.228) (Ping timeout: 265 seconds)
[03:20:43] *** Lunatrius` is now known as Lunatrius
[03:24:10] <Jong> Is there a #git offtopic channel?
[03:25:27] *** Joins: Lunatrius` (~Lunatrius@77.38.91.201)
[03:25:28] *** Quits: Lunatrius (~Lunatrius@tm.84.52.181.125.dc.cable.static.telemach.net) (Ping timeout: 252 seconds)
[03:25:43] *** Lunatrius` is now known as Lunatrius
[03:30:27] *** Quits: pieguy128_ (~pieguy128@bras-base-mtrlpq5031w-grc-57-65-92-163-194.dsl.bell.ca) (Ping timeout: 240 seconds)
[03:33:36] *** Quits: alphasierra (~alphasier@2405:201:e:4d:e91c:e3b8:9701:614f) (Remote host closed the connection)
[03:34:52] *** Quits: odoood__ (~odoood@2601:c8:c003:a550::3) (Ping timeout: 252 seconds)
[03:37:36] *** Joins: Lunatrius` (~Lunatrius@77.38.92.228)
[03:38:26] *** Quits: Lunatrius (~Lunatrius@77.38.91.201) (Ping timeout: 245 seconds)
[03:38:26] *** Lunatrius` is now known as Lunatrius
[03:39:22] *** Joins: pieguy128 (~pieguy128@bras-base-mtrlpq5031w-grc-48-67-70-102-17.dsl.bell.ca)
[03:39:52] *** Quits: mat001 (~mat001@213.143.69.121) (Remote host closed the connection)
[03:41:58] *** Quits: rgrinberg (~textual@ip235-44-15-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[03:42:35] *** Joins: alphasierra (~alphasier@2405:201:e:4d:e91c:e3b8:9701:614f)
[03:55:53] *** Joins: rgrinberg (~textual@ip235-44-15-186.ct.co.cr)
[03:58:44] *** Quits: brianward (~brianward@174-21-4-6.tukw.qwest.net) (Quit: Textual IRC Client: www.textualapp.com)
[04:00:14] *** Quits: ZacSharp (~ZacSharp@user/zacsharp) (Quit: ZacSharp)
[04:03:18] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Quit: leaving)
[04:04:12] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[04:10:41] *** Quits: emf (~emf@2620:10d:c090:400::5:fe52) (Quit: emf)
[04:13:30] *** Joins: chenqisu1 (~xirndc@183.217.201.186)
[04:14:10] *** chenqisu1 is now known as chenqisu12
[04:14:16] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 245 seconds)
[04:17:15] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[04:18:27] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[04:19:37] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (calcium.libera.chat (Nickname regained by services)))
[04:19:37] *** vinleod is now known as vdamewood
[04:20:18] *** Quits: durham_ (~durham@2620:10d:c090:400::5:eb59) (Remote host closed the connection)
[04:21:45] *** Joins: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac)
[04:29:50] *** Joins: emf (~emf@2620:10d:c090:400::5:fe52)
[04:29:59] *** Quits: alphasierra (~alphasier@2405:201:e:4d:e91c:e3b8:9701:614f) (Remote host closed the connection)
[04:31:29] *** Joins: alphasierra (~alphasier@2405:201:e:4d:e91c:e3b8:9701:614f)
[04:39:10] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[04:39:41] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[04:43:43] *** Joins: BSaboia (~bsaboia@187.36.77.91)
[04:43:52] *** Quits: w0ng (~w0ng@103.212.227.181) (Ping timeout: 260 seconds)
[04:47:51] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:48:12] *** Quits: emf (~emf@2620:10d:c090:400::5:fe52) (Quit: emf)
[04:48:32] *** Quits: evocatus (~rg@84.51.113.13) (Quit: Konversation terminated!)
[04:49:12] *** Joins: emf (~emf@2620:10d:c090:400::5:fe52)
[04:49:41] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[04:50:34] *** Quits: emf (~emf@2620:10d:c090:400::5:fe52) (Client Quit)
[04:55:19] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[04:56:23] *** Joins: w0ng (~w0ng@103.1.212.165)
[04:56:48] *** Joins: jazzy (~jaziz@user/jaziz)
[04:56:49] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[04:57:12] *** Joins: jetchisel (jetchisel@user/jetchisel)
[04:59:01] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 268 seconds)
[05:00:36] *** Joins: Viking667 (viking@203.184.11.139)
[05:00:38] *** Joins: emf (~emf@2620:10d:c090:400::5:fe52)
[05:01:17] *** Joins: keypusher (keypusher@user/keypusher)
[05:01:54] <Viking667> 'llo. I used the github interface to make a fork of a project, but I only have one branch of that project. How do I fetch other branches from that original project to put into my copy?
[05:02:19] *** Quits: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac) (Remote host closed the connection)
[05:02:39] *** Joins: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac)
[05:02:42] <Viking667> actually, not one branch, but recently the original project added a new branch and I don't know how to use github to fetch the new branches for me.
[05:03:42] *** Joins: jancoow3 (~jancoow@user/jancoow)
[05:04:06] *** Quits: brettgilio (~brettgili@x-node.gq) (Read error: Connection reset by peer)
[05:04:10] *** Quits: jsatk (sid304796@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[05:04:10] *** Quits: elichai2 (sid212594@hampstead.irccloud.com) (Ping timeout: 260 seconds)
[05:04:10] *** Quits: Darkfoe (sid402081@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[05:04:10] *** Quits: LordLion (sid31081@user/ktllo) (Ping timeout: 260 seconds)
[05:04:10] *** Quits: limon_ (~limon@biber.verj.us) (Ping timeout: 260 seconds)
[05:04:10] *** Quits: ddevault (znc@sourcehut/staff/ddevault) (Ping timeout: 260 seconds)
[05:04:21] *** Quits: haskl[error] (~haskl@user/haskl) (Read error: Connection reset by peer)
[05:04:34] *** Joins: haskl (~haskl@user/haskl)
[05:04:45] *** Joins: brettgilio (~brettgili@x-node.gq)
[05:04:45] *** Quits: fdv (sid27570@helmsley.irccloud.com) (Ping timeout: 260 seconds)
[05:04:45] *** Quits: cyberpear (uid364019@fedora/cyberpear) (Ping timeout: 260 seconds)
[05:04:57] *** Quits: Quietus (~quietus@2a04:52c0:101:181::) (Quit: No Ping reply in 180 seconds.)
[05:05:00] *** Joins: ddevault (znc@sourcehut/staff/ddevault)
[05:05:02] *** Joins: limon (~limon@biber.verj.us)
[05:05:07] *** Joins: jsatk (sid304796@id-304796.helmsley.irccloud.com)
[05:05:15] *** Quits: raghavgururajan (9fd51d1ea8@user/raghavgururajan) (Excess Flood)
[05:05:20] *** Quits: jancoow (~jancoow@user/jancoow) (Ping timeout: 260 seconds)
[05:05:20] *** Quits: ringo_ (~ringo@157.230.117.128) (Ping timeout: 260 seconds)
[05:05:20] *** jancoow3 is now known as jancoow
[05:05:24] *** Joins: elichai2 (sid212594@id-212594.hampstead.irccloud.com)
[05:05:25] *** Joins: Darkfoe (sid402081@id-402081.helmsley.irccloud.com)
[05:05:25] *** Joins: raghavgururajan (9fd51d1ea8@user/raghavgururajan)
[05:05:30] *** Joins: LordLion (sid31081@user/ktllo)
[05:05:40] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[05:05:41] *** Joins: fdv (sid27570@id-27570.helmsley.irccloud.com)
[05:06:13] *** Joins: Quietus (~quietus@2a04:52c0:101:181::)
[05:06:26] *** Joins: ringo_ (~ringo@157.230.117.128)
[05:06:41] <mackerman> Viking667: Add the other repo as a remote
[05:07:08] <mackerman> GitHub docs and others describe how to add an "upstream"  remote.
[05:08:22] *** Quits: Crispy (~ScatMan@101.187.236.231) (Ping timeout: 260 seconds)
[05:10:44] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[05:10:57] *** Quits: emf (~emf@2620:10d:c090:400::5:fe52) (Quit: emf)
[05:12:11] <Viking667> hm, I did figure it out in the end... what I ended up doing was to create a new branch in my fork called "beta", and github then decided I wanted a remote to point to original-remote:beta, which I do.
[05:12:37] <Viking667> I just wish it had been a bit more obvious, I stumbled across this solution by accident.
[05:14:13] <Viking667> meh. Hasn't solved my problem... it's referring to code that's six months old. Sigh.
[05:17:11] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[05:23:49] <Viking667> Currently the only way I know to solve this, in part, is make a clone on my own machine of my fork on github, add a new branch, pointing the remote to the original repo's new branch, then push that back up to github to my fork.
[05:25:34] *** Quits: BSaboia (~bsaboia@187.36.77.91) (Read error: Connection reset by peer)
[05:26:26] *** Joins: BSaboia (~bsaboia@187.36.77.91)
[05:34:07] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 265 seconds)
[05:34:07] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Read error: Connection reset by peer)
[05:36:35] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[05:37:13] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[05:37:57] *** Quits: jwillikers (~jwilliker@ics141-1.icsincorporated.com) (Remote host closed the connection)
[05:44:28] *** Quits: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac) (Remote host closed the connection)
[05:45:03] *** Joins: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac)
[05:45:22] *** Quits: subopt (~subopt@2603-8081-2302-459a-e428-389a-706c-5538.res6.spectrum.com) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[05:49:35] *** Quits: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac) (Ping timeout: 268 seconds)
[05:51:29] *** Joins: Crispy (~ScatMan@101.187.236.231)
[05:52:05] *** Parts: Viking667 (viking@203.184.11.139) (ERC (IRC client for Emacs 28.0.50))
[05:53:09] *** Quits: zebrag (~chris@user/zebrag) (Remote host closed the connection)
[05:57:44] *** Quits: alphasierra (~alphasier@2405:201:e:4d:e91c:e3b8:9701:614f) (Remote host closed the connection)
[06:06:01] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[06:08:49] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 252 seconds)
[06:09:35] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Ping timeout: 250 seconds)
[06:11:55] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[06:15:56] *** Quits: humky (~humky@user/humky) (Ping timeout: 245 seconds)
[06:16:24] *** Joins: humky (~humky@user/humky)
[06:23:25] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Ping timeout: 265 seconds)
[06:24:57] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[06:29:44] *** Quits: merv (4988ea31b1@knopi.disroot.org) (Read error: Connection reset by peer)
[06:31:57] *** Joins: llh (~llh@user/llh)
[06:32:02] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[06:49:19] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[06:53:44] *** Quits: dmc (~dmc@archlinux/trusteduser/polyzen) (Quit: WeeChat 3.3)
[06:55:44] *** Joins: dmc (~dmc@archlinux/trusteduser/polyzen)
[06:56:41] *** Joins: hbautista__ (~hbautista@187.171.117.35)
[06:59:11] *** Quits: hbautista_ (~hbautista@187.171.117.35) (Ping timeout: 265 seconds)
[07:30:06] *** Joins: saroy (~Sandipan@45.249.73.218)
[07:32:16] *** Quits: saroy (~Sandipan@45.249.73.218) (Client Quit)
[07:32:34] *** Joins: saroy (~Sandipan@45.249.73.218)
[07:36:53] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 268 seconds)
[07:43:59] *** Joins: marw (4988ea31b1@knopi.disroot.org)
[07:47:51] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:49:47] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[07:55:20] *** Quits: vishal (~vishal@fedora/vishal) (Quit: ZNC 1.8.2 - https://znc.in)
[07:57:31] *** Joins: jetchisel (jetchisel@user/jetchisel)
[07:57:40] *** Joins: vishal (~vishal@fedora/vishal)
[08:04:13] *** Quits: lgc (~lgc@user/lgc) (Quit: WeeChat 3.2-dev)
[08:11:41] *** Quits: hbautista__ (~hbautista@187.171.117.35) (Ping timeout: 265 seconds)
[08:14:16] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[08:16:28] *** Quits: BSaboia (~bsaboia@187.36.77.91) (Quit: This computer has gone to sleep)
[08:17:13] *** Joins: jazzy (~jaziz@user/jaziz)
[08:19:22] *** Joins: zoorat (~zoorat@gateway/tor-sasl/zoorat)
[08:19:31] *** Quits: Kill-Animals (~Kill-Anim@S01060c8ddbc3ab4d.vs.shawcable.net) (Quit: Connection closed)
[08:20:00] *** Joins: Kill-Animals (~Kill-Anim@S01060c8ddbc3ab4d.vs.shawcable.net)
[08:20:31] *** Quits: odoood (~odoood@2601:c8:c003:a550::3) (Ping timeout: 245 seconds)
[08:22:13] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[08:23:01] *** Quits: thiago (~thiago@2601:1c0:4501:635c:9850:18f2:371d:f0e) (Ping timeout: 245 seconds)
[08:24:45] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[08:26:14] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[08:31:43] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[08:32:23] *** Joins: NaTaSa21F (~KELEBEK@95.70.207.169)
[08:40:46] *** Joins: madewokherd` (~urk@75-168-202-251.mpls.qwest.net)
[08:43:25] *** Quits: madewokherd (~urk@75-168-202-251.mpls.qwest.net) (Ping timeout: 250 seconds)
[08:46:15] *** Quits: gco (~gco@2601:647:5a00:524:647e:1ab3:64de:66d1) (Quit: ZZZzzzâ€¦)
[08:52:35] *** Quits: NaTaSa21F (~KELEBEK@95.70.207.169) (K-Lined)
[08:53:50] *** Joins: ravan (~ravan@user/ravan)
[09:03:32] *** Quits: chenqisu12 (~xirndc@183.217.201.186) (Remote host closed the connection)
[09:27:16] *** Joins: eggbean (~eggbean@user/eggbean)
[09:29:26] *** Joins: coot (~coot@37.30.52.99.nat.umts.dynamic.t-mobile.pl)
[09:33:51] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Ping timeout: 245 seconds)
[09:38:49] *** Quits: rgrinberg (~textual@ip235-44-15-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:44:00] *** Joins: chenqisu1 (~xirndc@183.217.201.186)
[09:44:15] *** chenqisu1 is now known as chenqisu12
[09:52:54] *** Quits: igemnace (~ian@user/igemnace) (Ping timeout: 260 seconds)
[09:57:11] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 245 seconds)
[10:01:38] *** Quits: hgl (hgl@67.230.181.248.16clouds.com) (Quit: Bye)
[10:02:48] *** Joins: palasso (~palasso@user/palasso)
[10:03:28] *** Joins: hgl (hgl@67.230.181.248.16clouds.com)
[10:04:28] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[10:04:38] *** Quits: coot (~coot@37.30.52.99.nat.umts.dynamic.t-mobile.pl) (*.net *.split)
[10:04:38] *** Quits: madewokherd` (~urk@75-168-202-251.mpls.qwest.net) (*.net *.split)
[10:04:38] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (*.net *.split)
[10:04:38] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (*.net *.split)
[10:04:38] *** Quits: AsenMx (~AsenMx@78.90.248.234) (*.net *.split)
[10:04:39] *** Quits: af (~af@awalgarg.me) (*.net *.split)
[10:04:39] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (*.net *.split)
[10:04:39] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (*.net *.split)
[10:04:39] *** Quits: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com) (*.net *.split)
[10:04:39] *** Quits: makara (~makara@196.214.171.83) (*.net *.split)
[10:04:39] *** Quits: JanC (~janc@user/janc) (*.net *.split)
[10:04:39] *** Quits: emanuele6 (~emanuele6@user/emanuele6) (*.net *.split)
[10:04:39] *** Quits: arand (~arand@c-0a01235c.05-662-7570703.bbcust.telenor.se) (*.net *.split)
[10:04:39] *** Quits: filePeter (~filePeter@user/filepeter) (*.net *.split)
[10:04:39] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (*.net *.split)
[10:04:39] *** Quits: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca) (*.net *.split)
[10:04:39] *** Quits: Milos (~Milos@user/milos) (*.net *.split)
[10:04:39] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (*.net *.split)
[10:04:39] *** Quits: analpaper (~analpaper@user/analpaper) (*.net *.split)
[10:04:39] *** Quits: audiocat (~audio@cpe-24-27-99-134.tx.res.rr.com) (*.net *.split)
[10:04:39] *** Quits: gjnoonan (sid95422@lymington.irccloud.com) (*.net *.split)
[10:04:39] *** Quits: utis (~utis@84.208.165.160) (*.net *.split)
[10:04:39] *** Quits: nvmd (~nvmd@user/nvmd) (*.net *.split)
[10:04:39] *** Quits: nivag (~gavin@103-76-144-176.ip.cis.gen.nz) (*.net *.split)
[10:04:39] *** Quits: avar (avar@vm.nix.is) (*.net *.split)
[10:04:39] *** Quits: BigShip (~BigShip@user/bigship) (*.net *.split)
[10:04:39] *** Quits: jcbjoe2021 (sid520195@lymington.irccloud.com) (*.net *.split)
[10:04:39] *** Quits: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net) (*.net *.split)
[10:04:39] *** Quits: merethan (~Maarten@static-189-67-100-159.thenetworkfactory.nl) (*.net *.split)
[10:04:39] *** Quits: starfarer (~quassel@v22017084888652747.happysrv.de) (*.net *.split)
[10:04:39] *** Quits: Duckle (~Duckle@user/duckle) (*.net *.split)
[10:04:39] *** Quits: jimklimov (~jimklimov@ip-86-49-251-117.net.upcbroadband.cz) (*.net *.split)
[10:04:39] *** Quits: tsdh (~tsdh@j289989.servers.jiffybox.net) (*.net *.split)
[10:04:39] *** Quits: tkazi (~tkazi@user/tkazi) (*.net *.split)
[10:04:39] *** Quits: jrm (~jrm@156.34.187.65) (*.net *.split)
[10:04:39] *** Quits: dslegends (~dslegends@user/dslegends) (*.net *.split)
[10:04:39] *** Quits: weyhmueller_ (~weyhmuell@blofeld.nc.w9r.de) (*.net *.split)
[10:04:39] *** Quits: blmt (~mattia@choochoo.legovini.net) (*.net *.split)
[10:04:39] *** Quits: hendry (~hendry@210.23.22.2) (*.net *.split)
[10:04:39] *** Quits: omnigoat (~omnigoat@user/omnigoat) (*.net *.split)
[10:04:39] *** Quits: ericnoan (~en@user/ericnoan) (*.net *.split)
[10:04:39] *** Quits: AlexKalopsia (~alexkalop@2-248-76-22-no182.tbcn.telia.com) (*.net *.split)
[10:04:39] *** Quits: SpacePlod (SpacePlod@common.sense.ws) (*.net *.split)
[10:04:39] *** Quits: Anarchic (~Anarchic@getlegit.co.uk) (*.net *.split)
[10:04:39] *** Quits: Cyp (~cyp@213.237.87.7) (*.net *.split)
[10:04:39] *** Quits: themill (~stuart@debian/stuart) (*.net *.split)
[10:04:39] *** Quits: warthog9 (warthog9@proxy.monkeyblade.net) (*.net *.split)
[10:04:39] *** Quits: xaxas (~quassel@nebulosa.jtopia.org) (*.net *.split)
[10:04:39] *** Quits: flying_sausages_ (~flying_sa@83.149.106.219) (*.net *.split)
[10:04:39] *** Quits: sahilister (~sahiliste@user/sahilister) (*.net *.split)
[10:04:39] *** Quits: sunyibo_ (~dorsch@5.2.75.229) (*.net *.split)
[10:04:39] *** Quits: hanneso_ (~hanneso@c-f7bfe655.028-514-73746f1.bbcust.telenor.se) (*.net *.split)
[10:04:39] *** Quits: Artea (~Lufia@artea.com.pt) (*.net *.split)
[10:04:39] *** Quits: PocketKiller (PacKetIV@user/packetiv) (*.net *.split)
[10:04:39] *** Quits: d1b (~db@user/d1b) (*.net *.split)
[10:04:39] *** Quits: dgw (dgw@sopel/admin/dgw) (*.net *.split)
[10:04:39] *** Quits: Ugrastil (~Ugrastil@89.40.112.204) (*.net *.split)
[10:04:39] *** Quits: tureba (~tureba@tureba.org) (*.net *.split)
[10:04:39] *** Quits: mika (~mika@odysseus.grml.info) (*.net *.split)
[10:04:39] *** Quits: Lcawte (~Lcawte@vps-7b1c39d2.vps.ovh.net) (*.net *.split)
[10:05:31] *** Quits: Kill-Animals (~Kill-Anim@S01060c8ddbc3ab4d.vs.shawcable.net) (Ping timeout: 245 seconds)
[10:05:51] *** Quits: hgl (hgl@67.230.181.248.16clouds.com) (Changing host)
[10:05:51] *** Joins: hgl (hgl@user/hgl)
[10:06:27] *** Joins: igemnace (~ian@user/igemnace)
[10:06:34] *** Joins: jazzy (~jaziz@user/jaziz)
[10:06:50] *** Joins: af (~af@awalgarg.me)
[10:11:02] *** Joins: pizdets (~pizdets@183.182.115.176)
[10:11:04] *** Quits: pizdets_ (~pizdets@183.182.114.60) (Ping timeout: 265 seconds)
[10:12:56] *** Quits: af (~af@awalgarg.me) (Ping timeout: 246 seconds)
[10:13:51] *** Joins: af (~af@awalgarg.me)
[10:15:43] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 250 seconds)
[10:19:25] *** Quits: af (~af@awalgarg.me) (Ping timeout: 265 seconds)
[10:19:25] *** Quits: mbalmer (~mbalmer@2001:67c:1090:5073:1187:5c65:e54b:214b) (Ping timeout: 265 seconds)
[10:20:34] *** Quits: hgl (hgl@user/hgl) (Quit: Bye)
[10:21:16] *** Joins: hgl (hgl@67.230.181.248.16clouds.com)
[10:21:16] *** Quits: hgl (hgl@67.230.181.248.16clouds.com) (Changing host)
[10:21:17] *** Joins: hgl (hgl@user/hgl)
[10:22:43] *** Joins: mbalmer (~mbalmer@46.175.8.162)
[10:24:30] *** Joins: emf (~emf@2620:10d:c090:400::5:c24e)
[10:24:34] *** Quits: emf (~emf@2620:10d:c090:400::5:c24e) (Client Quit)
[10:24:41] *** Joins: Nspace (~Nspace@user/nspace)
[10:24:52] *** Quits: gast0n (~g4570n@user/gast0n) (Quit: Bye, see you soon! ðŸ‘‹)
[10:26:27] *** Joins: coot (~coot@37.30.52.99.nat.umts.dynamic.t-mobile.pl)
[10:26:27] *** Joins: madewokherd` (~urk@75-168-202-251.mpls.qwest.net)
[10:26:27] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[10:26:27] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[10:26:27] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[10:26:27] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[10:26:27] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[10:26:27] *** Joins: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com)
[10:26:27] *** Joins: makara (~makara@196.214.171.83)
[10:26:27] *** Joins: JanC (~janc@user/janc)
[10:26:27] *** Joins: emanuele6 (~emanuele6@user/emanuele6)
[10:26:27] *** Joins: arand (~arand@c-0a01235c.05-662-7570703.bbcust.telenor.se)
[10:26:27] *** Joins: filePeter (~filePeter@user/filepeter)
[10:26:27] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[10:26:27] *** Joins: wilz (~wilz@modemcable036.177-131-66.mc.videotron.ca)
[10:26:27] *** Joins: Milos (~Milos@user/milos)
[10:26:27] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[10:26:27] *** Joins: analpaper (~analpaper@user/analpaper)
[10:26:27] *** Joins: audiocat (~audio@cpe-24-27-99-134.tx.res.rr.com)
[10:26:27] *** Joins: gjnoonan (sid95422@lymington.irccloud.com)
[10:26:27] *** Joins: utis (~utis@84.208.165.160)
[10:26:27] *** Joins: nvmd (~nvmd@user/nvmd)
[10:26:27] *** Joins: nivag (~gavin@103-76-144-176.ip.cis.gen.nz)
[10:26:27] *** Joins: avar (avar@vm.nix.is)
[10:26:27] *** Joins: BigShip (~BigShip@user/bigship)
[10:26:27] *** Joins: jcbjoe2021 (sid520195@lymington.irccloud.com)
[10:26:27] *** Joins: fflam (~mdt@ip72-220-60-77.sd.sd.cox.net)
[10:26:27] *** Joins: merethan (~Maarten@static-189-67-100-159.thenetworkfactory.nl)
[10:26:27] *** Joins: starfarer (~quassel@v22017084888652747.happysrv.de)
[10:26:27] *** Joins: Duckle (~Duckle@user/duckle)
[10:26:27] *** Joins: jimklimov (~jimklimov@ip-86-49-251-117.net.upcbroadband.cz)
[10:26:27] *** Joins: Cyp (~cyp@213.237.87.7)
[10:26:27] *** Joins: tsdh (~tsdh@j289989.servers.jiffybox.net)
[10:26:27] *** Joins: tkazi (~tkazi@user/tkazi)
[10:26:27] *** Joins: jrm (~jrm@156.34.187.65)
[10:26:27] *** Joins: dslegends (~dslegends@user/dslegends)
[10:26:27] *** Joins: weyhmueller_ (~weyhmuell@blofeld.nc.w9r.de)
[10:26:27] *** Joins: blmt (~mattia@choochoo.legovini.net)
[10:26:27] *** Joins: hendry (~hendry@210.23.22.2)
[10:26:27] *** Joins: omnigoat (~omnigoat@user/omnigoat)
[10:26:27] *** Joins: ericnoan (~en@user/ericnoan)
[10:26:27] *** Joins: AlexKalopsia (~alexkalop@2-248-76-22-no182.tbcn.telia.com)
[10:26:27] *** Joins: SpacePlod (SpacePlod@common.sense.ws)
[10:26:27] *** Joins: Anarchic (~Anarchic@getlegit.co.uk)
[10:26:27] *** Joins: themill (~stuart@debian/stuart)
[10:26:27] *** Joins: warthog9 (warthog9@proxy.monkeyblade.net)
[10:26:27] *** Joins: xaxas (~quassel@nebulosa.jtopia.org)
[10:26:27] *** Joins: sahilister (~sahiliste@user/sahilister)
[10:26:27] *** Joins: flying_sausages_ (~flying_sa@83.149.106.219)
[10:26:27] *** Joins: sunyibo_ (~dorsch@5.2.75.229)
[10:26:27] *** Joins: hanneso_ (~hanneso@c-f7bfe655.028-514-73746f1.bbcust.telenor.se)
[10:26:27] *** Joins: Artea (~Lufia@artea.com.pt)
[10:26:27] *** Joins: PocketKiller (PacKetIV@user/packetiv)
[10:26:27] *** Joins: d1b (~db@user/d1b)
[10:26:27] *** Joins: dgw (dgw@sopel/admin/dgw)
[10:26:27] *** Joins: Ugrastil (~Ugrastil@89.40.112.204)
[10:26:27] *** Joins: tureba (~tureba@tureba.org)
[10:26:27] *** Joins: mika (~mika@odysseus.grml.info)
[10:26:27] *** Joins: Lcawte (~Lcawte@vps-7b1c39d2.vps.ovh.net)
[10:28:45] *** Quits: jcbjoe2021 (sid520195@lymington.irccloud.com) (Max SendQ exceeded)
[10:28:45] *** Quits: JanC (~janc@user/janc) (Max SendQ exceeded)
[10:28:45] *** Quits: Duckle (~Duckle@user/duckle) (Max SendQ exceeded)
[10:28:45] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Max SendQ exceeded)
[10:28:45] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Max SendQ exceeded)
[10:29:04] *** Joins: Duckle (~Duckle@user/duckle)
[10:29:16] *** Joins: jcbjoe2021 (sid520195@id-520195.lymington.irccloud.com)
[10:29:16] *** Joins: JanC (~janc@user/janc)
[10:29:26] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[10:29:36] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[10:29:48] *** Quits: jpnurmi (jpnurmi@user/jpnurmi) (Remote host closed the connection)
[10:30:56] *** Joins: jpnurmi (jpnurmi@user/jpnurmi)
[10:32:08] *** Joins: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr)
[10:32:16] *** Joins: spare (~gzxsdvs3n@user/spareproject)
[10:34:13] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:31a5:effc:63aa:3481)
[10:34:13] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:31a5:effc:63aa:3481) (Changing host)
[10:34:13] *** Joins: skapata (~Skapata@user/skapata)
[10:34:24] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 265 seconds)
[10:34:50] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Quit: ZNC 1.8.2 - https://znc.in)
[10:35:43] *** Quits: haskl (~haskl@user/haskl) (Ping timeout: 268 seconds)
[10:37:05] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[10:37:44] *** Joins: haskl (~haskl@user/haskl)
[10:38:51] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[10:39:24] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[10:39:25] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Ping timeout: 252 seconds)
[10:47:16] *** Quits: igemnace (~ian@user/igemnace) (Remote host closed the connection)
[10:48:57] *** Joins: srinidhi (~srinidhi@49.206.4.186)
[10:52:42] *** Joins: af (~af@awalgarg.me)
[10:53:41] *** Joins: bkircher (~bkircher@2001:a61:25b1:b301:38c4:d8e7:23b0:bde5)
[10:54:56] *** Joins: alkino (~quassel@user/alkino)
[10:58:07] *** Quits: af (~af@awalgarg.me) (Ping timeout: 252 seconds)
[11:00:36] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[11:04:56] *** Joins: af (~af@awalgarg.me)
[11:06:58] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 252 seconds)
[11:08:15] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[11:08:36] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[11:18:06] *** Quits: zoorat (~zoorat@gateway/tor-sasl/zoorat) (Ping timeout: 276 seconds)
[11:19:11] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:23:38] *** Joins: furrymcgee (~devuan@cgn-89-1-209-32.nc.de)
[11:27:16] *** Quits: af (~af@awalgarg.me) (Ping timeout: 252 seconds)
[11:28:43] *** Quits: indy (~indy@dsl-static-104.213-160-167.telecom.sk) (Remote host closed the connection)
[11:29:10] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[11:29:34] *** Joins: indy (~indy@dsl-static-104.213-160-167.telecom.sk)
[11:37:35] *** Quits: unlaudable (~unlaudabl@155.93.175.230) (Quit: Client closed)
[11:40:04] *** Joins: af (~af@awalgarg.me)
[11:40:06] *** Quits: reset (~reset@user/reset) (Ping timeout: 245 seconds)
[11:40:40] *** Joins: humanface (~humanface@20014C4E1C412600D1E027D047FD27D2.dsl.pool.telekom.hu)
[11:42:10] *** Joins: reset (~reset@user/reset)
[11:42:41] *** Joins: zoorat (~zoorat@gateway/tor-sasl/zoorat)
[11:43:33] *** Quits: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4) (Quit: WeeChat 2.8)
[11:45:36] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[11:49:57] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[11:52:21] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[11:52:21] *** Quits: srinidhi (~srinidhi@49.206.4.186) (Remote host closed the connection)
[11:56:00] *** Joins: srinidhi (~srinidhi@49.206.4.186)
[11:56:42] *** Joins: tdaeayusr^ (~tdaeayusr@wsip-70-165-23-55.mc.at.cox.net)
[12:03:42] *** Joins: azed (~azed@154.107.100.129)
[12:05:47] *** Joins: mat001 (~mat001@213.143.69.121)
[12:08:08] *** Joins: alzgh (~alzgh@user/alzgh)
[12:15:27] *** Quits: k-man (~jason@user/k-man) (Ping timeout: 240 seconds)
[12:17:36] *** Joins: drogas (~drogas@jump2.jet.uk)
[12:22:30] *** Quits: spare (~gzxsdvs3n@user/spareproject) (Remote host closed the connection)
[12:22:37] *** Joins: spare (~gzxsdvs3n@user/spareproject)
[12:23:11] *** Quits: Guest915 (~Guest91@83.139.147.234) (Quit: Client closed)
[12:23:21] *** Quits: malteger (~malteger@user/malteger) (Quit: malteger)
[12:28:50] *** Joins: malteger (~malteger@user/malteger)
[12:29:10] *** Joins: k-man (~jason@user/k-man)
[12:30:08] *** Quits: w0ng (~w0ng@103.1.212.165) (Read error: Connection reset by peer)
[12:35:02] *** Quits: malteger (~malteger@user/malteger) (Quit: malteger)
[12:36:04] *** Joins: malteger (~malteger@user/malteger)
[12:38:11] *** Joins: w0ng (~w0ng@103.212.224.228)
[12:41:18] *** Quits: spare (~gzxsdvs3n@user/spareproject) (Remote host closed the connection)
[12:44:11] *** Joins: spare (~gzxsdvs3n@user/spareproject)
[12:45:50] *** Joins: nx_ (~nitronix@5.29.23.150)
[12:47:06] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[12:47:34] *** Joins: Anticom (~anticom@87.190.49.75)
[12:50:19] *** Quits: coot (~coot@37.30.52.99.nat.umts.dynamic.t-mobile.pl) (Ping timeout: 252 seconds)
[12:50:36] *** Quits: johncs (~johncs@2604:a880:2:d0::216b:f001) (Quit: bye)
[12:50:55] *** Joins: johncs (~johncs@2604:a880:2:d0::216b:f001)
[12:51:30] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[12:55:52] *** Quits: azed (~azed@154.107.100.129) (Quit: WeeChat 3.3)
[12:57:14] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[13:08:50] *** Joins: nxs__ (~nitronix@88.198.206.243)
[13:11:31] *** Quits: nx_ (~nitronix@5.29.23.150) (Ping timeout: 268 seconds)
[13:16:17] *** Quits: nxs__ (~nitronix@88.198.206.243) (Ping timeout: 264 seconds)
[13:18:19] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:dc9e:1427:a97:e25a)
[13:21:39] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[13:23:23] *** Joins: Anticom (~anticom@87.190.49.75)
[13:24:16] *** Joins: jetchisel (~jetchisel@user/jetchisel)
[13:24:16] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[13:24:27] *** Joins: Anticom (~anticom@87.190.49.75)
[13:28:08] *** Joins: madewokherd (~urk@75-168-202-251.mpls.qwest.net)
[13:29:22] *** Quits: madewokherd` (~urk@75-168-202-251.mpls.qwest.net) (Ping timeout: 252 seconds)
[13:38:41] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[13:39:22] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Quit: Leaving)
[13:40:27] *** Joins: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7)
[13:42:07] *** Joins: nxs__ (~nitronix@5.29.23.150)
[13:42:22] *** Joins: Anticom (~anticom@87.190.49.75)
[13:45:08] *** Joins: nx_ (~nitronix@88.198.206.243)
[13:46:25] *** Joins: dayday (uid520582@id-520582.hampstead.irccloud.com)
[13:47:37] *** Quits: nxs__ (~nitronix@5.29.23.150) (Ping timeout: 250 seconds)
[13:50:06] *** Quits: alkino (~quassel@user/alkino) (Ping timeout: 245 seconds)
[13:51:06] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[13:55:07] *** Quits: furrymcgee (~devuan@cgn-89-1-209-32.nc.de) (Quit: leaving)
[13:55:25] *** Joins: jim87 (~quassel@93.55.249.30)
[13:56:05] *** Quits: jim87 (~quassel@93.55.249.30) (Client Quit)
[13:59:13] *** Joins: nxs__ (~nitronix@88.198.206.243)
[13:59:58] *** Quits: chenqisu12 (~xirndc@183.217.201.186) (Quit: Leaving)
[14:00:12] *** Quits: nx_ (~nitronix@88.198.206.243) (Read error: Connection reset by peer)
[14:07:27] *** Joins: mat001_ (~mat001@213.143.69.121)
[14:08:58] *** Quits: mat001 (~mat001@213.143.69.121) (Ping timeout: 252 seconds)
[14:10:11] *** Joins: shored (~shored@user/shored)
[14:11:17] *** Quits: shored1 (~shored@user/shored) (Ping timeout: 265 seconds)
[14:18:47] *** Joins: mat001 (~mat001@213.143.69.121)
[14:18:55] *** Quits: mat001_ (~mat001@213.143.69.121) (Ping timeout: 252 seconds)
[14:26:24] *** Joins: furrymcgee (~devuan@cgn-89-1-209-32.nc.de)
[14:26:27] *** Joins: hoochmonger (~hoochmong@user/hoochmonger)
[14:30:45] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:31:04] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Client Quit)
[14:32:22] *** Joins: BSaboia (~bsaboia@187.36.77.91)
[14:33:06] *** Quits: BSaboia (~bsaboia@187.36.77.91) (Client Quit)
[14:38:21] *** Joins: shored1 (~shored@user/shored)
[14:38:43] *** Quits: shored (~shored@user/shored) (Ping timeout: 252 seconds)
[14:38:43] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[14:39:03] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[14:39:21] *** Joins: Brumaire (~quassel@37.171.89.175)
[14:39:50] *** Joins: cousteau (~cousteau@37.228.251.99)
[14:40:27] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[14:41:08] *** Joins: coot (~coot@37.30.48.28.nat.umts.dynamic.t-mobile.pl)
[14:42:49] <cousteau> Philosophical question: I am about to commit a change in which I'm wrapping a whole block of code inside a for/if/while loop.  The only "real" changes to the code are this extra layer of wrapping, and a small modification to one of the lines of the wrapped code.
[14:43:43] <cousteau> The thing is, if I add a block, I should indent everything one extra level, because I like to use a clean style
[14:44:43] <cousteau> But if I indent everything, git will see it as "all these lines have changed", when in reality only one of the lines has changed, and the rest have only changed their indentation level.
[14:46:01] <cousteau> Should I make a commit with the extra indentation, even if it looks like I changed everything?  Or should I not indent the code, only add the loop, and then use a separate commit only for the indentation?
[14:47:33] <mgedmin> cousteau: sometimes I extract the code that needs indenting into a helper function
[14:47:45] <cousteau> Hm
[14:47:46] <mgedmin> then the new for loop indents one one line: the call to the helper function
[14:47:50] <bremner> cousteau: fwiw, I would do the indentation when adding the loop. I know the rule about whitespace changes in their own commits, but I think the indentation is part of the change
[14:47:58] <cousteau> In fact I did consider that...
[14:48:11] *** Joins: NeoCron (~NeoCron@p200300c4cf195d00df9b3d9f9a455325.dip0.t-ipconnect.de)
[14:48:12] <bremner> cousteau: consider a code reviewer looking at your first commit, and wonder WTH is wrong with the indentation
[14:48:17] <cousteau> bremner: OK
[14:48:28] <cousteau> Yeah good point
[14:48:53] <cousteau> I can always set gitk or git diff to not bother me with the indentation
[14:48:57] <mgedmin> a reviewer can ask git diff to ignore whitespace changes
[14:49:04] <cousteau> Yep
[14:51:25] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 268 seconds)
[14:52:46] *** Joins: Anticom (~anticom@87.190.49.75)
[14:53:14] *** Quits: xcm (~xcm@user/xcm) (Remote host closed the connection)
[14:53:32] *** Joins: xcm (~xcm@user/xcm)
[14:54:21] *** Joins: travisghansen (~travisgha@192.74.130.86)
[15:00:03] *** Quits: jetchisel (~jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[15:01:08] <cousteau> If I'm also moving stuff inside that loop (it used to be "unrolled" outside the loop, with one line per index), should I do that on a separate commit?
[15:01:33] <cousteau> I guess my higher level question is, which granularity should my commits have?
[15:02:24] *** Joins: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438)
[15:02:31] <cousteau> Right now I tend to make commits in a "gitk-friendly" way, so that I can easily see the changes in code to make more sense of it, but I think that's too low level
[15:03:31] <cousteau> Maybe I should think more in terms of "everything needed for a single functionality change should go on its own commit", and include all pre and post refactoring inside the commit
[15:04:37] *** Joins: nx_ (~nitronix@5.29.23.150)
[15:07:03] *** Joins: jwillikers (~jwilliker@ics141-1.icsincorporated.com)
[15:07:16] *** Quits: nxs__ (~nitronix@88.198.206.243) (Ping timeout: 252 seconds)
[15:08:56] <rond_> Hi. How to drop all the uncommited work?
[15:09:03] *** Joins: Tomte (~th@p200300db9f1fd800ecab8cb99dfb1c87.dip0.t-ipconnect.de)
[15:09:07] <rudi_s> git reset --hard
[15:09:19] *** Quits: Tomte (~th@p200300db9f1fd800ecab8cb99dfb1c87.dip0.t-ipconnect.de) (Client Quit)
[15:09:32] <mgedmin> git stash, in case you realize you wanted it after all
[15:09:33] <rudi_s> This command permanently destroys all uncommitted work. So be careful with it!
[15:09:35] *** Joins: Tomte (~th@p200300db9f1fd800ecab8cb99dfb1c87.dip0.t-ipconnect.de)
[15:09:52] *** Joins: alkino (~quassel@user/alkino)
[15:10:06] <mgedmin> git checkout -q, with interactive verification of each hunk, just to be sure you're dropping what you think you're dropping
[15:10:20] <mgedmin> these are what I usually use
[15:10:34] *** Quits: Brumaire (~quassel@37.171.89.175) (Ping timeout: 252 seconds)
[15:10:50] <mgedmin> (checkout might not be what you want, if you have staged uncommitted work)
[15:10:53] *** Quits: cmbengue (~Thunderbi@207.191.249.160) (Quit: Thanks, see you later.)
[15:11:38] *** Quits: momomo (~momomo@user/momomo) (Ping timeout: 260 seconds)
[15:13:18] *** Joins: momomo (~momomo@user/momomo)
[15:13:21] *** Joins: pulse (~pulse@user/pulse)
[15:13:39] *** Quits: pulse (~pulse@user/pulse) (Remote host closed the connection)
[15:14:41] *** Joins: shored (~shored@user/shored)
[15:15:41] *** Quits: shored1 (~shored@user/shored) (Ping timeout: 246 seconds)
[15:17:34] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[15:18:44] *** Quits: momomo (~momomo@user/momomo) (Read error: Connection reset by peer)
[15:18:56] *** Joins: shored1 (~shored@user/shored)
[15:19:14] *** Joins: momomo (~momomo@user/momomo)
[15:19:19] *** Joins: hackinghorn (~hackingho@user/hackinghorn)
[15:19:55] *** Quits: tdaeayusr^ (~tdaeayusr@wsip-70-165-23-55.mc.at.cox.net) (Remote host closed the connection)
[15:20:02] *** Quits: shored (~shored@user/shored) (Ping timeout: 260 seconds)
[15:22:27] *** Joins: ThorMojito1 (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[15:22:54] *** Joins: Anticom (~anticom@87.190.49.75)
[15:24:36] <rond_> what about 'git clean -fdx'?
[15:25:58] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Ping timeout: 252 seconds)
[15:29:14] *** Joins: shored (~shored@user/shored)
[15:30:19] *** Quits: shored1 (~shored@user/shored) (Ping timeout: 250 seconds)
[15:30:44] <mgedmin> it'll remove untracked files, but won't discard changes in tracked files
[15:34:26] <rond_> thank you!
[15:35:03] <rond_> but `git reset --hard` doesn't remove untracked directories
[15:35:09] <rond_> so Should I use both commands?
[15:35:34] <mgedmin> if that's what you want to do, yes
[15:37:54] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:38:41] *** Quits: Quaack (~Quack@185.21.216.169) (Remote host closed the connection)
[15:38:50] *** Joins: Quack (~Quack@185.21.216.169)
[15:39:29] *** Quits: swistak (~swistak@185.21.216.141) (Ping timeout: 246 seconds)
[15:41:07] *** Joins: swistak (~swistak@185.21.216.141)
[15:46:22] <cousteau> git stash apply gave me a conflict.  After I fix the conflict, do I need to do anything else?
[15:46:58] <mgedmin> 'git add' the affected files
[15:47:09] *** Joins: nxs__ (~nitronix@88.198.206.243)
[15:47:09] <mgedmin> to tell git that you've resolved the conflict
[15:48:47] <cousteau> (basically I was in the middle of a big change, then found a bug affecting the code I was modifying, decided to commit the bug fix first, and then continue; the bugfix is also in the code I was modifying anyway)
[15:49:21] <cousteau> mgedmin: that'd be only if I had already added that file to the index previously, right?
[15:49:40] *** Quits: nx_ (~nitronix@5.29.23.150) (Ping timeout: 252 seconds)
[15:49:42] <cousteau> The changes hadn't been added to the index yet
[15:50:25] <mgedmin> no, the way git handles conflicts is ... basically there are multiple indexes/staging areas, and git puts different conflicting versions into them
[15:50:43] <mgedmin> so once you've resolved the conflict, you run git add and git removes the extra copies from the extra indexes
[15:50:53] <mgedmin> (you can view them with git show :1:filename.txt, :2:filename.txt etc)
[15:50:54] <cousteau> But this was in a git stash, not a git merge or anything
[15:51:09] <mgedmin> git stash pop/apply use the same conflict resolution mechanism
[15:52:02] <mgedmin> if you don't want the changes to stay in the index after resolution, you can git reset that file
[15:53:20] <cousteau> The changes weren't in the index before the git stash apply, and aren't in the index after the git stash apply
[15:53:32] *** Quits: hoochmonger (~hoochmong@user/hoochmonger) (Read error: Connection reset by peer)
[15:54:21] <cousteau> Uh... Actually, wait
[15:56:44] <cousteau> Yeah OK, so git status reports that the conflicting file was in a "dirty" (unmerged) state, and that non-conflicting files *that had not been staged yet* had been staged
[15:57:51] <cousteau> So I guess I have to git add the conflicting file, even if I don't want to add it yet, and then un-add that file plus any other files with git reset
[15:58:14] <cousteau> Will that leave git in a "clean" state again?
[15:59:18] <cousteau> (and next time, I'm just gonna backup the file, hard reset it, change and commit whatever I need, and restore the backup.  Screw git stash.)
[16:00:03] <mgedmin> yeah, git stash is very disappointing
[16:01:58] *** Quits: rahl (~rahl@102.114.153.206) (Ping timeout: 265 seconds)
[16:03:33] *** Joins: rahl (~rahl@102.114.162.39)
[16:04:16] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 245 seconds)
[16:06:17] *** Joins: lpapp (~lpapp@ec2-15-161-137-233.eu-south-1.compute.amazonaws.com)
[16:06:31] <lpapp> hi, if I want to have a branch off main and a development branch to combine the two, what is the best procedure?
[16:06:39] <lpapp> I guess I can just branch off from either and rebase on top of the other?
[16:06:50] <lpapp> e.g. git switch -C foo from the develop branch and then git rebase main?
[16:06:55] <lpapp> Or are there better practices for this?
[16:08:13] <furrymcgee> whats wrong with git checkout stash?
[16:10:00] *** Joins: vladoski (~vladoski@2001:b07:add:d406:9d04:3577:df5e:a883)
[16:10:16] *** Joins: shored1 (~shored@user/shored)
[16:10:31] *** Quits: shored (~shored@user/shored) (Ping timeout: 252 seconds)
[16:11:32] <cousteau> lpapp:  Not sure what you want to do exactly.  I usually have a master/main branch, a devel branch which is ahead of master, and "feature branches" that were branched off devel.  Then I merge the feature branches into devel (with --no-ff) when they're done, test devel, and if it works then fast-forward master to devel
[16:12:43] <cousteau> That way master is always following devel, but the latest development code is in devel, whereas master is like a "stable" version of devel
[16:12:48] *** Quits: eggbean (~eggbean@user/eggbean) (Quit: WeeChat 3.2)
[16:13:08] <lpapp> yeah, I am not doing that
[16:13:14] <lpapp> I am doing something custom here, not generic :)
[16:13:20] <cousteau> furrymcgee: was that for lpapp or me?
[16:13:36] <lpapp> there is a developer who worked on a branch for a long time, and I need to get a branch which is a mix of that and main
[16:14:33] <cousteau> Oh.  Well, I'd branch from main and merge their branch, or checkout their branch and merge main
[16:17:01] <cousteau> I think ideally you should be merging main periodically so that your feature branch doesn't get outdated and hard to merge.  So I think that checking out their branch and merging main would make sense.
[16:18:26] *** Quits: spare (~gzxsdvs3n@user/spareproject) (Remote host closed the connection)
[16:18:56] *** Joins: shored (~shored@user/shored)
[16:19:14] <cousteau> Then maybe add some commits on top of the merge to fix all the conflicts and regressions, and eventually merge that into main.
[16:19:17] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 250 seconds)
[16:19:55] *** Quits: shored1 (~shored@user/shored) (Ping timeout: 252 seconds)
[16:20:43] *** Joins: pulse (~pulse@user/pulse)
[16:21:01] *** Joins: cdown (~cdown@163.114.131.1)
[16:21:06] <cousteau> Personally I prefer that to rebasing.  I kind of prefer to keep the commit history as is.
[16:22:03] <cousteau> I don't know what's considered best practice, but that's what would scare ME the least
[16:23:10] *** Joins: ravan_ (~ravan@user/ravan)
[16:25:39] *** Joins: TomyWork (~TomyLobo@p200300e80f06af009ddae32ced1d3aee.dip0.t-ipconnect.de)
[16:25:47] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 250 seconds)
[16:26:13] <cousteau> `git diff stash@{0}` yields nothing.  That means I've successfully left everything as it was before the stash and I can drop it, right?
[16:27:42] <TomyWork> is there a way to attach some information to an existing commit in my local repo?
[16:28:11] <mgedmin> git help notes
[16:30:13] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[16:31:00] *** Quits: bkircher (~bkircher@2001:a61:25b1:b301:38c4:d8e7:23b0:bde5) (Quit: WeeChat 3.2)
[16:32:31] <lpapp> is it possible to know which branch another branch was branched off from?
[16:32:46] *** Joins: shored1 (~shored@user/shored)
[16:33:23] *** Quits: shored (~shored@user/shored) (Ping timeout: 265 seconds)
[16:34:45] *** Joins: gordonfish- (~gordonfis@user/gordonfish)
[16:35:37] *** Joins: Anticom (~anticom@87.190.49.75)
[16:37:11] *** Quits: gordonfish (~gordonfis@user/gordonfish) (Ping timeout: 245 seconds)
[16:40:13] *** Quits: Anticom (~anticom@87.190.49.75) (Ping timeout: 252 seconds)
[16:40:16] <Timvde> cousteau: and what is deployed? Your main branch?
[16:41:08] <Timvde> I very much prefer rebasing over multiple merges
[16:41:09] *** Quits: enoq (~enoq@2a05:1141:1f5:5600:b9c9:721a:599:bfe7) (Quit: enoq)
[16:41:14] <Timvde> I rebase to clean up my history anyway
[16:41:28] *** Joins: fef (~thedawn@user/thedawn)
[16:41:41] <Timvde> I also think that rebase conflicts are, even though a bit more common, also usually more straight-forward to solve
[16:42:20] <Timvde> And nothing is as awful as finding a bug, tracking back its history, and finding a large merge commit with no extra context
[16:43:32] *** Joins: shored (~shored@user/shored)
[16:44:04] *** Quits: shored1 (~shored@user/shored) (Ping timeout: 252 seconds)
[16:44:55] *** Quits: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net) (Quit: Leaving)
[16:47:07] *** Joins: Anticom (~anticom@87.190.49.75)
[16:47:12] *** Joins: node1 (~node1@user/node1)
[16:48:52] *** Joins: jetchisel (jetchisel@user/jetchisel)
[16:50:11] *** Joins: shored1 (~shored@user/shored)
[16:50:55] *** Quits: shored (~shored@user/shored) (Ping timeout: 265 seconds)
[17:03:22] *** Quits: shored1 (~shored@user/shored) (Ping timeout: 252 seconds)
[17:08:28] *** Joins: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca)
[17:08:42] <cousteau> lpapp: I think you can get that sort of info from git reflog
[17:09:59] *** Quits: ThorMojito1 (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Ping timeout: 250 seconds)
[17:10:16] <cousteau> But keep in mind that branches don't really "stem from other branches" as in other SCM software, so you cannot say "branch X branches off branch Y"
[17:10:57] <cousteau> (only that it was branched from branch Y, historically, although the git graph doesn't care about that)
[17:14:35] *** Joins: prime (~prime@user/prime)
[17:15:02] *** Joins: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net)
[17:17:43] *** Quits: rond_ (~rond_@2a02:a31a:a23c:f480:2fd7:e087:5546:a438) (Quit: Client closed)
[17:18:06] *** Quits: Portugol9 (~Portugol9@user/portugol9) (Read error: Connection reset by peer)
[17:23:59] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[17:33:53] *** Joins: cmbengue (~Thunderbi@207.191.249.160)
[17:39:37] *** Quits: travisghansen (~travisgha@192.74.130.86) (Ping timeout: 252 seconds)
[17:39:43] *** Joins: sudoforge (~sudoforge@wireguard/tunneler/sudoforge)
[17:42:51] *** Joins: travisghansen (~travisgha@192.74.130.86)
[17:43:08] *** Quits: makara_ (~makara@196.214.171.83) (Quit: ZNC 1.8.2 - https://znc.in)
[17:43:08] *** Quits: makara (~makara@196.214.171.83) (Quit: ZNC 1.8.2 - https://znc.in)
[17:43:28] *** Joins: makara (~makara@196.214.171.83)
[17:43:35] *** Joins: subopt (~subopt@2603-8081-2302-459a-e428-389a-706c-5538.res6.spectrum.com)
[17:43:38] *** subopt is now known as _subopt
[17:43:59] *** Joins: makara1 (~makara@196.214.171.83)
[17:44:00] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[17:44:12] *** Joins: arcatech (~arcatech@user/arcatech)
[17:47:33] *** Joins: Anticom (~anticom@87.190.49.75)
[17:48:40] *** Joins: lgc (~lgc@user/lgc)
[17:53:05] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[17:55:31] *** Quits: reset (~reset@user/reset) (Ping timeout: 245 seconds)
[17:56:14] *** Joins: Guest98 (~Guest98@vpn.intern.mp)
[17:59:11] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[18:00:20] *** Quits: fef (~thedawn@user/thedawn) (Remote host closed the connection)
[18:01:33] <Guest98> hello there. I have a branch A and a branch B which was derived from A months ago. A has diverged a lot due to rebases. Now B shall be rebased onto A again to get all the changes. `git-rebase` does not seems to be capable of doing this (because it keeps deprecated commits), so can I somehow create a new branch based on A but "cherry-pick" a range
[18:01:33] <Guest98> of commits from B?
[18:03:49] *** Joins: defjam (~eb0t@90.213.43.87)
[18:12:02] *** Quits: vladoski (~vladoski@2001:b07:add:d406:9d04:3577:df5e:a883) (Quit: Textual IRC Client: www.textualapp.com)
[18:13:39] *** Joins: ChemicalRascal (~ChemicalR@14-202-44-48.tpgi.com.au)
[18:14:04] *** Quits: ChemicalRascal (~ChemicalR@14-202-44-48.tpgi.com.au) (Client Quit)
[18:14:28] *** Joins: ChemicalRascal (~ChemicalR@14-202-44-48.tpgi.com.au)
[18:15:17] <furrymcgee> deprecated commits?
[18:16:22] *** Quits: coot (~coot@37.30.48.28.nat.umts.dynamic.t-mobile.pl) (Quit: coot)
[18:18:16] *** Joins: jmd (~user@de.cellform.com)
[18:18:46] *** Joins: Anticom (~anticom@87.190.49.75)
[18:20:34] *** _subopt is now known as subopt
[18:20:44] <cousteau> I thought that cherry-picking a lot of commits was what rebase was for
[18:21:14] <jmd> cousteau: Only if those commits haben to be consecutive in a branch.
[18:21:25] <jmd> /haben/happen
[18:21:34] *** Quits: af (~af@awalgarg.me) (Ping timeout: 260 seconds)
[18:22:15] *** Joins: TJ- (~root@2a01:7e00:e001:ee00:fa75:a4ff:fef3:42b4)
[18:22:16] <cousteau> Yeah that.  But if I understood correctly that's Guest98's case, right?
[18:22:24] <Timvde> I'd still use interactive rebase and remove the commits I don't want
[18:22:25] <jmd> I dunno
[18:23:12] <jmd> The good thing about Git, is that there is more than one way to kill a cat!
[18:23:45] *** Joins: bloody (~bloody@user/bloody)
[18:26:05] *** Joins: hbautista__ (~hbautista@2806:10a6:e:6ae3::4)
[18:26:30] *** Joins: thiago (~thiago@2601:1c0:4501:635c:9850:18f2:371d:f0e)
[18:27:17] *** Joins: af (~af@awalgarg.me)
[18:28:29] *** Joins: coot (~coot@37.30.48.28.nat.umts.dynamic.t-mobile.pl)
[18:34:30] <cousteau> jmd: I thought it was "to skin a cat"
[18:34:49] <cousteau> (also, what has the poor cat done to you?) :(
[18:38:30] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[18:38:37] *** Quits: thiago (~thiago@2601:1c0:4501:635c:9850:18f2:371d:f0e) (Quit: Reconnecting)
[18:38:44] *** Joins: thiago (~thiago@2601:1c0:4501:635c:9850:18f2:371d:f0e)
[18:38:46] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[18:40:07] *** Quits: audiocat (~audio@cpe-24-27-99-134.tx.res.rr.com) (Ping timeout: 252 seconds)
[18:40:44] *** Joins: natrys (~natrys@user/natrys)
[18:44:31] *** Quits: nxs__ (~nitronix@88.198.206.243) (Ping timeout: 252 seconds)
[18:47:52] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[18:50:53] *** Joins: Anticom (~anticom@87.190.49.75)
[18:52:18] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[18:52:45] *** Quits: R2robot (~R2robot@user/r2robot) (Ping timeout: 268 seconds)
[18:54:29] *** Joins: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com)
[18:55:07] *** Joins: R2robot (~R2robot@user/r2robot)
[18:58:39] *** Joins: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac)
[19:02:52] *** Quits: Guest98 (~Guest98@vpn.intern.mp) (Ping timeout: 256 seconds)
[19:03:09] *** gordonfish- is now known as gordonfish
[19:03:53] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[19:06:21] *** Joins: igemnace (~ian@user/igemnace)
[19:14:12] *** Joins: Null_A (~null_a@2601:645:8700:2290:cca9:9e4e:f1d8:3489)
[19:16:25] *** Joins: rgrinberg (~textual@ip235-44-15-186.ct.co.cr)
[19:16:25] *** Quits: defjam (~eb0t@90.213.43.87) (Ping timeout: 252 seconds)
[19:17:22] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[19:18:06] *** Joins: defjam (~eb0t@90.213.43.87)
[19:22:55] *** Joins: forgotmynick (uid24625@id-24625.hampstead.irccloud.com)
[19:23:20] *** Quits: cousteau (~cousteau@37.228.251.99) (Quit: Quit)
[19:31:27] *** Quits: alkino (~quassel@user/alkino) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[19:33:30] *** Joins: spare (~gzxsdvs3n@user/spareproject)
[19:33:31] *** Quits: Anticom (~anticom@87.190.49.75) (Remote host closed the connection)
[19:36:16] *** Joins: Anticom (~anticom@87.190.49.75)
[19:36:22] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[19:37:59] *** Quits: Anticom (~anticom@87.190.49.75) (Client Quit)
[19:40:38] *** Joins: Guest3183 (~paradoxi@ip68-229-56-193.lv.lv.cox.net)
[19:40:58] *** Quits: coot (~coot@37.30.48.28.nat.umts.dynamic.t-mobile.pl) (Quit: coot)
[19:42:50] *** Joins: coot (~coot@37.30.48.28.nat.umts.dynamic.t-mobile.pl)
[19:43:33] <jmd> How can I pull ALL branches at once?
[19:45:26] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[19:50:31] *** Quits: srinidhi (~srinidhi@49.206.4.186) (Ping timeout: 252 seconds)
[19:50:52] *** Quits: rfuentess (~rfuentess@static-5-51-117-151.ftth.abo.bbox.fr) (Remote host closed the connection)
[19:51:00] *** Quits: Guest3183 (~paradoxi@ip68-229-56-193.lv.lv.cox.net) (Quit: Guest3183)
[19:53:00] *** Joins: paradoxi (~paradoxi@ip68-229-56-193.lv.lv.cox.net)
[19:53:29] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-228.sw.biz.rr.com) (Ping timeout: 265 seconds)
[19:58:00] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[20:01:34] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 252 seconds)
[20:05:33] *** Joins: dsrt^ (~dsrt@wsip-70-165-23-55.mc.at.cox.net)
[20:08:16] <TomyWork> git diff --no-index shows symlink as the linked file name. how can i tell it not to?
[20:08:27] <TomyWork> I'm trying to use its excellent word-diff
[20:08:31] *** Joins: ChmEarl (~chmearl@user/chmearl)
[20:08:38] <TomyWork> for non-version-control-purposes
[20:09:01] *** Joins: mrcrypto (uid521271@id-521271.helmsley.irccloud.com)
[20:09:28] <TomyWork> jmd, read the documentation of the "--mirror" option *carefully*
[20:09:57] *** Joins: FemmeAndroid (~textual@72-50-208-37.fttp.usinternet.com)
[20:10:02] <TomyWork> jmd, that's git fetch, not git pull
[20:10:29] <TomyWork> actually it's neither of these, it's git push
[20:11:43] <TomyWork> anyway, there's "git clone --mirror", too. maybe that's what you want, maybe not
[20:12:46] *** Joins: rmoat (~rmoat@204.131.94.50)
[20:14:00] *** Joins: rsx (~dummy@ppp-188-174-132-206.dynamic.mnet-online.de)
[20:16:31] *** Quits: rmoat (~rmoat@204.131.94.50) (Client Quit)
[20:16:37] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Quit: FinnElija)
[20:16:51] <j416> jmd: if by pull, you mean fetch, "git fetch" will do just that.
[20:16:57] *** Quits: zoorat (~zoorat@gateway/tor-sasl/zoorat) (Ping timeout: 276 seconds)
[20:17:09] <j416> jmd: if you have multiple remotes, you can use "git fetch --all" to fetch from all of them
[20:17:15] *** Quits: FemmeAndroid (~textual@72-50-208-37.fttp.usinternet.com) (Quit: Textual IRC Client: www.textualapp.com)
[20:18:03] *** Joins: FemmeAndroid (~textual@72-50-208-37.fttp.usinternet.com)
[20:19:11] <jmd> j416: I have just one remote.  Will "git fetch" fetch all branches?
[20:19:24] <j416> jmd: unless you have configued it not to, yes.
[20:19:34] <jmd> okay
[20:20:20] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[20:20:27] <j416> jmd: pull is a shorthand for fetch + merge
[20:29:25] *** Joins: audiocat (~audio@2603-8081-1800-1546-4f95-adb2-1cba-e9e9.res6.spectrum.com)
[20:30:48] *** Joins: Soni (~quassel@autistic.space)
[20:31:06] *** Quits: durham (~durham@2600:1700:38d4:60:c3c:5bfc:8cac:a0ac) (Remote host closed the connection)
[20:31:42] *** Joins: durham (~durham@2620:10d:c090:400::5:9cf8)
[20:32:29] *** Joins: emf (~emf@2620:10d:c090:400::5:a45e)
[20:32:29] *** Quits: durham (~durham@2620:10d:c090:400::5:9cf8) (Read error: Connection reset by peer)
[20:32:37] <jmd> Merge causes soooo many problems.  I have never understood why --rebase isn't the default for git pull.
[20:34:48] *** Joins: durham (~durham@2620:10d:c090:400::5:9cf8)
[20:34:53] *** Quits: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net) (Ping timeout: 264 seconds)
[20:35:05] *** Joins: fxrs (~fxrs@192.227.212.130)
[20:35:16] *** Quits: fxrs_ (~fxrs@192.227.212.130) (Ping timeout: 250 seconds)
[20:35:31] *** Joins: unluckyshrubbery (~unluckysh@45-19-33-188.lightspeed.livnmi.sbcglobal.net)
[20:35:42] *** Quits: mfiano (~mfiano@li1282-157.members.linode.com) (Ping timeout: 250 seconds)
[20:36:08] *** Quits: dzho (~dzho@user/dzho) (Ping timeout: 268 seconds)
[20:36:29] <jmd> j416: After running git fetch, I see only "master" when I do "git branch".  So it would seem that your expectation is not correct.
[20:36:45] *** Quits: bleb (~cm@user/bleb) (Ping timeout: 268 seconds)
[20:36:54] *** Joins: bleb (~cm@user/bleb)
[20:37:17] *** Joins: mfiano (~mfiano@li1282-157.members.linode.com)
[20:37:30] *** Joins: dzho (~dzho@tsuga.etrumeus.com)
[20:38:31] *** Quits: Murr (~Murr@212-51-143-52.fiber7.init7.net) (Remote host closed the connection)
[20:38:51] *** Joins: Murr (~Murr@212-51-143-52.fiber7.init7.net)
[20:39:27] *** Joins: pyeverything (~pyeveryth@204.8.153.35)
[20:40:53] *** Joins: speckz (~speckz@2600:1700:ce0:bf00:c88b:3595:b202:9976)
[20:41:58] <TomyWork> jmd, the default for pull is merge, because merge doesn't orphan any commits
[20:42:22] *** Joins: BenjiProd (~BenjiProd@user/benjiprod)
[20:42:23] <TomyWork> but probably mainly because it's Linus' workflow :D
[20:42:43] <jmd> TomyWork: I'm not sure what you mean by "orphan commits"
[20:44:55] <TomyWork> jmd, remote has A-B-C, local has A-B-D. You run git pull --rebase, now local has A-B-C-D2, with D2 being the rebased version of D. Quiz question for you (the experts shush): What happens to D?
[20:45:27] <shush> Someone say my name?
[20:45:32] <TomyWork> shit
[20:51:03] *** Joins: jazzy (~jaziz@user/jaziz)
[20:51:05] <TomyWork> jmd?
[20:53:16] *** Joins: frm (~frm@user/frm)
[20:56:16] <jmd> Aren't D2 and D identical?
[20:56:58] *** Quits: jonosterman (~Rheanna@123.158.85.177) (Ping timeout: 260 seconds)
[20:57:49] *** Quits: rsx (~dummy@ppp-188-174-132-206.dynamic.mnet-online.de) (Quit: rsx)
[20:58:04] <TomyWork> they apply the same change (if they rebased cleanly), but they're not identical
[20:58:35] <jmd> Yeah.  I meant that the change (diff) is identical.
[20:59:27] <TomyWork> but a commit isn't just a diff. a commit's identity is determined by the following factors: author/committer date/name, commit message, all the files and directories
[20:59:55] <TomyWork> and last but definitely not least: its previous commit's ID
[21:00:38] <jmd> I'm not sure that I would consider the "previous commit" to be part of a commit's identity.
[21:00:56] <TomyWork> what you would consider is irrelevant, though :)
[21:01:00] <TomyWork> it is what it is
[21:01:20] <jmd> Oh so what you consider is relevant is it?
[21:01:25] *** Joins: reset (~reset@user/reset)
[21:01:57] *** Quits: dzho (~dzho@tsuga.etrumeus.com) (Changing host)
[21:01:57] *** Joins: dzho (~dzho@user/dzho)
[21:02:18] <TomyWork> no
[21:02:29] <TomyWork> run "git cat-file commit <any commit hash>"
[21:02:34] <TomyWork> and you'll see
[21:03:28] <TomyWork> that is the commit object. the barebones representation of what a commit is in git
[21:04:10] <TomyWork> if 2 commits match in all of these values, they hash to the same ID
[21:04:26] <jmd> I see.
[21:04:43] <mackerman> Refrencing the parent in a commit makes changing history obvious.
[21:05:26] <jmd> But anyway 99 times out of 100  rebase is prefereable to merge so it would make ssense for it to be the default.
[21:05:44] <mackerman> I would change such a default.
[21:06:18] *** Quits: saroy (~Sandipan@45.249.73.218) (Ping timeout: 260 seconds)
[21:06:27] <TomyWork> jmd, you can make it the default on your client, you know
[21:07:31] <TomyWork> I think it was "git config --global pull.rebase true"
[21:08:01] <jmd> Yeah.  I used to do that, but sooner or later, you find yourself working on another machine, or on another user's client and you forget.  So it's better just to train youself to type "git pull --rebase" ... and to continually submit bugs to the git developers to get this changed.
[21:08:08] <TomyWork> jmd, got an answer to my quiz question btw?
[21:09:08] <jmd> TomyWork: The question is kinda moot, because D is (in all practical respects) identical to D2
[21:09:26] <TomyWork> so you don't get how git works
[21:10:12] <jmd> If anyone ever understood how it works, it would instantly disappear and be replaced by something even more incomprehensible.
[21:10:57] *** Quits: pyeverything (~pyeveryth@204.8.153.35) (Read error: Connection reset by peer)
[21:11:03] <TomyWork> git, at its core, tracks objects. any git object has an ID. That ID is equal to the object's contents hashed with SHA-1.
[21:11:11] *** Joins: pyeverything (~pyeveryth@BUMC-dot1x-155-41-185-202.bumc.bu.edu)
[21:12:06] <TomyWork> basically what the cat-file command showed you earlier (or rather, a less pretty version of it), hashed with SHA-1, is the commit ID
[21:13:24] <TomyWork> if you know anything about hash functions like SHA-1, it is that if you change some part of the object (like the parent ID), the commit object will have a new ID
[21:14:26] <TomyWork> it's basically blockchain, except it's actually smart and not just a runaway PoC that turned into a scam that ruins the climate
[21:14:50] *** Quits: speckz (~speckz@2600:1700:ce0:bf00:c88b:3595:b202:9976) (Quit: Textual IRC Client: www.textualapp.com)
[21:14:54] <TomyWork> (disclaimer: it's not actually blockchain)
[21:15:05] <TomyWork> don't @ me
[21:15:25] <slaughter> Is there a way to interactively revert? I've got a commit with changes to about 50 files and I'd like to revert about 45 of them but not the rest and I'm feeling pretty dumb
[21:15:41] <TomyWork> slaughter, git reset/checkout -p
[21:15:57] <TomyWork> the reset variant only affects the index, checkout also affects the worktree
[21:16:21] <slaughter> checkout -p is exactly what I needed! Thanks!
[21:18:04] <slaughter> `[y,n,q,a,d,K,j,J,g,/,e,?]?` - what a set of options, and no explation - man page doesn't help. Any guesses as to which ones are "apply all in file" and "don't apply all in file"?
[21:18:35] *** Quits: hackinghorn (~hackingho@user/hackinghorn) (Quit: Leaving)
[21:18:51] *** Quits: Tobbi_ (~Thunderbi@62.214.69.130) (Quit: Tobbi_)
[21:18:57] <TomyWork> jmd, basically git is a directed acyclic graph which can be cloned to another machine. cryptography ensures that the history can't be falsified even in a highly distributed setting
[21:19:09] <slaughter> Guessed a for all and d for none and I think it's right /shrug
[21:19:23] <TomyWork> slaughter, it is
[21:19:28] <TomyWork> guess what "?" is for
[21:19:35] <slaughter> Thanks :) Appreciate the help
[21:20:58] <TomyWork> back in a few mins
[21:21:02] *** Quits: TomyWork (~TomyLobo@p200300e80f06af009ddae32ced1d3aee.dip0.t-ipconnect.de) (Remote host closed the connection)
[21:21:37] <slaughter> Actually, other way around, apparently. I just got all the things I didn't want/removed all the things I did
[21:22:53] *** Quits: rgrinberg (~textual@ip235-44-15-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[21:23:02] *** Joins: TomyLobo (~TomyLobo@p200300e80f06af0005306b271595d81b.dip0.t-ipconnect.de)
[21:23:56] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[21:24:06] <TomyLobo> back
[21:24:25] <TomyLobo> jmd, if you wanna know more about this stuff, just ask
[21:24:52] *** Joins: eggbean_ (~eggbean@user/eggbean)
[21:25:25] <TomyLobo> I just noticed that the topic was recently changed to "Welcome to #git, we like graphs". If you wondered what Git had to do with graphs, now you know :)
[21:25:53] <slaughter> Ah ok I just looked at it backwards, those are the right commands but it's applying the revert commit to the current commit, not the other way around. Really having a morning here
[21:25:57] *** eggbean_ is now known as eggbean
[21:27:07] *** Quits: frm (~frm@user/frm) (Quit: Textual IRC Client: www.textualapp.com)
[21:27:56] <TomyLobo> slaughter, "git checkout -P [<commit-ish>]" (where <commit-ish> defaults to HEAD) rolls your current worktree all the way back to that state if you spam "a"
[21:28:02] <TomyLobo> sorry -p
[21:29:54] <slaughter> Yeah I was just going at it the other way like a doofus, despite all the red in my terminal. That makes perfect sense
[21:30:15] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fafc-123.dhcp.inet.fi)
[21:31:13] *** Quits: seand (~seand@69.54.142.196) (Remote host closed the connection)
[21:35:47] <j416> jmd: git branch -r
[21:36:58] *** Quits: coot (~coot@37.30.48.28.nat.umts.dynamic.t-mobile.pl) (Quit: coot)
[21:37:28] *** Joins: node1 (~node1@user/node1)
[21:38:42] *** Quits: zumba_addict (~zumba_add@c-71-194-58-34.hsd1.il.comcast.net) (Quit: Client closed)
[21:41:03] <jmd> j416: Thanks
[21:42:04] *** Quits: durham (~durham@2620:10d:c090:400::5:9cf8) (Read error: Connection reset by peer)
[21:42:10] *** Joins: durham_ (~durham@2620:10d:c090:400::5:9cf8)
[21:42:32] *** Joins: meator (~meator@user/meator)
[21:43:11] *** Quits: pyeverything (~pyeveryth@BUMC-dot1x-155-41-185-202.bumc.bu.edu) (Remote host closed the connection)
[21:46:00] *** Joins: DoofusCanadensis (~DoofusCan@207.229.38.10)
[21:50:13] *** Joins: masber (~masber@213.55.224.56)
[21:52:59] *** Quits: furrymcgee (~devuan@cgn-89-1-209-32.nc.de) (Quit: leaving)
[21:53:45] *** Joins: pyeveryt_ (~pyeveryth@204.8.153.35)
[21:56:51] *** Quits: spare (~gzxsdvs3n@user/spareproject) (Remote host closed the connection)
[21:57:17] *** Joins: spare (~gzxsdvs3n@user/spareproject)
[21:58:10] *** Quits: pyeveryt_ (~pyeveryth@204.8.153.35) (Ping timeout: 252 seconds)
[21:59:01] *** Joins: masber1 (~masber@vpn-98.cscs.ch)
[21:59:17] *** Joins: nxs__ (~nitronix@5.29.23.150)
[22:00:14] *** Quits: masber (~masber@213.55.224.56) (Ping timeout: 256 seconds)
[22:04:08] *** Quits: LuxuryMode (uid91005@id-91005.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[22:04:38] *** Quits: audiocat (~audio@2603-8081-1800-1546-4f95-adb2-1cba-e9e9.res6.spectrum.com) (Ping timeout: 260 seconds)
[22:05:16] *** Joins: nx_ (~nitronix@88.198.206.243)
[22:05:54] *** Quits: masber1 (~masber@vpn-98.cscs.ch) (Ping timeout: 256 seconds)
[22:07:36] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Ping timeout: 245 seconds)
[22:08:20] *** Quits: nxs__ (~nitronix@5.29.23.150) (Ping timeout: 265 seconds)
[22:09:59] *** Joins: Nspace (~Nspace@user/nspace)
[22:11:51] *** Quits: paradoxi (~paradoxi@ip68-229-56-193.lv.lv.cox.net) (Quit: paradoxi)
[22:13:05] *** Joins: rgrinberg (~textual@ip235-44-15-186.ct.co.cr)
[22:14:01] *** Joins: pyeverything (~pyeveryth@204.8.153.35)
[22:14:37] *** Quits: natrys (~natrys@user/natrys) (Ping timeout: 250 seconds)
[22:15:52] *** Quits: Tomte (~th@p200300db9f1fd800ecab8cb99dfb1c87.dip0.t-ipconnect.de) (Quit: Leaving)
[22:17:16] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[22:17:40] *** Quits: Thanatermesis (~Thanaterm@191.92.148.122) (Remote host closed the connection)
[22:18:13] *** Quits: node1 (~node1@user/node1) (Quit: Leaving)
[22:18:29] *** Quits: pyeverything (~pyeveryth@204.8.153.35) (Ping timeout: 265 seconds)
[22:23:59] *** Joins: coot (~coot@37.30.48.28.nat.umts.dynamic.t-mobile.pl)
[22:25:43] *** Joins: jimklimov1 (~jimklimov@ip-86-49-251-117.net.upcbroadband.cz)
[22:25:48] *** Quits: mrcrypto (uid521271@id-521271.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[22:26:39] *** Joins: node1 (~node1@user/node1)
[22:26:43] *** Quits: jimklimov (~jimklimov@ip-86-49-251-117.net.upcbroadband.cz) (Ping timeout: 252 seconds)
[22:27:56] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[22:34:18] *** Joins: node1 (~node1@user/node1)
[22:35:09] *** Joins: jonosterman (~Rheanna@123.158.85.213)
[22:35:24] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[22:36:21] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 245 seconds)
[22:36:59] *** Joins: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net)
[22:38:24] *** Joins: a6a45081-2b83 (~aditya@2601:249:4300:1296:88ec:cc73:84d4:1507)
[22:38:38] *** Quits: node1 (~node1@user/node1) (Client Quit)
[22:39:01] *** Joins: node1 (~node1@user/node1)
[22:40:30] *** Quits: node1 (~node1@user/node1) (Remote host closed the connection)
[22:45:32] *** Quits: DoofusCanadensis (~DoofusCan@207.229.38.10) (Quit: So as you can see from this flowchSQUIRREL!!)
[22:47:54] *** Joins: natrys (~natrys@user/natrys)
[22:48:16] *** Joins: ZacSharp (~ZacSharp@user/zacsharp)
[22:50:26] *** Joins: srinidhi (~srinidhi@49.206.4.186)
[22:53:10] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[22:54:47] *** Joins: pulse (~pulse@user/pulse)
[22:56:32] *** Joins: ChemicalRascal_ (~ChemicalR@14-202-44-48.tpgi.com.au)
[22:59:43] *** Quits: ChemicalRascal (~ChemicalR@14-202-44-48.tpgi.com.au) (Ping timeout: 252 seconds)
[23:01:15] *** Quits: FFY00_ (~FFY00@archlinux/trusteduser/ffy00) (Read error: Connection reset by peer)
[23:01:31] *** Joins: FFY00_ (~FFY00@archlinux/trusteduser/ffy00)
[23:05:19] *** Quits: dayday (uid520582@id-520582.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[23:06:37] *** Quits: dsrt^ (~dsrt@wsip-70-165-23-55.mc.at.cox.net) (Ping timeout: 250 seconds)
[23:07:58] *** Quits: john_johnk (~Thunderbi@112.54.140.77.rev.sfr.net) (Ping timeout: 252 seconds)
[23:07:58] *** Quits: jmd (~user@de.cellform.com) (Ping timeout: 252 seconds)
[23:13:55] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[23:14:16] *** Joins: Nspace (~Nspace@user/nspace)
[23:18:01] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[23:22:10] *** Quits: Nspace (~Nspace@user/nspace) (Quit: Nspace)
[23:22:38] *** Quits: ThorMojito (~Adium@modemcable212.77-202-24.mc.videotron.ca) (Quit: Leaving.)
[23:27:06] *** Joins: irrgit (~irrgit@192.241.175.183)
[23:28:51] *** Quits: forgotmynick (uid24625@id-24625.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[23:29:43] *** Quits: meator (~meator@user/meator) (Quit: Leaving)
[23:30:09] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 265 seconds)
[23:32:48] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[23:36:08] *** Joins: pyeveryt_ (~pyeveryth@204.8.153.35)
[23:36:37] *** Quits: spare (~gzxsdvs3n@user/spareproject) (Remote host closed the connection)
[23:36:54] *** Joins: pyevery__ (~pyeveryth@BUMC-dot1x-155-41-185-202.bumc.bu.edu)
[23:40:28] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 252 seconds)
[23:40:39] *** Quits: pyeveryt_ (~pyeveryth@204.8.153.35) (Ping timeout: 265 seconds)
[23:41:01] *** Quits: makara (~makara@196.214.171.83) (Ping timeout: 252 seconds)
[23:41:31] *** Quits: makara1 (~makara@196.214.171.83) (Ping timeout: 252 seconds)
[23:41:56] *** Joins: makara (~makara@196.214.171.83)
[23:42:16] *** Joins: jetchisel (jetchisel@user/jetchisel)
[23:42:27] *** Joins: makara_ (~makara@196.214.171.83)
[23:44:11] *** Joins: jazzy (~jaziz@user/jaziz)
[23:46:32] *** jazzy is now known as jazz-o-lantern
[23:50:07] *** Joins: unlaudable (~unlaudabl@155.93.175.230)
[23:52:06] *** Quits: rgrinberg (~textual@ip235-44-15-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[23:53:02] *** Joins: shored (~shored@user/shored)
[23:53:13] *** Joins: rgrinberg (~textual@ip235-44-15-186.ct.co.cr)
[23:53:27] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[23:53:41] *** Quits: keypusher (keypusher@user/keypusher) (Ping timeout: 268 seconds)
[23:56:30] *** Joins: keypusher (keypusher@user/keypusher)
