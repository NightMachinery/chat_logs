[00:00:19] <omegatron> it's just a snippet of code, geez
[00:00:46] <omegatron> if anyone wants to do goofy stuff by using dlopen(), why stop them?
[00:01:22] *** Quits: Alhazred (~Alhazred@ool-18b829c5.dyn.optonline.net) (Ping timeout: 260 seconds)
[00:02:18] *** Quits: Yaknoti5 (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net) (Ping timeout: 260 seconds)
[00:02:31] *** de-facto_ is now known as de-facto
[00:08:13] *** Joins: vin (~vin@user/crash)
[00:10:25] *** Joins: Betal (~Betal@user/betal)
[00:13:56] *** Quits: CaryHartline (~CaryHartl@cpe-76-185-112-162.tx.res.rr.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[00:16:45] *** Joins: sharkee (~sharkee@5.253.207.196)
[00:16:46] *** Quits: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net) (Remote host closed the connection)
[00:17:11] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[00:17:40] *** Joins: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net)
[00:19:03] *** Quits: PublicWifi (~PublicWiF@user/publicwifi) (Quit: WeeChat 3.0)
[00:19:04] *** Joins: Macuser (~Macuser@216.30.159.201)
[00:19:06] *** Quits: kurahaupo (~kurahaupo@pa49-179-226-170.pa.nsw.optusnet.com.au) (Ping timeout: 260 seconds)
[00:19:25] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[00:20:28] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[00:21:09] *** Quits: phao (~phao@2804:d45:8e7a:de00:e925:eac1:2570:e793) (Quit: Leaving)
[00:22:22] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[00:27:17] *** Quits: Laurenceb (~Laurenceb@62.207.208.46.dyn.plus.net) (Quit: Client closed)
[00:32:51] *** Quits: tiotags (~tiotags@user/tiotags) (Quit: Leaving)
[00:34:15] *** Joins: f1refly (~f1refly@p4fc47ea6.dip0.t-ipconnect.de)
[00:37:40] *** Joins: almaember (~almaember@178-164-219-221.pool.digikabel.hu)
[00:42:18] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[00:42:32] *** Joins: Crescendo (~Crescendo@user/crescendo)
[00:47:19] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[00:47:50] *** Joins: rgrinberg (~textual@ip152-195-159-186.ct.co.cr)
[00:53:04] *** Quits: Narrat (~omnius@p200300df5f0ec4d206ea56fffe2e7cdc.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[00:54:10] *** Quits: Akuli (~Akuli@87-94-111-26.bb.dnainternet.fi) (Quit: Leaving)
[00:54:27] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[00:55:05] *** Joins: Geo (vanosg@user/geo)
[00:56:15] *** Quits: raj (uid72176@user/raj) (Quit: Connection closed for inactivity)
[00:57:49] <Geo> hi, with a struct and an if statement, is it safe to do if ((!foo) || (!foo->bar))  ? Or is it possible the compiler will attempt to evaluate foo->bar first, causing a crash if foo is pointing to null?
[00:57:59] *** Joins: moose (~moose@user/moose)
[00:58:22] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[00:59:11] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Ping timeout: 264 seconds)
[01:00:23] <floatcomplex> no
[01:00:50] <floatcomplex> the above is correct
[01:02:08] <floatcomplex> ,paren ((!foo) || (!foo->bar))
[01:02:09] <candide> floatcomplex: (!foo) || (!(foo->bar))
[01:02:18] <floatcomplex> unparen?
[01:02:34] *** Quits: wnbeser (~wnbeser@91-154-216-7.elisa-laajakaista.fi) (Quit: Leaving)
[01:03:45] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[01:05:04] *** Joins: voidpointer (~uniquepoi@190.218.240.164)
[01:05:34] <Geo> ok, so the order is preserved?
[01:07:13] <floatcomplex> yea
[01:07:24] *** Quits: uniquepointer (~uniquepoi@190.218.240.164) (Ping timeout: 265 seconds)
[01:07:51] <Geo> thanks
[01:08:03] *** Joins: ckdCreations (~ckdCreati@147.55.133.140)
[01:10:30] <fizzie> Just remember that that's a special property of the ||, &&, ?: and , operators, not a general rule.
[01:11:38] *** voidpointer is now known as uniquepointer
[01:13:16] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[01:13:41] <Geo> fizzie: which is the special property- preserving order?
[01:14:47] <almaember> Geo: yep. The aforementioned operators have their execution order defined by the standard, but the order of evaluation for the rest is implementation defined.
[01:14:48] <fizzie> Having a defined evaluation order, yes, and indeed not evaluating some subexpressions under some circumstances.
[01:15:00] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[01:15:37] <fizzie> ,c11 6.5.14p4
[01:15:38] <candide> http://www.iso-9899.info/n1570.html#6.5.14p4 [Logical OR operator] Unlike the bitwise | operator, the || operator guarantees left-to-right evaluation; if the second operand is evaluated, there is a sequence point between the evaluations of the first and second operands. If the first operand compares unequal to 0, the second operand is not evaluated.
[01:15:59] <Geo> cheers, thanks again
[01:17:54] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[01:18:48] *** Quits: Teckla (~Teckla@user/teckla) (Quit: leaving)
[01:21:18] *** Joins: Teckla (~Teckla@user/teckla)
[01:24:57] *** Joins: quartz (~quartz@user/quartz)
[01:28:31] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[01:30:09] *** Quits: rgrinberg (~textual@ip152-195-159-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:31:42] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[01:31:47] *** Quits: kst (~user@cpe-70-95-182-43.san.res.rr.com) (Remote host closed the connection)
[01:35:34] *** Joins: seninha (~seninha@user/seninha)
[01:41:33] *** Joins: sedeki (~textual@user/sedeki)
[01:42:31] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::2612) (Quit: Konversation terminated!)
[01:42:37] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[01:43:28] *** Quits: marcello42 (~mp@p200300dfaf066e01e1016cd4a9290a16.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[01:44:14] *** Joins: pert (~pert@fsf/member/pert)
[01:44:41] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[01:45:03] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:dd8d:d1cd:a7af:daf3) (Quit: Leaving)
[01:47:30] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[01:49:05] *** Quits: Pentode (~Pentode@mobile-166-171-57-43.mycingular.net) (Quit: Leaving)
[01:52:28] *** Joins: Laurenceb (~Laurenceb@62.207.208.46.dyn.plus.net)
[01:52:51] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[01:53:24] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[01:53:24] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[01:53:24] *** Joins: wroathe (~wroathe@user/wroathe)
[01:54:18] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Ping timeout: 260 seconds)
[01:54:50] <pert> of course, the standard doesn't speak to this issue, but I wonder what knowledgeable folks here think about a particular performance tradeoff
[01:54:52] <pert> POSIX has a function, posix_madvise(), that lets you advise the system on the pattern you access memory in so it can optimize it.
[01:55:02] <pert> The catch is that on many systems, for this function to work the memory has to be aligned to a page boundary. for heap memory, that means one has to call aligned_alloc(sysconf(_SC_PAGESIZE), s) instead of malloc(s)
[01:55:11] <pert> I don't really know how memory allocators work. is it likely in practice that aligned_alloc() will have a substantially greater overhead than malloc(), such that it will defeat any gains from posix_madvise()?
[01:55:29] *** Parts: Geo (vanosg@user/geo) (WeeChat 3.1)
[01:55:48] *** Joins: BSaboia (~bsaboia@187.19.138.198)
[01:56:28] *** Quits: off^ (~off@68.101.53.15) (Remote host closed the connection)
[01:56:32] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[01:57:12] *** Quits: Hash (~weechat@protect.yourself.with.hashsecurity.org) (Quit: WeeChat 3.3)
[01:57:43] *** Quits: alch (~alch@151.46.70.171) (Read error: Connection reset by peer)
[02:00:52] *** Joins: riposte (~finalripo@2403-5802-74-2-20c-29ff-fef3-ce22.ip6.aussiebb.net)
[02:01:07] *** Quits: gce108 (~gce@user/gce108) (Remote host closed the connection)
[02:01:37] *** Joins: alch (~alch@151.46.3.115)
[02:03:40] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[02:04:19] *** Joins: ymas (~quassel@user/ymas)
[02:05:53] *** Quits: randm (~randm@user/randm) (Quit: Leaving.)
[02:07:50] *** Quits: boB_K7IQ (~boB_K7IQ@152.44.147.180) (Ping timeout: 260 seconds)
[02:07:55] <floatcomplex> no
[02:09:01] <floatcomplex> just be aware that aligned_alloc is allowed to return NULL for more reasons than malloc
[02:10:52] *** Joins: Hash (~weechat@protect.yourself.with.hashsecurity.org)
[02:11:03] <pert> okay, thanks floatcomplex, I won't worry about it then
[02:16:14] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.2)
[02:17:53] *** Quits: movingtxt (~movingtxt@user/movingtxt) (Quit: leaving)
[02:19:13] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:19:19] *** Joins: movingtxt (~movingtxt@user/movingtxt)
[02:19:29] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[02:20:26] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 260 seconds)
[02:21:04] *** Joins: Crescendo (~Crescendo@user/crescendo)
[02:24:18] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[02:24:23] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[02:24:50] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 260 seconds)
[02:25:43] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[02:26:49] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[02:28:58] *** Joins: randm (~randm@user/randm)
[02:30:46] *** Joins: kuber (~kuber@97-113-79-225.tukw.qwest.net)
[02:31:28] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[02:33:01] *** Joins: phao (~phao@2804:d45:8e7a:de00:2105:76d8:24c8:cd48)
[02:33:50] *** Joins: pizdets_ (~pizdets@183.182.114.214)
[02:33:51] *** Quits: pizdets (~pizdets@183.182.111.121) (Ping timeout: 245 seconds)
[02:36:12] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[02:36:14] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[02:36:35] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[02:39:29] *** Joins: Pentode (~Pentode@mobile-166-171-57-43.mycingular.net)
[02:39:49] *** Quits: brelod (~me@90.244.150.142) (Quit: leaving)
[02:41:27] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[02:43:37] <bparker> pert: I don't think the concern is over the performance of the allocation itself, but the performance of operations done *with* the allocated memory
[02:43:48] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[02:43:49] <bparker> which can vary with the alignment
[02:46:12] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[02:46:32] *** Joins: de-facto (~de-facto@user/de-facto)
[02:51:02] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 258 seconds)
[02:51:36] *** Joins: tafa (~tafa@2a04:52c0:101:85c::1)
[02:51:46] *** Joins: noonien3 (~noonien@user/noonien)
[02:52:13] *** Quits: noonien (~noonien@user/noonien) (Read error: Connection reset by peer)
[02:52:13] *** noonien3 is now known as noonien
[02:52:14] *** Joins: finalriposte (~finalripo@119-17-138-70.77118a.mel.static.aussiebb.net)
[02:53:11] *** Quits: riposte (~finalripo@2403-5802-74-2-20c-29ff-fef3-ce22.ip6.aussiebb.net) (Ping timeout: 264 seconds)
[02:53:12] *** Joins: johnjay (~pi@192.142.100.50)
[02:54:56] *** Joins: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[02:55:04] *** Joins: Nearrexa (~nearrexa@gateway/tor-sasl/nearrexa)
[02:56:33] *** Joins: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[02:57:07] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 252 seconds)
[02:58:19] *** Quits: mahmutov (~mahmutov@5.176.62.214) (Ping timeout: 258 seconds)
[02:58:35] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 264 seconds)
[02:58:40] *** Joins: Wulf (~Wulf@user/wulf)
[03:00:18] *** Quits: kuber (~kuber@97-113-79-225.tukw.qwest.net) (Quit: leaving)
[03:00:23] *** Quits: dark279_ (~totallych@2601:18b:8200:c1e:a1e0:77e4:7943:e9a1) (Ping timeout: 264 seconds)
[03:00:37] *** Quits: night_wulfe_ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 258 seconds)
[03:02:49] *** Quits: Nearrexa (~nearrexa@gateway/tor-sasl/nearrexa) (Remote host closed the connection)
[03:03:26] *** Joins: Nearrexa (~nearrexa@gateway/tor-sasl/nearrexa)
[03:04:17] *** Joins: seninha (~seninha@user/seninha)
[03:05:05] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[03:05:12] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[03:05:43] *** Quits: pert (~pert@fsf/member/pert) (Quit: pert)
[03:06:05] *** Quits: shivesh (~shivesh@user/shivesh) (Quit: leaving)
[03:08:31] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[03:09:38] *** porn is now known as hentai
[03:11:01] *** Joins: Macuser (~Macuser@216.30.159.201)
[03:11:11] *** Quits: lobotomite (~unknown@user/varjack) (Ping timeout: 264 seconds)
[03:11:20] *** Joins: returnTRUE (~irc@179.126.34.153)
[03:13:38] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[03:14:17] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[03:17:01] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[03:18:00] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[03:19:14] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[03:19:38] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[03:20:38] *** Quits: night_wulfe__ (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Ping timeout: 260 seconds)
[03:25:11] *** Joins: rgrinberg (~textual@201.182.226.118)
[03:26:41] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[03:27:11] *** Quits: koo6 (~koo6@89-24-13-235.customers.tmcz.cz) (Ping timeout: 245 seconds)
[03:31:36] *** Quits: deavmi (~tbk@user/deavmi) (Read error: Connection reset by peer)
[03:31:49] *** Quits: Nearrexa (~nearrexa@gateway/tor-sasl/nearrexa) (Remote host closed the connection)
[03:32:19] *** Joins: Nearrexa (~nearrexa@gateway/tor-sasl/nearrexa)
[03:32:47] *** Joins: deavmi (~tbk@user/deavmi)
[03:35:39] *** Quits: Atque (~Atque@user/atque) (Remote host closed the connection)
[03:36:00] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:36:44] *** Joins: Atque (~Atque@user/atque)
[03:40:06] *** Quits: Rounin (~david@84.212.130.215) (Ping timeout: 258 seconds)
[03:41:48] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Read error: Connection reset by peer)
[03:45:24] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[03:45:39] *** Quits: Laurenceb (~Laurenceb@62.207.208.46.dyn.plus.net) (Ping timeout: 256 seconds)
[03:45:55] *** Quits: returnTRUE (~irc@179.126.34.153) (Ping timeout: 260 seconds)
[03:48:30] *** Joins: chasmo77 (~chas77@71.63.241.168)
[03:50:08] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[03:50:09] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:50:12] *** Joins: off^ (~off@wsip-68-227-92-38.mc.at.cox.net)
[03:51:31] *** Joins: Crescendo (~Crescendo@user/crescendo)
[03:52:05] *** Joins: quartz (~quartz@user/quartz)
[03:52:17] *** Quits: sebbu (~sebbu@user/sebbu) (Ping timeout: 268 seconds)
[03:52:25] *** Joins: sebbu3 (~sebbu@user/sebbu)
[03:54:53] *** Quits: coruja (~coruja@user/coruja) (Quit: ZNC 1.8.2 - https://znc.in)
[03:55:05] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[03:58:08] *** Joins: semeion (~semeion@user/semeion)
[03:59:28] *** Joins: coruja (~coruja@user/coruja)
[04:02:37] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Quit: And I'm out.)
[04:03:33] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[04:05:31] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 245 seconds)
[04:06:03] *** Joins: Praise (~Fat@user/praise)
[04:07:30] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 260 seconds)
[04:08:29] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[04:09:18] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[04:13:57] *** Joins: chenqisu1 (~xirndc@183.217.203.91)
[04:14:14] *** chenqisu1 is now known as chenqisu12
[04:14:18] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 260 seconds)
[04:14:30] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[04:15:59] *** Joins: quartz (~quartz@user/quartz)
[04:18:55] *** Quits: kstolen (~kStolen@2a00:fa40:2aaa:1::539:82de) (Quit: WeeChat 1.6)
[04:19:35] *** Joins: lobotomite (~unknown@129.21.83.206)
[04:19:59] *** lobotomite is now known as Guest3244
[04:25:29] *** Joins: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au)
[04:26:24] *** Joins: pnbeast (~pnbeast@2601:140:4280:3c90::1)
[04:28:10] *** Joins: malina (~malina@user/malina)
[04:28:26] *** Quits: The_Jag_ (~The_Jag@host-87-21-77-193.retail.telecomitalia.it) (Read error: Connection reset by peer)
[04:29:15] *** Joins: The_Jag (~The_Jag@host-87-21-77-193.retail.telecomitalia.it)
[04:31:08] *** Quits: The_Jag (~The_Jag@host-87-21-77-193.retail.telecomitalia.it) (Read error: Connection reset by peer)
[04:31:26] *** Quits: aa (~douglasco@200.146.85.128.static.gvt.net.br) (Read error: Connection reset by peer)
[04:31:35] *** Joins: aa (~douglasco@200.146.85.128.static.gvt.net.br)
[04:31:56] *** Joins: The_Jag (~The_Jag@host-87-21-77-193.retail.telecomitalia.it)
[04:32:00] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[04:35:05] *** sebbu3 is now known as sebbu
[04:37:13] *** Joins: Vexyl (~Vexyl@user/vexyl)
[04:37:36] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[04:39:35] *** Quits: subvisor (sid502026@helmsley.irccloud.com) (Ping timeout: 265 seconds)
[04:42:01] *** Joins: subvisor (sid502026@id-502026.helmsley.irccloud.com)
[04:42:43] *** Quits: Bou (sid274843@user/bou) (Ping timeout: 252 seconds)
[04:44:42] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[04:45:53] *** Joins: Bou (sid274843@user/bou)
[04:46:12] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:47:09] *** Joins: ferdna (~ferdna@user/ferdna)
[04:47:39] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[04:49:29] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[04:50:42] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[04:53:11] *** Joins: pagini (~pagini@171.113.237.74)
[04:54:10] *** Quits: pagini (~pagini@171.113.237.74) (Client Quit)
[04:58:45] *** Quits: phao (~phao@2804:d45:8e7a:de00:2105:76d8:24c8:cd48) (Quit: Leaving)
[05:03:18] *** Quits: NEYi (~NEYi@109.251.216.38) (Read error: Connection reset by peer)
[05:05:15] *** Quits: random-nick (~random-ni@87.116.165.220) (Ping timeout: 260 seconds)
[05:06:22] *** Quits: zhiayang (~zhiayang@user/zhiayang) (Quit: oof.)
[05:06:23] *** Quits: FlipFlop (~FlipFlop@user/fl1pfl0p) (Ping timeout: 264 seconds)
[05:06:36] *** Joins: zhiayang (~zhiayang@user/zhiayang)
[05:08:47] *** Quits: ski (~ski@remote12.chalmers.se) (Ping timeout: 264 seconds)
[05:09:01] <quartz> ,english *p++
[05:09:02] <candide> quartz: The dereference of increment `p` by one.
[05:09:22] *** Quits: fossforus (~stan@99-173-128-32.lightspeed.rlghnc.sbcglobal.net) (Ping timeout: 260 seconds)
[05:10:06] <floatcomplex> what
[05:10:10] <floatcomplex> useless
[05:10:16] <floatcomplex> ,paren *p++
[05:10:17] <candide> floatcomplex: *(p++)
[05:10:22] <floatcomplex> better
[05:11:25] <quartz> floatcomplex: But postfix ++ has higher precedence than *, so *p++ and *(p++) do the same thing right?
[05:11:41] <floatcomplex> that's what paren is saying yes
[05:12:44] <quartz> I honestly don't know if I"ll ever get the syntax right in C haha
[05:12:50] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 260 seconds)
[05:14:01] *** Joins: phao (~phao@2804:d45:8e7a:de00:2105:76d8:24c8:cd48)
[05:14:40] <fizzie> I don't think the English version was really useless, TBH.
[05:14:43] <fizzie> The difference between "the dereference of increment `p` by one" and "the increment of the deference of `p` by one" is pretty clear.
[05:14:45] <fizzie> (Not that I'm sure I'd trust it unreservedly to make that much sense.)
[05:14:55] <floatcomplex> just don't put yourself in a position where you need to remember whether *p++ is (*p)++ or *(p++)
[05:15:12] *** Joins: johnjay (~pi@192.142.100.50)
[05:15:34] <quartz> floatcomplex: Don't confuse me even more :(
[05:15:35] <pragma-> It used to say "The dereference of p incremented by one." and I'll one day look at it and figure out why it stopped saying that.
[05:15:37] <floatcomplex> it is possible to write a lot of c for many years and not have to know that
[05:15:44] <fizzie> ,english (*p)++; *(q++); *r++;
[05:15:45] <candide> fizzie: Increment Evaluate the expression (the dereference of `p`) by one. Then the dereference of the expression (post-incremented `q`). Finally, the dereference of increment `r` by one.
[05:15:56] <fizzie> "Increment Evaluate the expression .."? 
[05:16:00] <pragma-> smh.
[05:16:01] <floatcomplex> just stop trying to be as clever as possible and most of your problems will go away
[05:16:08] <pragma-> It needs a little bit of work.
[05:16:28] *** Joins: frost (~frost@59.71.244.189)
[05:16:35] <floatcomplex> any one developer is, by definition, not clever enough to debug the cleverest code they can write
[05:18:21] * pragma- gestures at https://github.com/pragma-/pbot/blob/master/modules/c2english/CGrammar.pm
[05:18:58] <floatcomplex> pragma-: i was addressing quartz but sure :)
[05:19:20] <floatcomplex> any one developer is, by definition, not clever enough to debug perl
[05:19:27] *** Quits: phao (~phao@2804:d45:8e7a:de00:2105:76d8:24c8:cd48) (Quit: Leaving)
[05:19:32] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[05:19:37] <quartz> Sorry for asking this again, but in this code: https://bpa.st/ZMTQ on line 7, they point s to *copy++. But wouldn't that skip over the first char * in **copy?
[05:19:48] <pragma-> I don't understand why I did half of those things the way I did them.
[05:19:50] <quartz> Because first it increments, THAN it does the dereference
[05:20:17] *** Quits: random-jellyfish (~random-je@user/random-jellyfish) (Ping timeout: 256 seconds)
[05:21:30] *** Quits: johnjay (~pi@192.142.100.50) (Ping timeout: 260 seconds)
[05:23:07] <floatcomplex> quartz: i'm being totally serious. *p++ is something you saw a lot in the 80s when optimizing compilers were not a thing. you shouldn't write new code that way
[05:23:37] <quartz> floatcomplex: This is my professor's code :P
[05:23:38] *** Joins: johnjay (~pi@192.142.100.50)
[05:23:45] <floatcomplex> i believe it
[05:23:45] <quartz> It's funny you say that though, it make me laugh haha
[05:23:59] <floatcomplex> quartz: it will stop being funny soon enough
[05:24:03] *** Quits: gpanders (~gpanders@user/gpanders) (Read error: Connection reset by peer)
[05:24:12] <fizzie> It doesn't skip over anything, though.
[05:24:18] *** Joins: gpanders (~gpanders@user/gpanders)
[05:24:39] <quartz> fizzie: It doesn't increment copy first, THAN dereference?
[05:24:46] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[05:24:50] <fizzie> There's no "first" when it comes to the side effects.
[05:25:04] *** Joins: sedeki (~textual@user/sedeki)
[05:25:05] <floatcomplex> if you think "learning c" means "learning the operator predecence of * and ++" you need to adjust your expectations
[05:25:18] <fizzie> But in terms of the value it yields, the whole point of the post-increment (and the way it differs from pre-increment) is that it is the old value of the operand before the increment.
[05:25:36] <floatcomplex> or others need to adjust their expectations of the quality and relevance of the skillset learned from your professor
[05:26:07] <fizzie> ,cc char *strings[] = {"first", "second"}, **copy = strings; puts(*copy++); // like so
[05:26:09] <candide> fizzie: first
[05:26:18] <quartz> omg you're right. I keep forgetting that
[05:26:25] <quartz> I'm soooo sorry for the dumb questions.
[05:26:37] <floatcomplex> these are not dumb questions. they're worrying questions
[05:26:38] <quartz> I keep thinking operator predecence
[05:27:01] <quartz> floatcomplex: I guess so. I have a professor who writes C code like it's 1980  apparently.
[05:27:08] <floatcomplex> you have spent far far far too much time worrying about operator precedence. i'm worried that you're going to burn out before you learn how to do anything useful
[05:27:12] *** Joins: The_Jag_ (~The_Jag@host-82-55-23-104.retail.telecomitalia.it)
[05:27:15] <floatcomplex> you already seem to be disheartened by it
[05:27:46] <floatcomplex> your professor is either an idiot or is gatekeeping
[05:27:57] <quartz> Yeah I guess I'm just worried I'll not know what some statement evaluates to. "Complex declarations" in K&R scared me
[05:28:19] <quartz> floatcomplex: Haha, I like that phrase, "gatekeeping". Yeah that's like nearly every CS course at university these days.
[05:29:45] *** Quits: The_Jag (~The_Jag@host-87-21-77-193.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[05:31:47] *** Quits: slidercrank (~slidercra@user/slidercrank) (Ping timeout: 265 seconds)
[05:32:37] <quartz> floatcomplex: So how would you have written that piece of code, just curious.
[05:32:42] *** Quits: banc (banc@gateway/vpn/airvpn/banc) (Ping timeout: 260 seconds)
[05:32:52] <quartz> Becuase now it makes sense to me. My solution was not as good as his.
[05:33:44] <floatcomplex> which apecific codw
[05:34:07] <quartz> huh?
[05:34:17] <floatcomplex> which specific code would
[05:34:43] <floatcomplex> oh found it
[05:34:51] <floatcomplex> the fixDuplicatedArgs one?
[05:34:58] <quartz> Yes
[05:35:00] *** Quits: deavmi (~tbk@user/deavmi) (Ping timeout: 260 seconds)
[05:35:38] <floatcomplex> well they use a loop with *p++ and a loop with regular indexing
[05:35:43] <floatcomplex> i'd just use two loops with regular indexing
[05:36:07] <quartz> My solution would always dereference the double pointer using [][]
[05:36:17] *** Joins: porn (~hentai@2a01:e0a:a5c:a070:bf4b:d0ec:1d9e:8893)
[05:36:17] *** Quits: porn (~hentai@2a01:e0a:a5c:a070:bf4b:d0ec:1d9e:8893) (Changing host)
[05:36:17] *** Joins: porn (~hentai@user/hentai)
[05:36:25] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[05:36:35] <floatcomplex> yeah and it'd be more readable and debuggable that way
[05:36:55] <fizzie> Or if not indexing, a for loop that puts the increment operation in the third clause is already an improvement (and avoids the *p++ ambiguity).
[05:36:55] *** Joins: deavmi (~tbk@user/deavmi)
[05:37:18] <floatcomplex> your professor doesn't know how to stop showing away and being a jackass
[05:37:25] <quartz> LOL
[05:37:30] <quartz> floatcomplex: What makes you say that.
[05:39:14] <floatcomplex> also what is "fix.h" and its relevance to this, and what is the english language description of what this code snipped is prescribed to do, and where is the test case
[05:39:24] *** Quits: rainmanjam (~rainmanja@216.161.85.62) (Read error: Connection reset by peer)
[05:39:46] <fizzie> Pretty sure fix.h will contain just a declaration of `fixDuplicatedArgs`.
[05:39:50] <quartz> Yes
[05:40:28] <fizzie> We saw the test case earlier today. Figuring out what it's supposed to do based on the other code was part of the exercise, I imagine.
[05:40:45] <floatcomplex> if your professor teaches you duff's device, get up and walk out of the class
[05:40:50] *** Quits: hentai (~hentai@user/hentai) (Ping timeout: 260 seconds)
[05:41:01] <floatcomplex> and feel free to rat them out to actual tom duff
[05:41:26] <quartz> It is suppose to take in arguements and print them once lower case, and uppercase
[05:41:36] <quartz> Haven't got to duff's device yet
[05:41:40] <floatcomplex> omg that yet
[05:41:44] <floatcomplex> please tell me you're not going to
[05:42:11] <fizzie> Well, that's what the *program* is supposed to do, the description for the function is more something like, convert an array of Pascal strings in-place to C strings.
[05:42:42] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[05:43:19] *** porn is now known as hentai
[05:43:50] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[05:44:13] *** Joins: Senicar (~Senicar@gateway/tor-sasl/senicar)
[05:44:30] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[05:44:57] *** Quits: Senicar (~Senicar@gateway/tor-sasl/senicar) (Client Quit)
[05:45:09] *** Joins: Senicar (~Senicar@gateway/tor-sasl/senicar)
[05:45:35] <quartz> I don't believe duff's device is on the syllabus, but I'd have to check
[05:46:11] <floatcomplex> the funniest part of all of this to me is they have an explicit != NULL in there on literally the same line as doing something overly clever to save a few characters, and they need to include stdlib.h to get the definition of NULL
[05:47:01] <quartz> fizzie: The program takes in function arguements, and prints them twice, once as they were typed in and again as uppercase ./tweako hello world would be hello HELLO world WORLD
[05:47:11] <quartz> it uses argc and argv, its a nice exercise.
[05:47:47] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 264 seconds)
[05:49:02] *** Quits: luizfrds (~Luiz@152.250.243.147) (Ping timeout: 260 seconds)
[05:49:40] <fizzie> Yes, I know. All I was saying is, that's not a description of what the specific code snippet does. Especially since the snippet is not something you'd need in a reasonable program to do that; it was just added as an extra complication to make a puzzle.
[05:50:22] *** Quits: highrate (~presonic@24-0-237-24.gci.net) (Ping timeout: 252 seconds)
[05:51:00] <floatcomplex> that's what worries me
[05:51:15] <floatcomplex> your professor doesn't know how to write regular useful code, only puzzles, and that's what you're learning
[05:51:34] <floatcomplex> if you write dayjob code like this you will be very unpopular
[05:52:01] *** Quits: fcresende (~quassel@2804:431:cfc6:7dda:59ef:466c:27dd:1d0d) (Read error: Connection reset by peer)
[05:52:12] <fizzie> For the record, I don't think the original was *that* bad, and that a single `*p++` really counts as "overly clever". Not to say the alternative wouldn't be clearer. But I'd want to see something a little more obscene before going all oh-the-humanity on it.
[05:52:23] <floatcomplex> and i don't mean that in teh sense that you shouldn't learn the edge cases of the language or that every class should be purely workplace-relevance-driven, but you need to at least know the difference
[05:52:29] <fizzie> The earlier conversion *to* Pascal strings was pushing it a little though.
[05:53:01] *** Joins: banc (banc@gateway/vpn/airvpn/banc)
[05:53:08] <floatcomplex> and having anxiety about not being able to learn all these operator precedence rules because you think you'll need them for all C code you ever write means your professor either doesn't know or hasn't fully expressed that these are esoteric exercises
[05:53:32] *** Quits: Nearrexa (~nearrexa@gateway/tor-sasl/nearrexa) (Quit: Nearrexa)
[05:53:55] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:54:44] <floatcomplex> tl dr: fizzie knows these things so that you don't have to
[05:54:57] <quartz> fizzie: The other function sets the result of strlen to the first element in that strings char array.
[05:55:04] <fizzie> Yes, I remember that.
[05:55:14] <caze> quartz: https://godbolt.org/z/anhjnbcrr
[05:55:16] <fizzie> For context, it was: `*t = strlen(s); while (*s) *++t = toupper(*s++);` -- now that's a little more overly clever.
[05:55:22] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[05:55:44] <floatcomplex> -Wjackass
[05:57:37] <quartz> I like C, despite it being considered a "hard" langauge by like everyone at this university
[05:57:54] *** Quits: Guest3244 (~unknown@129.21.83.206) (Ping timeout: 260 seconds)
[05:58:03] *** Joins: fcresende (~quassel@2804:431:cfc6:7dda:59ef:466c:27dd:1d0d)
[05:58:04] <fizzie> Single-byte-length-prefixed strings are arguably pretty obsolete in the first place, except for special circumstances, since so many strings these days are longer than what fits in a byte.
[05:58:15] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[05:58:18] <quartz> caze: Nice code
[05:58:22] *** Quits: rundown (~eb0t@90.199.166.206) (Ping timeout: 265 seconds)
[05:58:51] <floatcomplex> fortran did the same thing with four bytes for the prefix length right? i've always thought of length-prefixed strings as fortran strings, never dealt with pascal
[05:59:58] <fizzie> I feel like Fortran strings are more fixed-length than length-prefixed, but I've not done much Fortran.
[06:00:11] *** Joins: rundown (~eb0t@90.199.165.149)
[06:00:13] <floatcomplex> nobody should be doing string anything in fortran
[06:00:14] *** Quits: alch (~alch@151.46.3.115) (Ping timeout: 260 seconds)
[06:00:16] <floatcomplex> (then or now)
[06:01:58] *** Joins: alch (~alch@151.46.23.6)
[06:02:28] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[06:04:06] <fizzie> There was some sort of a `len=*` thing for function/subroutine arguments, so I imagine there must be an ABI mechanism for passing the actual lengths, but I've not had to care. Aren't all real Fortran programs strictly about numbers anyway? ;)
[06:05:24] <floatcomplex> fizzie: yes, and/or they are used for the numeric parts of mixed fortran and c programs
[06:05:32] <floatcomplex> the good ones anyway
[06:05:38] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[06:05:48] <floatcomplex> other than the string thing, the fortran call convention is a strict subset of the c one, making that pretty easy
[06:06:15] <floatcomplex> (to the extent that strings are, you know, part of what we would call the call convention)
[06:06:48] <floatcomplex> the good and bad thing about the fortran call convention is EVERYTHING is a pointer
[06:07:11] *** Quits: karakedi (~eAC53C340@user/karakedi) (Remote host closed the connection)
[06:07:18] <floatcomplex> so there was no reason for .h files, but also no way of checking that you were passing the right number or kind of arguments to a function in another TU
[06:08:12] *** Joins: highrate (~presonic@24-0-237-24.gci.net)
[06:08:27] <floatcomplex> and modifying the value of what looked like a regular scalar passed as an argument to a subroutine always modified it in the parent function too, because it was actually what would later be called passed by reference, and you just had to know that
[06:10:01] <floatcomplex> total anarchy, with the saving grace of being simple to compile and simple to learn
[06:11:00] *** Joins: wroathe (~wroathe@user/wroathe)
[06:16:34] *** Quits: kitsunenokenja (~kitsunech@68.91.220.96) (Ping timeout: 260 seconds)
[06:17:51] *** Joins: dmaroo (~dhruv@2409:4070:4418:a173:e83f:186:d45c:4d75)
[06:17:59] *** Joins: loganlee (~Thunderbi@user/loganlee)
[06:25:38] *** Joins: presonic (~presonic@24-0-237-24.gci.net)
[06:27:51] *** Quits: highrate (~presonic@24-0-237-24.gci.net) (Ping timeout: 265 seconds)
[06:29:52] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[06:35:35] *** Quits: EtherNet (~ethernet@user/ethernet) (Ping timeout: 265 seconds)
[06:37:02] *** Joins: EtherNet (~ethernet@user/ethernet)
[06:38:01] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[06:38:42] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[06:38:57] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[06:39:05] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[06:41:44] *** Quits: tejr (~tejr@user/tejr) (Remote host closed the connection)
[06:43:03] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[06:43:15] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[06:43:50] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[06:46:38] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[06:48:08] *** Joins: kish` (~aqua@user/aqua)
[06:54:04] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:55:35] *** Quits: chenqisu12 (~xirndc@183.217.203.91) (Quit: Leaving)
[06:57:06] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[06:58:05] *** Quits: Vexyl (~Vexyl@user/vexyl) (Quit: leaving)
[07:02:14] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[07:03:39] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Quit: nyaa~)
[07:09:01] *** Quits: kurahaupo (~kurahaupo@220-245-23-126.static.tpgi.com.au) (Ping timeout: 258 seconds)
[07:09:35] *** Joins: retroman (~retroman@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net)
[07:09:38] *** Quits: retroman (~retroman@cpc138958-jarr14-2-0-cust34.16-2.cable.virginm.net) (Client Quit)
[07:10:19] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[07:11:07] *** Joins: kurahaupo (~kurahaupo@pa49-179-226-170.pa.nsw.optusnet.com.au)
[07:13:46] *** Joins: Everything (~Everythin@37.115.210.35)
[07:13:59] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[07:16:34] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[07:24:25] *** Joins: tejr (~tejr@user/tejr)
[07:28:30] *** Joins: Fairy (~Fairy@2001:464a:4992:0:9c0f:e957:8bda:88f)
[07:31:34] *** Quits: Fairy97 (~Fairy@2001:464a:4992:0:8c0c:f151:d680:fa86) (Ping timeout: 252 seconds)
[07:32:48] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:38:38] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[07:44:30] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[07:48:19] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[07:49:19] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b015:157d:2e9:a5e9:1528)
[07:49:42] *** Joins: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao)
[07:51:06] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[07:53:28] *** Joins: gce108 (~gce@user/gce108)
[07:57:27] *** Quits: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net) (Remote host closed the connection)
[07:59:48] *** Joins: munkis (~mendel_mu@ool-ae2cb218.dyn.optonline.net)
[08:05:32] *** Joins: j-james (~apropos@dhcp-206-87-158-87.ubcsecure.wireless.ubc.ca)
[08:05:48] *** presonic is now known as highrate
[08:06:14] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[08:08:11] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 264 seconds)
[08:12:45] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[08:13:54] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[08:16:27] *** Quits: j-james (~apropos@dhcp-206-87-158-87.ubcsecure.wireless.ubc.ca) (Quit: leaving)
[08:18:26] *** Quits: dmaroo (~dhruv@2409:4070:4418:a173:e83f:186:d45c:4d75) (Ping timeout: 245 seconds)
[08:18:55] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[08:20:29] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[08:23:02] *** Quits: m4v (~znc@ubuntu/member/m4v) (Ping timeout: 260 seconds)
[08:25:27] *** Joins: almaember_ (~almaember@178-164-219-221.pool.digikabel.hu)
[08:26:18] *** Quits: almaember (~almaember@178-164-219-221.pool.digikabel.hu) (Ping timeout: 260 seconds)
[08:30:04] *** Joins: sedeki (~textual@user/sedeki)
[08:30:30] *** Joins: kashyaprushi_ (~kashyapru@2405:201:1010:b015:1202:4c65:3209:f41d)
[08:30:40] *** Quits: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca) (Ping timeout: 258 seconds)
[08:30:49] *** Joins: m4v (~znc@ubuntu/member/m4v)
[08:31:24] *** Quits: kish` (~aqua@user/aqua) (Ping timeout: 276 seconds)
[08:34:35] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b015:157d:2e9:a5e9:1528) (Ping timeout: 264 seconds)
[08:36:45] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[08:38:42] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[08:40:15] *** Quits: ntwk (~ntwk@user/ntwk) (Ping timeout: 258 seconds)
[08:42:23] *** Joins: dave0 (~davezero@069.d.003.ncl.iprimus.net.au)
[08:44:47] *** Quits: off^ (~off@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 264 seconds)
[08:45:49] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[08:46:27] *** Joins: off^ (~off@wsip-68-227-92-38.mc.at.cox.net)
[08:46:47] *** Joins: teepee (~teepee@openscad/teepee)
[08:46:53] *** Quits: rgrinberg (~textual@201.182.226.118) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:48:02] *** Quits: malloy (~jimery@116.30.223.211) (Ping timeout: 250 seconds)
[08:48:36] *** Joins: ntwk (~ntwk@user/ntwk)
[08:50:04] *** Joins: malloy (~jimery@116.30.223.211)
[08:51:51] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[08:55:00] *** Quits: vin (~vin@user/crash) (Quit: WeeChat 2.8)
[08:57:08] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[08:57:52] *** Joins: ski (~ski@remote12.chalmers.se)
[08:58:02] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[09:06:06] *** Joins: kurahaupo_ (~kurahaupo@pa49-181-187-56.pa.nsw.optusnet.com.au)
[09:07:22] *** Joins: mrig (~AdiIRC@user/mrig)
[09:07:55] *** Quits: kurahaupo (~kurahaupo@pa49-179-226-170.pa.nsw.optusnet.com.au) (Ping timeout: 260 seconds)
[09:08:37] *** Quits: kashyaprushi_ (~kashyapru@2405:201:1010:b015:1202:4c65:3209:f41d) (Quit: Leaving)
[09:11:47] *** Quits: zmt00 (~zmt00@user/zmt00) (Ping timeout: 264 seconds)
[09:16:21] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[09:18:26] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (Ping timeout: 245 seconds)
[09:20:16] *** Quits: vvlad (~vvlad@dslb-088-069-181-116.088.069.pools.vodafone-ip.de) (Quit: Leaving)
[09:20:56] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 245 seconds)
[09:21:48] *** Quits: ckdCreations (~ckdCreati@147.55.133.140) (Read error: Connection reset by peer)
[09:24:13] *** Joins: dmaroo (~dhruv@2409:4070:4418:a173:e83f:186:d45c:4d75)
[09:29:45] *** Joins: raj (uid72176@user/raj)
[09:31:51] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[09:31:57] *** Quits: mrig (~AdiIRC@user/mrig) (Remote host closed the connection)
[09:32:11] *** Joins: mrig (~AdiIRC@user/mrig)
[09:35:40] *** Joins: trav65996 (travankor@user/travankor)
[09:35:56] *** Quits: reenix- (~reenix@2a01:238:420e:ae00:1c37:63c1:24c0:ff75) (Ping timeout: 245 seconds)
[09:36:06] *** Joins: reenix (~reenix@h2924837.stratoserver.net)
[09:36:21] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Ping timeout: 245 seconds)
[09:36:59] *** Joins: blackbeard420_ (~blackbear@45.33.85.133)
[09:37:00] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[09:37:08] *** Joins: Telvana2 (~capo@user/telvana)
[09:37:11] *** Quits: Telvana (~capo@user/telvana) (Ping timeout: 245 seconds)
[09:37:34] *** Joins: kashyaprushi (~kashyapru@2405:201:1010:b015:a073:83a0:246:397)
[09:37:36] *** Quits: larry87 (~quassel@2601:2c7:4280:17a0::b85e) (Ping timeout: 245 seconds)
[09:37:36] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 245 seconds)
[09:37:36] *** Quits: tomboy64 (~tomboy64@user/tomboy64) (Ping timeout: 245 seconds)
[09:37:36] *** Quits: travankor (travankor@user/travankor) (Ping timeout: 245 seconds)
[09:37:36] *** Quits: blackbeard420 (~blackbear@2600:3c03:e000:297:af:af:af:42) (Ping timeout: 245 seconds)
[09:38:05] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[09:38:31] *** Quits: malina (~malina@user/malina) (Ping timeout: 258 seconds)
[09:39:35] *** Joins: tomboy64 (~tomboy64@user/tomboy64)
[09:48:13] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[09:48:23] *** Quits: ntwk (~ntwk@user/ntwk) (Ping timeout: 264 seconds)
[09:48:54] *** Joins: ntwk (~ntwk@user/ntwk)
[09:52:50] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[10:00:25] *** Quits: alch (~alch@151.46.23.6) (Ping timeout: 260 seconds)
[10:01:16] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[10:01:39] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:01:43] *** Joins: plainoldcheese (~plainoldc@user/plainoldcheese)
[10:02:19] *** Joins: alch (~alch@151.44.61.196)
[10:09:40] *** Joins: brelod (~me@90.244.150.142)
[10:12:36] *** Quits: somlis (~somlis@user/somlis) (Ping timeout: 245 seconds)
[10:14:56] *** Quits: reset (~reset@user/reset) (Quit: reset)
[10:15:52] *** Joins: citrons (~citrons@alt.mondecitronne.com)
[10:23:12] *** Joins: aradesh (~aradesh@user/aradesh)
[10:25:05] *** Quits: n1000 (~n1000@user/n1000) (Quit: WeeChat 3.1)
[10:27:56] *** Quits: soul-bw (~uknown@2a02-a456-85ad-1-e44b-742e-874-ff97.fixed6.kpn.net) (Read error: Connection reset by peer)
[10:31:07] *** Joins: slidercrank (~slidercra@user/slidercrank)
[10:31:25] *** Quits: ntwk (~ntwk@user/ntwk) (Ping timeout: 252 seconds)
[10:34:01] *** Joins: ravan (~ravan@user/ravan)
[10:41:03] *** Quits: Hash (~weechat@protect.yourself.with.hashsecurity.org) (Quit: WeeChat 3.3)
[10:42:12] *** Joins: Hash (~weechat@protect.yourself.with.hashsecurity.org)
[10:43:25] *** Joins: ntwk (~ntwk@user/ntwk)
[10:44:26] *** Joins: davidfetter_work (~davidfett@2601:640:4100:7e0:8d69:eafc:41d6:e9d4)
[10:45:42] *** Joins: n1000 (~n1000@user/n1000)
[10:48:41] *** Joins: soul-d (~uknown@user/soul-d)
[10:49:49] *** Quits: davidfetter_work (~davidfett@2601:640:4100:7e0:8d69:eafc:41d6:e9d4) (Ping timeout: 258 seconds)
[10:54:25] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 258 seconds)
[10:55:01] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Ping timeout: 252 seconds)
[10:55:15] *** Joins: Crescendo (~Crescendo@user/crescendo)
[10:55:24] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::2612)
[10:58:14] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:00:04] *** Quits: Raguile (~Raguile@user/raguile) (Ping timeout: 260 seconds)
[11:01:21] *** Joins: earnestly (~earnest@user/earnestly)
[11:06:59] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 264 seconds)
[11:07:45] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[11:13:41] *** Joins: X-Scale` (~ARM@46.50.7.99)
[11:14:19] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 252 seconds)
[11:14:48] *** Quits: jetchisel (jetchisel@user/jetchisel) (Quit: Unfortunately time is always against us -- [Morpheus])
[11:15:12] *** X-Scale` is now known as X-Scale
[11:21:39] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[11:22:53] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:24:57] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[11:30:56] *** Joins: sysRPL (~sysRPL@ec2-3-131-36-133.us-east-2.compute.amazonaws.com)
[11:30:59] <sysRPL> hello
[11:31:05] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[11:31:33] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[11:31:51] <sysRPL> i am having problems building the FOSS c project nanovg on windows as a stic library for use in other windows programming environments
[11:32:44] <sysRPL> i can generate obj files with cl, but the resulting obj files have incompatible COFF data
[11:33:12] <markand> there is no makefile or way to generate the project?
[11:33:20] <sysRPL> when i try to build on linux for windows usng mingw32, i am missing all the C runtime linkage like mallac/ sqrt
[11:33:24] <markand> compiling by hand using cl is quite painful
[11:33:47] <markand> if you use mingw you won't be able to use visual studio afterwards
[11:34:27] <sysRPL> well i can make a static lib using mvsc / ide, but when i try to use functions in that lib, my other compiler (fpc) pukes when it sees magic ms data in the lib file
[11:34:43] <sysRPL> the same thing happens if i use the cl command line  c compiler
[11:35:00] <sysRPL> i am just trying to get a static lib
[11:35:11] <sysRPL> hell i'd be happy with a dlla t this point
[11:35:46] <sysRPL> how can i compile a dll so that it knows it depends on which opengl dlls on windows?
[11:36:30] <sysRPL> on linux i just do `gcc -shared -o myfile.so myfile.c -lGLESv2`
[11:36:34] *** Quits: slidercrank (~slidercra@user/slidercrank) (Quit: Why not ask me about Sevastopol's safety protocols?)
[11:36:40] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[11:37:07] <sysRPL> i am lost on how to do that with either mingw32 on linux, or msvc on windows
[11:39:56] *** Joins: fanis30 (~fanis30@adsl-234.37.6.0.tellas.gr)
[11:40:33] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[11:42:55] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104)
[11:43:10] *** Quits: frost (~frost@59.71.244.189) (Changing host)
[11:43:10] *** Joins: frost (~frost@user/frost)
[11:44:36] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[11:44:37] *** Quits: janemba (~janemba@185.107.80.152) (Read error: Connection reset by peer)
[11:44:54] *** Joins: frost (~frost@user/frost)
[11:46:31] *** Quits: LiaoTao_ (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[11:47:26] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[11:47:29] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[11:47:35] *** Joins: Guest77 (~Guest77@62.210.34.104)
[11:48:00] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[11:48:02] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[11:48:16] *** Joins: larry87 (~quassel@2601:2c7:4280:17a0::b85e)
[11:48:37] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[11:49:12] *** Joins: V-T60 (~v@91.203.24.166)
[11:49:14] *** Quits: LeoNerd (~leo@genoa.dictatorshipcake.co.uk) (Ping timeout: 258 seconds)
[11:50:04] *** Quits: synthmeat (~synthmeat@user/synthmeat) (Ping timeout: 252 seconds)
[11:51:29] *** Joins: LucaTM (~LucaTM@user/lucatm)
[11:54:07] *** Joins: arinov (~arinov@213.194.126.155)
[11:56:12] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[11:56:44] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[11:56:58] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Remote host closed the connection)
[11:57:22] *** Joins: danielcamiel (~danielcam@user/danielcamiel)
[11:57:27] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[11:59:37] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104) (Quit: Connection closed)
[12:00:23] <Guest77> hello guyz , I'm trying to implement this `cat << 1 << 2`
[12:00:55] <Guest77> ```
[12:01:13] <Guest77> > hi
[12:01:13] <Guest77> > 1
[12:01:14] <Guest77> > ho
[12:01:14] <Guest77> > 2
[12:01:15] <Guest77> cat: -: Mauvais descripteur de fichier
[12:01:15] *** ChanServ sets mode: +o candide
[12:01:15] <Guest77> cat: fermeture de l'entrée standard: Mauvais descripteur de fichier
[12:01:15] *** candide sets mode: +b *!~guest77@62.*
[12:01:22] *** Joins: janemba (~janemba@94.204.254.193)
[12:01:29] <markand> use a pastebin as described in the /topic
[12:01:51] *** Quits: soapsudsxx (~soapsudsx@209.221.40.137) (Remote host closed the connection)
[12:02:26] *** candide sets mode: -b *!~guest77@62.*
[12:03:20] <markand> btw if someone with +o abilities could remove bpa.st, seems dead
[12:03:23] *** Quits: supakeen (~user@python/site-packages/supakeen) (Ping timeout: 264 seconds)
[12:03:27] * markand stares at pragma- 
[12:03:53] <Guest77> readline does open a fd ? 
[12:04:21] <markand> do you mean GNU readline?
[12:04:26] <Guest77> yeap
[12:05:01] <markand> I don't know to be honest, I don't use it as it's pretty massive and GPL 
[12:05:28] *** Quits: buhman (sid411355@user/buhman) (Ping timeout: 252 seconds)
[12:05:39] *** Joins: buhman (sid411355@user/buhman)
[12:05:47] *** Joins: plastico (~plastico@neomutt/plastico)
[12:06:06] *** Quits: KnownSyntax (sid233169@user/knownsyntax) (Ping timeout: 258 seconds)
[12:06:58] *** Joins: KnownSyntax (sid233169@user/knownsyntax)
[12:09:16] *** Quits: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com) (Ping timeout: 252 seconds)
[12:10:35] *** Joins: dermato (~dermatobr@cpe-70-114-219-76.austin.res.rr.com)
[12:11:05] *** Joins: varaindemian (uid73404@id-73404.ilkley.irccloud.com)
[12:11:28] <varaindemian> how would one read line 2? https://www.irccloud.com/pastebin/wgtZL1mL/
[12:11:47] *** Quits: cheakoirccloud (uid293319@ilkley.irccloud.com) (Ping timeout: 264 seconds)
[12:11:51] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[12:12:24] *** Quits: kristjansson_ (sid126207@tinside.irccloud.com) (Ping timeout: 268 seconds)
[12:12:45] *** Joins: Yaknoti5 (~YaknotiS@cpc1-cmbg18-2-0-cust87.5-4.cable.virginm.net)
[12:12:46] *** Joins: kristjansson_ (sid126207@id-126207.tinside.irccloud.com)
[12:13:34] <Bou> I'd read it as "probably doesn't do what you want"
[12:14:02] *** Quits: KevinX (~KevinX@94.140.11.217) (Ping timeout: 260 seconds)
[12:14:34] *** Joins: KevinX_ (~KevinX@94.140.11.212)
[12:14:50] *** Joins: cheakoirccloud (uid293319@id-293319.ilkley.irccloud.com)
[12:15:06] *** Quits: sa (sid1055@tinside.irccloud.com) (Ping timeout: 245 seconds)
[12:15:37] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104)
[12:16:21] <Bou> It takes the XOR of each password with len (huh?), XOR's it with an `enc_flag[i]`, then adds it to result with an OR
[12:17:20] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[12:17:34] <floatcomplex> markand: libedit provides the same api
[12:17:41] <markand> floatcomplex, I use libedit myself
[12:18:16] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[12:19:28] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[12:20:10] *** Joins: supakeen (~user@python/site-packages/supakeen)
[12:20:32] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[12:22:12] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[12:22:42] <sysRPL> okay so here a problem i think. the opgnl functions on windows are stuck at version 1.2, and to get any more functions (actual useful ones) you need to use wgl extsion loading
[12:22:53] <sysRPL> so i can't just compile nanovg for windows
[12:23:21] <varaindemian> Bou: it is constantly added to `result`? As in result could become `result=00000100`?
[12:23:30] <sysRPL> i need to modify it to get all it's opengl functions from somewhere
[12:26:13] *** Joins: LeoNerd (~leo@genoa.dictatorshipcake.co.uk)
[12:26:25] <Bou> varaindemian: Say len=5 (being 101 in binary), then it flips the first and third bit in each `passwd[i]`. Is that what you need?
[12:29:00] *** Joins: synthmeat (~synthmeat@user/synthmeat)
[12:31:02] *** Joins: Matheo_bis (~matheo@user/matheo-bis/x-4309430)
[12:33:46] <varaindemian> Bou: it flips tem only if those 2 bits are 1
[12:34:28] *** Joins: karakedi (~eAC53C340@user/karakedi)
[12:35:37] <gr33n7007h> ,cc english void (*signal(int sig, void (*func)(int)))(int)
[12:35:38] <candide> gr33n7007h: error: 'english' undeclared
[12:36:19] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[12:36:33] <Bou> gr33n7007h: ,english void (*signal(int sig, void (*func)(int)))(int)
[12:36:34] <candide> gr33n7007h: Declare `signal` as a function taking `sig` as i​nt and `func` as pointer to function taking i​nt and returning void and returning pointer to function taking i​nt and returning void.
[12:36:54] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[12:37:08] <gr33n7007h> ah, thank you Bou :)
[12:37:29] *** Quits: kashyaprushi (~kashyapru@2405:201:1010:b015:a073:83a0:246:397) (Quit: Leaving)
[12:40:35] *** Quits: dmaroo (~dhruv@2409:4070:4418:a173:e83f:186:d45c:4d75) (Ping timeout: 264 seconds)
[12:42:52] <Bou> varaindemian: that's what  ^ (xor) does, yes. what are you trying to do?
[12:43:18] <varaindemian> i am trying to understand a challenge basically
[12:43:55] <markand> yeah that syntax is typically where typedefs are required
[12:44:55] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[12:45:09] *** Joins: rdz1789 (~rdz1789@139.47.40.241)
[12:45:40] *** Quits: pnbeast (~pnbeast@2601:140:4280:3c90::1) (Quit: WeeChat 2.7.1)
[12:45:44] *** Joins: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net)
[12:49:55] *** Joins: PortableDave (~portabled@194-193-148-202.tpgi.com.au)
[12:51:47] *** Quits: fanis30 (~fanis30@adsl-234.37.6.0.tellas.gr) (Quit: WeeChat 3.3)
[12:52:05] *** Joins: davidfetter_work (~davidfett@2601:640:4100:7e0:80ae:a40:2077:1cc9)
[12:52:26] *** Quits: PortableDave (~portabled@194-193-148-202.tpgi.com.au) (Client Quit)
[12:52:38] *** Joins: dmaroo (~dhruv@2409:4070:4418:a173:e83f:186:d45c:4d75)
[12:53:45] <varaindemian> Bou: https://github.com/abs0lut3pwn4g3/RootersCTF2019-challenges/blob/master/rev/ch05%20-%20easy_licensing/easy_licensing.c
[12:53:52] <varaindemian> Bou: maybe you can help me figure it out
[12:56:02] *** Quits: danielcamiel (~danielcam@user/danielcamiel) (Ping timeout: 260 seconds)
[12:56:59] *** Joins: shivesh (~shivesh@user/shivesh)
[12:57:10] *** Quits: davidfetter_work (~davidfett@2601:640:4100:7e0:80ae:a40:2077:1cc9) (Ping timeout: 252 seconds)
[12:57:35] *** Quits: Guest77 (~Guest77@62.210.34.104) (Quit: Client closed)
[12:57:56] <supakeen> It's a CTF/practice excercise which is meant for you to challenge yourself :)
[12:58:29] <varaindemian> supakeen: yeah, but I was looking for a writeup
[12:59:09] <Bou> we can give you some pointers, xkcd.com/138/
[13:01:56] <supakeen> The clue is in the `|=`.
[13:03:58] *** Joins: Crescendo (~Crescendo@user/crescendo)
[13:08:51] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[13:10:26] <varaindemian> :D
[13:10:57] <varaindemian> FIrst I tried to give input some of those strings
[13:10:59] <varaindemian> but I failed
[13:11:01] *** Joins: slidercrank (~slidercra@user/slidercrank)
[13:11:26] <varaindemian> some of the fail_msgs[15][64] data
[13:12:55] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[13:12:59] *** Quits: ntwk (~ntwk@user/ntwk) (Ping timeout: 264 seconds)
[13:13:04] <supakeen> The end result of `result` needs to be 0, `|` is only zero if both sides are 0. This means that `(passwd[i] ^ len) ^ enc_flag[i]` needs to be 0. You know the `enc_flag[i]` so what you really need is to know `(passwd[i] ^ len)` to be equal to `enc_flag[i]` (since 101 ^ 101 == 0).
[13:13:09] <supakeen> Does that bring you far enough along?
[13:13:40] *** Quits: segfault (~annada@103.160.128.31) (Ping timeout: 252 seconds)
[13:14:04] *** Joins: astronaut (~annada@103.160.128.31)
[13:14:14] <supakeen> You can then approach the answer from multiple angles (commutative, just brute force (the answer space aint large), etc).
[13:14:31] <Bou> also what's up with line 7?
[13:14:36] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.3)
[13:14:48] *** Quits: slidercrank (~slidercra@user/slidercrank) (Remote host closed the connection)
[13:14:52] <supakeen> I'm trying my best to pretend that isn't there ;)
[13:15:21] <supakeen> But since it's listed under reverse engineering I'd assume participants in the CTF only received the binary.
[13:16:12] *** Joins: slidercrank (~slidercra@user/slidercrank)
[13:17:48] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Quit: mikoto-chan)
[13:21:00] *** Quits: Matheo_bis (~matheo@user/matheo-bis/x-4309430) (Quit: Konversation terminated!)
[13:21:09] *** Joins: kashyaprushi (~kashyapru@49.36.103.188)
[13:22:23] *** Joins: ntwk (~ntwk@user/ntwk)
[13:26:09] <varaindemian> yes, they only rceive that
[13:26:45] <varaindemian> supakeen: but still I only have in mind the bruteforce thing
[13:26:55] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 260 seconds)
[13:26:58] <supakeen> Which is a fine solution.
[13:27:11] <Bou> you'll succeed at the shortest possible password :)
[13:27:52] <supakeen> It's a flawed challenge so don't worry about getting the flag itself.
[13:27:55] <supakeen> Oh Bou spoiled it ;)
[13:28:58] *** Joins: somlis (~somlis@user/somlis)
[13:29:06] <Bou> crap, I should have said "U will succeed"
[13:29:10] <supakeen> Or just
[13:29:12] <supakeen> € ./ctf-thing ""
[13:29:14] <supakeen> Correct Password!!!!!!!
[13:29:16] <supakeen> ...
[13:31:18] *** Joins: crankslider (~slidercra@user/slidercrank)
[13:31:59] <varaindemian> `€ `?
[13:32:05] <supakeen> I'm not American.
[13:32:59] *** Quits: csrf (~csrf@user/csrf) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[13:33:19] <supakeen> (so my prompt isn't $)
[13:33:44] *** Joins: csrf (~csrf@user/csrf)
[13:34:12] <varaindemian> yeah it pritns 0 and correct pass
[13:34:50] <varaindemian> it pritns 0 bc I made it print the result
[13:34:52] <varaindemian>         printf("%d", result);
[13:34:57] <supakeen> varaindemian: The 'length' should not have been user input in this case; the challenge itself is flawed in this regard.
[13:35:42] *** Joins: phao (~phao@2804:d45:8e7a:de00:b8c0:324d:dc9:1e1c)
[13:35:47] <varaindemian> supakeen: the participant is supposed to modify something inside it
[13:35:54] <supakeen> No they're not.
[13:36:00] <varaindemian> :(
[13:36:09] <varaindemian> not even after reversing the binary?
[13:36:12] <supakeen> They're supposed to find the flag.
[13:36:25] <supakeen> But a 'good' CTF challenge should not have alternative solutions like this.
[13:36:26] <Bou> if you can change the binary you just change `if (auth)` to `if (!auth)` right
[13:36:54] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[13:38:06] <varaindemian> Bou: but you still don;t know what to do with that string at the beginning -> line 10
[13:38:22] *** Joins: strajder (~strajder@user/strajder)
[13:38:40] <supakeen> Anyways varaindemian a 'brute force' in this case would only vary the 'len', because `len ^ enc_flag[i]` must be equal to `passwd[i]`.
[13:38:58] <supakeen> Due to XOR being commutative a ^ b ^ a is equal to b
[13:39:21] <supakeen> Err that's the wrong word but eh.
[13:39:39] *** Quits: crankslider (~slidercra@user/slidercrank) (Quit: Why not ask me about Sevastopol's safety protocols?)
[13:39:52] <supakeen> So you can XOR the enc_flag with say all the numbers 0-255 and see what yields your flag.
[13:41:35] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[13:43:15] <supakeen> Here's an example in (gasp) Python: https://bpa.st/raw/D3EA
[13:44:54] <varaindemian> supakeen: thank you!
[13:45:06] <varaindemian> I hate that the player can brute force it like that now..
[13:45:52] <varaindemian> they will only get that flag and attempt brute force
[13:45:55] <supakeen> Getting to the point where you know *how* to brute force it is what matters.
[13:46:01] <varaindemian> it;s very tempting for someone with experience
[13:46:26] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[13:49:42] *** Joins: arinov (~arinov@31.142.50.8)
[13:50:47] *** Quits: dmaroo (~dhruv@2409:4070:4418:a173:e83f:186:d45c:4d75) (Ping timeout: 264 seconds)
[13:51:02] *** Joins: dmaroo (~dhruv@2409:4070:460b:9408:8e30:2acf:1083:9872)
[13:52:23] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[13:52:40] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[13:53:04] <varaindemian> 1. how did you come up with the idea of XOR enc_flag with 0-255 and 2. how did you come up with the idea of a 0 length input?
[13:53:25] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[13:55:34] <Bou> result starts at 0, and can become nonzero at each character
[13:56:28] <Bou> so why not feed it an empty string, then nothing happens and the check passes
[13:57:20] *** Joins: zsoltiv_- (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[13:57:30] <varaindemian> and 1?
[13:57:57] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[13:57:59] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 264 seconds)
[13:57:59] *** zsoltiv_- is now known as zsoltiv_
[13:58:06] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[13:58:50] <Bou> enc_flag is XOR'ed by the length of your password, so the only thing you need to brute-force it the `len`
[13:59:14] <Bou> there are 36 bytes in enc_flag but that doesn't have to mean the plaintext password is 36 bytes, it could have been shorter
[13:59:49] <supakeen> Well.
[14:00:15] *** Quits: alch (~alch@151.44.61.196) (Ping timeout: 265 seconds)
[14:00:16] <supakeen> Bou put it quite right.
[14:01:10] <supakeen> When you see `a ^ b ^ c == 0` it implies that `a ^ b` == `c` (or any combination of those 3). `enc_flag[i] ^ passwd[i] ` == `len`. 
[14:01:19] *** candide sets mode: -o candide
[14:01:32] <supakeen> And as such `enc_flag[i] ^ `len` == `passwd[i]` :)
[14:01:45] *** Joins: alch (~alch@151.46.81.254)
[14:02:04] <supakeen> Dunno if that is clearer or not.
[14:02:30] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[14:02:39] <supakeen> This is that commutative approach, it means that it doesn't matter what order the XORs.
[14:02:43] <supakeen> (much like *)
[14:03:26] *** Quits: phao (~phao@2804:d45:8e7a:de00:b8c0:324d:dc9:1e1c) (Quit: Leaving)
[14:03:29] <fizzie> You could argue '', 'U', 'VK', 'WJJ', 'PMMV', ... are all valid passwords, and the length-32 one isn't any more correct than any of the others.
[14:03:35] *** Joins: phao (~phao@2804:d45:8e7a:de00:b8c0:324d:dc9:1e1c)
[14:03:37] <fizzie> (They're all accepted by the program, after all.)
[14:03:41] <supakeen> fizzie: Yea the challenge is flawed in that regard :)
[14:05:01] <supakeen> Also in general I'm not a fan of these 'crackme' type challenges that are just hide the flag.
[14:08:23] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104) (Ping timeout: 258 seconds)
[14:08:34] *** Joins: X-Scale` (~ARM@46.50.2.19)
[14:08:53] *** Joins: battousai (~i.am@177.156.122.167)
[14:11:25] *** Quits: X-Scale (~ARM@46.50.7.99) (Ping timeout: 252 seconds)
[14:11:26] *** X-Scale` is now known as X-Scale
[14:13:02] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Ping timeout: 260 seconds)
[14:13:22] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[14:14:34] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[14:15:21] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Read error: Connection reset by peer)
[14:18:56] *** Quits: loganlee (~Thunderbi@user/loganlee) (Quit: loganlee)
[14:20:30] *** Quits: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[14:20:50] *** Joins: zsoltiv_ (~zsoltiv@fibhost-67-12-35.fibernet.hu)
[14:24:26] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[14:25:32] *** Joins: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f)
[14:25:40] *** Quits: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof) (Quit: WeeChat 3.3)
[14:26:41] *** Joins: koffeinfriedhof (~koffeinfr@ubuntuusers/moderation/koffeinfriedhof)
[14:27:59] *** vinleod is now known as vdamewood
[14:35:47] *** Joins: Famine- (~Famine@user/famine)
[14:37:17] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[14:37:59] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[14:39:10] *** Quits: Famine_ (~Famine@user/famine) (Ping timeout: 260 seconds)
[14:44:11] *** Quits: arinov (~arinov@31.142.50.8) (Ping timeout: 264 seconds)
[14:47:23] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[14:48:35] *** Quits: off^ (~off@wsip-68-227-92-38.mc.at.cox.net) (Ping timeout: 260 seconds)
[14:51:39] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[14:52:28] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 258 seconds)
[14:53:37] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[14:54:20] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[14:58:15] *** Quits: raj (uid72176@user/raj) (Quit: Connection closed for inactivity)
[15:00:14] *** Quits: V-T60 (~v@91.203.24.166) (Quit: Leaving.)
[15:01:09] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[15:02:59] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[15:03:07] *** Joins: seninha (~seninha@user/seninha)
[15:10:03] *** Joins: luizfrds (~Luiz@152.250.243.147)
[15:14:23] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:20:47] *** Quits: blackbeard420_ (~blackbear@45.33.85.133) (Quit: ZNC 1.8.2 - https://znc.in)
[15:20:59] *** Joins: blackbeard420 (~blackbear@45.33.85.133)
[15:21:27] *** Quits: luizfrds (~Luiz@152.250.243.147) (Ping timeout: 265 seconds)
[15:21:48] <varaindemian> supakeen: do you know any other challenge I can take a a look at?
[15:21:53] <varaindemian> supakeen: the C code
[15:24:26] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 260 seconds)
[15:24:43] *** Joins: Crescendo (~Crescendo@user/crescendo)
[15:25:10] *** Joins: ravan (~ravan@user/ravan)
[15:29:06] *** Joins: kish` (~aqua@user/aqua)
[15:30:14] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[15:34:48] *** Joins: davidfetter_work (~davidfett@2601:640:4100:7e0:3123:1d6d:580:c406)
[15:35:01] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 258 seconds)
[15:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:33] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[15:39:55] *** Quits: davidfetter_work (~davidfett@2601:640:4100:7e0:3123:1d6d:580:c406) (Ping timeout: 260 seconds)
[15:41:09] <Bou> I like adventofcode.com, it's a yearly event with daily puzzles in December
[15:43:01] <Bou> they start out easy, but it can get pretty challenging at the end
[15:45:51] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[15:46:18] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[15:46:49] *** Quits: Oxfuxxx (~oxfuxxx@5.253.207.196) (Quit: Never underestimate the power of the butt..[]X/O...ON. (Playst...i mean.. Pir@tA$$))
[15:47:02] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[15:47:31] <shadowchaser> yeah, aoc is great, in the meantime i'm doing https://leetcode.com/problemset/all/, just to stay in shape
[15:47:34] *** Joins: Arthuria (~Arthuria@user/arthuria)
[15:47:35] *** Joins: nitro__ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net)
[15:48:58] *** Joins: Oxfuxxx (~oxfuxxx@5.253.207.196)
[15:49:38] *** Quits: nitro_ (~nitro@c-73-165-183-88.hsd1.pa.comcast.net) (Ping timeout: 260 seconds)
[15:51:11] *** Quits: Oxfuxxx (~oxfuxxx@5.253.207.196) (Client Quit)
[15:51:18] *** Quits: sharkee (~sharkee@5.253.207.196) (Remote host closed the connection)
[15:53:10] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 252 seconds)
[15:55:26] *** Joins: random-nick (~random-ni@87.116.183.63)
[15:56:41] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[15:59:08] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[15:59:22] *** Joins: llh (~llh@user/llh)
[16:01:18] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[16:01:33] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[16:01:37] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:34f3:14af:c14:a33d)
[16:01:37] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:34f3:14af:c14:a33d) (Changing host)
[16:01:37] *** Joins: skapata (~Skapata@user/skapata)
[16:02:39] *** Joins: brad_mssw (~bhouse@2601:344:4100:b490:f5bf:e85e:a38b:ce7)
[16:03:30] <razor[m]> i bet most of you contestents are indians
[16:04:01] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[16:04:05] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[16:05:37] *** Joins: relight (~relight@user/relight)
[16:06:26] *** Quits: rahl (~rahl@102.114.179.16) (Ping timeout: 260 seconds)
[16:07:23] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[16:08:21] *** Joins: rahl (~rahl@102.114.132.246)
[16:09:57] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[16:11:25] <rindolf> varaindemian: https://github.com/shlomif/Freenode-programming-channel-FAQ/blob/master/FAQ_with_ToC__generated.md#i-feel-like-programming-something-but-i-dont-know-what-can-you-suggest-some-good-ideas-for-programs
[16:11:41] <Bou> eww Freenode
[16:12:30] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[16:13:01] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 245 seconds)
[16:13:58] *** Joins: AmR (~AmREiSa@156.199.106.121)
[16:14:56] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[16:15:22] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[16:15:32] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[16:15:38] *** Quits: ormaaj2 (~ormaaj2@user/ormaaj) (Quit: Client closed)
[16:15:39] <SoF> I have a C function that prints to a FILE*, can I somehow generate a 'phantom' file that exposes the FILE* interface but is in memory?
[16:15:43] <SoF> my problem is that I want to get a string from that print function
[16:15:50] <SoF> if I had some memory file, I could just tell it to write to that file and then read from it myself into a string
[16:15:51] <Bou> razor[m]: just like most youtube videos, research papers, etc etc are from Indians?
[16:16:04] <fizzie> SoF: Not in standard C; yes on many specific implementations, including POSIX.
[16:16:22] <SoF> fizzie: I am on POSIX :)
[16:16:32] <fizzie> In that case, https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/functions/open_memstream.html
[16:16:41] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[16:17:26] <fizzie> (As long as the print function doesn't try to do anything too weird on the FILE *, like call `fileno` on it.)
[16:17:34] *** Quits: rundown (~eb0t@90.199.165.149) (Ping timeout: 258 seconds)
[16:17:59] <SoF> fizzie perfect! I'll try that, thanks a lot
[16:19:07] <sham1> One could also note that open_memstream is also part of the TR 24731-2:2010, but yeah, it's not in the actual C standard
[16:19:20] <fizzie> ,cc char *buf = 0; size_t len = 0; FILE *f = open_memstream(&buf, &len); fputs("some stuff", f); fclose(f); fwrite(buf, 1, len, stdout);
[16:19:25] <candide> fizzie: some stuff
[16:19:31] *** Joins: rundown (~eb0t@90.198.61.154)
[16:19:56] <dave0> hmm handy
[16:20:17] <SoF> oh lol
[16:20:28] <SoF> I was confused why that ,cc didn't do anything
[16:20:57] <fizzie> ,cc char *buf = 0; size_t len = 0; FILE *f = open_memstream(&buf, &len); printf("%d", fileno(f)); // out of curiosity...
[16:21:00] <candide> fizzie: -1
[16:21:03] <fizzie> Fair enough.
[16:21:20] <dave0> i can't believe it's not undefined behaviour!
[16:21:48] <sham1> Well why would it be, -1 is a completely valid invalid value for a UNIX file descriptor
[16:23:46] <dave0> oops fileno returning -1 means error
[16:24:18] *** Quits: phao (~phao@2804:d45:8e7a:de00:b8c0:324d:dc9:1e1c) (Quit: Leaving)
[16:25:18] <sham1> Now I just wish the ISO did a TR that introduces either funopen or fopencookie and see about half of the people lose their minds over their preferred function not being chosen
[16:26:09] *** Joins: marcello42 (~mp@p200300dfaf0f5a01bb353528c1bb1373.dip0.t-ipconnect.de)
[16:26:36] <sham1> It'd be already controversial enough if POSIX chose one or the other, so it'd be fun to watch the world burn
[16:27:12] <fizzie> Clearly the logical solution is to come up with something called `fopenfun` instead, compatible with neither.
[16:27:38] <pragma-> markand: bpa.st seems to be working
[16:28:18] *** Quits: iomari891 (~iomari891@105.112.138.38) (Ping timeout: 258 seconds)
[16:28:55] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 252 seconds)
[16:30:11] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Quit: jmiehe)
[16:30:59] <markand> ah yes, wasn't this morning though
[16:32:28] *** Joins: iomari891 (~iomari891@105.112.138.38)
[16:32:28] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[16:33:57] *** Joins: ormaaj2 (~ormaaj2@user/ormaaj)
[16:33:58] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 260 seconds)
[16:37:55] <sham1> fizzie: that would certainly be the standard way, although in this case it'd probably be fine because it'd be a subset most likely
[16:38:42] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[16:40:12] *** Quits: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net) (Remote host closed the connection)
[16:40:28] *** Joins: dogbert2 (~Bill@ip68-105-189-91.lv.lv.cox.net)
[16:41:25] *** Joins: NEYi (~NEYi@109.251.216.38)
[16:44:41] *** Quits: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883) (Ping timeout: 245 seconds)
[16:45:56] *** Joins: GenTooMan (~cyberman@2601:547:437f:e5c6:21f:5bff:fefe:a883)
[16:46:40] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[16:47:15] *** Joins: V-T60 (~v@91.203.24.166)
[16:51:30] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[16:52:09] *** Joins: Macuser (~Macuser@216.30.159.201)
[16:53:21] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[16:54:07] *** Joins: mad_enz (~mad_enz@cpe00508b114c3e-cm788df7e75290.cpe.net.fido.ca)
[16:54:53] <foxtober> c
[16:55:04] *** Parts: foxtober (cammy@user/cammy) (UwU)
[16:56:37] *** Joins: davidfetter_work (~davidfett@2601:640:4100:7e0:3123:1d6d:580:c406)
[16:58:25] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Remote host closed the connection)
[17:01:22] *** Quits: davidfetter_work (~davidfett@2601:640:4100:7e0:3123:1d6d:580:c406) (Ping timeout: 252 seconds)
[17:02:54] *** Quits: kashyaprushi (~kashyapru@49.36.103.188) (Ping timeout: 260 seconds)
[17:03:16] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[17:03:49] <ioxzev1z> It's actually C.
[17:05:05] *** Joins: xiongxin (~quassel@113.116.32.4)
[17:07:30] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[17:08:03] *** Joins: kawics11 (~ta@catv-89-134-198-57.catv.broadband.hu)
[17:09:19] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 258 seconds)
[17:09:19] *** Quits: mniip (mniip@libera/staff/mniip) (Remote host closed the connection)
[17:09:20] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[17:09:40] *** Joins: de-facto_ (~de-facto@user/de-facto)
[17:09:42] *** Quits: marcello42 (~mp@p200300dfaf0f5a01bb353528c1bb1373.dip0.t-ipconnect.de) (Ping timeout: 258 seconds)
[17:09:49] *** Joins: semeion (~semeion@user/semeion)
[17:10:06] *** Quits: de-facto (~de-facto@user/de-facto) (Ping timeout: 276 seconds)
[17:12:33] *** de-facto_ is now known as de-facto
[17:14:12] *** Joins: mniip (~mniip@libera/staff/mniip)
[17:15:28] *** Joins: markb1 (~markb1@2600:1700:eb40:7ecf:4def:4e95:4385:6486)
[17:16:27] *** Joins: segfault (~annada@103.160.128.31)
[17:17:22] *** Quits: astronaut (~annada@103.160.128.31) (Ping timeout: 260 seconds)
[17:17:44] *** Quits: humky (~humky@user/humky) (Quit: Leaving)
[17:18:05] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[17:18:05] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[17:18:05] *** Joins: wroathe (~wroathe@user/wroathe)
[17:19:49] *** Quits: V-T60 (~v@91.203.24.166) (Quit: Leaving.)
[17:30:10] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[17:31:17] *** Joins: phao (~phao@2804:d45:8e7a:de00:b112:8eb3:d962:39a0)
[17:32:18] *** Quits: Xeha (~Xeha@dynamic-82-220-88-142.ftth.solnet.ch) (Ping timeout: 260 seconds)
[17:32:19] *** Joins: magla (~gelignite@55d47f25.access.ecotel.net)
[17:32:52] *** Quits: gxt_ (~gxt@gateway/tor-sasl/gxt) (Remote host closed the connection)
[17:33:24] *** Joins: gxt_ (~gxt@gateway/tor-sasl/gxt)
[17:33:42] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[17:34:14] *** Quits: brad_mssw (~bhouse@2601:344:4100:b490:f5bf:e85e:a38b:ce7) (Ping timeout: 258 seconds)
[17:34:18] *** Joins: brad_mssw|mac (~bhouse@2601:344:4100:b490:b8a8:ea7f:8172:c8f)
[17:34:24] *** Joins: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net)
[17:35:34] *** Quits: kawics11 (~ta@catv-89-134-198-57.catv.broadband.hu) (Ping timeout: 260 seconds)
[17:37:19] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[17:37:41] *** Quits: DPA (~DPA@2a05:41c0:4:604::a3c:10d) (Ping timeout: 258 seconds)
[17:38:55] *** Quits: jmiehe1 (~Thunderbi@user/jmiehe) (Client Quit)
[17:40:33] *** Joins: fossforus (~stan@99-173-128-32.lightspeed.rlghnc.sbcglobal.net)
[17:40:48] *** Quits: xiongxin (~quassel@113.116.32.4) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[17:41:34] *** Joins: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com)
[17:44:25] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[17:44:45] *** Quits: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net) (Ping timeout: 260 seconds)
[17:45:20] *** Quits: rdz1789 (~rdz1789@139.47.40.241) (Ping timeout: 260 seconds)
[17:46:45] *** Quits: CodePoint (~CodePoint@107-208-128-79.lightspeed.tukrga.sbcglobal.net) (Quit: CodePoint)
[17:48:48] *** Joins: ravan (~ravan@user/ravan)
[17:49:56] *** Joins: quartz (~quartz@user/quartz)
[17:50:25] *** Joins: DPA (~DPA@2a05:41c0:4:604::a3c:10d)
[17:50:39] *** Quits: dave0 (~davezero@069.d.003.ncl.iprimus.net.au) (Quit: dave's not here)
[17:50:41] *** Joins: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net)
[17:50:41] *** Quits: wroathe (~wroathe@c-68-54-25-135.hsd1.mn.comcast.net) (Changing host)
[17:50:41] *** Joins: wroathe (~wroathe@user/wroathe)
[17:51:03] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Ping timeout: 276 seconds)
[17:53:02] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:55:15] *** Quits: wroathe (~wroathe@user/wroathe) (Ping timeout: 260 seconds)
[17:56:46] *** Joins: Macuser (~Macuser@216.30.159.201)
[17:57:28] *** Quits: DPA (~DPA@2a05:41c0:4:604::a3c:10d) (Ping timeout: 252 seconds)
[18:00:00] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Quit: AA TOO NEE ZUBARALHADEEEEEEEEEEEED)
[18:00:18] *** Quits: alch (~alch@151.46.81.254) (Ping timeout: 260 seconds)
[18:02:04] *** Joins: alch (~alch@151.46.43.176)
[18:02:10] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[18:02:47] *** Joins: DPA (~DPA@2a05:41c0:4:604::a3c:10d)
[18:02:51] *** Quits: SGautam (uid286066@id-286066.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[18:03:06] *** Joins: davidfetter_work (~davidfett@c-73-241-222-148.hsd1.ca.comcast.net)
[18:04:28] *** cross_ is now known as cross
[18:05:47] *** Joins: aniruddha (uid340443@id-340443.ilkley.irccloud.com)
[18:09:34] *** Quits: DPA (~DPA@2a05:41c0:4:604::a3c:10d) (Ping timeout: 252 seconds)
[18:09:50] *** Joins: rgrinberg (~textual@ip152-195-159-186.ct.co.cr)
[18:11:27] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[18:12:18] *** Quits: relight (~relight@user/relight) (Quit: Konversation terminated!)
[18:14:18] *** Joins: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net)
[18:15:31] *** Joins: SGautam (uid286066@id-286066.ilkley.irccloud.com)
[18:21:46] *** Quits: wovixo (~wovixo@128.104.205.49) (Read error: Connection reset by peer)
[18:21:46] *** Quits: segnior (segnior@user/segnior) (Ping timeout: 252 seconds)
[18:25:00] *** Joins: segnior (segnior@user/segnior)
[18:27:22] *** Joins: paulmcquad (~gamer@78.17.229.141)
[18:29:36] *** Joins: V-T60 (~v@91.203.24.166)
[18:31:56] *** Joins: zmt00 (~zmt00@user/zmt00)
[18:36:50] *** Joins: ldericher (~LDer@pantalaimon.yavook.de)
[18:41:32] *** Quits: dsrt^ (~dsrt@wsip-68-227-92-38.mc.at.cox.net) (Remote host closed the connection)
[18:41:57] *** Quits: almaember_ (~almaember@178-164-219-221.pool.digikabel.hu) (Quit: Leaving)
[18:48:41] *** Joins: Laurenceb (~Laurenceb@56.184.147.147.dyn.plus.net)
[18:48:55] *** Quits: PublicWifi (~PublicWiF@user/publicwifi) (Ping timeout: 260 seconds)
[18:53:20] *** Joins: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar)
[18:55:21] *** Joins: elkalamar__ (elkalamar@gateway/vpn/airvpn/elkalamar)
[18:56:08] *** Joins: Oxfuxxx (~oxfuxxx@5.253.207.198)
[18:56:11] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 264 seconds)
[18:58:15] *** Quits: elkalamar_ (elkalamar@gateway/vpn/airvpn/elkalamar) (Ping timeout: 260 seconds)
[18:58:37] <sysRPL> hello
[18:58:39] <sysRPL> is anyone here familiar with linking to c runtime (msvcrt for example) using mingw?
[18:59:02] <sysRPL> i am building a c library (nanovg) using mingw kicking out obj files, but when i link those obj files to fpc (the free pascal compiler) it errors out unknown references to c runtion functions like fopen, malloc and so on
[18:59:36] <sysRPL> even though with fpc i am also linking to msvcrt
[19:00:11] *** Joins: rdz1789 (~rdz1789@139.47.40.241)
[19:02:50] *** Joins: PublicWifi (~PublicWiF@user/publicwifi)
[19:05:29] *** Quits: brettgilio (~brettgili@x-node.gq) (Quit: Leaving...)
[19:06:25] *** Quits: random-nick (~random-ni@87.116.183.63) (Read error: Connection reset by peer)
[19:09:33] *** Joins: random-nick (~random-ni@87.116.183.63)
[19:10:06] *** Joins: brettgilio (~brettgili@x-node.gq)
[19:10:48] *** Telvana2 is now known as Telvana
[19:11:23] <quartz> Can anyone tell me what they are doing at line 30? https://bpa.st/7UHQ   I think the function "get_malloc_size()" is suppose to store the size of each char string in words in a char pointer?
[19:13:06] *** Quits: boB_K7IQ (~boB_K7IQ@c-24-19-3-104.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[19:14:45] *** Joins: Alhazred (~Alhazred@s91904425.blix.com)
[19:15:01] <vdamewood> quartz: It doesn't look like it's supposed to store anything, just return the size you need to pass to malloc to store a copy of the string.
[19:17:10] <paulmcquad> quartz: https://github.com/PCJ600/MallocLab/blob/master/mm.c + 625
[19:18:49] <vdamewood> paulmcquad: I doubt that's helpful.
[19:19:18] <vdamewood> paulmcquad: Did you see line 7 in quartz's paste?
[19:19:21] <quartz> paulmcquad: No idea what that is
[19:19:53] <vdamewood> quartz: It's a code base that coincidentally used the same name for a function.
[19:19:54] *** Quits: rdz1789 (~rdz1789@139.47.40.241) (Remote host closed the connection)
[19:20:32] <floatcomplex> quartz: yeah your prof just wants you to count the strlen's and whatnot
[19:20:45] <floatcomplex> poorly named function
[19:20:56] <floatcomplex> should be called calculate_required_size() or something
[19:21:03] <quartz> Hahaha
[19:21:10] <vdamewood> get_aagregate_size maybe?
[19:21:16] <vdamewood> agregate
[19:21:16] <floatcomplex> no there is no get_
[19:21:29] <floatcomplex> get_ implies someone else has calculated something for you
[19:21:49] <floatcomplex> like, as paulmcquad assumed, libc
[19:21:57] *** Joins: kuber (~kuber@97-113-79-225.tukw.qwest.net)
[19:22:01] <quartz> But result is a char array pointer, which means it will store in each element the size in bytes of each string?
[19:22:22] <floatcomplex> quartz: yeah but there's one malloc in the whole program and you need to know what size to pass to it
[19:22:37] <vdamewood> So your function will return a size_t.
[19:23:13] *** Quits: NEYi (~NEYi@109.251.216.38) (Quit: Leaving)
[19:23:52] *** Quits: magla (~gelignite@55d47f25.access.ecotel.net) (Quit: Stay safe!)
[19:24:00] <quartz> So, the size_t will be the malloc size of copy and each individual string pointer?
[19:24:06] <quartz> Stored in that char array
[19:24:09] <quartz> result
[19:24:25] <vdamewood> No. size_t is just a count of bytes.
[19:24:41] <quartz> Ohhhh
[19:24:45] <quartz> Wow I was confused.
[19:24:57] *** Joins: FH_thecat (~FH_thecat@75.11.25.212.ftth.as8758.net)
[19:25:31] <quartz> So result just holds to total number of bytes needed to store copy and each of it's strings?
[19:26:10] *** Joins: koo6 (~koo6@89-24-13-235.customers.tmcz.cz)
[19:26:17] <vdamewood> Well, just the copy, but the copy is a copy of every string added together.
[19:26:53] <vdamewood> So, if you have "Hello", "World", the copy is going to be "Hello\0World\0"
[19:29:53] *** Quits: V-T60 (~v@91.203.24.166) (Quit: Leaving.)
[19:30:37] <floatcomplex> or whatever bs pascal encoding that uses the same number of bytes as that
[19:31:09] <floatcomplex> ...plus possibly additional space for an array of character pointers, if you're supposed to copy argv itself?
[19:31:52] <floatcomplex> idk this whole thing with pascal strings in c is just a weird thing to have in play when you're trying to learn how to use malloc and toupper
[19:33:32] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[19:36:14] *** Joins: PaulePanter (~paul@mail.gw90.de)
[19:36:26] *** Quits: Alhazred (~Alhazred@s91904425.blix.com) (Ping timeout: 260 seconds)
[19:37:05] *** Quits: justHaunt (~justache@user/justache) (Read error: Connection reset by peer)
[19:37:27] *** Quits: Inline (~Inline@2a02:908:1252:7a80:89dc:6a58:9f2a:ff3d) (Quit: Leaving)
[19:37:39] *** Joins: justHaunt (~justache@user/justache)
[19:38:16] *** Joins: Alhazred (~Alhazred@130.245.70.44)
[19:38:21] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[19:38:22] <quartz> Uhhh
[19:38:34] <PaulePanter> Hi. https://bpa.st/YYRA
[19:38:59] <sham1> Your LDFLAGS is in the wrong place
[19:39:08] <PaulePanter> Why does using `make` with LDFLAGS not work, and `-lm` has to be specified at the end (with GCC). Order does not seem to matter for clang.
[19:39:48] <sham1> Also I've usually seen things like -lm being in LIBS instead of LDFLAGS, which would have stuff more like -L/path/to/libs
[19:39:54] <sham1> Or other linker options
[19:40:34] *** Quits: dutch (~DutchIngr@user/dutch) (Quit: WeeChat 3.3)
[19:42:26] *** Joins: superboot (~agentgasm@user/superboot)
[19:43:34] <PaulePanter> sham1: Thank you. Default make (with no Makefile) does not seem to support LIBS.
[19:43:45] <floatcomplex> LDLIBS
[19:43:47] <floatcomplex> not LIBS
[19:44:05] <sham1> Oh, LIBS is a GNU coding standard thing
[19:44:13] <sham1> Yeah, LDLIBS it is then
[19:45:22] <sham1> …at least I think I remember seeing LIBS being used. Oh well
[19:45:39] *** Joins: V-T60 (~v@91.203.24.166)
[19:46:23] <floatcomplex> i usually put optimization and architecture stuff that modern compilers and linkers both need to know about in CFLAGS, do LDFLAGS+=${CFLAGS}, and put stuff that should be passed to the compiler but not the linker in CPPFLAGS
[19:46:28] *** Joins: dutch (~DutchIngr@user/dutch)
[19:46:39] <floatcomplex> which means "c preprocessor flags", not "c++ flags"
[19:46:48] <sham1> Yeah, C++ flags would be CXXFLAGS
[19:47:11] <floatcomplex> and then LDLIBS has teh actual -lwhatever it needs
[19:47:12] <sham1> But that's interesting, I suppose LTO and such might benefit from knowing the CFLAGS as well as the LDFLAGS
[19:47:31] <floatcomplex> yeah both compiler and linker need to know about LTO if you're gonna use it
[19:47:46] <floatcomplex> but the linker will bitch if you pass it -Wshadow :)
[19:47:49] <PaulePanter> LDLIBS worked. Thank you.
[19:48:40] *** Quits: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[19:48:44] *** Joins: ghosteau (~cousteau@user/cousteau)
[19:49:17] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[19:49:34] *** Joins: Inline (~Inline@2a02:908:1252:7a80:89dc:6a58:9f2a:ff3d)
[19:49:35] *** Quits: jmiehe (~Thunderbi@user/jmiehe) (Ping timeout: 260 seconds)
[19:52:21] *** Quits: Oxfuxxx (~oxfuxxx@5.253.207.198) (Quit: Never underestimate the power of the butt..[]X/O...ON. (Playst...i mean.. Pir@tA$$))
[19:54:20] *** Quits: V-T60 (~v@91.203.24.166) (Quit: Leaving.)
[19:59:09] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com)
[20:00:16] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[20:00:48] *** Joins: kish` (~aqua@user/aqua)
[20:01:09] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[20:04:06] *** Quits: coruja (~coruja@user/coruja) (Quit: ZNC 1.8.2 - https://znc.in)
[20:05:46] *** Joins: magla (~gelignite@55d47f25.access.ecotel.net)
[20:06:08] *** Quits: phao (~phao@2804:d45:8e7a:de00:b112:8eb3:d962:39a0) (Quit: Leaving)
[20:06:30] *** Quits: Arthuria (~Arthuria@user/arthuria) (Ping timeout: 260 seconds)
[20:06:49] *** trav65996 is now known as travankor
[20:09:28] *** Joins: bart (~bart@68.239.44.122)
[20:10:44] *** Quits: smlavine (~smlavine@sourcehut/user/smlavine) (Quit: nyaa~)
[20:10:58] *** Quits: makersmasher (~makersmas@097-092-244-194.res.spectrum.com) (Ping timeout: 260 seconds)
[20:11:35] <fizzie> LOADLIBES ;)
[20:11:47] <tk> yeah, where did that come from?
[20:11:47] <floatcomplex> creat()
[20:11:55] *** Quits: bart (~bart@68.239.44.122) (Remote host closed the connection)
[20:12:00] <floatcomplex> which implies the existence of cre() in older kernels
[20:12:07] <tk> is it Load Lib'es (libraries)?
[20:12:51] *** Joins: Lenovo (~Lenovo@86.228.71.37.rev.sfr.net)
[20:12:55] <Lenovo> exit
[20:12:57] *** Quits: Lenovo (~Lenovo@86.228.71.37.rev.sfr.net) (Quit: leaving)
[20:12:57] *** Joins: coruja (~coruja@user/coruja)
[20:13:21] <fizzie> That's what I've assumed, but I don't know the historical context.
[20:13:35] <fizzie> https://www.gnu.org/software/make/manual/html_node/Implicit-Variables.html just says "LOADLIBES is a deprecated (but still supported) alternative to LDLIBS", without explaining more.
[20:14:47] *** Quits: BSaboia (~bsaboia@187.19.138.198) (Quit: This computer has gone to sleep)
[20:17:37] <ghosteau> I also want to know where that E comes from 
[20:18:32] <ghosteau> ...or LOAD, for that matter.  Does ld mean "load"?  I thought it was "library d...something" 
[20:18:44] <ghosteau> Or "link d...whatever" 
[20:21:20] <slidercrank> https://softwareengineering.stackexchange.com/questions/226573/why-is-the-unix-linker-called-ld
[20:21:43] <slidercrank> > Wikipedia mentions that there are different theories, one is "loader" one is "link editor".
[20:21:53] *** Joins: anon16_ (~anon16_@user/anon16)
[20:22:07] *** Quits: strajder (~strajder@user/strajder) (Quit: leaving)
[20:22:58] *** Quits: Alhazred (~Alhazred@130.245.70.44) (Quit: leaving)
[20:23:19] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[20:23:47] *** Joins: wovixo (~wovixo@128.104.205.49)
[20:24:31] <ghosteau> slidercrank: oh interesting.  So according to one Jeff Dunteman, linkers used to be called "loaders" 
[20:24:51] *** Quits: mrig (~AdiIRC@user/mrig) (Quit: Going offline, see ya! (www.adiirc.com))
[20:25:18] <ghosteau> And maybe "libes" was slang for "libraries" 
[20:29:38] *** Quits: KevinX_ (~KevinX@94.140.11.212) (Ping timeout: 260 seconds)
[20:30:51] <floatcomplex> nerds
[20:30:55] *** Joins: KevinX (~KevinX@c-71-200-222-150.hsd1.fl.comcast.net)
[20:32:40] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:35:34] *** Joins: boB_K7IQ (~boB_K7IQ@152.44.147.180)
[20:37:48] *** Joins: strajder (~strajder@user/strajder)
[20:41:18] *** Quits: dec0d3r (~dec0d3r@2001:8003:480a:e00:e07:e7c3:7efc:ed0f) (Remote host closed the connection)
[20:43:14] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[20:43:59] *** Joins: malina (~malina@user/malina)
[20:45:25] *** Quits: Laurenceb (~Laurenceb@56.184.147.147.dyn.plus.net) (Quit: Client closed)
[20:45:58] *** Quits: ghosteau (~cousteau@user/cousteau) (Ping timeout: 260 seconds)
[20:49:13] *** Joins: NEYi (~NEYi@109.251.216.38)
[20:51:06] *** Quits: haliucinas (~haliucina@5.20.153.21) (Remote host closed the connection)
[20:52:30] *** Quits: malina (~malina@user/malina) (Ping timeout: 260 seconds)
[20:53:04] *** Joins: malina (~malina@user/malina)
[20:53:40] *** Joins: ckdCreations (~ckdCreati@147.55.133.129)
[20:53:50] *** Joins: haliucinas (~haliucina@5.20.153.21)
[20:54:14] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[20:54:56] *** Quits: ckdCreations (~ckdCreati@147.55.133.129) (Client Quit)
[20:55:02] *** Joins: ioxzev1z (~ioxzev1z@user/ioxzev1z)
[20:55:21] *** Joins: ckdCreations (~ckdCreati@147.55.133.129)
[20:56:24] *** Quits: rgrinberg (~textual@ip152-195-159-186.ct.co.cr) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:58:49] *** Joins: rgrinberg (~textual@201.182.226.118)
[20:59:20] *** Quits: quartz (~quartz@user/quartz) (Quit: WeeChat 3.3)
[21:04:58] *** Quits: varaindemian (uid73404@id-73404.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[21:07:24] *** Joins: tiotags (~tiotags@user/tiotags)
[21:08:20] *** Quits: anon16_ (~anon16_@user/anon16) (Ping timeout: 260 seconds)
[21:10:47] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[21:12:46] *** Quits: nyah (~nyah@bcdcb6e3.skybroadband.com) (Remote host closed the connection)
[21:14:01] <tk> I love mystery acronyms
[21:14:14] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Ping timeout: 268 seconds)
[21:14:20] <tk> I like to give my projects mystery acronyms, not tell anyone what the acronym stands for and half the time forget myself what it meant
[21:17:11] *** Quits: slidercrank (~slidercra@user/slidercrank) (Quit: Why not ask me about Sevastopol's safety protocols?)
[21:17:57] *** Joins: moheb2000 (~moheb2000@5.126.58.227)
[21:18:38] *** Quits: moheb2000 (~moheb2000@5.126.58.227) (Client Quit)
[21:20:28] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[21:20:42] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-c9f6-05fd-7a87-ea36.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[21:21:20] *** Quits: vaio (~gary@user/ghost) (Remote host closed the connection)
[21:21:50] *** Joins: vaio (~gary@user/ghost)
[21:22:48] *** Joins: anon16_ (~anon16_@user/anon16)
[21:23:37] *** Quits: LucaTM (~LucaTM@user/lucatm) (Ping timeout: 265 seconds)
[21:24:02] *** Quits: ckdCreations (~ckdCreati@147.55.133.129) (Read error: Connection reset by peer)
[21:26:44] *** Joins: odoood (~odoood@2601:c8:c003:a550::3)
[21:26:59] *** Joins: ghenry (~ghenry@ghenry.plus.com)
[21:29:17] *** Joins: ckdCreations (~ckdCreati@147.55.133.137)
[21:29:54] *** Joins: V-T60 (~v@91.203.24.166)
[21:34:44] *** Quits: novns (~novns@user/novns) (Quit: ZNC 1.8.2 - https://znc.in)
[21:35:13] *** Joins: novns (~novns@user/novns)
[21:39:25] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-848c-99f6-3ab2-978a.res6.spectrum.com)
[21:40:53] *** Joins: LucaTM (~LucaTM@user/lucatm)
[21:58:32] *** Quits: alch (~alch@151.46.43.176) (Read error: Connection reset by peer)
[21:59:01] *** Quits: dmaroo (~dhruv@2409:4070:460b:9408:8e30:2acf:1083:9872) (Quit: Konversation terminated!)
[22:02:26] *** Joins: alch (~alch@151.82.187.18)
[22:03:24] *** Quits: Albright_ (~Albright@149.28.13.173) (Quit: ZNC 1.8.2 - https://znc.in)
[22:03:45] *** Joins: Albright (~Albright@2001:19f0:8001:ca4:e869:f825:7a69:95be)
[22:04:05] *** Quits: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6) (Quit: Leaving)
[22:06:21] *** Joins: nostar (~nostar@2601:406:4100:34d:8f4:5ea7:30b2:b7e6)
[22:08:25] *** Quits: Thedarkb-Desktop (~Thedarkb@2001:bb6:b403:e042:578:ceb9:f02:de27) (Remote host closed the connection)
[22:08:47] *** Joins: tradar (~tradar@user/tradar)
[22:11:20] *** Quits: _nightw0lf (~nightw0lf@77.125.126.63) (Quit: leaving)
[22:16:39] *** Joins: RandomGuy (~RandomBlo@user/randombloke)
[22:18:36] *** Joins: reset (~reset@user/reset)
[22:21:22] *** Quits: hnOsmium0001 (uid453710@id-453710.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[22:26:40] *** Quits: brad_mssw|mac (~bhouse@2601:344:4100:b490:b8a8:ea7f:8172:c8f) (Quit: This computer has gone to sleep)
[22:28:26] *** Quits: ymas (~quassel@user/ymas) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:28:59] *** Joins: reumeth (~reumeth@user/reumeth)
[22:29:35] *** Parts: RandomGuy (~RandomBlo@user/randombloke) (Leaving)
[22:33:02] *** Joins: brad_mssw|mac (~bhouse@c-76-106-206-149.hsd1.fl.comcast.net)
[22:33:51] *** Quits: hentai (~hentai@user/hentai) (Remote host closed the connection)
[22:34:02] *** Quits: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-848c-99f6-3ab2-978a.res6.spectrum.com) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:34:09] *** Joins: hentai (~hentai@2a01:e0a:a5c:a070:bf4b:d0ec:1d9e:8893)
[22:34:09] *** Quits: hentai (~hentai@2a01:e0a:a5c:a070:bf4b:d0ec:1d9e:8893) (Changing host)
[22:34:09] *** Joins: hentai (~hentai@user/hentai)
[22:37:03] *** Joins: slidercrank (~slidercra@user/slidercrank)
[22:38:36] *** Joins: Akuli (~Akuli@87-94-108-97.bb.dnainternet.fi)
[22:41:17] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:42:02] *** Joins: deavmi_ (~tbk@user/deavmi)
[22:42:26] *** Quits: deavmi (~tbk@user/deavmi) (Read error: Connection reset by peer)
[22:43:11] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[22:43:21] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[22:46:43] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-848c-99f6-3ab2-978a.res6.spectrum.com)
[22:49:50] *** Joins: soapsudsxx (~soapsudsx@209.221.40.137)
[22:50:22] *** Joins: smlavine (~smlavine@sourcehut/user/smlavine)
[22:50:25] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 260 seconds)
[22:50:58] *** Joins: nyarmith (~reader@pool-72-95-220-156.pitbpa.fios.verizon.net)
[22:51:56] *** Quits: tradar (~tradar@user/tradar) (Quit: tradar)
[22:51:59] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[22:52:10] *** Quits: highrate (~presonic@24-0-237-24.gci.net) (Ping timeout: 260 seconds)
[22:52:15] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Remote host closed the connection)
[22:52:17] *** Joins: Crescendo (~Crescendo@user/crescendo)
[22:54:20] *** Joins: pulse (~pulse@user/pulse)
[22:59:08] *** Quits: paulmcquad (~gamer@78.17.229.141) (Quit: Konversation terminated!)
[23:00:36] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[23:01:28] *** Quits: ioxzev1z (~ioxzev1z@user/ioxzev1z) (Quit: Leaving)
[23:01:50] *** Joins: Crescendo (~Crescendo@user/crescendo)
[23:03:07] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[23:03:10] *** Quits: rgrinberg (~textual@201.182.226.118) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:05:18] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[23:05:47] *** Quits: kuber (~kuber@97-113-79-225.tukw.qwest.net) (Quit: leaving)
[23:06:57] *** Joins: DPA (~DPA@2a05:41c0:1:f604::a3c:10d)
[23:07:18] *** Quits: chiselfuse (~chiselfus@user/chiselfuse) (Client Quit)
[23:08:03] *** Joins: chiselfuse (~chiselfus@user/chiselfuse)
[23:13:10] *** Quits: semeion (~semeion@user/semeion) (Ping timeout: 260 seconds)
[23:13:29] *** Quits: DPA (~DPA@2a05:41c0:1:f604::a3c:10d) (Ping timeout: 258 seconds)
[23:15:55] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[23:16:59] *** Quits: aradesh (~aradesh@user/aradesh) (Quit: WeeChat 1.9.1)
[23:17:40] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:18:40] *** Quits: riksteri (riksteri@gateway/vpn/airvpn/riksteri) (Quit: riksteri)
[23:20:13] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[23:20:36] *** Joins: kitsunenokenja (~kitsunech@68.91.220.96)
[23:22:05] *** Quits: mountaingoat (~mountaing@user/mountaingoat) (Read error: Connection reset by peer)
[23:23:20] *** Joins: jmiehe1 (~Thunderbi@user/jmiehe)
[23:23:29] *** Joins: Raguile (~Raguile@user/raguile)
[23:24:03] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[23:25:38] <ntwk> A cryptonym.
[23:25:39] *** jmiehe1 is now known as jmiehe
[23:26:00] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Ping timeout: 260 seconds)
[23:26:27] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[23:26:44] *** Joins: semeion (~semeion@user/semeion)
[23:37:02] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[23:37:03] *** Joins: mountaingoat (~mountaing@user/mountaingoat)
[23:37:20] *** Joins: quartz (~quartz@user/quartz)
[23:37:22] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[23:38:55] *** Joins: LTCD (~LTCD@2a02:c7f:dd1c:b600:9d57:cb99:96bb:6b1)
[23:39:59] <LTCD> Hey. At the moment I am using define to ifdef for my debugging code, that is to display output only when DEBUG is defined. It is annoying though, that one printf() statement is taking up 3 lines of ugly code. Is there another approach?
[23:40:50] <fizzie> Sure, you can have a macro like `DEBUG_PRINTF` that expands into a printf statement or a null statement, depending.
[23:41:38] <LTCD> fizzie But how would it take input arguments? Also, when it's no longer defined how does your null statement work?
[23:41:48] <fizzie> #ifdef DEBUG \n #define DEBUG_PRINTF(...) printf(__VA_ARGS__) \n #else \n #define DEBUG_PRINTF /* nothing */ \n #endif
[23:43:01] <fizzie> That part goes in a header file; then at the call site it's just `DEBUG_PRINTF("oh no: %d", 123);`.
[23:43:11] <fizzie> A null statement is legal in exactly the same places as an expression statement is.
[23:45:08] <LTCD> Wow, that is pretty amazing.
[23:45:24] <LTCD> Thanks bro, I will check this out now.
[23:45:50] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 260 seconds)
[23:45:50] *** Joins: serbest (~serbest@user/serbest)
[23:47:32] *** Joins: sysRPN (~sysRPN@097-101-210-085.res.spectrum.com)
[23:48:13] <sysRPN> hi, can someone help me? i am trying to use visual studio and it ALWAYS wants precompiled headers, even when i turn them offf
[23:48:47] <sysRPN> this is interfereing with some header files i want to use, aso i want pch OFF, but it wont turn off and i have no idea what to try next
[23:49:16] <sysRPN> Error	C1010	unexpected end of file while looking for precompiled header. Did you forget to add '#include "pch.h"' to your source?
[23:50:22] *** Quits: battousai (~i.am@177.156.122.167) (Quit: I come down here for a fat woman and that's what I'm havin.)
[23:50:25] *** Joins: nyah (~nyah@bcdcb6e3.skybroadband.com)
[23:50:37] <sysRPN> i have set ... Properties -> C++ -> Precompiled Header : Not Using Precompiled Headers
[23:50:58] *** Joins: mikoto-chan (~mikoto-ch@185.237.102.126)
[23:53:25] *** Quits: constxd (~brad@192.75.101.164) (Ping timeout: 260 seconds)
[23:53:37] <LTCD> fizzie Would I need to add a semicolon anywhere?
[23:55:42] <asd> sysRPN: does VS even support C? also i think you should check with #workingset or w/e they are called
