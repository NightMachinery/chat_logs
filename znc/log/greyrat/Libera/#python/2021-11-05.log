[00:02:24] <Repiphany> FWIW, unpacking like `{**{fruit: apple, car: honda}, **{fruit:pear, car:honda}}` would do what you want for the two dictionaries you wanted merged
[00:04:09] <summonner> dman777, m = dict() ;  [m.update(t) for t in x + y]     where x = first list, y = second list
[00:04:22] <summonner> it overwrites apple though
[00:04:52] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[00:05:43] <summonner> oh actually nah, doesn't give you what you want. gives you: {'fruit': 'pear', 'car': 'honda', 'food': 'bar', 'tar': 'baz'}
[00:06:09] <jinsun> (and a unnessary list of Nones)
[00:06:58] *** Quits: darksun (~darksun@user/darksun) (Quit: leaving)
[00:09:50] *** Quits: CB_JD (~Code_Bleu@user/code-bleu/x-6939963) (Ping timeout: 260 seconds)
[00:11:38] *** Joins: krjst (~krjst@2604:a880:800:c1::16b:8001)
[00:11:44] *** Quits: brabrax (~brabrax@user/brabrax) (Quit: ZNC 1.8.2 - https://znc.in)
[00:12:38] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[00:13:00] *** Joins: stwange (~j@82.21.202.140)
[00:13:35] <stwange> Hey, sorry for the newbie question I'm pretty new to Python. I'm wrapping my code in a try: except: but one exception keeps getting through, what am I doing wrong? https://pastebin.com/ywhZVjwg
[00:14:18] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:741e:aa2:93cd:f25e)
[00:14:29] <dman777> [x,y for x,y in zip(foo, bar)] is something like this possible?
[00:14:37] <hexology> Repiphany: that't how i usually do it. in 3.10+ we now have the `|` operator for that
[00:14:44] <grym> dman777: that's just list(zip(foo,bar))
[00:14:45] *** Joins: brabrax (~brabrax@user/brabrax)
[00:15:01] <hexology> dman777: [(x,y) for x,y in zip(foo, bar)]
[00:15:19] <hexology> inside a comprehension, you need the ()s to eliminate parsing ambiguity
[00:15:50] <dman777> how could I do it where it would not be a tupple but a list of objects?
[00:16:28] <grym> [[x,y] for x,y ...
[00:16:31] *** Quits: subho (~subho@2405:201:9001:a0fc:c80b:a3a4:f20b:4488) (Quit: subho)
[00:16:41] <enrh> MyPy don't like unions in instance yet :) error: Argument 2 to "isinstance" has incompatible type "types.Union"
[00:16:50] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Quit: Bye)
[00:16:54] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[00:16:56] <enrh> isinstance(formats, str | list)
[00:17:35] *** Quits: brabrax (~brabrax@user/brabrax) (Client Quit)
[00:17:54] <phy1729> iirc you can isinstance(formats, (str, list)) in the mean time
[00:18:41] <summonner> stwange, did you have this working in a sequential form before rewriting it into async?
[00:18:42] <enrh> Of course
[00:19:08] *** Joins: brabrax (~brabrax@user/brabrax)
[00:19:29] <stwange> summonner, I did, I probably still have the code somewhere. But with this being async it seems to just kill one semaphore at a time (unless I'm mistaken) because after a while it just starts hanging
[00:21:12] <stwange> I could use the sequential library instead but it doesn't seem to fail with a single semaphore, so it probably wouldn't fail with a single thread
[00:22:24] *** Joins: CB_JD (~Code_Bleu@user/code-bleu/x-6939963)
[00:23:11] <summonner> stwange, if you were doing it pre-async - there are a few things odd with the code which need cleaning before I'd attempt async. first is the function steps (func 1 calls func 2 calls func 3 etc).
[00:23:39] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[00:24:02] *** Quits: brabrax (~brabrax@user/brabrax) (Client Quit)
[00:24:48] <summonner> stwange, second is getIPs() - that needs fixing so it uses for instead of while; and make the for to do the chunking
[00:24:52] *** Joins: sniperwolf (~sniperwol@91.230.98.1)
[00:25:12] *** Quits: nomic (~nomic@185.192.69.69) (Quit: Leaving)
[00:25:29] *** Joins: nomic (~nomic@185.192.69.69)
[00:25:29] *** Quits: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il) (Client Quit)
[00:25:30] *** Quits: sleepingforest (~sleepingf@user/sleepingforest) (Ping timeout: 260 seconds)
[00:25:52] *** Joins: yotsuba-chan (~yotsuba@93-172-241-53.bb.netvision.net.il)
[00:25:56] <summonner> stwange, in loadDomains(inFile) use a context manager so you don't need a file.close() operation. after that, when it works, you can go for async
[00:26:14] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 260 seconds)
[00:26:18] <summonner> i think you'll be successful then
[00:26:49] *** Joins: brabrax (~brabrax@user/brabrax)
[00:26:55] *** yotsuba-chan is now known as yotsuba
[00:27:28] <stwange> Thank you summonner I'll give it a try. Is the chunking necessary? I couldn't figure out why it was OOMing if only running 500 at once, but maybe it preloads the functions into memory?
[00:27:38] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-0902-3789-4a79-f643.res6.spectrum.com)
[00:28:52] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[00:29:02] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[00:30:03] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[00:30:14] <summonner> stwange, no, not necessary - you could probably move the output = [get_ips(...   line into the getIPs() to avoid a for loop too as that line will take care of iterating the domains
[00:32:34] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[00:33:19] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[00:33:48] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[00:34:18] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[00:34:35] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[00:36:29] *** Quits: Akuli (~Akuli@82-203-165-175.bb.dnainternet.fi) (Quit: Leaving)
[00:40:45] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[00:41:34] *** Joins: audiobirb (~audio@user/audio)
[00:43:22] *** Quits: Deneb (~johnch@117.111.189.80.dyn.plus.net) (Quit: Leaving)
[00:44:07] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[00:44:13] <dman777> https://dpaste.org/PrcP is there a cleaner way to do this? I am trying to combine lists bar and foo into a new list. But if they have the same fieldname then keep bar's object and skip foo's object
[00:46:00] *** Joins: bloodninja123 (~bloodninj@user/bloodninja)
[00:48:02] *** Joins: Pickchea (~private@user/pickchea)
[00:49:27] *** Joins: Bakunin (~Lindis@user/lindis)
[00:49:58] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 260 seconds)
[00:50:05] <jinsun> dman777: does that actually do what you want? doesn't look right
[00:51:37] *** Joins: df00z (~df00z@cpe-172-101-237-113.rochester.res.rr.com)
[00:52:03] <stwange> Thank you summonner, I think everything is working. It still OOMed if I use output = [(getIPs(....)] \n await asyncio.gather(*output)    but if I get rid of the output variable and the gather line (just [await getIPs(...)]) it works. Thank you so much for your help
[00:52:42] *** Quits: orange (~orangeext@user/orangeextract) (Quit: Leaving)
[00:53:35] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[00:53:54] *** Quits: grooverman (~grooverma@177.102.119.40) (Read error: Connection reset by peer)
[00:55:00] *** Joins: ano (~ano@user/ano)
[00:55:22] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[00:55:49] *** Parts: ErkiS (~opera@85.253.103.121.cable.starman.ee) ()
[00:56:50] *** Joins: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9)
[00:57:06] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[00:57:31] *** Quits: junktext (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 256 seconds)
[00:57:38] *** Joins: ano (~ano@user/ano)
[00:58:08] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:5cec:41b3:fa14:d1ad) (Ping timeout: 256 seconds)
[00:58:26] *** Quits: kyooo (~kyooo@2a02:a31d:a13c:5600:559d:f748:905d:cda9) (Remote host closed the connection)
[01:00:19] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[01:00:33] *** Joins: grooverman (~grooverma@177.102.119.40)
[01:00:35] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[01:02:27] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[01:05:08] *** Quits: LuKaRo (~LuKaRo@p4fc32190.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[01:08:33] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[01:09:34] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[01:10:06] *** Joins: fikran (~fikran@user/fikran)
[01:10:20] *** Quits: slav0nic (slav0nic@python.su) (Remote host closed the connection)
[01:10:53] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[01:11:07] *** Joins: LuKaRo (~LuKaRo@p5deda91b.dip0.t-ipconnect.de)
[01:13:09] *** Quits: Elzington_ (~Elzington@68.235.43.78) (Quit: Leaving)
[01:13:10] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[01:13:39] *** Joins: Pandadub (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[01:14:06] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Ping timeout: 268 seconds)
[01:14:12] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[01:14:17] *** Joins: Elzington (~Elzington@68.235.43.78)
[01:14:54] *** Quits: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net) (Quit: Leaving)
[01:15:17] *** Quits: semeion (~semeion@user/semeion) (Read error: Connection reset by peer)
[01:15:20] *** Joins: TML (~tml@user/tml)
[01:15:28] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:5cec:41b3:fa14:d1ad)
[01:15:43] *** Joins: semeion (~semeion@user/semeion)
[01:16:19] *** Quits: INeedAHandle (~INeedAHan@39.124.72.106) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:16:47] *** Joins: INeedAHandle (~INeedAHan@39.124.72.106)
[01:17:39] <dman777> jinsun: at the moment it does, but I am not sure if I might find issues later as the data structurers grow
[01:19:01] *** Quits: aphysically (~aphysical@user/aphysically) (Ping timeout: 268 seconds)
[01:19:03] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 256 seconds)
[01:20:17] <jinsun> dman777: hmm, then probably I didn't get what you were trying to do, will have to see what foo and bar are maybe
[01:20:29] *** Joins: aphysically (~aphysical@user/aphysically)
[01:21:43] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[01:24:33] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-0902-3789-4a79-f643.res6.spectrum.com) (Quit: Client closed)
[01:25:17] *** Joins: Viewday7 (~Viewday@user/viewday)
[01:25:31] *** Quits: ericlee (~ericlee@2601:647:4681:3420::2) (Remote host closed the connection)
[01:25:54] *** Joins: ericlee (~ericlee@2601:647:4681:3420::2)
[01:26:50] *** Quits: Viewday (~Viewday@user/viewday) (Ping timeout: 260 seconds)
[01:26:51] *** Viewday7 is now known as Viewday
[01:27:20] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[01:30:22] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Remote host closed the connection)
[01:31:17] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[01:31:27] <SnoopJ> stwange, if you're on Linux and the oomkiller is gobbling up your process, you might consider setting RLIMIT_RSS (see the `resource` module and `man 2 setrlimit`), which should give you MemoryError in the appropriate place(s) instead of just a dead process.
[01:31:36] <SnoopJ> (but if you can avoid the problem altogether, that's way less complicated!)
[01:32:57] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[01:33:34] *** Quits: Pickchea (~private@user/pickchea) (Quit: Leaving)
[01:35:42] *** Joins: onichomp (~onichomp@2806:264:4404:8200:508f:5385:2f29:b2d1)
[01:36:09] *** Quits: onichomp (~onichomp@2806:264:4404:8200:508f:5385:2f29:b2d1) (Read error: Connection reset by peer)
[01:36:45] *** Joins: onichomp (~onichomp@2806:264:4404:8200:508f:5385:2f29:b2d1)
[01:37:36] *** Joins: aphysically (~aphysical@user/aphysically)
[01:37:40] *** Quits: onichomp (~onichomp@2806:264:4404:8200:508f:5385:2f29:b2d1) (Read error: Connection reset by peer)
[01:38:02] *** Joins: hightower2 (~hightower@213.147.110.20)
[01:38:16] *** Joins: onichomp (~onichomp@2806:264:4404:8200:508f:5385:2f29:b2d1)
[01:38:25] *** Joins: Klinda_PING (~superleag@user/klinda)
[01:39:05] *** Quits: Klinda (~superleag@user/klinda) (Killed (NickServ (GHOST command used by Klinda_PING)))
[01:39:12] *** Klinda_PING is now known as Klinda
[01:39:45] *** Parts: SimonNL (~Simon@user/simonnl) (Leaving (Channel)___If I have said something clever. my apologies \o)
[01:43:42] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 268 seconds)
[01:44:43] *** Joins: kosh (~kosh@user/kosh)
[01:45:16] *** Quits: cosimone (~user@93-44-187-173.ip98.fastwebnet.it) (Quit: ERC (IRC client for Emacs 27.1))
[01:47:00] *** Quits: jinsun (~quassel@user/jinsun) (Read error: Connection reset by peer)
[01:47:15] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[01:47:22] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 260 seconds)
[01:47:52] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[01:48:08] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[01:48:10] *** Quits: jcvfen (~jcvfen@user/jcvfen) (Quit: WeeChat 3.3)
[01:48:26] *** Joins: jinsun (~quassel@user/jinsun)
[01:50:13] *** Quits: Sheilong (uid293653@id-293653.ilkley.irccloud.com) ()
[01:51:15] *** Quits: manti7 (~manti7@176.10.104.94) (Quit: WeeChat 3.3)
[01:51:37] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[01:52:39] *** Joins: jcvfen (~jcvfen@user/jcvfen)
[01:52:57] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Ping timeout: 268 seconds)
[01:54:18] *** Quits: jcvfen (~jcvfen@user/jcvfen) (Client Quit)
[01:54:51] *** Quits: magla (~gelignite@55d4c66c.access.ecotel.net) (Quit: Stay safe!)
[01:55:21] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[01:57:39] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[01:59:02] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 260 seconds)
[01:59:52] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[02:00:46] *** Joins: spuz (~spuz@95.150.9.30)
[02:01:32] <spuz> I am having trouble understanding this tutorial. Should I expect that running "python --version" would run python 2 or python 3 by the end? https://www.freecodecamp.org/news/python-version-on-mac-update/
[02:02:05] <spuz> I can't figure out at which point the path to my "python" command was supposed to have been changed from 2 to 3.
[02:03:30] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[02:03:41] <SnoopJ> spuz, if you want Python 3, `python3` is your best bet
[02:04:58] <bjs> spuz: if you use pyenv, then when you say `pyenv global|shell|local ...` it will edit the PATH there and then
[02:05:03] <bjs> and pyenv manages your PATH
[02:05:14] <spuz> ah interesting, thanks
[02:05:33] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[02:05:34] <KirkMcDonald> spuz: There's no hard rule. It's up to the distribution. https://www.python.org/dev/peps/pep-0394/
[02:06:07] <bjs> spuz: pyenv is really just some shell scripts which (A) install Python versions from source for you when you ask, and (B) sets up your PATH etc so that when you "switch" to the version you want then all the python binaries will be the version you asked for
[02:06:11] <KirkMcDonald> I have no idea where OS X falls here.
[02:06:13] <SnoopJ> yea, unfortunately you're at the mercy of the OS when it comes to `python`
[02:06:44] <SnoopJ> and even `python3` technically but any OS that would give you python2 for that probably has some other Issues
[02:07:08] *** Quits: qlixed (~qlixed@181.44.129.13) (Ping timeout: 268 seconds)
[02:08:07] *** Joins: jcvfen (~jcvfen@user/jcvfen)
[02:09:03] <spuz> ok, I see the problem. In the tutorial it tells you to modify your .bash_profile to add pyenv's "shims" to your path and then it say to run the command "reset". It seems they assume that the reset command will execute your .bash_profile but in my case it didn't so everything after that apparently didn't work properly
[02:09:48] <spuz> maybe it's a ZSH thing because that's what the author is using
[02:13:42] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[02:16:12] <lionslicer> anyone here who uses geany? Is it possible to get a dark mode? the paper-like white color is killing me
[02:17:10] <grym> lionslicer: https://www.geany.org/download/themes/  seems to have many choices
[02:17:10] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[02:17:16] <grym> an editor i've never heard of, neat
[02:17:40] <lionslicer> I found a video about this. lemme check the site too
[02:18:20] *** Quits: twb (~twb@2403-5804-c6--add.ip6.aussiebb.net) (Remote host closed the connection)
[02:18:35] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[02:18:39] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[02:19:34] *** Quits: AquaL1te (~AquaL1te@user/aqual1te) (Ping timeout: 260 seconds)
[02:20:26] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[02:20:27] *** Quits: adiKt (uid472628@id-472628.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[02:21:19] *** Joins: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269)
[02:21:24] *** Quits: ericlee (~ericlee@2601:647:4681:3420::2) (Remote host closed the connection)
[02:21:43] *** Joins: ericlee (~ericlee@2601:647:4681:3420::2)
[02:22:32] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[02:24:42] *** Quits: Elodin (~weechat@user/elodin) (Ping timeout: 260 seconds)
[02:25:37] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Ping timeout: 268 seconds)
[02:28:48] *** Quits: semeion (~semeion@user/semeion) (Quit: WeeChat 3.3)
[02:29:50] *** Quits: Inline (~Inline@2a02:908:1252:7a80:ae5d:7719:e7f1:5947) (Ping timeout: 260 seconds)
[02:29:57] *** Quits: e2m4n (~ezman@user/e2m4n) (Ping timeout: 268 seconds)
[02:30:30] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:30:41] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[02:31:36] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[02:32:22] *** Quits: Bakunin (~Lindis@user/lindis) (Remote host closed the connection)
[02:33:06] *** Joins: Bakunin (~Lindis@user/lindis)
[02:36:09] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.0)
[02:36:19] <lionslicer> I can only access .config through the terminal using ls -a then the cd command
[02:37:16] <lionslicer> is there a way to copy something from the files I just downloaded to the geany directory?
[02:37:39] <lionslicer> if so, what are the name of the commands?
[02:37:45] <yitz> `cp` for copying
[02:37:50] *** Quits: akimbo (~akimbo@customer-145-40-27-9.stosn.net) (Ping timeout: 260 seconds)
[02:37:51] <lionslicer> thanks
[02:38:01] <yitz> `mv` for moving. `rm` removes/deletes.
[02:38:18] <lionslicer> thanks a bunch
[02:38:21] <lionslicer> I'm gonna try it
[02:38:29] <yitz> `cp` does single files, not directories.  `cp -R` for recursive copy.
[02:38:40] <yitz> See a Linux terminal basic guide. Or coreutils.
[02:39:19] <lionslicer> Yeah, I'm gonna do that. Im pretty new to linux
[02:41:51] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[02:42:01] *** Quits: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net) (Quit: leaving)
[02:42:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[02:43:32] <lionslicer> it's gnu coreutils right?
[02:43:46] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[02:43:52] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Remote host closed the connection)
[02:44:22] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Ping timeout: 260 seconds)
[02:44:28] *** Joins: bitblit (~bitblit@gateway/tor-sasl/bitblit)
[02:45:44] *** Joins: Pi-sistance (~kvirc@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net)
[02:46:17] <Pi-sistance> when I'm switching between print, printing strings and variables how do I prevent it from automaticallya dding a space?
[02:47:01] <spuz> Pi-sistance you can't, but a better way to print strings and variables together is with "format strings"
[02:47:01] <bjs> Pi-sistance: what do you mean? where is it adding a space?
[02:47:06] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 260 seconds)
[02:47:52] <Pi-sistance> print("the variable",c,"is blue")
[02:48:15] <Pi-sistance> a space after the word variable and after the variable c is printed.
[02:48:23] <jinsun> you can change the sep print(..., sep="whatever")
[02:48:28] <Pi-sistance> ok ty spuz ill look into it
[02:48:28] <spuz> Pi-sistance: https://realpython.com/python-f-strings/
[02:48:34] <KirkMcDonald> Pi-sistance: print("foo", c, "bar", sep="")
[02:50:30] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[02:51:59] *** Quits: df00z (~df00z@cpe-172-101-237-113.rochester.res.rr.com) (Ping timeout: 256 seconds)
[02:52:10] *** Quits: blindguard (~blindguar@2a02:908:1864:c200::12) (Quit: Konversation terminated!)
[02:53:17] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[02:54:23] *** Joins: y1n (~y1n@178.165.207.222.wireless.dyn.drei.com)
[02:56:06] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[02:56:19] *** Quits: lionslicer (~lionslice@2804:d41:a7a6:1300:741e:aa2:93cd:f25e) (Read error: Connection reset by peer)
[02:57:05] *** Quits: lbracher (~lucas@94.105.106.159.dyn.edpnet.net) (Ping timeout: 256 seconds)
[02:57:54] <nedbat> Pi-sistance: you might like this:  print(f"the variable {c} is blue")
[02:58:07] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[02:58:25] *** Quits: The_Jag (~The_Jag@host-82-54-168-243.retail.telecomitalia.it) (Quit: The_Jag)
[02:58:50] *** Quits: spuz (~spuz@95.150.9.30) (Quit: Client closed)
[02:59:29] <akk> You could also print("the variable"+c+"is blue") but the f-strings nedbat mentioned are the cleanest way if you can assume python 3.6 or later.
[02:59:43] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[02:59:58] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[03:00:20] *** Joins: mickey8 (~user@user/mickey)
[03:00:23] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:741e:aa2:93cd:f25e)
[03:00:53] <Pi-sistance> ty all I'll look into f-strings after I finish a few tasks, am happy witht he seperation command for now.
[03:01:14] *** Joins: lack (~lack@user/lack)
[03:01:29] *** Quits: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl) (Quit: Leaving)
[03:04:09] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:04:12] *** Bakunin is now known as Rosicrucian
[03:04:32] *** Quits: Auron (Auron956@user/auron) (Remote host closed the connection)
[03:04:34] *** Rosicrucian is now known as Mindscape
[03:09:09] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:10:42] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[03:12:46] *** Quits: sniperwolf (~sniperwol@91.230.98.1) (Quit: Client closed)
[03:13:30] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[03:14:49] *** Quits: rinzewind (~rinzewind@user/rinzewind) (Quit: leaving)
[03:14:50] *** Joins: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp)
[03:15:34] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[03:15:43] *** Quits: Vornicus (~Vornicus@2603-8000-5d07-7ef0-0108-0549-578c-15db.res6.spectrum.com) (Read error: Connection reset by peer)
[03:15:44] *** Joins: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net)
[03:16:01] *** Quits: jcvfen (~jcvfen@user/jcvfen) (Quit: WeeChat 3.3)
[03:17:01] *** Joins: Leonarbro (~Leonet@user/leonarbro)
[03:17:29] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[03:17:30] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[03:18:02] *** Quits: vit (~vit@chello085216193138.chello.sk) (Ping timeout: 268 seconds)
[03:19:27] *** Joins: fikran (~fikran@user/fikran)
[03:20:54] *** Quits: emf (~emf@2620:10d:c090:400::5:ba1c) (Quit: emf)
[03:22:12] *** Joins: jdmark (~jdmark@097-102-095-007.res.spectrum.com)
[03:23:02] *** Quits: luva (~luva@45.141.152.53) (Ping timeout: 260 seconds)
[03:23:13] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:23:27] *** Quits: newpy (~newpy@2601:280:4381:1390:806d:fb60:7313:ba74) (Quit: Leaving)
[03:25:44] *** Joins: richbridger (~richbridg@089144202237.atnat0011.highway.a1.net)
[03:26:10] *** Joins: luva (~luva@45.141.152.54)
[03:27:55] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[03:28:39] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[03:30:29] <lionslicer> I think I managed to do it
[03:30:33] <lionslicer> using the terminal
[03:30:38] <lionslicer> dang
[03:30:39] <lionslicer> nice
[03:31:11] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:31:14] *** Quits: mike18 (~geri@217-149-167-230.nat.highway.telekom.at) (Remote host closed the connection)
[03:31:43] <lionslicer> yitz: I'm definitely read the gnu coreutils
[03:31:47] <lionslicer> thanks for your help
[03:33:28] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[03:34:00] *** Joins: drdesquire_ (~drlp@2601:4c0:4180:3750:a71d:815c:bb15:7d29)
[03:34:32] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:5cec:41b3:fa14:d1ad) (Ping timeout: 256 seconds)
[03:34:41] *** Quits: palasso (~palasso@user/palasso) (Remote host closed the connection)
[03:35:15] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[03:35:36] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[03:35:38] *** Quits: Klinda (~superleag@user/klinda) (Quit: Konversation terminated!)
[03:35:42] *** Joins: humanBird (~humanBird@2603-8001-7003-5966-9c6b-1d3a-8352-69e9.res6.spectrum.com)
[03:36:03] *** Quits: Naan (~Naan@user/naan) (Quit: Leaving)
[03:36:16] *** Joins: Naan (~naan@user/naan)
[03:37:21] *** Joins: Fiji (~Fiji@user/fiji)
[03:43:22] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[03:43:32] *** Quits: Pi-sistance (~kvirc@cpc94050-newt37-2-0-cust176.19-3.cable.virginm.net) (Ping timeout: 256 seconds)
[03:43:51] *** Quits: Noisytoot (~noisytoot@sourcehut/user/noisytoot) (Ping timeout: 245 seconds)
[03:43:53] *** Quits: chilversc (~chilversc@user/chilversc) (Ping timeout: 264 seconds)
[03:43:57] *** Quits: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net) (Ping timeout: 268 seconds)
[03:44:11] *** Quits: willcl_ark (~quassel@user/willcl-ark/x-8282106) (Ping timeout: 264 seconds)
[03:45:09] *** Joins: lemonsnicks (~lemonsnic@cpc159519-perr18-2-0-cust114.19-1.cable.virginm.net)
[03:45:15] *** Joins: chilversc (~chilversc@user/chilversc)
[03:45:35] *** Joins: willcl_ark (~quassel@user/willcl-ark/x-8282106)
[03:49:55] *** Quits: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be) (Quit: Ping timeout (120 seconds))
[03:50:38] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[03:51:37] <zln> damn, I could not solve it on my own. I need to take x amount of elements at a time from a row. If at the end, if there is 2 untaken elements left, and I take 3 at a time, I want it to skip those to to take 3 consecutive from beginning again to not take elements on the each side of the row 'border'. I'm using itertools.filterfalse to only take from False elements but could not get the rest to work
[03:51:53] *** Quits: humanBird (~humanBird@2603-8001-7003-5966-9c6b-1d3a-8352-69e9.res6.spectrum.com) (Quit: Client closed)
[03:52:02] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 260 seconds)
[03:52:24] <zln> with cycle and islice it gets the 2 at the end and 1 at the beginning
[03:52:44] <zln> is there a elegant way to do this without 10 if else stmts?
[03:53:25] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[03:54:25] *** Quits: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il) (Ping timeout: 268 seconds)
[03:54:25] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 268 seconds)
[03:56:02] *** Joins: Wulf (~Wulf@user/wulf)
[03:56:33] <nedbat> zln: can you pastebin some examples of what goes in and what comes out?
[03:56:52] *** Quits: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com) (Remote host closed the connection)
[03:57:24] <zln> nedbat: sure, i'll paste the playground code :p
[03:57:41] *** Joins: Noisytoot (~noisytoot@sourcehut/user/noisytoot)
[03:59:34] <zln> https://bpa.st/6OGQ
[04:00:08] *** Quits: Linux77 (~Linux7_7@186.233.178.42) (Killed (NickServ (GHOST command used by Linux77_!~Linux7_7@187-126-71-30.user3p.veloxzone.com.br)))
[04:00:32] *** Joins: pycurious (~Adium@user/pycurious)
[04:01:02] <pycurious> I've two machines behind firewalls. One creates a html report that I need to get on the other machine. Any ideas?  :)
[04:01:17] <zln> I need to 'move' on the grid with different pygame sprites. but only on the 'False' elements. if the sprite is 3 elements wide or high, I go to next 3 false elements. if at end, then back in beginning. rowwise or colum wise for horizontal and vertical movement
[04:01:27] *** Joins: Linux77 (~Linux7_7@187-126-71-30.user3p.veloxzone.com.br)
[04:01:57] <zln> nedbat: it's a 10x10 list of lists resembling a grid with coordinates
[04:02:35] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.3)
[04:04:41] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[04:06:14] <zln> maybe cycle is not the best option tbh, a combo of filterfalse, dropwhile, takewhile, map, filter somehow :D
[04:08:28] *** Quits: Linux77 (~Linux7_7@187-126-71-30.user3p.veloxzone.com.br) (Ping timeout: 256 seconds)
[04:10:19] <zln> btw, I want to move on 'False' elements because if there is another object taking 2 elements along the row, I need to skip those to not overlap
[04:10:36] <zln> or col
[04:11:30] *** Quits: nomic (~nomic@185.192.69.69) (Quit: Leaving)
[04:11:52] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 256 seconds)
[04:12:30] <akk> pycurious: scp (or your protocol of choice) to a web or file server outside both firewalls?
[04:13:02] *** Quits: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net) (Quit: Konversation terminated!)
[04:13:20] *** Joins: analoq (~yashi@user/dies)
[04:13:24] <zln> pycurious: reversed ssh tunnel could be nice too
[04:14:28] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[04:18:28] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[04:19:15] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[04:19:49] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 256 seconds)
[04:19:49] *** Quits: ano (~ano@user/ano) (Quit: ano)
[04:20:23] *** Quits: mortn (~weechat@81-234-122-230-no158.tbcn.telia.com) (Read error: Connection reset by peer)
[04:20:28] *** Joins: ano (~ano@user/ano)
[04:20:54] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[04:21:10] *** Quits: ano (~ano@user/ano) (Client Quit)
[04:21:25] *** Joins: ano (~ano@user/ano)
[04:22:55] *** Joins: ali1234 (~al@user/ali1234)
[04:23:47] *** Quits: TJ- (~root@user/tj-) (Ping timeout: 264 seconds)
[04:24:25] *** Joins: TJ- (~root@user/tj-)
[04:24:30] *** Quits: shawwwn (uid6132@id-6132.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[04:26:41] *** Joins: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net)
[04:27:01] *** stoned is now known as Hash
[04:27:44] *** Quits: cthulchu (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[04:27:45] *** Quits: cthulchu_ (~Cthulchu@193.194.107.250) (Ping timeout: 256 seconds)
[04:28:44] *** Joins: mortn (~weechat@81-234-122-230-no158.tbcn.telia.com)
[04:28:55] *** Quits: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[04:31:26] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[04:32:42] *** Joins: ub (~Thunderbi@p548c9652.dip0.t-ipconnect.de)
[04:33:18] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[04:33:53] *** Quits: ubert (~Thunderbi@p200300ecdf4fca7ce019fddc82d0353e.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[04:33:54] *** ub is now known as ubert
[04:34:13] <diverdude> Hi, if i do like this on my server: https://dpaste.org/Vk6L   and my client is really slow, then the sock.send(...) will block when the socket buffer is full, and only continue whenever client reads something right?
[04:34:46] *** Quits: Hash (~stoned@is.coding.when.stoned.io) (Quit: WeeChat 3.3)
[04:35:24] *** Joins: sydbarret (~anton@static-186-121-195-194.acelerate.net)
[04:36:18] *** Quits: flokuehn (~flokuehn@87.123.247.65) (Ping timeout: 260 seconds)
[04:36:38] *** Joins: nomic (~nomic@185.192.69.69)
[04:37:36] *** Quits: balognatops (~hacksword@107.182.228.197) (Ping timeout: 268 seconds)
[04:37:56] <yitz> That's why there's async
[04:38:02] *** Joins: flokuehn (~flokuehn@87.123.247.76)
[04:38:14] <sydbarret> can someone tell me how I can set it up my first call to this api in python? https://docs.leadfeeder.com/api/#accounts
[04:39:46] *** Joins: stoned (~stoned@is.coding.when.stoned.io)
[04:40:23] *** Joins: qlixed (~qlixed@181.44.129.13)
[04:41:09] <mefistofeles> sydbarret: use requests? Not sure what you are actually asking, tbh
[04:41:14] <sydbarret> oh yes
[04:41:18] <sydbarret> request thanks
[04:41:22] <mefistofeles> haha ok
[04:42:01] *** Quits: qlixed (~qlixed@181.44.129.13) (Client Quit)
[04:44:10] *** Quits: nomic (~nomic@185.192.69.69) (Quit: Leaving)
[04:44:57] <sydbarret> mefistofeles response = requests.get("https://api.leadfeeder.com/accounts",auth=key) ?
[04:45:03] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-9cdb-69bc-753b-1e50.res6.spectrum.com)
[04:45:36] <sydbarret> mefistofeles i dont know if its auth or data, how do i know that from their docs
[04:45:45] <sydbarret> not a sigle sample in their docs
[04:47:06] *** Quits: marloi (~mark@45.72.242.191) (Ping timeout: 260 seconds)
[04:48:00] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[04:48:59] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 264 seconds)
[04:49:16] <sydbarret> i think i have to send that as a header
[04:49:17] <mefistofeles> sydbarret: I guess you need something like my_headers = {'Authorization' : 'Token {access_token}'} and use that for the headers keyword argument
[04:49:46] *** Joins: ethrl (~morty@user/doforlove33)
[04:51:03] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[04:51:39] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[04:51:52] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[04:52:41] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[04:53:01] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Ping timeout: 268 seconds)
[04:56:42] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[04:57:16] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:3062:b2a9:609e:be67) (Ping timeout: 256 seconds)
[04:59:04] *** Quits: akk (~akk@75.161.146.115) (Quit: +++)
[04:59:44] *** Quits: abrantesasf (abrantesas@gateway/vpn/protonvpn/abrantesasf) (Remote host closed the connection)
[05:01:29] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[05:03:34] *** Quits: sydbarret (~anton@static-186-121-195-194.acelerate.net) (Quit: Going offline, see ya! (www.adiirc.com))
[05:03:56] *** Quits: Exmodaus (~Exmodaus@2601:249:403:9e80:c870:b4b9:b04d:7094) (Quit: Client closed)
[05:13:37] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[05:13:43] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[05:14:58] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[05:16:20] *** Quits: p-i-_ (~Ohmu@223.206.64.253) (Remote host closed the connection)
[05:16:58] *** Joins: p-i- (~Ohmu@223.206.64.253)
[05:17:06] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[05:17:36] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[05:18:10] *** Joins: nomic (~nomic@185.192.69.69)
[05:20:04] *** Joins: amogorkon (~amogorkon@port-83-236-11-55.dynamic.as20676.net)
[05:20:46] *** Quits: junktext_ (~junktext@gateway/vpn/pia/junktext) (Ping timeout: 268 seconds)
[05:21:35] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[05:22:28] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[05:22:36] *** Quits: amo (~amogorkon@port-92-196-47-233.dynamic.as20676.net) (Ping timeout: 268 seconds)
[05:25:04] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[05:25:23] *** Joins: genrand (~textual@cpe-74-138-138-71.kya.res.rr.com)
[05:25:39] *** Quits: fannagoganna (uid110488@id-110488.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[05:26:25] *** Joins: mindraj (~crispr@user/mindraj)
[05:26:40] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[05:28:47] *** Joins: fikran (~fikran@user/fikran)
[05:29:28] *** Quits: superboot (~agentgasm@user/superboot) (Quit: leaving)
[05:30:35] *** Quits: vlm (~vlm@user/vlm) (Quit: "")
[05:32:11] *** Joins: djapo (~archangel@user/djapo)
[05:32:15] *** Quits: Naan (~naan@user/naan) (Quit: Leaving)
[05:32:25] <zln> nedbat: btw, I think I got it. https://bpa.st/FKMA line 66:76
[05:33:47] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[05:37:54] *** Joins: moose (~moose@user/moose)
[05:42:08] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[05:42:55] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:81e:1483:4212:54c1)
[05:43:36] *** Quits: emerent (~quassel@p200300cd57485527ba27ebfffed28a59.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[05:44:02] *** Quits: wasd (~wasd@user/axis) (Remote host closed the connection)
[05:44:49] *** Quits: mindraj (~crispr@user/mindraj) (Remote host closed the connection)
[05:44:49] *** Joins: emerent (~quassel@p200300cd57485527ba27ebfffed28a59.dip0.t-ipconnect.de)
[05:46:23] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Remote host closed the connection)
[05:50:15] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Remote host closed the connection)
[05:51:00] *** Quits: Mindscape (~Lindis@user/lindis) (Ping timeout: 276 seconds)
[05:51:49] *** Quits: Pandadub (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Remote host closed the connection)
[05:52:18] *** bloodninja123 is now known as bloodninja
[05:52:24] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[05:53:00] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[05:54:25] *** Quits: bdeshi (~bdeshi@bdeshi.space) (Quit: bouncer disconnect)
[05:54:41] *** Joins: bdeshi (~bdeshi@bdeshi.space)
[05:55:50] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[05:55:51] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Quit: ZNC 1.8.2+deb2~bpo10+1 - https://znc.in)
[05:57:01] *** Quits: DarthGandalf (user@znc/developer/DarthGandalf) (Quit: Bye)
[05:57:15] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Remote host closed the connection)
[05:57:17] *** Joins: DarthGandalf (user@znc/developer/DarthGandalf)
[05:58:02] *** Quits: mastardet (~mastardet@user/mastardet) (Ping timeout: 260 seconds)
[05:58:02] *** Quits: dstufft (~dstufft@shitbird.caremad.io) (Ping timeout: 260 seconds)
[05:58:12] *** Joins: dstufft (~dstufft@shitbird.caremad.io)
[05:58:25] *** Quits: Elzington (~Elzington@68.235.43.78) (Ping timeout: 256 seconds)
[05:58:33] *** Joins: DPA (~DPA@75-128-16-94.static.cable.fcom.ch)
[05:58:58] *** Quits: Dystopia (~Dystopia@159.65.223.12) (Ping timeout: 260 seconds)
[05:59:02] *** Joins: Dystopia- (~Dystopia@159.65.223.12)
[05:59:26] *** Dystopia- is now known as Dystopia
[05:59:46] *** Joins: acnebs- (~acnebs@198.199.68.107)
[05:59:54] *** Quits: acnebs (~acnebs@198.199.68.107) (Ping timeout: 260 seconds)
[06:00:15] *** Joins: mastardet (~mastardet@user/mastardet)
[06:00:57] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[06:01:10] *** Quits: DPA (~DPA@75-128-16-94.static.cable.fcom.ch) (Client Quit)
[06:01:52] *** Joins: DPA (~DPA@2a05:41c0:b:db04::a3c:10d)
[06:02:53] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[06:04:15] *** Quits: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi) (Remote host closed the connection)
[06:04:38] *** Joins: Hanii (~textual@2a00:23c5:c587:6d00:d558:b250:bcbb:4255)
[06:05:43] *** Quits: Geronimo (~Geronimo@user/geronimo) (Quit: I am away)
[06:05:57] *** Joins: tm007 (uid287041@id-287041.uxbridge.irccloud.com)
[06:06:17] *** Joins: Geronimo (~Geronimo@user/geronimo)
[06:06:26] *** Quits: Kim^J (~hagbard@ec2-13-51-167-164.eu-north-1.compute.amazonaws.com) (Ping timeout: 260 seconds)
[06:06:36] *** Joins: p-i-_ (~Ohmu@223.206.64.253)
[06:07:09] *** Joins: strungout (znc@mutant.penguin.fyi)
[06:07:22] *** Quits: suffer (znc@mutant.penguin.fyi) (Ping timeout: 260 seconds)
[06:07:48] *** Quits: sammie1 (~sammie@2601:183:c180:3f00:5c19:dc47:c552:556c) (Quit: WeeChat 3.0.1)
[06:08:16] *** Quits: ethrl (~morty@user/doforlove33) (Quit: WeeChat 3.0)
[06:08:18] *** Quits: energizer (~energizer@user/energizer) (Ping timeout: 260 seconds)
[06:08:55] *** Joins: Kim^J (~hagbard@ec2-13-51-167-164.eu-north-1.compute.amazonaws.com)
[06:09:49] *** Joins: Donitz (~Donitz@88-115-149-152.elisa-laajakaista.fi)
[06:10:38] *** Quits: p-i- (~Ohmu@223.206.64.253) (Ping timeout: 260 seconds)
[06:11:17] *** Quits: seednode4 (~seednode@user/seednode) (Read error: Connection reset by peer)
[06:11:59] *** Joins: domhnall (~developer@user/domhnall/x-2887755)
[06:12:52] *** Quits: genrand (~textual@cpe-74-138-138-71.kya.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:12:57] *** Joins: energizer (~energizer@user/energizer)
[06:12:58] *** Quits: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp) (Ping timeout: 260 seconds)
[06:13:29] *** Joins: seednode4 (~seednode@user/seednode)
[06:15:15] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[06:18:07] *** Quits: trace987 (~trace@91.66.153.65) (Ping timeout: 268 seconds)
[06:18:44] *** Quits: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft) (Ping timeout: 268 seconds)
[06:18:50] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Remote host closed the connection)
[06:20:30] *** Joins: ax1sys (~arthu@139.192.143.20)
[06:20:30] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[06:23:06] *** Quits: ax1sys (~arthu@139.192.143.20) (Client Quit)
[06:23:26] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[06:23:49] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[06:26:14] *** Quits: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net) (Quit: Leaving)
[06:26:30] *** Joins: brabrax_ (~brabrax@user/brabrax)
[06:26:36] *** Joins: adder` (~adder@user/adder)
[06:27:18] *** Quits: hexnewbie (~hexnewbie@user/hexnewbie) (Ping timeout: 256 seconds)
[06:27:22] *** Quits: brabrax (~brabrax@user/brabrax) (Ping timeout: 268 seconds)
[06:27:22] *** brabrax_ is now known as brabrax
[06:27:30] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Quit: leaving)
[06:28:44] *** Joins: bdeshi- (~bdeshi@bdeshi.space)
[06:29:01] *** Quits: bdeshi (~bdeshi@bdeshi.space) (Ping timeout: 256 seconds)
[06:29:01] *** Quits: davor_ (~davor@user/davor) (Ping timeout: 256 seconds)
[06:29:01] *** Quits: adder (~adder@user/adder) (Ping timeout: 256 seconds)
[06:29:01] *** bdeshi- is now known as bdeshi
[06:29:07] *** Joins: davor (~davor@user/davor)
[06:29:35] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 256 seconds)
[06:29:35] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 256 seconds)
[06:29:59] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[06:30:02] *** Joins: Ilyu (~quassel@166.215.82.79.rev.sfr.net)
[06:30:42] *** Joins: genrand (~textual@cpe-74-138-138-71.kya.res.rr.com)
[06:30:42] *** Joins: hexnewbie (~hexnewbie@user/hexnewbie)
[06:30:46] *** Joins: RiFo (~RiFo@user/rifo)
[06:30:54] *** Quits: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[06:31:36] *** Joins: waveclaw (~quassel@ip98-162-237-241.ok.ok.cox.net)
[06:31:44] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[06:31:56] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[06:32:18] *** Quits: zepolen (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Ping timeout: 268 seconds)
[06:36:23] *** Quits: ckdCreations (~ckdCreati@147.55.133.142) (Read error: Connection reset by peer)
[06:36:38] *** Joins: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net)
[06:37:03] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[06:37:14] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[06:38:40] *** Joins: Rosicrucian (~Lindis@user/lindis)
[06:40:30] *** Joins: Hash (~stoned@hack.the.planet.with.hashsecurity.org)
[06:41:00] *** Joins: lastshell (~lastshell@user/lastshell)
[06:41:08] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[06:41:27] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:41:33] *** Quits: ckdCreations (~ckdCreati@c-24-17-50-149.hsd1.wa.comcast.net) (Ping timeout: 268 seconds)
[06:42:27] *** Joins: ckdCreations (~ckdCreati@147.55.133.134)
[06:43:22] *** Quits: FluffyMask (~masque@user/fluffymask) (Quit: WeeChat 3.3)
[06:44:46] *** Joins: poiqwepoiqwe_ (uid525840@id-525840.hampstead.irccloud.com)
[06:46:01] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 256 seconds)
[06:47:35] *** Joins: password4 (~password@user/password2)
[06:47:39] <password4> hai
[06:48:16] *** Quits: causa_sui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[06:48:35] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[06:49:06] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[06:49:42] *** Quits: stoned (~stoned@is.coding.when.stoned.io) (Quit: WeeChat 3.3)
[06:49:47] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Remote host closed the connection)
[06:50:11] *** Joins: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3)
[06:53:52] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[06:57:37] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Remote host closed the connection)
[06:57:39] *** Joins: Fiji_ (~Fiji@user/fiji)
[06:57:54] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[06:58:51] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) ()
[06:59:09] *** Joins: zepolen (~zepolen@business-90-187-80-97.pool2.vodafone-ip.de)
[06:59:26] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Ping timeout: 268 seconds)
[06:59:26] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[07:00:00] *** Rosicrucian is now known as Mindscape
[07:03:35] *** Joins: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4)
[07:05:33] *** Quits: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Quit: ZNC 1.7.5+deb4 - https://znc.in)
[07:05:51] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[07:08:13] *** Quits: Roey (~Roey@user/Roey) (Quit: Client exiting)
[07:10:08] *** Joins: finn_elija (~finn_elij@user/finn-elija/x-0085643)
[07:10:08] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Killed (NickServ (Forcing logout FinnElija -> finn_elija)))
[07:10:08] *** finn_elija is now known as FinnElija
[07:11:17] *** Joins: cyberpear (uid364019@fedora/cyberpear)
[07:12:09] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[07:12:13] *** Quits: nomic (~nomic@185.192.69.69) (Quit: Leaving)
[07:14:04] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[07:14:07] *** Joins: tar_xvf_ (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[07:14:14] *** Quits: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Ping timeout: 268 seconds)
[07:17:50] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[07:18:21] *** Joins: pgib (~textual@173.38.117.89)
[07:18:41] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:19:35] *** Quits: audiobirb (~audio@user/audio) (Ping timeout: 264 seconds)
[07:23:29] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[07:24:27] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Remote host closed the connection)
[07:27:54] *** Quits: Fiji_ (~Fiji@user/fiji) (Quit: Leaving)
[07:27:56] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[07:30:30] *** Quits: djhankb (~djhankb@208.113.164.68) (Remote host closed the connection)
[07:31:29] *** Quits: y1n (~y1n@178.165.207.222.wireless.dyn.drei.com) (Ping timeout: 268 seconds)
[07:33:20] *** Quits: Fiji (~Fiji@user/fiji) (Ping timeout: 268 seconds)
[07:36:01] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[07:37:43] *** Joins: Fiji (~Fiji@user/fiji)
[07:38:08] *** Joins: fikran (~fikran@user/fikran)
[07:40:01] *** Joins: bigRoo (~user@73.181.dsl.syd.iprimus.net.au)
[07:40:06] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[07:43:53] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[07:44:16] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:44:27] *** Quits: tar_xvf_ (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Ping timeout: 268 seconds)
[07:46:18] *** Quits: bigRoo (~user@73.181.dsl.syd.iprimus.net.au) (Remote host closed the connection)
[07:46:35] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[07:46:49] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[07:49:22] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[07:52:27] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[07:53:19] *** Quits: genrand (~textual@cpe-74-138-138-71.kya.res.rr.com) (Quit: Textual IRC Client: www.textualapp.com)
[07:54:18] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[07:55:11] *** Joins: Roey (~Roey@user/Roey)
[07:55:24] *** Quits: Roey (~Roey@user/Roey) (Remote host closed the connection)
[07:56:12] *** Joins: tar_xvf_ (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[07:56:46] *** Joins: shawwwn (uid6132@id-6132.helmsley.irccloud.com)
[07:56:47] *** Quits: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Ping timeout: 268 seconds)
[07:57:06] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[07:58:50] *** Quits: Khoyo (~khoyo@user/khoyo) (Ping timeout: 260 seconds)
[07:58:57] *** Joins: bitdex (~bitdex@gateway/tor-sasl/bitdex)
[07:59:49] *** Joins: ElPresidente (~ElPreside@172-125-150-28.lightspeed.tukrga.sbcglobal.net)
[08:02:54] *** Joins: Khoyo (~khoyo@user/khoyo)
[08:04:58] *** Quits: slowButPresent (~slowButPr@user/slowbutpresent) (Quit: leaving)
[08:09:35] *** Quits: zebrag (~chris@user/zebrag) (Quit: Konversation terminated!)
[08:09:56] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[08:10:03] *** Quits: Fiji (~Fiji@user/fiji) (Read error: Connection reset by peer)
[08:13:44] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[08:15:37] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[08:15:53] *** Quits: zepolen (~zepolen@business-90-187-80-97.pool2.vodafone-ip.de) (Ping timeout: 268 seconds)
[08:16:20] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[08:19:50] *** Quits: sreve (~quassel@p4ff44b8e.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[08:25:45] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Ping timeout: 268 seconds)
[08:26:59] *** Quits: kostkon (~kostkon@2a02:587:a109:cc9:78e0:6594:e774:f291) (Ping timeout: 268 seconds)
[08:28:14] *** Quits: password4 (~password@user/password2) (Ping timeout: 268 seconds)
[08:28:44] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:5cec:41b3:fa14:d1ad)
[08:28:56] *** Joins: kostkon (~kostkon@athedsl-395149.home.otenet.gr)
[08:33:35] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Remote host closed the connection)
[08:35:14] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[08:36:30] *** Joins: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net)
[08:38:02] <Samian> Hello.  I'm trying to make an input/output equivalency unit test between a python script and a program I'm building with buck.  Any recommendations on how I do this? I'm thinking to use sqlite. Make a bash script that runs both programs. Both programs dump data to the sqlite db. A third program compares data.  If they're identical unit test passed, else unit test fails.
[08:38:40] <Samian> My alternative idea is to use a python script as the unit test driver instead of bash
[08:38:51] <Samian> Only issue is that I'm using buck to build my cpp code.
[08:39:29] <Samian> I'd need to learn to run build commands from a python script.
[08:39:42] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Quit: The Lounge - https://thelounge.chat)
[08:39:59] *** Quits: xrogaan (~xrogaan@user/xrogaan) (Quit: Leaving)
[08:41:28] <Samian> I made a python program and a cpp program that are supposed to be different versions of the same program.  I want to make unit tests that check for identical outputs given identical inputs.  What's the technical name for such a test?
[08:41:36] *** Joins: Nact (~l@2a02:2788:11c4:6e6:a22b:167a:b4a4:994c)
[08:41:36] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[08:41:37] <Samian> whoops
[08:43:18] *** Quits: ttree (~ttree0@c-73-239-62-159.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[08:44:44] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[08:45:08] *** Joins: de-facto (~de-facto@user/de-facto)
[08:45:43] *** Quits: Nact (~l@2a02:2788:11c4:6e6:a22b:167a:b4a4:994c) (Client Quit)
[08:49:01] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[08:49:25] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[08:50:44] *** Quits: lionslicer (~lionslice@2804:d41:a7a6:1300:741e:aa2:93cd:f25e) (Quit: Leaving)
[08:52:28] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[08:52:53] *** Quits: DeaDSouL (~DeaDSouL@194.99.104.137) (Ping timeout: 268 seconds)
[08:53:23] *** Quits: strugee (~strugee@strugee.net) (Quit: ZNC - http://znc.in)
[08:53:26] *** Quits: dre (~dre@2001:8003:c932:c301:bb14:f1af:101c:4c88) (Quit: Leaving)
[08:53:57] *** Joins: dre (~dre@2001:8003:c932:c301:c7a0:423f:5a6a:50c7)
[08:54:07] *** Joins: onichomp666 (~onichomp@2806:264:4404:8200:508f:5385:2f29:b2d1)
[08:54:36] *** Joins: DeaDSouL (~DeaDSouL@45.86.201.212)
[08:54:40] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[08:56:30] *** Quits: esaym153 (~esaym153@net153.net) (Ping timeout: 260 seconds)
[08:56:31] <BrenBarn> do you need to run the build process as part of the test?  or can you just test the output of the built program?
[08:56:32] *** Joins: strugee (~strugee@strugee.net)
[08:57:13] *** Quits: onichomp (~onichomp@2806:264:4404:8200:508f:5385:2f29:b2d1) (Ping timeout: 268 seconds)
[08:57:40] *** Quits: tuxlovesyou (~daemonchi@136.37.26.49) (Ping timeout: 260 seconds)
[08:58:13] *** Joins: esaym153 (~esaym153@net153.net)
[08:58:14] *** Joins: tuxlovesyou (~daemonchi@136.37.26.49)
[08:59:02] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Ping timeout: 260 seconds)
[09:00:54] <Samian> BrenBarn  it needs to be part of the test
[09:02:34] *** Quits: wender (~Wender@179.104.253.30) (Ping timeout: 256 seconds)
[09:03:05] *** Joins: parv (~quass@user/parv)
[09:08:19] *** Quits: Ilyu (~quassel@166.215.82.79.rev.sfr.net) (Ping timeout: 268 seconds)
[09:10:02] *** Joins: Tas-sos (~Tas-sos@ppp046176200077.access.hol.gr)
[09:12:10] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[09:13:14] *** Quits: analoq (~yashi@user/dies) (Ping timeout: 268 seconds)
[09:14:05] *** Quits: Tas-sos (~Tas-sos@ppp046176200077.access.hol.gr) (Client Quit)
[09:14:21] *** Joins: analoq (~yashi@user/dies)
[09:14:27] *** Joins: Tas-sos (~Tas-sos@ppp046176200077.access.hol.gr)
[09:17:26] *** Joins: kostkon_ (~kostkon@2a02:587:a112:d71e:fc44:4fcd:f504:697c)
[09:18:26] *** Quits: kostkon (~kostkon@athedsl-395149.home.otenet.gr) (Ping timeout: 256 seconds)
[09:18:40] *** Quits: p-i-_ (~Ohmu@223.206.64.253) (Remote host closed the connection)
[09:19:37] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[09:19:57] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:21:53] *** Quits: tar_xvf_ (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com) (Ping timeout: 268 seconds)
[09:22:19] *** Quits: bloody (~bloody@user/bloody) (Quit: Always focus on how far you've come, rather than how far you have left to go)
[09:24:21] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 268 seconds)
[09:24:30] *** Joins: forgotmynick (uid24625@2a03:5180:f:4::6031)
[09:24:44] *** Quits: Mindscape (~Lindis@user/lindis) (Remote host closed the connection)
[09:24:47] *** Joins: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca)
[09:26:46] *** Joins: tar_xvf (~tar_xvf@ec2-3-136-243-174.us-east-2.compute.amazonaws.com)
[09:28:03] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[09:28:38] *** Joins: stranac (~stranac@195.29.239.126)
[09:29:52] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[09:29:58] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.2)
[09:30:10] <BrenBarn> I guess you could have a bash script that does the build and then runs a python program that runs a test on the built version
[09:32:59] *** Quits: kostkon_ (~kostkon@2a02:587:a112:d71e:fc44:4fcd:f504:697c) (Ping timeout: 268 seconds)
[09:34:39] *** Joins: p-i- (~Ohmu@mx-ll-223.206.64-253.dynamic.3bb.co.th)
[09:34:44] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[09:35:47] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 264 seconds)
[09:38:58] *** Joins: vit (~vit@chello085216193138.chello.sk)
[09:39:23] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Ping timeout: 264 seconds)
[09:39:34] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[09:39:38] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[09:43:20] *** Quits: MrBungle (~MrBungle@2604:3d08:1788:dc00:81e:1483:4212:54c1) (Read error: Connection reset by peer)
[09:44:21] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Ping timeout: 276 seconds)
[09:44:25] *** Quits: de-facto (~de-facto@user/de-facto) (Remote host closed the connection)
[09:44:53] *** Joins: de-facto (~de-facto@user/de-facto)
[09:45:18] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[09:45:19] *** Quits: domhnall (~developer@user/domhnall/x-2887755) (Quit: Lost terminal)
[09:45:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[09:46:35] *** Quits: Samian (~s@user/samian) (Ping timeout: 264 seconds)
[09:47:07] *** Quits: seednode4 (~seednode@user/seednode) (Quit: Nihil supernum.)
[09:47:30] *** Joins: fikran (~fikran@user/fikran)
[09:47:51] *** Joins: yotsuba (~yotsuba@93-172-241-53.bb.netvision.net.il)
[09:47:54] *** Joins: seednode4 (~seednode@user/seednode)
[09:49:45] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[09:53:57] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[09:55:11] *** Joins: djapo (~archangel@user/djapo)
[09:58:13] *** Joins: Atque (~Atque@user/atque)
[09:58:17] *** Quits: zaquest (~notzaques@5.128.210.178) (Quit: Leaving)
[10:02:19] *** Joins: zaquest (~notzaques@5.128.210.178)
[10:02:24] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-25e6-a83c-568d-3ca5.res6.spectrum.com) (Quit: jarthur)
[10:02:58] *** Quits: onichomp666 (~onichomp@2806:264:4404:8200:508f:5385:2f29:b2d1) (Read error: Connection reset by peer)
[10:03:35] *** Joins: onichomp666 (~onichomp@2806:264:4404:8200:508f:5385:2f29:b2d1)
[10:06:37] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[10:06:54] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[10:08:17] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:09:08] *** Quits: resmo (~resmo@2a00:d420:9:8a00:52cf:2a03:ad73:fcb7) (Read error: Connection reset by peer)
[10:09:47] *** Joins: resmo (~resmo@2a00:d420:9:8a00:52cf:2a03:ad73:fcb7)
[10:13:39] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Remote host closed the connection)
[10:13:46] *** Joins: AquaL1te (~AquaL1te@user/aqual1te)
[10:14:02] *** Joins: kostkon (~kostkon@athedsl-394022.home.otenet.gr)
[10:14:07] *** Quits: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net) (Quit: leaving)
[10:14:32] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[10:16:56] *** Joins: _SKiTZO (~dark@64.89-10-146.nextgentel.com)
[10:22:06] *** Quits: vimart (~vimart@85.255.235.106) (Ping timeout: 260 seconds)
[10:22:44] *** Joins: vimart (~vimart@85.255.235.106)
[10:23:34] *** Quits: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net) (Ping timeout: 260 seconds)
[10:23:43] *** Joins: manti7 (~manti7@176.10.104.94)
[10:23:48] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[10:24:11] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[10:25:16] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Remote host closed the connection)
[10:25:39] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[10:27:14] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:28:20] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:29:34] *** Quits: TJ- (~root@user/tj-) (Ping timeout: 260 seconds)
[10:29:54] *** Joins: palasso (~palasso@user/palasso)
[10:30:10] *** Joins: ExeciN (~ExeciN@user/nicexe)
[10:31:15] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Read error: Connection reset by peer)
[10:31:59] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[10:32:36] *** Joins: dvx (~dvx@185.63.97.64)
[10:36:01] *** Quits: ubert (~Thunderbi@p548c9652.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[10:36:42] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:5cec:41b3:fa14:d1ad) (Ping timeout: 256 seconds)
[10:36:42] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Ping timeout: 256 seconds)
[10:36:43] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[10:38:17] *** Joins: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr)
[10:40:06] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[10:40:13] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[10:40:37] <ApostleInTriumph> Hello. I have an array of shape (N,4) whose first 3 columns consist of coordinates I wish to discretize to a 3D grid. the last column in the original array must be averaged into the grid nodes. How do I go about?
[10:41:03] *** Joins: zuQe8 (~zuQe8@cpc105068-sgyl40-2-0-cust196.18-2.cable.virginm.net)
[10:42:14] *** Joins: rendar (~rendar@user/rendar)
[10:44:58] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[10:46:00] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[10:47:36] *** Quits: Dap (~Dap@user/dap) (Ping timeout: 245 seconds)
[10:47:55] *** Quits: LogicAside (~LogicAsid@user/logicaside) (Ping timeout: 260 seconds)
[10:49:26] *** Quits: vimart (~vimart@85.255.235.106) (Ping timeout: 268 seconds)
[10:50:38] *** Quits: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca) (Quit: Leaving)
[10:51:23] <Repiphany> Do you have a small example of what you mean
[10:52:34] *** Joins: tobybl (~tobybl@213.31.135.91)
[10:52:36] <ApostleInTriumph> Repiphany the data you mean?
[10:53:27] <Repiphany> What do you mean by discretizing and averaging into grid nodes
[10:55:00] *** Joins: vimart (~vimart@85.255.235.106)
[10:55:17] <ApostleInTriumph> Suppose if I give you np.random.randn(100, 3) and ask you to create a 32x32x32 voxel representation of it -> then you can use np.histogramdd
[10:55:48] <ApostleInTriumph> but if i give you another array of size (100,) and ask you to put these 100 values into those "grid" where you've initially put the points in
[10:56:07] <ApostleInTriumph> Repiphany sorry BRB
[10:57:24] *** Joins: jcvfen (~jcvfen@user/jcvfen)
[10:58:32] *** Joins: Samian (~s@user/samian)
[10:58:42] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[10:59:41] *** Quits: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net) (Ping timeout: 245 seconds)
[10:59:56] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 268 seconds)
[10:59:56] *** Quits: mickey8 (~user@user/mickey) (Remote host closed the connection)
[11:00:23] *** Joins: mickey8 (~user@user/mickey)
[11:01:52] *** Joins: mns (~mns@c-73-119-178-157.hsd1.ma.comcast.net)
[11:02:30] *** Quits: strugee (~strugee@strugee.net) (Quit: ZNC - http://znc.in)
[11:02:52] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:03:40] *** Joins: mrwick (~mrwick@user/mrwick)
[11:04:32] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[11:04:33] <fluter> hi, i have a set of modules in the same package, that depeneds on user input, i need to import one of them
[11:04:42] <fluter> i learned about importlib.import_module
[11:05:00] <fluter> but when i use it, the module was imported, but how am i supposed to use it?
[11:05:18] <fluter> also the if __name__ == '__main__' part is not run in that file,
[11:05:32] *** Joins: gusto (~Augustus@109.255.100.54)
[11:05:33] <fluter> m = importlib.import_module(modname)
[11:05:36] <fluter> how to use m?
[11:05:40] <fluter> m.func() ???
[11:06:07] <supakeen> Yes.
[11:06:31] <supakeen> And it is correct that the __name__ of an imported module is not set to __main__.
[11:06:57] <fluter> how to use the module then? :O
[11:07:00] <supakeen> (that's the reason it exists, to only execute some code if the module is executed directly).
[11:07:36] *** Joins: fdan (~fdan@103.215.168.1)
[11:07:43] *** Quits: fdan (~fdan@103.215.168.1) (Client Quit)
[11:07:44] <supakeen> You just showed how to use `m`, that's how you use it?
[11:07:53] *** Joins: fdan86 (~fdan@103.215.168.1)
[11:08:48] *** Joins: kosh (~kosh@user/kosh)
[11:08:54] <fluter> m does not exsits, it's a variable
[11:09:26] <fluter> hmmmm  OH hey
[11:09:31] <fluter> i don't know
[11:09:35] <fluter> looks wierd
[11:09:36] *** Quits: aphysically (~aphysical@user/aphysically) (Quit: aphysically)
[11:09:49] <supakeen> I don't really understand your question anymore then, what is it you want to do>?
[11:10:55] <very_sneaky> I'm having an issue where packages i install in a venv (using the venv module) aren't cached - has anybody run into this before/know of a way around it?
[11:11:00] <fluter> sorry i just mean how to use the module as i was thinking m as something else
[11:11:04] <fluter> my bad
[11:11:07] <fluter> thanks supakeen
[11:11:39] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[11:11:39] <supakeen> And what do you mean by 'use the module', this is how it works: https://bpa.st/RLTQ
[11:11:55] <supakeen> (provided you have a function called `func` in that module)
[11:13:17] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:14:36] *** Joins: curiosity (uid511277@user/cypris)
[11:14:48] <very_sneaky> or, is there a way to configure a cache directory for pip when running it via `python -m pip install <>`?
[11:15:03] *** Quits: curiosity (uid511277@user/cypris) (Client Quit)
[11:15:17] <supakeen> very_sneaky: `--cache-dir`.
[11:15:17] *** Joins: curiosity (uid511277@user/cypris)
[11:15:43] <very_sneaky> supakeen: i saw that, is there a more permanent configuration file i can use to set it rather than passing a command line arg?
[11:16:09] <supakeen> I don't know.
[11:17:25] <parv> very_sneaky, Make a wrapper script?
[11:17:42] *** Joins: mcpac82 (~textual@212.25.0.228)
[11:18:56] <very_sneaky> mm, i guess that's an option if i can't find a better way
[11:18:59] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 264 seconds)
[11:20:03] *** Quits: alex11 (~alex11@user/alex11) (Remote host closed the connection)
[11:20:05] *** Quits: Strom (strom@fedora/strom) ()
[11:20:40] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:21:44] *** Joins: Strom (strom@fedora/strom)
[11:22:15] *** Joins: alex11 (~alex11@user/alex11)
[11:22:22] *** Quits: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net) (Ping timeout: 260 seconds)
[11:24:43] *** Quits: orangeboxcutter (~orange@user/orangeboxcutter) (Remote host closed the connection)
[11:25:02] *** Joins: orangeboxcutter (~orange@user/orangeboxcutter)
[11:25:24] *** Joins: gulzar (~gulzar@14.139.123.36)
[11:27:01] <ApostleInTriumph> Repiphany hello
[11:27:03] *** Quits: alex11 (~alex11@user/alex11) (Ping timeout: 268 seconds)
[11:28:17] *** Quits: vimart (~vimart@85.255.235.106) (Ping timeout: 268 seconds)
[11:28:24] <ApostleInTriumph> Repiphany forget about the features I mentioned too. My goal is that given an array ` a = np.random.randn(10000,3)` discretize them into bins and return for each point which bin they belong.
[11:29:31] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[11:29:48] *** Joins: alex11 (~alex11@user/alex11)
[11:30:53] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[11:31:07] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:33:00] *** Joins: grooverman_ (~grooverma@177.102.119.40)
[11:33:21] *** Joins: Hammett (~Absolut@113.red-88-19-98.staticip.rima-tde.net)
[11:34:10] *** Quits: forgotmynick (uid24625@2a03:5180:f:4::6031) (Quit: Connection closed for inactivity)
[11:35:01] *** Quits: grooverman (~grooverma@177.102.119.40) (Ping timeout: 256 seconds)
[11:35:09] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[11:35:14] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:36:09] *** Quits: jcvfen (~jcvfen@user/jcvfen) (Ping timeout: 256 seconds)
[11:36:19] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 268 seconds)
[11:36:51] *** Joins: aphysically (~aphysical@user/aphysically)
[11:37:15] *** Quits: aphysically (~aphysical@user/aphysically) (Client Quit)
[11:37:27] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[11:37:36] *** Joins: aphysically (~aphysical@user/aphysically)
[11:38:45] *** Quits: hendursaga (~weechat@user/hendursaga) (Ping timeout: 276 seconds)
[11:40:38] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Ping timeout: 268 seconds)
[11:40:43] *** Joins: jazzy2 (~jaziz@user/jaziz)
[11:42:23] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[11:43:05] *** Quits: sharperguy (~sharpergu@fnord.cryptophone.de) (Ping timeout: 268 seconds)
[11:43:35] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[11:43:41] *** jazzy2 is now known as jazzy
[11:46:19] *** Joins: chele (~chele@user/chele)
[11:48:29] *** Quits: hifi (hifi@m.vi.fi) (Remote host closed the connection)
[11:48:34] *** Joins: rpittau (sid346891@id-346891.tinside.irccloud.com)
[11:48:51] *** Joins: hifi (hifi@m.vi.fi)
[11:49:25] *** Joins: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp)
[11:49:30] *** Quits: hendursa1 (~weechat@user/hendursaga) (Remote host closed the connection)
[11:49:59] *** Joins: hendursa1 (~weechat@user/hendursaga)
[11:50:14] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[11:50:31] *** Quits: dvx (~dvx@185.63.97.64) (Remote host closed the connection)
[11:51:03] *** Joins: dvx (~dvx@185.63.97.64)
[11:55:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[11:56:51] *** Joins: fikran (~fikran@user/fikran)
[11:59:33] <diverdude> hi, what happens if i write so much data to a python socket that the socket-buffer fills up? Will the program then block until some space has been freed up or will it begin throwing data  away?
[12:01:47] <supakeen> the former
[12:02:03] <supakeen> unless you have your socket set to nonblocking in which case you would get ewouldblock on the write
[12:03:26] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 268 seconds)
[12:05:55] *** Joins: orange (~orangeext@user/orangeextract)
[12:06:00] *** Joins: e2m4n (~ezman@user/e2m4n)
[12:06:09] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.3)
[12:06:11] *** Joins: arinov (~arinov@213.194.126.155)
[12:06:59] *** Quits: stranac (~stranac@195.29.239.126) (Ping timeout: 264 seconds)
[12:07:04] *** Quits: gusto (~Augustus@109.255.100.54) (Remote host closed the connection)
[12:07:41] *** Joins: gusto (~Augustus@109.255.100.54)
[12:09:03] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[12:09:33] <supakeen> (or eagain which for all intents and purposes is the same)
[12:14:50] *** Quits: orange (~orangeext@user/orangeextract) (Quit: Leaving)
[12:15:46] *** Joins: Ergo^ (~ergo@91.238.59.144)
[12:16:27] *** Joins: delvian (~delvian@41.13.246.79)
[12:18:16] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::e120) (Remote host closed the connection)
[12:19:07] *** Joins: alzgh (~alzgh@user/alzgh)
[12:19:16] *** Joins: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::e120)
[12:20:06] *** Joins: minip (~minip@user/minip)
[12:20:31] *** Quits: mattmcc (~matt@li807-33.members.linode.com) (Ping timeout: 265 seconds)
[12:21:57] *** Joins: AnimalFarmPig (~quassel@catv-176-63-2-129.catv.broadband.hu)
[12:22:30] *** Joins: stranac (~stranac@195.29.239.126)
[12:22:44] *** Joins: cosimone (~user@93-44-186-19.ip98.fastwebnet.it)
[12:22:58] *** Quits: MightyMu (~MightyMu@104.131.138.31) (Ping timeout: 260 seconds)
[12:23:21] *** Joins: MightyMu (~MightyMu@104.131.138.31)
[12:24:54] *** Quits: molt (~molt@178-222-245-206.static.isp.telekom.rs) (Ping timeout: 260 seconds)
[12:25:01] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[12:25:46] *** Joins: tspng (~tspng@2a02:168:a1a1:1:4850:13d9:85ba:163d)
[12:28:18] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Read error: Connection reset by peer)
[12:28:46] *** Joins: upsala (~zcb@185.213.155.232)
[12:29:22] <stealth_> diverdude, every time you write to socket, that data is sent to wherever and writes are blocking call, only recv is non-blocking (at least for now)
[12:30:08] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[12:30:42] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[12:31:09] <supakeen> recv is just as blocking
[12:31:17] *** Quits: reset (~reset@user/reset) (Quit: reset)
[12:32:05] <stealth_> even if you sent the socket to non-blocking only recv is non-blocking, not write/send
[12:32:26] <stealth_> set*
[12:33:10] <supakeen> no
[12:33:25] <fdan86> any better way to do this
[12:33:26] <fdan86> https://bpa.st/E6MA
[12:35:04] *** Joins: Klinda (~superleag@user/klinda)
[12:36:30] <diverdude> aha ok. thanks a lot for info
[12:36:32] <supakeen> Not really, you can write it in one expression but that wouldn't make it clearer.
[12:36:54] <gulzar> Hi. while printing dataframe to a file with df.to_csv()  , or if there is any other method, can we have equal spacing between columns such that when opening the file in vim/emacs it looks aligned?
[12:37:31] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[12:38:20] <supakeen> diverdude: What stealth_ said is incorrect, the `send` call copies the data into the socket buffer, if it doesn't fit there are a few options: a) it copies data partially (this is why send returns the number of bytes 'sent', you should *check* this). b) it gives you EMSGSIZE if the size is entirely over the socket buffer size for your protocol, c) *if* in nonblocking you would get
[12:38:22] <supakeen> eagain/ewouldblock
[12:38:41] <supakeen> If you want to block and do a loop until all data is sent then the Python socket module has the sendall convenience function so you don't need to write the loop yourself.
[12:38:50] *** Joins: subho (~subho@2405:201:9001:a0fc:f04d:1c5d:5899:3f08)
[12:39:10] <supakeen> Note that this is slightly different for non-SOCK_STREAM.
[12:39:15] <diverdude> supakeen: ahhhh thats super helpfull
[12:40:09] <diverdude> my sock is server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
[12:40:22] <stealth_> supakeen, what happens when its writing fron send to buffer?
[12:40:23] <supakeen> Oki, then the above is how it works :)
[12:40:44] <diverdude> sendall is exactly what i need then
[12:41:27] <supakeen> stealth_: What do you mean what happens?
[12:41:40] *** Quits: Khoyo (~khoyo@user/khoyo) (Ping timeout: 268 seconds)
[12:42:55] <supakeen> You call send(2) and it copies the data from the pointer you gave it into the skb as far as it fits.
[12:43:03] <supakeen> Then it returns.
[12:43:10] <stealth_> thats blocking
[12:43:15] <supakeen> Yes, it is.
[12:43:26] *** Joins: mikeliuk (~mikeliuk@213.205.198.227)
[12:43:38] <stealth_> unline recv/read which tells you after its been written to buffer
[12:44:04] <stealth_> unlike*
[12:44:17] <diverdude> supakeen: i wrote my small server like this now: https://dpaste.org/NxGv   do you think it looks ok? (btw. there will always only be 1 client connected and the files are around 10GB per file and there are thousands of files)
[12:44:28] *** Joins: Khoyo (~khoyo@user/khoyo)
[12:44:34] *** Joins: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net)
[12:45:02] <supakeen> stealth_: That's the same, both send and recv return after data has been copied from the kernel -> userland or userland -> kernel.
[12:45:06] *** Joins: fartyfoam (~fartyfoam@178-118-118-2.access.telenet.be)
[12:46:21] <stealth_> supakeen, no, true non-blocking send/write doesn't exist yet! its under developement in some new library
[12:46:49] <supakeen> stealth_: Please read what I said, I didn't claim that those exist.
[12:47:03] <supakeen> I said they block, you said "only recv is non-blocking (at least for now)". It's not.
[12:47:10] <stealth_> why must you wait for the buffer to write to socket/file page when you could be doing other things.
[12:47:56] <aphysically> that reminds me
[12:48:00] *** Joins: orange (~orangeext@user/orangeextract)
[12:48:02] <aphysically> io_uring has started to be around for a while now
[12:48:13] <aphysically> I wonder if language libraries have started to supplant their linux I/O with it
[12:48:15] <supakeen> diverdude: You'll be encountering a whole lot of problems with that sort of approach but they'll be ~~fun~~ to figure out on your own :)
[12:48:23] <supakeen> aphysically: There's some movement in that direction.
[12:48:53] <stealth_> aphysically, i wrote the python cffi library for it https://github.com/YoSTEALTH/Liburing
[12:49:21] *** Quits: ihristov (~ihristov@85.187.46.226) (Quit: Connection closed)
[12:49:21] <aphysically> yeah it's been around for a couple years now so I imagine it's at the point where people can think about using it
[12:49:31] <stealth_> hard party is already done.
[12:49:39] *** Joins: rsx (~dummy@ppp-188-174-137-236.dynamic.mnet-online.de)
[12:49:55] *** Quits: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca) (Remote host closed the connection)
[12:49:59] *** Joins: TJ- (~root@user/tj-)
[12:50:06] <supakeen> stealth_: Anyways on the " why must you wait for the buffer to write to socket/file page when you could be doing other things" part, you must wait because your program is not in userspace at that moment.
[12:50:10] *** Joins: greatgatsby (~greatgats@bras-base-toroon0411w-grc-52-142-114-106-7.dsl.bell.ca)
[12:50:18] *** Quits: hightower2 (~hightower@213.147.110.20) (Ping timeout: 268 seconds)
[12:50:36] <stealth_> supakeen, https://github.com/axboe/liburing/issues/451
[12:51:08] <aphysically> maybe eventually we see io_uring utilized by more language stdlibs
[12:51:53] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[12:51:54] *** Quits: dman777 (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net) (Ping timeout: 260 seconds)
[12:51:54] <stealth_> i did write a custom socket for it, to by pass python socket. anything with python stdlib seems slower
[12:52:10] *** Quits: _xor (~xor@72.49.199.147) (Ping timeout: 268 seconds)
[12:52:19] <stealth_> i am even playing around with cython and better double the speed of normal python socket
[12:52:19] *** Quits: orange (~orangeext@user/orangeextract) (Client Quit)
[12:52:22] *** Quits: flagrama (sid145621@id-145621.hampstead.irccloud.com) (Ping timeout: 260 seconds)
[12:52:22] *** Quits: {HD} (~{HD}@86.106.121.213) (Ping timeout: 260 seconds)
[12:52:52] *** Joins: thurs806014 (~thurs@ip68-225-209-147.ph.ph.cox.net)
[12:53:02] <supakeen> aphysically: Slowly but surely.
[12:53:11] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[12:53:49] *** Joins: dman777 (~dman777@76-253-74-225.lightspeed.austtx.sbcglobal.net)
[12:53:49] *** Joins: flagrama (sid145621@id-145621.hampstead.irccloud.com)
[12:54:01] <diverdude> supakeen: what sort of problems?
[12:54:22] <stealth_> aphysically, problem being you need new linux kernel and some of the features are still being added (slowly)
[12:54:25] *** Joins: {HD} (~{HD}@86.106.121.213)
[12:55:10] *** Quits: thurs80601 (~thurs@ip68-225-209-147.ph.ph.cox.net) (Ping timeout: 260 seconds)
[12:55:11] *** thurs806014 is now known as thurs80601
[12:55:22] <supakeen> diverdude: More fun if you figure them out yourself. A good thought is, `send(2)` puts data into the kernel to send, however, when do you get an error if the socket disconnects in between and how do you know how much has actually beent *sent*.
[12:56:04] <supakeen> You have no retry stuff at all yet, so you haven't gotten to that point :)
[12:56:20] <stealth_> aphysically, if you use io_uring only to do file I/O its very good, for socket its not fully there yet!
[12:57:09] *** Joins: tsujp (~tsujp@sourcehut/user/tsujp)
[12:57:15] <aphysically> oic
[12:57:43] *** Quits: gitly (~gitly@148.252.132.132) (Ping timeout: 268 seconds)
[12:58:14] <supakeen> stealth_: What is the relevance of that ticket? You propose a buffer in userspace to avoid a context switch?
[12:58:19] *** Joins: ubert (~Thunderbi@p200300ecdf4fcafee019fddc82d0353e.dip0.t-ipconnect.de)
[12:58:25] <stealth_> aphysically, https://github.com/axboe/liburing/issues/234
[12:59:40] <stealth_> supakeen, well it was more to do with implementing non-blocking write and i linked to that pdf showing how it can improve! but the author thought i was talking about implementing that as feature.
[12:59:40] *** Joins: gitly (~gitly@185.69.144.172)
[13:00:14] <stealth_> none the less he mentions he is working on non-blocking write, so whenever thats done, it will become a thing.
[13:00:49] *** Joins: saribro (~swinnenb@user/swinnenb)
[13:00:49] *** Joins: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net)
[13:01:16] *** Quits: gggp (~gggp@111-251-142-222.dynamic-ip.hinet.net) (Client Quit)
[13:01:54] <supakeen> Am I just confused or were we not talking about socket.h?
[13:02:05] <diverdude> supakeen: the thing is i cannot do 2 way communication...i can just send and then let the client worry about picking it up
[13:02:08] *** Joins: sharperguy (~sharpergu@78.47.72.158)
[13:02:27] <diverdude> supakeen: because that the way the system i am imitating is doing
[13:02:31] <supakeen> diverdude: I mean, it's TCP you already have '2-way communication'.
[13:02:35] <supakeen> But sure.
[13:03:01] <diverdude> supakeen: and it will all run on localhost
[13:03:10] <stealth_> supakeen, write/send are the same under the hood?
[13:03:12] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:03:39] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[13:04:16] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[13:04:23] *** Joins: Payam (~Payam@138.106.57.131)
[13:04:25] *** Quits: swinnenb (~swinnenb@user/swinnenb) (Ping timeout: 260 seconds)
[13:04:27] <supakeen> send/recv are supersets of write/read that are socket aware-ish.
[13:04:28] *** Quits: subho (~subho@2405:201:9001:a0fc:f04d:1c5d:5899:3f08) (Quit: subho)
[13:04:53] *** Joins: orange (~orangeext@user/orangeextract)
[13:05:13] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[13:05:26] *** Quits: ubert (~Thunderbi@p200300ecdf4fcafee019fddc82d0353e.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[13:05:26] *** Quits: rexbinary (~rexbinary@user/rexbinary) (Read error: Connection reset by peer)
[13:05:29] *** Joins: shad (~shad@user/shad)
[13:05:52] *** Joins: vladoski (~vladoski@2001:b07:add:d406:a519:d1b5:95b3:256f)
[13:05:58] <supakeen> (e.g. they can pass a flags argument for the socket)
[13:06:09] <Payam> Hi, I have two huge dictionaries I want to compare them by looping in dictionary A's element and see if it exists in dict B. What is the best of doing that given that they are so big
[13:07:07] *** Joins: legola (~legola@46.235.101.181)
[13:07:22] <supakeen> Payam: If you are comparing keys, sets are usually your friend.
[13:07:25] *** Joins: plastico (~plastico@neomutt/plastico)
[13:07:52] *** Joins: tWqaq (~tWqaq@180.169.35.114)
[13:08:42] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:08:59] *** Joins: rexbinary (~rexbinary@user/rexbinary)
[13:09:05] *** Quits: sharperguy (~sharpergu@78.47.72.158) (Ping timeout: 256 seconds)
[13:09:10] <stealth_> supakeen, not sure where you were going with it, you can pass flags into read/write as well
[13:09:26] <supakeen> stealth_: Do a `man 2 send` and read it.
[13:10:08] <stealth_> supakeen, https://docs.python.org/3/library/os.html#os.pwritev
[13:10:18] <supakeen> pwritev is write now?
[13:10:47] *** Joins: sharperguy (~sharpergu@static.121.167.4.46.clients.your-server.de)
[13:10:58] <stealth_> they both write! lol
[13:11:08] <supakeen> ...
[13:12:36] <supakeen> If that even made sense those flags are not the flags that send takes anyways.
[13:13:27] *** Joins: strugee (~strugee@strugee.net)
[13:13:37] <stealth_> you want those to be exactly the same? i am saying they are similar
[13:14:14] *** Quits: ApostleInTriumph (~ApostleIn@vpn2.lix.polytechnique.fr) (Ping timeout: 256 seconds)
[13:16:00] *** Quits: mcpac82 (~textual@212.25.0.228) (Quit: mcpac82)
[13:16:21] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[13:16:50] *** Quits: Codaraxis (~Codaraxis@user/codaraxis) (Ping timeout: 268 seconds)
[13:16:52] <supakeen> 1. I said send = write + flags, `man 2 send` says: "The only difference between send() and write(2) is the presence of flags.". 2. You come up with an entirely different function pwritev(2) that that doesn't take those flags at all but 'they both write'.
[13:17:36] <Payam> supakeen, the dictionary looks like this dict = {"key":[{"second_key":blabla, "third_key":[ {"name":3232, "hahah": ...}]}]}. I am comparing second key, third_key and "name".
[13:18:02] *** Quits: vladoski (~vladoski@2001:b07:add:d406:a519:d1b5:95b3:256f) (Ping timeout: 260 seconds)
[13:18:33] <supakeen> Ah, that'll be a bit more difficult Payam. You'll have to do that entire for loop at least once so just do it with the for loop :)
[13:18:44] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:18:48] <stealth_> supakeen, pwritev = write + pwrite
[13:18:59] *** Quits: sharperguy (~sharpergu@static.121.167.4.46.clients.your-server.de) (Ping timeout: 264 seconds)
[13:19:06] <Payam> I was thinking about yieding. but I don't know if that would complicate stuff and is a overkill ...
[13:19:14] <supakeen> stealth_: Just stop.
[13:19:24] *** Joins: sazawal (~sazawal@2401:4900:55a2:f7df:a87f:295f:915d:2f5)
[13:19:31] *** Quits: sazawal (~sazawal@2401:4900:55a2:f7df:a87f:295f:915d:2f5) (Remote host closed the connection)
[13:20:25] *** Joins: sharperguy (~sharpergu@static.123.167.4.46.clients.your-server.de)
[13:21:46] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[13:22:01] *** Joins: ubert (~Thunderbi@2a02:8109:9880:303c:ca5b:76ff:fe29:f233)
[13:23:36] *** Quits: dntreou (~yakiza@cpc91196-cmbg18-2-0-cust129.5-4.cable.virginm.net) (Ping timeout: 268 seconds)
[13:25:16] *** Joins: dntreou (~yakiza@inet-2a02-6900-8808-e010--2f1.oracle-ocna.com)
[13:25:27] *** Joins: blindguard (~blindguar@2a02:908:1864:c200::12)
[13:26:18] *** Joins: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1)
[13:29:17] *** Joins: mcpac82 (~textual@212.25.0.228)
[13:29:22] *** Quits: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca) (Quit: WeeChat 3.3)
[13:30:44] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[13:31:09] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[13:31:10] *** Joins: nomic (~nomic@185.192.69.211)
[13:32:04] <Payam> supakeen This is my dictionary and I only want to get the dictionary inside `"modules":[ ` so I was thinking of x = *(*(my_dict["SR"]))["modules"]) . But it doesn't seem work
[13:32:10] <Payam> https://bpa.st/MSJA
[13:32:25] *** Quits: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca) (Quit: Leaving)
[13:34:35] *** Quits: irf21k (~irf21k@2401:4900:33d6:a8f7:1:2:3b1:c86d) (Ping timeout: 264 seconds)
[13:35:38] *** Joins: mike18 (~geri@217-149-167-230.nat.highway.telekom.at)
[13:35:39] <mike18> hi
[13:35:44] <mike18> i see that mypy error: https://ideone.com/7a5iyC
[13:35:47] *** Joins: _xor (~xor@72.49.199.147)
[13:35:47] <mike18> any idea why?
[13:36:37] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[13:37:06] *** Quits: gulzar (~gulzar@14.139.123.36) (Quit: Konversation terminated!)
[13:37:06] *** Joins: darksun (~darksun@user/darksun)
[13:37:58] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[13:38:43] <mike18> i think it returns any
[13:38:47] <mike18> but my question is why?
[13:38:55] *** Joins: computeiro (~Wender@189.37.66.8)
[13:39:21] *** Joins: kostkon_ (~androirc@2.142.66.94.static.otenet.gr)
[13:39:44] *** Joins: tobybl (~tobybl@213.31.135.91)
[13:40:36] *** Joins: weedmic (~weedmic@109-186-1-92.bb.netvision.net.il)
[13:41:29] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Ping timeout: 268 seconds)
[13:41:40] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[13:41:47] *** Joins: LabMonkey (~LabMonkey@206.255.106.67)
[13:42:46] *** Quits: sharperguy (~sharpergu@static.123.167.4.46.clients.your-server.de) (Ping timeout: 260 seconds)
[13:43:17] *** Joins: LabMunkeh (~LabMonkey@206.255.106.67)
[13:43:21] *** Quits: Mechanismus (~LabMonkey@206.255.106.67) (Ping timeout: 268 seconds)
[13:45:19] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[13:45:33] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:45:38] *** Joins: mayhew (~jm@hlfxns017vw-47-55-124-51.dhcp-dynamic.fibreop.ns.bellaliant.net)
[13:46:29] *** Quits: LabMonkey (~LabMonkey@206.255.106.67) (Ping timeout: 256 seconds)
[13:46:35] *** Quits: darksun (~darksun@user/darksun) (Remote host closed the connection)
[13:49:57] *** Quits: apollo13 (apollo13@django/moderator/apollo13) (Quit: ZNC - http://znc.in)
[13:50:25] *** Joins: perrierjouet (~perrier-j@modemcable012.251-130-66.mc.videotron.ca)
[13:50:39] *** Joins: apollo13 (apollo13@django/moderator/apollo13)
[13:53:02] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[13:54:23] *** Joins: sharperguy (~sharpergu@138.201.43.166)
[13:58:08] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[13:59:51] *** Quits: tWqaq (~tWqaq@180.169.35.114) (Quit: Leaving)
[13:59:58] *** Quits: nomic (~nomic@185.192.69.211) (Quit: Leaving)
[14:00:30] <parv> Payam, You seem to have too many *, (). Use the recursive subscript as the example shows: y['SR'][0]['modules']. You could use`map` for the general case to go through the list of y['SR'].
[14:00:57] <parv> mike18, I have no context about what you are asking?
[14:02:09] <supakeen> mike18: common annoyance that i've seen a bunch of times as well, it means it doesn't know the type
[14:02:12] <mike18> parv: try to understand what any means
[14:02:33] <supakeen> you can do `return int(...)` if you wish
[14:02:51] <mike18> why it doesnt know the type?
[14:03:16] <supakeen> Probably because pendulum doesn't have types
[14:03:26] <mike18> thats good or bad?
[14:03:34] <parv> mike18, Oh wait you question is related to static type checker? Sorry for the noise then
[14:03:39] <supakeen> I don't know.
[14:03:43] *** Joins: joel135 (sid136450@hampstead.irccloud.com)
[14:03:43] <mike18> yeah mypy
[14:03:44] <bjs> mike18: for you? bad
[14:03:53] *** Joins: lbracher (~lucas@94.105.106.159.dyn.edpnet.net)
[14:03:57] <supakeen> But if the type information isn't available and you want to use type information that's probably bad :)
[14:04:17] <mike18> it seems to work when i do return int()
[14:04:19] <bjs> mike18: if the libraries you use don't write type declarations then mypy cannot know what type they return,  so when you say `-> int` and you call a thing that doesn't have type information mypy --strict will reject it
[14:04:33] <Knyght> is there something like the speed center but for historical versions? I want to see how e.g. 3.8 compares to 3.6
[14:04:35] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 264 seconds)
[14:05:29] <bjs> mike18: yes it will, it's not a nice solution. Maybe you just want to tell the typechecker to ignore the fact it's an Any
[14:05:42] <mike18> better use int()
[14:05:50] <bjs> mike18: probably not?
[14:05:59] <mike18> no?
[14:06:05] <bjs> I mean int works because int(Any) always works, not because it's actually safe
[14:06:12] *** Joins: fikran (~fikran@user/fikran)
[14:06:31] <mike18> except they change the library
[14:06:43] <bjs> mike18: what do you mean, change the library?
[14:06:52] <mike18> add a specific type
[14:07:01] <lbracher> Hello! Could somebody help me figuring out why I don't get matches on this regex? `re.findall('a\b', '-a- a 1a1')` . Python version is 3.8.10. Thanks in advance!
[14:07:49] <bjs> lbracher: did you mean r'a\b' or 'a\\b'
[14:08:22] <bjs> lbracher: the string 'a\b' doesn't actually containing any / characters.
[14:08:26] <lbracher> bjs, thanks! 'a\\b'. :)
[14:08:50] <bjs> lbracher: most people prefer writing regex's with strings with the r ("raw") prefix to stop Python escaping things
[14:08:57] *** Joins: darksun (~darksun@user/darksun)
[14:09:02] <bjs> so that you don't have to escape your escapes everywhere in regex land
[14:09:27] <lbracher> Oh, true! Raw strings are better for that, thanks! :)
[14:09:33] <bjs> mike18: yes,  mypy doesn't really work so well if you want to annotate your functions which call a library which is not annotated
[14:09:50] <mike18> so its ok to do return int() ?
[14:10:21] <bjs> mike18: mypy won't complain,  but that's because mypy never complains about int(Any)
[14:10:24] <bjs> not because mypy checked it was sfae.
[14:10:25] <bjs> safe*
[14:10:31] <mike18> ok
[14:10:43] <bjs> mike18: and if you're writing things just to make mypy happy not to make mypy check it's safe
[14:10:46] <bjs> ... why are you using mypy at all?
[14:10:54] <mike18> to find bugs
[14:11:16] <bjs> mike18: int(Any) *Always succeeds* you will never find a bug from that line,  it's no safer than just telling mypy to ignore that line
[14:11:18] *** Quits: weedmic (~weedmic@109-186-1-92.bb.netvision.net.il) (Quit: Konversation terminated!)
[14:11:32] <mike18> ok
[14:12:21] <bjs> mike18: this isn't to say that calling int() is wrong,  and indeed in many cases calling int() on something is the correct solution. e.g. if you have a string and want an int, or other int conversions
[14:12:45] <bjs> but note that int(some_Any) is -not- doing any typechecking
[14:12:52] <mike18> yeah
[14:12:58] *** Quits: onichomp666 (~onichomp@2806:264:4404:8200:508f:5385:2f29:b2d1) (Read error: Connection reset by peer)
[14:12:59] <mike18> but using any is also useless?
[14:13:36] *** Joins: onichomp666 (~onichomp@2806:264:4404:8200:508f:5385:2f29:b2d1)
[14:15:15] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[14:15:41] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[14:16:36] *** Joins: p-i-_ (~Ohmu@223.206.64.253)
[14:16:57] <bjs> mike18: Any is really just an escape. it means mypy doesn’t know the type so will let you do anything
[14:17:08] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[14:17:47] *** Quits: gitly (~gitly@185.69.144.172) (Ping timeout: 264 seconds)
[14:17:54] <bjs> calling int() may or may not be the right thing to do, but calling it specifically to make mypy happy is probably not because mypy isn’t checking it’s safe to do so
[14:18:05] <bjs> it’s seeing it’s an Any and going (okay I won’t check then)
[14:18:42] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 260 seconds)
[14:19:22] *** Joins: gitly (~gitly@85.255.235.214)
[14:19:59] *** Quits: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[14:20:20] *** Joins: gitesh (uid423739@id-423739.ilkley.irccloud.com)
[14:20:21] *** Quits: p-i- (~Ohmu@mx-ll-223.206.64-253.dynamic.3bb.co.th) (Ping timeout: 268 seconds)
[14:21:34] *** Joins: LucaTM (~LucaTM@user/lucatm)
[14:23:16] *** Joins: w0rp (w0rp@2a01:7e00::f03c:91ff:fedb:589)
[14:26:53] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[14:28:00] *** Joins: mickey8 (~user@user/mickey)
[14:28:33] *** Joins: weedmic (~weedmic@109-186-1-92.bb.netvision.net.il)
[14:30:59] *** Quits: sharperguy (~sharpergu@138.201.43.166) (Ping timeout: 264 seconds)
[14:33:21] *** Quits: upsala (~zcb@185.213.155.232) (Quit: WeeChat 3.3)
[14:35:14] *** Joins: cthulchu (~Cthulchu@193.194.107.250)
[14:35:14] *** Joins: cthulchu_ (~Cthulchu@193.194.107.250)
[14:35:16] *** Quits: RiFo (~RiFo@user/rifo) (Quit: ... and thanks for all the fish.)
[14:35:19] *** Joins: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk)
[14:36:50] *** Joins: RiFo (~RiFo@user/rifo)
[14:38:09] *** Quits: onichomp666 (~onichomp@2806:264:4404:8200:508f:5385:2f29:b2d1) (Read error: Connection reset by peer)
[14:38:43] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Remote host closed the connection)
[14:40:19] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[14:40:54] <amogorkon> annotating stuff with Any just to make mypy happy is a bad, horrible practice
[14:41:14] <lericson> Any are you OK, are you OK Any?
[14:41:16] <mike18> amogorkon: what you ususally do?
[14:41:39] <amogorkon> i don't use mypy until i've got my types nailed down
[14:42:04] <mike18> that any came from the third party lib called pendulum
[14:42:23] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[14:42:50] <amogorkon> wasn't there a way to annotate third party modules explicitely?
[14:43:12] <jinsun> I just add ignore-miissing-imports for the library that doesn't have annotations
[14:43:16] <supakeen> typeshed.
[14:43:44] *** Quits: tspng (~tspng@2a02:168:a1a1:1:4850:13d9:85ba:163d) (Remote host closed the connection)
[14:43:47] <amogorkon> imo there is only a bare handful of legitimate uses of Any and making mypy happy is none of them
[14:43:54] *** Quits: Praise (~Fat@user/praise) (Ping timeout: 260 seconds)
[14:43:57] <jinsun> would be better to fix the annotation, but not always easy
[14:44:50] <bjs> amogorkon: I don’t think anyone is suggesting annotating with Any
[14:45:12] <mike18> i run mypy --ignore-missing-imports btw
[14:45:45] <amogorkon> bjs, implicitely with int() though
[14:46:03] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:46:30] <jinsun> mike18: your any return problem can be solved by doing `result: int = self.now.in_timezone(tz_str).hour; return result` too
[14:46:35] <bjs> amogorkon: I’m not understanding
[14:46:45] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Client Quit)
[14:46:49] <mike18> jinsun: yeah
[14:46:51] <amogorkon> what jinsun said
[14:46:53] <jinsun> mypy complains about Any only in return line, not in assignment
[14:47:20] <amogorkon> there are different ways to nail types down
[14:47:45] <bjs> none of these remove the any
[14:48:37] <jinsun> yeah, the only way to remove Any here is to fix the annotatons for the library
[14:49:20] <jinsun> which is a bit too much work (specislly if you are not the library author yourself)
[14:49:22] <bjs> yep
[14:50:46] <amogorkon> post an issue and ask the author to do it
[14:53:11] <jinsun> or add annotations to typeshed if the author won't do it
[14:53:14] *** Joins: anonymeowo (~anonymeow@185.213.154.243)
[14:53:36] *** Joins: y1n (~y1n@178.115.76.211.wireless.dyn.drei.com)
[14:54:18] *** Quits: mcpac82 (~textual@212.25.0.228) (Quit: mcpac82)
[14:54:19] *** Joins: mattmcc (matt@2600:3c00::f03c:91ff:fe89:c2e8)
[14:54:50] <jinsun> which can be doable with stubgen and manual updates later, if the library doesn't change very often
[14:55:04] *** Quits: kostkon_ (~androirc@2.142.66.94.static.otenet.gr) (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
[14:55:22] <jinsun> but if it changes too much then it will be annoying to maintain the annotations
[15:00:58] *** Joins: otisolsen70 (~otisolsen@80.80.4.2)
[15:02:14] *** Quits: weedmic (~weedmic@109-186-1-92.bb.netvision.net.il) (Quit: Konversation terminated!)
[15:03:44] *** dcaro is now known as dcaro_lunch
[15:04:23] *** Joins: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de)
[15:05:27] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Ping timeout: 276 seconds)
[15:06:08] *** Quits: tsujp (~tsujp@sourcehut/user/tsujp) (Quit: Client closed)
[15:07:11] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[15:07:13] *** Quits: parv (~quass@user/parv) (Ping timeout: 268 seconds)
[15:08:46] *** Joins: JordanBelford (~JordanBel@193.203.2.244)
[15:09:58] *** Quits: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net) (Read error: Connection reset by peer)
[15:10:14] *** Joins: matrixbot_bartab (~matrixbot@155.210.31.93.rev.sfr.net)
[15:10:43] *** Quits: p-i-_ (~Ohmu@223.206.64.253) (Remote host closed the connection)
[15:11:52] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[15:12:23] <grandfso> does 'with' statement have 'else' ?
[15:12:46] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 268 seconds)
[15:14:31] *** Joins: Xalphor (~hil@193.203.2.244)
[15:16:04] *** Quits: renrelkha (~renrelkha@user/renrelkha) (Quit: bye)
[15:16:24] *** Joins: renrelkha (~renrelkha@user/renrelkha)
[15:17:04] *** Quits: jetchisel (jetchisel@user/jetchisel) (Ping timeout: 268 seconds)
[15:18:50] *** Joins: jetchisel (jetchisel@user/jetchisel)
[15:19:44] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[15:20:02] <nedbat> grandfso: no
[15:20:11] <nedbat> grandfso: what would it do?
[15:21:22] *** Joins: vulpes_vulpes (~vulpes_vu@62-64-205-221.dynamic.dial.as9105.com)
[15:21:51] *** Joins: vladoski (~vladoski@93-47-225-6.ip114.fastwebnet.it)
[15:23:13] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:23:37] *** Joins: mickey8 (~user@user/mickey)
[15:24:17] *** Quits: JordanBelford (~JordanBel@193.203.2.244) (Excess Flood)
[15:24:26] *** Joins: imakestuff (~imakestuf@197.156.77.161)
[15:24:29] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[15:24:34] *** Quits: imakestuff (~imakestuf@197.156.77.161) (Quit: Leaving...)
[15:25:16] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[15:25:57] <vladoski> how does this work? @patch("foo.datetime.date", **{"today.return_value": date(2021, 10, 31)})
[15:25:57] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[15:26:10] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[15:26:12] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[15:26:26] <vladoski> i mean doesn't **{} populate the dictionary as key arguments in a function?
[15:26:37] <vladoski> how can something with a . work?
[15:27:12] <lericson> it can only be read as **kwargs in the receiving function
[15:27:19] <ThiefMaster> anyone knows if there's a flake8 plugin that forbids `foo and bar or foobar` without parentheses?
[15:27:48] <vladoski> lericson, ahh nice I didn't think about that
[15:27:51] <vladoski> makes sense
[15:30:27] *** Joins: jcvfen (~jcvfen@user/jcvfen)
[15:30:36] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[15:30:49] *** Joins: milkt (~debian@gateway/tor-sasl/milkt)
[15:31:30] *** Joins: Sheilong (uid293653@id-293653.ilkley.irccloud.com)
[15:33:19] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[15:33:42] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[15:34:09] *** Quits: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net) (Ping timeout: 256 seconds)
[15:34:13] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:34:39] *** Joins: mickey8 (~user@user/mickey)
[15:34:57] *** Quits: Khoyo (~khoyo@user/khoyo) (Ping timeout: 268 seconds)
[15:34:57] *** Joins: imakestuff (~imakestuf@197.156.77.161)
[15:35:00] <imakestuff> https://dpaste.org/uDkD
[15:35:10] *** Quits: milkt (~debian@gateway/tor-sasl/milkt) (Client Quit)
[15:35:11] *** Quits: baltazar (~baltazar@193-110-63-186.cable-modem.hdsnet.hu) (Ping timeout: 264 seconds)
[15:35:26] <imakestuff> why this the call object.__setattr__(self, new_attr_name, value) made instead of super().__setattr__?
[15:36:01] *** Joins: thrillgore (~ZugZug@69-225-55-100.lightspeed.nsvltn.sbcglobal.net)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:13] <nedbat> imakestuff: not sure. sometimes you have to do odd things to avoid infinite recursion, but idk if this is one of those times.
[15:36:22] <nedbat> imakestuff: where did this code come from?
[15:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:36:31] <imakestuff> nedbat: python koans
[15:36:48] *** Quits: NineBAR (~NineBAR@c-107-5-176-200.hsd1.mi.comcast.net) (Ping timeout: 268 seconds)
[15:36:53] *** Joins: baltazar (~baltazar@178-164-254-231.pool.digikabel.hu)
[15:36:55] <imakestuff> you're right! I didn't consider recursion!
[15:36:57] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[15:37:13] <imakestuff> but what would super() refer to in this case?
[15:37:19] <imakestuff> object isn't it?
[15:37:50] *** Joins: johnnyrichard (~johnnyric@c213-89-136-181.bredband.tele2.se)
[15:37:52] <bjs> imakestuff: whatever the "parent" class would be for the instance
[15:37:55] <bjs> which may or may not be object
[15:38:44] *** Joins: theprophet (~theprophe@85.114.228.184)
[15:38:47] <imakestuff> bjs: the class overrides "object"
[15:38:53] <bjs> imakestuff: I saw
[15:39:04] <bjs> imakestuff: but what super() gives you depends on what type `self` is
[15:39:13] <raek> imakestuff: you can see the chain of classes that super() goes through by checking YourClass.__mro__ (method resolution order)
[15:39:17] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Ping timeout: 268 seconds)
[15:39:24] <imakestuff> but doing "print( super().__class__)" gives me <class 'super'>
[15:39:33] <imakestuff> I don't know what that means
[15:39:39] <imakestuff> yeah super is next_mro right?
[15:39:41] <bjs> imakestuff: it means it was super() :)
[15:39:47] <bjs> imakestuff: yes, basically.
[15:40:13] *** Joins: Khoyo (~khoyo@user/khoyo)
[15:40:23] <raek> no, if I recall correctly, super() returns some kind of temporary proxy object.
[15:40:34] <imakestuff> aha
[15:40:39] <bjs> yes,  because it binds self
[15:40:40] <imakestuff> how do inspect the MRO?
[15:40:57] <bjs> imakestuff: print(SomeClass.__mro__)
[15:40:58] <raek> ah, yes. the methods you call on the result of super() goes to the next class in the MRO
[15:41:07] <imakestuff> doing print( PossessiveSetter.mro) gives me <built-in method mro of type object at 0x132f38f60>
[15:41:23] *** Parts: SlaveGeek334269 (~SlaveGeek@gateway/vpn/pia/slavegeek334269) ()
[15:41:27] <bjs> imakestuff: well, it's a method did you try calling it :)
[15:42:16] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[15:42:25] <raek> imakestuff: this is an explanation of super() that really helped me: https://rhettinger.wordpress.com/2011/05/26/super-considered-super/
[15:42:47] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[15:42:54] <imakestuff> raek: thanks. I'll read it!
[15:42:56] <bjs> imakestuff: super() is a shorthand for super(ThisClass, self)  so it uses information both of what the class is, but also what type the instance actually was
[15:43:17] <imakestuff> aha
[15:43:23] <bjs> imakestuff: even though that class happened to inherit from object does not mean that the super will be object,  because self might not be an instance of that class
[15:43:27] <bjs> it might be a child class
[15:43:41] <imakestuff> in my above paste i replaced object.__setattr__  to super().__setattr__(new_attr_name, value)
[15:43:45] <imakestuff> and it's didn't work
[15:44:08] <bjs> imakestuff: "didn't work"?
[15:44:12] <raek> when each class only inherets from a single class, then the method resolution order simply goes from bottommost subclass -> ... classes ... -> object
[15:44:16] *** Quits: penguino (~mrpenguin@user/mrpenguin) (Remote host closed the connection)
[15:44:21] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Ping timeout: 256 seconds)
[15:44:25] <imakestuff> bjs: let me send the new snippet
[15:44:43] *** Joins: penguino (~mrpenguin@user/mrpenguin)
[15:44:55] <raek> with multiple inheritance, the MRO does something clever and interesting (see the article)
[15:45:00] *** Quits: luke-jr (~luke-jr@user/luke-jr) (Quit: ZNC - http://znc.sourceforge.net)
[15:45:31] *** Joins: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566)
[15:45:34] *** Joins: v01d4lph4 (~v01d4lph4@user/v01d4lph4)
[15:45:44] <imakestuff> bjs: i had a mistake on my snippet
[15:45:54] <imakestuff> works the same as object.__setattr__
[15:46:06] <imakestuff> no idea why the koan uses object instead of super
[15:46:16] <imakestuff> raek: i learned that from the koans. very interesting stuff
[15:46:24] <imakestuff> the way it orders the super classes etc..
[15:46:34] <bjs> imakestuff: well, it does unless you have complex (multiple) inheritance hierarchies
[15:46:38] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[15:46:40] <imakestuff> and let left right resolution too!
[15:46:53] <bjs> imakestuff: maybe these "koans" just aren't very good
[15:46:59] <raek> it is neat
[15:47:01] <imakestuff> bjs: they are great!
[15:47:04] *** Joins: mickey8 (~user@user/mickey)
[15:47:06] *** Joins: luke-jr (~luke-jr@user/luke-jr)
[15:47:17] <imakestuff> they needed to ensure sth else maybe
[15:47:29] <imakestuff> i thought it was something i need to pay attention to
[15:48:42] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[15:50:37] <jinsun> they probably don't expect that class to be inherited
[15:50:38] *** Quits: v01d4lph4 (~v01d4lph4@user/v01d4lph4) (Ping timeout: 260 seconds)
[15:50:56] <jinsun> if it is not inhertied, super() and object will be same
[15:51:51] *** Joins: ali12341 (~al@user/ali1234)
[15:52:46] <imakestuff> BTW why isn't __setattr__ called for private attributes?
[15:52:58] *** Quits: ali1234 (~al@user/ali1234) (Remote host closed the connection)
[15:53:25] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Ping timeout: 256 seconds)
[15:53:54] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[15:54:13] <imakestuff> here's an example https://dpaste.org/Bbng
[15:54:47] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Quit: aллилѹіа!)
[15:54:51] *** Quits: CombatVet (~c4@user/combatvet) (Ping timeout: 276 seconds)
[15:54:57] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[15:54:59] *** Quits: otisolsen70 (~otisolsen@80.80.4.2) (Quit: Leaving)
[15:55:14] <bjs> imakestuff: what makes you say it's not being called?
[15:55:31] *** Joins: CombatVet (~c4@user/combatvet)
[15:55:42] *** Joins: Elodin (~weechat@user/elodin)
[15:55:43] <imakestuff> bjs: the custom setter in the snippet alters names of attributes
[15:55:53] <imakestuff> it doesn't do that for private attributes
[15:55:55] <bjs> imakestuff: but only `if attr_name[0] != '_'`
[15:55:58] <imakestuff> run it!
[15:56:15] <bjs> imakestuff: yes your code literally checks if the attr name doesn't start with an underscore and only changes the name if it doesn't start with an underscore
[15:56:19] <imakestuff> sorry man
[15:56:23] <bjs> imakestuff: sorry?
[15:56:24] <imakestuff> i need to read that
[15:56:34] <bjs> huh?
[15:56:41] <imakestuff> i meant needed to review the code before asking here
[15:56:49] <bjs> well at least read it yeah :)
[15:57:21] <bjs> imakestuff: there is no such thing as a "private variable" in Python anyway.
[15:57:24] <imakestuff> the koan as a test that says "test_in_this_case_private_attributes_remain_unmangled" so i thought i was there to teach something
[15:57:27] <bjs> This is just a variable that starts with the underscore character
[15:57:38] <imakestuff> which is to show they are special
[15:57:40] <bjs> imakestuff: the evidence so far makes it seem like these koans aren't very good
[15:57:47] <bjs> imakestuff: there is nothing special about _names
[15:57:53] <bjs> the _ is just part of the name, like any other character.
[15:57:57] <imakestuff> because that iw what i thought too !
[15:58:04] <imakestuff> they are just there to warn you
[15:58:06] *** Quits: shad (~shad@user/shad) (Ping timeout: 260 seconds)
[15:58:11] <imakestuff> they only matter in packages
[15:58:24] <grym> not even then
[15:58:24] <imakestuff> when you import * they are not auto imported
[15:58:36] <grym> (unless you change __all__ _
[15:59:02] <bjs> imakestuff: well they're not hidden or anything, and it's only * imports (which are already kind of funky) that look at the underscore
[15:59:38] *** Joins: thiras (~thiras@user/thiras)
[16:00:42] <imakestuff> bjs: they ignore them unless they are inside __all__
[16:00:59] <bjs> imakestuff: * imports do yes, like I said, it's only the * imports and they're weird anyway
[16:01:05] <imakestuff> why do you say they are funky though?
[16:01:07] <bjs> I think the language would be better if * imports were deleted
[16:01:12] <bjs> imakestuff: * imports? because they are
[16:01:23] <imakestuff> i totally agree with you!
[16:01:28] *** Quits: Khoyo (~khoyo@user/khoyo) (Ping timeout: 268 seconds)
[16:01:40] <imakestuff> it's good to keep in mind they are not a good idea
[16:01:59] <imakestuff> esp for a lang like python where there is no strong static analysis
[16:02:58] <imakestuff> bjs: BTW i love the koans b/c they game a mental map of concepts i need to know about python like descriptors etc
[16:03:11] <bjs> except they seem to be misleading you?
[16:03:15] <bjs> so maybe they're not very good
[16:03:24] <jinsun> imakestuff: there is strong static type checking nowadays (optional though)
[16:03:47] *** Quits: johnnyrichard (~johnnyric@c213-89-136-181.bredband.tele2.se) (Quit: leaving)
[16:03:56] <jinsun> and your type checker will defnitely not like it if you use * imports
[16:03:58] <imakestuff> jinsun: yeah i learned.. i will explore it
[16:04:11] *** Joins: Khoyo (~khoyo@user/khoyo)
[16:04:15] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:3062:b2a9:609e:be67)
[16:04:15] <imakestuff> jinsun: not type checker job to check that
[16:04:23] <imakestuff> but will tell you if you use * and the wrong class
[16:04:30] *** Joins: johnnyrichard (~johnnyric@c213-89-136-181.bredband.tele2.se)
[16:04:49] <bjs> well it really is, the type checker might just give up with * imports because it's too complicated to work out where things actually come from
[16:05:41] <nedbat> imakestuff: pylint will tell you if you use * imports, and will tell you if it brought in something that you never used.
[16:06:27] <imakestuff> nedbat: what editor/IDE do you use?
[16:06:28] <jinsun> oh mypy doesn't actually complain about * imports, I thought it would
[16:06:33] *** Quits: bitdex (~bitdex@gateway/tor-sasl/bitdex) (Ping timeout: 276 seconds)
[16:06:42] <jinsun> flake8, pylint, and pylance do though
[16:06:43] <nedbat> imakestuff: i use vim, with no linting or autocomplete installed
[16:06:44] <imakestuff> i use pycharm and it's great at helping you with stuff
[16:06:59] <nedbat> imakestuff: pycharm is fabulous
[16:07:07] <imakestuff> yeah it's insane
[16:07:48] <nedbat> imakestuff: that's another word for it.  all the pop-ups and annotations make me feel like i'm coding in Times Square
[16:08:14] <nedbat> imakestuff: i watch demos by other devs, and I think, "what am I supposed to be looking at!?"
[16:08:24] *** Quits: markb1 (~markb1@2600:1700:eb40:7ecf:d29:7f9f:ec16:1313) (Remote host closed the connection)
[16:08:35] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Quit: Leaving)
[16:08:52] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[16:09:39] <grym> nedbat: as much or as little as you please.  (i turn off at least two of pycharm's features and never turn them on)
[16:10:32] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[16:10:39] *** Joins: shad (~shad@user/shad)
[16:10:53] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[16:11:21] *** Joins: mickey8 (~user@user/mickey)
[16:11:33] *** Joins: gareppa (~gareppa@user/gareppa)
[16:11:38] <imakestuff> nedbat: they are called inlay hints
[16:11:42] <nedbat> grym: maybe in the future.
[16:11:51] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Client Quit)
[16:11:53] <The-Compiler> nedbat: lmao the times square thing would make a great tweet
[16:11:57] *** Joins: sedeki (~textual@user/sedeki)
[16:12:10] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[16:12:12] *** Joins: AsenMx (~AsenMx@78.90.248.234)
[16:12:15] *** Quits: gareppa (~gareppa@user/gareppa) (Client Quit)
[16:12:17] <imakestuff> I don't think they are great for the code you right b/c they encourage you not to type things the IDE infers
[16:12:19] <grym> nedbat: (with one exception i distrust editor vcs integration, and i don't like how weird pycharm's venv "help" is)
[16:12:43] <imakestuff> nedbat: i know a bit of vim navigating etc.. how do i practice to be intermediate?
[16:12:45] *** Joins: daoudr_ (~daoudr@gateway/vpn/pia/daoudr)
[16:12:48] <LordKalma> Quick question. When I run "python setup.py bdist_wheel" it says: "SetuptoolsDeprecationWarning: setup.py install is
[16:12:48] <LordKalma> deprecated. Use build and pip and other standards-based tools.". But with pip I can't find a way to make my cffi_modules in my setup() arguments build...
[16:12:52] <bjs> imakestuff: use vim a lot
[16:13:06] <grym> ^
[16:13:09] <leduyquang753> Read the manual also.
[16:13:25] <grym> and i guess vimtutor ..? i don't use vim
[16:13:29] <imakestuff> bjs: :help is enough?
[16:13:33] <The-Compiler> grym: https://magit.vc/ is the only editor vcs integration I felt comfortable with (thankfully there's a clone for VS Code, edamagit)
[16:13:34] <LordKalma> (also, pretty much any editor has a "vim mode" if you want to practice... vscode, qt creator....
[16:13:42] <bjs> imakestuff: enough for what?
[16:13:48] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[16:13:50] <imakestuff> to learn
[16:13:51] *** Quits: AsenMx (~AsenMx@78.90.248.234) (Changing host)
[16:13:51] *** Joins: AsenMx (~AsenMx@user/asenmx)
[16:13:52] <leduyquang753> imakestuff There is also https://vim.fandom.com for a collection of useful tips.
[16:13:54] <grym> The-Compiler: why yes, i use magit too :D
[16:13:58] <grym> but the full-fat variant
[16:14:07] *** Joins: slowButPresent (~slowButPr@user/slowbutpresent)
[16:14:14] *** Quits: AsenMx (~AsenMx@user/asenmx) (Remote host closed the connection)
[16:14:16] <LordKalma> Anyway, pip with cffi_modules on setuptools... Any idea? pip install . doesn't build them
[16:14:25] <grym> The-Compiler: (i typically have pycharm open to screw around with code, and emacs open alongside to do everything else)
[16:14:33] *** Joins: AsenMx (~AsenMx@user/asenmx)
[16:14:54] *** Quits: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 260 seconds)
[16:15:02] <bjs> imakestuff: well the help docs tell you everything
[16:15:02] <imakestuff> bjs: https://twitter.com/iamdevloper/status/435555976687923200?lang=en
[16:15:10] <bjs> whether they're the best way to learn,  i don't know
[16:15:33] *** Joins: fikran (~fikran@user/fikran)
[16:15:40] *** Quits: daoudr (~daoudr@2a02:1205:c690:ca10:3d58:ccf6:72f8:5c4a) (Ping timeout: 268 seconds)
[16:15:41] <The-Compiler> grym: magit and which-key/spacemacs is what kept me with emacs for quite some time, until I discovered some people replicated that for VS Code
[16:16:09] *** Joins: subho (~subho@2405:201:9001:a0fc:f04d:1c5d:5899:3f08)
[16:16:17] <bjs> buckets of examples and a massive help doc is not necessarily the best way to learn in general,  you're just going to have to use vim a lot
[16:16:26] <grym> The-Compiler: i'm an org junkie for all work organization, and my hands learned readline/emacs in 2003 or something and there's no going back :D
[16:17:37] *** Joins: LogicAside (~LogicAsid@user/logicaside)
[16:18:41] *** Joins: ggnoredo (~user@212.98.236.50)
[16:18:42] <bjs> imakestuff: most people have pretty custom setups in vim that come about because they just try things out and find what works for them
[16:19:00] <imakestuff> bjs: i know using a lot the only way to mastery. it's' my default go-to when I ssh but i want to be great
[16:19:06] <bjs> some people have vims that look like IDEs and others (like me) have vims that are basically just text editors
[16:19:19] *** Joins: upsala (~zcb@185.213.155.232)
[16:19:20] <imakestuff> i know how to yank and paste delete line etc
[16:19:24] <imakestuff> search
[16:19:26] <bjs> imakestuff: you'll never "master" vim, or probably Python either.
[16:19:39] <bjs> just use it enough to do what you need :P
[16:19:45] <imakestuff> but I don't yet feel more productive in VIM mode yet
[16:20:05] <imakestuff> IntelliJ has Vim mode and i tried it last time only to swich back to ouse
[16:20:08] <imakestuff> *mouse
[16:20:08] *** Joins: DaPinkOne (~Dap@user/dap)
[16:20:10] *** Quits: subho (~subho@2405:201:9001:a0fc:f04d:1c5d:5899:3f08) (Client Quit)
[16:20:11] <imakestuff> ;)
[16:20:17] <imakestuff> :)
[16:20:17] <bjs> imakestuff: then don't use it?  I mean, it's just a tool and it's not necessarily for everyone.
[16:20:23] *** Joins: xrogaan (~xrogaan@user/xrogaan)
[16:20:32] <imakestuff> I know but I already like things i use it for
[16:20:38] <Zweimer> https://bpa.st/422Q  << The logging in line 20 and 23 is not working properly (the log is not visible). Line 20 should be visible since I set the Level to 0 (line 11). Why run() is never executed is beyond me.
[16:20:47] <Zweimer> Any idea what's going wrong?
[16:20:49] *** Joins: daoudr__ (~daoudr@2a02:1205:c690:ca10:cc28:1113:28f4:cbb8)
[16:20:50] <imakestuff> so i know i'll like it more when i learn to swap lines etc. which i always do in intellij
[16:21:04] *** Quits: dntreou (~yakiza@inet-2a02-6900-8808-e010--2f1.oracle-ocna.com) (Remote host closed the connection)
[16:21:16] <imakestuff> i don't like using the mouse very much. i like the idea of navigating with / etc
[16:21:23] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Quit: very_sneaky)
[16:21:24] <imakestuff> thats' why i want to be good at it
[16:21:58] <Zweimer> https://bpa.st/JEVQ << With the console output
[16:22:30] <raek> LordKalma: I don't know the answer to your question, but there is a #cffi channel, FYI
[16:22:39] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[16:22:42] <LordKalma> yes, but not very active :/
[16:23:04] *** Quits: jcvfen (~jcvfen@user/jcvfen) (Ping timeout: 268 seconds)
[16:23:28] *** Quits: minip (~minip@user/minip) (Remote host closed the connection)
[16:23:46] *** Joins: sharperguy (~sharpergu@88.130.216.207)
[16:23:47] *** Quits: daoudr_ (~daoudr@gateway/vpn/pia/daoudr) (Ping timeout: 264 seconds)
[16:25:01] *** Joins: pycurious (~Adium@user/pycurious)
[16:25:02] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[16:25:34] *** Quits: mIk3_08 (~Thunderbi@user/mik3-08/x-2852566) (Quit: mIk3_08)
[16:25:53] *** Joins: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu)
[16:26:08] *** Joins: clarkk (~clarkk@host81-159-136-27.range81-159.btcentralplus.com)
[16:28:33] *** Quits: upsala (~zcb@185.213.155.232) (Ping timeout: 256 seconds)
[16:28:53] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[16:29:05] *** Joins: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net)
[16:30:32] *** Joins: upsala (~zcb@185.213.155.252)
[16:30:35] *** Joins: Pandadub (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f)
[16:31:36] *** Joins: zeden (~zeden@user/zeden)
[16:32:00] *** Joins: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net)
[16:32:31] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 256 seconds)
[16:32:39] *** Joins: Gerula_ (~Gerula@user/gerula)
[16:32:39] *** Gerula is now known as Guest4688
[16:32:39] *** Gerula_ is now known as Gerula
[16:32:44] *** Quits: Gerula (~Gerula@user/gerula) (Client Quit)
[16:32:52] *** Quits: zeden (~zeden@user/zeden) (Client Quit)
[16:33:39] *** Joins: zeden (~zeden@user/zeden)
[16:34:36] *** Joins: rinzewind (~rinzewind@user/rinzewind)
[16:36:38] *** Quits: l4yer (~l4yer@159.48.55.8) (Ping timeout: 268 seconds)
[16:36:38] *** Quits: Guest4688 (~Gerula@user/gerula) (Ping timeout: 268 seconds)
[16:37:25] *** Joins: sazawal (~sazawal@2401:4900:55a0:7769:7ec8:a78:f778:575e)
[16:37:36] <Zweimer> https://bpa.st/JEVQ  << line 71 should run the run() function in line 22 but somehow it is not. However, I cannot see my mistake.
[16:40:56] *** Quits: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[16:41:47] *** Joins: l4yer (~l4yer@159.48.55.8)
[16:42:11] *** Joins: subho (~subho@49.37.52.71)
[16:42:26] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[16:42:48] *** Quits: CrypticSquared (~CrypticS_@user/crypticsquared) (Ping timeout: 268 seconds)
[16:43:19] *** Quits: Leonarbro (~Leonet@user/leonarbro) (Quit: Bye)
[16:43:51] *** Joins: han-solo (~hanish@user/han-solo)
[16:45:15] *** Joins: tspng (~tspng@2a02:168:a1a1:1:9561:c033:3a83:2ed8)
[16:45:39] *** Joins: pycurious (~Adium@user/pycurious)
[16:45:41] *** Quits: dhill__ (~dhill@modemcable103.217-80-70.mc.videotron.ca) (Quit: robotnik~~)
[16:46:15] *** Joins: dhill (~dhill@modemcable103.217-80-70.mc.videotron.ca)
[16:47:06] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[16:47:11] *** Quits: clarkk (~clarkk@host81-159-136-27.range81-159.btcentralplus.com) (Quit: Leaving)
[16:47:38] *** Joins: johnnyrichard32 (~johnnyric@c213-89-136-181.bredband.tele2.se)
[16:48:27] *** Joins: aknot (~aknot@2603:900a:1503:17bb:3a2:4ed2:6be6:224b)
[16:48:47] *** Joins: arseru (uid515527@user/arseru)
[16:48:57] *** Quits: gitly (~gitly@85.255.235.214) (Ping timeout: 256 seconds)
[16:49:22] <arseru> Hmmmmmph, I misclicked and set PyCharm to ignore all warnings about method variables that should be lowercase. Anybody knows how can I set it back?
[16:49:24] *** Quits: pycurious (~Adium@user/pycurious) (Client Quit)
[16:49:31] *** Quits: weibullguy (weibullguy@gateway/vpn/protonvpn/weibullguy) (Ping timeout: 256 seconds)
[16:50:14] <Payam> I have this list : https://bpa.st/LJQQ I want to figure out a one liner to determine if `CAV-10440` exists in the `branches` list. Can someone help me out?
[16:50:14] *** Joins: bloodninja123 (~bloodninj@user/bloodninja)
[16:50:16] *** Joins: fcjsx (~fcjsx@2800:a4:83a:6f00:bed:7899:84a2:6b69)
[16:50:26] *** Quits: winterflaw (~winterfla@gateway/tor-sasl/winterflaw) (Remote host closed the connection)
[16:50:29] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[16:50:30] *** Quits: fcjsx (~fcjsx@2800:a4:83a:6f00:bed:7899:84a2:6b69) (Remote host closed the connection)
[16:50:32] *** Joins: pycurious (~Adium@user/pycurious)
[16:50:40] <Payam> arseru that is a static analysis thing. Look for its settings.
[16:50:51] *** Quits: Hunterkll (~hunterkll@2001:470:8b06:100:2958:1194:aedf:1fa3) (Remote host closed the connection)
[16:51:02] <Payam> it is called "linting" in python arseru
[16:51:45] *** Quits: y1n (~y1n@178.115.76.211.wireless.dyn.drei.com) (Remote host closed the connection)
[16:51:53] <arseru> Payam: can't you stringify the whole thing and do a `"CAV-10440" in s` ?
[16:51:58] *** Joins: Roey (~Roey@user/Roey)
[16:52:30] <Payam> Just realised that I had wrong list : https://bpa.st/LNHA
[16:52:47] <Payam> arseru yes but the list is huuge.
[16:54:30] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 268 seconds)
[16:55:04] <dman777> https://dpaste.org/PrcP I am taking 2 lists and combining them together. if fieldName in bar already exists, than do not use the one in foo but take bar's instead. Is there a cleaner way to do this?
[16:55:07] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 268 seconds)
[16:55:07] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[16:55:30] *** Joins: gitly (~gitly@85.255.235.214)
[16:56:11] *** Quits: segfaultbanana (~segfaultb@user/segfaultbanana) (Ping timeout: 264 seconds)
[16:56:22] <arseru> if somebody uses Pycharm, can you please create this `test.py` file and tell me what is the exact message when PyCHarm warns you about modifying `FOO` var to be lowercase? https://bpa.st/MHAQ
[16:57:56] *** Joins: cuppajoeman (sid521943@id-521943.hampstead.irccloud.com)
[16:58:23] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[16:58:39] *** dcaro_lunch is now known as dcaro
[17:00:18] *** Joins: anddam (~anddam@user/anddam)
[17:00:23] *** Quits: aknot (~aknot@2603:900a:1503:17bb:3a2:4ed2:6be6:224b) (Ping timeout: 264 seconds)
[17:00:29] *** Joins: wender (~Wender@186.210.44.115)
[17:00:52] *** Joins: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br)
[17:00:58] *** Quits: Bronto22 (~mennoh@84-86-247-193.fixed.kpn.net) (Quit: Konversation terminated!)
[17:01:11] *** Joins: pycurious (~Adium@user/pycurious)
[17:01:29] *** Quits: jess (~jess@libera/staff/jess) ()
[17:02:07] *** Joins: nomic (~nomic@185.192.69.211)
[17:02:29] *** Joins: CrypticSquared (~CrypticS_@user/crypticsquared)
[17:02:38] *** Joins: Ben_1 (~ben@2001:16b8:5046:d700:1fb8:17db:b28d:2f59)
[17:03:07] *** Quits: computeiro (~Wender@189.37.66.8) (Ping timeout: 256 seconds)
[17:03:41] *** Parts: Ben_1 (~ben@2001:16b8:5046:d700:1fb8:17db:b28d:2f59) ()
[17:04:12] *** Joins: lus3Rz (~lus3Rz@gateway/tor-sasl/lus3rz)
[17:04:37] <lidless> sure
[17:05:08] <han-solo> dman777: that paste is not found
[17:05:47] *** Quits: pycurious (~Adium@user/pycurious) (Ping timeout: 264 seconds)
[17:06:09] <dman777> han-solo: sorry...here is a new one https://dpaste.org/YoNe
[17:06:28] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[17:06:37] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[17:06:59] *** Joins: segfaultbanana (~segfaultb@user/segfaultbanana)
[17:07:28] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:07:37] *** Quits: drdesquire_ (~drlp@2601:4c0:4180:3750:a71d:815c:bb15:7d29) (Quit: Xi no likey!)
[17:08:01] *** Joins: drdesquire_ (~drlp@2601:4c0:4180:3750:a71d:815c:bb15:7d29)
[17:08:15] <lidless> arseru: https://usercontent.irccloud-cdn.com/file/QPxC83gz/image.png
[17:08:26] *** Joins: password4 (~password@user/password2)
[17:08:58] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[17:09:44] *** Quits: legola (~legola@46.235.101.181) (Remote host closed the connection)
[17:09:59] *** Quits: gitly (~gitly@85.255.235.214) (Ping timeout: 264 seconds)
[17:10:27] <dman777> han-solo: I think I did that list wrong anyways
[17:10:40] *** Quits: johnnyrichard (~johnnyric@c213-89-136-181.bredband.tele2.se) (Quit: leaving)
[17:10:49] *** Joins: gitly (~gitly@85.255.235.214)
[17:11:04] <arseru> lidless: thanks! I found it with this, it was a PEP8 N806 ignored warning :)
[17:11:31] <lidless> <3
[17:11:54] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:12:33] *** Joins: johnnyrichard (~johnnyric@c213-89-136-181.bredband.tele2.se)
[17:13:19] *** Joins: lionslicer (~lionslice@2804:d41:a7a6:1300:edbd:587a:83cb:1c2)
[17:15:26] *** Quits: johnnyrichard32 (~johnnyric@c213-89-136-181.bredband.tele2.se) (Quit: Client closed)
[17:15:39] *** Quits: johnnyrichard (~johnnyric@c213-89-136-181.bredband.tele2.se) (Client Quit)
[17:15:53] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[17:15:56] *** Joins: johnnyrichard (~johnnyric@c213-89-136-181.bredband.tele2.se)
[17:16:07] *** Joins: Inline (~Inline@2a02:908:1252:7a80:c927:fbd7:acc4:9375)
[17:16:58] *** Quits: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f) (Ping timeout: 260 seconds)
[17:17:13] *** Quits: stranac (~stranac@195.29.239.126) (Read error: Connection reset by peer)
[17:18:10] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[17:18:31] *** Joins: pycurious (~Adium@user/pycurious)
[17:18:42] *** Joins: kostkon_ (~kostkon@athedsl-393765.home.otenet.gr)
[17:18:59] *** Quits: kostkon (~kostkon@athedsl-394022.home.otenet.gr) (Ping timeout: 256 seconds)
[17:21:11] *** Quits: Inline (~Inline@2a02:908:1252:7a80:c927:fbd7:acc4:9375) (Quit: Leaving)
[17:21:34] *** Joins: nrg (~NRG@user/nrg)
[17:22:03] *** Quits: fdan86 (~fdan@103.215.168.1) (Quit: Client closed)
[17:24:11] <han-solo> dman777: https://bpa.st/3SGQ # i wonder if you were going for this ?
[17:24:15] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:24:31] *** Joins: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com)
[17:24:36] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:24:55] *** Joins: winterflaw (~winterfla@gateway/tor-sasl/winterflaw)
[17:25:19] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.0)
[17:25:48] *** Quits: AlanMD (~AlanMD@86.121.179.183) (Remote host closed the connection)
[17:26:08] *** Joins: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se)
[17:26:16] *** Joins: Inline (~Inline@2a02:908:1252:7a80:ab95:d5d6:558a:3a83)
[17:26:27] *** Joins: AlanMD (~AlanMD@86.121.179.183)
[17:27:01] *** Quits: Mattiaslndstrm (~Mattiasln@c213-103-137-235.bredband.tele2.se) (Client Quit)
[17:29:11] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[17:31:15] *** Joins: Vornicus (~Vornicus@2603-8000-5d07-7ef0-5127-c5ae-948a-d7af.res6.spectrum.com)
[17:32:39] *** Joins: awmv (~awmv@2a02:21b0:644f:c181:584:81be:2a7a:6e5d)
[17:33:44] *** Joins: Trieste_ (T@user/pilgrim)
[17:34:36] *** Quits: Trieste (T@user/pilgrim) (Ping timeout: 268 seconds)
[17:35:05] *** Joins: pro_z (~pro_z@37.214.44.138)
[17:37:26] *** Joins: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is)
[17:39:28] *** Joins: dcode200 (~dcode200@87-63-32-71-dynamic.dk.customer.tdc.net)
[17:39:43] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[17:40:49] *** Quits: lus3Rz (~lus3Rz@gateway/tor-sasl/lus3rz) (Remote host closed the connection)
[17:41:12] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[17:41:24] *** Joins: lus3Rz (~lus3Rz@gateway/tor-sasl/lus3rz)
[17:41:32] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[17:42:16] *** Joins: mickey8 (~user@user/mickey)
[17:42:47] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[17:43:38] *** Joins: anddam (~anddam@user/anddam)
[17:44:02] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[17:44:33] *** Quits: grooverman_ (~grooverma@177.102.119.40) (Remote host closed the connection)
[17:45:37] *** Joins: grooverman (~grooverma@177.102.119.40)
[17:47:15] *** Joins: alkino (~quassel@user/alkino)
[17:48:22] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[17:48:29] *** Joins: LiftLeft (~LiftLeft@gateway/vpn/pia/liftleft)
[17:48:38] *** Quits: mr_ab (~nobody@74-207-237-112.ip.linodeusercontent.com) (Remote host closed the connection)
[17:48:47] <dman777> han-solo: thanks, I like that one alot more
[17:49:33] *** Quits: herjazz (~herjazz@p6758124-ipngn30801marunouchi.tokyo.ocn.ne.jp) (Quit: leaving)
[17:49:49] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[17:50:22] <han-solo> make sure it does what you want though
[17:51:34] *** Quits: ali12341 (~al@user/ali1234) (Remote host closed the connection)
[17:51:55] <dman777> +1
[17:53:39] *** Joins: ali1234 (~al@user/ali1234)
[17:53:48] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.0)
[17:54:56] *** Quits: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net) (Ping timeout: 268 seconds)
[17:56:40] *** Joins: CrazyEddy (crazyed@2603:300a:1d10:c000:de4a:3eff:fe88:cc5f)
[17:57:35] *** Joins: akk (~akk@75.161.146.115)
[17:59:30] *** Joins: dthpulse (~quassel@podciarou.sk)
[18:01:59] *** Joins: JimmyRustles (Haddock@cpc119394-smal16-2-0-cust17.19-1.cable.virginm.net)
[18:02:10] <JimmyRustles> my python trading bot just made its first buy
[18:02:11] <JimmyRustles> :)
[18:02:21] *** Quits: sazawal (~sazawal@2401:4900:55a0:7769:7ec8:a78:f778:575e) (Quit: Leaving)
[18:02:28] <zln> Hope it knows what it's doing :D
[18:02:40] <zln> What did it buy?
[18:03:31] <JimmyRustles> ICP, GRT, LINK, SHIB, and UMA, all cryptocurrencies
[18:04:08] <JimmyRustles> it's at 0.1% profit right now lol
[18:04:09] <zln> well, it follows the trends at least :p
[18:04:15] <zln> lol :)
[18:04:38] <JimmyRustles> yeah the whole idea is to jump on the trending cryptos, it finds the top 5 best performing cryptos in the past 24hrs and allocates 40%, 30%, 10%, 10%, 10% to them
[18:04:54] <JimmyRustles> and keeps repeating that every half an hour, buying and selling to keep the proportions right
[18:05:02] <zln> Make your bot public so everyone can have a portofolio that the bot is managing
[18:05:03] <zln> :D
[18:05:11] <JimmyRustles> i will if it works for me
[18:05:25] <zln> :D
[18:05:27] <zln> Nice idea
[18:05:46] <zln> should hire a math guy that is good at probability and statistics too
[18:05:47] <zln> :D
[18:05:50] <hexology> i've thought about doing that for reddit cryptos and stocks
[18:06:03] <zln> hexology: fork this :p
[18:06:09] <hexology> lol if they open source it sure
[18:06:27] <hexology> i never had the time in the past, arguably "making money" should be worth my time but i am a human and humans are foolish
[18:06:37] <zln> yes we are
[18:06:41] <zln> you're not alone
[18:06:44] <zln> we come in peace :p
[18:06:49] <lidless> buy shib and hold.
[18:06:54] <JimmyRustles> i was putting off writing this because the APIs were a bit of a headache, but i decided to force myself to write it cause i wanted to see if it could actually make money
[18:07:22] <zln> JimmyRustles: you should publish a report on web that we can follow :)
[18:07:36] <zln> times, buys, sells to track
[18:07:38] <zln> :p
[18:07:40] <kosh> I would expect this to work only if very few people do it
[18:07:49] <kosh> if many do it then it will lose everything
[18:07:57] <zln> yeah, if many do it then nobody wins
[18:07:59] <hexology> yes
[18:07:59] <zln> :)
[18:08:03] <Samian> how do you convert a variable name to a string of the name? I remember there's a way to do it in python
[18:08:06] <kosh> oh it is way worse than that
[18:08:23] <kosh> if too many people are running bots you can make money by exploiting the bots
[18:08:27] <hexology> Samian: you can't in regular code
[18:08:33] <Samian> __repr__(), __str__(), locals().. it was some trick along that line
[18:08:35] <zln> kosh: maybe that's your domain :D
[18:08:35] <hexology> you can do weird stuff by accessing frames and stuff
[18:08:39] <hexology> yeah, locals
[18:08:51] <hexology> tldr don't do it for anything "serious"
[18:09:04] <grym> Samian: every time you find yourself wanting to do this, ask yourself if a dict of strings could work instead
[18:09:25] *** Quits: fabs (~fabs@2607:fb60:2501:2805:dea6:32ff:fed8:2af3) (Read error: Connection reset by peer)
[18:09:49] <kosh> zln, well this stuff is done for trading also but the algorithms have to be much more complex with more safeguards because the early versions lost BIG
[18:09:55] *** Joins: p-i- (~Ohmu@mx-ll-223.206.64-253.dynamic.3bb.co.th)
[18:10:56] <zln> kosh: well, who's fault is that? the bots, developers or the loosers? :D
[18:11:32] *** Joins: sleepingforest (~sleepingf@user/sleepingforest)
[18:13:02] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[18:13:33] <sleepingforest> i havent been finding very much information about python use in microservices and eventing, such as saga orchestrators.  I've found a few example repos and then the nameko. Lots of articles about fastapi and flask used for microservices. Am i missing something? is python not used for eventing microservices much?
[18:13:34] *** Joins: mickey8 (~user@user/mickey)
[18:14:55] *** Quits: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net) (Quit: The Lounge - https://thelounge.chat)
[18:18:59] *** Quits: Khoyo (~khoyo@user/khoyo) (Ping timeout: 264 seconds)
[18:19:37] *** Quits: sharperguy (~sharpergu@88.130.216.207) (Ping timeout: 256 seconds)
[18:19:44] *** Quits: pgib (~textual@173.38.117.89) (Quit: 00 PC LOAD LETTER)
[18:19:59] *** Joins: dawg (dirtydawg@triton.blinkenshell.org)
[18:20:33] *** Joins: Praise (~Fat@user/praise)
[18:20:56] <Samian> grym  actually vars(the_variable_name) does the trick
[18:21:12] <Samian> vars() was the magic call i was looking for!
[18:21:15] <grym> Samian: _sometimes_
[18:21:17] *** Joins: sharperguy (~sharpergu@fnord.cryptophone.de)
[18:21:23] <Samian> true
[18:21:37] *** Joins: SirScott (~SirScott@c-67-176-100-163.hsd1.co.comcast.net)
[18:21:40] <Samian> I'm dealing with argparse arguments. so it works in my case
[18:21:46] <Samian> thankfully
[18:21:51] <grym> Samian: long long ago i figured out how to do this in matlab and that was a _weird_ day
[18:22:27] *** Quits: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk) (Ping timeout: 256 seconds)
[18:22:28] <kosh> grym, and later someone had to maintain your code and started pricing out what it would take to hire someone to break your legs ;)
[18:22:32] <grym> it was also horrible, because i now had to know magic strings that did not appear _in_ my code, in order to write more code, and i abandoned this idea very rapidly
[18:22:41] <grym> kosh: no, we went out of business.
[18:22:42] *** Quits: gitly (~gitly@85.255.235.214) (Ping timeout: 268 seconds)
[18:23:14] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[18:23:15] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[18:23:49] <kosh> grym, your fault? ;)
[18:24:02] *** Quits: nomic (~nomic@185.192.69.211) (Quit: Leaving)
[18:24:06] <grym> kosh: not even a little, but that code's dead and gone and safely disposed of
[18:24:33] *** Joins: Khoyo (~khoyo@user/khoyo)
[18:24:52] <jinsun> Samian: but vars(the_variable_name) doesn't give you "the_variable_name"
[18:24:54] *** Joins: fikran (~fikran@user/fikran)
[18:25:43] *** Joins: otisolsen70 (~otisolsen@xd4ed80b5.cust.hiper.dk)
[18:25:59] *** Joins: ricky (rickybob@gateway/vpn/protonvpn/rickybob)
[18:26:15] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[18:26:21] <[itchyjunk]> Hi, i am curious about a line of code here https://jakevdp.github.io/blog/2012/08/18/matplotlib-animation-tutorial/
[18:26:29] <[itchyjunk]> line, = ax.plot([], [], lw=2)
[18:26:37] <[itchyjunk]> how do you get that lhs? line, = ?
[18:26:52] *** Joins: drewlander (~drewlande@173-80-249-48.bklycmtk03.res.dyn.suddenlink.net)
[18:26:54] <[itchyjunk]> doesnt a,b = something means something returns a tuple and gets assigned to a and b ?
[18:27:04] <[itchyjunk]> and if you want to assign it to nothing, you do a,_ = something ?
[18:27:27] <jinsun> if it is tuple with one item you can do `a, =` also
[18:28:05] <jinsun> for two items you will need `a, _ = something`
[18:28:21] <[itchyjunk]> hmmmm tuple with one item, interesting
[18:28:31] <jinsun> and for arbitrary amount of items you will need `a, *_ = something`
[18:29:12] <jinsun> and not nessarily tuple, it can be any iterable
[18:29:41] *** ricky is now known as rickybob2
[18:30:08] <[itchyjunk]> ah, that's useful to know
[18:31:11] *** Joins: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr)
[18:31:34] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[18:31:39] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[18:31:49] *** Joins: gitly (~gitly@148.252.133.191)
[18:32:07] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Gotta go, see you guys later.)
[18:32:19] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[18:32:32] *** Joins: damonlynch (~ngaio@static-68-235-44-10.cust.tzulo.com)
[18:32:56] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[18:33:06] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[18:33:23] <ApostleInTriumph> Hello. I have a source array A of size (20, 128, 128, 128). i have a query of size B (20, 4000, 3) which is a long integer. I would like to fetch the B index from array A such that final output is (20,4000,1) How to do this indexing?
[18:34:45] *** Joins: anddam (~anddam@user/anddam)
[18:35:03] *** Quits: Pandadub (~Barones@2804:7f3:8987:f411:a5a5:30be:b120:e93f) (Quit: Leaving)
[18:35:26] *** Joins: FluffyMask (~masque@user/fluffymask)
[18:35:45] *** Joins: Gerula (~Gerula@user/gerula)
[18:36:34] *** Quits: ckdCreations (~ckdCreati@147.55.133.134) (Read error: Connection reset by peer)
[18:37:13] *** Joins: ethrl (~morty@user/doforlove33)
[18:38:32] *** Joins: rickybob (uid410295@2a03:5180:f:1::6:42b7)
[18:40:07] *** Parts: arseru (uid515527@user/arseru) ()
[18:40:28] *** Quits: FinnElija (~finn_elij@user/finn-elija/x-0085643) (Remote host closed the connection)
[18:40:42] <[itchyjunk]> What does `return line,` do as opposed to `return line` ?
[18:40:54] *** Joins: FinnElija (~finn_elij@user/finn-elija/x-0085643)
[18:40:56] *** Parts: johnnyrichard (~johnnyric@c213-89-136-181.bredband.tele2.se) ()
[18:41:00] *** Quits: lus3Rz (~lus3Rz@gateway/tor-sasl/lus3rz) (Remote host closed the connection)
[18:41:05] <hexnewbie> [itchyjunk]: Returns a one-element tuple, same as: return (line, )
[18:41:10] <grym> [itchyjunk]: returns a tuple
[18:41:33] *** Joins: ckdCreations (~ckdCreati@147.55.133.131)
[18:41:35] <zln> so much for readability :p
[18:41:39] <[itchyjunk]> or it forces value to be packaged inside (package) before returning?
[18:41:56] <[itchyjunk]> (value) i mean *
[18:42:02] <Wooble> [itchyjunk]: (obj) isn't a tuple. (obj,) is.
[18:42:08] <[itchyjunk]> ah..
[18:42:17] *** Joins: kickingvegas (~cchoi@c-24-5-40-20.hsd1.ca.comcast.net)
[18:42:23] <grym> [itchyjunk]: all python functions return exactly one value.  Sometimes, that value is a collection!
[18:42:48] *** Quits: theprophet (~theprophe@85.114.228.184) (Quit: Client closed)
[18:43:15] *** Quits: ggnoredo (~user@212.98.236.50) (Read error: Connection reset by peer)
[18:44:16] <[itchyjunk]> makes sense.
[18:44:45] <lericson> probably my least favorite thing about python syntax :(
[18:44:51] <[itchyjunk]> the animate(i) function take an argument i. he calls it when declaring anim but there is doesn't pass anything to animate
[18:45:56] <grym> [itchyjunk]: almost.  he's passing _the function animate itself_ to animation.AnimationFunction
[18:45:57] <[itchyjunk]> i want to draw lines in animation, this is what i have so far : https://bpa.st/4XAA
[18:45:57] *** Joins: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[18:46:38] <[itchyjunk]> right, but the function animate itself take a parameter i, doesn't it?
[18:46:44] <grym> when it is called, yes
[18:46:51] <[itchyjunk]> oh he's not calling it but he's passing it as a parameter..
[18:46:53] <grym> he's not calling it there
[18:46:54] <[itchyjunk]> hmmmmmmmmmmmmm
[18:46:54] <grym> right
[18:47:09] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[18:47:11] <grym> and then somewehre inside animation.FuncAnimation, something else you don't see _will_ calli t
[18:47:28] <[itchyjunk]> in my case, i wanted animate to depend on 4 values, x_1,y_1,x_2,y_2
[18:47:57] <[itchyjunk]> since i wanna draw lines between 2 points
[18:48:07] <[itchyjunk]> argh, maybe i have to handle that inside animate
[18:50:35] *** Quits: rickybob2 (rickybob@gateway/vpn/protonvpn/rickybob) (Quit: pees oot)
[18:51:57] *** Joins: gusto (~Augustus@109.255.100.54)
[18:52:54] *** Joins: bilb_ono (~user@ip184-189-224-55.sb.sd.cox.net)
[18:53:16] <[itchyjunk]> I have no idea what I am doing..
[18:54:44] <ttys000> I have a problem I haven't been able to think of a good solution for and hoping someone here could give me some advice, I don't need actual code, just ideas.
[18:54:59] <ttys000> I have a server that needs to accept both web based HTTP GET/POST requests
[18:55:12] <ttys000> and simultaneously receive classic TCP Socket requests.
[18:55:26] <ttys000> for the HTTP portion it's simple enough with FastAPI or Flask, etc.
[18:55:57] <ttys000> But the challenge I run into is if I also try to listen on a socket, my script is in an infinite look listening for socket connections, and it rejects all the HTTP connections.
[18:56:33] <ttys000> My guess on the best way to handle this would be some sort of multi threading?
[18:57:05] <grym> ttys000: fastAPI is async already, which probably helps
[18:57:53] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.3)
[18:57:54] <ttys000> hmm so maybe i need to find a way to write an async socket listener. i probably need to read a bit more about async and python, that's new to me.
[18:58:49] <ttys000> oh, i see: https://docs.python.org/3/library/asyncore.html
[18:58:56] <ttys000> ok. thanks grym this is a good idea.
[18:59:08] <han-solo> Deprecated since version 3.6: Please use asyncio instead.
[18:59:16] <ttys000> ah
[18:59:18] <ttys000> hah
[18:59:30] *** Joins: masta`` (~oyster@user/masta/x-2645138)
[18:59:33] <ttys000> if i'm using FastAPI, is that a different async than asyncio?
[18:59:43] <lericson> no
[18:59:48] <ttys000> ok.
[19:00:25] <grym> fastAPI uses anyio
[19:00:26] *** Quits: leitz (~LeamHall@cpe-173-172-58-72.tx.res.rr.com) (Quit: nappy time)
[19:00:32] <han-solo> just to clarify, you will get both the request on same port, the HTTP one and not http one ? :)
[19:00:33] <grym> so you can use stdlib or trio
[19:00:57] <ttys000> han-solo not necessarily, i could use a different port for the sockets.
[19:01:05] <han-solo> oh, Okay
[19:01:06] <ttys000> i assumed they would conflict.
[19:01:08] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[19:01:15] <han-solo> yeah, that's what i was wondering :)
[19:01:18] <ttys000> is it actually possible to have multiple listeners on the same port?
[19:02:00] <han-solo> would be a bad idea, i guess
[19:02:12] <ttys000> k
[19:02:13] *** Quits: Xalphor (~hil@193.203.2.244) (Quit: Konversation terminated!)
[19:03:33] *** Quits: mefistofeles (~mefistofe@user/mefistofeles) (Remote host closed the connection)
[19:04:16] *** Quits: ethrl (~morty@user/doforlove33) (Quit: WeeChat 3.0)
[19:04:37] *** Quits: knipster50 (~knipster@user/knipster) (Ping timeout: 268 seconds)
[19:07:06] *** Joins: mefistofeles (~mefistofe@user/mefistofeles)
[19:11:13] *** Joins: gossie (~gossie@2001:1c02:18d:2900:ab04:8a13:19b2:197e)
[19:11:18] *** Quits: delvian (~delvian@41.13.246.79) (Ping timeout: 260 seconds)
[19:12:51] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[19:13:39] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[19:13:54] *** Joins: nrg (~NRG@user/nrg)
[19:14:07] *** Quits: tspng (~tspng@2a02:168:a1a1:1:9561:c033:3a83:2ed8) (Remote host closed the connection)
[19:16:52] <elwoodpd> hello I am trying to write to a csv file and I seem to just be replacing the whole file
[19:17:04] <elwoodpd> struggling to work out the error
[19:17:18] *** Joins: Macuser (~Macuser@2607:b400:26:0:9ca7:a8d7:21ee:5b22)
[19:17:20] *** Joins: Bakunin (~Lindis@user/lindis)
[19:18:09] *** Joins: magla (~gelignite@55d469ae.access.ecotel.net)
[19:18:18] *** Quits: bitblit (~bitblit@gateway/tor-sasl/bitblit) (Ping timeout: 276 seconds)
[19:18:47] <elwoodpd> https://bpa.st/6IPA is my code
[19:18:54] <elwoodpd> any ideas what I am doing wrong?
[19:19:22] <han-solo> 'w' truncates the file
[19:19:43] <darksun> i think you need to replace 'w' with 'a' [append]
[19:19:45] *** LabMunkeh is now known as Mechanismus
[19:19:47] <darksun> if you want to that
[19:19:50] <elwoodpd> ah of course
[19:19:52] <elwoodpd> thanks
[19:20:28] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.0)
[19:21:21] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[19:21:33] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[19:22:18] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[19:22:30] *** Quits: drdesquire_ (~drlp@2601:4c0:4180:3750:a71d:815c:bb15:7d29) (Quit: Xi no likey!)
[19:22:30] *** Quits: kosh (~kosh@user/kosh) (Ping timeout: 268 seconds)
[19:25:04] *** Quits: p-i- (~Ohmu@mx-ll-223.206.64-253.dynamic.3bb.co.th) (Remote host closed the connection)
[19:25:07] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: vvdaiwrw)
[19:25:40] *** Joins: p-i- (~Ohmu@mx-ll-223.206.64-253.dynamic.3bb.co.th)
[19:28:20] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[19:28:36] *** Joins: anddam (~anddam@user/anddam)
[19:29:13] *** Quits: masta`` (~oyster@user/masta/x-2645138) (Read error: Connection reset by peer)
[19:29:23] <chymera> hi guys, is there any package in python which can find all executables containing a string or matching a regex pattern?
[19:29:32] *** Quits: Bakunin (~Lindis@user/lindis) (Remote host closed the connection)
[19:30:04] *** Joins: arinov (~arinov@178.240.154.245)
[19:31:04] <han-solo> *nix only ?
[19:31:18] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:31:18] *** Quits: caveman (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[19:31:26] *** Joins: delvian (~delvian@41.13.246.79)
[19:32:01] *** Joins: Bakunin (~Lindis@user/lindis)
[19:32:15] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[19:32:37] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Read error: Connection reset by peer)
[19:32:55] <chymera> basicall I want to call a shell script from python, but the executable may contain a version component, so I can't just use its name, I need to find all instances matching `mycommand-2.8904182` or whatever
[19:33:16] <chymera> han-solo: I only use unix, but if it could in principle work on windows as well, why not
[19:33:24] <chymera> I wouldn't go out of my way for that, though
[19:34:09] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Read error: Connection reset by peer)
[19:34:24] *** Quits: ExeciN (~ExeciN@user/nicexe) (Remote host closed the connection)
[19:34:38] *** Quits: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net) (Ping timeout: 260 seconds)
[19:34:49] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[19:34:51] *** Quits: gitly (~gitly@148.252.133.191) (Ping timeout: 268 seconds)
[19:35:02] *** Quits: wib_jonas (~wib_jonas@business-37-191-60-209.business.broadband.hu) (Quit: Client closed)
[19:35:22] <Payam> Hi, I have one asynclient and I there are two types of requests. one with token and one with user and passwor. Do you know how I can use both of them on the same instance of AsyncClient? https://bpa.st/D4RA
[19:35:26] *** Quits: FergusL (~freenode4@user/fergusl) (Read error: Connection reset by peer)
[19:35:40] <Payam> is the use of header correct?
[19:35:55] *** dcaro is now known as dcaro_away
[19:36:21] *** Joins: gitly (~gitly@148.252.129.91)
[19:37:00] <han-solo> chymera: i was thinking of a quick `find`, but you could make walk some paths, and find all files matching the pattern
[19:37:01] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:37:13] <han-solo> s/make/maybe/
[19:38:17] <Payam> han-solo could you help me out? :/
[19:38:28] *** Joins: superboot (~agentgasm@user/superboot)
[19:38:32] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 268 seconds)
[19:38:36] *** Quits: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se) (Ping timeout: 260 seconds)
[19:41:40] *** Joins: jcvfen (~jcvfen@user/jcvfen)
[19:42:43] <han-solo> Payam: questions are better directed at the channel, but sure
[19:42:49] <chymera> han-solo: I was thinking regex could somehow look up what's in my executable path
[19:43:03] <chymera> like `print(re.match('blender[-,0-9,\.]*','blender-2.9.4'))`
[19:43:12] <chymera> but I need to get the strings for all my executables
[19:43:14] *** Joins: novasenco (novasenco@user/nova)
[19:43:17] <chymera> from somewhere
[19:43:22] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[19:43:22] <SnoopJ> chymera, you could do `matches = pathlib.Path(ROOT_SEARCH_PATH).rglob("mycommand*")` and then filter the results to only executable files
[19:43:37] <novasenco> Hey I am dumdum and can't google properly. What import for binary or operator ("|")?
[19:43:59] *** Quits: rpkilby (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[19:44:01] <SnoopJ> where ROOT_SEARCH_PATH is something you'd have to specify, but you could look at the paths in os.getenv("PATH") if you want the same behavior your shell would have
[19:44:31] <novasenco> I swear I tried import operator. .. it's operator.or_ rip thx :)
[19:44:35] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[19:45:01] <novasenco> sometimes all you need to do is join the channel and ask - dunno why but usually works for me even if no answer :P
[19:45:01] <SnoopJ> novasenco, yep, that's the one
[19:45:11] <novasenco> hehe tx
[19:45:17] <dman777> newObj = next((y for y in api_responses if y['fieldName'] == field['fieldName']), None); 'if newObj['fieldName'] == field['fieldName']' is giving me a 'NoneType' object is not subscriptable. How can I handle this?
[19:45:35] <SnoopJ> novasenco, probably because of https://en.wikipedia.org/wiki/Rubber_duck_debugging :)
[19:45:53] *** Quits: jcvfen (~jcvfen@user/jcvfen) (Client Quit)
[19:46:10] <imp> I'm using passlib 1.7.4 . When trying to hash using bcrypt  with `import passlib.hash; passlib.hash.bcrypt('secretpassword')`. I get: TypeError: no salt specified. BUT, passlib documentation at ' https://passlib.readthedocs.io/en/stable/lib/passlib.hash.bcrypt.html?highlight=bcrypt' says: Salt is optional, if not set, one will be autogenerated (this is recommended). Anyone knows how to "solve"  this?
[19:46:29] <chymera> novasenco: SnoopJ is there any way to python to know what my $PATH is?
[19:46:40] <ede> novasenco: do you know about symbolhound.com instead of google for this kind of searches?
[19:46:41] <SnoopJ> chymera, `os.getenv("PATH")`
[19:47:05] <han-solo> Payam: https://bpa.st/JHPQ # something like that
[19:47:55] <novasenco> ok thx. one more question. is there a bitwise concatenation operator in std lib?
[19:48:20] <novasenco> like concat([0b1010, 0b1100, 0b1111]) -> 0b101011001111
[19:48:47] <novasenco> or just reduce(or_, (n << i*4 for n in foo))
[19:49:13] <SnoopJ> novasenco, I don't think there is, those are "just" special notation for integers
[19:49:30] <novasenco> I know I just used 0b for clarity but I just want to concat some iterable. thx
[19:49:40] <novasenco> some iterable of ints
[19:49:43] *** Quits: gitly (~gitly@148.252.129.91) (Ping timeout: 256 seconds)
[19:49:52] <novasenco> whose "bit lengths" are "known" to be 4
[19:50:06] *** Joins: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec)
[19:50:17] *** Joins: stdout (~stdout@216.163.21.11)
[19:50:47] *** Joins: kosh (~kosh@user/kosh)
[19:50:54] <SnoopJ> `f"0b{''.join(bin(val)[2:] for val in values)}"` maybe? Calling bin() a bunch is kind of a roundabout way to do it, but it may be fine
[19:51:43] <Payam> han-solo Thank you so much. I will try it now
[19:51:51] *** Joins: gitly (~gitly@85.255.236.179)
[19:51:57] <novasenco> hacky :) or ''.join(format(val, "04b"))
[19:52:13] <novasenco> .. for val in foo
[19:52:23] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[19:52:41] <novasenco> bin() also wouldn't respect leading zeros
[19:52:49] <Klinda> ValueError: operands could not be broadcast together with shapes (7,3) (3,300)
[19:53:07] <Klinda> what shape would be this, to be valid?
[19:53:17] <hexology> for what operation?
[19:53:36] <Klinda> -
[19:53:45] *** Joins: Hexmind (~Hexmind@modemcable049.25-131-66.mc.videotron.ca)
[19:53:50] <hexology> show your code, don't make people guess...
[19:54:01] <Payam> han-solo it didn't work :(
[19:54:03] <SnoopJ> novasenco, there is not a unique number of leading zeros in this notation
[19:54:14] <han-solo> Payam: the first one ?
[19:54:15] <SnoopJ> 0b1, 0b01, 0b001 are all the same integer
[19:54:19] <Klinda>  theta = theta - alpha * gradient
[19:54:43] <Payam> han-solo https://bpa.st/JHPQ <-- this
[19:54:44] <hexology> Klinda: ok... what are the shapes of theta, alpha, and gradient?
[19:54:52] <Klinda> alpha is a constant
[19:55:07] <han-solo> Payam: those are two versions
[19:55:31] <Klinda> (7,3) theta, (300,3) gradient
[19:55:47] <Payam> han-solo the one with 'Basic' init
[19:56:04] <han-solo> Payam: Okay, could you try the first one ?
[19:56:09] *** Quits: rsx (~dummy@ppp-188-174-137-236.dynamic.mnet-online.de) (Quit: rsx)
[19:57:11] <Payam> han-solo same
[19:57:23] *** Quits: tgamblin (~tgamblin@2607:fea8:c29d:d7c0::e120) (Ping timeout: 264 seconds)
[19:57:34] <jinsun> Klinda: those shapes should be same for the minus to work
[19:57:51] <grym> or broadcast-compatable
[19:58:06] <han-solo> Payam: Okay, how does the backend handles the auth ?
[19:58:24] *** Joins: mat001 (~mat001@c-71-202-208-251.hsd1.ca.comcast.net)
[19:58:34] <Klinda> what is the rule of the broadcast-compatable ?
[19:59:18] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:59:37] <Payam> han-solo ohh now I see. I missed the `get` part of the first one.
[20:00:40] <SnoopJ> Klinda, reading the array shapes from the right, the numbers must be the same, or one of them must be 1
[20:01:07] <SnoopJ> Klinda, for the longer story, read this document: https://numpy.org/devdocs/user/basics.broadcasting.html#general-broadcasting-rules
[20:02:48] *** Joins: junktext_ (~junktext@gateway/vpn/pia/junktext)
[20:02:56] *** Quits: Payam (~Payam@138.106.57.131) (Quit: Client closed)
[20:02:59] *** Quits: mickey8 (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[20:03:05] <Klinda> thank you very much
[20:03:39] *** Quits: gossie (~gossie@2001:1c02:18d:2900:ab04:8a13:19b2:197e) (Quit: = "bye bye")
[20:04:49] *** Quits: jjhoo (jahakala@user/jjhoo) (Remote host closed the connection)
[20:05:33] *** Joins: mickey8 (~user@user/mickey)
[20:05:45] *** Joins: oneforall2 (~guru@S0106ec086bc3574f.mh.shawcable.net)
[20:06:36] *** Joins: Akuli (~Akuli@82-203-163-207.bb.dnainternet.fi)
[20:06:41] <novasenco> SnoopJ, but concatenating '10'.'01' is different than '10'.'1' for example
[20:07:08] *** Quits: Macuser (~Macuser@2607:b400:26:0:9ca7:a8d7:21ee:5b22) (Quit: Textual IRC Client: www.textualapp.com)
[20:07:41] *** Quits: pr100 (~pr100@cpc92728-cmbg20-2-0-cust160.5-4.cable.virginm.net) (Quit: Client closed)
[20:08:32] <oneforall2> well looks like I'll go back to 3.9 3.10 is to broke.. tries to compile i386 with all the flags for x86_64 on apps trying to use gcc/g++ clang cc/c++ etc and doesn't semd ld the path for libgcc.a crtben.o etc .. I give up
[20:08:38] <SnoopJ> novasenco, well sure, strings are a different data type.
[20:08:39] *** Joins: theseb (~theseb@47-220-214-54.cnrocmta03.res.dyn.suddenlink.net)
[20:09:22] *** Parts: mickey8 (~user@user/mickey) ()
[20:09:23] <grym> oneforall2: what os?
[20:10:08] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[20:10:28] *** Joins: alzgh (~alzgh@user/alzgh)
[20:10:52] <oneforall2> my own based oiff of slack I see he reverted too. I see arch might have it but lots are still compiled with 3.9
[20:11:17] <grym> oneforall2: pyenv compiled 3.10 cleanly for me on linux
[20:11:42] <SnoopJ> oneforall2, if you would like help with the error, please share the complete error report at https://bpa.st
[20:11:53] <oneforall2> llvm/clang is a pain/mozilla(FF,thunderbird etc)
[20:11:53] <bjs> novasenco: note that you can't have leading zeros in numbers in Python.  0b1, 0b01, and 0b00000001 are all just different ways of writing the same thing.
[20:12:12] <SnoopJ> the notation allows leading zeros, they just don't give a different value, it's strictly notation
[20:12:27] <bjs> novasenco: so you can't write something that gives different answers for 0b01 and 0b1
[20:12:27] <SnoopJ> and bin() gives you the one without any leading zeros
[20:13:20] <oneforall2> grym yeah I was doing good till I tried thunderbird ..
[20:13:40] <grym> oneforall2: drinking and compiling are two great tastes that don't go well together
[20:13:42] *** Quits: Pilate (~pilate@pilate.io) (Ping timeout: 265 seconds)
[20:13:45] *** Quits: spetrosi (~spetrosi@2a02:8308:b:ec00:637b:7e28:3899:e5c1) (Quit: Leaving)
[20:14:50] *** Quits: Forkk (~forkk@li926-228.members.linode.com) (Ping timeout: 260 seconds)
[20:15:06] <oneforall2> compiles with clang wich is compiled with python3.10 I get the -lgcc and the .o not found .. not scanning the subs ..
[20:15:13] *** Quits: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net) (Remote host closed the connection)
[20:15:32] *** Joins: Forkk (~forkk@li926-228.members.linode.com)
[20:16:11] *** Quits: imakestuff (~imakestuf@197.156.77.161) (Remote host closed the connection)
[20:17:01] <oneforall2> clang won't compile its self now either :) same error .. I add the -L/path and it gets the libgcc.a but not the crtben.o cause its not adding the path
[20:17:15] *** Joins: berong91 (~noob4ever@d75-154-235-153.bchsia.telus.net)
[20:17:40] *** Joins: Seiryuu (~Seiryuu@ip174-103-176-143.adsl2.static.versatel.nl)
[20:17:45] <SnoopJ> oneforall2, we can't help you with your Python problem without more information
[20:18:42] *** poiqwepoiqwe_ is now known as poiqwepoiqwe
[20:19:12] *** Joins: stealth_ (~stealth_@216-197-160-97.regn.static.sasknet.sk.ca)
[20:19:37] *** Joins: zebrag (~chris@user/zebrag)
[20:19:49] *** Joins: jjhoo (~jahakala@user/jjhoo)
[20:19:51] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3dfe:56d8:f73a:2910)
[20:19:54] *** Joins: the-mask (~the-mask@user/the-mask)
[20:21:20] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:3062:b2a9:609e:be67) (Quit: Client closed)
[20:21:51] *** Joins: jcvfen (~jcvfen@user/jcvfen)
[20:23:18] *** Joins: mrwick (~mrwick@user/mrwick)
[20:23:47] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[20:24:11] *** Quits: Inline (~Inline@2a02:908:1252:7a80:ab95:d5d6:558a:3a83) (Ping timeout: 268 seconds)
[20:25:02] <hexology> Klinda: so you have a (7, 3) and you are trying to subtract a (300, 3) from it. what behavior are you expecting? 7 does not divide 300, so numpy can't just repeat rows of `theta` to match the shape of `gradient`. hence the error
[20:25:09] *** Joins: emf (~emf@2620:10d:c090:400::5:38d)
[20:26:05] <hexology> and numpy doesn't even do it if one was a multiple of the other, it only broadcasts dimensions of size exactly 1, as SnoopJ pointed out
[20:27:10] *** Joins: computeiro (~Wender@189.37.66.8)
[20:27:22] <hexology> novasenco bjs it sounds like the objective is to concatenate bitfields, in which case you either 1) have to assume that the number of leading zeroes provided by the user is correct, or 2) assume (or require) a pre-specified width for each item
[20:27:56] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[20:29:14] *** Quits: wender (~Wender@186.210.44.115) (Ping timeout: 260 seconds)
[20:29:32] <aphysically> wew tree-sitter indention is not there yet
[20:29:56] <hexology> lol not with python at least. it's pretty bad
[20:29:58] <hexology> same with folding
[20:30:22] <hexology> learning tree sitter is on my todo list...
[20:30:33] *** Quits: tobybl (~tobybl@213.31.135.91) (Remote host closed the connection)
[20:30:35] <hexology> (that is, learning how to write/modify/unfuck a grammar)
[20:31:17] <elwoodpd> If I have some resource intensive task that needs to be done once before another task that is done frequently
[20:31:32] <elwoodpd> and I don't want to do it when a script starts up
[20:31:49] <elwoodpd> how can I do it just before if it is hasn't been done before
[20:31:56] <elwoodpd> does that question make sense?
[20:32:03] <[itchyjunk]> Hi, i copy pasted this code https://matplotlib.org/stable/gallery/animation/simple_anim.html
[20:32:13] <[itchyjunk]> I get this error https://bpa.st/7HOA
[20:32:25] *** Quits: computeiro (~Wender@189.37.66.8) (Remote host closed the connection)
[20:32:39] <hexology> elwoodpd: if this is all on a single machine, maybe you can save some kind of "sentinel" file to indicate that the expensive task has already been completed? maybe containing the unix timestamp of completion. otherwise maybe you can log task completions in a database
[20:32:47] *** Quits: mrwick (~mrwick@user/mrwick) (Ping timeout: 264 seconds)
[20:32:49] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 268 seconds)
[20:33:04] <oneforall2> https://bpa.st/S4VA
[20:33:54] <BrenBarn> itchyjunk: what version of matplotlib are you using?
[20:34:15] *** Joins: fikran (~fikran@user/fikran)
[20:34:50] *** Quits: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4) (Remote host closed the connection)
[20:35:09] <jinsun_> [itchyjunk]: that code has set_ydata, your error has set_data
[20:35:10] <BrenBarn> the error line there seems to be coming from a `main.py` that's in your Pycharm project
[20:35:27] <[itchyjunk]> my code?
[20:35:32] <[itchyjunk]> i copy paste the code and hit run
[20:35:49] <jinsun_> looks like something else is running
[20:35:51] *** Joins: computeiro (~Wender@189.37.66.8)
[20:35:52] *** Quits: zitter (~danilodim@93-57-35-194.ip162.fastwebnet.it) (Read error: Connection reset by peer)
[20:35:53] <[itchyjunk]> oh :<
[20:35:57] <BrenBarn> yeah it's running something else
[20:35:58] <elwoodpd> that makes sense hexology
[20:36:07] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Quit: WeeChat 3.1)
[20:36:14] <elwoodpd> related question
[20:36:14] <[itchyjunk]> in mycharm, if i have multiple .py files, how do i get one specific one to run?
[20:36:18] <BrenBarn> did you copy paste it into /home/PycharmProjects/pythonProject/main.py ?
[20:36:25] *** Quits: anddam (~anddam@user/anddam) (Quit: WeeChat 3.0)
[20:36:26] <elwoodpd> I am using Selenium
[20:36:42] <[itchyjunk]> no i copy pasted it to animate.py
[20:36:50] <[itchyjunk]> main.py has some random code i'm trying to get to work
[20:36:54] <elwoodpd> and if I do browser = webdriver.Firefox() right at the start
[20:37:04] <elwoodpd> the script is really slow to begin
[20:37:13] <elwoodpd> but if I make browser a local variable
[20:37:24] *** Joins: Linux77 (~7Linux7@2804:d45:8c02:b300:76d0:2bff:fe7a:f3a4)
[20:37:24] <elwoodpd> it seems to result in loads of system strain
[20:37:36] <[itchyjunk]> oh if i right click it and run it, it runs. but if i hit the run button in pycharm, it always runs main.py no matter what i pick it seems.
[20:37:42] <elwoodpd> what should I do
[20:38:09] <Wooble> [itchyjunk]: you can set up a run configuration. the button runs whatever is selected in the dropdown next to it.
[20:38:25] <[itchyjunk]> ah
[20:39:00] <[itchyjunk]> i did select animate.py and hit run. it still runs main.py. i guess i have it configured it to run main.py always inside a project
[20:39:11] <Wooble> [itchyjunk]: right click and run is *probably* the easiest way to get a savable config into that menu, unless you need to pass arguments or something
[20:39:18] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[20:39:58] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:40:51] <Wooble> [itchyjunk]: maybe, although I'm not sure how you'd even configure it to do that on purpose, let alone by accident. :/
[20:40:55] *** Quits: dcode200 (~dcode200@87-63-32-71-dynamic.dk.customer.tdc.net) (Quit: Leaving)
[20:42:05] *** Quits: ApostleInTriumph (~ApostleIn@nat-clients.lix.polytechnique.fr) (Quit: Client closed)
[20:42:18] *** Quits: gitly (~gitly@85.255.236.179) (Ping timeout: 260 seconds)
[20:42:52] <[itchyjunk]> :x not sure. but i think even animating lines and such depend on having to fiddle with sin function in mathplotlib. i think i am using the wrong library to do animation..
[20:43:07] *** Joins: Staunch (~Staunch@c-24-7-237-208.hsd1.mn.comcast.net)
[20:44:37] <oneforall2> export 'LDFLAGS=-L/lib64 -L/usr/lib64 -L//usr/lib64/gcc/x86_64-blade64-linux/11.2.0/' finds the  -lgxx but still not thecrtbegin.o
[20:44:41] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[20:44:49] *** Joins: gitly (~gitly@85.255.235.207)
[20:45:53] *** Joins: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com)
[20:46:02] <oneforall2> traced that down to it adding the -L after it instead of adding it to crtbegin.o  when its sent to ld
[20:46:42] <Wooble> this is #python.
[20:46:44] <oneforall2> - the -L and just the path
[20:47:36] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Ping timeout: 268 seconds)
[20:49:18] *** Quits: vladoski (~vladoski@93-47-225-6.ip114.fastwebnet.it) (Ping timeout: 260 seconds)
[20:49:18] *** Quits: Klinda (~superleag@user/klinda) (Ping timeout: 260 seconds)
[20:50:28] *** Joins: reset (~reset@user/reset)
[20:51:21] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Remote host closed the connection)
[20:52:08] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[20:52:30] *** Quits: chele (~chele@user/chele) (Remote host closed the connection)
[20:52:58] *** Quits: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Client Quit)
[20:53:10] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[20:53:29] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[20:53:33] <SnoopJ> chymera, here's the approach I ended up with for the problem you posed: https://bpa.st/3BUA
[20:54:01] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[20:54:08] <SnoopJ> That will find all files that have any of the three executable flags set, but you could modify it easily enough to prefer one of them in particular, or to check the filetype if you only care about ELF executables, etc.
[20:54:26] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[20:55:00] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 268 seconds)
[20:55:24] *** Joins: Klinda (~superleag@user/klinda)
[20:56:01] *** Quits: ubert (~Thunderbi@2a02:8109:9880:303c:ca5b:76ff:fe29:f233) (Quit: ubert)
[20:56:10] *** Joins: bloody (~bloody@user/bloody)
[20:57:49] *** Joins: MrBungle (~MrBungle@2604:3d08:1788:dc00:e431:530c:9ef4:168a)
[20:58:30] *** Joins: sedeki (~textual@user/sedeki)
[20:58:57] *** Joins: cedric (~cedric@2a01:cb11:821:7c00:f33b:fde:6c61:c559)
[20:59:18] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[20:59:25] *** Quits: spiderman (~spiderman@user/spiderman) (Ping timeout: 256 seconds)
[21:01:27] *** Joins: spiderman (~spiderman@user/spiderman)
[21:01:49] *** Joins: p-i-_ (~Ohmu@mx-ll-223.206.64-253.dynamic.3bb.co.th)
[21:01:50] *** Joins: vvdaiwrw (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[21:01:53] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[21:02:08] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[21:03:34] *** Quits: ovnicraft (~ovnicraft@rrcs-208-105-58-61.nyc.biz.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:03:59] *** Quits: shad (~shad@user/shad) (Ping timeout: 264 seconds)
[21:05:05] *** Quits: p-i- (~Ohmu@mx-ll-223.206.64-253.dynamic.3bb.co.th) (Ping timeout: 256 seconds)
[21:05:30] *** Quits: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de) (Ping timeout: 268 seconds)
[21:05:36] *** Joins: marcello42 (~mp@p200300dfaf07ff01fa2e52f98b4dfc80.dip0.t-ipconnect.de)
[21:05:39] *** Joins: sazawal (~sazawal@2409:4043:4d1a:f90f:b9a6:112d:6b28:2037)
[21:05:45] *** Quits: sazawal (~sazawal@2409:4043:4d1a:f90f:b9a6:112d:6b28:2037) (Remote host closed the connection)
[21:06:43] *** Quits: arinov (~arinov@178.240.154.245) (Ping timeout: 268 seconds)
[21:07:05] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[21:08:47] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[21:09:53] *** Joins: Valeria (~Valeria@user/valeria)
[21:10:12] *** Quits: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470) (Read error: Connection reset by peer)
[21:11:19] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 256 seconds)
[21:11:52] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[21:13:20] *** Quits: subho (~subho@49.37.52.71) (Quit: subho)
[21:14:52] *** Quits: sedeki (~textual@user/sedeki) (Quit: Textual IRC Client: www.textualapp.com)
[21:15:53] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[21:17:25] *** Joins: subho (~subho@2405:201:9001:a0fc:f04d:1c5d:5899:3f08)
[21:18:37] *** Quits: mozgalom (~mozgalom@IPnet-gw.157.157.97.111.simnet.is) (Quit: SO LONG SUCKERS!)
[21:19:34] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:19:59] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[21:20:39] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[21:23:20] *** Quits: keyehzh (~keyehzh@user/keyehzh) (Quit: Leaving)
[21:23:53] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[21:24:36] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 268 seconds)
[21:25:16] *** Quits: Hammett (~Absolut@113.red-88-19-98.staticip.rima-tde.net) (Quit: I feel like I could... like I could... like I could... TAKE ON THE WORLD!!)
[21:26:51] *** kai61 is now known as kai
[21:27:42] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Ping timeout: 268 seconds)
[21:28:53] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 256 seconds)
[21:29:10] *** Joins: ubert (~Thunderbi@p200300ecdf4fcafee019fddc82d0353e.dip0.t-ipconnect.de)
[21:30:03] *** Quits: greknod28 (~grek@120.88.171.98) (Quit: -)
[21:30:16] *** Quits: nurupo (~nurupo.ga@user/nurupo) (Quit: nurupo.ga)
[21:30:30] *** Joins: nurupo (~nurupo.ga@user/nurupo)
[21:31:10] *** Joins: greknod28 (~grek@120.88.171.98)
[21:31:13] *** Joins: whatsupdoc (uid509081@id-509081.hampstead.irccloud.com)
[21:32:14] *** Quits: subho (~subho@2405:201:9001:a0fc:f04d:1c5d:5899:3f08) (Quit: subho)
[21:33:00] *** Joins: onichomp (~onichomp@2806:264:4404:8200:c0c3:e24b:3ad6:2d39)
[21:33:24] *** Quits: han-solo (~hanish@user/han-solo) (Quit: leaving)
[21:34:36] *** Quits: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net) (Remote host closed the connection)
[21:34:50] *** Joins: nyah (~nyah@176.249.120.61)
[21:35:05] *** Quits: RiFo (~RiFo@user/rifo) (Ping timeout: 268 seconds)
[21:35:11] *** Joins: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com)
[21:36:20] *** Joins: nicode (~nic@216.154.33.88)
[21:36:43] *** Joins: anddam (~anddam@user/anddam)
[21:36:55] *** Joins: subho (~subho@2405:201:9001:a0fc:f04d:1c5d:5899:3f08)
[21:37:06] *** Joins: djapo (~archangel@user/djapo)
[21:37:17] *** Joins: arinov (~arinov@213.194.126.155)
[21:38:24] *** Quits: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca) (Quit: Client closed)
[21:38:47] *** Joins: vd (~vd@bras-base-mtrlpq2848w-grc-41-70-53-240-121.dsl.bell.ca)
[21:38:47] *** Quits: password4 (~password@user/password2) (Ping timeout: 268 seconds)
[21:38:59] *** Quits: Valeria (~Valeria@user/valeria) (Quit: Client closed)
[21:41:11] *** Quits: nrg (~NRG@user/nrg) (Quit: ZNC - https://znc.in)
[21:41:53] *** Quits: elwoodpd (~elwoodpd@host-92-8-65-11.as13285.net) (Quit: Leaving)
[21:42:17] *** Joins: nrg (~NRG@user/nrg)
[21:42:29] *** Quits: delvian (~delvian@41.13.246.79) (Ping timeout: 256 seconds)
[21:42:38] *** Quits: roxfan (roxfan@11.121-64-87.adsl-dyn.isp.belgacom.be) (Remote host closed the connection)
[21:42:46] *** Joins: Lando-SpacePimp (~Lando-Spa@user/lando-spacepimp)
[21:43:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 256 seconds)
[21:43:48] *** Joins: habamax (~maksim.ki@user/habamax)
[21:43:48] *** Joins: onichomp666 (~onichomp@177.231.43.15)
[21:45:35] *** Quits: onichomp (~onichomp@2806:264:4404:8200:c0c3:e24b:3ad6:2d39) (Ping timeout: 268 seconds)
[21:47:14] *** Quits: bloodninja123 (~bloodninj@user/bloodninja) (Read error: Connection reset by peer)
[21:47:24] *** Joins: nomic (~nomic@185.198.243.6)
[21:48:26] *** Joins: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net)
[21:48:50] *** Quits: kn100 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 260 seconds)
[21:49:42] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3dfe:56d8:f73a:2910) (Quit: Client closed)
[21:50:11] *** Quits: subho (~subho@2405:201:9001:a0fc:f04d:1c5d:5899:3f08) (Quit: subho)
[21:50:31] *** Quits: LuKaRo (~LuKaRo@p5deda91b.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[21:52:25] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[21:52:45] *** Joins: alzgh (~alzgh@user/alzgh)
[21:52:48] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[21:53:34] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[21:54:42] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[21:54:53] *** Joins: LuKaRo (~LuKaRo@p4fc32456.dip0.t-ipconnect.de)
[21:55:03] *** Quits: rindolf (~shlomif@2a0d:6fc2:4bb1:500:6b1e:2524:3d70:36ec) (Quit: Shlomi Fish ("Rindolf") has left the server. “Chuck Norris was challenged to fight the world, and accepted. He bet on himself, won, and collected the bet money.”)
[21:55:03] *** Quits: mikeliuk (~mikeliuk@213.205.198.227) (Quit: Connection closed)
[21:55:48] *** Joins: fannagoganna (uid110488@id-110488.tinside.irccloud.com)
[21:56:13] *** Quits: rjwiii (~mr-rich@idlerpg/player/mr-rich) (Read error: Connection reset by peer)
[21:56:15] *** Joins: bloodninja (~bloodninj@user/bloodninja)
[21:56:53] *** Joins: subho (~subho@2405:201:9001:a0fc:f04d:1c5d:5899:3f08)
[21:57:24] *** Quits: imp (~imp@192-141-191-227.alternativaip.net.br) (Read error: Connection reset by peer)
[21:57:48] *** Joins: imp (~imp@192-141-191-227.alternativaip.net.br)
[22:00:23] *** Quits: jcvfen (~jcvfen@user/jcvfen) (Ping timeout: 264 seconds)
[22:01:50] <dman777> https://bpa.st/IWRA#1L6 I am having a issue where I do not see these returned objects from line 6 in processed_fields. Why is this? The if condition is true a couple of times and returns newObj.
[22:03:06] *** Joins: binary01 (~binary01@192.110.171.216)
[22:03:11] *** Joins: rjwiii (~mr-rich@idlerpg/player/mr-rich)
[22:05:49] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3dfe:56d8:f73a:2910)
[22:05:54] *** Quits: nyah (~nyah@176.249.120.61) (Ping timeout: 260 seconds)
[22:06:50] *** Quits: binary01 (~binary01@192.110.171.216) (Client Quit)
[22:07:15] *** Joins: [itchyjunk] (~itchyjunk@user/itchyjunk/x-7353470)
[22:07:17] *** Quits: ihaveamac (~ihaveamac@ihaveahax.net) (Ping timeout: 264 seconds)
[22:07:36] *** Joins: ihaveamac (~ihaveamac@ihaveahax.net)
[22:09:26] *** Joins: caveman (~caveman@gateway/tor-sasl/caveman)
[22:10:42] <cuppajoeman> Hello, does anyone know if it's possible to create an argument for argparse that stores true if it appears as a flag, but if the flag has an argument then it stores that value instead?
[22:11:12] *** Joins: emilrwx (~emilrwx@dsl-tkubng12-54f95d-146.dhcp.inet.fi)
[22:11:56] <hexnewbie> cuppajoeman: Perhaps parser.add_argument('--flag', const=True, nargs='?')
[22:12:17] *** Quits: emilrwx (~emilrwx@dsl-tkubng12-54f95d-146.dhcp.inet.fi) (Client Quit)
[22:13:07] *** Quits: jpds (~jpds@gateway/tor-sasl/jpds) (Remote host closed the connection)
[22:13:21] *** Joins: jpds (~jpds@gateway/tor-sasl/jpds)
[22:13:39] *** Quits: justm3 (~Username@82-171-42-20.fixed.kpn.net) (Ping timeout: 256 seconds)
[22:13:40] *** Joins: justm3 (~Username@82.171.42.20)
[22:14:18] *** Quits: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr) (Ping timeout: 260 seconds)
[22:14:30] * cuppajoeman Ok, I'm having a bit of trouble with the terminology: https://i.imgur.com/ABnKZqa.png
[22:14:33] <cuppajoeman> https://i.imgur.com/ABnKZqa.png
[22:14:50] <cuppajoeman> oops I meant to send that as a normal message
[22:15:17] *** kostkon_ is now known as kostkon
[22:15:31] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Remote host closed the connection)
[22:15:58] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[22:15:59] <cuppajoeman> Is a command line argument something like `--flag` ?
[22:17:08] <stealth_> dman777, maybe you wanted to do something like this https://bpa.st/XQJQ
[22:17:13] <cuppajoeman> Like I pretty much want something like this `prog --flag` does some behavior `prog --flag m` does some modified behavior and `prog ` is also fine, no extra action is taking
[22:17:21] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[22:18:10] *** Joins: nyah (~nyah@94.6.71.219)
[22:18:16] *** Joins: fikran (~fikran@user/fikran)
[22:18:21] *** Quits: alzgh (~alzgh@user/alzgh) (Remote host closed the connection)
[22:18:42] *** Joins: alzgh (~alzgh@user/alzgh)
[22:19:40] *** Joins: merijn (~merijn@83-160-49-249.ip.xs4all.nl)
[22:19:43] *** Quits: abraxas (~abraxas@ip68-14-53-156.ri.ri.cox.net) (Read error: Connection reset by peer)
[22:20:05] *** Joins: cyphase (~cyphase@user/cyphase)
[22:20:58] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[22:21:04] *** Joins: parv (~quass@user/parv)
[22:22:09] <hexnewbie> cuppajoeman: --flag is sometimes called an ‘option’ instead of a ‘flag’, which can be a short for ‘optional argument’, but the documentation of argparse is going to be very confusing to read when it talks about “the optional argument to an optional argument”, which ('--flag', nargs='?') deals with
[22:22:32] *** Joins: ravan (~ravan@user/ravan)
[22:22:38] <cuppajoeman> Ok
[22:23:03] <cuppajoeman> How would you phrase what's going on here in english? `Perhaps parser.add_argument('--flag', const=True, nargs='?')`
[22:23:08] *** Joins: jcvfen (~jcvfen@user/jcvfen)
[22:24:03] <Swayze> what hexnewbie said
[22:24:09] <Swayze> was how you phrase that in english
[22:24:14] <Swayze> da heck
[22:25:04] <hexnewbie> cuppajoeman: --flag is a “flag” (“option”) that itself takes a single optional argument placed *after* it (--flag arg2), because of nargs='?'. If this optional argument is missing after --flag, the value of const= will be used for the value of 'flag'. If --flag *itself* is mssing, then default= will be used for the value of flag. (One pinch better?)
[22:25:22] *** Quits: codificat (~pep@187.red-83-46-128.dynamicip.rima-tde.net) (Quit: leaving)
[22:25:27] <cuppajoeman> Thank you yup it does make sense now
[22:26:05] <cuppajoeman> Sorry I'm new to the terminology so parsing (hehe) the docs is hard at the start
[22:26:16] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 268 seconds)
[22:27:25] <cuppajoeman> I guess my misconception was that --flag was an argument to the whole program
[22:27:37] *** Joins: Wulf (~Wulf@user/wulf)
[22:28:08] *** Joins: Gurkenglas (~Gurkengla@dslb-002-203-144-204.002.203.pools.vodafone-ip.de)
[22:28:46] *** Quits: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi) (Ping timeout: 260 seconds)
[22:29:37] <Wooble> cuppajoeman: not a misconception, because it is. :)
[22:29:50] <cuppajoeman> So it's an argument and an option?
[22:30:36] *** Quits: akk (~akk@75.161.146.115) (Ping timeout: 268 seconds)
[22:30:43] <Wooble> cuppajoeman: everything on the command line after the program name is an argument; how you choose to parse them inside the program creates the concept of an "option"
[22:31:27] <bjs> option/argument terminology is often a little confused because different things use the words to mean slightly different concepts
[22:31:29] *** Joins: sandb0y (~pirate@user/sandb0y)
[22:31:44] <Wooble> sometimes in the same sentence! :)
[22:31:54] *** Quits: llh (~llh@user/llh) (Quit: :::: ( UPP ) ::::)
[22:32:00] <bjs> e.g. all the stuff passed to prog are arguments as far as the shell is concerned,  but then the "argument parser" library might define datatypes called argument and option to mean different *kinds* of (command-line) arguments
[22:32:18] <bjs> e.g. click does that in order to maximise confusion
[22:34:14] <bjs> click parses "arguments" (of the command-line variety) into positional things and optional things. it calls the optional ones "options" and it calls the positional ones "arguments" (like in function calls, passing positionally).  argparse calls everything an "argument" but those arguments may be made up of many command-line arguments
[22:34:20] *** Quits: Belxjander (~Belxjande@p1575007-ipoe.ipoe.ocn.ne.jp) (Quit: AmigaOS PPC 4.1 +E +U1 // AmIRC 68K)
[22:34:37] <cuppajoeman> what is click?
[22:34:43] <parv> Does argparser, or anything better, handle "--" to indicate end of options? Currently I am handling that myself by passing unrecognized options as is, or rather to parse only known options, (argparse.ArgumentParser.parse_known_args).
[22:34:43] <bjs> cuppajoeman: a library, like argparse
[22:34:43] *** Joins: fedenix_ (~fedenix@gateway/tor-sasl/fedenix)
[22:34:48] <cuppajoeman> ok
[22:34:48] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[22:35:05] <cuppajoeman> So pretty much shell is like everything here is a string/argument
[22:35:06] *** Quits: ormiret (sid314108@lymington.irccloud.com) (Ping timeout: 245 seconds)
[22:35:06] *** Quits: morgabra (sid500580@user/morgabra) (Ping timeout: 245 seconds)
[22:35:08] <parv> s/argparser/argparse/
[22:35:13] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[22:35:20] <cuppajoeman> and then python is like if they have a certain syntax then they mean different things
[22:35:35] *** Joins: morgabra (sid500580@user/morgabra)
[22:35:44] <Wooble> cuppajoeman: python doesn't care. your parsing library might.
[22:35:57] <cuppajoeman> yeah I should specify that
[22:36:01] <cuppajoeman> my bad
[22:36:03] <bjs> parv: click does https://click.palletsprojects.com/en/8.0.x/arguments/#option-like-arguments
[22:36:14] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[22:36:30] *** Joins: ormiret (sid314108@id-314108.lymington.irccloud.com)
[22:37:17] *** Joins: zepolen_ (~zepolen@ppp-94-66-223-35.home.otenet.gr)
[22:37:36] *** Quits: ravan (~ravan@user/ravan) (Quit: Leaving)
[22:38:08] <bjs> cuppajoeman: when you say `./prog a --sum 1 2` there are 4 command-line 'arguments': ["a", "--sum", "1", "2"]  but maybe there's only 2 argparse 'arguments' ["a", "--sum 1 2"]
[22:38:29] *** Quits: dohtem (uid524096@user/dohtem) (Quit: Connection closed for inactivity)
[22:38:34] <cuppajoeman> Ah I see
[22:38:56] <bjs> cuppajoeman: click would say there is one click argument 'a' and one click option '--sum 1 2'
[22:39:01] <bjs> confusingly :)
[22:39:31] <cuppajoeman> ok, I will stick to one of them till I get the hang of it
[22:39:55] *** Quits: tm007 (uid287041@id-287041.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[22:39:56] <dman777> stealth_: thank you, I will try it!
[22:40:13] <bjs> but if it's optional, and is written like --foo  then probably people will be happy to call it an "option" (even if it also maybe an "argument") and if it's like "a" (required and positional) above then everyone is happy to call it an "argument".  The stuff in between people can't agree on :)
[22:40:38] *** Joins: phantomotap (~phantomot@c-68-35-28-201.hsd1.al.comcast.net)
[22:40:44] <Wooble> s/can't agree on/have an argument over/  come on, it was right there.
[22:40:53] <cuppajoeman> Even I was thinking it
[22:41:32] <cuppajoeman> Thank you for your explanations though!
[22:41:58] <bjs> Wooble: :(
[22:41:58] *** Quits: gusto (~Augustus@109.255.100.54) (Quit: Textual IRC Client: www.textualapp.com)
[22:42:07] *** Quits: lucad111 (~lucad111@51-148-40-1.dsl.zen.co.uk) (Quit: Leaving)
[22:42:42] *** Joins: menace (~someone@user/menace)
[22:42:49] *** Joins: Inline (~Inline@2a02:908:1252:7a80:8056:a659:b191:c249)
[22:43:48] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[22:43:52] <parv> bjs, Thanks. click does not look like a drop-in replacement; need to think it through
[22:44:52] *** Joins: hyskaru (~hyskaru@user/hyskaru)
[22:45:13] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[22:45:38] <dman777> api_responses = [consume_prefill_apis(x, ehr_token) for x in apis_to_call] why would api_responses not have a items() method? I am getting 'list' object has no attribute 'items' for [field for k, v in api_responses.items() if v == field.get(k)]
[22:46:08] <SnoopJ> dman777, lists are sequences of objects, they don't have keys
[22:47:45] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[22:48:50] *** Quits: merijn (~merijn@83-160-49-249.ip.xs4all.nl) (Ping timeout: 260 seconds)
[22:49:56] *** Quits: Ravu (~ondra@selene.ondrahosek.com) (Ping timeout: 260 seconds)
[22:50:20] *** Quits: Cheaterman (~Cheaterma@user/cheaterman) (Ping timeout: 268 seconds)
[22:50:47] *** Joins: xcm (~xcm@user/xcm)
[22:50:50] *** Quits: stewie925 (~stewie925@2600:1702:44f0:35c0:3dfe:56d8:f73a:2910) (Quit: Client closed)
[22:51:23] *** Quits: laerling (~lsf@static.235.77.203.116.clients.your-server.de) (Ping timeout: 264 seconds)
[22:51:39] *** Quits: Yamakaja (~yamakaja@user/yamakaja) (Ping timeout: 268 seconds)
[22:52:14] *** Quits: _slate_ (~slate@159.69.26.92) (Ping timeout: 265 seconds)
[22:53:02] *** Joins: _slate_ (~slate@2a01:4f8:c0c:f0a9::1)
[22:53:11] *** Quits: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de) (Ping timeout: 264 seconds)
[22:53:24] *** Quits: dostoyevsky2 (~sck@user/dostoyevsky2) (Ping timeout: 268 seconds)
[22:53:32] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[22:53:40] *** Quits: xcm_ (~xcm@user/xcm) (Ping timeout: 260 seconds)
[22:53:54] *** Quits: subho (~subho@2405:201:9001:a0fc:f04d:1c5d:5899:3f08) (Ping timeout: 260 seconds)
[22:54:06] *** Quits: falk689 (~falk689-q@gateway/tor-sasl/falk689) (Ping timeout: 276 seconds)
[22:54:26] *** Joins: falk689 (~falk689-q@gateway/tor-sasl/falk689)
[22:54:36] *** Joins: DesolateHypertex (~DesolateH@static.213-133-103-49.clients.your-server.de)
[22:54:55] *** Joins: dostoyevsky2 (~sck@user/dostoyevsky2)
[22:55:11] *** Joins: nfc_ (nfc@tilde.institute)
[22:56:41] *** Joins: Yamakaja (~yamakaja@user/yamakaja)
[22:57:02] *** Joins: Masklin_Gurder (~joel@h-155-4-23-152.A230.priv.bahnhof.se)
[22:57:51] *** Quits: vulpes_vulpes (~vulpes_vu@62-64-205-221.dynamic.dial.as9105.com) (Quit: Leaving)
[22:58:08] <SnoopJ> dman777, maybe you meant to make a dict? What does consume_prefill_apis() return?
[22:58:09] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:3062:b2a9:609e:be67)
[22:58:20] *** Joins: stewie925 (~stewie925@2600:1702:44f0:35c0:3dfe:56d8:f73a:2910)
[22:59:33] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Ping timeout: 256 seconds)
[22:59:51] *** Joins: rpkilby_ (~rpkilby@c-24-20-208-106.hsd1.or.comcast.net)
[23:00:11] *** Joins: zer0bitz (~zer0bitz@dsl-hkibng31-54fae3-116.dhcp.inet.fi)
[23:00:29] *** Joins: ravan (~ravan@user/ravan)
[23:00:33] *** Quits: pycurious (~Adium@user/pycurious) (Quit: Leaving.)
[23:01:26] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[23:02:03] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Remote host closed the connection)
[23:02:30] <dman777> SnoopJ: it returns a list of objects
[23:02:54] <dman777> oh sorry
[23:03:23] <dman777> SnoopJ: api_responses = [consume_prefill_apis(x, ehr_token) for x in apis_to_call]
[23:03:23] *** Quits: pro_z (~pro_z@37.214.44.138) (Ping timeout: 264 seconds)
[23:03:28] <Zweimer> I would like to trigger a function at certain times (12 pm, 5 pm) in PyQt5. Would I use the QTimer in singleShot and let it singleShot after (12 pm - now) or do I use a timer, call it every minute (or every 10 seconds - not really important) and see if the time has passed by?
[23:03:31] *** Joins: Naan (~naan@user/naan)
[23:03:53] *** Quits: rpkilby (~rpkilby@ec2-34-252-84-235.eu-west-1.compute.amazonaws.com) (Ping timeout: 268 seconds)
[23:04:42] <dman777> SnoopJ: and return { **api_to_call, 'prefillApiResponse': api_response } is returned by consume_prefill_apis()
[23:04:43] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[23:05:18] <dman777> [bar(k,v) for k in fields, v in api_responses] can this be done if fields and api_responses are both lists of objects?
[23:05:23] *** Joins: Celeo (~Celeo@user/celeo)
[23:05:25] *** Joins: Cheaterman (~Cheaterma@user/cheaterman)
[23:05:33] *** Joins: FFY00 (~FFY00@archlinux/trusteduser/ffy00)
[23:05:38] *** Quits: LuKaRo (~LuKaRo@p4fc32456.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[23:05:40] *** Joins: CaryHartline (~CaryHartl@2603-8080-6a0e-8d88-e118-d184-1f68-13bf.res6.spectrum.com)
[23:05:46] *** Joins: delvian (~delvian@41.13.192.7)
[23:05:46] <parv> dman777, zip?
[23:06:21] <grym> dman777: each element of api_responses will have a .items() method, but the list itself won't; you're making a list of dicts
[23:06:21] *** Quits: mrgz (~mrgz@201-42-0-191.dsl.telesp.net.br) (Ping timeout: 268 seconds)
[23:07:19] <dman777> parv: I did zip before but it would return tuples
[23:07:25] *** Joins: ano (~ano@user/ano)
[23:07:30] <SnoopJ> dman777, what grym said
[23:07:42] <dman777> grym: I think I am having a issue with recursively going through these 2 lists
[23:07:53] *** Joins: LuKaRo (~LuKaRo@p4fc32052.dip0.t-ipconnect.de)
[23:08:12] *** Joins: nosoul (nosoul@gateway/vpn/protonvpn/nosoul)
[23:08:46] <grym> dman777: yeah, it's confusing the first few times for sure
[23:09:22] *** Joins: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[23:09:33] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[23:10:25] *** Joins: kn100 (~kn100@wireguard/tunneler/kn100)
[23:11:06] *** Joins: guenhael (~Thunderbi@2a01:e0a:163:7060:8d52:2193:b5c8:99d2)
[23:12:50] *** Quits: Zweimer (~Zweimer@2a02:908:d20:26e0:3062:b2a9:609e:be67) (Quit: Client closed)
[23:14:27] <parv> dman777, Get to know * : [ fx( *v ) for v in zip( a, b ) ]
[23:15:07] *** Quits: ano (~ano@user/ano) (Remote host closed the connection)
[23:15:21] *** Joins: bloodninja123 (~bloodninj@user/bloodninja)
[23:15:33] *** Joins: molt (~molt@178-222-245-206.static.isp.telekom.rs)
[23:15:36] *** Joins: ano (~ano@user/ano)
[23:16:55] *** Joins: keyehzh (~keyehzh@user/keyehzh)
[23:17:18] *** Quits: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net) (Quit: The Lounge - https://thelounge.chat)
[23:17:24] *** Joins: Macuser (~Macuser@216.30.159.201)
[23:18:04] <dman777> parv: is that meant to be used with a lambda function?
[23:18:05] *** Quits: Hanii (~textual@2a00:23c5:c587:6d00:d558:b250:bcbb:4255) (Quit: Textual IRC Client: www.textualapp.com)
[23:18:17] <SnoopJ> dman777, it's meant to be used anywhere you want to "unpack" a sequence of objects
[23:18:24] *** Joins: shad (~shad@user/shad)
[23:18:32] <dman777> oh...I see
[23:19:10] *** Quits: bloodninja (~bloodninj@user/bloodninja) (Ping timeout: 260 seconds)
[23:19:19] *** Joins: jmiehe (~Thunderbi@user/jmiehe)
[23:20:19] <parv> To unpack a `dict` operator is **
[23:20:29] <dman777> parv: thanks! that is cool
[23:21:59] *** Joins: subho (~subho@2405:201:9001:a0fc:6d0c:14ae:7233:8197)
[23:23:35] <SnoopJ> dman777, https://docs.python.org/3/tutorial/controlflow.html#tut-unpacking-arguments
[23:24:36] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:26:36] *** Quits: habamax (~maksim.ki@user/habamax) (Quit: Leaving)
[23:26:49] *** Joins: dohtem (uid524096@user/dohtem)
[23:27:17] *** Quits: orange (~orangeext@user/orangeextract) (Quit: Leaving)
[23:30:24] *** Joins: djapo (~archangel@user/djapo)
[23:31:29] *** Joins: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com)
[23:31:29] *** Quits: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com) (Read error: Connection reset by peer)
[23:31:36] *** Joins: sparc (sid160069@id-160069.uxbridge.irccloud.com)
[23:32:56] *** Joins: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com)
[23:33:21] *** Joins: djhankb (~djhankb@208.113.164.68)
[23:33:57] *** Joins: jazzy3 (~jaziz@user/jaziz)
[23:34:05] *** Quits: w1kl4s (~w1kl4s@user/w1kl4s) (Read error: Connection reset by peer)
[23:34:42] *** Joins: w1kl4s (~w1kl4s@user/w1kl4s)
[23:34:59] *** Quits: Ergo^ (~ergo@91.238.59.144) (Remote host closed the connection)
[23:35:01] *** Quits: yaalon (~yaalon@cpe-70-121-160-255.satx.res.rr.com) (Read error: Connection reset by peer)
[23:35:02] *** Joins: yaalon_ (~yaalon@cpe-70-121-160-255.satx.res.rr.com)
[23:36:23] *** Quits: Khoyo (~khoyo@user/khoyo) (Ping timeout: 264 seconds)
[23:36:36] *** Quits: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com) (Read error: Connection reset by peer)
[23:37:48] *** Quits: Telvana (~capo@user/telvana) (Ping timeout: 268 seconds)
[23:37:50] *** Quits: djapo (~archangel@user/djapo) (Ping timeout: 260 seconds)
[23:38:02] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[23:39:17] <sparc> Hi group, I have a question about paths available in Pipenv virtualenvs
[23:39:46] *** Joins: EgonX_ (~EgonX@2601:2c6:47f:879e:cdc8:2b47:7cb6:5714)
[23:40:03] <sparc> mypy is part of my build process, but it doesnt' seem to be in the path when I run "pipenv run make test" to run mypy.
[23:40:06] *** Quits: EgonX (~EgonX@2601:2c6:47f:879e:384b:7065:9079:1df8) (Ping timeout: 245 seconds)
[23:40:11] *** Joins: frat3rius4 (~frat3rius@host-85.14.84.172.static.3s.pl)
[23:40:15] <sparc> The $VIRTUALENV/bin direectory is missing
[23:40:16] *** Joins: Khoyo (~khoyo@user/khoyo)
[23:40:22] *** Joins: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com)
[23:40:31] *** Quits: frat3rius (~frat3rius@host-85.14.84.172.static.3s.pl) (Ping timeout: 245 seconds)
[23:40:31] *** frat3rius4 is now known as frat3rius
[23:40:52] <sparc> Is there a way to make sure that's part of the environment?  I thought about hardcoding it into my Makefile, but the virtualenv directory name changes every time it's made.
[23:41:39] *** Quits: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com) (Read error: Connection reset by peer)
[23:42:07] *** Joins: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com)
[23:42:13] *** jazzy3 is now known as jazzy
[23:44:13] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[23:44:34] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-ed99-7195-2785-ff6d.res6.spectrum.com)
[23:45:33] *** Joins: bninja (~bloodninj@user/bloodninja)
[23:46:14] *** Quits: frat3rius (~frat3rius@host-85.14.84.172.static.3s.pl) (Ping timeout: 260 seconds)
[23:46:36] *** Joins: jazzy4 (~jaziz@user/jaziz)
[23:46:45] *** Quits: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com) (Read error: Connection reset by peer)
[23:47:37] *** Joins: wildo (~lain6141@119.224.72.222)
[23:48:36] *** Joins: frat3rius (~frat3rius@host-85.14.84.172.static.3s.pl)
[23:48:40] *** Quits: alkino (~quassel@user/alkino) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[23:48:53] *** Joins: shokohsc8 (~shokohsc@161.88.195.77.rev.sfr.net)
[23:49:26] *** Quits: bloodninja123 (~bloodninj@user/bloodninja) (Ping timeout: 260 seconds)
[23:49:33] *** Joins: djapo (~archangel@user/djapo)
[23:49:35] *** Quits: jazzy (~jaziz@user/jaziz) (Ping timeout: 264 seconds)
[23:49:44] *** jazzy4 is now known as jazzy
[23:50:22] *** Joins: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com)
[23:50:30] *** Quits: hyskaru (~hyskaru@user/hyskaru) (Quit: hyskaru)
[23:51:26] *** Quits: SallyAhaj (~SallyAhaj@user/sallyahaj) (Remote host closed the connection)
[23:51:47] *** Quits: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com) (Read error: Connection reset by peer)
[23:51:50] *** Joins: SallyAhaj (~SallyAhaj@user/sallyahaj)
[23:51:57] *** Quits: Celeo (~Celeo@user/celeo) (Quit: Leaving)
[23:52:15] *** Joins: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com)
[23:52:44] *** Quits: subho (~subho@2405:201:9001:a0fc:6d0c:14ae:7233:8197) (Quit: subho)
[23:52:56] *** Joins: Zweimer (~Zweimer@2a02:908:d20:26e0:3062:b2a9:609e:be67)
[23:53:58] *** Quits: stdout (~stdout@216.163.21.11) (Quit: Leaving)
[23:55:40] *** Quits: decimuscorvinus (~jimmy@136.37.105.112) (Quit: Will return)
[23:56:52] *** Quits: a6a45081-2b83 (~aditya@2603-6080-0800-8e4a-0000-0000-0000-01a8.res6.spectrum.com) (Read error: Connection reset by peer)
[23:57:13] *** Quits: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) (Quit: Leaving.)
[23:57:19] *** Quits: guenhael (~Thunderbi@2a01:e0a:163:7060:8d52:2193:b5c8:99d2) (Quit: guenhael)
[23:58:29] *** Quits: trace987 (~trace@ip5b429941.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[23:58:49] *** Joins: Telvana (~capo@user/telvana)
[23:59:58] *** Joins: masta`` (~oyster@user/masta/x-2645138)
