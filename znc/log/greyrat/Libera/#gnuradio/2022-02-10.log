[00:06:18] *** Quits: baracurda_ (~baracurda@user/parserblabla) (Ping timeout: 276 seconds)
[00:06:44] *** Quits: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[00:07:41] <warnes[m]> I appreciate the input, because I have a second SDR on its way and intend to do benchmarking between them.
[00:08:22] <warnes[m]> Some of the benchmarking would be easiest between two docker containers, rather than between separate machines.
[00:16:12] <muaddib[m]> <jholtom> "but the ZMQ approach is probably..." <- I think I overuse ZMQ, but the ability to abstract the input/output of a flowgraph over a network socket really helps with stuff like rate changes post channelization. Helps avoid the dual clock problem if i'm doing anything with audio too. 
[00:21:24] *** Quits: pcero_ (~pcero@187.135.227.74) (Quit: Konversation terminated!)
[00:21:35] *** Quits: defiant (~defiant@user/defiant) (Quit: defiant)
[00:34:10] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 250 seconds)
[00:35:24] *** Joins: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net)
[00:46:52] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[00:52:27] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:28be:631c:1135:e084)
[01:15:34] *** Joins: Lino (~Oc@231.red-2-139-95.dynamicip.rima-tde.net)
[01:18:13] *** Quits: Lino (~Oc@231.red-2-139-95.dynamicip.rima-tde.net) (Client Quit)
[01:37:24] *** Joins: XSDNMN_ (~XSDNMN@2601:449:8400:4170:9c01:6151:fa36:aa8e)
[01:40:17] *** Quits: XSDNMN__ (~XSDNMN@2601:449:8400:4170:9c01:6151:fa36:aa8e) (Ping timeout: 240 seconds)
[02:09:14] <chitresh[m]> <HkonVgsether[m]> "> <@chitresh:gnuradio.org> Hello..." <- So, In the mean time can I contribute to some older good-first-issues?
[02:09:44] <chitresh[m]> I've been relatively new in this field
[02:10:04] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[02:11:16] *** Joins: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net)
[02:15:14] <muaddib[m]> chitresh: welcome. If you’re interested in contributing to GNURadio but are unfamiliar with it, your time might be best spent in the meantime Getting GNURadio installed and working and then going through the tutorials.
[02:15:14] <muaddib[m]> https://wiki.gnuradio.org/index.php/Tutorials
[02:15:14] <muaddib[m]> Do you have a DSP or software background?
[02:17:46] <muaddib[m]> If you’ve never worked with SDR before, I would recommend also going over some of the fundamental concepts of software defined radio and signal processing here.
[02:17:46] <muaddib[m]> https://pysdr.org
[02:20:53] <chitresh[m]> > <@muaddib:gnuradio.org> chitresh: welcome. If you’re interested in contributing to GNURadio but are unfamiliar with it, your time might be best spent in the meantime Getting GNURadio installed and working and then going through the tutorials.... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/c74fdce03f28380f939bfedf0b3e78386a5172a8)
[02:30:25] *** Quits: barjac (~quassel@92.40.2.71.threembb.co.uk) (Ping timeout: 256 seconds)
[02:31:36] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[02:35:18] *** Quits: jemius (~imperator@200116b82dee74002215dbef510d979e.dip.versatel-1u1.de) (Quit: Leaving)
[03:05:14] *** Joins: barjac (~quassel@92.40.0.136.threembb.co.uk)
[03:05:57] *** Quits: drmpeg (~drmpeg@2601:647:4700:284:47d9:375b:b5e5:28d3) (Ping timeout: 240 seconds)
[03:18:55] *** Joins: drmpeg (~drmpeg@2601:647:4700:284:d181:c988:51b7:ff06)
[03:21:25] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Ping timeout: 256 seconds)
[03:33:21] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[03:34:28] *** Joins: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net)
[03:36:56] *** Joins: thunndar (~thunn@2607:fb90:58e5:76a9:d875:4277:2362:6592)
[03:49:35] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[03:54:17] *** Quits: arch3r (~ben@185.66.194.78) (Ping timeout: 256 seconds)
[03:56:37] *** Joins: arch3r (~ben@185.66.194.78)
[04:04:49] *** Quits: arch3r (~ben@185.66.194.78) (Ping timeout: 256 seconds)
[04:08:42] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[04:08:57] *** Joins: spithash (~spithash@user/spithash)
[04:12:40] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[04:17:45] *** Joins: arch3r (~ben@185.66.194.78)
[04:30:29] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[04:40:07] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[04:46:13] *** Quits: patchvonbraun[m] (~patchvonb@2001:470:69fc:105::e18d) (Ping timeout: 240 seconds)
[04:46:13] *** Quits: jxj-openwifi[m]1 (~jxjmatrix@2001:470:69fc:105::13b0) (Ping timeout: 240 seconds)
[04:46:37] *** Quits: evets[m] (~evetsboil@2001:470:69fc:105::2c8) (Ping timeout: 240 seconds)
[04:46:46] *** Joins: patchvonbraun[m] (~patchvonb@2001:470:69fc:105::e18d)
[04:47:57] *** Joins: evets[m] (~evetsboil@2001:470:69fc:105::2c8)
[04:48:00] *** Joins: jxj-openwifi[m]1 (~jxjmatrix@2001:470:69fc:105::13b0)
[04:49:39] *** Joins: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[04:54:38] *** Quits: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Quit: Leaving)
[04:54:56] *** Joins: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[04:55:02] *** Joins: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[05:19:28] *** Joins: nsk_nyc (~nsk_nyc@network179-254-host-54.inethn.net)
[05:24:00] *** Quits: nsk_nyc (~nsk_nyc@network179-254-host-54.inethn.net) (Read error: Connection reset by peer)
[05:26:12] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[05:34:12] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Remote host closed the connection)
[06:24:16] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[06:25:05] *** Joins: pcero (~pcero@187.135.227.74)
[07:03:47] *** Quits: DiffieHellman (~Username@user/curve25519chacha) (Remote host closed the connection)
[07:04:23] *** Joins: DiffieHellman (~Username@user/curve25519chacha)
[07:10:08] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[07:54:46] *** Quits: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Remote host closed the connection)
[07:54:46] *** Quits: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[07:55:06] *** Joins: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[07:55:06] *** Joins: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[08:08:14] *** Quits: pcero (~pcero@187.135.227.74) (Quit: Konversation terminated!)
[10:35:17] *** Quits: harish_ (~harish@158.140.144.42) (Read error: Connection reset by peer)
[10:38:09] *** Joins: harish (~harish@158.140.144.42)
[10:42:51] *** Quits: harish (~harish@158.140.144.42) (Ping timeout: 256 seconds)
[10:46:16] *** Quits: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[10:46:16] *** Quits: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[10:46:36] *** Joins: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[10:46:36] *** Joins: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[10:51:25] *** Quits: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 240 seconds)
[10:51:25] *** Quits: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 240 seconds)
[10:53:50] *** Joins: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[10:53:50] *** Joins: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[10:55:15] *** Joins: jstein (~jstein@gentoo/developer/jstein)
[11:02:22] *** Quits: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 256 seconds)
[11:02:22] *** Quits: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 256 seconds)
[11:04:05] *** Joins: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[11:04:05] *** Joins: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[11:06:41] *** Quits: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[11:06:41] *** Quits: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[11:10:33] *** Joins: __alex (~alex@ip5f5be2d7.dynamic.kabel-deutschland.de)
[11:11:04] *** Joins: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[11:11:05] *** Joins: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[11:19:57] *** Parts: drmpeg (~drmpeg@2601:647:4700:284:d181:c988:51b7:ff06) ()
[11:20:00] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[11:21:23] *** Joins: massi (~massi@host-188-15-128-106.business.telecomitalia.it)
[11:25:04] *** Joins: drmpeg (~drmpeg@2601:647:4700:284:c69c:e638:f1c6:873)
[11:34:25] *** Quits: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 256 seconds)
[11:34:25] *** Quits: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Ping timeout: 256 seconds)
[11:34:25] *** Joins: tj1345__ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[11:35:20] *** Joins: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[12:13:24] *** Joins: baracurda_ (~baracurda@user/parserblabla)
[12:29:16] *** Joins: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl)
[12:30:11] *** Quits: wiml[m] (~wimlmatri@2001:470:69fc:105::ec8b) (Quit: You have been kicked for being idle)
[12:30:11] *** Quits: timelessness[m] (~timelessn@2001:470:69fc:105::1:664d) (Quit: You have been kicked for being idle)
[12:39:29] *** Joins: sensorsiot[m] (~sensorsio@2001:470:69fc:105::1:b471)
[13:15:11] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:d354:d28e:b071:eed2)
[13:37:36] *** Joins: jemius (~jemius@2a01:4f8:c0c:8564::1)
[13:40:39] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: Textual IRC Client: www.textualapp.com)
[13:47:31] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: ayo yoyo ayo yoyo hololo, hololo.)
[13:48:51] <ahmad_sho[m]> <willcode4[m]> "Looks like 18.04 has v3.7. I..." <- willcode4: Thank you, I'll try it (sorry for the late response, but I had to leave in a hurry yesterday)
[13:56:25] *** Quits: m5zs7k (aquares@web10.mydevil.net) (Ping timeout: 256 seconds)
[13:57:28] *** Joins: m5zs7k (aquares@web10.mydevil.net)
[14:02:06] *** Joins: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[14:02:43] *** Joins: jbg7 (~jbg@user/jbg)
[14:05:53] *** Joins: ai (nukedclx@shell.k4be.pl)
[14:06:11] *** Joins: mitsh (~mitsh@63.ip-51-254-200.eu)
[14:10:40] *** Joins: TheCoffeMaker_ (~TheCoffeM@200.126.129.149)
[14:11:02] *** Quits: tj1345 (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (*.net *.split)
[14:11:02] *** Quits: mitsh_ (~mitsh@63.ip-51-254-200.eu) (*.net *.split)
[14:11:03] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (*.net *.split)
[14:11:03] *** Quits: jbg (~jbg@user/jbg) (*.net *.split)
[14:11:03] *** Quits: fsphil (~fsphil@ursa.sanslogic.co.uk) (*.net *.split)
[14:11:03] *** Quits: nukedclx (~ai@shell.k4be.pl) (*.net *.split)
[14:11:03] *** Quits: roox (~roox@blackhole.pmtu.de) (*.net *.split)
[14:11:04] *** jbg7 is now known as jbg
[14:16:13] *** Joins: fsphil (~fsphil@ursa.sanslogic.co.uk)
[14:16:13] *** Joins: roox (~roox@blackhole.pmtu.de)
[14:33:04] *** Quits: jbg (~jbg@user/jbg) (Quit: jbg)
[14:55:03] *** Joins: harish (~harish@158.140.144.42)
[15:12:22] *** Joins: jbg (~jbg@user/jbg)
[15:18:49] *** Joins: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net)
[15:30:51] *** Joins: Guest37 (~Guest37@117.221.70.189)
[15:35:06] *** Joins: LY2SS (~zilvis@78-62-148-109.static.zebra.lt)
[15:42:37] *** Quits: massi (~massi@host-188-15-128-106.business.telecomitalia.it) (Remote host closed the connection)
[16:12:40] <Guest37> Is there any simple tutorial on how the build system works?
[16:13:38] *** Joins: harish_ (~harish@27.125.135.173)
[16:14:23] *** Joins: pcero (~pcero@187.135.227.74)
[16:15:33] *** Joins: harish__ (~harish@158.140.144.42)
[16:16:36] *** Quits: harish (~harish@158.140.144.42) (Ping timeout: 245 seconds)
[16:18:39] *** Quits: harish_ (~harish@27.125.135.173) (Ping timeout: 256 seconds)
[16:36:48] <funkylab[m]> Guest37: for OOTs or for the GNU Radio main tree?
[16:37:40] *** Quits: jemius (~jemius@2a01:4f8:c0c:8564::1) (Remote host closed the connection)
[16:37:47] *** Joins: jemius (~jemius@2a01:4f8:c0c:8564::1)
[16:38:17] <Guest37> GNU Radio
[16:38:26] <Guest37> For GNU Radio
[16:40:03] *** Quits: jemius (~jemius@2a01:4f8:c0c:8564::1) (Remote host closed the connection)
[16:47:12] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[16:47:32] *** Joins: spithash (~spithash@user/spithash)
[16:49:10] *** Quits: LY2SS (~zilvis@78-62-148-109.static.zebra.lt) (Ping timeout: 250 seconds)
[16:53:04] <funkylab[m]> ah, nice
[16:54:24] <funkylab[m]> so is this about building GR from source or do you want or need to do something special with its build system? For the former we have some guidance somewher, for the latter: don't hesitate to ask.
[16:57:05] *** Joins: antani (~antani@user/antani)
[17:05:53] <Guest37> Wanted to learn how each part gets compiled and whole software works.
[17:10:06] *** Quits: antani (~antani@user/antani) (Remote host closed the connection)
[17:12:33] <tcarls[m]> <Guest37> "Wanted to learn how each part..." <- ...can you break that down into some narrower, more specific questions? It's general enough that it's hard to answer in a way more specific than "read the CMake documentation" and "read the source".
[17:19:56] *** Joins: LY2SS (~zilvis@78-62-148-109.static.zebra.lt)
[17:24:12] <funkylab[m]> Guest37: tcarls is kind of right, but let's give you some starter: Our build system is CMake, whose job it is to read the CMake files, which define what gets to be built from what, and then actually generate build scripts (which can be Makefiles, or Ninja files, or VisualStudio project files, or...). These, consequently then get executed to build the library
[17:24:34] <funkylab[m]> So, that answers, from a high level,
[17:24:34] <funkylab[m]> > how each part gets compiled
[17:25:20] <funkylab[m]> however, 
[17:25:20] <funkylab[m]> > how whole software works
[17:25:20] <funkylab[m]> is best answered by reading our tutorials, https://tutorials.gnuradio.org ; it's also a completely separate question, because learning how GNU Radio works by no means implies you should build it from source.
[17:25:26] <funkylab[m]>  * however,
[17:25:26] <funkylab[m]> > how whole software works
[17:25:26] <funkylab[m]> is best answered by reading our tutorials, https://tutorials.gnuradio.org ; it's also a completely separate question, because learning how GNU Radio works by no means implies you should build it from source.
[17:32:10] <tcarls[m]> Would a PR adding a message output to the Qt range widget be welcome?
[17:38:13] *** Quits: arch3r (~ben@185.66.194.78) (Ping timeout: 256 seconds)
[17:40:09] *** Joins: arch3r (~ben@185.66.194.78)
[17:43:50] *** Joins: arch3r- (~ben@185.66.194.78)
[17:43:59] *** Quits: arch3r (~ben@185.66.194.78) (Read error: Connection reset by peer)
[17:45:26] *** arch3r- is now known as arch3r
[17:48:53] <BarryDuggan[m]> This YAML hide statement isn't working. What's wrong?... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/d5c25e23cb739e740cd635fae052bffbb2c96ac4)
[17:54:55] *** Quits: Prutz (Prutz@gateway/vpn/protonvpn/prutz) (Remote host closed the connection)
[17:55:20] *** Joins: Prutz (Prutz@gateway/vpn/protonvpn/prutz)
[18:00:02] <JoshMorman[m]> I think hide needs to be 'none' 'all' or 'part'
[18:02:08] *** Quits: epony (epony@user/epony) (Read error: Connection reset by peer)
[18:02:21] <funkylab[m]> <tcarls[m]> "Would a PR adding a message..." <- yes
[18:02:22] <funkylab[m]> I think so
[18:03:13] <funkylab[m]> generally, that sounds like a functional addition, which sounds useful, has no performance downside, and allows people to use the ranges safely
[18:03:53] <Guest37> Thanks for the reply
[18:07:23] *** Quits: Guest37 (~Guest37@117.221.70.189) (Quit: Client closed)
[18:11:58] <BarryDuggan[m]> <JoshMorman[m]> "I think hide needs to be 'none'..." <- Isn't that for stream inputs?
[18:13:07] <JoshMorman[m]> Looks like it is that way for block parameters
[18:20:41] <BarryDuggan[m]> That doesn't get it either
[18:25:25] <BarryDuggan[m]> look at https://github.com/duggabe/gr-Draw/blob/main/grc/draw_dr_box.block.yml
[18:25:25] <BarryDuggan[m]> if I define a Parameter of `hideIn`, then I can do `hide: ${ hideIn }`
[18:25:25] <BarryDuggan[m]> but it would be nice to have an 'if' statement instead
[18:25:53] <willcode4[m]> You tried 'none' if ... else 'all'?
[18:27:17] * BarryDuggan[m] sent a code block: https://libera.ems.host/_matrix/media/r0/download/libera.chat/b8656f2e840b608016318e02037c9f7c241ea28a
[18:28:03] <willcode4[m]> Just for fun, try it all on one line.
[18:28:03] <willcode4[m]> This is a valid one, for example:
[18:28:03] <willcode4[m]> `hide: ${ 'none' if (devname == 'custom') else 'all' }`
[18:28:04] <BarryDuggan[m]> doesn't work either
[18:28:21] <willcode4[m]> Oh, no parent before 'none'.
[18:28:31] <willcode4[m]> or after 'all'.
[18:28:36] <willcode4[m]> (paren)
[18:30:50] <HkonVgsether[m]> Where is numIn defined? 
[18:31:26] <HkonVgsether[m]> Ah, it's a param
[18:36:32] <BarryDuggan[m]> `hide: ${ 'none' if (int(numIn) >= 1) else 'all' }`
[18:36:33] <BarryDuggan[m]> no joy
[18:38:00] <HkonVgsether[m]> Sounds like GRC might be using an old version of the YAML file
[18:39:12] <BarryDuggan[m]> I did a make and make install then restarted GRC
[18:40:18] <HkonVgsether[m]> I would suggest changing the name of the block or something and see if that works
[18:40:31] <HkonVgsether[m]> Just as a sanity check to make sure that the changes are actually being picked up
[18:41:41] <BarryDuggan[m]> is there something in ~/.grc_gnuradio I need to change or delete?
[18:43:02] <HkonVgsether[m]> There is a file called .cache.json or _cache.json that might need to be deleted if you're not able to update the block name, yes
[18:49:18] <HkonVgsether[m]> It could be somewhere under ~/.cache too, I don't remember exactly 
[18:49:49] <Notou[m]> Is it actually possible to hide ports? I've never seen that before
[18:50:23] <HkonVgsether[m]> Yeah the Qt Freq sink can hide its message ports 
[18:51:14] <BarryDuggan[m]> I found ~/.cache/grc_gnuradio/cache_v2.json and deleted it
[18:51:15] <Notou[m]> Ooh!
[18:52:47] <BarryDuggan[m]> I changed the block id name to "Drawing", then rebuilt. it did not pick up the change
[18:53:40] <Notou[m]> Then, using it as an example, it should be true or false, and not 'none', 'part', or 'all' mike for the parameters 
[18:53:49] <Notou[m]> s/mike/like/
[18:54:14] <BarryDuggan[m]> yes, I tried that first!
[18:54:30] <Notou[m]> https://github.com/gnuradio/gnuradio/blob/141c0da0349703a483d0c5931d01ed207dcdd3b6/gr-qtgui/grc/qtgui_freq_sink_x.block.yml#L392 
[18:54:30] <Notou[m]> `showport` being a boolean
[18:54:56] <HkonVgsether[m]> BarryDuggan[m]: Aha! Then that's the problem :D
[18:55:47] <HkonVgsether[m]> If you launch GRC from a terminal after deleting the cache, it prints out the path of all the blocks it detects 
[18:56:04] <BarryDuggan[m]> should I do a `make uninstall` and start over?
[18:56:46] <BarryDuggan[m]> Block paths:
[18:56:47] <BarryDuggan[m]> 	/home/barry/.grc_gnuradio
[18:56:47] <BarryDuggan[m]> 	/usr/local/share/gnuradio/grc/blocks
[18:56:48] <HkonVgsether[m]> No I would suggest looking at the terminal output, and searching for your block's ID there
[18:56:58] <willcode4[m]> 'true' is probably a synonym for 'all', and 'false' for 'none'.
[18:58:32] <Notou[m]> Does GRC not have a block called Drawing in its list? Or is it that your block in the graph has not changed?
[18:58:56] <BarryDuggan[m]> my block did not change
[19:00:45] <Notou[m]> Even after pulling a brand new one from the list?
[19:01:31] <BarryDuggan[m]> ah! it does now 🙂
[19:02:34] <BarryDuggan[m]> but the 'hide' still doesn't work ☹️
[19:07:48] <warnes[m]> On the same topic, I have a similar yml issue with this parameter pair:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/3e5f610e94a420b14e30c0ed2a553960a594ffd6)
[19:11:18] <HkonVgsether[m]> Very interesting 
[19:12:32] <willcode4[m]> Could be eval order, but I thought it went top to bottom.
[19:12:58] <BarryDuggan[m]> does the case of 'False' matter? i.e. 'false'
[19:13:00] <HkonVgsether[m]> > <@warnes:gnuradio.org> On the same topic, I have a similar yml issue with this parameter pair:... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/bc23b9d6bab65f6c344f5e3424775f57e719ebdc)
[19:14:39] <HkonVgsether[m]> <BarryDuggan[m]> "but the 'hide' still doesn't..." <- Is your code on github? I'd like to try it 
[19:15:56] <BarryDuggan[m]> my code is on https://github.com/duggabe/gr-Draw before the changes for 'hide'
[19:16:28] <warnes[m]> I figured it out!   I (we?) are interpreting  the flags for `hide` incorrectly!... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/ef232f06a75c2db0601ef7dcad9eddddc2206517)
[19:16:59] <warnes[m]> I 'none' means never hid, while 'all' means always hide.
[19:17:18] <warnes[m]> s/never/_never/, s/hid,/hide_,/, s/always/_always_/
[19:18:19] <warnes[m]> I was incorrectly using 'none' when I wanted it to not be shown.
[19:18:56] <warnes[m]> I should be using 'always' instead.
[19:18:58] <Yamakaja[m]> Maybe we should add an alias for none = never
[19:19:11] <Yamakaja[m]> And all = always, yeah
[19:20:04] <warnes[m]> Or, to avoid misunderstanding:
[19:20:04] <warnes[m]> * 'always_hide' = 'all'
[19:20:04] <warnes[m]> * 'never_hide' = 'none'
[19:20:04] <warnes[m]> to make it really pedantic.
[19:20:50] *** Joins: Guest37 (~Guest37@117.221.70.189)
[19:21:15] <warnes[m]> Its clear I'm not the first one to make this mistake, because I'm editing a yml file generated by someone else who clearly had the same thought.
[19:25:02] <Guest37> Is there any other way to understand the code other than going through the cmake.Is there any starting point like a main function?
[19:28:33] <HkonVgsether[m]> Barry Duggan: hide: ${ numInt < 1} 
[19:29:17] <HkonVgsether[m]> s/numInt/numIn/
[19:30:06] *** Quits: novasharper (~novasharp@2001:470:69fc:105::b4a) (Quit: You have been kicked for being idle)
[19:30:10] *** Quits: exploser[m] (~exploserg@2001:470:69fc:105::1:66c5) (Quit: You have been kicked for being idle)
[19:36:16] <BarryDuggan[m]> Håkon Vågsether: it works! that's so obvious 🙂
[19:41:59] <HkonVgsether[m]> Great! What was the problem with the changes not showing up in GRC? Did you have the same block installed in two places? 
[19:42:44] *** Quits: Prutz (Prutz@gateway/vpn/protonvpn/prutz) (Remote host closed the connection)
[19:43:08] *** Joins: Prutz (Prutz@gateway/vpn/protonvpn/prutz)
[19:43:36] <BarryDuggan[m]> I'm not sure. I did the uninstall and built again
[19:43:46] <BarryDuggan[m]> it only takes a few seconds
[19:44:59] <warnes[m]> I just submitted an issue suggesting changes to the `hide` parameter option: https://github.com/gnuradio/gnuradio/issues/5562 
[19:46:10] *** Joins: epony (~epony@user/epony)
[19:48:58] *** Quits: Guest37 (~Guest37@117.221.70.189) (Quit: Client closed)
[19:53:14] <HkonVgsether[m]> <BarryDuggan[m]> "I'm not sure. I did the uninstal..." <- Hmm alright. We should do two things here: 1) Try to figure out if there is something wrong with the cache system 2) give the user a more visible warning if the same block is found in two different places, especially if those two are not identical 
[20:04:39] * BarryDuggan[m] uploaded an image: (65KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/8e3ad8f01398e8e582e32c447662da1d68920067/A_V_diagram_22.png >
[20:04:57] <BarryDuggan[m]> drawn with gr-Draw and GRC
[20:05:37] <BarryDuggan[m]> it's part of our A/V for GRCon22
[20:07:21] <muaddib[m]> Barry Duggan: this is really cool!
[20:08:11] <BarryDuggan[m]> it's much easier than any diagramming software I've found
[20:09:16] <muaddib[m]> for sure!
[20:10:38] <BarryDuggan[m]> I plan to create a GRC enhancement issue for this, once I get it more refined
[20:18:19] <muaddib[m]> Oh, 3.10 only. This gives me an excuse to update more of my machines to 3.10 :D
[20:19:32] <BarryDuggan[m]> it should work on 3.9 as well
[20:20:05] <BarryDuggan[m]> I'll update the repo shortly
[20:27:39] *** Quits: baracurda_ (~baracurda@user/parserblabla) (Ping timeout: 276 seconds)
[21:10:53] <muaddib[m]> i think it's just cause of cmake checking for 3.10
[21:24:19] *** Quits: MajorBiscuit (~MajorBisc@wlan-145-94-218-48.wlan.tudelft.nl) (Ping timeout: 256 seconds)
[21:32:33] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:36:10] *** Quits: Vonter (~Vonter@user/vonter) (Quit: WeeChat 3.4)
[21:43:26] *** Joins: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net)
[21:53:22] *** Quits: LY2SS (~zilvis@78-62-148-109.static.zebra.lt) (Ping timeout: 250 seconds)
[21:59:59] *** Joins: jemius (~imperator@200116b82d43190009627f64cbfd8911.dip.versatel-1u1.de)
[22:08:58] *** Joins: tammojan[m]1 (~tammojang@2001:470:69fc:105::1:b4dd)
[22:21:22] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:23:02] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[22:35:14] *** Joins: adrianb[m] (~adrianbgn@2001:470:69fc:105::1:b4e2)
[23:03:35] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:d354:d28e:b071:eed2) (Quit: uros)
[23:05:15] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:7e51:ef33:6103:6234)
[23:07:22] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[23:38:33] <DerekKozel[m]> funkylab: Can you math me please? Why does the Gaussian Fast Noise Generator create complex numbers from a Rayleigh distribution and then scale them by amplitude. That does not? produce a gaussian per my very foggy stats memory.
[23:39:12] <funkylab[m]> DerekKozel[m]: Haven't looked at it
[23:39:19] <funkylab[m]> But sure that's what happens?
[23:39:31] <funkylab[m]> The box-muller method sounds similar
[23:39:36] <DerekKozel[m]> https://github.com/gnuradio/gnuradio/blob/main/gr-analog/lib/fastnoise_source_impl.cc#L59-L62
[23:40:35] <funkylab[m]> It generates a Rayleigh amplitude, a uniform phase, then converts polar to Cartesian and gets a complex Gaussian,i.e., two independent real Gaussians
[23:40:59] <funkylab[m]> Yamakaja @yamakaja:gnuradio.org: can very literally explain that better than I could
[23:41:36] <DerekKozel[m]> Eh Ah. I see some small light.
[23:42:00] *** Quits: tj1345__ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[23:42:04] *** Quits: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com) (Read error: Connection reset by peer)
[23:42:14] *** Joins: tj1345__ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[23:42:14] *** Joins: tj1345_ (~tj1345@cpe-75-185-104-199.cinci.res.rr.com)
[23:42:29] <funkylab[m]> DerekKozel[m]: Gimme a second. Phone's not optimal for reading gnuradio-runtime/math
[23:42:53] <DerekKozel[m]> Yep yep! No rush. Just answering a student's question and hit this interesting line
[23:43:19] <DerekKozel[m]> Their base question doesn't entirely rely on understanding this detail
[23:45:10] <Yamakaja[m]> Honestly, i'm surprised that's supposed to yield gaussian random values
[23:45:29] <Yamakaja[m]>  * Honestly, i'm surprised that's supposed to yield (complex) normal distributed values
[23:48:01] <jholtom> DerekKozel[m]: I think it may be easier to think about what the Rayleigh distribution is, and then recognize that you're more or less undoing the construction of a Rayleigh dist in that process to generate the two independent real gaussians
[23:48:29] <jholtom> since the rayleigh is the square root of sum of squares of two independent gaussian Rvs
[23:49:02] <Yamakaja[m]> jholtom: But where is the conversion from rayleigh to gaussian happening?
[23:49:20] <Yamakaja[m]> We'd need a (cos(pi)+jsin(phi))*rayleigh for that
[23:49:26] <Yamakaja[m]> s/pi/phi/
[23:49:33] <jholtom> but thats what happens
[23:49:38] <jholtom> then you add that uniform bit in for the phi
[23:49:50] <jholtom> I was just trying to come up with an alternate path to think about it
[23:50:37] <jholtom> (well thats what happen sin the GR implementation, not what I was babbling about)
[23:52:08] <Yamakaja[m]> Ohh, rayleigh_complex is just a bad name for a complex gaussian 🤦‍♂️
[23:52:14] <Yamakaja[m]> * Ohh, rayleigh_complex() is
[23:52:42] <funkylab[m]> ... that's a phenomenally suboptimal name
[23:52:51] <jholtom> oh gosh yeah it is.
[23:53:18] <Yamakaja[m]> https://github.com/gnuradio/gnuradio/blob/main/gnuradio-runtime/lib/math/random.cc#L129 ...
[23:53:35] <Yamakaja[m]> gasdev() ^= normal distribution
[23:53:47] <jholtom> thats...wrong lol
[23:54:05] <jholtom> i guess the magnitude of it is rayleigh at least?
[23:54:18] <Yamakaja[m]> Yes, that's apparently where the name came from
[23:54:21] <jholtom> we're all wrong on this blessed day?
[23:54:39] <Yamakaja[m]> https://www.gnuradio.org/doc/doxygen/classgr_1_1random.html#a806f27be06796e46df420769935c3518
[23:55:43] <funkylab[m]> btw `gasdev` is a name from a FORTRAN numerical recipe
[23:56:01] <funkylab[m]> … pre-77-Fortran numerical recipe
[23:57:30] <tammojan[m]1> Hi there. Is anyone aware of a browser-based renderer for GRC files? This could be useful for sharing grc files through gists or so, which could replace sharing screenshots of gnuradio-companion (which are not very reproducible). I think it would be quite straightforward to make this (using D3 or so), but if it already exists that'd be even better.
[23:57:58] <Yamakaja[m]> You can render GRC files to PDF :)
[23:58:51] <funkylab[m]> and svg
[23:58:59] <Yamakaja[m]> (The logic should be reusable if you're willing to hack with the software)
[23:59:01] <Yamakaja[m]> Ah, even better
[23:59:01] <funkylab[m]> both work in modern browsers
[23:59:02] <tammojan[m]1> Yes, but then they wouldn't show all the info, right? Like a filter with many taps.
[23:59:12] <funkylab[m]> ah so
[23:59:17] <Yamakaja[m]> Well no, but that's not the purpose of a visual representation, is it?
[23:59:29] <funkylab[m]> you mean like basically a GRC without execution abilities?
[23:59:40] <funkylab[m]> we had a GSoC last year to be able to write something like that
[23:59:47] <tammojan[m]1> I want both: a shared GRC file which I can inspect quickly (without opening gnuradio-companion).
