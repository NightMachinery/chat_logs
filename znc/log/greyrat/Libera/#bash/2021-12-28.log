[00:00:22] *** Quits: drd (~drd@93-32-181-40.ip34.fastwebnet.it) (Quit: ZNC 1.8.2 - https://znc.in)
[00:01:32] *** Joins: drd (~drd@93-32-181-40.ip34.fastwebnet.it)
[00:02:32] <Blondie101010> birkoff:  perhaps you should give something we can reproduce
[00:02:38] <tirnanog> |& weill result in stderr no longer being directed to a tty, as well as combining it with stdout. you shouldn't do that in this instance.
[00:03:15] <Blondie101010> that does not explain the problem
[00:03:52] <Blondie101010> `cat /dev/zero |pv -f |& cat` and `cat /dev/zero |pv -f | cat` both behave exactly as expected, and neither matches the problem description
[00:04:08] <twkm> "... progress will be shown on standard error."
[00:04:11] <tirnanog> maybe for pv, but I still stand by the advice.
[00:04:58] *** Joins: miique (~miique@181.46.139.166)
[00:05:17] <tirnanog> it's fairly common for programs to vary their behaviour based on an isatty check but, even if pv doesn't, mixing stderr with stdout will seldom be useful. I believe you, though.
[00:05:29] <Blondie101010> the problem reported must be related to how it's called
[00:05:41] * Blondie101010 nods
[00:07:11] <Blondie101010> pv is certainly designed to show its stats in interactive mode
[00:08:04] *** Joins: esselfe (~steph@user/esselfe)
[00:09:06] <tirnanog> birkoff: was that the full command, in its entirety?
[00:09:46] <Blondie101010> I doubt that will be sufficient to know the context unless it involves ssh
[00:10:43] <birkoff> tirnanog: how can i then explicitly redirect err to a command ?
[00:11:18] <Blondie101010> 2> >(command)
[00:11:35] <Blondie101010> but that seems very disconnected from the previous question
[00:11:49] <twkm> stderr is where pv expects to send the progress bar.
[00:12:09] <Blondie101010> yes, on a tty
[00:12:12] <twkm> wtf is the command going to do with pv's progress bar?
[00:12:23] <tirnanog> worse, it would corrupt the stream being conveyed.
[00:12:26] <twkm> check for it reaching 100%?
[00:12:42] <tirnanog> (using |&, to be clear)
[00:12:46] *** Quits: drd (~drd@93-32-181-40.ip34.fastwebnet.it) (Quit: ZNC 1.8.2 - https://znc.in)
[00:13:09] <twkm> anyway, ''pv -f |& cat'' yields a progress bar for me.
[00:13:16] <tirnanog> anyway, I can't reproduce the outcome initially described in a terminal.
[00:13:24] <Blondie101010> obviously
[00:13:48] <Blondie101010> birkoff:  why don't you give us a test case please!
[00:14:32] <birkoff> is it so hard to come up with one ? mine is `find . | ....`
[00:14:51] <Blondie101010> no, that alone won't change anything
[00:14:52] <twkm> works for me.
[00:14:53] *** Parts: Fauto_ (~dante@gateway/tor-sasl/filohuhum) (Leaving)
[00:15:03] <birkoff> anywayz the question is about the second part of the pipeline and not the first
[00:15:04] <Blondie101010> how do you run that command?
[00:15:12] <birkoff> how?
[00:15:16] <Blondie101010> yes how
[00:15:22] <twkm> of course you can't "see" the progress separate from the flood of results from find.
[00:15:26] <birkoff> I type it and at the end of line I press enter
[00:15:28] <Blondie101010> not in an interactive shell for sure
[00:15:44] <Blondie101010> ok well show the full command
[00:15:47] <birkoff> twkm: > /dev/null
[00:15:52] <birkoff> jesus
[00:15:57] *** Joins: drd (~drd@93-32-181-40.ip34.fastwebnet.it)
[00:16:04] *** Quits: magla (~gelignite@55d4dfc1.access.ecotel.net) (Quit: Stay safe!)
[00:16:15] <birkoff> find . | pv -f >/dev/null |& cat
[00:16:16] <twkm> you are the supplicant, don't make us form what is failing for you.
[00:16:35] <birkoff> your solution 2> >( ) is the solution for me though, thanks
[00:17:06] <twkm> |& dups fd2 to fd1, you made fd1 go away.
[00:17:10] <Blondie101010> ehhh you redirect your output to /dev/null
[00:17:12] <tirnanog> instead of being a smart arse, you could have answered the question.
[00:17:18] <tirnanog> because only now is it obvious what the problem is.
[00:17:31] <birkoff> tirnanog: i dont think so
[00:17:32] <tirnanog> (and twkm beat me to it)
[00:17:34] <tirnanog> yes, so.
[00:18:06] <birkoff> Blondie101010 understood very well on the first time
[00:18:08] <tirnanog> the >/dev/null on pv changes everything.
[00:18:24] <tirnanog> nope. you didn't provide the applicable context. this is a fact.
[00:18:24] <birkoff> no, pv uses stderr for its output
[00:18:27] <Blondie101010> it makes it useless
[00:18:34] <birkoff> stdout is for its stdin
[00:18:40] <twkm> i tried what you said initially, it failed to fail.  i tried what you then added, that too failed to fail.  only when you finally added the >/dev/null did it fail as you stated.
[00:18:56] <tirnanog> bah, plonk.
[00:19:56] <birkoff> oh I have must have forgotten that
[00:19:59] <birkoff> my bad
[00:20:06] <tirnanog> total waste of time.
[00:22:05] <tirnanog> Blondie101010: and it was never obvious, for the record. the progress bar _is_ printed to stderr. only the  >/dev/null |& changed everything. there is a reason for enquiring as to the exact nature of the command that was truly run.
[00:22:31] <Blondie101010> we all asked for it repeatedly
[00:24:07] <tirnanog> in the end, fd 1 ends up being sent to /dev/null, fd 2 is dup'd from fd 1 but we were just supposed to guess based on a command that has no such effect by some midwit smart-arse. sure.
[00:25:23] *** Joins: docmax_ (~docmax@dynamic-095-116-051-107.95.116.pool.telefonica.de)
[00:25:31] *** Quits: drd (~drd@93-32-181-40.ip34.fastwebnet.it) (Quit: ZNC 1.8.2 - https://znc.in)
[00:25:42] *** Quits: rendar_ (~rendar@user/rendar) (Quit: Leaving)
[00:27:16] <birkoff> I assumed I gave the full command
[00:27:20] <birkoff> shit happens
[00:27:37] *** Quits: docmax__ (~docmax@dynamic-077-008-025-179.77.8.pool.telefonica.de) (Ping timeout: 240 seconds)
[00:28:15] <birkoff> I am listening to TV simulatenously
[00:28:21] <birkoff> so that may be it
[00:29:42] *** Joins: drd (~drd@93-32-181-40.ip34.fastwebnet.it)
[00:32:02] *** Joins: TMan459 (~TMan459@068-113-228-168.res.spectrum.com)
[00:32:44] <Blondie101010> yeah, part of your command was sent to /dev/null by distraction
[00:35:18] *** Joins: rgrinberg (~textual@2806:101e:7:def:5c7c:5699:6e7:d044)
[00:36:30] *** Quits: noarb (~noarb@user/noarb) (Ping timeout: 260 seconds)
[00:36:39] *** Quits: jmd (~user@de.cellform.com) (Remote host closed the connection)
[00:37:26] *** Joins: gabriele (~gabriele@user/gabriele)
[00:37:37] *** Joins: edlou (uid413273@id-413273.helmsley.irccloud.com)
[00:38:47] *** Joins: sinaowolabi (~SinaOwola@160.152.36.12)
[00:44:47] *** Quits: zer0bitz (~zer0bitz@185.112.82.230) (Read error: Connection reset by peer)
[00:47:17] *** Quits: drd (~drd@93-32-181-40.ip34.fastwebnet.it) (Ping timeout: 256 seconds)
[00:49:13] *** Joins: earendel (uid498179@user/earendel)
[00:49:47] *** Joins: drd (~drd@93.55.31.127)
[00:50:02] *** Quits: GuiToris (~GuiToris@user/guitoris) (Quit: Sieben Acht Gute Nacht!)
[00:50:03] *** Quits: tangy (~tangy@user/tangy) (Remote host closed the connection)
[00:50:23] *** Quits: drd (~drd@93.55.31.127) (Client Quit)
[00:51:50] *** Joins: drd (~drd@93.55.31.127)
[00:52:22] *** Joins: noarb (~noarb@user/noarb)
[00:54:15] *** Quits: arinov_ (~arinov@178.240.175.124) (Ping timeout: 268 seconds)
[00:54:26] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[00:59:23] *** Quits: rufito (~phil@181.42.53.33) (Quit: Leaving)
[01:00:09] *** Quits: MrBlue (~MrBlue@24.114.93.161) (Quit: Leaving)
[01:01:30] *** Quits: ano (~ano@user/ano) (Ping timeout: 276 seconds)
[01:05:47] *** Quits: drd (~drd@93.55.31.127) (Quit: ZNC 1.8.2 - https://znc.in)
[01:06:12] *** Joins: MrBlue (~MrBlue@24.114.93.161)
[01:06:44] *** Joins: drd (~drd@93.55.31.127)
[01:09:31] *** Quits: ttys000 (~ttys000@user/ttys000) (Quit: Textual IRC Client: www.textualapp.com)
[01:11:03] *** Joins: mrcooper (mrcooper@gateway/vpn/protonvpn/mrcooper)
[01:12:37] *** Quits: mrcooper (mrcooper@gateway/vpn/protonvpn/mrcooper) (Client Quit)
[01:14:30] *** Quits: mohabaks (~mohabaks@gateway/tor-sasl/mohabaks) (Ping timeout: 276 seconds)
[01:17:01] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[01:19:52] *** Quits: Musli (~Musli@178-223-53-201.dynamic.isp.telekom.rs) (Quit: Leaving)
[01:21:27] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[01:26:08] *** Joins: Circuitsoft (uid393878@id-393878.lymington.irccloud.com)
[01:26:23] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[01:26:47] *** Joins: arinov_ (~arinov@213.194.126.155)
[01:27:37] *** Quits: jkwnki (~jkwnki@p4ff31198.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[01:28:56] *** Quits: aniruddha (uid340443@id-340443.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:30:34] *** Joins: ano (~ano@user/ano)
[01:34:07] *** Quits: drd (~drd@93.55.31.127) (Quit: ZNC 1.8.2 - https://znc.in)
[01:34:39] *** Quits: totenkoph (~scythe@user/totenkoph) (Ping timeout: 276 seconds)
[01:35:06] *** Joins: drd (~drd@93.55.31.127)
[01:35:07] *** Quits: drd (~drd@93.55.31.127) (Client Quit)
[01:35:30] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[01:39:33] *** Joins: XV8 (~XV8@2601:5cb:c001:50:3d6e:cfa4:63ac:b4be)
[01:39:53] *** Quits: XV8 (~XV8@2601:5cb:c001:50:3d6e:cfa4:63ac:b4be) (Client Quit)
[01:39:59] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[01:40:35] *** Joins: unop (~unop@194.154.249.71)
[01:42:14] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[01:42:17] *** Joins: XV8 (~XV8@2601:5cb:c001:50:3d6e:cfa4:63ac:b4be)
[01:45:12] *** Quits: rgrinberg (~textual@2806:101e:7:def:5c7c:5699:6e7:d044) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[01:46:37] *** Quits: XV8 (~XV8@2601:5cb:c001:50:3d6e:cfa4:63ac:b4be) (Ping timeout: 240 seconds)
[01:49:02] *** Joins: clarkk (~clarkk@host86-165-12-159.range86-165.btcentralplus.com)
[01:50:20] <Enissay> I need to loop only over files which match this pattern `\d{3}\.json`, please advise on how to modify: `for f in ~/config/*.json; do echo "$f"; done`
[01:51:37] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[01:51:39] <yitz> for file in [0-9][0-9][0-9].json
[01:52:49] <Enissay> yess, thanks
[01:59:17] *** Quits: uuidNuniq (~weechat@146.56.136.247) (Remote host closed the connection)
[01:59:36] *** Joins: uuidNuniq (~weechat@146.56.136.247)
[01:59:50] *** Quits: Strom (strom@fedora/strom) ()
[02:00:05] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Remote host closed the connection)
[02:00:43] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[02:01:25] <earendel> i would do it like you i think. do a glob prefilter.. and the rest in the do re='\d{3}\.json'; if [[ $f =~ $re ]]; then ..blaah  .. but eventually you can do direct regex matching with find? im newbie.
[02:02:32] *** Joins: Strom (~strom@fedora/strom)
[02:02:55] *** Quits: fatal (~0x00@user/fatal) (Quit: fatal)
[02:03:20] <earendel> im not sure why find complicates it so much with its own symbols instead of just executing a damn command on whatever its passed to ..lol. but i bet there are reasons for it ..another day.
[02:03:50] *** Joins: fatal (~0x00@user/fatal)
[02:04:31] <earendel> Enissay: KNUFF
[02:06:37] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Ping timeout: 240 seconds)
[02:06:40] <earendel> hm. would posix eventually be the magic wand to access shared libs interopa billitiee
[02:07:18] <tirnanog> # re='\d{3}'; [[ '\ddd' =~ $re ]] && echo true
[02:07:19] <shbot> tirnanog: true
[02:07:29] *** Quits: YaoNai (~YaoNai@user/yaonai) (Quit: leaving)
[02:08:22] <tirnanog> # re='\d{3}'; [[ 'ddd' =~ $re ]] && echo true
[02:08:23] <shbot> tirnanog: true
[02:08:25] <tirnanog> it's a PCRE-ism.
[02:09:16] <tirnanog> as for find, GNU find - among others - can use regex. inexplicably, it defaults to the emacs regex dialect which, of course, is the one that nobody but emacs die-hards knows by heart.
[02:09:35] <earnestly> It depends on regcomp (iirc)
[02:10:00] <earendel> im not sure the posix manpage on regex was a joke. (it really was the first i read, randomly) .. tho i tried to find out what extended regex means  . (what is supported and what not - still no clue)
[02:10:11] <Kobaz> https://dpaste.com/2U4D4MKCL  <--- how would i get that to work properly and ignore what i want to ignore in the stderr output ?
[02:10:39] <Kobaz> oh, i probably have to move the redirect to the du... not the end
[02:10:40] *** Quits: ElPresidente (~ElPreside@2600:1700:3d10:4870:c0e5:e221:e934:5fac) (Read error: Connection reset by peer)
[02:10:52] <earendel> ((* it has all that ! marks for varying features)
[02:10:53] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[02:11:20] <tirnanog> earendel: you should look at regex(7) from the linux man pages if you haven't already. it's genuinely a good page. short and straight to the point.
[02:11:32] <earendel> tirnanog: thank you.
[02:11:37] <Kobaz> i think i fixed it... new version:  du -sx /target 2> >(grep -v 'No such file or directory') | awk {'print $1'};
[02:18:57] *** Joins: sublim20 (~sublim20@user/sublim20)
[02:19:57] *** Quits: sudomannn (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33) (Ping timeout: 240 seconds)
[02:21:08] *** Joins: sudomannn (~sudomann@89.46.62.128)
[02:22:03] *** Parts: Soni (~quassel@autistic.space) (http://quassel-irc.org - Chat comfortably. Anywhere.)
[02:22:57] <tirnanog> unfortunately, that won't behave quite as you might expect.
[02:23:24] <tirnanog> # { echo "du: some other error ..." >&2; } 2> >(grep -v 'No such file or directory') | awk '{ print $1 }'
[02:23:25] <shbot> tirnanog: du:
[02:23:52] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[02:23:59] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[02:25:57] *** Quits: miique (~miique@181.46.139.166) (Ping timeout: 240 seconds)
[02:27:01] *** Quits: martinus__ (~martin@2.56.202.77.rev.sfr.net) (Ping timeout: 256 seconds)
[02:27:08] <tirnanog> Kobaz: having looked at your original code, you should be able to just tack on the redirection of 2 such that it trails "done".
[02:28:03] <tirnanog> while true; do du ... | awk ...; done 2> >(grep -v ...)
[02:29:31] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[02:30:38] <tirnanog> (which won't have the curious effect demonstrated prior)
[02:30:42] *** Joins: junebug (~junebug@2600:1700:3db0:2540:4974:3ab:902:fcc7)
[02:33:00] *** Quits: MrBlue (~MrBlue@24.114.93.161) (Quit: Leaving)
[02:36:00] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Ping timeout: 268 seconds)
[02:37:07] *** Joins: tccki_ (~tccki@box.webslate.co.nz)
[02:38:21] *** Quits: tccki (~tccki@box.webslate.co.nz) (Ping timeout: 256 seconds)
[02:38:29] *** tccki_ is now known as tccki
[02:39:59] *** Quits: clarkk (~clarkk@host86-165-12-159.range86-165.btcentralplus.com) (Quit: Leaving)
[02:40:28] *** Joins: ferdna (~ferdna@user/ferdna)
[02:46:27] *** Quits: junebug (~junebug@2600:1700:3db0:2540:4974:3ab:902:fcc7) (Quit: Leaving)
[02:47:45] *** Quits: freep (~freepppp@62.1.172.246.dsl.dyn.forthnet.gr) (Read error: Connection reset by peer)
[02:52:47] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[03:01:15] *** Joins: MrBlue (~MrBlue@24.114.93.161)
[03:01:32] *** Quits: MrBlue (~MrBlue@24.114.93.161) (Remote host closed the connection)
[03:07:07] *** Quits: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy) (Quit: WeeChat 3.3)
[03:10:36] *** Quits: michigan (uid507982@id-507982.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[03:13:04] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[03:15:02] *** Quits: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:15:38] *** Joins: pasteban (~pasteban@157.146.251.23.bc.googleusercontent.com)
[03:17:09] *** Quits: cliluw (~cliluw@47.147.73.223) (Read error: Connection reset by peer)
[03:20:01] *** Quits: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com) (Remote host closed the connection)
[03:20:36] *** Quits: zoe (~zoe@fsf/member/zoe) (Remote host closed the connection)
[03:20:38] *** Joins: checkbot (~checkbot@157.146.251.23.bc.googleusercontent.com)
[03:22:26] *** Joins: igemnace (~ian@user/igemnace)
[03:24:12] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[03:24:15] *** Joins: tangy (~tangy@user/tangy)
[03:33:49] *** Quits: DaNeenjah (~jake@adsl-74-230-9-185.hsv.bellsouth.net) (Quit: WeeChat 3.4)
[03:34:38] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[03:36:37] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[03:44:46] *** Joins: MrConorAE (~MrConorAE@user/mrconorae)
[03:46:28] *** Quits: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae) (Quit: ayustae)
[03:47:07] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[03:48:39] *** Joins: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au)
[03:51:20] *** Quits: hellstabber (~hellstabb@178.233.16.12) (Remote host closed the connection)
[04:03:21] *** Joins: totenkoph (~scythe@user/totenkoph)
[04:05:08] *** Quits: m0viefreak (~asdf@user/m0viefreak) (Remote host closed the connection)
[04:05:53] *** Joins: bloodfart69 (~bloodfart@131.150.105.232)
[04:06:03] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[04:12:48] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[04:13:06] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[04:13:56] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[04:14:30] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:16:04] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[04:17:32] *** Joins: MrBlue (~MrBlue@24.114.93.161)
[04:20:15] *** Joins: yuesbeez (uid458354@id-458354.tinside.irccloud.com)
[04:20:48] *** Joins: muirrum (~muirrum@sourcehut/user/muirrum)
[04:23:49] *** Quits: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[04:24:06] *** Quits: carl- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 245 seconds)
[04:26:37] *** Quits: vysn (~vysn@user/vysn) (Ping timeout: 240 seconds)
[04:26:47] *** Joins: zaden (~maddx@c-73-92-207-228.hsd1.ca.comcast.net)
[04:28:24] *** Quits: uuidNuniq (~weechat@146.56.136.247) (Remote host closed the connection)
[04:28:40] *** Joins: uuidNuniq (~weechat@146.56.136.247)
[04:28:46] *** Quits: MrBlue (~MrBlue@24.114.93.161) (Quit: Leaving)
[04:28:51] *** Quits: sudomannn (~sudomann@89.46.62.128) (Ping timeout: 256 seconds)
[04:29:43] *** Joins: sudomannn (~sudomann@2601:155:8402:4960:f4b6:2f5c:9895:3a33)
[04:31:58] *** Joins: sublim20 (~sublim20@user/sublim20)
[04:32:58] *** Joins: userT (~user0@187.140.209.44)
[04:34:15] <userT> Does it have any negative effect, even if the slightest, if using "rm -r" on regular non-directory files?
[04:35:09] <twkm> no.
[04:37:51] *** Quits: fedenix (~fedenix@gateway/tor-sasl/fedenix) (Remote host closed the connection)
[04:39:04] *** Quits: gothicserpent (~gothicser@2604:a880:2:d0::2204:b001) (Quit: WeeChat 3.2)
[04:39:33] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[04:39:40] *** Joins: gothicserpent (~gothicser@2604:a880:2:d0::2204:b001)
[04:40:15] <userT> Nothing at all? I'm afraid I have made a mistake...
[04:40:24] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[04:41:55] *** Quits: MrConorAE (~MrConorAE@user/mrconorae) (Quit: MrConorAE)
[04:42:14] <neshpion> what kind of mistake
[04:44:25] <userT> Using "rm -r" on regular file
[04:44:32] <slaughter> I have a date, formatted like so "2021-12-28T01:09:04Z" - I cannot for the life of me get `date` from GNU coreutils to parse this. However, on macos with coreutils installed, it parses just fine. What am I doing wrong/what should I do to this string to get it to prasE?
[04:44:58] <neshpion> userT: but that doesn't harm anything
[04:45:26] <userT> Eh?
[04:45:29] <userT> Oh
[04:46:03] <neshpion> slaughter: try piping it through `tr T ' '`
[04:46:10] *** Quits: fatal (~0x00@user/fatal) (Remote host closed the connection)
[04:46:27] *** Joins: fatal (~0x00@user/fatal)
[04:46:30] <neshpion> nevermind hold on
[04:46:42] *** Quits: earendel (uid498179@user/earendel) (Quit: Connection closed for inactivity)
[04:48:15] <neshpion> `date -d '2021-12-28T01:09:04Z'` works just fine for me, on coreutils date 9.0
[04:48:55] <neshpion> # date -d '2021-12-28T01:09:04Z'
[04:48:56] <shbot> neshpion: Tue Dec 28 01:09:04 UTC 2021
[04:49:17] *** Quits: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[04:49:24] * slaughter Ah this runner is using coreutils 8.30, might be my problem
[04:49:35] <slaughter> Well no clue why that was /me but ok
[04:50:33] <tirnanog> what happens when you try?
[04:51:09] <slaughter> date: invalid date â€˜"2021-12-28T01:09:04Z"â€™
[04:51:29] <tirnanog> you're erroneously including double quotes in the payload
[04:51:36] *** Joins: micah (~micah@199.254.238.42)
[04:51:42] <slaughter> I thought so, and I tested that, and date doesn't care
[04:52:11] <tirnanog> it absolutely does.
[04:52:15] <tirnanog> # date -d '2021-12-28T01:09:04Z'
[04:52:16] <shbot> tirnanog: Tue Dec 28 01:09:04 UTC 2021
[04:52:19] <tirnanog> # date -d '"2021-12-28T01:09:04Z"'
[04:52:20] <shbot> tirnanog: date: invalid date '"2021-12-28T01:09:04Z"'
[04:52:21] <slaughter> Hmm maybe the macos coreutils does
[04:52:28] <slaughter> doesn't* - I'll see what I can do
[04:52:29] <tirnanog> I mean, it's specifically showing you what the string being parsed is.
[04:52:42] <micah> I want to monitor a log file for a specific text pattern, and execute a command with the log line when it is found. What is the best way to do that? I'm surprised there isn't a tool that does this
[04:52:51] <tirnanog> those double quotes simply shouldn't be part of the argument.
[04:53:36] <tirnanog> you can use double quotes in the *shell* to quote an argument. that's fine. but somehow, you're injecting double quotes into the payload, as it were.
[04:53:40] <neshpion> micah: what about `tail -f logfile | { grep -q 'pattern' && do_thing; }` ?
[04:53:59] <slaughter> I guess that means that the jq on the runner is also not working like it is locally, since I'm pulling the date there out of some JSON with jq and testing locally it also doesn't have double quotes
[04:53:59] <tirnanog> so you should show what you're really doing if you want help debugging that.
[04:54:27] <micah> neshpion: i need to pass the line that grep would find to the 'do_thing' though
[04:54:48] <slaughter> Hmm I entered and exited bash locally and now it does have double quotes. OK, noted. Thanks!
[04:54:49] <tirnanog> slaughter: jq -r might be a solution, depending.
[04:54:59] <neshpion> micah: ok then something like `while IFS= read -r line; do if [[ $line =~ pattern ]]; then do_thing_with "$line"; done < <(tail -f logfile)`
[04:55:12] <slaughter> Ah yes thanks tirnanog that does seem to be it
[04:55:23] * neshpion forgot `fi`
[04:55:34] <neshpion> but you get the idea
[04:57:03] <micah> neshpion: yeah, and maybe tail -F
[04:58:21] <neshpion> indeed
[05:01:20] <slaughter> tirnanog 100% that did it, thank you very much
[05:01:24] <tirnanog> very good.
[05:03:38] <micah> neshpion: thanks that is a better way than I was going to do
[05:06:35] *** Quits: uuidNuniq (~weechat@146.56.136.247) (Remote host closed the connection)
[05:06:50] *** Joins: uuidNuniq (~weechat@146.56.136.247)
[05:07:36] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[05:11:02] *** Parts: userT (~user0@187.140.209.44) ()
[05:26:49] *** Quits: joo-_ (~joo-_@fsf/member/joo--) (Ping timeout: 268 seconds)
[05:28:23] *** Joins: joo-_ (~joo-_@fsf/member/joo--)
[05:29:56] *** Quits: uuidNuniq (~weechat@146.56.136.247) (Remote host closed the connection)
[05:30:16] *** Joins: uuidNuniq (~weechat@146.56.136.247)
[05:33:03] *** Joins: c137 (~c137@dynamic-077-000-148-193.77.0.pool.telefonica.de)
[05:34:01] *** Quits: c137 (~c137@dynamic-077-000-148-193.77.0.pool.telefonica.de) (Quit: Leaving)
[05:34:50] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 268 seconds)
[05:37:59] *** Joins: rgrinberg (~textual@2806:265:5401:9431:c06f:a951:3576:df5c)
[05:40:25] *** Quits: twobitsprite (~twobitspr@195.181.171.237) (Read error: Connection reset by peer)
[05:43:39] *** Quits: earnestly (~earnest@user/earnestly) (Ping timeout: 256 seconds)
[05:44:47] *** Quits: usrnamewastaken (~Delvien@gateway/vpn/pia/delvien) (Ping timeout: 256 seconds)
[05:46:23] *** Joins: usrnamewastaken (~Delvien@gateway/vpn/pia/delvien)
[05:47:33] *** Joins: akoana (~ah@user/akoana)
[05:49:34] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Quit: Leaving)
[05:50:48] *** Quits: dfdx (~F@user/dfdx) (Quit: leaving)
[05:50:55] *** Joins: MarchHare (~MarchHare@2602:47:161:8200::a57)
[05:51:28] <MarchHare> Question: Does anyone have a regex checker for the flavor of regex that bash uses with =~
[05:51:36] *** Quits: hubvu (sid495858@user/hubvu) (Ping timeout: 245 seconds)
[05:52:10] <MarchHare> I'm trying to tune a regex to get rid of lines with whitespace, # comments only, or a combination of whitespace and comments
[05:53:26] <MarchHare> The one I have sort of works, but I'd like to get it tuned correctly the way the sed one I used worked.
[05:55:04] *** Joins: hubvu (sid495858@user/hubvu)
[05:55:42] <neshpion> it's POSIX extended regex, but unfortunately regex101.com doesn't have that option
[05:56:23] <MarchHare> nescafe1001: I noticed it only had the options for javascript and perl and some stuff
[05:57:09] <MarchHare> This one seem good to you neshpion? https://www.regextester.com/99203
[05:58:13] <MarchHare> I'm not sure if perl PCRE and Posix extended are especially compatible
[05:58:46] <neshpion> they seem "mostly" similar if you avoid fancy things like \d and lookarounds
[06:00:20] <MarchHare> nescafe1001: I probably am. I'm just using it to parse a file that contains directory names and #comments. I want to knock out the blank lines and lines with comments only (whether preceeded by whitespace or not)
[06:00:22] <neshpion> for your scenario i would try [[ ! $line =~ ^\s*#.*$ ]] to match all non-whitespace-and-maybe-comments-and-even-empty lines
[06:00:29] <neshpion> also you are pinging the wrong nick
[06:00:33] <tirnanog> I found an ERE one once but it was rubbish. besides, the dialect is quite simple to begin with. PCRE is mostly a superset so, as noted, conventional testing services can be useful up to a point.
[06:00:56] <tirnanog> \s would need to be [[:space:]], by the way.
[06:01:02] <MarchHare> neshpion: Is \s considered standard, or should I be using [[:blank:]]?
[06:01:03] <neshpion> oops
[06:01:15] <neshpion> [[:space:]] apparently
[06:02:00] <MarchHare> neshpion: Okay, just wanted to be sure. I'm trying to update a script. Here's the original. Kind of handy. https://gist.github.com/Hordeking/46ee17c0b065ee0820ce1cce8fa34037
[06:02:09] <tirnanog> [[:blank:]] is also fine if it does what you want (matching a space or a tab only).
[06:02:32] <MarchHare> neshpion: The improvements basically involve collecting the problem-repositories and spitting them out at the end of the script.
[06:03:56] <MarchHare> tirnanog: Which one collects more whitespace stuff? I don't really care what the blanks are.
[06:04:01] <tirnanog> [[:space:]]
[06:04:11] <neshpion> !check https://gist.github.com/Hordeking/46ee17c0b065ee0820ce1cce8fa34037/raw
[06:04:12] <checkbot> neshpion: Line 37: Use 'popd ... || exit' or 'popd ... || return' in case popd fails. Line 11: Note that A && B || C is not if-then-else. C may run when A is true. Line 31: read without -r will mangle backslashes. See https://shellcheck.net/?id=cb58852 for all 5 issues.
[06:04:59] <nescafe1001> MarchHare: Yep, totally wrong nick.  Also, I seem to still be in this channel.
[06:05:12] <neshpion> nescafe1001: no escape
[06:05:14] <tirnanog> using \s in grep without specifying GNU's -P option is a big naughty also. but that could just as well be grep -E and have \s be replaced with [[:space:]].
[06:05:17] <MarchHare> neshpion: It's catching a lot of the stuff I've taken out now. The real issue was trying to cat onto the end of a variable in a subshell
[06:05:51] <MarchHare> tirnanog, neshpion: Let me post the current iteration and see what you can make of it.
[06:05:53] * neshpion just uses rg -P for magic and fast
[06:06:57] <MarchHare> neshpion, tirnanog: Here's the current one. The guts are replaced a bit. I do like this one better. https://pastebin.com/wyshZ4C6
[06:06:57] <pasteban> Paste is available without ads on https://pastebin.com/raw/wyshZ4C6
[06:07:30] <MarchHare> Trying to make it a bit more robust and stuff.
[06:07:49] <MarchHare> Usually my scripts are very much quick and dirty. The original of this one is no exception
[06:08:18] <MarchHare> I'm also an asm and C programmer, so my bash scripting tends to be a bit simplistic
[06:08:23] <nescafe1001> but looking at that snippet, my usual advice applies, which mainly consists of using [[ ]] instead of [ ] everywhere, using if instead of conditionals when you are spanning more than one line, using here docs instead of repeated echos, etc.
[06:08:23] <tirnanog> when asking for help with pattern matching, it's exceptionally useful to provide some sample input, by the way. in this case, a representative sample of what's in "$REPOFILE" along with a brief explanation of the intent. parden me if that was already specified as I'm starting to get sleepy.
[06:09:26] <MarchHare> https://pastebin.com/raw/FG740tnK
[06:10:09] <MarchHare> There's the sample file. foonn are valid, up to date repoes. There's a foo1 that they have as their origin. foo1 isn't included in this file because it has nowhere to pull from
[06:10:49] <MarchHare> The old script would parse it just fine, the new one has the regex not fail on blank lines properly. So I'm trying to tune it
[06:11:36] <tirnanog> does it really have carriage returns or is that pastebin.com being pastebin.com
[06:11:49] <MarchHare> tirnanog: Good question, let me check that.
[06:11:58] <tirnanog> I suspect the latter.
[06:12:15] <MarchHare> Looks like 0x0a for mine, no crlf pairs
[06:12:57] <MarchHare> (Though actually, given my tinkering with the terminal hardware on bare metal, I'm a bit of a cr-lf purist, they DO have different functions)
[06:15:28] <MarchHare> Oh, "foo2 test" is a directory with a space in the name, I added that later to test, too
[06:15:38] <tirnanog> ok. there's no mechanism for blank line removal here. grep -v '^\s*#\|^$' could be grep -vE '^[[:space:]]*$'. the pattern that is currently ^\s*# is redundant, as far as I can see, because the only lines that could match that pattern would already be deleted by the present sed code.
[06:15:58] <tirnanog> of course, it could be done in bash also but as an initial observation.
[06:16:26] <MarchHare> tirnanog: Originally I did that with sed. What's considered robust?
[06:16:45] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[06:17:19] *** Joins: dob1_ (~dob1@user/dob1)
[06:17:25] <tirnanog> whatver is implemented in acccordance with your requirements and correctly. certainly ^[[:space:]]*$ would also work in sed. it's both a valid BRE and ERE.
[06:17:47] *** Joins: nattiestnate (~nate@114.122.105.227)
[06:17:54] <tirnanog> incidentally, if you're using linux, regex(7) is a great little man page on the matter of ERE and BRE.
[06:18:00] <MarchHare> I think the new code is intended to do a continue on an invalid line. I didn't write that. I'm in the process of getting to know it and tuning it correctly to my needs.
[06:18:08] <tirnanog> ok.
[06:18:22] <tirnanog> so, we can pretend sed and grep aren't there and go based on requirements then.
[06:18:28] <tirnanog> (maybe)
[06:18:54] <MarchHare> I think in my case, that's reasonably, though I can clean $REPLY up with sed, too.
[06:19:07] <MarchHare> Might be easier, honestly.
[06:19:24] <tirnanog> while read line should be "while read -r line" or "while IFS= read -r line" if you want for not line trimming to occur.
[06:19:32] <MarchHare> The original code just stripped out blank lines and comments as you said.
[06:19:49] *** Quits: dob1 (~dob1@user/dob1) (Ping timeout: 240 seconds)
[06:20:43] <MarchHare> tirnanog: In "while IFS= read -r line", is line the line of input itself, or a variable name?
[06:20:51] <tirnanog> a name.
[06:21:09] <MarchHare> tirnanog: Without "line" it dumps it in REPLY?
[06:21:12] <tirnanog> yes.
[06:21:27] <MarchHare> okay, good to know I can change that.
[06:21:53] <MarchHare> so setting IFS=\0 will make it trim lines? I'm fine with line trimming.
[06:22:07] <tirnanog> no. just leave IFS out for that.
[06:22:11] <MarchHare> \0 in this case is just a placeholder, not a true null
[06:22:28] <tirnanog> but always use -r.
[06:23:07] <MarchHare> what's the man command for read -r? I'm getting the system call
[06:23:56] <tirnanog> "help read" for a quick-reference. otherwise the bash man page. if you have a read(1) man page, it won't describe the features of the bash builtin.
[06:24:22] <tirnanog> or read(1p) as the case may be.
[06:24:37] <tirnanog> in short, you need to read bash documentation to be reading about bash builtins.
[06:24:55] <MarchHare> okay, that explains it. I've got that pulled up now.
[06:25:32] <MarchHare> Looks like -r is a sanitization flag?
[06:25:37] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[06:25:50] <tirnanog> it stops backslashes from being meaningful.
[06:25:54] <tirnanog> it's almost always what you want.
[06:26:34] <MarchHare> tirnanog: Definitely safer, I can imagine. In my case, there shouldn't be anything needing to be escaped in a text file.
[06:26:38] <tirnanog> still.
[06:28:17] <MarchHare> So in my case, why isn't read -r trimming out these blank lines?
[06:28:30] <MarchHare> I guess that's on me to figure out
[06:28:31] <tirnanog> it doesn't remove lines.
[06:28:34] <tirnanog> it trims them.
[06:28:44] <tirnanog> leading and trailing whitespace will be stripped out. that's all.
[06:28:56] <MarchHare> So basically I'm getting back a ^$ into the regex if it's whitespace
[06:30:26] <tirnanog> echo '    ' | { read -r line; [[ $line ]] || echo "nothing"; }
[06:30:29] <tirnanog> # echo '    ' | { read -r line; [[ $line ]] || echo "nothing"; }
[06:30:30] <shbot> tirnanog: nothing
[06:30:42] <tirnanog> # echo '    ' | { IFS= read -r line; [[ $line ]] && echo "something"; }
[06:30:43] <shbot> tirnanog: something
[06:30:53] *** Quits: infernix (nix@2a02:22a0:bbb1:d500::2) (Quit: ZNC - http://znc.sourceforge.net)
[06:31:31] <tirnanog> # printf '%s\n' '    ' '    ' | { read -r line; declare -p line; IFS= read -r line; declare -p line;
[06:31:33] <tirnanog> bah
[06:31:37] <shbot> tirnanog: Missing terminating quote, bracket or keyword
[06:31:38] <tirnanog> # printf '%s\n' '    ' '    ' | { read -r line; declare -p line; IFS= read -r line; declare -p line; }
[06:31:39] <shbot> tirnanog: declare -- line=""
[06:31:39] <shbot> tirnanog: declare -- line="    "
[06:32:42] <MarchHare> That makes sense.
[06:32:58] <tirnanog> ergo, if you don't specify IFS, specify a variable name, then [[ $line ]] should be sufficient to check for 'emptiness'.
[06:33:28] <MarchHare> tirnanog: I thought that test required -z?
[06:33:45] <tirnanog> -z can be used. it's not required.
[06:33:50] <tirnanog> [[ ! $line ]] would mean the same thing.
[06:34:01] <MarchHare> tirnanog: I've learned something new today. Lots of somethings, really
[06:34:14] <tirnanog> also, keep in mind that the trimming is based on the characters of IFS which, by default are:
[06:34:27] <tirnanog> # printf %s "$IFS" | od -a
[06:34:28] <shbot> tirnanog: 0000000  sp  ht  nl
[06:34:28] <shbot> tirnanog: 0000003
[06:34:31] *** Quits: razend (~razend@94.200.42.14) (Ping timeout: 256 seconds)
[06:34:34] <tirnanog> space, tab, newline
[06:34:47] *** Joins: Crescendo (~Crescendo@user/crescendo)
[06:35:25] <tirnanog> if that's not good enough, you'd be best advised to stick to IFS= so that you get the line verbatim and operate on it accordingly.
[06:35:28] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[06:35:30] <MarchHare> How does trimming a newline help? Wouldn't that merge two lines, or is it just trimming multiple consec newlines?
[06:35:31] *** Joins: thebombzen_ (~thebombze@64-233-244-163.static.clv.wideopenwest.com)
[06:35:57] <tirnanog> that IFS contains a newline doesn't matter in this case, because read is only reading as far as a newline anyway (-d wasn't specified).
[06:36:05] <tirnanog> you can pretend it's not there.
[06:36:12] <MarchHare> Honestly, I'll probably trim the lines, check for emptiness, strip the comments, and go from there :)
[06:36:21] <tirnanog> ok.
[06:36:22] <MarchHare> Perhaps strip the comment first
[06:36:42] <MarchHare> then trim and check for empty. That's basically what the original script did.
[06:36:56] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[06:37:05] <tirnanog> would make sense, as you support trailing comments. though, I really wonder whether you can't just make this simpler by doing something like ...
[06:37:49] <tirnanog> if [[ $line =~ ^([^[:space:]]+) ]]; then repo=${BASH_REMATCH[1]}; if [[ $repo !== '#'* ]]; then ...
[06:38:01] <tirnanog> !=, I mean
[06:38:27] <Blondie101010> |grep  "^\s*#\|^$"
[06:38:28] *** Quits: Crescendo (~Crescendo@user/crescendo) (Read error: Connection reset by peer)
[06:38:39] <tirnanog> that is, match all non-whitespace from the beginning of a trimmed line. that's enough to match the repo names in your sample.
[06:38:41] <Blondie101010> -v
[06:39:20] <tirnanog> heck, you could just read the first field if that is considered acceptable.
[06:39:40] <tirnanog> while read -r repo _; do if [[ $repo != '#'* ]]; then ...
[06:40:04] <MarchHare> Bash rematch is basically capture groups, right? I was going to move onto that part once I figured out how to fix the blankline test
[06:40:22] <tirnanog> yes, but consider the above, where you just read the first whitespace separated field into repo.
[06:40:35] <tirnanog> that might be enough based on your sample input.
[06:40:37] *** Joins: millido (~millido@84.210.150.128)
[06:40:48] *** Joins: mw__ (~mw@catv-80-98-128-161.catv.broadband.hu)
[06:40:49] *** Quits: mw_ (~mw@catv-80-98-128-161.catv.broadband.hu) (Read error: Connection reset by peer)
[06:42:07] <MarchHare> That sample is pretty much what I would ever expect to see, basically it's just an ls of the directory with comments so I can write notes to myself (and the magic number comment at the top)
[06:42:14] <tirnanog> actually, it would need to be [[ $repo && $repo != '#'* ]] so as to account for blank lines.
[06:42:48] <tirnanog> or similar.
[06:43:16] <tirnanog> If I do that for your sample, I get:
[06:43:21] <Blondie101010> hmm
[06:43:35] <tirnanog> https://termbin.com/olte
[06:43:37] <tirnanog> seems ok?
[06:43:56] *** Quits: rgrinberg (~textual@2806:265:5401:9431:c06f:a951:3576:df5c) (Remote host closed the connection)
[06:44:14] <MarchHare> tirnanog: That looks about right, yes.
[06:44:16] <tirnanog> the code was: while read -r repo _; do [[ $repo && $repo != '#'* ]] && declare -p repo; done < input
[06:44:42] <MarchHare> declare is just a placeholder command, yes?
[06:45:15] <tirnanog> yes. so i could inspect the contents.
[06:45:31] *** Joins: rgrinberg (~textual@2806:265:5401:9431:c06f:a951:3576:df5c)
[06:45:37] *** Quits: jos1 (~jos3@dyndsl-091-096-035-185.ewe-ip-backbone.de) (Ping timeout: 240 seconds)
[06:46:34] <MarchHare> So basically, I just replace the regex test with this, and $repo should look good. Let's try it on my end!
[06:46:39] <neshpion> i wasn't paying attention to anything you guys were discussing because i was busy doing my own pedantry on this script MarchHare https://termbin.com/alk2
[06:46:50] <MarchHare> btw, what's the _ for in that first repo?
[06:47:21] <tirnanog> to throaway the remaining fields. they actually get joined and assigned to $_ which is abuse of a sort. but it's fine. there are no side effects.
[06:48:04] <tirnanog> some people would prefer to write read -r field1 rest or whatever.
[06:48:11] <MarchHare> neshpion: Looks like you dump the problem repoes to an array?
[06:48:11] <neshpion> wait i have a useless `break` statement, rip
[06:48:27] <neshpion> MarchHare: yep, easier to print them that way with printf and you also get the count in the first line :D
[06:48:35] <MarchHare> tirnanog: Seems reasonable.
[06:48:44] <MarchHare> neshpion: Which is even nicer :)
[06:49:19] <neshpion> MarchHare: ignore `break` in the case statement.  i am used to doing case statement option checking in while loops, but this script doesn't loop  because it only cares for the first arg and nothing else
[06:49:26] <neshpion> s/ignore/erase/ :D
[06:50:49] <neshpion> oh you know what, i should have added >&2 to lines 31-32, oh well
[06:51:29] <neshpion> or to line 34 actually
[06:52:14] *** Quits: mat001 (~mat001@c-69-181-158-251.hsd1.ca.comcast.net) ()
[06:54:04] <MarchHare> tirnanog: It doesn't seem to handle the "foo2 test" at the end :( But it gets the rest
[06:54:22] <MarchHare> Looks like it trims "foo2 test" to "foo2"
[06:54:25] <tirnanog> I didn't notice that one.
[06:54:46] <MarchHare> I'm assuming that's read -r doing that one?
[06:55:39] <tirnanog> so you have directories with whitespace. better go back to reading whole lines then.
[06:56:18] * neshpion forgor to put IFS=
[06:56:25] * neshpion shame
[06:56:38] <MarchHare> tirnanog: I think in practice, I actually don't, but it's always a possibility I do it absentmindedly at some point.
[06:56:53] <MarchHare> tirnanog: Is there a bash trim function?
[06:57:08] <MarchHare> I could just read the whole line and trim it.
[06:57:17] <tirnanog> no. but it's already being trimmed as was discussed earlier.
[06:57:41] *** Quits: bloodfart69 (~bloodfart@131.150.105.232) (Quit: Leaving)
[06:59:16] <MarchHare> tirnanog: So I need to get the whole line, then strip off the comment, then trim it, then check it
[06:59:30] *** Joins: jos1 (~jos3@host-091-097-184-209.ewe-ip-backbone.de)
[07:00:02] <MarchHare> Well, the trim will be any whitespace before the # in the regex, so those two are probably one operation
[07:00:27] <MarchHare> [:space:]*#.*$
[07:00:45] <tirnanog> https://termbin.com/azrt
[07:03:28] <MarchHare> tirnanog: That does seem to catch it. A little tuning and I think it's working
[07:03:58] <tirnanog> you might prefer to match a non-trailing comment against $line instead, up front. but you get the idea.
[07:04:33] <MarchHare> tirnanog: I would just use -d# for that, right?
[07:04:38] <MarchHare> on the read command?
[07:04:41] <tirnanog> no
[07:04:56] <tirnanog> that would break everything because # would then be your line delimiter.
[07:05:05] <tirnanog> well, once quoted properly (-d'#')
[07:05:35] *** Quits: Zauberfisch (~Zauberfis@cm147-42.liwest.at) (Read error: Connection reset by peer)
[07:05:54] <MarchHare> Okay, I get that. I wasn't sure if the -d replaced a newline or if it basically said "go to next newline delimited line"
[07:05:57] <tirnanog> I mean $line == *([[:space:]])'#' ]] && continue, for example.
[07:06:10] <MarchHare> tirnanog: I actually did more or less that.
[07:06:13] <tirnanog> or =~ if you don't yet understand the glob, in which case it can be an ERE.
[07:07:25] <MarchHare> https://pastebin.com/nyw74NtC
[07:07:25] <pasteban> Paste is available without ads on https://pastebin.com/raw/nyw74NtC
[07:07:37] <MarchHare> This /seems/ to be working
[07:07:58] <neshpion> famous last words
[07:08:04] <neshpion> SHIP IT
[07:08:30] <MarchHare> I'll be a silicon valley rockstar with this!
[07:08:37] <MarchHare> Richer than Bezos!
[07:09:07] *** Quits: semigloss (~semigloss@d14-69-6-230.try.wideopenwest.com) (Quit: leaving)
[07:09:23] <tirnanog> yes. the line is trimmed already. the trailing comment is removed. what remains is checked for being non-empty not leading with a #.
[07:09:28] <tirnanog> and*
[07:09:39] <tirnanog> if this can make me rich, do let me know how!
[07:10:03] *** Quits: yuesbeez (uid458354@id-458354.tinside.irccloud.com) (Quit: Connection closed for inactivity)
[07:10:07] <MarchHare> Well, it will make you rich in time. I use it to keep my programming directory repoes up to day
[07:10:09] <MarchHare> date
[07:10:28] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[07:10:46] *** Joins: Zauberfisch (~Zauberfis@cm147-42.liwest.at)
[07:11:20] <tirnanog> this would not allow you to have leading or trailing whitespace in your repo names, though I don't suppose you'll be losing any sleep over that.
[07:11:26] <MarchHare> Basically I stick a file in the root directory of wherever I want to group some repoes and put all of them I want to keep updated in there. That way I don't run git pull on the ones I DON'T want to touch
[07:11:34] <MarchHare> tirnanog:
[07:12:08] <MarchHare> tirnanog: Nah, I'm funny about leading and trailing whitespace on filesystem stuff. Having spaces IN them is still weird for me.
[07:13:30] *** Quits: cdown (~cdown@163.114.131.1) (Ping timeout: 268 seconds)
[07:13:55] <MarchHare> tirnanog: I wrote this script several years ago after I ran into trouble with "find -type d -iname ".git" -execdir git pull. Didn't discriminate between stuff I wanted and stuff I didn't.
[07:15:33] <MarchHare> tirnanog: I've found it pretty handy. I can just find my gitrepo lists and update using those
[07:16:22] <tirnanog> I see.
[07:16:34] *** Joins: Crescendo (~Crescendo@user/crescendo)
[07:20:27] <MarchHare> neshpion: With your script, it's like the minimum number of array elements is 1?
[07:20:46] <MarchHare> tirnanog: I really appreciate your help with this. I'm kind of enjoying fixing this and learning some stuff.
[07:21:12] <neshpion> MarchHare: why would it be?
[07:21:15] <neshpion> the array can be empty
[07:22:12] <MarchHare> neshpion: Well, if there are no problem entries, then shouldn't it be zero or something?
[07:22:23] <neshpion> yes
[07:22:30] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:22:35] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[07:23:18] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[07:23:43] <MarchHare> neshpion: For me it's coming back as 1 even when remove $PROBLEMREPOES+=...
[07:24:04] <tirnanog> it's not presently an array.
[07:24:12] <MarchHare> neshpion: Is this an array index base?
[07:24:42] <tirnanog> what's coming back as 1?
[07:24:44] <MarchHare> tirnanog: I applied his declare -a PROBLEMREPOES line to it.
[07:24:48] <neshpion> you'll have to post your current version of the script using an array; my version can be empty.  array index is 0-based in bash
[07:25:15] <neshpion> if you attempted to implement an array based on how my version was written but did it differently, i can't tell you what's going on without seeing it
[07:26:21] <MarchHare> neshpion: https://pastebin.com/raw/kBDwZTc1 It's basically the stuff you tweaked to add it as an array rather than as a string
[07:26:52] <MarchHare> I pretty much used it nearly verbatim, unless I mistyped something
[07:26:55] <tirnanog> PROBLEMREPOS="" should be removed
[07:27:10] <tirnanog> # arr=""; declare -a arr; declare -p arr
[07:27:11] <shbot> tirnanog: declare -a arr=([0]="")
[07:27:17] <tirnanog> # declare -a arr; declare -p arr
[07:27:18] <shbot> tirnanog: declare -a arr
[07:27:45] <MarchHare> tirnanog: Let me guess, declare won't redeclare something? I completely forgot about that line. Nice catch
[07:28:04] <MarchHare> tirnanog: That was it, though
[07:28:07] <tirnanog> it does, but it ends up incorporating the existing scalar value as the zeroeth element.
[07:28:11] <neshpion> my eyeballs couldn't even see that because i wasn't prepared for it, i had to look when tirnanog said that lol
[07:28:12] <tirnanog> definitely not what you want.
[07:28:15] <MarchHare> tirnanog neshpion: Nailed it.
[07:28:24] *** EnchanterTim is now known as CartmanBrah
[07:28:43] <MarchHare> neshpion: Yeah, I had to hunt for it, I kind of forgot I added that. Automatic for me sometimes.
[07:29:12] <MarchHare> tirnanog: That's yet another thing I've learned today about bash arrays
[07:29:28] <tirnanog> you could also declare it in the fashion of arr=()
[07:29:41] <neshpion> probably safer
[07:30:01] <tirnanog> yes, it is.
[07:30:12] <tirnanog> because the initial value could technically come from the environment.
[07:30:39] *** Joins: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys)
[07:30:46] *** Joins: infernix (nix@2a02:22a0:bbb1:d500::2)
[07:31:14] <MarchHare> That's kind of what my logic was, but it was also a hefty dose of "second nature to c programmer"
[07:32:28] <tirnanog> I would also advise against explicitly reading into REPLY. there's a confusing discrepancy as to how read works where no names are specified.
[07:32:55] <MarchHare> The script seems to be working in "the real world" (both of my computers with repoes I like to keep updated)
[07:33:14] <tirnanog> # read -r <<<'  foo  '; declare -p REPLY
[07:33:15] <shbot> tirnanog: declare -- REPLY="  foo  "
[07:33:17] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 240 seconds)
[07:33:20] <tirnanog> # read -r REPLY <<<'  foo  '; declare -p REPLY
[07:33:21] <shbot> tirnanog: declare -- REPLY="foo"
[07:33:25] <tirnanog> notice how these are not the same thing.
[07:33:59] <tirnanog> so, while explicitly writing REPLY isn't technically wrong - and it does end up being handled just as any other name would - it can lull you into thinking that implicit REPLY assignment is no different. but it actually is.
[07:34:30] <MarchHare> So I should probably use a different variable name?
[07:34:34] <tirnanog> yeah, I would.
[07:34:46] <MarchHare> tirnanog: I'll just call it LINE and be done.
[07:34:48] <tirnanog> it won't change the behaviour but it makes the distinction clear.
[07:35:21] <tirnanog> implict REPLY assignment always gives the line verbatim (IFS be damned), which is a definite inconsistency. though sometimes useful.
[07:35:29] <MarchHare> I thought read -r trimmed unless you used IFS=
[07:35:47] <tirnanog> it does where a name is specified.
[07:36:01] <tirnanog> it's just a dumb inconsistency that's been around forever and isn't likely to change.
[07:36:18] <MarchHare> But not when no name is spec'd? That's certainly a good way to trip up a newb
[07:36:24] <MarchHare> Would've got me.
[07:36:38] <tirnanog> if you read "help read", it is actually explained.
[07:36:59] *** Quits: causasui (~causasui@c-68-60-125-136.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[07:37:03] <tirnanog> it says that, if no names are specified, the line read is stored in REPLY (without the hooplah described in the preceding paragraph).
[07:37:10] *** Quits: thebombzen_ (~thebombze@64-233-244-163.static.clv.wideopenwest.com) (Quit: Quit)
[07:37:36] <tirnanog> yes, indeed.
[07:37:57] *** Quits: Crescendo (~Crescendo@user/crescendo) (Ping timeout: 240 seconds)
[07:38:25] <MarchHare> mine doesn't explain it, but I might be missing it.
[07:38:35] <tirnanog> you may have to read it a few times before it sinks in.
[07:38:52] <neshpion> let that sink in
[07:38:56] <tirnanog> in, particular, "as with wordsplitting" it out of scope for this particular help entry.
[07:39:45] <tirnanog> ergo, you have to know how wordsplitting works to truly understand it.
[07:40:02] *** Quits: jonakeys_ (jonathan@gateway/vpn/airvpn/jonakeys) (Quit: WeeChat 3.3)
[07:40:19] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[07:41:02] <tirnanog> the key thing is that there is no word splitting and field assignemnt with only "read -r".
[07:41:12] <tirnanog> the line gets assigned to REPLY and that's all there is to it.
[07:41:17] *** Quits: Jong (~Jong@2620:10d:c090:400::5:da53) (Ping timeout: 240 seconds)
[07:41:35] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[07:41:42] <pj> yep, stupid inconsistency
[07:41:53] <MarchHare> Mine explains wordsplitting pretty concisely, but doesn't really explicitly say anything about trimming word separators or not when a variable isn't given
[07:42:17] <tirnanog> the help entries only go so far.
[07:42:27] <MarchHare> I can see how it wouldn't trim if you told it NOTHING was a word delimiter
[07:42:35] <tirnanog> it's expected that a visit to the manual may be required for the gory details on various topics.
[07:43:03] <MarchHare> tirnanog: I assume we're talking about the Bash tome in this case?
[07:43:09] <tirnanog> word splitting is based on each character assigned to IFS.
[07:43:13] <MarchHare> That's denser reading than I feel up to tonight.
[07:43:24] <tirnanog> if IFS has an empty string as its value, there's nothing to split on.
[07:43:26] <MarchHare> tirnanog: Can IFS be more than one char?
[07:43:28] <tirnanog> yes.
[07:43:35] <pj> The trimming can be rather useful sometimes if you want that as a feature.
[07:43:36] <tirnanog> and it is, by default, as was shown earlier.
[07:43:40] <MarchHare> tirnanog: I wondered. I haven't really played with it.
[07:44:01] <pj> and you can trim any chars you want simply by setting them in IFS
[07:44:41] *** Joins: XV8 (~XV8@2601:5cb:c001:50:3d6e:cfa4:63ac:b4be)
[07:44:47] *** Quits: ghostboarder (~quassel@user/ghostboarder) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:46:20] <MarchHare> tirnanog: Is IFS assumed as a default? Mine doesn't seem to be set as a variable by default.
[07:46:45] <tirnanog> # echo "${IFS@Q}"
[07:46:46] <shbot> tirnanog: $' \t\n'
[07:46:56] <tirnanog> that's the default.
[07:47:23] <MarchHare> Okay, what's the @Q on that? I've never seen that one
[07:47:27] <tirnanog> quotes.
[07:49:08] <MarchHare> It just surrounds the thing with quotes? It also escapes things?
[07:49:16] *** Quits: XV8 (~XV8@2601:5cb:c001:50:3d6e:cfa4:63ac:b4be) (Ping timeout: 268 seconds)
[07:49:22] <tirnanog> it's guaranteed to produce something that's safe for reinjection into bash.
[07:49:32] <tirnanog> in this case, it elected to use ANSI C style quoting
[07:49:32] *** Quits: dsrt^ (~dsrt@207.5.54.6) (Remote host closed the connection)
[07:49:34] <tirnanog> !$'
[07:49:34] <greybot> bash has a special form of quoting, $'string' in which backslash-character combinations are expanded. For example, IFS=$' \t\n' or echo $'It\'s embedded!' http://mywiki.wooledge.org/Quotes
[07:50:07] <tirnanog> I normally use declare -p but the results aren't so great for IFS.
[07:50:40] <tirnanog> I mean, it's valid but not particularly meaningful to eyeballs.
[07:50:45] <MarchHare> This greg guy has some good stuff
[07:50:59] *** Quits: szkl (uid110435@id-110435.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[07:51:53] <MarchHare> Honestly, I think I wish I'd known about the @Q thing when I was working for the radio station and doing up some scripts to automate our stuff
[07:52:08] <tirnanog> it's somewhat new. printf %q has been around for longer.
[07:52:29] <MarchHare> I had some real stinkers where our talent couldn't use standardized filenames to save their lives.
[07:52:50] <MarchHare> tirnanog: So it's a builtin shorthand for the %q format string then?
[07:53:16] <tirnanog> pretty much.
[07:53:24] <tirnanog> %q in parameter expansion form.
[07:53:57] <MarchHare> I think I'll be looking a bit more this evening at gregs wiki. I think I should do a bit more studying.
[07:54:35] <MarchHare> tirnanog: Thanks for the help. neshpion, you too. Both your contribs went into that script. Feel free to use it for your own repository jungles.
[07:58:36] *** Joins: srwm^ (~srwm@207.5.54.6)
[08:00:08] *** Quits: tirnanog (~tirnanog@user/tirnanog) (Quit: = "")
[08:04:07] *** Joins: kurahaupo_ (~kurahaupo@pa49-182-27-213.pa.qld.optusnet.com.au)
[08:05:15] *** Joins: lalitmee_ (~lalitmee@180.94.33.76)
[08:07:37] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[08:12:50] *** Quits: neshpion (~neshpion@gateway/tor-sasl/neshpion) (Quit: neshpion)
[08:21:37] *** Quits: thiras (~thiras@user/thiras) (Ping timeout: 240 seconds)
[08:22:41] *** Quits: TMan459 (~TMan459@068-113-228-168.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[08:30:35] *** Joins: aakashi2001 (~aakashi20@user/aakashi2001)
[08:32:01] *** Joins: TMan459 (~TMan459@068-113-228-168.res.spectrum.com)
[08:32:08] *** Quits: Circuitsoft (uid393878@id-393878.lymington.irccloud.com) (Quit: Connection closed for inactivity)
[08:43:27] *** Quits: rgrinberg (~textual@2806:265:5401:9431:c06f:a951:3576:df5c) (Remote host closed the connection)
[08:44:51] *** Joins: kurahaupo (~kurahaupo@pa49-182-120-117.pa.qld.optusnet.com.au)
[08:45:04] *** Joins: rgrinberg (~textual@2806:265:5401:9431:c06f:a951:3576:df5c)
[08:45:42] *** Quits: tkazi (~tkazi@user/tkazi) (Quit: Disconnected)
[08:46:01] *** Joins: tkazi (~tkazi@user/tkazi)
[08:46:02] *** Quits: tkazi (~tkazi@user/tkazi) (Remote host closed the connection)
[08:47:15] *** Quits: kurahaupo_ (~kurahaupo@pa49-182-27-213.pa.qld.optusnet.com.au) (Ping timeout: 256 seconds)
[08:48:45] *** Joins: tkazi (~tkazi@user/tkazi)
[09:06:24] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Quit: ZNC 1.8.2 - https://znc.in)
[09:06:40] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[09:10:26] *** Quits: Inline (~Inline@2a02:908:1252:7a80::4f) (Ping timeout: 252 seconds)
[09:12:29] *** Quits: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com) (Quit: Bye...)
[09:13:21] *** Joins: kdc (~kdc@196.211.197.159)
[09:14:19] *** Quits: ChmEarl (~chmearl@user/chmearl) (Quit: Leaving)
[09:16:33] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[09:18:17] *** Quits: timj (~timj@user/timj) (Ping timeout: 240 seconds)
[09:19:21] *** Quits: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith) (Remote host closed the connection)
[09:19:29] *** Joins: Inline (~Inline@2a02:908:1252:7a80::4f)
[09:19:37] *** Joins: winstonsmith (~winstonsm@gateway/vpn/pia/winstonsmith)
[09:19:56] *** Quits: Inline (~Inline@2a02:908:1252:7a80::4f) (Client Quit)
[09:20:19] *** Joins: Inline (~Inline@2a02:908:1252:7a80::4f)
[09:22:42] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[09:24:40] *** Joins: sublim20 (~sublim20@user/sublim20)
[09:26:52] *** Quits: sublim20 (~sublim20@user/sublim20) (Client Quit)
[09:30:01] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Remote host closed the connection)
[09:30:05] *** Joins: kapil (~kapil@okweb.co.in)
[09:31:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[09:31:16] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[09:33:44] *** Joins: timj (~timj@user/timj)
[09:35:16] *** Joins: lalitmee__ (~lalitmee@180.94.33.171)
[09:35:47] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[09:37:22] *** Quits: edlou (uid413273@id-413273.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[09:37:41] *** Quits: lalitmee_ (~lalitmee@180.94.33.76) (Ping timeout: 256 seconds)
[09:37:57] *** Quits: kurahaupo (~kurahaupo@pa49-182-120-117.pa.qld.optusnet.com.au) (Ping timeout: 240 seconds)
[09:38:17] *** Quits: sinaowolabi (~SinaOwola@160.152.36.12) (Ping timeout: 240 seconds)
[09:39:28] *** Quits: aakashi2001 (~aakashi20@user/aakashi2001) (Quit: Leaving)
[09:43:57] *** Quits: Feuermagier (~Feuermagi@user/feuermagier) (Remote host closed the connection)
[09:53:50] *** Joins: zostj (~rue@1-162-41-131.dynamic-ip.hinet.net)
[09:55:30] *** Joins: Sauvin (~sauvin@about/linux/staff/sauvin)
[09:57:29] *** Joins: kurahaupo (~kurahaupo@pa49-182-120-117.pa.qld.optusnet.com.au)
[09:58:01] *** Quits: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb) (Remote host closed the connection)
[09:58:50] *** Joins: x88x88x (~x88x88x@2001:19f0:5:39a8:5400:3ff:feb6:73cb)
[10:00:32] *** Quits: kurahaupo_ (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[10:01:35] *** Quits: rgrinberg (~textual@2806:265:5401:9431:c06f:a951:3576:df5c) (Read error: Connection reset by peer)
[10:02:14] *** Joins: rgrinberg (~textual@2806:265:5401:9431:c06f:a951:3576:df5c)
[10:04:12] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[10:16:45] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Quit: elastic_dog)
[10:18:11] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[10:22:03] *** Quits: kurahaupo (~kurahaupo@pa49-182-120-117.pa.qld.optusnet.com.au) (Read error: Connection reset by peer)
[10:22:59] *** Joins: kurahaupo (~kurahaupo@pa49-182-120-117.pa.qld.optusnet.com.au)
[10:30:32] *** Joins: sinaowolabi (~SinaOwola@41.58.253.32)
[10:34:59] *** Quits: kdc (~kdc@196.211.197.159) (Quit: Leaving)
[10:37:45] *** Quits: sinaowolabi (~SinaOwola@41.58.253.32) (Ping timeout: 256 seconds)
[10:41:37] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[10:48:13] *** Joins: sdu (~doo@185.44.146.214)
[10:50:34] *** Joins: carl- (~carl-@185.103.188.130)
[10:52:03] *** Joins: ztx (~ztx@user/ztx)
[10:55:46] *** Joins: lalitmee_ (~lalitmee@180.94.32.181)
[10:55:46] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[10:57:57] *** Quits: lalitmee__ (~lalitmee@180.94.33.171) (Ping timeout: 240 seconds)
[10:58:08] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[10:59:54] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[10:59:59] *** Quits: unop (~unop@194.154.249.71) (Remote host closed the connection)
[11:00:12] *** Joins: freep (~freepppp@62.1.172.246.dsl.dyn.forthnet.gr)
[11:00:15] *** Joins: unop (~unop@194.154.249.71)
[11:01:16] *** Joins: sinaowolabi (~SinaOwola@160.152.36.12)
[11:05:07] *** Joins: rendar (~rendar@user/rendar)
[11:09:14] *** Joins: Jong (~Jong@2620:10d:c090:400::5:f0a6)
[11:10:06] *** Joins: cheer (~cheer@cpe-76-189-213-198.neo.res.rr.com)
[11:13:41] *** Quits: akoana (~ah@user/akoana) (Quit: leaving)
[11:14:37] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 268 seconds)
[11:21:56] *** Joins: YoungFrog (~youngfrog@39.129-180-91.adsl-dyn.isp.belgacom.be)
[11:24:28] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[11:27:01] *** Joins: sinaowolabi_ (~SinaOwola@160.152.36.12)
[11:27:26] *** Quits: zostj (~rue@1-162-41-131.dynamic-ip.hinet.net) (Quit: WeeChat 3.4)
[11:28:03] *** Joins: ravan_ (~ravan@user/ravan)
[11:28:48] *** Quits: ravan (~ravan@user/ravan) (Ping timeout: 268 seconds)
[11:31:08] *** Joins: ravan (~ravan@42.201.198.151)
[11:31:08] *** Quits: ravan (~ravan@42.201.198.151) (Changing host)
[11:31:08] *** Joins: ravan (~ravan@user/ravan)
[11:32:43] *** Quits: ravan_ (~ravan@user/ravan) (Ping timeout: 256 seconds)
[11:35:19] *** Joins: kurahaupo_ (~kurahaupo@115.69.27.211)
[11:36:49] *** Quits: kurahaupo (~kurahaupo@pa49-182-120-117.pa.qld.optusnet.com.au) (Ping timeout: 268 seconds)
[11:38:50] *** Joins: lalitmee__ (~lalitmee@180.94.33.245)
[11:41:13] *** Quits: lalitmee_ (~lalitmee@180.94.32.181) (Ping timeout: 256 seconds)
[11:43:23] *** Quits: nattiestnate (~nate@114.122.105.227) (Quit: WeeChat 3.4)
[11:47:35] *** Joins: adac (~adac@31.207.101.82)
[11:51:46] *** Joins: lalitmee_ (~lalitmee@180.94.32.85)
[11:54:15] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 256 seconds)
[11:54:34] *** Quits: lalitmee__ (~lalitmee@180.94.33.245) (Ping timeout: 260 seconds)
[11:58:26] *** Joins: arinov_ (~arinov@213.194.126.155)
[12:03:31] *** Joins: pun (~weechat@user/pun)
[12:04:22] <pun> Hello. Is there a nicer way of doing this ? https://0x0.st/or61.home ( I'm trying to setup JAVA_HOME using a wildcard because the version number changes on a new release )
[12:08:59] *** Quits: Betal (~Betal@user/betal) (Quit: WeeChat 3.4)
[12:09:37] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Ping timeout: 240 seconds)
[12:10:17] <emanuele6> that will only "work" if there is exactly one path that matches that glob
[12:10:47] <pun> emanuele6: yes, that's the case
[12:10:52] <emanuele6> you want something like:   for JAVA_HOME in /usr/lib/jvm/*jdk; do break; done
[12:10:57] <emanuele6> and then export JAVA_HOME
[12:11:18] <emanuele6> that will give you the first match
[12:11:30] <emanuele6> but you probably want the last match now that i think about it
[12:11:37] <emanuele6> so    for JAVA_HOME in /usr/lib/jvm/*jdk; do :; done
[12:11:40] <emanuele6> : instead of break
[12:11:49] *** Quits: adac (~adac@31.207.101.82) (Ping timeout: 256 seconds)
[12:12:13] <pun> it's always just a folder, I just don't want to change 18 to 19 and so on in 'java-18-openjdk'
[12:12:14] <emanuele6> that will set JAVA_HOME to the last match (alphabetical order) for that glob
[12:12:39] <pun> there won't be more than one folder that has that naming scheme
[12:13:18] <emanuele6> # mkdir -p /usr/lib/jvm/java-18-openjdk; for JAVA_HOME in /usr/lib/jvm/*jdk; do :; done; declare -p JAVA_HOME
[12:13:19] <shbot> emanuele6: declare -- JAVA_HOME="/usr/lib/jvm/java-18-openjdk"
[12:13:21] <emanuele6> it works
[12:13:31] <emanuele6> # mkdir -p /usr/lib/jvm/java-{10..20}-openjdk; for JAVA_HOME in /usr/lib/jvm/*jdk; do :; done; declare -p JAVA_HOME
[12:13:32] <shbot> emanuele6: declare -- JAVA_HOME="/usr/lib/jvm/java-20-openjdk"
[12:14:04] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[12:14:06] <emanuele6> and it will set to the highest version number in case there are multiple versions
[12:14:41] <pun> mkdir -p /usr/lib/jvm/java-{10..20}-openjdk; won't this create all those empty folders ?
[12:15:11] <emanuele6> i created those to show the loop was working
[12:15:55] <pun> ohh
[12:16:25] *** Joins: gg (~gg@2a01:e0a:819:1510:b4fb:2148:37d5:aabb)
[12:17:04] <emanuele6> in bash you can write the same thing as      : /usr/lib/jvm/*jdk
[12:17:19] <emanuele6> followed on the next line by    export JAVA_HOME=$_
[12:17:38] <emanuele6> but that has a slightly different behaviour if there are no matches
[12:19:18] *** Joins: zostj (~rue@1-162-41-131.dynamic-ip.hinet.net)
[12:19:25] <emanuele6> oh, well, not really
[12:19:27] <emanuele6> nevermind
[12:19:45] <emanuele6> same behaviour unless you set nullglob
[12:20:07] <emanuele6> so either:    for JAVA_HOME in /usr/lib/jvm/*jdk; do :; done; export JAVA_HOME
[12:20:15] *** Parts: gg (~gg@2a01:e0a:819:1510:b4fb:2148:37d5:aabb) (Leaving)
[12:20:18] <emanuele6> or:     : /usr/lib/jvm/*jdk; export JAVA_HOME=$_
[12:20:27] <emanuele6> note that the ladder only works in bash
[12:20:36] <emanuele6> s/ladder/latter/
[12:21:09] <kurahaupo_> # mkdir -p /usr/lib/jvm/java-{7..12}-openjdk; for JAVA_HOME in /usr/lib/jvm/*jdk; do :; done; declare -p JAVA_HOME
[12:21:10] <shbot> kurahaupo_: declare -- JAVA_HOME="/usr/lib/jvm/java-9-openjdk"
[12:21:20] <emanuele6> yeah, alphabetical order
[12:21:26] <kurahaupo_> ^^^ lexicographical sort order
[12:21:30] <emanuele6> yes
[12:22:03] <emanuele6> so just use `break' since there is no benefit on using the last match anyway
[12:23:01] <emanuele6> unfortunate that i used {10..20} and didn't realise the problem
[12:29:48] *** Quits: ofm (~MetalMonk@user/ofm) (Quit: OM)
[12:32:57] *** Quits: bodiccea_ (~bodiccea@user/bodiccea) (Read error: Connection reset by peer)
[12:35:06] *** Joins: jinsun (~quassel@user/jinsun)
[12:35:43] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[12:39:57] *** Joins: mozgalom (~mozgalom@194.144.47.113)
[12:40:46] *** Quits: arinov_ (~arinov@213.194.126.155) (Ping timeout: 245 seconds)
[12:41:53] *** Joins: vjipac (~vjipac@user/vjipac)
[12:42:48] <vjipac> hey, how do i put colors on the output of a script?
[12:44:36] *** Quits: uuidNuniq (~weechat@146.56.136.247) (Remote host closed the connection)
[12:44:39] <kurahaupo_> vjipac: A terminal has a "current colour" that's used for all subsequent output, and which can changed by escape sequences
[12:44:49] <nvz> vjipac: using escape codes or tput
[12:44:51] *** Joins: uuidNuniq (~weechat@146.56.136.247)
[12:45:14] <kurahaupo_> vjipac: So you just arrange for the appropriate colour codes to be inserted into the output stream at the appropriate points
[12:45:26] <nvz> it however is dependant on the terminal in use, and you aren't necessarily in control of if color can be shown or which color will be shown
[12:46:34] <vjipac> kurahaupo_: can i use escape sequence with printf ??
[12:46:58] <nvz> https://gist.github.com/dtmilano/4055d6df5b6e4ea87c5a72dc2d604193
[12:47:04] <kurahaupo_> vjipac: Yes, but tput is preferred
[12:48:11] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[12:48:47] *** Joins: stonkey (~stonkey@user/stonkey)
[12:48:54] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[12:49:03] *** Joins: ayustae (Thunderbir@gateway/vpn/protonvpn/ayustae)
[12:49:19] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[12:49:33] <vjipac> nvz: thanks, it seems to work...
[12:49:54] *** Joins: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[12:49:56] <kurahaupo_> vjipac: I would tend to write shell functions to set logical attributes like "error message" or "prompt" or "default value".
[12:50:29] <nvz> yeah, just keep in mind as I said not all terminals show color and most that do have configurable palette
[12:50:59] <vjipac> kurahaupo_: that went over my head though.. i am new to scripting...
[12:51:02] *** Quits: xx (~xx@user/xx) (Ping timeout: 260 seconds)
[12:51:04] <kurahaupo_> aaargh Â« for f in $(seqâ€¦) Â»
[12:51:57] *** Quits: carl- (~carl-@185.103.188.130) (Ping timeout: 240 seconds)
[12:52:38] <vjipac> nvz: that means if i have like 3 terminal emulators with 3 different color palette. then each of them will show colors differently ???
[12:53:04] <kurahaupo_> vjipac: if you copy that script please use shellcheck and fix its issues before making your own changes
[12:53:24] <kurahaupo_> vjipac: Potentially, yes the colours could be different
[12:53:25] <nvz> vjipac: yes, you can customize the palette
[12:53:43] <vjipac> kurahaupo_: ok, i'll check for issues..
[12:53:51] <nvz> I've done it both in x-terminal-emulators and tty consoles
[12:54:13] <nvz> setterm -inversescreen for example swaps the bg and fg colors of a tty for example
[12:54:28] *** Joins: adac (~adac@31.207.101.82)
[12:55:00] <vjipac> nvz: how do i change color palette of tty consoles. like all of the colors..
[12:55:22] <kurahaupo_> nvz: !check
[12:55:29] <kurahaupo_> !check
[12:55:30] <checkbot> nvz: Line 49: Don't use variables in the printf format string. Use printf '..%s..' "$foo". Line 9: Double quote to prevent globbing and word splitting. Line 49: Double quote to prevent globbing and word splitting. See https://shellcheck.net/?id=cb83530 for all 4 issues.
[12:56:17] <kurahaupo_> nvz: Is that your own script or just one you found?
[12:57:18] <nvz> kurahaupo_: its just one I found, my github is https://github.com/enveezee
[13:00:15] *** Joins: fedenix (~fedenix@gateway/tor-sasl/fedenix)
[13:01:02] *** Quits: rgrinberg (~textual@2806:265:5401:9431:c06f:a951:3576:df5c) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[13:01:57] *** Quits: MarchHare (~MarchHare@2602:47:161:8200::a57) (Ping timeout: 240 seconds)
[13:02:03] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:02:36] *** Quits: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[13:06:21] *** Quits: bodiccea (~bodiccea@user/bodiccea) (Ping timeout: 250 seconds)
[13:07:26] *** Quits: uuidNuniq (~weechat@146.56.136.247) (Remote host closed the connection)
[13:07:32] *** Joins: bodiccea (~bodiccea@user/bodiccea)
[13:07:38] *** Joins: uuidNuniq (~weechat@146.56.136.247)
[13:14:45] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Read error: Connection reset by peer)
[13:16:32] *** Joins: lsrtl_ (~lsrtl@user/lsrtl)
[13:32:01] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[13:33:02] *** Quits: pun (~weechat@user/pun) (Quit: pun)
[13:33:16] *** Quits: bud (~bud@user/bud) (Ping timeout: 245 seconds)
[13:33:49] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[13:41:03] *** Joins: n4dir (~user@i577BC838.versanet.de)
[13:42:37] *** Joins: legola (~legola@46.235.101.65)
[13:43:17] *** Joins: tobybl (~tobybl@213.31.132.151)
[13:47:54] *** Joins: bud (~bud@user/bud)
[13:49:51] *** Quits: quazimodo (~quazimodo@n1-41-223-188.bla2.nsw.optusnet.com.au) (Ping timeout: 256 seconds)
[13:54:48] *** Joins: Lord_of_Life_ (~Lord@user/lord-of-life/x-2819915)
[13:55:01] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[13:56:07] *** Lord_of_Life_ is now known as Lord_of_Life
[13:57:30] *** Quits: zostj (~rue@1-162-41-131.dynamic-ip.hinet.net) (Quit: WeeChat 3.4)
[13:59:05] *** Joins: vysn (~vysn@user/vysn)
[13:59:42] *** Joins: zostj (~rue@1-162-41-131.dynamic-ip.hinet.net)
[14:00:11] *** Joins: furrymcgee (~devuan@cgn-213-196-210-78.nc.de)
[14:01:28] <vjipac> kurahaupo_ nvz https://0x0.st/orIK.png how does it look?? did this with awk..
[14:01:32] *** Quits: sinaowolabi (~SinaOwola@160.152.36.12) (Ping timeout: 240 seconds)
[14:02:21] *** Quits: sinaowolabi_ (~SinaOwola@160.152.36.12) (Ping timeout: 268 seconds)
[14:08:21] *** Joins: arinov_ (~arinov@178.240.175.124)
[14:10:49] *** Quits: adac (~adac@31.207.101.82) (Ping timeout: 256 seconds)
[14:10:52] <nvz> vjipac: heh
[14:11:57] <vjipac> nvz: i couldn't find any other simple way to do it with awk..
[14:12:11] *** Joins: earnestly (~earnest@user/earnestly)
[14:12:18] <nvz> vjipac: I find that funny cause I still do that kinda stuff at times.. but you realize everything all those commands do... cut, tr, grep, sed.. you can do with awk alone
[14:13:09] <nvz> I find those simpler single purpose commands easier too. I know very little awk but the day I realized I could use it to remove duplicate lines without sorting the input.. I realized how insanely powerful awk is
[14:13:40] <vjipac> nvz: yes i know.. but i dont undrestand the awk language that much , right now. so i'm also using those commands.
[14:14:05] <vjipac> but someday i'll do everything with awk *-*
[14:14:21] *** Joins: sinaowolabi_ (~SinaOwola@160.152.140.189)
[14:14:40] *** Joins: sinaowolabi (~SinaOwola@160.152.140.189)
[14:14:50] <nvz> vjipac: what is it you've made there?
[14:15:58] <vjipac> it's a script that shows youtube search results and plays videos. i dont hava pulseaudio so i can't play youtube videos on firefox. so i made a script to do that.
[14:16:16] <nvz> I don't suppose you're familiar with mps-youtube
[14:16:17] *** Joins: lalitmee__ (~lalitmee@180.94.32.14)
[14:16:34] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[14:16:37] <nvz> https://github.com/mps-youtube/mps-youtube
[14:16:56] <nvz> fully featured python based youtube client that has a text curses interface and can call any player you want
[14:17:10] <nvz> a pip install away
[14:17:49] <nvz> vjipac: what did you use to do the query/searching?
[14:18:22] *** Joins: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net)
[14:18:45] *** Quits: lalitmee_ (~lalitmee@180.94.32.85) (Ping timeout: 256 seconds)
[14:18:53] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[14:19:02] <vjipac> nvz: i didn't know that... but i used to use invidious. so i just scraped one of the instances and made it work for me *-*.. just learning bash , so i thought it would be a great experiment.
[14:19:29] <nvz> yeah its some nice stuff but you basically just implemented a fraction of mps-youtube in bash
[14:19:49] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[14:20:43] <vjipac> nvz: just thinking. if i could implement all of mps-youtubes features on bash xD..
[14:21:33] <nvz> I dont think youtube has any friendly interface you could use to do all it does with bash's limited ability to parse markup and such
[14:22:19] <vjipac> yah.. that is a drawback..
[14:24:39] <vjipac> nvz: hey would you take a look at my script?? if you have time.. its on https://github.com/jiploading/wt-sh
[14:29:03] *** Joins: janko (~gian@2001:ce8:132:f834:3445:3295:5e24:40e1)
[14:30:33] <nvz> vjipac: this is a crappy script I wrote ages ago to dumb down the plethora of features of ffmpeg... you may find it interesting because it has a rather shorthand way of checking for environment vars and assigning defaults if not found
[14:30:45] <nvz> https://github.com/enveezee/dirt/blob/main/transcode
[14:32:49] <janko> If a I am calling a script via a keybind using a window manager, is there any way to pass numerical arguments? say I want to invoke "command x", could I make it so I can specify the x?
[14:33:34] <nvz> janko: yes, a number of ways I suppose, the easiest would be for the script to call a dialog tool to ask for the input  whiptail, dailog, zenity, yad, etc.. are such tools
[14:34:03] *** Joins: seninha (~seninha@user/seninha)
[14:34:17] <vjipac> nvz: thanks..
[14:34:42] <janko> :nvz oh great thanks! :)
[14:34:45] <nvz> vjipac: anyhow, you may want to learn another language as bash isnt the best for things like parsing markup
[14:35:28] <vjipac> nvz: what should i learn then?
[14:36:22] <nvz> well depends on your tastes I suppose, I go with python, but some folk prefer perl, pascal, php, nodejs, etc..
[14:36:54] <nvz> bash just so happens to have a decent scripting language for shell tasks, but its not very well suited for actual programming
[14:37:45] <vjipac> nvz: i think python would be better.. as it is used on tons of things. i'll go with python...
[14:37:45] <nvz> python and perl are used just as commonly as bash in modern linux systems for all sorts of things
[14:38:59] *** Quits: janko (~gian@2001:ce8:132:f834:3445:3295:5e24:40e1) (Quit: WeeChat 2.8)
[14:39:33] <vjipac> although i don't have any idea how python works.
[14:39:37] *** Quits: arinov_ (~arinov@178.240.175.124) (Ping timeout: 240 seconds)
[14:40:09] <nvz> vjipac: well one problem you'd likely have with python I can see from your bash coding is that python is whitespace sensitive
[14:40:22] <nvz> your indentation on that bash script isn't the greatest
[14:41:08] <vjipac> nvz: what is "whitespace sensitive" ??
[14:41:23] <nvz> its fairly common to use 4 spaces in place of tabs.. and most any editor a programmer should be using is able to just put in those 4 spaces when you hit tab rather than an actual tab character
[14:41:59] *** Joins: The_Loko (~The_Loko@79.116.24.80)
[14:42:03] <nvz> vjipac: whitespace sensitive means the interpreter actually interprets things like spaces and tabs.. and in python's case it uses them to form blocks of code rather than using {} like many other languages do
[14:42:50] <nvz> vjipac: in order for python to understand where blocks begin and end the whitespace MUST be consistent.. you cant have a line with a tab char and another line with the same number of spaces to make it APPEAR to be in the same column
[14:43:54] *** Joins: zeden (~zeden@user/zeden)
[14:44:05] <vjipac> nvz: ohh.. i get it now.. that means one tab and 4 spaces are not same in python.. right??
[14:44:43] <nvz> not only that but the indentation tells the interpreter where the blocks in code are.. there are no function foo { code goes here } type things
[14:45:03] *** Joins: grawity (~grawity@star.nullroute.lt)
[14:45:25] <koollman> vjipac: they are not the same anywhere else either. but it matters more in python, right :)
[14:45:38] *** Joins: miique (~miique@181.46.139.166)
[14:46:25] <grawity> what's a good way to get the process that's using most CPU? I know `top` has a batch mode but I'm unable to figure it out somehow
[14:46:51] <vjipac> nvz: ooookkkk... i ran into another problem.. i typed python in terminal and it gave me a prompt.. but i cant leave the prompt. ctrl+c gives nothing... how do i get out of it??
[14:47:08] <koollman> vjipac: ctrl+d
[14:47:19] <grawity> most interactive shells like that will exit at ctrl+d (like bash itself)
[14:47:34] <vjipac> koollman: thanksss...
[14:47:43] <grawity> (if you're halfway through writing a line, ctrl+c to cancel it and *then* ctrl+d)
[14:48:03] <vjipac> i think i mis mentioned nvz on my previous msg.. sorry
[14:48:22] <vjipac> grawity: *-* :)
[14:48:40] <nvz> vjipac: if you are interested in foolin around at some point I started using vscode last year, its a decent programming environment and has a feature called live share where multiple people can share the same editor and chat
[14:49:11] <nvz> I go back to work Wed, but I sit around bored enough often enough :P  Been off work almost a week now for the holidays
[14:49:29] <vjipac> nvz: is vscode available on linux?
[14:49:43] <nvz> vjipac: absolutely in fact you need not even install it to collaborate
[14:50:03] <nvz> if I hit the live share button it gives me a link which I can give and the whole programming environment can load right in your browser even
[14:50:20] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Ping timeout: 252 seconds)
[14:50:23] <nvz> its mostly coded in javascript or well I guess technically its typescript but w/e
[14:51:10] <vjipac> nvz: i have a browser so.. yah i think i can do it  ...
[14:51:13] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[14:51:41] <lopid> grawity, maybe: ps -eo pcpu,pid | sort -r | awk 'NR==1{print $2;exit}'
[14:52:05] <nvz> vjipac: do be able to actually edit in liveshare you need some sort of microsoft account... hotmail, skype, github..
[14:52:15] <koollman> grawity: if you have gnu ps, ps -A --sort=pcpu | tail -n 1  (and you probably want to specify some columns, with -o pid, for example)
[14:52:17] <vjipac> i have github
[14:52:53] <nvz> vjipac: its 6:30a here and I been up most the day.. so I'm groggy of course, but I can send you a live share instance link so you can see what its like
[14:53:33] <nvz> vjipac: just follow the link I sent you in a javascript capable browser and login with your github account and you can start coding in my vscode workspace right now
[14:54:00] <vjipac> nvz: ok
[14:54:33] <nvz> it may take a min to load as its basically loading an entire integrated development application in your browser
[14:55:11] <nvz> it has a lot of nice features I'd used many others before I tried this and even though I been a microsoft hater on Debian for about 2 decades I'm rather pleased with this
[14:55:19] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[14:55:21] <lopid> indeed, ps --sort=-pcpu -eo pid= | head -1
[14:55:43] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[14:55:52] <vjipac> nvz: i'm good.
[14:58:43] <nvz> I'd dare say its one of the most actively developed FOSS development tools out there with a ton of plugins. I just suggested it cause not only would using an actual development environment help you code more efficiently, but with something like liveshare you could collaborate in real time with people to get help
[14:59:07] <nvz> its super cool to me that you can do so with someone who need not even have the program installed
[15:00:13] <vjipac> nvz: i've never used vscode but it sounds like awsome...
[15:01:25] <nvz> I not only hated the complexity of IDEs but as I've said I hated microsoft for a long time.. and I'm pretty impressed with it. My main complaint thus far is that their packaging for linux is rather atrocious.. I tried to get them to resolve this but didnt get enough community upvotes for them to address the issues
[15:03:50] <nvz> you can also do stuff like I run my irc client and bot on a vps, I can ssh into my vps with vscode and edit my bot's plugins remotely right from inside my editor and pull and commit on github
[15:03:57] *** Quits: sinaowolabi_ (~SinaOwola@160.152.140.189) (Ping timeout: 240 seconds)
[15:06:13] <grawity> hmm yeah, pcpu in ps will probably work... enough to tell the cronjob whether it needs to whack strongswan for eating 100% cpu again
[15:06:18] *** Joins: MenschZwoNull (~MenschZwo@p200300c8573fa200b5e9479b31916d2e.dip0.t-ipconnect.de)
[15:09:10] <vjipac> nvz: hey im in that link .. what do i do now?
[15:09:12] <nvz> grawity: there is something called and (auto nice daemon) which monitors processes cpu load
[15:09:31] <koollman> grawity: you probably should look at monit. It makes that kind of automation easy
[15:09:31] <nvz> vjipac: it should ask you to sign in
[15:10:06] <nvz> vjipac: once its loaded and you either sign in ot decline to sign in, I should get a dialog asking if you can join my session
[15:10:19] <nvz> vjipac: if you dont sign in to a microsoft account you would only have read-only access
[15:10:57] <vjipac> nvz: i signd in...
[15:11:10] <nvz> vjipac: I just figured while I was sitting here somewhat coherent doing nothing, I could let you join my session and you could see what vscode looks like and fool with it a bit without having to install it
[15:13:22] <nvz> vjipac: yeah after you choose anonymous or sign in it should say joining live session and show me a dialog on my end but I didnt get any requests other than the one I just tested myself as anonymous in my browser
[15:13:29] *** Joins: cdown (~cdown@163.114.131.1)
[15:16:37] *** Quits: andril (~andril@c-66-229-99-96.hsd1.fl.comcast.net) (Ping timeout: 240 seconds)
[15:18:37] *** Joins: lavaball (aj@31.204.155.215)
[15:20:58] *** Quits: vysn (~vysn@user/vysn) (Read error: Connection reset by peer)
[15:23:31] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[15:31:15] *** Joins: thiras (~thiras@user/thiras)
[15:33:16] *** Joins: rufito (~phil@181.42.53.33)
[15:48:19] *** Joins: sinaowolabi_ (~SinaOwola@160.152.140.189)
[15:52:19] <bud> microsoft bash 2000
[15:56:46] *** Quits: gr33n7007h (~gr33n7007@user/gr33n7007h) (Quit: WeeChat 3.4)
[15:57:30] *** Quits: furrymcgee (~devuan@cgn-213-196-210-78.nc.de) (Remote host closed the connection)
[16:00:35] *** Joins: gr33n7007h (~gr33n7007@user/gr33n7007h)
[16:06:41] *** Joins: adac (~adac@31.207.101.82)
[16:08:41] *** Quits: sinaowolabi (~SinaOwola@160.152.140.189) (Ping timeout: 256 seconds)
[16:08:47] *** Quits: tangy (~tangy@user/tangy) (Remote host closed the connection)
[16:13:22] *** Joins: thevishy (~Nishant@2405:201:f005:c007:1d22:93e8:b240:6332)
[16:20:57] *** Joins: pagios (~pagios@life.is-a.beauty)
[16:21:59] <pagios> hello, i  have a file that  has a certain pattern,  i am greeing on smbPassword:      and want to get that line and the line+5 underneath it , how can i easily do that  tried grep -A5 it takes lineX,2,3,4,5 , i need only LineX and Line 5 to be printed out
[16:28:13] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[16:29:28] *** Joins: martinus__ (~martin@2.56.202.77.rev.sfr.net)
[16:30:02] *** Quits: n4dir (~user@i577BC838.versanet.de) (Remote host closed the connection)
[16:30:41] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[16:34:11] *** Joins: shirc-fagci-0357 (~shirc-fag@l37-193-172-29.novotelecom.ru)
[16:35:04] *** Quits: shirc-fagci-0357 (~shirc-fag@l37-193-172-29.novotelecom.ru) (Remote host closed the connection)
[16:35:56] *** Quits: igemnace (~ian@user/igemnace) (Quit: WeeChat 3.4)
[16:40:38] *** Joins: shirc-fagci-9477 (~shirc-fag@l37-193-172-29.novotelecom.ru)
[16:40:54] *** Quits: infernix (nix@2a02:22a0:bbb1:d500::2) (Quit: ZNC - http://znc.sourceforge.net)
[16:41:23] *** Joins: sinaowolabi (~SinaOwola@41.58.243.117)
[16:45:09] *** Quits: shirc-fagci-9477 (~shirc-fag@l37-193-172-29.novotelecom.ru) (Ping timeout: 268 seconds)
[16:48:08] *** Joins: Kobboi (~christoph@2a02:a03f:847d:9b00:54be:b4af:d33d:ea0d)
[16:49:40] *** Joins: shirc-fagci-6056 (~shirc-fag@l37-193-172-29.novotelecom.ru)
[16:51:12] *** Joins: infernix (nix@spirit.infernix.net)
[16:51:53] <Kobboi> In the command, container_name=$(cat /dev/urandom | tr -dc 'a-zA-Z' | fold -w 32 | head -n 1)"  ->  1) cat, tr and fold are still running and passing data to each other 2) head is nowhere to be seen 3) the script calling this command is not getting past this statement. I see it happen on some Jenkins slave, but cannot reproduce it locally, nor on the slave. Any ideas?
[16:52:20] <Kobboi> I confirmed 1) by checking the /proc/$PID/fd/* entries
[16:53:37] <kurahaupo_> 3# stop(){ break;}; for f in a b ; do echo "$f"; stop ; done
[16:53:38] <shbot> kurahaupo_: a
[16:53:50] <kurahaupo_> 40# stop(){ break;}; for f in a b ; do echo "$f"; stop ; done
[16:54:00] *** kurahaupo_ is now known as kurahaupo
[16:54:13] <kurahaupo> 4# stop(){ break;}; for f in a b ; do echo "$f"; stop ; done
[16:54:19] <shbot> kurahaupo: a
[16:54:19] <shbot> kurahaupo: bash: break: only meaningful in a `for', `while', or `until' loop
[16:54:19] <shbot> kurahaupo: etc... ( http://ix.io/3JKs )
[16:54:56] *** Quits: shirc-fagci-6056 (~shirc-fag@l37-193-172-29.novotelecom.ru) (Remote host closed the connection)
[16:55:37] *** Quits: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net) (Ping timeout: 240 seconds)
[16:55:48] *** Joins: MrBlue (~MrBlue@24.114.84.33)
[16:56:33] * kurahaupo cusses Chet for removing a useful feature
[16:57:30] *** Joins: XV8 (~XV8@2601:5cb:c001:50:bd72:41d1:6a0f:1d3a)
[17:00:45] *** Joins: n4dir (~user@i577BC838.versanet.de)
[17:01:35] <earnestly> It is odd to assume that a function will never be used in a for, while or until loop
[17:01:45] *** Quits: zeden (~zeden@user/zeden) (Quit: WeeChat 3.4)
[17:02:30] <kurahaupo> I actually discovered this removal the hard way - and I had to refactor a bunch of code as a result
[17:02:34] *** Joins: semeion (~semeion@user/semeion)
[17:02:44] *** Quits: stonkey (~stonkey@user/stonkey) (Remote host closed the connection)
[17:02:46] <earnestly> # s() { while :; do break 2; done; }; for a in b c; do echo "$a"; s; done
[17:02:47] <shbot> earnestly: b
[17:02:47] <shbot> earnestly: c
[17:03:04] <kurahaupo> ooof!
[17:03:05] *** semeion is now known as mnemonic
[17:03:18] <kurahaupo> earnestly: That's â€¦ CRAZY!
[17:03:22] <earnestly> It is?
[17:03:27] <earnestly> It seems like s is doing nothing
[17:03:43] <earnestly> Well, break 2 is working clearly
[17:03:57] <earnestly> Which doesn't make much sense
[17:04:23] <earnestly> If n is greater than the number of enclosing loops,
[17:04:25] <earnestly>               all enclosing loops are exited.
[17:04:25] <kurahaupo> oh, it doesn't break the outer loop
[17:04:40] *** Joins: gabriele (~gabriele@user/gabriele)
[17:04:45] <earnestly> Yeah, it appears not to
[17:05:01] <Blondie101010> indeed...  it's in a different scope
[17:05:25] <earnestly> bash puts the cope into scope
[17:06:01] *** Joins: arinov (~arinov@213.194.126.155)
[17:06:08] *** Joins: lockywolf (~lockywolf@vultr-seoul-openbsd.lockywolf.net)
[17:06:24] <kurahaupo> 3# s() { while :; do break 2; done; }; for a in b c; do echo "$a"; s; done
[17:06:25] <shbot> kurahaupo: b
[17:06:41] <kurahaupo> see it breaks the outer loop there
[17:07:17] <earnestly> It appears like functions behave more like macros in 3
[17:07:23] <earnestly> kurahaupo: You could probably use an alias
[17:07:26] *** Joins: shirc-fagci-0063 (~shirc-fag@l37-193-172-29.novotelecom.ru)
[17:07:37] *** Quits: shirc-fagci-0063 (~shirc-fag@l37-193-172-29.novotelecom.ru) (Remote host closed the connection)
[17:07:38] <kurahaupo> Nah it's just that everything is dynamically scoped
[17:07:42] <earnestly> To bypass the 'break' check that is
[17:08:02] *** Joins: B4re (~l4yer@178.239.168.223)
[17:08:02] <earnestly> kurahaupo: So in your function alias foo=break, then use foo.  It might be enough to trick the 'only in for loops' check
[17:08:04] <kurahaupo> There was no check, that's why it worked
[17:08:31] <kurahaupo> No, aliases substitute at parsing time
[17:08:33] <earnestly> I'd try that in shbot but single-line aliases are still a mystery to me
[17:09:06] *** Quits: l4yer (~l4yer@178.239.168.223) (Ping timeout: 260 seconds)
[17:09:09] <earnestly> # alias f=break; s() f; for a in b c; do echo "$a"; s; done
[17:09:10] <shbot> earnestly: bash: syntax error near unexpected token `f'
[17:09:13] <earnestly> Yeah
[17:09:28] <earnestly> # alias f=break; s() { f; }; for a in b c; do echo "$a"; s; done
[17:09:29] <kurahaupo> alias foo=bar ; eval "foo()(echo zot)"; type bar
[17:09:35] <shbot> earnestly: b
[17:09:35] <shbot> earnestly: bash: f: command not found
[17:09:35] <shbot> earnestly: etc... ( http://ix.io/3JKA )
[17:09:40] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[17:09:43] <earnestly> lol
[17:09:54] <kurahaupo> # alias foo=bar ; eval "foo()(echo zot)"; type bar
[17:10:00] <shbot> kurahaupo: bar is a function
[17:10:00] <shbot> kurahaupo: bar ()
[17:10:00] <shbot> kurahaupo: etc... ( http://ix.io/3JKB )
[17:10:32] <earnestly> kurahaupo: But yes, I use aliases to bypass POSIX sh requirements such as 'exec' not being allowed as a function
[17:10:48] <earnestly> kurahaupo: E.g. https://0x0.st/-kDb.sh
[17:11:01] *** Joins: shirc-fagci-4947 (~shirc-fag@l37-193-172-29.novotelecom.ru)
[17:11:54] *** Joins: kill (~killown@user/killown)
[17:13:12] * earnestly removes unused warn function
[17:13:58] <kurahaupo> earnestly: I would turn that inside out, and have two definitions for the term function - one that invokes xterm, and the other that does exec
[17:14:24] <earnestly> kurahaupo: I did that but like this
[17:14:41] <earnestly> It's just a pointless limitation of POSIX sh
[17:15:33] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:a892:5f2f:3801:1e1e)
[17:15:33] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:a892:5f2f:3801:1e1e) (Changing host)
[17:15:33] *** Joins: skapata (~Skapata@user/skapata)
[17:16:39] <kurahaupo> if ((some_condition)) ; then term() { exec "${TERMINAL:-xterm}" -e "$*" ; } ; else term(){ exec "$@" ; } ; fi
[17:17:49] <earnestly> Yeah, that's what I did before.  This requires less
[17:18:09] <earnestly> I use function redefintions quite a lot to 'specialise' various things
[17:19:07] <earnestly> Which oddly came from the idea of creating 'debug' (asserts) code in C that would be completely removed in non-debug builds
[17:19:32] *** Quits: n4dir (~user@i577BC838.versanet.de) (Remote host closed the connection)
[17:19:45] *** Quits: fatal (~0x00@user/fatal) (Ping timeout: 276 seconds)
[17:20:28] <earnestly> kurahaupo: The only difference is I wanted to call it exec() instead of term().  The latter function only exists because aliases ... hmm
[17:20:37] *** Quits: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com) (Quit: csmiga)
[17:20:53] <earnestly> I don't need to use that function, I could just do alias exec='"${TE...} -e '
[17:21:41] *** Joins: dfdx (~F@user/dfdx)
[17:22:03] <earnestly> Nice it works
[17:23:39] *** Joins: fatal (~0x00@user/fatal)
[17:24:01] <kurahaupo> I guess that's because POSIX wants to allow a shell to treat special builtins and keywords as one syntactic category
[17:25:38] <earnestly> It seems arbitrary to me, particularly because alias works.  You are allowed to overload many other builtins, only exec (and I think one other, I forget) disallow it.  It's the same with not allowing - in function names which is bothersome because many PATH commands contain -
[17:25:47] <earnestly> But as usual, aliases work for those
[17:26:27] *** Quits: fatal (~0x00@user/fatal) (Remote host closed the connection)
[17:26:32] *** Joins: igemnace (~ian@user/igemnace)
[17:26:39] *** Joins: fatal (~0x00@user/fatal)
[17:31:21] *** Quits: adac (~adac@31.207.101.82) (Ping timeout: 250 seconds)
[17:33:04] *** Quits: vjipac (~vjipac@user/vjipac) (Quit: leaving)
[17:35:47] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[17:37:17] *** Quits: shirc-fagci-4947 (~shirc-fag@l37-193-172-29.novotelecom.ru) (Quit: shirc-fagci-4947)
[17:37:25] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[17:38:18] *** Joins: meator (~meator@user/meator)
[17:46:36] *** Quits: crabbedhaloablut (~crabbedha@user/crabbedhaloablut) (Remote host closed the connection)
[17:46:53] *** Joins: crabbedhaloablut (~crabbedha@user/crabbedhaloablut)
[17:50:02] *** Quits: lavaball (aj@31.204.155.215) (Ping timeout: 240 seconds)
[17:53:02] *** Quits: jinsun (~quassel@user/jinsun) (Ping timeout: 240 seconds)
[17:54:32] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Remote host closed the connection)
[17:56:32] *** Joins: furrymcgee (~devuan@cgn-213-196-210-78.nc.de)
[17:56:50] *** Quits: pikapika (~pikapika_@pika.powered.by.lunarbnc.net) (Quit: Free ZNC ~ Powered by LunarBNC: https://LunarBNC.net)
[17:57:03] *** Joins: pikapika (~pikapika_@pika.powered.by.lunarbnc.net)
[17:57:38] *** Quits: tamz[m] (~tamzmatri@2001:470:69fc:105::9d6d) (Quit: Client limit exceeded: 20000)
[17:58:07] *** Quits: MeowcatWoofWoofF (~rosefoxma@2001:470:69fc:105::c74e) (Quit: Client limit exceeded: 20000)
[17:58:08] *** Quits: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5) (Quit: Client limit exceeded: 20000)
[17:58:08] *** Quits: anak8awan9hs[m] (~M9hsmatri@2001:470:69fc:105::1:15fc) (Quit: Client limit exceeded: 20000)
[17:58:11] *** Quits: elongated_ferret (~enlongate@2001:470:69fc:105::1:43c8) (Quit: Client limit exceeded: 20000)
[17:58:11] *** Quits: memelo[m] (~memelomat@2001:470:69fc:105::1:4348) (Quit: Client limit exceeded: 20000)
[17:58:13] *** Quits: Huy[m] (~huyngoenv@2001:470:69fc:105::dbc7) (Quit: Client limit exceeded: 20000)
[17:58:15] *** Quits: userdocs[m] (~userdocsm@2001:470:69fc:105::1:3b3f) (Quit: Client limit exceeded: 20000)
[17:58:32] *** Quits: mattcen (~mattcen@2001:470:69fc:105::936) (Quit: Client limit exceeded: 20000)
[18:02:04] <kurahaupo> earnestly: forbidding '-' in function names seems insane now, but function names originally shared scope with variable names, and they had to be alphanumeric
[18:02:04] *** Joins: MeowcatWoofWoofF (~rosefoxma@2001:470:69fc:105::c74e)
[18:02:04] *** Joins: memelo[m] (~memelomat@2001:470:69fc:105::1:4348)
[18:02:17] *** Joins: tamz[m] (~tamzmatri@2001:470:69fc:105::9d6d)
[18:02:29] *** Joins: elongated_ferret (~enlongate@2001:470:69fc:105::1:43c8)
[18:02:35] *** Joins: Filohuhum (~dante@gateway/tor-sasl/filohuhum)
[18:02:44] *** Joins: mattcen (~mattcen@2001:470:69fc:105::936)
[18:02:45] *** Joins: giddyup (~rc2dev@177.41.39.124)
[18:02:56] *** Joins: Huy[m] (~huyngoenv@2001:470:69fc:105::dbc7)
[18:03:07] <earnestly> Even that.  They already had the concept of portable path names, if not in name, so why that couldn't be extended to the shell when they created this cowardly spec, idk
[18:03:10] *** Joins: anak8awan9hs[m] (~M9hsmatri@2001:470:69fc:105::1:15fc)
[18:03:12] *** Joins: inkbottle[m] (~inkbottle@2001:470:69fc:105::2ff5)
[18:03:24] <earnestly> i.e. [alnum-._]
[18:03:26] *** Joins: userdocs[m] (~userdocsm@2001:470:69fc:105::1:3b3f)
[18:03:49] <earnestly> "variables can't start with numbers!1".. Why not?  There's no parser issues here, just arbitrary
[18:08:04] *** Quits: giddyup (~rc2dev@177.41.39.124) (Quit: Leaving)
[18:09:08] *** Joins: soren_ (~gcheng@betharealibips03.b.subnet.rcn.com)
[18:10:17] *** Quits: arinov (~arinov@213.194.126.155) (Ping timeout: 240 seconds)
[18:13:52] <soren_> please recommand way to stylize comments/usage output, when do you capitalize,single/double quotes, and backticks around things like referring to script name, arguments, variables/functions, and commands. E.g.: ""pb.sh" from stdin if no arguments provided or if FILE is named '-'."
[18:14:24] <soren_> Is there anything resembling a convention or is remotely common? I just need some consistency
[18:19:13] *** Joins: xx (~xx@user/xx)
[18:20:16] <Camusensei> Hi. 2 questions (assume bash only): I need to execute a remote command. I use printf %q to escape special chars. Should the last $file be quoted or unquoted? Feel free to also address other shortcomings.  d=$(date -d '...'); printf -v file '%q' "$d"; cmd="gzip < $file"; ssh example.com "$cmd" | zcat > $file
[18:20:35] <emanuele6> earnestly: then `1' could be a number and "$(( 1 ))" would be ambiguous
[18:20:39] <emanuele6> err
[18:20:53] <emanuele6> then `1' can be a variable name and "$(( 1 ))" would be ambiguous
[18:21:24] <emanuele6> well, i guess 1 can already be a variable name, nevermind
[18:21:28] <earnestly> Yep
[18:21:37] <emanuele6> but if you allow `-1', you have problems
[18:21:38] <earnestly> Was about to mention positional parameters
[18:21:57] <emanuele6> "$(( -1 ))" is still ambiguous
[18:22:24] <emanuele6> (if you allow `-' in variable names)
[18:22:43] <earnestly> emanuele6: It's the same 'problem' though.  There is only ambiguity because either they don't require $ in math contexts, or they could just declare numbers (like 1) to be numbers in that context
[18:22:55] <earnestly> This isn't a difficult issue
[18:23:29] <emanuele6> well, it is not not required; with and without `$' has a different meaning
[18:23:42] *** Joins: malina (~malina@user/malina)
[18:23:43] <earnestly> Yes, that's a real problem
[18:23:49] *** Quits: infernix (nix@spirit.infernix.net) (Ping timeout: 268 seconds)
[18:23:52] <emanuele6> `$a' is like a macro; `a' is like a function
[18:23:59] <earnestly> To the point where bash's arith context is virtually unusable in a safe manner
[18:24:20] <earnestly> Good luck exposing user input to array lookups, arbitrary code execution hooray
[18:24:32] *** Quits: malina (~malina@user/malina) (Remote host closed the connection)
[18:24:33] <earnestly> I can't believe there aren't bleedingbashlolbbq.com websites about this
[18:24:46] <emanuele6> # read -r RANDOM <<< 'q[$(date>&2)']'
[18:24:52] <shbot> emanuele6: Missing terminating quote, bracket or keyword
[18:25:00] <emanuele6> oops
[18:25:02] <emanuele6> # read -r RANDOM <<< 'q[$(date>&2)]'
[18:25:04] <shbot> emanuele6: Tue Dec 28 14:55:03 UTC 2021
[18:25:06] <earnestly> It's so unbelievably broken
[18:25:06] <emanuele6> :)
[18:25:13] <earnestly> emanuele6: Also test -v
[18:25:29] <emanuele6> yeah, but `test -v' is even worse
[18:25:31] *** Joins: lavaball (~Melissa@p54a4dd9a.dip0.t-ipconnect.de)
[18:27:13] <earnestly> # type expr
[18:27:15] <shbot> earnestly: expr is /bin/expr
[18:27:37] <earnestly> Could be builtin, this is probably better than $((
[18:29:18] *** Quits: MrBlue (~MrBlue@24.114.84.33) (Quit: Leaving)
[18:29:54] <emanuele6> i personally use `!=`/`=' instead of `-eq'/`-ne'/`((==))'/`((!=))' when i can
[18:30:25] *** Quits: cisco87 (~quassel@static.134.4.251.148.clients.your-server.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:30:30] *** Joins: csmiga (~Thunderbi@ec2-52-207-160-196.compute-1.amazonaws.com)
[18:30:41] <emanuele6> and use `[ "$a" -lt "$b" ]' instead of `(( a < b ))'/`[[ a -lt b ]]' (for arbitrary $a/$b)
[18:30:43] *** Joins: cisco87 (~quassel@static.134.4.251.148.clients.your-server.de)
[18:30:44] <earnestly> No I mean if you have to expose user input to $(( then expr is probably better
[18:30:48] <emanuele6> just to avoid arithmetic contexts
[18:30:59] <earnestly> Well, I use [ because POSIX sh
[18:31:17] <emanuele6> earnestly: yeah, i use `[' in bash for user input
[18:31:26] <earnestly> That's pretty dismal
[18:31:42] <emanuele6> well, not user input; stuff like the output of `stat -c'
[18:32:02] <earnestly> (filenames are user input)
[18:32:03] <emanuele6> anything that is not under the control of the script
[18:32:16] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[18:34:34] <emanuele6> i have never had the need to use `expr' to avoid arithmetic contexts
[18:34:46] <emanuele6> but i probably would use `awk' instead
[18:35:07] <emanuele6> afaict, `expr' is filled with syntax that could be injected
[18:35:41] <emanuele6> awk -v a="$a" -v b="$b" 'BEGIN { print (a * b) }'   is safe
[18:35:58] <earnestly> Yeah I end up with awk most times, also because it does floating
[18:36:22] *** Joins: MajorBiscuit (~MajorBisc@62-52-102.netrun.cytanet.com.cy)
[18:36:26] <earnestly> emanuele6: There is trouble with -v and using that in regex, something that environments don't have
[18:36:36] <emanuele6> for example:    `expr "$a" + "$b"'
[18:36:59] <emanuele6> `$a' could be "match" and `$b` a regex
[18:37:29] <earnestly> So I often up with: foo="$userinput" awk '$0 ~ ENVIRON[foo]' and such
[18:37:32] <emanuele6> or `$a' could be "index" and `$b' a list of characters
[18:38:02] <emanuele6> or $a=( $b=)
[18:38:22] <earnestly> I should note where -v can be evaluated as awk code, or regex, but forget to
[18:38:46] <earnestly> emanuele6: The thing that expr has is not being turing complete
[18:38:54] <earnestly> And it cannot execute commands
[18:39:21] <earnestly> I really like the idea of a shell being used to tie together a bunch of total language DSLs
[18:39:23] <emanuele6> earnestly: -v can't be evaluated; you are thinking of    awk '$0 ~ r' r=a
[18:39:36] <earnestly> No it's a problem with regex
[18:39:51] <emanuele6> you can do pretty crazy stuff with awk's ARGV
[18:40:01] <earnestly> And there was some issues besides, I should have documented it
[18:40:24] <emanuele6> you can `delete' values from it to skip a file, you can add values to it to evaluate assignments after the current file, you can add files, etc
[18:41:48] <emanuele6> never used that feature or seen it used (just read it in the spec), but it sounds like it could be nice
[18:41:50] <earnestly> I recall there even being problems with -v and >> writes
[18:42:17] *** Quits: cisco87 (~quassel@static.134.4.251.148.clients.your-server.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[18:42:33] *** Joins: cisco87 (~quassel@static.134.4.251.148.clients.your-server.de)
[18:42:50] *** Quits: kill (~killown@user/killown) (Quit: Leaving)
[18:50:03] *** Joins: zeden (~zeden@user/zeden)
[18:53:10] *** Quits: sinaowolabi_ (~SinaOwola@160.152.140.189) (Ping timeout: 260 seconds)
[18:53:25] *** Quits: sinaowolabi (~SinaOwola@41.58.243.117) (Ping timeout: 268 seconds)
[18:54:11] *** Joins: adac (~adac@31.207.101.82)
[18:54:42] *** Joins: michigan (uid507982@id-507982.ilkley.irccloud.com)
[19:01:01] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[19:04:12] <soren_> does < have any implications if just cat'ing a file or is a good replacement for the external command? shellcheck complains but ': < "$log' is not the same so it looks like i have to ignore it
[19:05:40] *** Joins: libc (~weechat@user/tessio)
[19:09:31] <emanuele6> `: < "$log"' opens with reading permissions "$log" and then closes it (also probably fork()s) not sure why you would want to do it
[19:09:46] <emanuele6> s/do/use/
[19:13:13] *** Joins: drd (~drd@93.55.19.103)
[19:14:10] *** Joins: tirnanog (~tirnanog@user/tirnanog)
[19:14:42] <soren_> shellcheck https://www.shellcheck.net/wiki/SC2188 suggest ': > file' to avoid the error so i thought ': < file' can do the same. So i guess '< file' is fine to replace cat if just printing the contents of file and I should just explicitly ignore this warning?
[19:15:41] *** Quits: meator (~meator@user/meator) (Ping timeout: 256 seconds)
[19:17:22] <llua> < file doesn't behave like cat
[19:19:48] *** Joins: n4dir (~user@i577BC838.versanet.de)
[19:20:40] *** Joins: sublim20 (~sublim20@user/sublim20)
[19:20:52] <soren_> when does it act differently than cat when used to print contents of a file
[19:21:30] <emanuele6> `< file' does not print the contents of a file
[19:21:39] <emanuele6> # echo hello > file; < file
[19:21:40] <shbot> emanuele6: no output
[19:21:43] <emanuele6> # echo hello > file; : < file
[19:21:44] <shbot> emanuele6: no output
[19:21:47] <phy1729> If it does, you're not using bash
[19:21:48] <emanuele6> # echo hello > file; cat file
[19:21:49] <shbot> emanuele6: hello
[19:21:51] <tirnanog> 1) you wrote '< file' rather than 'cat < file' 2) 'cat < file' wouldn't have raised a SC2188 warning which makes it seem like goalpost shifting.
[19:22:08] *** Joins: meator (~meator@user/meator)
[19:23:16] <tirnanog> to answer the question, though, cat < file is somewhat similar to cat file - the main difference being that the shell is charged with opening the file in the former case.
[19:24:00] *** Joins: Xaldafax (~xaldafax@cpe-198-72-160-101.socal.res.rr.com)
[19:24:59] <llua> they are using zsh most likely
[19:27:01] <soren_> llua: oh lmao yea... i'm an idiot
[19:30:54] <emanuele6> shellcheck does not support zsh..
[19:30:57] *** Joins: vicecea (~vicecea@gateway/vpn/pia/vicecea)
[19:32:48] *** Joins: trekkie1701c (~trekkie17@user/trekkie1701c)
[19:32:52] *** Quits: sdu (~doo@185.44.146.214) (Quit: leaving)
[19:33:32] *** Quits: vel (~vel@ec2-52-62-28-79.ap-southeast-2.compute.amazonaws.com) (Ping timeout: 240 seconds)
[19:36:32] <rendar> i have < <( my_fn ... ) in a 'while' case, but i want to execute my_fn2 instead of my_fn in there, under some condition, what is the best way to to do this?
[19:37:07] <llua> the same way you would do so outside of < <( )
[19:37:24] <kurahaupo> rendar: <( if condition ; then my_fn2 ; else my_fn ; fi )
[19:37:40] <rendar> thanks!
[19:37:53] <kurahaupo> rendar: except please lay that out on Multiple lines
[19:38:13] <rendar> <( if [[ "${my_var}" == "hello" ]]; then \
[19:38:25] *** Parts: meator (~meator@user/meator) (Leaving)
[19:38:30] <kurahaupo> no, don't put \ there
[19:38:47] <rendar> huh? how can i lay that out on multiple lines then?
[19:38:48] <welder> is it possible to seek back and forth when file is plugged like "command < file" ?
[19:39:10] <kurahaupo> rendar: The ( and ) don't have to be on one line
[19:39:24] <rendar> i see
[19:39:39] <kurahaupo> just put line breaks the same as you would if it weren't inside <()
[19:39:50] <rendar> ok
[19:40:13] *** Joins: lsrtl__ (~lsrtl@user/lsrtl)
[19:40:40] *** Joins: vel (~vel@ec2-52-62-28-79.ap-southeast-2.compute.amazonaws.com)
[19:40:46] <kurahaupo> welder: If it's a seekable file then yes, command can use the lseek() syscall
[19:40:57] *** Quits: lsrtl_ (~lsrtl@user/lsrtl) (Ping timeout: 240 seconds)
[19:42:52] <Camusensei> I'd have said no
[19:43:04] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[19:44:17] *** Joins: legola (~legola@46.235.101.65)
[19:44:21] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[19:45:10] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[19:45:17] *** Quits: srwm^ (~srwm@207.5.54.6) (Remote host closed the connection)
[19:45:44] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Max SendQ exceeded)
[19:45:48] *** Joins: legola (~legola@46.235.101.65)
[19:46:11] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[19:49:58] *** Quits: furrymcgee (~devuan@cgn-213-196-210-78.nc.de) (Quit: leaving)
[19:50:15] *** Quits: legola (~legola@46.235.101.65) (Ping timeout: 256 seconds)
[19:52:03] *** Quits: esselfe (~steph@user/esselfe) (Quit: brb)
[19:52:33] *** Joins: esselfe (~steph@user/esselfe)
[19:52:54] *** Joins: Thanatermesis (~Thanaterm@191.92.148.122)
[19:53:12] *** Joins: legola (~legola@46.235.101.65)
[19:54:57] *** Joins: bn_work (uid268505@id-268505.uxbridge.irccloud.com)
[20:02:30] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[20:04:17] *** Quits: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys) (Ping timeout: 240 seconds)
[20:05:30] *** Quits: Filohuhum (~dante@gateway/tor-sasl/filohuhum) (Ping timeout: 276 seconds)
[20:06:39] *** Joins: jonakeys (jonathan@gateway/vpn/airvpn/jonakeys)
[20:07:15] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 256 seconds)
[20:07:42] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[20:09:58] *** Joins: user217_ (~andrii@68.183.215.143)
[20:10:41] *** Quits: trekkie1701c (~trekkie17@user/trekkie1701c) (Quit: :P)
[20:10:42] *** Quits: fatal (~0x00@user/fatal) (Ping timeout: 276 seconds)
[20:12:12] *** Joins: fazz234234367 (~fazz23423@c-73-235-104-195.hsd1.ca.comcast.net)
[20:12:41] *** Joins: joshu_ (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[20:12:57] *** Joins: earendel (uid498179@user/earendel)
[20:13:16] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[20:14:41] *** Joins: legola (~legola@46.235.101.65)
[20:15:22] *** Quits: joshu_ (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Client Quit)
[20:16:17] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Ping timeout: 240 seconds)
[20:16:55] *** Joins: Kyuzo68 (~Kyuzo@host-82-50-171-31.retail.telecomitalia.it)
[20:17:58] *** Joins: m0viefreak (~asdf@user/m0viefreak)
[20:18:57] *** Quits: legola (~legola@46.235.101.65) (Ping timeout: 240 seconds)
[20:19:28] *** Quits: n4dir (~user@i577BC838.versanet.de) (Remote host closed the connection)
[20:20:17] *** Quits: user217_ (~andrii@68.183.215.143) (Ping timeout: 240 seconds)
[20:20:24] *** Joins: user217__ (~andrii@195.138.71.41)
[20:22:55] *** Joins: mr-red (~drd@93-32-176-16.ip34.fastwebnet.it)
[20:23:32] *** Quits: drd (~drd@93.55.19.103) (Ping timeout: 240 seconds)
[20:23:57] *** Quits: lalitmee__ (~lalitmee@180.94.32.14) (Ping timeout: 240 seconds)
[20:26:35] *** Joins: MrBlue (~MrBlue@24.114.84.33)
[20:27:04] *** Quits: rufito (~phil@181.42.53.33) (Quit: Leaving)
[20:27:47] *** Joins: dsrt^ (~dsrt@207.5.54.6)
[20:30:11] *** Joins: gdd (~gdd@129.199.146.230)
[20:30:13] *** Quits: mozgalom (~mozgalom@194.144.47.113) (Quit: SO LONG SUCKERS!)
[20:30:52] *** Quits: fazz234234367 (~fazz23423@c-73-235-104-195.hsd1.ca.comcast.net) (Quit: Connection closed)
[20:31:09] *** Joins: fazz234234368 (~fazz23423@c-73-235-104-195.hsd1.ca.comcast.net)
[20:31:52] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[20:33:04] *** Joins: tobybl (~tobybl@213.31.132.151)
[20:33:15] *** Joins: thebombzen_ (~thebombze@64-233-244-163.static.clv.wideopenwest.com)
[20:36:19] *** Joins: roadie (~user@2a02:8108:ec0:1427:dd96:8c85:d3c6:628a)
[20:36:27] *** Joins: sdu (~doo@185.44.146.214)
[20:36:36] *** Quits: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4) (Remote host closed the connection)
[20:37:58] *** Joins: mtk (~mtk@2601:185:200:70:20c:29ff:fe3e:59e4)
[20:38:23] *** Joins: legola (~legola@46.235.101.65)
[20:39:14] *** Quits: legola (~legola@46.235.101.65) (Remote host closed the connection)
[20:42:45] *** Joins: ChmEarl (~chmearl@user/chmearl)
[20:44:39] *** Quits: ezzieyguywuf (~Unknown@user/ezzieyguywuf) (Ping timeout: 256 seconds)
[20:46:11] *** Joins: Betal (~Betal@user/betal)
[20:47:33] *** Quits: mr-red (~drd@93-32-176-16.ip34.fastwebnet.it) (Quit: ZNC 1.8.2 - https://znc.in)
[20:49:08] *** Joins: maromau (~mauro@151.95.237.215)
[20:49:10] *** Joins: ExeciN (~ExeciN@user/nicexe)
[20:50:44] *** Joins: drd (~drd@93-32-176-16.ip34.fastwebnet.it)
[20:51:13] *** Joins: fatal (~0x00@user/fatal)
[20:51:35] *** Joins: sinaowolabi (~SinaOwola@41.58.232.102)
[20:52:33] *** Quits: treble (~treble@user/treble) (Quit: WeeChat 3.3)
[20:54:49] *** Joins: sinaowolabi_ (~SinaOwola@160.152.140.189)
[20:55:15] *** Quits: drd (~drd@93-32-176-16.ip34.fastwebnet.it) (Client Quit)
[20:55:25] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Ping timeout: 256 seconds)
[20:56:12] *** Quits: fatal (~0x00@user/fatal) (Ping timeout: 276 seconds)
[20:56:16] *** Joins: drd (~drd@93-32-176-16.ip34.fastwebnet.it)
[20:56:48] *** Quits: Kobboi (~christoph@2a02:a03f:847d:9b00:54be:b4af:d33d:ea0d) (Read error: Connection reset by peer)
[20:58:37] <earendel> slaughter: that's the iso utc norm. maybe that helps.
[20:59:50] <slaughter> earendel yeah it was just a matter of double quotes. zsh did some fun help that was hiding that issue from me when running locally. All good now :)
[21:00:18] * earendel thumbsup
[21:01:05] <earendel> my fav date format.
[21:01:39] <earendel> slaughter: how can i parse it with GNU coreutils, btw?
[21:02:00] <slaughter> On mac I just used `gdate -d $THE_DATE_STRING +%s`
[21:02:12] <slaughter> +%s optional, since I was converting to epoch seconds
[21:02:18] <slaughter> And gdate comes from `brew install coreutils`
[21:02:20] <earendel> hm. ok. thanks.
[21:02:42] *** Quits: zostj (~rue@1-162-41-131.dynamic-ip.hinet.net) (Quit: WeeChat 3.4)
[21:03:01] *** Quits: drd (~drd@93-32-176-16.ip34.fastwebnet.it) (Ping timeout: 240 seconds)
[21:03:37] *** Joins: drd (~drd@93.55.19.103)
[21:03:47] *** Joins: hellstabber (~hellstabb@178.233.16.12)
[21:05:35] *** Joins: bomb-on (~bomb-on@194.144.47.113)
[21:07:52] *** Joins: rgrinberg (~textual@2806:101e:7:b2b:a996:6e46:afb:f82e)
[21:11:32] *** Quits: gdd (~gdd@129.199.146.230) (Ping timeout: 240 seconds)
[21:11:39] *** Quits: bomb-on (~bomb-on@194.144.47.113) (Read error: Connection reset by peer)
[21:12:10] *** Quits: adac (~adac@31.207.101.82) (Ping timeout: 268 seconds)
[21:13:43] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[21:15:19] *** Joins: Kobboi (~christoph@2a02:a03f:847d:9b00:54be:b4af:d33d:ea0d)
[21:18:00] *** Joins: zebrag (~chris@user/zebrag)
[21:18:02] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 240 seconds)
[21:21:47] *** Joins: FluffyMask (~masque@user/fluffymask)
[21:22:22] *** Joins: MarchHare (~MarchHare@2602:47:161:8200::a57)
[21:22:51] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[21:25:46] *** Quits: thebombzen_ (~thebombze@64-233-244-163.static.clv.wideopenwest.com) (Ping timeout: 260 seconds)
[21:27:43] *** Quits: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com) (Client Quit)
[21:28:57] *** Joins: nattiestnate (~nate@114.122.107.61)
[21:29:17] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[21:30:39] *** Joins: ExeciN (~ExeciN@user/nicexe)
[21:31:28] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[21:31:43] *** Joins: justsomeguy (~justsomeg@user/justsomeguy)
[21:34:57] *** Quits: ExeciN (~ExeciN@user/nicexe) (Ping timeout: 256 seconds)
[21:35:52] *** Quits: Kyuzo68 (~Kyuzo@host-82-50-171-31.retail.telecomitalia.it) (Quit: Konversation terminated!)
[21:36:04] *** Joins: magla (~gelignite@55d4d2a6.access.ecotel.net)
[21:37:29] *** Quits: gabriele (~gabriele@user/gabriele) (Quit: Leaving)
[21:38:55] *** Quits: drd (~drd@93.55.19.103) (Quit: ZNC 1.8.2 - https://znc.in)
[21:39:59] *** Joins: furrymcgee (~devuan@cgn-213-196-210-78.nc.de)
[21:40:32] *** Joins: thebombzen_ (~thebombze@64-233-244-163.static.clv.wideopenwest.com)
[21:41:25] *** Quits: thevishy (~Nishant@2405:201:f005:c007:1d22:93e8:b240:6332) (Quit: Leaving)
[21:41:26] *** Joins: drd (~drd@93.55.19.103)
[21:41:32] *** Quits: furrymcgee (~devuan@cgn-213-196-210-78.nc.de) (Client Quit)
[21:44:06] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[21:50:46] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[21:52:35] *** Joins: treble (~treble@user/treble)
[21:54:50] *** Joins: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de)
[21:55:49] *** Quits: carl-- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 240 seconds)
[21:56:04] *** Quits: thebombzen_ (~thebombze@64-233-244-163.static.clv.wideopenwest.com) (Remote host closed the connection)
[21:56:24] *** Joins: thebombzen_ (~thebombze@64-233-244-163.static.clv.wideopenwest.com)
[21:56:35] *** Joins: junebug (~junebug@2600:1700:3db0:2540:f063:bfd2:8964:234f)
[21:57:42] *** Joins: n4dir (~user@i577BC838.versanet.de)
[21:59:03] *** Quits: roadie (~user@2a02:8108:ec0:1427:dd96:8c85:d3c6:628a) (Ping timeout: 268 seconds)
[21:59:04] *** Quits: thebombzen_ (~thebombze@64-233-244-163.static.clv.wideopenwest.com) (Read error: Connection reset by peer)
[21:59:15] *** Joins: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se)
[21:59:19] *** Joins: roadie (~user@2a02:8108:ec0:1427:dd96:8c85:d3c6:628a)
[21:59:29] *** Joins: thebombzen_ (~thebombze@64-233-244-163.static.clv.wideopenwest.com)
[22:00:26] *** Quits: polve (~polve@user/polve) (Ping timeout: 252 seconds)
[22:00:51] *** Joins: A|an (~Alan@173.218.175.171)
[22:02:03] *** Joins: polve (~polve@user/polve)
[22:03:57] *** Quits: roadie (~user@2a02:8108:ec0:1427:dd96:8c85:d3c6:628a) (Ping timeout: 240 seconds)
[22:05:37] *** Quits: soren_ (~gcheng@betharealibips03.b.subnet.rcn.com) (Quit: WeeChat 3.4)
[22:05:48] *** Joins: fatal (~0x00@user/fatal)
[22:06:30] *** Quits: drd (~drd@93.55.19.103) (Quit: ZNC 1.8.2 - https://znc.in)
[22:07:41] *** Joins: drd (~drd@93.55.19.103)
[22:08:37] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 240 seconds)
[22:09:11] *** Joins: stonkey (~stonkey@user/stonkey)
[22:09:24] <Pinchiukas> earendel: what?!
[22:10:18] *** Joins: semigloss (~semigloss@d14-69-6-230.try.wideopenwest.com)
[22:10:44] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[22:12:12] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[22:18:03] *** Quits: rgrinberg (~textual@2806:101e:7:b2b:a996:6e46:afb:f82e) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[22:18:10] *** Joins: sa0 (~sa0sin@2a01:e0a:414:b360:3914:8c6e:d32:f3d5)
[22:20:08] *** Joins: greycat (~greg@209.142.155.49)
[22:21:54] *** Joins: idontneedanick (~idontneed@h-158-174-186-127.NA.cust.bahnhof.se)
[22:24:46] *** Joins: roadie (~user@2a02:8108:ec0:1427:dd96:8c85:d3c6:628a)
[22:25:56] *** Joins: ZenWalker (~r00t@cafe/developer/ZenWalker)
[22:26:00] <ZenWalker> hi all
[22:26:21] *** Joins: ElPresidente (~ElPreside@2600:1700:3d10:4870:6ca3:1933:1d08:7ad8)
[22:26:41] <ZenWalker> http://paste.debian.net/1225065/
[22:26:57] <ZenWalker> this shows all the arguments, but how to show only third fourth and later arguments?
[22:27:19] <greycat> shift 2; or else "${@:3}"
[22:27:20] <tirnanog> "${@:3}"
[22:28:52] *** Quits: roadie (~user@2a02:8108:ec0:1427:dd96:8c85:d3c6:628a) (Remote host closed the connection)
[22:29:05] *** Joins: roadie (~user@2a02:8108:ec0:1427:dd96:8c85:d3c6:628a)
[22:29:58] *** Quits: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072) (Remote host closed the connection)
[22:30:51] *** Joins: bob_x2 (~bob_x@gateway/tor-sasl/bobx1/x-26457072)
[22:31:15] <ZenWalker> ${@:3} yes! thanks to all!
[22:31:31] <greycat> with quotes
[22:33:41] *** Quits: roadie (~user@2a02:8108:ec0:1427:dd96:8c85:d3c6:628a) (Ping timeout: 245 seconds)
[22:34:02] *** Quits: epony (epony@user/epony) (Ping timeout: 240 seconds)
[22:34:33] *** Joins: roadie (~user@2a02:8108:ec0:1427:dd96:8c85:d3c6:628a)
[22:34:35] *** Quits: sinaowolabi (~SinaOwola@41.58.232.102) (Ping timeout: 256 seconds)
[22:34:48] *** Quits: sinaowolabi_ (~SinaOwola@160.152.140.189) (Ping timeout: 268 seconds)
[22:35:02] *** Joins: mr-red (~drd@93.55.19.103)
[22:35:44] *** Joins: epony (epony@user/epony)
[22:35:57] *** Quits: drd (~drd@93.55.19.103) (Ping timeout: 240 seconds)
[22:36:15] *** Joins: kurahaupo (~kurahaupo@115.69.27.211)
[22:36:17] *** Quits: justsomeguy (~justsomeg@user/justsomeguy) (Ping timeout: 256 seconds)
[22:36:58] <ZenWalker> greycat: yes, thanks
[22:38:04] *** Quits: ztx (~ztx@user/ztx) (Quit: ztx)
[22:39:06] *** Quits: libc (~weechat@user/tessio) (Quit: WeeChat 3.2)
[22:40:21] *** Quits: user217__ (~andrii@195.138.71.41) (Read error: Connection reset by peer)
[22:42:48] *** Quits: fatal (~0x00@user/fatal) (Ping timeout: 276 seconds)
[22:44:05] *** Quits: mnemonic (~semeion@user/semeion) (Quit: WeeChat 3.4)
[22:47:57] *** Quits: Sauvin (~sauvin@about/linux/staff/sauvin) (Ping timeout: 240 seconds)
[22:48:26] *** Joins: sinaowolabi (~SinaOwola@41.190.2.118)
[22:49:06] *** Quits: MenschZwoNull (~MenschZwo@p200300c8573fa200b5e9479b31916d2e.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[22:52:33] *** Quits: scoobydoo (~scooby@user/scoobydoo) (Read error: Connection timed out)
[22:53:10] *** Quits: sublim20 (~sublim20@user/sublim20) (Quit: Leaving)
[22:53:11] *** Joins: scoobydoo (~scooby@user/scoobydoo)
[22:57:27] *** Joins: jkwnki (~jkwnki@p4ff31198.dip0.t-ipconnect.de)
[23:00:21] *** Joins: fatal (~0x00@user/fatal)
[23:00:33] *** Quits: riff-IRC (~riff-IRC@user/riff-irc) (Read error: Connection reset by peer)
[23:00:42] *** Quits: sinaowolabi (~SinaOwola@41.190.2.118) (Ping timeout: 268 seconds)
[23:01:53] *** Joins: riff-IRC (~riff-IRC@user/riff-irc)
[23:10:24] *** Joins: anaveragehuman (~anaverage@user/anaveragehuman)
[23:11:29] *** Joins: sinaowolabi (~SinaOwola@41.58.49.11)
[23:12:04] *** Joins: tobybl (~tobybl@213.31.132.151)
[23:12:33] *** Joins: Flow (~none@gentoo/developer/flow)
[23:13:44] *** Joins: H3dn1ng (~H3dn1ng@2-248-149-85-no172.tbcn.telia.com)
[23:14:03] *** Quits: H3dn1ng (~H3dn1ng@2-248-149-85-no172.tbcn.telia.com) (Client Quit)
[23:14:42] *** Joins: malina (~malina@user/malina)
[23:14:57] *** Quits: junebug (~junebug@2600:1700:3db0:2540:f063:bfd2:8964:234f) (Ping timeout: 240 seconds)
[23:22:48] *** Joins: H3dn1ng (~H3dn1ng@185.213.154.235)
[23:23:41] *** Joins: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[23:24:17] *** Quits: cheer (~cheer@cpe-76-189-213-198.neo.res.rr.com) (Ping timeout: 240 seconds)
[23:26:22] *** Joins: hqdruxn08 (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com)
[23:26:29] *** Quits: tobybl (~tobybl@213.31.132.151) (Remote host closed the connection)
[23:26:35] *** Joins: cheer (~cheer@cpe-76-189-213-198.neo.res.rr.com)
[23:27:25] *** Quits: hqdruxn08__ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[23:28:07] *** Joins: arinov (~arinov@213.194.126.155)
[23:29:25] *** Quits: hqdruxn08_ (~hqdruxn08@cpe-66-68-166-214.austin.res.rr.com) (Ping timeout: 240 seconds)
[23:31:15] *** Quits: The_Blode (~Blode@user/the-blode/x-7164444) (Ping timeout: 256 seconds)
[23:31:25] *** Joins: The_Blode_ (~Blode@user/the-blode/x-7164444)
[23:31:38] *** Parts: Flow (~none@gentoo/developer/flow) (WeeChat 3.3)
[23:32:51] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[23:34:27] *** Joins: junebug (~junebug@2600:1700:3db0:2540:42ba:57e2:4425:3400)
[23:35:47] *** Quits: carl--- (~carl-@c-138ee555.02-180-73746f39.bbcust.telenor.se) (Ping timeout: 256 seconds)
[23:37:49] *** Quits: The_Blode_ (~Blode@user/the-blode/x-7164444) (Ping timeout: 240 seconds)
[23:37:55] *** Quits: hellstabber (~hellstabb@178.233.16.12) (Read error: Connection reset by peer)
[23:39:11] *** Joins: natewrench123456 (~joshu@cpe-72-228-153-194.buffalo.res.rr.com)
[23:39:52] *** Joins: The_Blode (~Blode@user/the-blode/x-7164444)
[23:40:39] *** Quits: tejr (~tejr@user/tejr) (Ping timeout: 276 seconds)
[23:41:14] *** Joins: sazawal (~sazawal@122.161.85.84)
[23:41:37] *** Quits: junebug (~junebug@2600:1700:3db0:2540:42ba:57e2:4425:3400) (Ping timeout: 240 seconds)
[23:41:51] *** Joins: tejr (~tejr@user/tejr)
[23:43:08] *** Quits: JohnML (~JohnML@ip-37-201-129-30.hsi13.unitymediagroup.de) (Remote host closed the connection)
[23:44:01] *** Joins: junebug (~junebug@2600:1700:3db0:2540:128d:5e50:6657:edb)
[23:51:25] *** dob1_ is now known as dob1
[23:52:50] *** Joins: sublim20 (~sublim20@user/sublim20)
[23:54:32] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[23:55:26] *** Quits: tsp (~tsp@allinaccess.com) (Quit: ZNC - http://znc.in)
[23:55:26] *** Quits: stevensaus (~steven_sa@cpe-74-131-36-220.kya.res.rr.com) (Read error: Connection reset by peer)
[23:59:31] *** Quits: kurahaupo (~kurahaupo@115.69.27.211) (Ping timeout: 245 seconds)
[23:59:42] *** Joins: tsp (~tsp@srv1.xen.prgmr.com)
[23:59:56] *** Quits: n4dir (~user@i577BC838.versanet.de) (Remote host closed the connection)
