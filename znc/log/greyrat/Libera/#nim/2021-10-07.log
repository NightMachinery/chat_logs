[00:00:41] <supakeen> KSM works 'ok'
[00:04:19] <FromDiscord> <no name fits> I forgot how to find the bleeding edge docs üòì
[00:08:04] <FromDiscord> <el__maco> hmm‚Üµ``fatal error C1001: Internal compiler error.‚Üµ(compiler file 'd:\A01\_work\12\s\src\vctools\Compiler\Utc\src\p2\main.c', line 213)``
[00:09:04] <FromDiscord> <el__maco> sent a code paste, see https://paste.rs/Mak
[00:09:28] <FromDiscord> <no name fits> nvm I found them, srry
[00:09:29] <FromDiscord> <Yardanico> uh
[00:09:38] <FromDiscord> <Yardanico> @elmaco you hit a visual studio internal bug :D
[00:09:53] <FromDiscord> <qb> I've had a website which compares simple python code and on the other end the nim code. Was it on github? Could someone tell me where I can find it?
[00:10:08] <FromDiscord> <Yardanico> c1001 is a compiler crash basically
[00:10:29] <FromDiscord> <Yardanico> a visual studio compiler crash, not nim compiler crash
[00:11:22] <FromDiscord> <qb> nvm, got it https://github.com/nim-lang/Nim/wiki/Nim-for-Python-Programmers`
[00:11:55] <FromDiscord> <Yardanico> @qb just saying, this page isn't really official
[00:12:33] <FromDiscord> <Goel> You can check it out this too, it is helpfull at timesfor comparison even if some examples are very old or not all of them are covered @qb ‚Üµhttp://rosettacode.org/wiki/Category:Programming_Languages
[00:13:29] <FromDiscord> <Yardanico> too sad that rosettacode is still using this ancient engine and way of sharing code
[00:13:47] <FromDiscord> <Yardanico> there's an announcement from a year ago about "modernizing rosetta code infrastructure", but so far nothing really has come out of it
[00:15:14] <FromDiscord> <Goel> It also says "connection is not secure to this website" probably they forgot to renew their security certificates üò±
[00:16:12] <FromDiscord> <Yardanico> no
[00:16:25] <FromDiscord> <Yardanico> @Goel that's the way modern browsers say that website doesn't use http
[00:16:25] <FromDiscord> <Yardanico> (edit) "http" => "https"
[00:16:38] <FromDiscord> <Yardanico> rosettacode has https though, but there's no automatic redirect
[00:16:38] <FromDiscord> <Yardanico> https://rosettacode.org/wiki/Category:Programming_Languages
[00:17:30] <FromDiscord> <Yardanico> if the website has an expired certificate any modern browser will first display a big red warning and _only_ if you say that you're certain that it's safe, the browser will let you see the website
[00:18:25] *** Quits: PMunch (~PMunch@c01F28BC3.dhcp.as2116.net) (Quit: leaving)
[00:21:29] <FromDiscord> <Goel> Thats good, smart browsers üòÑ By the way Yardanico, earlier i was having a look around github new programming languages and i was curious about one of them called Arturo. I checked it and i was surprized to notice it was made `Nim 56.4%`!
[00:24:54] <FromDiscord> <Yardanico> there are a lot of smallish proglangs made in nim
[00:37:32] <FromDiscord> <tandy> what can you replace `copyMem` and `zeroMem` with for the js backend?
[00:39:05] <FromDiscord> <Yardanico> check out https://github.com/nim-lang/Nim/blob/version-1-4/lib/pure/streams.nim for some examples
[00:39:31] <FromDiscord> <tandy> ty
[00:40:33] <FromDiscord> <tandy> looks like `cast`?
[00:41:11] <FromDiscord> <el__maco> I updated msvc but it keeps crashing(?). Only if --opt:speed is provided, e.g. --opt:size is fine ü§î‚Üµdo I really have to install gcc ü•∫
[00:44:23] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Ping timeout: 265 seconds)
[00:57:07] *** Quits: Gustavo6046 (~Gustavo60@user/gustavo6046) (Remote host closed the connection)
[00:57:35] *** Joins: Gustavo6046 (~Gustavo60@user/gustavo6046)
[00:58:54] *** Joins: jafarlihi (~hjafarli@h162081.upc-h.chello.nl)
[00:59:57] *** Quits: Vladar (~Vladar@46.162.2.53) (Quit: Leaving)
[01:00:22] <FromDiscord> <no name fits> Choosenim does that for you I'm pretty sure
[01:01:32] <FromDiscord> <no name fits> What's a good data structure to use when I have several keys that map to the same value?
[01:04:17] <FromDiscord> <IsaacPaul> I'd just use a dictionary or hashmap
[01:05:06] *** Quits: NeoCron (~NeoCron@p200300c4cf16e40089f16fffa0577f49.dip0.t-ipconnect.de) (Quit: Leaving)
[01:05:26] <FromDiscord> <IsaacPaul> if memory is an issue id make a dictionary with the content hashed and use that as the key.
[01:05:27] *** Joins: NeoCron (~NeoCron@p200300c4cf16e40089f16fffa0577f49.dip0.t-ipconnect.de)
[01:06:16] <FromDiscord> <IsaacPaul> if you need several keys to match that 1 key then (dictionary again) lol. If you're asking if there's a well known structure that already does this then "shrug"
[01:06:21] <FromDiscord> <IsaacPaul> (edit) ""shrug"" => "idk ü§∑‚Äç‚ôÇÔ∏è"
[01:08:44] <FromDiscord> <IsaacPaul> https://www.quora.com/What-is-the-best-data-structure-for-mapping-multiple-keys-to-the-same-value‚Üµ> One reasonable option is to use a pair of hash tables. The first one maps keys to standardized keys, and the second one maps standardized keys to values.‚ÜµSeems like that's what is recommended
[01:09:12] <FromDiscord> <no name fits> I see, thanks
[01:11:25] <FromDiscord> <no name fits> I was hoping there was some weird tree structure or something that fixed it really cleanly. Good old dictionary
[01:12:45] <nrds> <06Prestige99> Why are there keys mapping to the same value a lot?
[01:13:03] <nrds> <06Prestige99> almost sounds like the map is inverted
[01:23:36] *** Quits: max22- (~maxime@2a01cb08833598007fcfb2955ee7c812.ipv6.abo.wanadoo.fr) (Quit: Leaving)
[01:24:31] <FromDiscord> <rb3.nim> sent a code paste, see https://play.nim-lang.org/#ix=3B36
[01:40:07] <FromDiscord> <geekrelief> sent a code paste, see https://play.nim-lang.org/#ix=3B39
[01:48:42] <FromDiscord> <Elegantbeef> Hmm i can probably help!
[01:48:42] <FromDiscord> <geekrelief> hmm look like my issue might be because the dot operator is inside a macro.
[01:49:11] <FromDiscord> <geekrelief> In reply to @Elegantbeef "Hmm i can probably": Hey beef, you talking to me?
[01:49:20] <FromDiscord> <Elegantbeef> Yes
[01:49:26] <FromDiscord> <geekrelief> I'm think it's something up with the `cOverride` macro from nimterop.
[01:49:37] <FromDiscord> <geekrelief> (edit) "I'm" => "I"
[01:50:08] <FromDiscord> <Elegantbeef> The first block works fine
[01:50:35] <FromDiscord> <geekrelief> yeah it appears to compile
[01:52:29] <FromDiscord> <geekrelief> hmm it's gotta be something with nimterop then ü•≤
[01:53:30] <FromDiscord> <geekrelief> I'm starting to wonder if it's even worth it using nimterop now lol
[01:58:55] <FromDiscord> <geekrelief> maybe it's too soon to jump to that conclusion.
[02:24:52] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[02:36:09] *** Quits: NeoCron (~NeoCron@p200300c4cf16e40089f16fffa0577f49.dip0.t-ipconnect.de) (Quit: Leaving)
[02:44:41] *** Quits: jafarlihi (~hjafarli@h162081.upc-h.chello.nl) (Quit: WeeChat 3.3)
[02:56:44] <FromDiscord> <el__maco> how does one go from ``newSeq[cchar]`` to ``string``
[02:57:01] <FromDiscord> <el__maco> (edit) "``newSeq[cchar]``" => "``seq[cchar]``"
[02:59:37] *** Quits: Zevv (~Zevvvvv@185.238.131.12) (Ping timeout: 252 seconds)
[03:00:05] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3B3m
[03:00:06] <FromDiscord> <Elegantbeef> Two methods
[03:02:15] <FromDiscord> <el__maco> ``cast[string]`` seems to work, thanks
[03:26:04] <FromDiscord> <ynfle (ynfle)> @el\_\_maco I wouldn't rely on it. That's an implementation detail. `cast` in nim is a bit cast not a type cast
[03:38:22] <FromDiscord> <Elegantbeef> Presently it's just cause seqs/strings have the same internal representation, if either one changes it stops working
[03:41:47] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[03:45:20] *** Joins: rockcavera (~rc@user/rockcavera)
[04:10:14] <nrds> <06Prestige99> Elegantbeef I have an interesting question for you, if you have a min to look. Has to do with that animation macro 
[04:10:54] <nrds> <06Prestige99> https://git.einheit.tech/EinheitTechnologies/shade/src/commit/39443345601dfd2b750b829db9aa4880cf5ec8dd/src/shadepkg/game/animation.nim#L165 this assignment can't be done with a proc/template in the `foo=` form, but I'd like it to. Would I need a special case for it?
[04:11:31] <nrds> <06Prestige99> Curious if I could just generate an AST that'd be parsed in the same way as writing "foo = 5" where `foo=` is a proc
[04:17:39] <FromDiscord> <Elegantbeef> properties only work applied on a symbol
[04:18:58] <FromDiscord> <Elegantbeef> Unless you use accquotes as such https://play.nim-lang.org/#ix=3B3w
[04:25:23] <nrds> <06Prestige99> hmm
[04:27:29] <FromDiscord> <Elegantbeef> I suppose if you had foo be `proc foo=(a: typedesc[void], val: int)` you could do `void.foo = val` üòõ
[04:28:23] <nrds> <06Prestige99> atm I have method `scale=`*(this: Node, scale: DVec2) - thoughts?
[04:28:40] <nrds> <06Prestige99> Maybe I've coded myself into a corner.. didn't expect this to break down with the animation system
[04:28:45] <FromDiscord> <Elegantbeef> Use a macro to check if it's a property
[04:29:48] <nrds> <06Prestige99> Like to see if it's a proc ending with = ?
[04:29:55] <FromDiscord> <Elegantbeef> Yes
[04:31:21] <FromDiscord> <Elegantbeef> Also this compiles? https://git.einheit.tech/EinheitTechnologies/shade/src/commit/39443345601dfd2b750b829db9aa4880cf5ec8dd/src/shadepkg/game/animation.nim#L151 shouldnt it be `isnot`
[04:31:36] <nrds> <06Prestige99> it works yeah
[04:31:46] <FromDiscord> <Elegantbeef> Odd
[04:33:09] <nrds> <06Prestige99> https://git.einheit.tech/EinheitTechnologies/shade/src/commit/39443345601dfd2b750b829db9aa4880cf5ec8dd/examples/basic/animationplayer_example.nim#L42 is the particular case I'm having an issue with
[04:33:26] <nrds> <06Prestige99> I'm passing in `king.scale` so I don't think the macro can see it's a proc?
[04:34:52] <FromDiscord> <Elegantbeef> Where is scale?
[04:35:12] <FromDiscord> <Elegantbeef> Ah i've found it
[04:35:18] <FromDiscord> <Elegantbeef> you're passing the setter #1
[04:35:33] <nrds> <06Prestige99> Right
[04:35:42] <FromDiscord> <Elegantbeef> so you'll need to do \`\`\` `scale=`(king)\`\`\`\`
[04:35:44] <FromDiscord> <Elegantbeef> I mean getter
[04:35:51] <nrds> <06Prestige99> oh
[04:36:33] <FromDiscord> <Elegantbeef> it's a typed macro so with that you can get if it's a property
[04:36:58] <FromDiscord> <Elegantbeef> I dont quite get why this is a macro
[04:37:31] <FromDiscord> <Elegantbeef> You're using 0 introspection, so i think this'd work as a template
[04:38:37] <nrds> <06Prestige99> But it'll need to be one to check if it's a property vs a setter yeah?
[04:39:07] <FromDiscord> <Elegantbeef> Not really since you can make a macro that does it for you üòÄ
[04:39:44] <nrds> <06Prestige99> I wish I could just pretend it's a property when I pass it into the macro/template ü§î
[04:39:53] <nrds> <06Prestige99> instead of scale=(king) or w/e
[04:40:35] <FromDiscord> <Elegantbeef> You can do `king.scale` check if it's a proc/method if so add a `=`
[04:43:17] <FromDiscord> <gnu+linux user> In reply to @‡∏£—î‡∏Ñ…≠‡πì‡πè◊©—î "haven't seen any Hacktoberfest": what does it have to do with me
[04:51:10] <FromDiscord> <Elegantbeef> Prestige for instance this https://play.nim-lang.org/#ix=3B3I
[04:52:26] <FromDiscord> <Elegantbeef> that `newLit(10)` should be whatever you feed into the value, this can just be called inside the proc
[05:31:26] *** Quits: krux02 (~krux02@p200300ca8f0d0300fb0f49e84c91d652.dip0.t-ipconnect.de) (Remote host closed the connection)
[05:31:38] <NimEventer> New thread by Rb3: How to use memory leak detection tools on Windows with --gc:arc and -d:useMalloc?, see https://forum.nim-lang.org/t/8483
[05:38:35] <FromDiscord> <Varriount> @PMunch Can futhark handle Windows API headers?
[05:44:02] <FromDiscord> <NullCode> for windows api, use `winim`
[05:44:17] <FromDiscord> <NullCode> https://github.com/khchen/winim/
[05:44:18] <nrds> <12R2D299> 4GitHub: 7"Nim's Windows API and COM Library"
[05:44:23] <FromDiscord> <NullCode> it's just better
[05:46:08] *** Joins: Zevv (~Zevvvvv@185.238.131.12)
[05:53:17] *** Quits: arkurious (~arkurious@user/arkurious) (Quit: Leaving)
[06:21:49] <nrds> <06Prestige99> Is there a place that defines what all the nim node kinds are?
[06:25:39] <FromDiscord> <impbox [ftsf]> it's an enum so i guess so
[06:26:06] <nrds> <06Prestige99> I meant like, documentation
[06:26:20] <FromDiscord> <impbox [ftsf]> https://github.com/nim-lang/Nim/blob/devel/lib/core/macros.nim#L26
[06:27:20] <FromDiscord> <impbox [ftsf]> I think that's all you get, the names are mostly easy to figure out, but if you've got questions
[06:27:37] <FromDiscord> <impbox [ftsf]> I guess you can also just create some and look at their repr
[06:27:44] <nrds> <06Prestige99> Thanks
[06:29:25] <FromDiscord> <SirFozz> Is there any difference between `%%` and `mod`?
[06:30:24] <FromDiscord> <impbox [ftsf]> yep!
[06:31:37] <FromDiscord> <impbox [ftsf]> https://play.nim-lang.org/#ix=3B42
[06:31:49] <FromDiscord> <SirFozz> Wait I believe I found it
[06:32:10] <FromDiscord> <SirFozz> `%%` Can only accept ints as arguments
[06:32:31] <FromDiscord> <impbox [ftsf]> they have different behaviours for negatives
[06:32:42] <FromDiscord> <SirFozz> Oh really
[06:32:55] <FromDiscord> <impbox [ftsf]> check the output of that example i posted
[06:32:55] <FromDiscord> <SirFozz> I'll check that link out
[06:32:58] <FromDiscord> <SirFozz> Yeah
[06:34:02] <FromDiscord> <SirFozz> I though it was just redundancy at first, but that's neat
[06:34:06] <FromDiscord> <SirFozz> Thank you for the help
[06:35:05] <FromDiscord> <impbox [ftsf]> probably we should add in runnable examples for %% like mod has
[06:35:44] <FromDiscord> <impbox [ftsf]> %% is implemented as `cast[int](cast[uint](x) mod cast[uint](y))`
[06:36:15] <FromDiscord> <Rika> How fun
[06:36:18] <FromDiscord> <impbox [ftsf]> hmm weird, i thought it would convert them rather than cast
[06:39:13] <FromDiscord> <impbox [ftsf]> seems the result is the same shrug
[07:21:49] <NimEventer> New thread by Alexeypetrushin: Question about algorithm.upperBound, see https://forum.nim-lang.org/t/8484
[07:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[07:36:31] *** Joins: supakeen (~user@python/site-packages/supakeen)
[08:09:54] *** Quits: xet7 (~xet7@user/xet7) (Remote host closed the connection)
[08:10:57] *** Joins: xet7 (~xet7@user/xet7)
[08:30:03] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[09:25:51] <FromDiscord> <NullCode>  https://media.discordapp.net/attachments/371759389889003532/895549963512201226/unknown.png
[09:25:56] <FromDiscord> <NullCode> if there are more than 1 defer
[09:26:04] <FromDiscord> <NullCode> which one's executed last?
[09:26:10] <FromDiscord> <impbox [ftsf]> did you check?
[09:26:20] <FromDiscord> <NullCode> docs?
[09:26:27] <FromDiscord> <impbox [ftsf]> try it out and see what happens
[09:26:30] <FromDiscord> <Elegantbeef> first in last out
[09:26:47] <FromDiscord> <NullCode> oh so first one's executed last
[09:26:48] <FromDiscord> <NullCode> gotchu
[09:26:54] <FromDiscord> <NullCode> In reply to @impbox "try it out and": well it's not clear
[09:26:59] <FromDiscord> <Elegantbeef> well it defers everything after the body
[09:27:17] <FromDiscord> <Elegantbeef> so after everything below it is ran the defer body is ran
[09:27:31] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3B4B
[09:27:44] <FromDiscord> <NullCode> In reply to @Elegantbeef "so after everything below": yeah
[09:27:49] <FromDiscord> <Elegantbeef> FILO üòõ
[09:28:04] <FromDiscord> <NullCode> but since i was told `defer` does stuff at the very end
[09:28:08] <FromDiscord> <Elegantbeef> Impbox that isnt getting nicoscripter running, how dare you not work 24/7 on it
[09:28:17] <FromDiscord> <impbox [ftsf]> i'm at work atm =p
[09:28:36] <FromDiscord> <impbox [ftsf]> will get back to nicoscripter this evening
[09:28:39] <FromDiscord> <NullCode> (edit) "end" => "end‚Üµi was wondering what starts first after ending last"
[09:28:42] <FromDiscord> <Elegantbeef> I mean if it did it any other way it'd not be defered
[09:28:50] <FromDiscord> <impbox [ftsf]> though i'm kind of at a loss as to how to proceed with it
[09:30:32] <FromDiscord> <Elegantbeef> Yea like i said i can always take a look if you want
[09:30:52] <FromDiscord> <impbox [ftsf]> yeah, gotta sort out some stuff before i can send since i had to change stuff in nico
[09:30:58] <FromDiscord> <Elegantbeef> Ah
[09:31:06] <FromDiscord> <Elegantbeef> sorry üòõ
[09:32:22] <FromDiscord> <Elegantbeef> But the NimVM ran the code fine if you didnt reload?
[09:32:26] <FromDiscord> <impbox [ftsf]> nah
[09:32:38] <FromDiscord> <impbox [ftsf]> it compiles it, but errors on invoke
[09:32:55] <FromDiscord> <Elegantbeef> Did the code work in a native build?
[09:32:59] <FromDiscord> <impbox [ftsf]> yep
[09:33:13] <FromDiscord> <impbox [ftsf]> (i better check it still works)
[09:34:02] <FromDiscord> <impbox [ftsf]> sent a code paste, see https://play.nim-lang.org/#ix=3B4F
[09:34:08] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[09:34:14] <FromDiscord> <Elegantbeef> If it does perhaps a emscripten issue with the nimvm, making the nimscript just `echo "Hello world"` with no additions, imports, or anything is where we should start i guess
[09:34:28] <FromDiscord> <impbox [ftsf]> no error if the functions are just discard
[09:34:44] <FromDiscord> <Elegantbeef> Guess i should go copy treeforms emscripten example and do some tests with just a console app
[09:34:49] <FromDiscord> <impbox [ftsf]> no error if just echoing
[09:34:56] <FromDiscord> <impbox [ftsf]> i'll tar up now and send to you
[09:39:13] <FromDiscord> <impbox [ftsf]> @ElegantBeef https://github.com/ftsf/nico/tree/nicoscripter    https://github.com/ftsf/nico/tree/nicoscripter/examples/nicoscripter
[09:39:26] <FromDiscord> <impbox [ftsf]> can run `nimble webr` from examples/nicoscripter to build for web
[09:39:38] <FromDiscord> <Elegantbeef> ok thanks!
[09:40:09] <FromDiscord> <impbox [ftsf]> assuming you have emscripten installed
[09:40:18] <FromDiscord> <Elegantbeef> Yea i do
[09:43:46] *** Joins: neurocyte0132889 (~neurocyte@92.119.10.104)
[09:43:46] *** Quits: neurocyte0132889 (~neurocyte@92.119.10.104) (Changing host)
[09:43:46] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[09:50:26] <FromDiscord> <Rika> isnt it in the docs how defers are run
[09:51:18] <FromDiscord> <Elegantbeef> Odd emscripten errors with a python error, lovely
[09:52:13] <FromDiscord> <impbox [ftsf]> @Rika doesn't seem like it's in the manual
[09:52:17] <FromDiscord> <impbox [ftsf]> D:
[09:52:21] <FromDiscord> <Rika> i remember it being documented
[09:52:31] <FromDiscord> <impbox [ftsf]> yeah sounds familiar too
[09:52:32] <FromDiscord> <Rika> because i know the order before having tried
[09:56:30] <FromDiscord> <Elegantbeef> I really wish software just worked
[09:56:40] <FromDiscord> <impbox [ftsf]> that'd be nice
[10:01:27] <FromDiscord> <Rika> i wish software is sound as soon as i write it
[10:01:36] <FromDiscord> <Rika> a world where tests arent needed xddd
[10:03:47] <FromDiscord> <Elegantbeef> Ah issue was emcc was expecting llvm11 but i gave it 12 it seems
[10:04:38] <FromDiscord> <impbox [ftsf]> you monster
[10:05:18] <FromDiscord> <Elegantbeef> How dare i have multiple llvm versions üòõ
[10:05:52] <FromDiscord> <Elegantbeef> `Aborted(No EM_ASM constant found at address 169128)` much more interesting error
[10:07:30] <FromDiscord> <retkid> whats the fastest way to do threading
[10:07:42] <FromDiscord> <retkid> do i just spawn all the tasks i need to do whenever?
[10:07:58] <FromDiscord> <retkid> well i take that back
[10:08:09] <FromDiscord> <retkid> does anyone have a good write up on threading in nim?
[10:10:11] <FromDiscord> <Rika> uh
[10:10:15] <FromDiscord> <Rika> i feel like we do
[10:10:19] <FromDiscord> <Rika> but i dont recall where
[10:10:24] <FromDiscord> <retkid> I looked for a little bit
[10:10:34] <FromDiscord> <retkid> threadpools doesn't have anything on the manual
[10:10:37] <FromDiscord> <Rika> gumberrrrrrrrr your lectures are needed
[10:10:37] <FromDiscord> <retkid> threads does tho
[10:11:13] <FromDiscord> <retkid> how about instead of him lecture, he add it to the manual...‚Üµ‚Üµi was reading one of the nim guides on it, and half way it turned into german and i was like "alrighty then"
[10:14:33] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87)
[10:16:37] <FromDiscord> <impbox [ftsf]> if you have nim-in-action it has a section on threads
[10:16:46] <FromDiscord> <retkid> its not too extensive
[10:17:07] <FromDiscord> <retkid> and nothing on pools
[10:17:25] <FromDiscord> <impbox [ftsf]> chapter 6.2.2 is about thread pools
[10:17:28] <FromDiscord> <retkid> ooo
[10:17:31] <FromDiscord> <retkid> maybe i mssed
[10:17:33] <FromDiscord> <retkid> (edit) "mssed" => "missed"
[10:18:11] <FromDiscord> <impbox [ftsf]> i haven't read the threads stuff much so i dunno how useful it is, but it seems to have a fair chunk of content
[10:18:43] <FromDiscord> <impbox [ftsf]> in general i'd recommend the book though
[10:19:09] <FromDiscord> <retkid> my initial instinct is the pool should be equal to the amount of threads available to the cpu, and instructions get sent in, each one sent to each thread
[10:19:26] <FromDiscord> <retkid> and each instruction must wait for the next avalible slot
[10:19:28] <FromDiscord> <retkid> (edit) "avalible" => "available"
[10:19:36] <FromDiscord> <retkid> (edit) "and each instruction must wait for the next available slot ... " 03added "of 3"
[10:19:37] <FromDiscord> <retkid> (edit) "3" => "4"
[10:19:39] <FromDiscord> <Elegantbeef> Well i cannot get nico to run with wasm so that's fun
[10:19:39] <FromDiscord> <retkid> (edit) "4" => "x"
[10:19:56] <FromDiscord> <Elegantbeef> your project does not run for me ‚òπÔ∏è
[10:20:00] <FromDiscord> <impbox [ftsf]> D:
[10:20:03] <FromDiscord> <retkid> D:
[10:20:05] <FromDiscord> <retkid> BAD
[10:20:19] <FromDiscord> <impbox [ftsf]> does it build?
[10:20:32] <FromDiscord> <Elegantbeef> It builds but aborts on initing nico
[10:20:56] <FromDiscord> <Rika> oh man job scheduling
[10:21:06] <FromDiscord> <Rika> In reply to @retkid "and each instruction must": job scheduling is relatively complex
[10:22:59] <FromDiscord> <retkid> In reply to @Rika "job scheduling is relatively": Yea i want to know about that but cant find muhc
[10:23:04] <FromDiscord> <retkid> (edit) "muhc" => "much"
[10:23:12] <FromDiscord> <retkid> suppose thats overkill for what im doing
[10:23:17] <FromDiscord> <Rika> because its not exactly beginner level
[10:23:23] <FromDiscord> <Rika> rather
[10:23:35] <FromDiscord> <Rika> not many people write beginner level content on job scheduling
[10:23:40] <FromDiscord> <retkid> Is it a thing where you probably learned it somewhere else
[10:23:50] <FromDiscord> <retkid> and can apply the concepts to nim
[10:23:54] <FromDiscord> <Rika> yes
[10:24:13] <FromDiscord> <retkid> coolio
[10:24:14] <FromDiscord> <retkid> well
[10:24:45] *** Joins: PMunch (~PMunch@vpn.dualog.com)
[10:24:45] <FromDiscord> <Elegantbeef> Ah seems llvm12 fucked stuff up
[10:24:51] <FromDiscord> <retkid> I've never done multi threading before so I suppose i will continue to dig or I'll learn it in Kotlin
[10:24:58] <FromDiscord> <retkid> if kotlin can even do trhat
[10:25:01] <FromDiscord> <retkid> (edit) "trhat" => "that"
[10:25:37] <FromDiscord> <Rika> it can afaik
[10:27:03] <PMunch> Hmm, that reminds me, I should write my multi-threading in Nim article soon
[10:27:28] <FromDiscord> <Elegantbeef> Indeed you should
[10:27:34] <FromDiscord> <Elegantbeef> Get at it, best be done by tomorrow
[10:27:57] <PMunch> But I'm busy..
[10:28:11] <FromDiscord> <impbox [ftsf]> bebestdonebtomoryrow
[10:28:50] <FromDiscord> <Elegantbeef> Sorry we dont speak australian
[10:35:50] *** Joins: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr)
[10:37:22] <FromDiscord> <Elegantbeef> I might be wrong impbox but the issue seems possibly caused by the last line's odd indentation in the html
[10:38:04] <FromDiscord> <impbox [ftsf]> o_O
[10:38:05] <FromDiscord> <Elegantbeef> Or not
[10:38:21] <FromDiscord> <impbox [ftsf]> the problem I was having? or the problem you're having?
[10:38:50] <FromDiscord> <Elegantbeef> Yours, but i was wrong
[10:41:09] <PMunch> What's the issue?
[10:41:40] <FromDiscord> <Elegantbeef> The Vm isnt playing well with the iterative calling in wasm
[10:41:49] <FromDiscord> <Elegantbeef> Update/draw are where the issue occurs
[10:42:33] <FromDiscord> <Elegantbeef> Actually it's any proc that's implemented
[10:42:37] <FromDiscord> <Elegantbeef> Odd
[10:44:20] <FromDiscord> <Elegantbeef> ponders if it's a 32bit issue or an emscripten issue
[10:51:18] <FromDiscord> <Elegantbeef> Actually it could be a me problem with implemented routines
[10:51:58] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[10:53:13] *** Joins: neurocyte0132889 (~neurocyte@92.119.10.104)
[10:53:13] *** Quits: neurocyte0132889 (~neurocyte@92.119.10.104) (Changing host)
[10:53:13] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[10:59:58] <FromDiscord> <impbox [ftsf]> feel free to blame my code too
[11:00:18] <FromDiscord> <impbox [ftsf]> maybe we should test with something less crazy
[11:01:01] <FromDiscord> <impbox [ftsf]> export just some simpler procs
[11:01:23] <FromDiscord> <Elegantbeef> Indeed
[11:01:41] <FromDiscord> <Elegantbeef> Though i have a feeling they'll not work
[11:11:10] <FromDiscord> <NullCode> i wonder if i should wrap a 7z library
[11:11:13] <FromDiscord> <NullCode> to understand how this works
[11:12:47] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Read error: Connection reset by peer)
[11:13:12] *** Joins: neurocyte0132889 (~neurocyte@92.119.10.104)
[11:13:12] *** Quits: neurocyte0132889 (~neurocyte@92.119.10.104) (Changing host)
[11:13:12] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[11:24:38] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[11:35:50] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-228.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[12:32:39] <PMunch> @hotdog are you around?
[12:33:11] <PMunch> I added a rename callback, but I wanted to see what you thought of it before I merged it into master: https://github.com/PMunch/futhark/pull/2
[12:39:28] <PMunch> Hmm, this is an interesting bug: https://play.nim-lang.org/#ix=3B54
[12:42:23] <PMunch> It seems like it isn't able to see the NilLit as a valid proc..
[12:57:28] <FromDiscord> <qb> Does nim have pbkdf2 somewhere?
[12:59:09] <FromDiscord> <qb> To be more precise im looking for https://docs.python.org/3/library/hashlib.html#hashlib.pbkdf2_hmac
[13:03:04] <FromDiscord> <enthus1ast> @qb\:  this? https://github.com/cheatfate/nimcrypto/blob/master/nimcrypto/pbkdf2.nim
[13:27:52] <FromDiscord> <Clonkk> What's the rules when using C++ type that already have move / copy  rules and destructor defined  with `=sink`  / `=copy` / `=destroy` ?
[13:29:13] <FromDiscord> <haxscramper> Unknown
[13:29:26] <FromDiscord> <haxscramper> This is an open question how this should be mapped to the Nim code
[13:29:28] <FromDiscord> <Clonkk> That explains why I didn't know how it worked then \:D
[13:30:12] <FromDiscord> <haxscramper> Cxx destructor is invoked unconditionally, though if you are using ref T with placement new you might want to call it explicitly in the finalizer
[13:30:40] <FromDiscord> <haxscramper> Non-copyable objects might be mapped to =copy {.error.}
[13:30:58] <FromDiscord> <haxscramper> Better to have nim errors than cxx codegen failures
[13:31:06] <FromDiscord> <hotdog> In reply to @PMunch "<@472459996068839424> are you around?": Hey I'm here
[13:31:18] <FromDiscord> <hotdog> In reply to @PMunch "I added a rename": Thanks! I'll have a look
[13:31:23] <FromDiscord> <haxscramper> Non default-constructible can be mapped to {. requiresinit.}
[13:31:36] <FromDiscord> <Clonkk> The issue is getting stuff lke  std\:\:unique\_ptr to work with Nim object
[13:31:40] <FromDiscord> <haxscramper> =sink - no idea
[13:31:59] <FromDiscord> <Clonkk> Currently, the Nim  `=destroy` hooks do not get called
[13:32:04] <FromDiscord> <haxscramper> You mean ref object?
[13:32:10] <FromDiscord> <Clonkk> Same for pushing objetc into a std\:\:vector from Nim bindings
[13:32:30] <FromDiscord> <haxscramper> For impprtcpp objects or for nim ones?
[13:33:11] <FromDiscord> <Clonkk> Potentially, it's a generic type T. Shouldn't matter though; any object type can have `=destroy` hook and `=sink` hook that sould be called when performing operation on C++ containers
[13:33:48] <FromDiscord> <haxscramper> Oh, is see. Yes, this is a problem really.
[13:34:08] <FromDiscord> <haxscramper> You work with c++ containers on the C++ side or on nim side?
[13:34:22] <FromDiscord> <Clonkk> https://github.com/Clonkk/nim-cppstl/issues/15
[13:35:07] <FromDiscord> <Clonkk> The setting is Nim binding to C++ class (std\:\:vector, std\:\:unique\_ptr, std\:\:shared\_ptr). From Nim side you have `CppVector` which is a binding to std\:\:vector
[13:35:57] <FromDiscord> <Clonkk> Ideally pushing a Nim object in a `CppVector` should keep the memory consistent during Move / copy / destroy
[13:36:18] <FromDiscord> <Clonkk> The issue will arise with any C++ library that uses containers or smart pointer (or worse custom smart pointers / custom containers)
[13:37:46] <FromDiscord> <haxscramper> Another pain point that has to be solved I guess
[13:38:30] <FromDiscord> <haxscramper> Right now I don't think I have any concrete ideas about how to solve this, at least without digging into codegen and examining all interactions
[13:41:45] <FromDiscord> <haxscramper> But generally speaking I'm not sure if this can be achieved without making some very strange codegen and emit hacks, or making some sort of NimAcceptor cxx object that manages lifetime by calling destructors, moves and so on.
[13:42:07] <FromDiscord> <haxscramper> Right now this is just a hypothesis
[13:47:58] <FromDiscord> <Clonkk> Right, so I don't know anything about codegen in the compiler. My gut feeling (probably wrong) is that Nim `=sink` /  `=copy` / `=destroy` is very similar to the  "rule of 3" in C++, so I would assume managing lifetime of a C++ object through Nim's hooks is do-able
[13:48:13] <FromDiscord> <Clonkk> So it should be, at the very least, "mappable"
[13:49:07] <FromDiscord> <Clonkk> Then there's also the issue of copy assignment being deleted in C++ causing all sort of codegen bugs
[13:50:07] <FromDiscord> <Clonkk> If Nim handles copy by calling the C++ version of the `=copy` hooks for instance, you'd avoid the codegen error (and most likely having a `=copy` that's not an error if copy assignment is deleted is a bug)
[13:50:52] <FromDiscord> <Clonkk> Currently, if `=copy` is declared as a {.error.}, the codegen can still generate C++ copy assignmet \:) (which of course doesn't compile)
[13:52:50] <FromDiscord> <haxscramper> Wait what
[13:54:02] <FromDiscord> <haxscramper> We can double down on dirty hacks and put emit everywhere, maybe it will provide a solution that is at least correct wrt. to runtime behavior
[13:54:13] *** Joins: krux02 (~krux02@p200300ca8f0d0300fb0f49e84c91d652.dip0.t-ipconnect.de)
[13:55:21] <FromDiscord> <haxscramper> Sink is an optimization, while in cxx move constructor is guaranteed to be called, something like that
[13:55:36] <FromDiscord> <haxscramper> Nim uses sink optionally
[13:55:49] <FromDiscord> <haxscramper> I don't know how reliable the rules are
[13:56:17] <FromDiscord> <haxscramper> For example when passing to a function, depending on the further uses of a given object it might be either a copy or a sink
[13:56:18] <FromDiscord> <haxscramper> And so on
[13:56:35] <FromDiscord> <haxscramper> We are talking about assignment, but even in this case behavior is unclear to me
[13:57:45] <FromDiscord> <Clonkk> I thought the difference was that C++ gives you a syntax to explicitly do one of the other (i.e. DYI solution) while Nim estimates based on memory ownership, size of object (and maybe other heuristics) whether it can move or should copy ?
[13:58:27] <FromDiscord> <Clonkk> If it's optionnal then I don't understand sink parameters in function
[13:59:34] <FromDiscord> <haxscramper> Well, sink is an optimization, it cannot make your code more correct
[14:00:16] <FromDiscord> <haxscramper> So cxx might use it for unique pointers and other things to explicitly transfer ownership, I don't think nim can do this
[14:00:55] <FromDiscord> <haxscramper> I need to write some basic test suite that shows these differences, I'm not really sure myself how they are handled
[14:05:12] <FromDiscord> <Clonkk> Okay
[14:05:32] <FromDiscord> <Clonkk> This probably also means that mapping `=destroy` to the object destructor is actually wrong
[14:05:53] <FromDiscord> <Clonkk> You then have a Nim hoo kthat explicitly calls a C++ destructor when C++ destructor would already be called
[14:06:14] <FromDiscord> <Clonkk> (which can still work if Nim generate hooks in the right place, but there'sn oguarantee)
[14:15:49] <FromDiscord> <haxscramper> It would be much better if nim had precise tools to manage object lifetimes, like default or explicit construction, "require moved argument", "disallow copy" and so on
[14:41:17] <FromDiscord> <tandy> what would `sizeof(MD5Buffer = array[0..63, uint8])` output? 63?
[14:41:36] <FromDiscord> <enthus1ast> 64
[14:41:44] <FromDiscord> <tandy> ok ty
[14:42:07] <FromDiscord> <enthus1ast> at least array[0..63, uint8] is 64 byte
[14:42:25] <FromDiscord> <enthus1ast> not sure if you can assign in sizeof
[14:51:57] <FromDiscord> <tandy> does this look right?
[14:51:57] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3B5G
[14:52:12] <FromDiscord> <tandy> i took code from nimSetMem
[14:52:50] <FromDiscord> <hotdog> @PMunch should I test this in my wrapper? Or is it in progress? I've set up your branch but can't figure out how to add the callback
[14:52:52] <FromDiscord> <tandy> sent a code paste, see https://paste.rs/rbb
[14:53:04] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3B5H
[14:54:35] <PMunch> @hotdog, please do :) Here is an example on how the callback can be added: https://github.com/PMunch/futhark/pull/3/files
[14:55:23] <PMunch> With line 13 obviously not commented out :P
[14:57:47] <FromDiscord> <hotdog> @PMunch ah I think it's just picking up the cached version, even though the callback has changed
[14:58:11] <FromDiscord> <hotdog> Is there a flag to ignore the cache?
[14:58:21] <PMunch> Ah yes, you need to reset your futhark cache for the callback to be called again. I guess I should add that to the README..
[14:58:44] <PMunch> No flag as of right now, simply delete the futhark_<hash>.nim file from your nimcache directory
[14:59:27] <PMunch> I wanted to have it ignore the cache when -f was passed. But I couldn't figure out how
[15:01:18] <FromDiscord> <hotdog> Gotcha
[15:02:18] <FromDiscord> <hotdog> Might be worth hashing the callback proc and using that in the cache too. Not sure if there's something in stdlib
[15:03:58] <PMunch> Hmm, yes that would be a good idea..
[15:04:17] <PMunch> Not entirely sure I can cache a proc though
[15:04:25] <PMunch> Or hash a proc rather
[15:04:40] <PMunch> Added a switch to master now that prevents cache usage
[15:05:15] <PMunch> `git fetch --all && git rebase master` should bring them into the branch you're on
[15:06:03] <FromDiscord> <hotdog> @PMunch never used it, but this may work - https://nim-lang.org/docs/macros.html#symBodyHash%2CNimNode
[15:06:17] <PMunch> I also force pushed it over the branch now
[15:06:34] <FromDiscord> <hotdog> In reply to @PMunch "Added a switch to": Cool
[15:06:58] <PMunch> Question is just if I actually get the proc as a symbol
[15:08:26] <FromDiscord> <hotdog> Ah
[15:14:33] <PMunch> Yeah I just get an error saying that `renameCallback` is of type RenameCallback while it expects a NimNode
[15:24:25] *** Joins: Vladar (~Vladar@46.162.2.53)
[15:30:20] *** Quits: max22- (~maxime@lfbn-ren-1-762-224.w81-53.abo.wanadoo.fr) (Ping timeout: 265 seconds)
[15:34:15] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[15:36:02] *** Quits: supakeen (~user@python/site-packages/supakeen) (Quit: WeeChat 3.3)
[15:36:30] *** Joins: supakeen (~user@python/site-packages/supakeen)
[15:37:57] *** Joins: neurocyte0132889 (~neurocyte@92.119.10.104)
[15:37:57] *** Quits: neurocyte0132889 (~neurocyte@92.119.10.104) (Changing host)
[15:37:57] *** Joins: neurocyte0132889 (~neurocyte@user/neurocyte)
[15:40:39] <FromDiscord> <hotdog> @PMunch in the rename callback do I need to handle name collisions? Or will Futhark still do that with the output of the rename cb?
[15:41:32] <PMunch> Futhark will still run it through it's renaming scheme
[15:41:38] <PMunch> its*
[15:41:42] <FromDiscord> <hotdog> Ok cool
[15:42:10] <PMunch> So first your callback is run, then it removes _ and __, normalizes the identifier, and adds kind and hash if there are collisions
[15:42:25] <FromDiscord> <hotdog> I see
[15:42:57] <FromDiscord> <hotdog> I get an error now, on an enum type that does not get renamed by my callback: `futhark.nim(612, 22) Error: type expected, but symbol 'Jackoptionsenum' has no type.`
[15:43:34] <FromDiscord> <hotdog> Removing the callback stops the error, but the callback does not modify that name at all
[15:45:13] <PMunch> Hmm, do you return the "name" argument in your callback?
[15:45:23] <FromDiscord> <hotdog> Yeah
[15:45:29] <PMunch> Try simply running the compiler again
[15:45:34] <PMunch> Without making any changes to your file
[15:45:40] <FromDiscord> <hotdog> Same each time
[15:46:00] <PMunch> Without the futharkReload flag
[15:46:13] <FromDiscord> <hotdog> If I don't clear the cache, I get `futhark_F7EB25CF51BFC97C.nim(171, 5) Error: undeclared identifier: 'Jackoptionsenum_18930414'`
[15:46:14] <PMunch> futharkRebuild*
[15:46:19] <PMunch> Ah okay
[15:46:27] <PMunch> So it's not the weird bug I saw earlier
[15:46:46] <PMunch> Can you share your wrapper?
[15:47:23] <FromDiscord> <hotdog> Yeah let me clean it up and I'll push it
[15:47:24] <FromDiscord> <hotdog> 2m
[15:48:55] <PMunch> Just pushed a small commit that adds the hash of the callback to the file, thanks for that suggestion!
[15:49:22] <FromDiscord> <hotdog> Oh cool!
[15:49:36] <PMunch> Figured out a way to do it :)
[15:50:23] <FromDiscord> <hotdog> Yeah I just had a look to see how you did it
[15:50:36] <FromDiscord> <hotdog> Good macro wrangling
[15:53:57] <PMunch> Haha, that's my jam :P
[15:58:48] *** Joins: NeoCron (~NeoCron@p200300c4cf18cd00433f901d5cf4f3d0.dip0.t-ipconnect.de)
[16:00:22] <FromDiscord> <hotdog> Can I pass a dynamic path for the headers?
[16:00:43] <FromDiscord> <hotdog> If so I'll stick the headers I've got in the repo so you can test the same ones I'm using
[16:01:36] <FromDiscord> <hotdog> Oh ignore that, I was doing something dumb
[16:03:19] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87)
[16:05:31] <FromDiscord> <hotdog> @PMunch https://github.com/geotre/jack/blob/main/src/jack.nim
[16:09:43] *** Joins: arkurious (~arkurious@user/arkurious)
[16:24:38] <PMunch> Hmm, after adding the path to my C library files I get an Error: Unknown kind in findAlias: {"kind":"invalid","value":"invalid?"} error
[16:25:03] <PMunch> Could you share your opir output in a paste?
[16:26:59] *** Joins: rockcavera (~rc@192.12.112.224)
[16:26:59] *** Quits: rockcavera (~rc@192.12.112.224) (Changing host)
[16:26:59] *** Joins: rockcavera (~rc@user/rockcavera)
[16:27:38] <PMunch> It seems like it goofes on a packed pragma
[16:27:44] <PMunch> goofs*
[16:27:52] <PMunch> Have you seen similar issues?
[16:29:01] <FromDiscord> <hotdog> If I remove the renamecallback, it compiles fine
[16:29:04] <FromDiscord> <hotdog> Do you get the same?
[16:29:34] <FromDiscord> <hotdog> In reply to @PMunch "Hmm, after adding the": I haven't seen this error
[16:30:01] <PMunch> Nope I just get that error
[16:30:06] <PMunch> But what C sources are you using?
[16:30:22] <FromDiscord> <hotdog> What do you mean?
[16:30:48] <PMunch> Just compiling the code you uploaded gives me an error from Opir: Fatal: 'stddef.h' file not found
[16:31:07] <PMunch> To fix that I must give a path to either clang or GCC C sources
[16:32:37] <PMunch> What platform are you on?
[16:32:47] <FromDiscord> <hotdog> Ah it's an ubuntu container
[16:33:10] <FromDiscord> <hotdog> with libjack-dev
[16:33:31] <PMunch> Hmm
[16:33:41] <PMunch> Which C compiler?
[16:33:47] <PMunch> And is it using musl?
[16:34:04] <FromDiscord> <hotdog> gcc
[16:34:06] <FromDiscord> <hotdog> No musl
[16:34:23] <PMunch> Which GCC version?
[16:34:34] <FromDiscord> <hotdog> 9.3.0
[16:35:12] <PMunch> And Jack version?
[16:36:23] <FromDiscord> <hotdog> 0.125.0 I think
[16:38:52] <PMunch> Uhm, mine is 1.9.19
[16:38:58] <PMunch> According to pacman
[16:39:07] <FromDiscord> <hotdog> Interesting
[16:39:12] <PMunch> That's jack2
[16:56:10] <FromDiscord> <tandy> is it posible to make https://github.com/nim-lang/Nim/lib/system/memory.nim work on js backend?
[16:57:53] <PMunch> Okay, implemented packed structures now @hotdog. It compiles, but using the rename callback gives me the same error you got
[16:58:26] <FromDiscord> <hotdog> In reply to @PMunch "Okay, implemented packed structures": Cool
[16:59:21] <FromDiscord> <hotdog> The renamer that runs after the callback should handle any collisions, so in theory no renaming should cause an error as long as it's a valid nim identifier right?
[16:59:43] <FromDiscord> <hotdog> I am poking around the futhark code a bit to try and understand
[17:00:13] <PMunch> Hmm, I think I see what has happened
[17:01:23] <PMunch> So you rename jack_options_t to JackOptions, this would normally be called jackoptionst by the renamer. Then JackOptions from the C code gets renamed to JackOptions_enum since it now collides with this identifier. But somewhere in the code this gets lost
[17:02:02] <PMunch> As you can see the enum JackOptions is created in the futhark output, it should be called JackOptions_enum
[17:04:16] <PMunch> Easy fix, it was simply that enum names was never passed through the name sanitizer
[17:05:50] *** Joins: max22- (~maxime@2a01cb088335980046e4815fde386135.ipv6.abo.wanadoo.fr)
[17:11:57] <FromDiscord> <tandy> https://github.com/tandy-1000/Nim/commit/b6eba2850ec79e41c4fc6ee6b5f57be365adc2f0
[17:12:01] <FromDiscord> <tandy> is this completely stupid
[17:15:20] <krux02> yes
[17:15:26] <FromDiscord> <Rika> imo define the xxmem proc bodies in the respective procs of memory.nim (behind defined(js))
[17:15:29] <FromDiscord> <Rika> no need to change md5
[17:15:46] <FromDiscord> <Rika> i have no idea whether what your procs do what  they actually do in js
[17:16:15] <FromDiscord> <tandy> me neither‚Üµ(@Rika)
[17:16:26] <FromDiscord> <Rika> then that is stupid
[17:17:07] <FromDiscord> <tandy> i was thinkin about doing that‚Üµ(@Rika)
[17:17:19] <FromDiscord> <tandy> but i realised there must be a reason why that wasnt done already
[17:17:25] <krux02> any pointer type casting that isn't just base-class child-class casting is doomed to fail on js
[17:17:32] <FromDiscord> <Rika> yes, because how does xxmem work in js???
[17:17:49] <FromDiscord> <tandy> hmm
[17:18:01] <krux02> what is xxmem?
[17:18:12] <FromDiscord> <tandy> copyMem, zeroMem
[17:18:15] <FromDiscord> <tandy> setMem
[17:18:18] <krux02> it doesn't
[17:18:37] <FromDiscord> <tandy> how the heck do i make this work then \:x
[17:18:46] <FromDiscord> <Rika> best just reimplement them
[17:19:02] <krux02> you have to find workarounds that don' use copyMem, zeroMem etc
[17:19:03] <FromDiscord> <Rika> or wrap, though i doubt youd get that in the stdlib that way
[17:19:19] <FromDiscord> <tandy> hmm
[17:19:26] <FromDiscord> <tandy> how do i go about doin that
[17:19:26] <krux02> js has a very different memory layout than tha C backend
[17:19:34] <FromDiscord> <tandy> its hard also cos u cant easily test js stuff
[17:19:45] <krux02> why not?
[17:19:50] <FromDiscord> <Rika> you can? just run it in a browser
[17:20:06] <FromDiscord> <tandy> tru i gues‚Üµ(@Rika)
[17:20:07] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[17:20:55] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3B6i
[17:21:04] <FromDiscord> <tandy> in streams they do this
[17:22:50] <FromDiscord> <Rika> that looks wrong
[17:22:53] <krux02> tandy: you can set elements to 0 with a loop
[17:23:00] <krux02> insdead of useing zeroMem
[17:23:51] <FromDiscord> <tandy> i think @dom96  did it
[17:23:59] <FromDiscord> <tandy> thats what i do‚Üµ(<@709044657232936960_krux02=5b=49=52=43=5d>)
[17:24:18] <FromDiscord> <tandy> well what memory.nim does
[17:24:27] <FromDiscord> <tandy> sent a code paste, see https://play.nim-lang.org/#ix=3B6j
[17:25:38] <PMunch> @hotdog, not sure if you saw, but I updated the PR with a fix for your issue
[17:25:58] <PMunch> Thanks for finding it, pretty trivial bug that should never have been added
[17:26:01] <FromDiscord> <Rika> dont pass pointers in js
[17:26:54] *** Quits: kinkinkijkin (~pch@66.49.131.33) (Remote host closed the connection)
[17:28:31] <krux02> tandy instead of zeroMem you can use `reset`
[17:28:37] *** Joins: pch (~pch@66.49.131.33)
[17:28:42] <FromDiscord> <tandy> hm il try that
[17:28:54] *** Quits: pch (~pch@66.49.131.33) (Remote host closed the connection)
[17:29:28] *** Joins: pch (~pch@66.49.131.33)
[17:30:32] <FromDiscord> <tandy> need to get rid of the copyMemJs stuff to make it compile now
[17:31:08] <FromDiscord> <hotdog> @PMunch I'm back just saw it! Nice one
[17:31:33] <PMunch> Hopefully it'll work for you now :)
[17:31:45] <krux02> tandy, you also need to get rid of the `cstring` + `len` arguments and convert it to an openarray[byte] somehow
[17:31:59] <krux02> `cstring` + `len` doesn't work on js
[17:32:07] <PMunch> But I have to run, so just leave your feedback on the issue if anything else comes up :)
[17:32:08] *** Quits: PMunch (~PMunch@vpn.dualog.com) (Quit: Leaving)
[17:32:50] <FromDiscord> <hotdog> In reply to @PMunch "Hopefully it'll work for": Just rewriting my code that uses the lib to see if it all works
[17:33:03] <FromDiscord> <hotdog> In reply to @PMunch "But I have to": Will do! Cheers
[17:33:11] <krux02> cstring used to be a string for the c backend, but smartassery development thought, hey cstring can mean `compatible string` not `c string` and it is whatever the backend things a string is.
[17:33:33] <krux02> that ends up in code that is written for one backend in mind, that is completely broken on the other
[17:34:11] *** Quits: rockcavera (~rc@user/rockcavera) (Remote host closed the connection)
[17:36:28] <FromDiscord> <Rika> why the hell does cstring not work on js
[17:36:35] <FromDiscord> <Rika> if its "meant" to mean compat string
[17:39:20] <FromDiscord> <tandy> omg‚Üµ(<@709044657232936960_krux02=5b=49=52=43=5d>)
[17:39:27] <FromDiscord> <tandy> maybe i just need to a wrap cryptojs
[17:39:40] <FromDiscord> <tandy> this is more effort than i thought
[17:42:21] <FromDiscord> <tandy> why the heck does lastfm api even need md5 bruh
[17:57:21] <FromDiscord> <Rika> thats strange ngl
[17:57:23] <krux02> Rike: it is not that cstring doesn't work on js. The problem is that it is something completely different on js
[17:57:33] <FromDiscord> <Rika> what is it on js?
[17:57:35] <krux02> @Rika, ^
[17:57:40] <FromDiscord> <Rika> yes im hee
[17:57:42] <FromDiscord> <Rika> here
[17:57:43] <krux02> is is a javascript string
[17:57:56] <FromDiscord> <Rika> whats the issue with that?
[17:57:59] <krux02> not the nim-string
[17:58:08] <krux02> as I explained
[17:58:25] <krux02> code written with c string usually expects to deal with a string from the C world
[17:58:34] <krux02> and that is something completeld different than a javascript string
[17:58:39] <krux02> not compatible at all
[17:58:47] <FromDiscord> <Rika> ah lol
[18:00:15] <krux02> you should convert everything to work with `openarray[byte]` and `array[byte]` instead of `cstring`
[18:00:30] <krux02> then things might work in the JS world.
[18:11:25] <FromDiscord> <tandy> hmm‚Üµ(<@709044657232936960_krux02=5b=49=52=43=5d>)
[18:20:51] <FromDiscord> <haxscramper> https://github.com/haxscramper/hcparse/issues/13 [Clonkk](https://matrix.to/#/@rf.c:matrix.org)
[18:20:59] <krux02> I looked a bit into md5 and tried to fix some of the copyMem stuff
[18:21:27] <krux02> the problem is there is some code that reinterprets an array uint8 as an array of uint32
[18:21:32] <krux02> that is tough in the js world
[18:21:57] <FromDiscord> <haxscramper> Maybe I wrote incorrect C++ or nim code for this example, so maybe they actually work the same way
[18:22:26] <FromDiscord> <haxscramper> But maybe not, which means we have more problems
[18:29:27] *** Joins: dukester (~dnormandi@node-1w7jr9ydqpxqblsm62c2zjhms.ipv6.telus.net)
[18:31:24] *** Parts: dukester (~dnormandi@node-1w7jr9ydqpxqblsm62c2zjhms.ipv6.telus.net) ()
[18:58:49] *** Quits: crem (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3) (Ping timeout: 252 seconds)
[19:01:07] *** Joins: crem (~crem@2a02:169:160a:1:9b30:962e:76eb:4bb3)
[19:12:18] <FromDiscord> <retkid> i think im doing typing wrong
[19:12:37] <FromDiscord> <retkid> all my types have fields which are non mandatory and i have to type the name of the key to make it
[19:12:47] <FromDiscord> <retkid> i assume you use functions to make it smoother
[19:13:01] <FromDiscord> <retkid> like for example
[19:13:09] <FromDiscord> <retkid> sent a code paste, see https://play.nim-lang.org/#ix=3B7j
[19:24:42] <FromDiscord> <Rika> what do you mean
[19:24:57] <FromDiscord> <retkid> `im afraid im doing this wrong
[19:25:00] <FromDiscord> <retkid> and theres a better way
[19:25:14] <FromDiscord> <Rika> we cant tell you whats wrong because we dont have context
[19:26:07] <FromDiscord> <retkid> theres nothng wrong
[19:26:15] <FromDiscord> <retkid> i just want to define a type with constructors
[19:26:32] <FromDiscord> <retkid> it has constructors but none are mandatory and when i create it i need to add the key
[19:26:40] <FromDiscord> <retkid> ie newtype(name : "xyz)
[19:26:49] <FromDiscord> <retkid> (edit) "newtype(name" => "``newtype(name" | ""xyz)" => ""xyz")``"
[19:26:57] <FromDiscord> <retkid> is this just how it is? or am i using the wrong tool
[19:27:10] <FromDiscord> <Rika> common practice is to make a proc
[19:27:18] <FromDiscord> <Rika> `initType(params here): Type`
[19:27:56] <FromDiscord> <retkid> I've done that for annoying types
[19:28:13] <FromDiscord> <retkid>  https://media.discordapp.net/attachments/371759389889003532/895701555666358293/unknown.png
[19:28:20] <FromDiscord> <retkid> I just feel kinda guilty about making them
[19:28:23] <FromDiscord> <retkid> i dunno
[19:28:40] <FromDiscord> <Rika> is there any reason you're making methos
[19:28:41] <FromDiscord> <Rika> (edit) "methos" => "methods"
[19:28:54] <FromDiscord> <retkid> oh those were the wrong procs
[19:29:25] <FromDiscord> <retkid> theres a reason but i decided not to comment my code so i dont know off the top of my head ü§°
[19:29:29] <FromDiscord> <retkid> (edit) "theres a reason but i decided not to comment my code so i dont know off the top of my head ... ü§°" 03added ""
[19:29:41] <FromDiscord> <retkid> by decided i meant neglected
[19:30:49] <FromDiscord> <retkid> the code in this file is uh
[19:30:54] <FromDiscord> <retkid> (edit) "uh" => "uh, not a quality I'm proud of"
[19:31:05] <FromDiscord> <haxscramper> if you need mandatory field init you can use `{.requiresinit.}`
[19:31:23] <FromDiscord> <retkid> Thank you!
[19:31:26] <FromDiscord> <haxscramper> But common approach is to make a code
[19:31:44] <FromDiscord> <retkid> I dunno if i got this from Java's oop
[19:31:53] <FromDiscord> <retkid> but i like to write things for other people who are maintaing my code
[19:31:56] <FromDiscord> <retkid> (edit) "maintaing" => "maintaining"
[19:32:22] <FromDiscord> <retkid> restricting certain things which shouldn't be done is good
[19:32:24] <FromDiscord> <haxscramper> Well, there is nothing wrong with the idea of requiring some fields to be explicitly initialized
[19:33:31] <FromDiscord> <retkid> oh god i gotta do database code
[19:33:39] <FromDiscord> <retkid> the pasta i will unleash upon my future self
[19:34:07] <FromDiscord> <retkid> im probably gonna use SQLite because thats the only one i vaguely understood
[19:35:17] <FromDiscord> <Rika> In reply to @retkid "restricting certain things which": its good to a point, if you can make something optional easily then do so
[19:37:24] *** Quits: asd (~noname@user/asd) (Ping timeout: 245 seconds)
[19:38:19] *** Quits: koltrast_ (~koltrast@h77-53-57-114.cust.a3fiber.se) (Quit: ZNC - http://znc.in)
[19:39:22] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[19:39:23] *** Joins: asd (~noname@user/asd)
[19:46:37] *** Quits: NeoCron (~NeoCron@p200300c4cf18cd00433f901d5cf4f3d0.dip0.t-ipconnect.de) (Remote host closed the connection)
[19:47:10] *** Joins: pro (~pro@user/pro)
[19:48:19] *** Quits: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se) (Ping timeout: 252 seconds)
[19:48:53] *** Joins: bkay (~beshr@78-72-246-187-no2006.tbcn.telia.com)
[19:49:14] *** Joins: NeoCron (~NeoCron@p200300c4cf18cd00433f901d5cf4f3d0.dip0.t-ipconnect.de)
[19:49:25] *** Quits: beshr (~beshr@user/beshr) (Ping timeout: 252 seconds)
[19:51:41] *** Quits: systemds1cks (~systemdsu@user/systemdsucks) (Ping timeout: 264 seconds)
[19:51:55] *** Joins: systemdsucks (~systemdsu@user/systemdsucks)
[19:56:31] *** Joins: koltrast (~koltrast@h77-53-57-114.cust.a3fiber.se)
[20:43:30] *** Quits: pro (~pro@user/pro) (Quit: WeeChat 3.3)
[20:50:27] <FromDiscord> <reilly> I'm trying to work with NimGL/IMGUI, but I'm missing `cimgui.dylib`. Where would be the best place to get this/How can I build this myself?
[20:51:06] <FromDiscord> <enthus1ast> from imgui site/repo ?
[20:51:43] <FromDiscord> <enthus1ast> could be that this is a c wrapper of their c++ api
[20:51:59] <FromDiscord> <Yardanico> In reply to @reilly "I'm trying to work": you can 1) use the C++ backend, then you won't need cimgui at all
[20:52:16] <FromDiscord> <Yardanico> 2) compile cimgui - it's actually referenced as a submodule of the nimgl/imgui repo, but you can build it yourself
[20:52:23] <FromDiscord> <Yardanico> https://github.com/nimgl/cimgui
[20:52:25] <nrds> <12R2D299> 4GitHub: 7"c-api for imgui (https://github.com/ocornut/imgui)"
[20:53:56] <FromDiscord> <gerwy> does nim has unions? or something like that
[20:55:07] <FromDiscord> <Yardanico> In reply to @Life Sucks "does nim has unions?": it does, but why do you need them? they're really only useful for C FFI
[20:55:08] <FromDiscord> <Yardanico> https://nim-lang.org/docs/manual.html#foreign-function-interface-union-pragma
[20:55:31] <FromDiscord> <Yardanico> you should use object variants in Nim instead
[20:56:18] <FromDiscord> <gerwy> im rewriting one python lib, i didn't understood all the code yet so i just wanted to rewrite the basics of it as true to the original as possible
[20:57:10] <FromDiscord> <Yardanico> can you show the python code?
[20:57:30] <FromDiscord> <Yardanico> python's union typehints are a quite different thing, you should've clarified that :P
[20:58:07] <FromDiscord> <Yardanico> if you mean https://docs.python.org/3/library/typing.html#typing.Union, to replicate that in Nim you need to use object variants or some modules that add some sugar to that as https://github.com/alaviss/union
[20:58:10] <nrds> <12R2D299> 4GitHub: 7"Anonymous unions in Nim"
[20:58:40] <FromDiscord> <gerwy> In reply to @Yardanico "can you show the": `def _getValue(self, source: dict, path: List[str]) -> Union[str, int, dict, None]:`
[20:58:46] <FromDiscord> <Yardanico> yes, as I said
[20:59:04] <FromDiscord> <Yardanico> but with 4 values like that you'll certainly need an object variant
[20:59:32] <FromDiscord> <Yardanico> ah actually no, alaviss' union still supports that (kind of)
[20:59:47] <FromDiscord> <gerwy> hmmm
[20:59:57] <FromDiscord> <Yardanico> but really you shouldn't try to translate this code as-is, it's pretty dynamic as that single _getValue function can return 4 different types (that's what "Union" typehint in Python means)
[21:00:10] <FromDiscord> <Yardanico> so this python _getValue can return either a str, an int, a dict, or None
[21:01:10] <FromDiscord> <Rika> You should refactor the api
[21:02:00] <FromDiscord> <gerwy> no no i its just for me to get the base, i know it wont work i just want to get grasp of it
[21:02:07] <FromDiscord> <gerwy> also its a method of class
[21:02:47] <FromDiscord> <gerwy> In reply to @Yardanico "so this python _getValue": yeah i know that, but idk how to do the same thing in Nim
[21:03:10] <FromDiscord> <Elegantbeef> https://nim-lang.org/docs/manual.html#types-object-variants
[21:03:14] <FromDiscord> <haxscramper> `dict` is another can-return-anything
[21:03:23] <FromDiscord> <haxscramper> there is no `dict` in nim
[21:03:37] <FromDiscord> <haxscramper> no dict equivalent\
[21:03:44] <FromDiscord> <Yardanico> yeah, that's true as well
[21:03:52] <FromDiscord> <Elegantbeef> It's dynamism you can only approximate it in Nim or use generics
[21:04:05] <FromDiscord> <gerwy> In reply to @haxscramper "there is no `dict`": i thought of using Table
[21:04:42] <FromDiscord> <Rika> not equal
[21:04:48] <FromDiscord> <Rika> you dont know what values are stored in that dict
[21:05:03] <FromDiscord> <Rika> unless you do, since you have the code
[21:05:47] <FromDiscord> <Yardanico> In reply to @Life Sucks "i thought of using": yeah, as others told, in Python dict is not limited to 1:1 type mapping
[21:07:55] <ehmry> is compile time iteration possible? I want to do `for i in 0..<tupleLen(tuple): f(tuple[i])`
[21:07:58] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87)
[21:08:38] <FromDiscord> <gerwy> hmm i mean i use this github repo as reference
[21:08:39] <FromDiscord> <gerwy>  https://media.discordapp.net/attachments/371759389889003532/895726829900554240/unknown.png
[21:08:42] <FromDiscord> <haxscramper> `std/typetraits`
[21:08:57] <FromDiscord> <Yardanico> In reply to @Life Sucks "": again, as I said, this is not official and not of it is correct info
[21:09:02] <FromDiscord> <Elegantbeef> Do you mean loop unrolling or just iterating over at compile time?
[21:09:05] <FromDiscord> <haxscramper> https://nim-lang.org/docs/typetraits.html‚Üµ(<@709044657232936960_ehmry=5b=49=52=43=5d>)
[21:09:42] <FromDiscord> <haxscramper> Also there is a `fieldPairs` that works with enums as well
[21:09:55] <FromDiscord> <Yardanico> (edit) "In reply to @Life Sucks "": again, as I said, this is not official and not ... of" 03added "all"
[21:09:56] <ehmry> Elegantbeef: loop unrolling, so that my `i` is const
[21:10:05] <FromDiscord> <gerwy> In reply to @Yardanico "again, as I said,": yeah  hmm, i prob need like a list of types of python and nim alternatives
[21:10:18] <FromDiscord> <Yardanico> In reply to @Life Sucks "yeah  hmm, i": there's no direct alternative to dict in Nim as others said
[21:10:32] <FromDiscord> <Yardanico> but if you debug your python program to know what types it stores in the dict you can find out how many of them it uses
[21:10:53] <FromDiscord> <Yardanico> but yeah, that code looks like it's pretty dynamic so you really should try adopting it to Nim from the start instead of doing 1:1 translation
[21:10:54] <ehmry> I need to modify the tuple fields, the typetrait iterators don't seem to do that
[21:11:17] <FromDiscord> <Elegantbeef> you can do `for x in tuple.fields`
[21:11:30] <FromDiscord> <Elegantbeef> Which already unrolls it
[21:11:39] <FromDiscord> <Rika> doesnt that give strings of the names of fields
[21:11:47] <FromDiscord> <Rika> what use is that in this case
[21:11:50] <FromDiscord> <Elegantbeef> Nope that's fieldpairs
[21:12:10] <ehmry> but are the field pairs modifiable?
[21:12:24] <FromDiscord> <Elegantbeef> https://play.nim-lang.org/#ix=3B7X
[21:13:33] <FromDiscord> <Elegantbeef> fields gives you a mutable reference to the fields of the object/tuple
[21:14:08] <FromDiscord> <Elegantbeef> And due to how this needs to work it's already unrolled afaik
[21:15:26] <ehmry> yea, that seems to work, thanks
[21:16:27] <FromDiscord> <sealmove> In reply to @richard stallmen(crazy GNU guy) "what does it have": nothing, just greeting the greek guy
[21:20:53] *** Quits: max22- (~maxime@2a01cb088335980046e4815fde386135.ipv6.abo.wanadoo.fr) (Ping timeout: 246 seconds)
[21:31:27] *** Joins: rockcavera (~rc@192.12.112.224)
[21:31:28] *** Quits: rockcavera (~rc@192.12.112.224) (Changing host)
[21:31:28] *** Joins: rockcavera (~rc@user/rockcavera)
[21:32:19] <ehmry> ugh, avoid `when compiles(‚Ä¶)` if you can
[21:32:54] <ehmry> its not fun to figure out what did or did not silently fail to compile
[21:40:09] <FromDiscord> <reilly> In reply to @Yardanico "you can 1) use": Last time I tried using the C++ backend, I could have sworn I needed a certain compiler flag in order for it to build correctly. In any case, with just `nim cpp gui.nim`, the build fails with the following message: `error: invalid argument '-std=gnu++14' not allowed with 'Objective-C'`‚ÜµI can also give you the whole command it was using if you want.
[21:40:20] <FromDiscord> <Yardanico> wait, objective c?
[21:40:26] <FromDiscord> <Yardanico> why is there objective c
[21:40:29] <FromDiscord> <reilly> Yeah, that's what I was thinking!
[21:40:41] <FromDiscord> <reilly> I'm doing `nim cpp gui.nim`, exactly like that.
[21:40:47] <FromDiscord> <Yardanico> idk, it works just fine for me
[21:41:29] <FromDiscord> <reilly> I can't imagine that it'd have anything to do with me being on MacOS, right?
[21:43:05] <FromDiscord> <reilly> sent a code paste, see https://play.nim-lang.org/#ix=3B8c
[21:45:47] <FromDiscord> <Yardanico> In reply to @reilly "I can't imagine that": most probably yes
[21:46:40] <FromDiscord> <Yardanico> @reilly i think it has to do with you using macOS specific stuff like cocoa
[21:46:45] <FromDiscord> <Yardanico> maybe you can't link C++ and Objective C code together
[21:47:32] <FromDiscord> <Yardanico> but yeah, then you have to use the C backend with cimgui
[21:48:04] <FromDiscord> <reilly> Well, I'm happy as long as I can get it working.
[21:48:48] <FromDiscord> <reilly> In reply to @Yardanico "most probably yes": I asked the wrong question, though. A better question would have been "Is this a NimGL, IMGUI, or Nim compiler thing?"
[21:49:13] <FromDiscord> <Yardanico> it's a macOS thing :)
[21:50:01] <FromDiscord> <Yardanico> see e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=1420165
[21:50:10] <FromDiscord> <Yardanico> In reply to @reilly "The command it's running": can you try cleaning the Nim cache?
[21:50:14] <FromDiscord> <Yardanico> and compiling with C++
[21:50:17] <FromDiscord> <Yardanico> backend
[21:50:39] <FromDiscord> <Yardanico> hm, what's nimgl/private/glfw/src/cocoa_init.m
[21:51:23] <FromDiscord> <Yardanico> ohh those .m files in nimgl are objective c
[21:52:30] <FromDiscord> <Yardanico> so yeah, sorry, I can't really help with that exact problem as I don't have macOS, but probably clang is not happy when you try to compile C++ together with Objective C code
[21:53:03] <FromDiscord> <reilly> I'll just build cimgui and call it a day.
[21:53:43] <FromDiscord> <reilly> The dylib just needs to be in the same directory as the executable, right?
[21:55:01] <FromDiscord> <reilly> Yay, a window! I don't even know if I'll need this, but I'm glad I have it.
[21:55:13] *** Joins: max22- (~maxime@2a01cb088335980045db91cc5b38a3ac.ipv6.abo.wanadoo.fr)
[22:07:19] <FromDiscord> <haxscramper> sent a code paste, see https://play.nim-lang.org/#ix=3B8r
[22:08:19] <FromDiscord> <haxscramper> 10^9 IQ moment, I forgot I can just do `when (expr is proc)`
[22:55:42] <FromDiscord> <retkid> is there any large examples of sqllite
[22:55:46] <FromDiscord> <retkid> in any repo
[22:56:10] <FromDiscord> <Yardanico> not sure what exactly do you want to learn with that - sqlite's interface is pretty simple
[22:56:15] *** Quits: neurocyte0132889 (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[22:56:16] <FromDiscord> <Yardanico> for example nimforum uses it https://github.com/nim-lang/nimforum
[22:56:18] <nrds> <12R2D299> 4GitHub: 7"Lightweight alternative to Discourse written in Nim"
[22:56:44] <FromDiscord> <retkid> i dont know sqllite specifically and the docs are kinda bad
[22:56:49] <FromDiscord> <retkid> so i just want a working example
[22:56:54] <FromDiscord> <Yardanico> you don't have to know sqlite specifically
[22:56:56] <FromDiscord> <Yardanico> it's just SQL
[22:57:01] <FromDiscord> <retkid> well i dont know any SQL
[22:57:03] <FromDiscord> <retkid> (edit) "well i dont know any SQL ... " 03added "at all"
[22:57:15] <FromDiscord> <Yardanico> then you can just search examples for SQL
[22:57:40] <FromDiscord> <retkid> that is very cool  thought it had different syntax
[22:57:41] <FromDiscord> <retkid> thank you
[22:58:01] <FromDiscord> <zidsal> has anyone managed to solve the windows issue where using choosenim 0.8.2 returns a 0 byte zip if you try and install 1.6?
[23:03:55] <FromDiscord> <zidsal> nevermind found the chat in internal, I was picking the wrong version, althought it still errors for other reasons which I shall investimigate
[23:04:24] <FromDiscord> <reilly> Compiling with the default C backend while wrapping a C++ library probably doesn't work... Right?
[23:14:56] *** Joins: Figworm (FiggyWitIt@user/figworm)
[23:18:47] <FromDiscord> <Jakes1403> Is there a way to get Nim Playground to not truncate console output?
[23:18:57] <FromDiscord> <Jakes1403> I think that's really stupid
[23:20:21] <FromDiscord> <Yardanico> In reply to @Jakes1403 "Is there a way": as in?
[23:20:42] <FromDiscord> <Yardanico> ah I see what you mean
[23:21:01] <FromDiscord> <Yardanico> well I think it's actually ok as you really rarely need very long output on the playground
[23:21:12] <FromDiscord> <Yardanico> you can try https://wandbox.org to  see if it's better for you
[23:21:23] <FromDiscord> <Jakes1403> I'm messing around rn bc I don't have a PC lol
[23:21:30] <FromDiscord> <Yardanico> well you don't need a PC for Nim
[23:21:36] <FromDiscord> <Yardanico> if you're on android you can install it in termux
[23:21:54] <FromDiscord> <Yardanico> it's not ideal, but certainly better than doing nim in nim playground on mobile
[23:27:45] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:115:38fe:cdac:ba87) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[23:34:54] *** Joins: vicfred (~vicfred@user/vicfred)
[23:39:27] <FromDiscord> <Jakes1403> I'll try that
