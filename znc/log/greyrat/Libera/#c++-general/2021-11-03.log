[00:06:17] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Remote host closed the connection)
[00:07:20] *** Joins: TheHermann (~TheHerman@gateway/tor-sasl/thehermann)
[00:07:33] *** Quits: proller (~p@2a02:6b8:b081:8818::1:37) (Remote host closed the connection)
[00:09:45] *** Joins: ss4 (~wootehfoo@user/wootehfoot)
[00:10:21] *** Joins: proller (~p@2002:50f0:d845:10:41a5:ca2e:e623:f4b4)
[00:12:54] *** Quits: wootehfoot (~wootehfoo@user/wootehfoot) (Ping timeout: 260 seconds)
[00:15:32] *** Quits: jokoon (~eio@2a01:e0a:542:e160:e9a2:e8db:f0e1:66fa) (Quit: Leaving)
[00:16:06] *** Quits: proller (~p@2002:50f0:d845:10:41a5:ca2e:e623:f4b4) (Ping timeout: 260 seconds)
[00:24:26] *** Quits: paul424 (~tom@ip-37-248-156-41.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[00:28:53] *** Joins: proller (~p@2a02:6b8:b081:6415::1:10)
[00:34:35] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 264 seconds)
[00:38:04] <yolo_> range-view support is very partial, will range-v3 be api-compatible of I want to use ranges/views in my code today(a swap-in replacement)?
[00:38:45] <rpav> can't you always just continue using range-v3
[00:40:06] <rpav> i think the problem with a lot of these is they end up being watered-down in std, and it's like why use std when the original library was more robust
[00:40:40] *** Joins: Tobbi_ (~Tobbi@2a02:8108:1240:48ec:2048:b194:1ba3:581)
[00:40:50] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:9569:e457:2f2b:5234) (Ping timeout: 260 seconds)
[00:40:53] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[00:41:06] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[00:44:48] *** Joins: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it)
[00:45:03] *** Tobbi_ is now known as Tobbi
[00:49:15] *** Quits: magla (~gelignite@55d4b8af.access.ecotel.net) (Quit: Stay safe!)
[00:51:07] *** Quits: ss4 (~wootehfoo@user/wootehfoot) (Read error: Connection reset by peer)
[01:02:39] <johnny> yolo_, it's not even api compatible in some places, check the bug reports
[01:03:48] <johnny> rpav, depends on where the watering down is though.  if the std implementation is a fine baseline, then it'd be nice to have the library just be sugar
[01:04:14] <johnny> add missing features, sand off some rough edges, that sort of thing
[01:04:29] <rpav> yeah except you can't extend std
[01:04:42] <johnny> well you can compose it
[01:05:13] <johnny> like it's possible to add say to<vector> or whatever they're gonna call it separately
[01:05:26] <rpav> yeah a select few
[01:05:34] <rpav> they're adding a conversion api? (finally?)
[01:05:48] <johnny> i think so
[01:05:57] <rpav> it'd be nice
[01:06:16] <rpav> i've been using to<T>(..) and cnv(x) as "explicit auto-conversion" for awhile
[01:06:19] <rpav> or x | to<y>
[01:06:58] <johnny> but the point is, it can be done separately
[01:07:15] <rpav> kinda
[01:07:33] <rpav> i mean you can't really change internal behaviors a whole lot, you can hack some utility stuff as necessary but often not the nicest thing
[01:08:33] <johnny> that depends on where the individual pain points are.  some of the missing stuff is just sugar,others might be more fundamental
[01:09:08] <johnny> like ranges diddn't necessarily need to ship enumerate or zip or even to, but it should be made in such a way that it's possible to do them
[01:09:37] <johnny> some of the issues are about the first, others are about the second. the ones that are about the second, are harder to fix by lib authors of course
[01:10:32] <johnny> i think the waters get muddied a bit when you have a library that implements ranges, and concepts, and also extensions beyond what's in the std, all in the same place
[01:11:11] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 264 seconds)
[01:11:26] <johnny> there have been bugs in which the concepts implemented by ranges-v3 weren't correct for example
[01:11:57] <johnny> it makers it harder for folks like to me to pin down where the problems are
[01:13:46] *** Quits: DSpider (~DSpider@82.79.237.7) (Quit: Leaving)
[01:17:02] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[01:21:52] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[01:23:34] *** Quits: CodeMouse92 (~CodeMouse@user/codemouse92) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[01:28:09] <yolo_> range-v3 claims no back-compatability will be assured, unless you use range-v3::cpp20
[01:28:26] <yolo_> just installed it and see how that goes
[01:33:10] <johnny> but even so, in the bug reports for some implementation eric says "Yeah it should be like X, but i don't have time"
[01:34:30] <yolo_> i hope all oss projects, can use some license like: if you're big and rich and use my free stuff to make even more money, pay me a bit. to keep the valuable projects alive in the long run
[01:35:36] <yolo_> everything should have a pricing model including OSS projects: free for individual/other-OSS-projects and even free for small teams, but charge a bit for medium size company, charge more for large corps. In the end everyone wins.
[01:36:21] <yolo_> one reason I switched away from doctest(and back) is the author no longer has time, and nobody else picked up the work
[01:36:23] *** Quits: kenanmarasli (~kenanmara@user/kenanmarasli) (Quit: Leaving)
[01:37:28] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:37:36] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:37:36] *** ChanServ sets mode: +v npaperbot
[01:38:55] *** Quits: AmR (~AmREiSa@41.232.235.167) (Ping timeout: 268 seconds)
[01:41:21] <yolo_> hold on, g++-11 -std=c++20 can actually compile the ranges-view snippets I wrote a few months back, looks like there are more support from g++11
[01:41:41] <yolo_> maybe I do not ned range-v3 then
[01:49:54] <yolo_> nope range-v3 provides way more stuff than c++11 has, so yes to range-v3
[01:50:19] <johnny> yolo_, the licensing part isn't the problem so much as a way to provide payments and have contracts
[01:51:06] <johnny> that's why you only really see it for bigger projects or folks who actually have a company around their work, like a consultancy
[01:51:28] <johnny> stuff like github sponsors helps at least part of it (as long as you're willing to let them have a cut)
[01:51:49] <johnny> but you cant' just have a contract wth no enforcement mechanism
[01:54:53] *** Joins: chozorho (~chozorho@2601:146:300:c30::fdcf)
[01:58:00] *** Joins: gggpkm (~gggpkm@123.113.191.190)
[02:04:40] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[02:07:10] *** Quits: gggpkm (~gggpkm@123.113.191.190) (Read error: Connection reset by peer)
[02:09:36] *** Joins: emerent_ (~quassel@p200300cd574855c4ba27ebfffed28a59.dip0.t-ipconnect.de)
[02:09:36] *** emerent is now known as Guest376
[02:09:36] *** emerent_ is now known as emerent
[02:09:58] *** Quits: Guest376 (~quassel@p200300cd574855f2ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[02:16:39] *** Quits: jkaye (~jkaye@BELVEDERE-T.ear2.Denver1.Level3.net) (Quit: Leaving)
[02:16:39] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[02:17:21] *** Parts: blackout69 (~blackout6@net-31-156-121-187.cust.vodafonedsl.it) ()
[02:25:30] *** Quits: eck (~root@user/eck) (Quit: PIRCH98:WIN 95/98/WIN NT:1.0 (build 1.0.1.1190))
[02:26:06] *** Joins: eck (~root@user/eck)
[02:28:46] *** Joins: John99 (~johnny@87.200.94.90.dynamic.jazztel.es)
[02:34:00] *** Quits: spaceangel (~spaceange@ip-89-176-181-220.net.upcbroadband.cz) (Remote host closed the connection)
[02:38:51] *** Quits: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net) (Quit: WeeChat 3.3)
[02:41:47] *** Quits: pakcjo (~pakcjo@user/pakcjo) (Ping timeout: 264 seconds)
[02:43:09] *** Quits: Trollmann (~Trollmann@user/trollmann) (Ping timeout: 268 seconds)
[02:44:36] <yolo_> s/c++11/g++11/
[02:48:24] *** Joins: pakcjo (~pakcjo@user/pakcjo)
[02:52:35] *** Joins: ferdna (~ferdna@user/ferdna)
[02:53:22] *** Joins: Trollmann (~Trollmann@user/trollmann)
[02:53:34] *** Quits: John99 (~johnny@87.200.94.90.dynamic.jazztel.es) (Remote host closed the connection)
[02:54:08] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[03:01:55] *** Quits: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net) (Quit: Going offline, see ya! (www.adiirc.com))
[03:07:41] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.3)
[03:18:23] *** Joins: pull (~tcz@91.150.165.88)
[03:24:03] *** Joins: markong (~kvirc@213.146.188.203)
[03:25:47] *** Joins: X-Scale` (~ARM@50.77.166.178.rev.vodafone.pt)
[03:26:50] *** Quits: X-Scale (~ARM@46.50.2.72) (Ping timeout: 268 seconds)
[03:28:14] *** X-Scale` is now known as X-Scale
[03:32:48] *** Quits: pull (~tcz@91.150.165.88) (Quit: Czesc)
[04:01:22] *** Quits: Dragoon (~Dragoon@user/dragoon) (Ping timeout: 268 seconds)
[04:03:50] *** Quits: proller (~p@2a02:6b8:b081:6415::1:10) (Ping timeout: 268 seconds)
[04:05:31] *** Joins: Mooncairn (~mooncairn@user/mooncairn)
[04:06:56] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 268 seconds)
[04:08:15] *** Joins: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse)
[04:12:02] *** Quits: Rayke (rayke@2600:3c03::f03c:92ff:fe86:498b) (Quit: WeeChat 3.3)
[04:12:34] *** Joins: Dragoon (~Dragoon@user/dragoon)
[04:14:20] *** Joins: Rayke (rayke@user/rayke)
[04:14:39] *** Quits: Dragoon (~Dragoon@user/dragoon) (Read error: Connection reset by peer)
[04:17:17] *** Joins: proller (~p@2002:50f0:d845:10:41a5:ca2e:e623:f4b4)
[04:17:35] *** Quits: TheHermann (~TheHerman@gateway/tor-sasl/thehermann) (Quit: Leaving)
[04:22:41] *** Joins: Dragoon (~Dragoon@user/dragoon)
[04:23:44] *** Quits: Dragoon (~Dragoon@user/dragoon) (Read error: Connection reset by peer)
[04:24:26] *** Joins: Dragoon (~Dragoon@user/dragoon)
[04:24:26] *** Quits: Dragoon (~Dragoon@user/dragoon) (Read error: Connection reset by peer)
[04:43:12] *** Joins: Dragoon (~Dragoon@user/dragoon)
[04:59:51] *** Quits: GunqqerFriithian (~gunqqer@gateway/vpn/pia/gunqqerfriithian) (Killed (NickServ (GHOST command used by Friithian!gunqqer@friithian.dev)))
[05:00:04] *** Joins: GunqqerFriithian (~gunqqer@gateway/vpn/pia/gunqqerfriithian)
[05:12:02] *** Quits: ARoxdale (~ARoxdale@84.203.31.229) (Ping timeout: 260 seconds)
[05:16:00] *** Joins: The_Jag_ (~The_Jag@host-79-52-47-230.retail.telecomitalia.it)
[05:18:58] *** Quits: The_Jag (~The_Jag@host-79-52-47-230.retail.telecomitalia.it) (Ping timeout: 260 seconds)
[05:25:38] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[05:32:03] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[05:33:42] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[05:35:03] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (calcium.libera.chat (Nickname regained by services)))
[05:35:03] *** vinleod is now known as vdamewood
[05:35:38] *** Joins: X-Scale` (~ARM@46.50.0.1)
[05:35:44] *** Quits: X-Scale (~ARM@50.77.166.178.rev.vodafone.pt) (Ping timeout: 268 seconds)
[05:35:50] *** Quits: peepsalot (~peepsalot@openscad/peepsalot) (Read error: Connection reset by peer)
[05:36:19] *** Joins: frost (~frost@user/frost)
[05:37:07] *** Joins: peepsalot (~peepsalot@openscad/peepsalot)
[05:37:28] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:37:36] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:37:36] *** ChanServ sets mode: +v npaperbot
[05:37:55] *** X-Scale` is now known as X-Scale
[05:54:19] *** Joins: sprout_ (~quassel@2a02:a467:ccd6:1:58cd:ccc2:f66c:e3b)
[05:55:50] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:8872:6fff:30a7:51e0) (Ping timeout: 260 seconds)
[06:05:33] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:5c72:3651:6c72:83ef) (Quit: Quit)
[06:13:48] *** Quits: celphi (sid97751@user/celphi) (Quit: Updating details, brb)
[06:13:57] *** Joins: celphi (sid97751@user/celphi)
[06:16:04] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Remote host closed the connection)
[06:17:16] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[06:19:07] *** Joins: The_Jag (~The_Jag@host-79-33-167-46.retail.telecomitalia.it)
[06:21:58] *** Quits: The_Jag_ (~The_Jag@host-79-52-47-230.retail.telecomitalia.it) (Ping timeout: 268 seconds)
[06:24:06] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.3)
[06:34:40] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[06:44:47] *** Quits: ShiftyLogic (~shiftylog@66.115.146.16) (Ping timeout: 268 seconds)
[06:50:36] *** Joins: AmR (~AmREiSa@41.232.235.167)
[06:56:33] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[06:57:03] *** Joins: supernova (~quassel@2405:9800:ba11:6207:c2d5:8022:5655:db60)
[06:57:48] *** Quits: Hello71 (~Hello71@wireguard/contributor/hello71) (Ping timeout: 276 seconds)
[06:58:33] *** Quits: kraa (~kraa@107-190-7-216.cpe.teksavvy.com) (Quit: Leaving)
[07:05:22] *** Quits: supernova (~quassel@2405:9800:ba11:6207:c2d5:8022:5655:db60) (Ping timeout: 260 seconds)
[07:11:20] *** Quits: sprout_ (~quassel@2a02:a467:ccd6:1:58cd:ccc2:f66c:e3b) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:11:37] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:58cd:ccc2:f66c:e3b)
[07:15:05] *** Joins: supernova (~quassel@2405:9800:ba11:6207:d905:cfb3:917b:115a)
[07:30:02] *** Quits: emerent (~quassel@p200300cd574855c4ba27ebfffed28a59.dip0.t-ipconnect.de) (Remote host closed the connection)
[07:30:10] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[07:31:16] *** Joins: emerent (~quassel@p200300cd574855c4ba27ebfffed28a59.dip0.t-ipconnect.de)
[07:39:52] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[08:03:09] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:05:17] *** Quits: Mooncairn (~mooncairn@user/mooncairn) (Quit: Quitting)
[08:05:35] *** Quits: chozorho (~chozorho@2601:146:300:c30::fdcf) (Ping timeout: 268 seconds)
[08:07:09] *** Joins: chozorho (~chozorho@c-69-250-72-103.hsd1.md.comcast.net)
[08:08:08] *** Joins: engest (~engest@50.126.101.161)
[08:09:18] *** Quits: supernova (~quassel@2405:9800:ba11:6207:d905:cfb3:917b:115a) (Ping timeout: 260 seconds)
[08:14:31] *** Joins: supernova (~quassel@2405:9800:ba11:6207:f92f:ed3:2fbd:3843)
[08:29:50] *** Quits: supernova (~quassel@2405:9800:ba11:6207:f92f:ed3:2fbd:3843) (Ping timeout: 260 seconds)
[08:30:42] *** Joins: ShiftyLogic (~shiftylog@66.115.146.16)
[08:35:44] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[08:35:47] *** Quits: ShiftyLogic (~shiftylog@66.115.146.16) (Ping timeout: 268 seconds)
[08:39:38] *** Quits: nikko77 (~nikko77@2001:1388:5ca1:c29e:5320:9bb7:70fa:6859) (Quit: WeeChat 3.3)
[08:40:03] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[08:40:06] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:2048:b194:1ba3:581) (Ping timeout: 260 seconds)
[08:40:43] *** Quits: engest (~engest@50.126.101.161) (Ping timeout: 268 seconds)
[08:41:05] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (molybdenum.libera.chat (Nickname regained by services)))
[08:41:05] *** vinleod is now known as vdamewood
[09:08:49] *** Quits: ravan (~ravan@user/ravan) (Remote host closed the connection)
[09:14:17] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[09:19:18] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[09:22:29] *** Quits: great_taste (~great_tas@190.32.235.20) (Quit: Client closed)
[09:25:04] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[09:31:58] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[09:37:29] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:37:37] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:37:37] *** ChanServ sets mode: +v npaperbot
[09:38:40] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[09:41:14] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[09:46:42] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[09:46:54] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[09:49:14] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Remote host closed the connection)
[09:49:51] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[09:49:54] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[09:55:44] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[09:58:30] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[09:58:51] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[09:59:45] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[10:01:08] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:02:04] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[10:04:10] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[10:05:54] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:07:29] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[10:08:24] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:08:36] <computerquip> TIL TOML apparently has a date type... wtf
[10:08:46] <computerquip> Seems a bit random but okay.
[10:10:46] *** Quits: The_Jag (~The_Jag@host-79-33-167-46.retail.telecomitalia.it) (Quit: The_Jag)
[10:13:57] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:17:37] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:21:15] *** Joins: defefe (~defefe@178.49.152.42)
[10:25:35] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:25:50] *** Joins: Juliu (~Juliu@2a02:810b:c640:3ec0:149b:da64:4188:de2d)
[10:27:30] *** Joins: euouae (~euouae@user/euouae)
[10:28:25] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:28:26] <euouae> Hello I have a question about programs exiting when nonrecoverable exceptions are thrown: Should one catch it and report a nice error message to the user or let it hang up with .what()? Especially in the context of hooks already in place that dump trace logs and other info to the user.
[10:29:01] <euouae> I'm of the opinion that the exception doesn't need to be handled further but someone asked me to instead show a nice message, so I'm curious what opinions are there
[10:29:24] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[10:31:11] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:32:44] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[10:34:33] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:34:35] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[10:35:32] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:35:58] <computerquip> I'm not sure what the general consensus is but at least guidelines like AUTOSAR (Rule A15-3-3 for reference) require you catch all exceptions and then abort appropriately. They have a rationale of making sure the stack is unwound correctly and having consistency in termination of the program.
[10:38:42] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[10:39:16] <johnny> you can also set the approprate exit code
[10:44:36] <AmR> Can I Have some help with regex
[10:44:51] <TinoDidriksen> Ask...
[10:45:16] <AmR> I Have this " std:string dataBaseScriptStr = regex_replace( dataBaseScriptStr, regex( R"(\\bbegin.transaction.*;|\\bcommit.*;|\\/\\*(.|\\r\\n|\\r|\\n)*?\\*\\/|^--.*\\n|\\t|\\r\\n|\\r|\\n)" ), " " ); "
[10:46:22] <AmR> I try Remove \r and \n
[10:46:31] <AmR> But That not working.
[10:48:08] <AmR> I Use this with sql
[10:48:18] <TinoDidriksen> \\ inside R"()" is wrong. Only use single \
[10:48:59] <TinoDidriksen> << R"(\b\r\n\s\w\d)"
[10:49:00] <geordi> \b\r\n\s\w\d
[10:49:40] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:50:13] <TinoDidriksen> And why are you escaping / at all?
[10:54:41] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[10:54:52] <euouae> thank you. Good point about the error code that is returned to the shell
[10:55:28] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[10:55:30] <euouae> Also not surprising that autosar requires all exceptions to be caught :) I guess there's different standards for code that runs on carsa :P
[10:55:32] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Remote host closed the connection)
[10:55:33] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[10:57:50] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:59:06] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[11:01:40] *** Joins: vinleod (~vdamewood@fedora/vdamewood)
[11:01:44] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[11:02:28] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Killed (calcium.libera.chat (Nickname regained by services)))
[11:02:28] *** vinleod is now known as vdamewood
[11:03:22] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[11:07:24] *** Joins: supernova (~quassel@2405:9800:ba11:6207:ce0:5a39:5c7e:1654)
[11:07:40] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[11:07:41] *** Quits: chozorho (~chozorho@c-69-250-72-103.hsd1.md.comcast.net) (Quit: good night)
[11:16:20] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[11:20:24] *** Quits: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao) (Ping timeout: 276 seconds)
[11:20:29] *** Quits: supernova (~quassel@2405:9800:ba11:6207:ce0:5a39:5c7e:1654) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[11:21:16] *** Joins: LiaoTao (~LiaoTao@gateway/tor-sasl/liaotao)
[11:21:57] *** Joins: KillAnimals (~anon@199.119.235.162)
[11:22:57] <LordKalma> Bill from Kitware will speak at Qt world summit. Let's see
[11:23:06] <KillAnimals> hey can you take a member function pointer argument and assign it to a function pointer that is not a member function pointer?
[11:23:44] <TinoDidriksen> Member function pointers are often twice the size of non-member function pointers.
[11:25:21] <KillAnimals> I'm just wondering if you can do it? I have a set of function pointers in my class, and I want to assign them in the constructor from one of two different classes.
[11:26:02] <TinoDidriksen> << sizeof(void*), sizeof(&foo), sizeof(&S::bar); void foo() {}; struct S { void bar() {} };
[11:26:02] <geordi> 8, 8, 16
[11:26:40] <TinoDidriksen> << TYPE(&foo), TYPE(&S::bar); void foo() {}; struct S { void bar() {} };
[11:26:40] <geordi> prvalue void (*)(), prvalue void (S::*)()
[11:26:54] <KillAnimals> interesting.
[11:27:37] <KillAnimals> I'm assuming that 16, 8 points to the class, and another 8 points to the function.
[11:28:03] <TinoDidriksen> Very likely
[11:28:27] <LordKalma> surprisingly high attendance in here
[11:28:41] *** Joins: JohnMS_WORK (~kvirc@213.134.183.29)
[11:29:04] <TinoDidriksen> So you can store member function pointers if you match the type, but can't store them as if they were non-member function pointers.
[11:29:44] *** Joins: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104)
[11:30:06] <KillAnimals> TinoDidriksen: Do I have to specify the type when I declare them?
[11:30:53] <KillAnimals> The member function pointer is going to be from either `class Foo;` or `class Bar;`
[11:32:24] <TinoDidriksen> I'm sure there are ways, but I don't know them. Probably std::function can do it? Or use a common base class. But it's kinda odd to even want to store such disparate member functions. How are you calling them again?
[11:34:51] <KillAnimals> TinoDidriksen: They are qt signals. So I am emitting them. The usecase is fairly straightforward to imagine. Its a card game. Cards are organized into lists. The list is either owned by the player, such as his hand, or the list is owned by the game, such as the trash, meaning it is shared by all players.
[11:35:09] <KillAnimals> When the list changes, it needs to emit the relevant signal.
[11:36:45] <KillAnimals> so, trash a card, "Game::trashChanged()" or pick up a card "Player::handChanged()".
[11:38:23] <TinoDidriksen> In my head that would mean a CardList with a Change event, and each Player has a CardList and subcribe to the Change event and then subsequently fire its own handChanged if needed.
[11:38:54] <LordKalma> if you're using Qt signals I don't see the need to ever store function pointers
[11:39:21] <KillAnimals> TinoDidriksen: If I understand right, that seems pretty close to what I am doing.
[11:40:41] <TinoDidriksen> But indeed, Qt signals should be able to just do this as long as the signatures match.
[11:40:44] <KillAnimals> LordKalma: I think I have found a usecase. In order to track the location of the card, the card has a union which tracks which list it belongs to. When it leaves a particular list, it has to emit signals.
[11:41:21] <TinoDidriksen> A card knows where it is? That's weird.
[11:41:32] <KillAnimals> TinoDidriksen: Yep it is weird.
[11:43:55] <LordKalma> I still don't see why you'd need to store function pointers
[11:44:08] <KillAnimals> Its a fun kind of weird. I think I did it to ensure that a card would never be able to belong to two lists simultaneously. I can't remember exactly how I came to the decision but I'm guessing that was the thrust of it
[11:44:11] <LordKalma> signals are supposed to be, like, just emit them and let the receivers worry about it
[11:44:42] <TinoDidriksen> If cards somehow ended up duplicated, there are bigger problems to solve.
[11:45:29] <TinoDidriksen> Working around ownership issues with a parent pointer in the owned object is the wrong solution.
[11:45:34] <very_sneaky> wouldn't Qt slots be storing function pointers some how?
[11:45:43] <LordKalma> yes
[11:45:46] <very_sneaky> as a callback to the signal
[11:45:48] <LordKalma> but that should be your problem
[11:45:53] <LordKalma> shouldn't*
[11:46:10] <TinoDidriksen> The QObject machinery takes care of that.
[11:46:29] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:46:53] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[11:49:07] *** Quits: defefe (~defefe@178.49.152.42) (Quit: Client closed)
[11:51:01] <KillAnimals> The other thrust of it was for the sake of syntax. something like `Card::hand( Player *p )` allows me to go `trash().last()->hand(p); // Take the last card in the trash, and hand it to player p`
[11:51:19] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[11:52:51] <TinoDidriksen> That's semantically still wrong. Cards don't have agency.
[11:53:09] <KillAnimals> hence why the card would need to know where it existed. It would first unbind itself from the trash, and then set iself in a players hand.
[11:54:01] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[11:54:23] <TinoDidriksen> p->take(trash().last())
[11:55:10] <TinoDidriksen> Or trash().lastTo(p)
[11:55:37] <KillAnimals> oh right. Technically the syntax then is `p->hand().take( Any )->discard(p->opponent() ); // Player takes a any card in his hand and discards it into his opponents pile`
[11:57:41] <TinoDidriksen> Not sure why you want them all to be function calls either.
[11:57:48] *** Joins: pulse (~pulse@user/pulse)
[11:58:20] <KillAnimals> as opposed to what?
[11:58:35] <TinoDidriksen> trash() hand() opponent() why?
[11:59:01] <KillAnimals> TinoDidriksen: That is just good practice.
[11:59:24] <TinoDidriksen> Eeeh
[11:59:38] <KillAnimals> What? You'd rather just call m_Opponent?
[12:00:31] <TinoDidriksen> I don't even see why the Player has an opponent member. That's a Game member.
[12:00:33] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[12:01:24] <KillAnimals> TinoDidriksen: The player also has a partner. If you stored that in the Game member, then it would be more complicated tracking who is friend and who is opponents to who.
[12:02:10] <TinoDidriksen> Not really? That's what teams are for.
[12:02:17] <KillAnimals> Also; From the players perspective; how is he supposed to who is considered the player and the opponent in the game?
[12:02:52] <TinoDidriksen> Ask the game for a list of opponents.
[12:02:52] <KillAnimals> Game::player1 << literally who? Me?
[12:03:31] <KillAnimals> You only have one opponent, and one partner. And one partners opponent, but you don't need to track that.
[12:04:03] <TinoDidriksen> For now.
[12:04:32] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[12:04:54] <TinoDidriksen> I assume it's Bridge.
[12:05:08] <KillAnimals> TinoDidriksen: No. Its something much closer to dominion.
[12:05:08] *** Joins: John99 (~johnny@87.200.94.90.dynamic.jazztel.es)
[12:05:19] <onizu> hi
[12:05:22] <KillAnimals> hold on a sec. I'll show you a card.
[12:06:18] <onizu> I am returning a JSON response from a php server, and it works when I try in the browser. But when I try it in my c++ code (using an API) it's gets the response status code as 404. What could be the reason?
[12:06:30] <TinoDidriksen> Anyway, building it into the Player is still not what I'd do as it locks out future designs for no good reason.
[12:07:12] <TinoDidriksen> onizu, check with Wireshark or similar to see exactly what request is sent.
[12:07:18] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 260 seconds)
[12:07:48] <onizu> wireshark would give details of headers etc. ?
[12:08:01] <TinoDidriksen> It can dump the raw TCP stream.
[12:10:49] <onizu> ok
[12:12:31] <KillAnimals> Konversation needs an imagebin function.
[12:15:57] <onizu> TinoDidriksen: how can I filter a restful request in wireshark?
[12:16:21] <TinoDidriksen> Pretty sure you can filter per process, per port, per target, etc.
[12:17:03] <TinoDidriksen> Since you know the target IP, filter by that.
[12:19:01] <KillAnimals> https://gcdn.pbrd.co/images/6ruBuyXhsO52.webp?o=1 TinoDidriksen
[12:20:07] <onizu> ok
[12:23:39] <KillAnimals> TinoDidriksen: So a card in that case can end up in many places, and so it is important to have it track its own location.
[12:26:19] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[12:26:23] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[12:28:56] *** Joins: The_Jag (~The_Jag@host-62-110-17-18.business.telecomitalia.it)
[12:30:11] <TinoDidriksen> Hmm...
[12:35:35] *** Quits: The_Jag (~The_Jag@host-62-110-17-18.business.telecomitalia.it) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[12:43:58] <onizu> TinoDidriksen: I'm not able to get what to look for in the TCP requests.. (there are several). One of them is in red background
[12:45:29] <onizu> I see some communication under TLSv1.2  to and fro as: Client Hello, Server Hello (so that's successful exchange between the two I guess)
[12:46:54] *** Joins: paul424 (~tom@ip-5-172-232-168.multi.internet.cyfrowypolsat.pl)
[12:47:50] <TinoDidriksen> Oh right, TLS is a thing...
[12:47:58] <euouae> You need to decrypt that
[12:48:01] *** Parts: paul424 (~tom@ip-5-172-232-168.multi.internet.cyfrowypolsat.pl) ()
[12:48:05] <euouae> e.g. https://unit42.paloaltonetworks.com/wireshark-tutorial-decrypting-https-traffic/
[12:48:07] <TinoDidriksen> https://wiki.wireshark.org/TLS it is possible to decrypt TLS, but it's a bit more involved.
[12:48:40] <onizu> :/
[12:48:45] <TinoDidriksen> Alternatively, just use your debugger. Breakpoint at the request, step into it and see what is sent.
[12:48:49] <Juliu> I want to get rich fast. I heard this is the right channel for it
[12:48:57] <onizu> TinoDidriksen: debugger of c++?
[12:49:01] <TinoDidriksen> Yes
[12:49:07] <onizu> k
[12:49:22] <Juliu> So can anyone teach me C++ in 5 minutes?
[12:49:40] <Haohmaru> Juliu buy my book "How to get rich, quickly" for just 10000 euros
[12:49:47] <Juliu> Hurry, time is money
[12:49:50] <onizu> :D
[12:50:04] <Juliu> Hobbyboy, you sound trustworthy
[12:50:16] <TinoDidriksen> ...please keep such chatter to #C++-social
[12:50:34] <Juliu> money++
[12:50:38] <onizu> TinoDidriksen: the red background means some error? (wireshark)
[12:51:37] <Juliu> I mean, can't you get rich by learning how to code?
[12:51:39] <TinoDidriksen> Not sure. Wireshark wouldn't be able to see the HTTP return code through TLS, so it's not an error at that level.
[12:51:44] <Haohmaru> Juliu no
[12:51:47] <Haohmaru> !learncpp
[12:51:48] <nolyc> Haohmaru: Error: "learncpp" is not a valid command.
[12:51:59] <Juliu> Haohmaru, you think all programmers are poor?
[12:52:04] <onizu> ok
[12:52:07] <TinoDidriksen> I will kick all y'all.
[12:52:18] <Juliu> TinoDidriksen, chill
[12:52:23] * Haohmaru hides under the rug
[12:52:31] <TinoDidriksen> #C++-social exists for a reason. This is not a social channel.
[12:52:39] * Juliu hides under a //
[12:53:04] <Juliu> TinoDidriksen, you are right, I can tell that you are not social
[12:53:11] <Juliu> tino.social++
[12:54:03] <Juliu> Damn, I should have put a try {} catch {} around that
[13:07:46] *** Joins: nojhan (uid443807@id-443807.lymington.irccloud.com)
[13:11:12] *** Joins: DSpider (DSpider@2a02:2f00:4ff:ffff::646c:6097)
[13:15:57] <onizu> TinoDidriksen: the debugger gives values like this: https://pasteboard.co/G82lto6FkfBK.png   ...again not very readable
[13:17:10] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:18:35] <Juliu> It's simple: Don't use a debugger
[13:18:43] <Juliu> I never do
[13:21:28] *** Quits: malloy (~jimery@116.30.220.108) (Ping timeout: 250 seconds)
[13:23:04] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:8931:596a:be6c:c80d)
[13:23:33] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[13:23:55] *** Joins: malloy (~jimery@116.30.220.108)
[13:29:59] <TinoDidriksen> onizu, then that library isn't built with debug symbols, or it's a bad debugger.
[13:30:34] <Juliu> If you need a debugger, something is wrong
[13:30:49] <TinoDidriksen> Obviously?
[13:30:52] <onizu> TinoDidriksen: this code works with another restful api, but with the one I'm building, it returns 404
[13:31:18] <Juliu> Page not found
[13:31:32] <onizu> (and yes, it could be the library not debug friendly)
[13:31:42] <TinoDidriksen> A debugger is great to inspect state when something has gone wrong.
[13:31:59] *** Quits: euouae (~euouae@user/euouae) (Quit:  )
[13:32:04] <Juliu> I think the only reason for a debugger is to find the shit other people's code does
[13:32:32] <Juliu> In your own code you could simply write some outputs, which is often way more helpful
[13:32:38] <TinoDidriksen> 404 clearly means that the URL that's built is wrong, so figure out a way to inspect the final URL.
[13:33:13] *** Joins: SkillAnimals (~anon@199.119.235.195)
[13:33:22] <TinoDidriksen> print-debugging is fine for trivial issues. It's often not sufficient.
[13:33:38] *** Quits: KillAnimals (~anon@199.119.235.162) (Ping timeout: 260 seconds)
[13:33:44] <Juliu> If you program the right way, I think it's always sufficient and even faster
[13:34:15] <Juliu> I mean not do a whole bunch of new code at once, but just tiny new things that you test each time
[13:37:29] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[13:37:38] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:37:38] *** ChanServ sets mode: +v npaperbot
[13:39:25] *** Quits: sunny93 (~sunny93@wireguard/tunneler/sunny93) (Remote host closed the connection)
[13:39:42] *** Joins: sunny93 (~sunny93@wireguard/tunneler/sunny93)
[13:47:14] *** Quits: SkillAnimals (~anon@199.119.235.195) (Ping timeout: 260 seconds)
[13:54:14] <PJBoy> is it impossible to kill a process started by GDB?
[13:54:38] <PJBoy> I tried ctrl+c'ing it, ctrl+\'ing it
[13:54:43] <PJBoy> I tried `killall`ing it
[13:55:27] <PJBoy> in the end I had to kill the terminal window to do it
[13:58:38] <onizu> TinoDidriksen: the URL works if I test it in reqbin.com, for example
[14:00:26] <TinoDidriksen> Hence why I suspect the library is adding stuff to the URL. If you have access, check the server's logs to see what's getting hit.
[14:02:09] <onizu> k
[14:02:30] <onizu> (but the same library works with a different URL (another server) )
[14:07:18] *** Joins: dkdns (~dkdns@178.49.152.42)
[14:36:38] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[14:36:52] *** Joins: riksteri (riksteri@gateway/vpn/airvpn/riksteri)
[14:39:25] *** Joins: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de)
[14:54:45] *** Joins: m_ben (~m_ben@user/m-ben/x-7429725)
[14:55:53] *** Quits: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[14:56:55] <Haohmaru> PJBoy kill gdb
[14:57:05] <PJBoy> I tried killall gdb, but that didn't work
[14:57:09] <PJBoy> nor did I expect it to
[14:57:29] <Haohmaru> hm
[14:58:39] <johnny> killall don't work with lots of programs.. sometimes you gotta do something like pkill -9 or pkill -f
[14:58:44] <johnny> err pkill -9 -f rather
[14:58:53] *** Quits: BluesBoy (~bboy@stotz2.com) (Changing host)
[14:58:53] *** Joins: BluesBoy (~bboy@user/bluesboy)
[14:59:21] <johnny> of course one can just do kill -9, but then you you gotta get the pid
[14:59:32] <Haohmaru> barbaric
[14:59:33] <PJBoy> yeah, this is the first I've heard of pkill
[15:00:30] <Haohmaru> pkill kills by process name
[15:00:35] *** Joins: markong (~kvirc@213.146.188.203)
[15:00:38] <Haohmaru> so pkill gdb
[15:00:43] <PJBoy> which is perfect
[15:00:55] <Haohmaru> it's still a murder
[15:00:56] <PJBoy> I'll try it next time
[15:01:10] <PJBoy> I can never reproduce the weirdness I get with GDB on demand
[15:01:37] <johnny> -f means match the entire process string
[15:02:08] <PJBoy> as opposed to?
[15:02:29] <PJBoy> oh the full command line including arguments
[15:02:36] <PJBoy> as opposed to ust the name
[15:02:38] <Haohmaru> i'd think "pkill firefox" would kill any instance of firefox
[15:02:39] <PJBoy> +j
[15:02:54] <johnny> it does not for some reason i always have ot use -f
[15:03:23] <PJBoy> -f for matching the full command line, right?
[15:03:25] <Haohmaru> i just use lxde's task manager whenever possible
[15:03:26] *** Joins: ferdna (~ferdna@user/ferdna)
[15:03:27] <johnny> it changed sometime about uhmm.. 10 releases ago.. i dunno when or if it was just a distro packaging change or what. eithe way i always have to use -f
[15:03:44] <johnny> just quoting from the man page "he pattern is normally only matched against the process name.  When -f is set, the full command line is used."
[15:03:52] <PJBoy> yeah that's what I just read
[15:04:06] <PJBoy> but I think I said it confusingly
[15:04:14] <johnny> i never bother with a task manager unless i don't know the process name. then i use htop
[15:04:37] <PJBoy> htop is something I should have tried actually
[15:04:40] <johnny> there's gotta be a better htop by now.. but i haven't looked
[15:05:04] <Haohmaru> top/htop is very TUI-ish and i don't know wtf i'm looking at
[15:05:38] <johnny> PJBoy, well in general you should pay attention to the pgrep command too.. and pidof. .because sometimes i just kill (pgrep <name>) or kill (pidof <name>)
[15:05:42] * Haohmaru is a mouse-clicker
[15:06:05] <PJBoy> that's worth knowing, yeah
[15:06:21] <PJBoy> I go for the traditional `ps -ef | grepi name` these days
[15:06:25] <johnny> i can't stand using plain vim or emacs for anything but simple editing myself. i want real gutters and popups for autocomplete
[15:06:36] <johnny> just do pgrep instead :)
[15:06:55] <johnny> i tried making vim an IDE once.. but it didn't stick
[15:06:58] <PJBoy> is pgrep just grep -P?
[15:07:22] *** Quits: ferdna (~ferdna@user/ferdna) (Remote host closed the connection)
[15:07:53] <PJBoy> I don't remember why anymore, but I decided -G was my preferred regex flavour a long time ago
[15:08:13] *** Joins: ferdna (~ferdna@user/ferdna)
[15:08:39] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[15:09:16] <johnny> no pgrep is provided by procps-ng
[15:09:36] <johnny> and the same with the other p commands
[15:09:48] <PJBoy> ah ok
[15:10:44] <johnny> my preferred flavor is pcre!, but i mostly deal in ecmascript these days :( and of course the default sed and grep flavors
[15:11:33] <johnny> reminds me that vscode's entire file search is provided by ripgrep
[15:11:55] <johnny> man.. i can't stand actually editing code from the terminal, but i really don't mind transforming text from there!
[15:12:04] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦)
[15:12:18] <johnny> even the simplest sed,grep,cut, and whatnot can get you pretty far
[15:12:33] <PJBoy> honestly I can't with sed
[15:12:53] <johnny> although it was only 2 weeks ago that i learned that sed can edit lines that happen before that match (gnu sed only probably)
[15:13:06] <johnny> huh? sed is pretty easy to use
[15:13:17] <johnny> and there are tons of searchable oneliners
[15:13:25] <PJBoy> put it down to a lack of experience
[15:13:37] <johnny> most of the time if it's complicated at all i just look it up
[15:14:19] <johnny> like that match a pattern and then delete 2 lines before. i used to delete like 100 useless constructors across 6 files
[15:14:32] <PJBoy> I find grep annoying sometimes because of the confusing escape sequences
[15:15:09] <PJBoy> and in general, if I'm a lot quicker to write a quick python script than figure out how to hack those commands together correctly
[15:15:11] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[15:15:16] <johnny> well iirc at leas with sed you can make things a bit easier on yourself by using | or # for the pattern delimiters
[15:15:30] <m_ben> PJBoy: great tutorial on sed: https://www.grymoire.com/Unix/Sed.html
[15:15:35] <johnny> that way you don't have to worry about escaping backslashes
[15:15:40] <johnny> err forward slashes
[15:15:47] <PJBoy> ok sed shouldn't need a tutorial
[15:15:58] <johnny> why not. it does an amazing amount of stuff
[15:15:58] <m_ben> it's complicated :)
[15:16:11] <johnny> if you just want simple s/r then youdn't really need a tutorial
[15:16:15] <PJBoy> fair fair
[15:16:28] <PJBoy> and simple usage is all I'd ever want
[15:16:55] <PJBoy> using pipe as delimiter is a good tip
[15:17:11] <johnny> this is not something i could have even imagined sed could do: sed -i -s 'N;/Instruction.*nullptr/!P;D' headers/*InstructionsSet.h
[15:17:22] <PJBoy> now that the article mentions is, I've seen colon as the delimiter too
[15:17:24] <PJBoy> huh
[15:17:40] <PJBoy> anyways thanks for the link m_ben
[15:18:15] <johnny> match Instruction to nullptr (had to mak sure it only matched that consturctor, and then delete the 2 previous lines .. magic
[15:18:28] <johnny> err the match and the previous line rather
[15:18:57] <johnny> i could not find an IDE way of doing that in clion
[15:19:20] <johnny> of course clion has been nothin but dog slow so i gave up trying
[15:19:41] <johnny> i guess it probably had a better debugger than what i have though.
[15:20:16] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[15:20:23] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[15:20:45] <johnny> i guess i could have used an IDE for this.. and it would have been safer.. find sources/ -exec sed -i 's/QByteArray/ssd::Buffer/g' '{}' \;  but it worked well enough
[15:21:22] <johnny> not that find is the greatest program.. some folks might prefer fd over find
[15:22:00] <johnny> well it got a little late i suppose. you folks have fun with your unix tools
[15:22:09] <johnny> except Haohmaru , he doesn't get any :) (jk)
[15:22:22] *** Quits: proller (~p@2002:50f0:d845:10:41a5:ca2e:e623:f4b4) (Ping timeout: 260 seconds)
[15:22:45] <johnny> PJBoy, oh.. have you checked out ripgrep th?
[15:23:14] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[15:23:26] <Haohmaru> wut
[15:23:47] <m_ben> PJBoy: you can use _any_ character as delimiter. if you work with paths, you need something like #, for example sed "s/^$HOME/~/" won't work because $HOME has forward slashes, so you need to use something like sed "s#^HOME#~#", instead of # you can use anything else as long as the character is not contained in the pattern
[15:24:21] <PJBoy> ah ok, good to know
[15:24:27] <PJBoy> nah I haven't checked out ripgrep
[15:25:49] <m_ben> there's also this other rust tool "sd" which is supposed to be a simpler sed alternative: https://github.com/chmln/sd
[15:26:03] <m_ben> so many rust tools have emerged the last few years
[15:26:41] <m_ben> seems like a very popular language. everything is rewritten in rust nowadays
[15:26:53] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Read error: Connection reset by peer)
[15:27:12] <PJBoy> I've been meaning to get my hands dirty in rust too
[15:28:02] <Haohmaru> eww
[15:28:21] <PJBoy> I'm anticipating still preferring C++, and those two languages fulfill roughly the same use-cases
[15:28:37] <PJBoy> but sitll
[15:28:46] <Haohmaru> wash your hands after that pls
[15:32:28] <TinoDidriksen> A simpler sed alternative? perl -wpne
[15:40:35] <PJBoy> ah I dunno if I'd ever use perl over a bash utility
[15:44:01] *** Quits: ferdna (~ferdna@user/ferdna) (Quit: Leaving)
[15:44:44] <TinoDidriksen> sed isn't portable. Perl is.
[15:45:26] <TinoDidriksen> Also, best grep is pcregrep
[15:46:41] <PJBoy> what is perl on that sed isn't?
[15:46:43] <m_ben> GNU/grep has -P, so has git-grep that provide PCRE regexes
[15:46:48] <PJBoy> that doesn't sound right
[15:46:51] <Haohmaru> !perl
[15:46:53] <nolyc> perl is a mineral deposit created by oysters who had sand in their pants.
[15:47:16] <PJBoy> WSL comes with both as I just checked
[15:47:31] <PJBoy> well
[15:47:37] <PJBoy> the default configuration of WSL
[15:48:06] <m_ben> perl is more like a full scripting language
[15:57:25] *** Joins: whupdup (~whupdup@pool-173-76-128-81.bstnma.fios.verizon.net)
[15:59:15] *** Joins: ullbeking (sid5364@user/ullbeking)
[16:00:12] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[16:02:43] <Haohmaru> !fact
[16:02:44] <nolyc> Haohmaru: If present, a ... handler shall be the last handler for its try block.
[16:03:31] <Haohmaru> that sounds like panic mode, catch onto anything
[16:08:08] *** Joins: CaCode (~CaCode@user/cacode)
[16:09:01] <TinoDidriksen> sed's syntax and power differs an unfortunate amount between Posix and GNU. Perl just works and is even more powerful.
[16:10:06] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[16:10:39] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[16:11:14] <rpav> finding non-gnu sed anymore is pretty rare
[16:11:20] <TinoDidriksen> macOS
[16:11:45] <rpav> pretty rare :p
[16:11:48] *** Quits: dkdns (~dkdns@178.49.152.42) (Ping timeout: 256 seconds)
[16:13:07] <TinoDidriksen> Not amongst computational linguists, and given that we do a lot of text processing, having 1-liners that work cross-platform is pretty important. Perl just works.
[16:13:24] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[16:13:25] <rpav> if it's a tool for your specific job fair enough
[16:13:27] <TinoDidriksen> Until macOS stops shipping Perl, at least...
[16:13:33] <rpav> i just avoid the abomination that is perl at all costs
[16:14:03] <TinoDidriksen> I use perl -wpne instead of all sed. I can rely on perl - can't rely on sed.
[16:14:20] <rpav> though perl is probably fairly optimized for its job these days, and if you're doing simple text substitution stuff i mean sure
[16:14:33] <rpav> it doesn't change a lot anymore does it? which is also really a feature
[16:16:27] <TinoDidriksen> Sadly, none of the old time core tools are core any longer. Distros are starting to omit perl from the base image, and the flavour of awk differs.
[16:17:00] <rpav> i wonder how a few-liner tool in C++ with <regex> would compare to perl
[16:17:17] <PJBoy> ah mac os, gotcha
[16:17:37] <PJBoy> compare in what aspect?
[16:17:39] *** Joins: Hello71 (~Hello71@wireguard/contributor/hello71)
[16:17:47] <rpav> speed mostly
[16:18:01] <PJBoy> well the stdlib regex is supposed to be slow
[16:18:11] <PJBoy> and perl is the granddaddy of regex
[16:18:22] <PJBoy> so I would probably put my money on perl
[16:18:32] <rpav> it definitely is not heh
[16:18:48] <PJBoy> it coined the term "perl compatible regex" :p
[16:18:58] <rpav> sed or awk or probably some prior tool i'm forgetting are at least elder tools
[16:19:06] <PJBoy> it's like the de facto standard regex flavour
[16:19:06] *** Joins: dkdns (~dkdns@178.49.152.42)
[16:19:40] <rpav> that's only because instead of being imaginitive and solving the problem a better way, they just crammed a bunch of shit into perl regexp and everyone were lazy fucks and went along with it
[16:19:48] <PJBoy> its absence from C++ stdlib regex being uh
[16:19:50] <PJBoy> noted
[16:19:51] <rpav> probably the regexp you're used to use few perlisms
[16:20:22] <PJBoy> also here's a benchmarkish https://stackoverflow.com/questions/41481811/why-pcre-regex-is-much-faster-than-c11-regex
[16:22:25] *** Joins: cart_man (~rynot@host-78-144-127-199.as13285.net)
[16:23:10] <rpav> bah not a complete example
[16:25:07] <ullbeking> Does anybody know if the 28 October date for the 6th edition release of C++ Primer is accurate?
[16:27:29] *** Joins: proller (~p@2a02:6b8:0:40c:8496:b686:e6ec:b8e8)
[16:35:25] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:35b5:6b52:836c:5a7)
[16:35:25] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:35b5:6b52:836c:5a7) (Changing host)
[16:35:25] *** Joins: skapata (~Skapata@user/skapata)
[16:40:36] *** Quits: very_sneaky (~very_snea@user/very-sneaky/x-7432109) (Quit: very_sneaky)
[16:41:21] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[16:41:33] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[16:46:27] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[16:46:32] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[16:46:37] *** Joins: very_sneaky (~very_snea@user/very-sneaky/x-7432109)
[16:55:25] *** Joins: kylese (~kylese@p5dd8b864.dip0.t-ipconnect.de)
[16:57:39] *** Quits: cart_man (~rynot@host-78-144-127-199.as13285.net) (Quit: Konversation terminated!)
[17:02:09] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[17:05:45] *** Quits: kylese (~kylese@p5dd8b864.dip0.t-ipconnect.de) (Quit: Leaving)
[17:06:34] *** Joins: engest (~engest@50.39.227.149)
[17:07:18] *** Joins: ARoxdale (~ARoxdale@84.203.31.229)
[17:08:00] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[17:10:43] *** Quits: HvszrStykp (~X@81.171.62.81) (Ping timeout: 268 seconds)
[17:15:17] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[17:19:54] *** Joins: The_Jag (~The_Jag@host-62-110-17-18.business.telecomitalia.it)
[17:19:57] <computerquip> I doubt it, seems like the author dropped off the C++ train.
[17:21:29] *** Quits: The_Jag (~The_Jag@host-62-110-17-18.business.telecomitalia.it) (Client Quit)
[17:22:06] *** Joins: The_Jag (~The_Jag@host-62-110-17-18.business.telecomitalia.it)
[17:23:39] <Raziel> The C++ train has no brakes
[17:23:46] <Raziel> [send help]
[17:25:07] <rpav> bah does ninja not have a full logging option
[17:26:47] *** Quits: The_Jag (~The_Jag@host-62-110-17-18.business.telecomitalia.it) (Client Quit)
[17:27:05] *** Joins: kraa (~kraa@107-190-7-216.cpe.teksavvy.com)
[17:28:20] *** Joins: The_Jag (~The_Jag@host-62-110-17-18.business.telecomitalia.it)
[17:29:59] *** Quits: The_Jag (~The_Jag@host-62-110-17-18.business.telecomitalia.it) (Client Quit)
[17:30:20] *** Joins: ShiftyLogic (~shiftylog@66.115.146.16)
[17:34:22] *** Joins: The_Jag (~The_Jag@host-62-110-17-18.business.telecomitalia.it)
[17:34:30] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[17:34:44] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[17:35:26] *** Quits: ShiftyLogic (~shiftylog@66.115.146.16) (Ping timeout: 260 seconds)
[17:35:31] *** Quits: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com) (Read error: Connection reset by peer)
[17:36:22] *** Joins: cferry (~etuel@8.242.205.35)
[17:36:31] <cferry> I am block with epoll_wait, each clients has its own fd. Any alternatives to timerfd?
[17:36:36] <cferry> https://github.com/beryldb/beryldb/blob/unstable/src/engines/engine_epoll.cpp#L144
[17:37:30] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:37:37] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:37:37] *** ChanServ sets mode: +v npaperbot
[17:38:25] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[17:38:36] *** Joins: fusta (~fusta@178.251.43.26)
[17:38:41] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[17:39:05] *** Quits: ARoxdale (~ARoxdale@84.203.31.229) (Ping timeout: 268 seconds)
[17:46:18] *** Joins: night_wulfe (~wulfe@cpe-174-103-156-213.cinci.res.rr.com)
[17:54:55] *** Joins: pulse (~pulse@user/pulse)
[17:56:48] *** Quits: lh_mouse (~lh_mouse@mingw-w64/developer/lhmouse) (Read error: Connection reset by peer)
[17:59:25] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 268 seconds)
[18:02:23] *** Quits: dkdns (~dkdns@178.49.152.42) (Quit: Client closed)
[18:13:29] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[18:16:58] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[18:17:21] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[18:20:08] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[18:21:15] *** Quits: ghenry (~ghenry@ghenry.plus.com) (Remote host closed the connection)
[18:22:13] *** Quits: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[18:22:29] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Client Quit)
[18:23:00] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[18:27:04] *** Quits: John99 (~johnny@87.200.94.90.dynamic.jazztel.es) (Remote host closed the connection)
[18:27:06] *** Joins: ShiftyLogic (~shiftylog@66.115.146.16)
[18:27:47] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[18:33:10] *** Joins: mackal (~mackal@pool-96-237-249-63.bstnma.fios.verizon.net)
[18:36:41] *** Quits: The_Jag (~The_Jag@host-62-110-17-18.business.telecomitalia.it) (Quit: My MacBook has gone to sleep. ZZZzzzâ€¦)
[18:37:39] *** Quits: JohnMS_WORK (~kvirc@213.134.183.29) (Ping timeout: 268 seconds)
[19:03:15] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[19:03:47] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[19:08:13] *** Joins: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de)
[19:08:30] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[19:16:07] *** Joins: HvszrStykp (~X@81.171.62.81)
[19:25:41] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[19:29:59] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Quit: varioust)
[19:30:23] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Ping timeout: 264 seconds)
[19:33:47] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[19:59:34] *** Quits: ShiftyLogic (~shiftylog@66.115.146.16) (Quit: leaving)
[20:01:17] *** Quits: letto (~letto@86.120.85.133) (Quit: Konversation terminated!)
[20:02:05] *** Joins: letto (~letto@86.120.85.133)
[20:02:32] *** Joins: great_taste (~great_tas@190.32.235.20)
[20:07:18] *** Quits: cferry (~etuel@8.242.205.35) (Quit: Leaving)
[20:10:47] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[20:11:25] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Quit: varioust)
[20:14:02] *** Quits: emerent (~quassel@p200300cd574855c4ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[20:14:27] *** Joins: emerent (~quassel@p200300cd57485589ba27ebfffed28a59.dip0.t-ipconnect.de)
[20:14:28] *** Joins: paul424 (~tom@ip-5-172-239-17.multi.internet.cyfrowypolsat.pl)
[20:24:18] *** Quits: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[20:25:03] *** Quits: onizu (uid373383@id-373383.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[20:33:49] *** Joins: unixpro1970 (~unixpro19@c-73-181-185-205.hsd1.wa.comcast.net)
[20:35:51] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[20:40:04] *** Joins: kenanmarasli (~kenanmara@user/kenanmarasli)
[20:42:11] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[20:43:17] *** Joins: CaCode (~CaCode@user/cacode)
[21:05:48] *** Joins: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com)
[21:10:28] *** Joins: magla (~gelignite@55d4ce3b.access.ecotel.net)
[21:12:23] *** Joins: rackj (~rackj@c-73-140-240-136.hsd1.wa.comcast.net)
[21:17:47] <rpav> anyone used https://github.com/jchnkl/xpp .. raii xcb wrapper
[21:21:10] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[21:23:13] *** Joins: CaCode_ (~CaCode@user/cacode)
[21:26:00] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[21:27:15] *** Quits: CaCode (~CaCode@user/cacode) (Ping timeout: 268 seconds)
[21:27:17] *** Joins: supernova (~quassel@2405:9800:ba11:6207:29f5:6871:138:1e85)
[21:30:16] *** Joins: onizu (uid373383@id-373383.uxbridge.irccloud.com)
[21:33:03] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[21:33:49] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:35:00] *** Quits: Ronalds_Mazitis_ (~Ronalds_M@46.109.76.104) (Quit: Connection closed)
[21:36:46] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Quit: varioust)
[21:37:30] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:37:39] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:37:39] *** ChanServ sets mode: +v npaperbot
[21:46:50] *** Quits: letto (~letto@86.120.85.133) (Quit: Konversation terminated!)
[21:53:22] *** Quits: DrMax__ (~DrMax@132.215.96.34) (Remote host closed the connection)
[21:55:53] *** Quits: eck (~root@user/eck) (Quit: PIRCH98:WIN 95/98/WIN NT:1.0 (build 1.0.1.1190))
[21:56:04] *** Joins: DrMax_ (~DrMax@132.215.96.36)
[21:56:22] *** Joins: eck (~root@user/eck)
[22:00:58] *** Quits: pulse (~pulse@user/pulse) (Ping timeout: 260 seconds)
[22:02:39] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[22:03:38] *** Quits: markong (~kvirc@213.146.188.203) (Ping timeout: 268 seconds)
[22:14:20] *** Quits: rackj (~rackj@c-73-140-240-136.hsd1.wa.comcast.net) (Quit: Ping timeout (120 seconds))
[22:22:40] *** Joins: spaceangel (~spaceange@ip-89-176-181-220.net.upcbroadband.cz)
[22:22:56] *** Joins: ARoxdale (~ARoxdale@84.203.31.229)
[22:23:47] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Ping timeout: 264 seconds)
[22:32:13] <rpav> try { .. } template<typename T, typename = std::enable_if_t<...>> catch(T e) { ... }
[22:32:42] <rpav>  well you could only sfinae a catch based on an outer template of course but
[22:33:12] <rpav> it seems like "something you might conceivably want, but practically no one ever does"
[22:34:30] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[22:36:28] <InPhase> You can template a catch?
[22:37:18] <InPhase> Is that new?  I don't think I've ever seen it.
[22:37:23] <kalven> I sure hope not
[22:37:33] <LiaoTao> Sounds like a good party trick
[22:37:39] <PJBoy> template catch, bahaha
[22:37:45] <Alipha> rpav: you could write a function such that: catch_or_not<Cond, T>([&]() => { .. }, [&]() => { ... });
[22:38:25] <Alipha> ... or just put an if statement inside the catch
[22:38:35] <Alipha> not sure why you'd need anything like this
[22:38:47] <InPhase> Okay, geordi does not approve of templated catch...
[22:38:57] <PJBoy> template catch couldn't possibly make any sense
[22:39:21] <InPhase> auto in catch is also not permitted.
[22:39:24] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:58cd:ccc2:f66c:e3b) (Ping timeout: 268 seconds)
[22:39:42] <PJBoy> yeah, your stack unwinder would have no idea what to do
[22:39:54] <InPhase> Right...
[22:40:14] <LiaoTao> Phew. For a second there I thought the list of dumb things you have to explain to people had grown.
[22:40:36] <rpav> InPhase: oh, it's not possible, i'm just proposing things that are almost certainly useless but look maybe like they might do something
[22:40:54] <PJBoy> and the proof of the pudding was right here :D
[22:41:41] <InPhase> I mean you could implement it, but it would require some excessively dynamic handling unlike the rest of C++, and would leak into every exception throw program-wide.
[22:42:02] <rpav> like, "<T> class C { .. { try { .. } template<typename = enable_if_t<Type_A_Throws>> catch(T ..) {} template<...> ... } };"
[22:42:11] <InPhase> Or, it would require some deep inspection at link time.
[22:42:24] *** Joins: pulse (~pulse@user/pulse)
[22:42:30] <rpav> err, but with proper enable_if etc etc
[22:43:14] <rpav> like "well, _maybe_ you'd want to construct a try/throw based on the templated type" but seriously you're probably deeply in the weeds if you did
[22:44:36] <Alipha> rpav: why would you want to sfinae a catch? just put in the catch and if it catches something, it catches something.
[22:44:50] *** Quits: supernova (~quassel@2405:9800:ba11:6207:29f5:6871:138:1e85) (Remote host closed the connection)
[22:47:03] <rpav> Alipha: maybe you _don't_ want it to catch something for a specific T!
[22:47:16] <rpav> (really grasping at straws)
[22:47:54] <rpav> the lambda solution is almost certainly what you'd want if you even ever did
[22:48:48] *** Quits: paul424 (~tom@ip-5-172-239-17.multi.internet.cyfrowypolsat.pl) (Quit: Leaving)
[22:50:46] <Alipha> catch(T t) { if(dont_want_to_catch) throw; ... }
[22:54:13] <rpav> ok so `template<typename...Es> try { ... } catch<Es>(E e)... { if constexpr(E::value ...) ... }`
[22:54:44] <rpav> (though i contend variadic-template switch would _actually_ be useful)
[22:55:42] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Quit: varioust)
[22:56:11] <LordKalma> Qt world summit was relatively interesting
[22:56:40] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Ping timeout: 268 seconds)
[22:56:52] <rpav> e.g. the switch variant would switch on a _runtime_ value, but with a variadic `case...` so you can basically generate a jumptable rather than `if(i == I) { ... } else { return call<I+1>(i); }`
[22:57:17] <rpav> LordKalma: oh yeah, what stood out?
[22:57:26] *** Joins: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net)
[22:57:55] <LordKalma> well, they assured interest in making desktop a first class citizen for Qt Quick
[22:58:00] <LordKalma> and lots of cmake stuff
[22:59:21] <rpav> cool, i should really look at the qt quick stuff
[23:00:47] *** Quits: voltron (~voltrin_@ip5f599415.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:00:53] <dblsaiko> oh, nice, I hope they can make it not feel terribly out of place
[23:00:58] <dblsaiko> right now I'm qtwidgets forever
[23:01:07] <LordKalma> they are investing in precompiling the QML crap too
[23:01:08] <LordKalma> which is nice
[23:01:26] <dblsaiko> cool!
[23:01:54] <LordKalma> it's tech preview for paying costumers atm, should be generally available in 6.3
[23:04:48] *** Joins: sprout (~quassel@2a02:a467:ccd6:1:58cd:ccc2:f66c:e3b)
[23:05:54] *** Quits: ARoxdale (~ARoxdale@84.203.31.229) (Ping timeout: 268 seconds)
[23:06:30] <LordKalma> The feature perhaps most talked about today was this:
[23:06:31] <LordKalma> https://www.qt.io/blog/introduction-to-the-qml-cmake-api
[23:06:59] <LordKalma> basically if you use qt's cmake API a lot of magic with the QML AOT compiler and etc happens
[23:08:56] <rpav> i really wish people would make less-magical cmake api things ;/
[23:09:37] *** Quits: sprout (~quassel@2a02:a467:ccd6:1:58cd:ccc2:f66c:e3b) (Ping timeout: 268 seconds)
[23:16:20] <LordKalma> there's some amount of nuances and things to do right
[23:16:21] *** Quits: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl) (Read error: Connection reset by peer)
[23:16:32] <LordKalma> fortunately they are writing this
[23:16:33] <LordKalma> https://www.qt.io/product/qt6/qml-book
[23:16:46] <LordKalma> instead of that QML book from Felgo that is more of an advert than anything
[23:18:30] *** Joins: Serpent7776 (~Serpent77@90-156-31-193.internetia.net.pl)
[23:19:33] *** Quits: Skyfire (~pyon@user/pyon) (Quit: WeeChat 3.3)
[23:24:51] *** Joins: Deneb (~johnch@117.111.189.80.dyn.plus.net)
[23:25:35] <AmR> I fix my regex as I can = " dataBaseScriptStr = regex_replace( dataBaseScriptStr, regex( "(\\bbegin.transaction.*;|\\bcommit.*;|\\/\\*(.|\\r\\n|\\r|\\n)*?\\*\\/|^--.*\\n|\\t|\\r\\n|\\r|\\n)" ), " " ); "
[23:25:47] <LordKalma> holy shit
[23:26:30] <AmR> But How I can tel it remove that part only for I try un remove ; in sql command
[23:26:53] <AmR> LordKalma: Why ?
[23:27:04] *** Joins: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net)
[23:29:27] <LordKalma> regex is unreadable haha
[23:31:49] *** Quits: gggp (~gggp@220-136-146-93.dynamic-ip.hinet.net) (Ping timeout: 268 seconds)
[23:31:53] <SuperNintendoSUX> haha
[23:32:26] <AmR> I am trying to get sql commands. That's all
[23:37:00] *** Joins: dextercd (~dexter@2a02-a450-f25d-1-76d4-35ff-fefe-34c.fixed6.kpn.net)
[23:41:41] *** Quits: varioust (~varioust@72-46-48-28.lnk.ne.static.allophone.net) (Ping timeout: 268 seconds)
[23:41:57] <rpav> why people start and stop with regex
[23:42:15] <rpav> there's like, https://github.com/hyrise/sql-parser
[23:42:20] *** Quits: m_ben (~m_ben@user/m-ben/x-7429725) (Quit: WeeChat 3.3)
[23:45:51] *** Quits: great_taste (~great_tas@190.32.235.20) (Quit: Client closed)
[23:49:24] *** Joins: plastico (~plastico@neomutt/plastico)
[23:49:35] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:8931:596a:be6c:c80d) (Quit: Textual IRC Client: www.textualapp.com)
[23:50:44] *** Quits: kurfen_ (~kurfen@45.152.181.22) (Quit: ZNC 1.8.2 - https://znc.in)
[23:50:55] *** Quits: DSpider (DSpider@2a02:2f00:4ff:ffff::646c:6097) (Ping timeout: 268 seconds)
[23:51:16] *** Joins: great_taste (~great_tas@190.32.235.20)
[23:52:05] *** Joins: x11ff (~x11ff@151.250.201.160)
[23:52:45] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:6919:49ab:83b4:dae6)
[23:52:46] *** Joins: kurfen (~kurfen@45.152.181.20)
[23:52:58] *** Joins: sonic (~sonic@user/sonic)
[23:53:03] *** Joins: DSpider (DSpider@2a02:2f00:1ff:ffff::646c:6bff)
[23:55:25] *** Quits: Juliu (~Juliu@2a02:810b:c640:3ec0:149b:da64:4188:de2d) (Quit: Quit)
