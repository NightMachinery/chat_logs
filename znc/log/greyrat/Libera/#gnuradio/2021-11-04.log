[00:19:58] *** Quits: pcero (~pcero@187.135.224.50) (Ping timeout: 260 seconds)
[00:24:21] *** Quits: jemius (~imperator@2001:16b8:2da9:3600:6456:53dd:3553:5557) (Quit: Leaving)
[00:29:59] *** Joins: johncc3 (~johncc3@181.93.22.105)
[00:34:06] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 268 seconds)
[00:36:05] <johncc3> How can I know which version of Volk/gr_osmosdr I need with each version of GRC?
[00:53:38] *** Joins: kd8oxt[m] (~kd8oxtgnu@2001:470:69fc:105::1:2af1)
[01:30:05] *** Quits: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:1802:bb7a:f439:95db) (Quit: Leaving)
[01:49:56] *** Quits: bandnyquist (~Rheanna@101.70.63.236) (Ping timeout: 268 seconds)
[01:51:37] <kd8oxt[m]> I don't suppose any of you fine people have time to shepherd a GRC noob through some carrier detection?
[01:53:51] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[02:01:35] *** DiffieHellman_ is now known as DiffieHellman
[02:05:09] *** Joins: bandnyquist (~Rheanna@101.70.63.236)
[02:21:12] <patchvonbraun[m]> GRC noob or signals and signal processing in general?
[02:21:43] <kd8oxt[m]> GRC noob.
[02:22:59] <patchvonbraun[m]> What kind of carrier and what kind of detection?  Detection or demodulation?
[02:24:28] *** Quits: bandnyquist (~Rheanna@101.70.63.236) (Ping timeout: 268 seconds)
[02:24:34] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[02:25:21] *** Joins: bandnyquist (~Rheanna@101.70.63.236)
[02:26:44] <kd8oxt[m]> 1 kHz-ish carrier in an audio recording of WWV. My goal is detection and logging of the Doppler shift.
[02:27:37] <kd8oxt[m]> Mainly, I'm trying to get the hang of using the PLL blocks. 
[02:27:41] <kd8oxt[m]> (I haven't used this chat system before, but perhaps I could create a new room for further discussion?)
[02:30:31] *** Quits: johncc3 (~johncc3@181.93.22.105) (Quit: Leaving)
[02:34:21] *** Joins: RogOne_gg (~igloo@ptr-178-51-201-115.dyn.mobistar.be)
[02:36:23] <patchvonbraun[m]> I haven’t used the PLL blocks a lot myself.
[02:37:54] <kd8oxt[m]> I have generated a new room, called WWV, to keep the chatter down here in General. 
[02:38:24] <patchvonbraun[m]> I’ll be in and out this evening. Seems like Doppler on 10Mhz at ordinary velocities would be pretty tiny.
[02:39:42] *** Quits: RogOne_gg (~igloo@ptr-178-51-201-115.dyn.mobistar.be) (Quit: Igloo IRC: https://iglooirc.com)
[02:40:17] *** Joins: RogOne_gg (~igloo@178.51.201.115)
[02:42:49] <kd8oxt[m]> It is, usually on the order of a couple Hz unless something remarkable is going on.
[02:43:04] *** Quits: RogOne_gg (~igloo@178.51.201.115) (Remote host closed the connection)
[03:14:25] *** Quits: bandnyquist (~Rheanna@101.70.63.236) (Ping timeout: 268 seconds)
[03:17:11] *** Joins: bandnyquist (~Rheanna@101.70.63.236)
[03:18:57] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:35:20] <Hash[m]> Using a Frequency Xlating FIR Filter to shift a 26Msps output by 50kHz so I can shift over from the DC spike. Just using a value of 1 for the taps, any issue with that?
[03:36:17] *** Joins: Macuser (~Macuser@216.30.159.201)
[03:41:06] <patchvonbraun[m]> I your signal is so narrow that shifting by 50khz is enough why bring it in at 26Msps?
[03:57:53] <Hash[m]> I'm sending bursts every 100kHz across the entire 26MHz, just need to shift it all over so I don't lose the middle one on the center freq
[03:59:00] <Hash[m]> It works fine, just not sure if I should be using something else for the tap or if 1 is fine, low pass filter there just adds processing that's not needed I think
[04:09:11] <patchvonbraun[m]> You can just use the rotator block then.
[04:21:15] <Jacob[m]12> You can also offset tune with the USRP
[04:24:22] <Jacob[m]12> make the hardware do the work
[04:37:03] *** Quits: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt) (Ping timeout: 268 seconds)
[04:37:18] <Hash[m]> How do you do it with the USRP?
[04:43:26] <Hash[m]> <patchvonbraun[m]> "You can just use the rotator..." <- I like this because then I can use BladeRF or anything as the sink, but not sure what value based on shifting some number of radians 
[04:51:38] <Jacob[m]12> Ah yes. My suggestion was very un-software radio like.
[04:52:16] <Jacob[m]12> If you decide to do it though you can set the freq field with a `tune_request_t` object
[04:56:10] <Hash[m]> I will be using the HackRF and BladeRF in the near future so don't want to make it USRP specific
[04:56:41] <Hash[m]> Tempting with all it's cool features :) 
[04:59:11] <patchvonbraun[m]> NormaliEd frequency.  Nyqust is pi radians/sample.
[05:55:29] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[06:12:44] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[06:21:29] * muaddib[m] uploaded an image: (3099KiB) < https://libera.ems.host/_matrix/media/r0/download/gnuradio.org/69c3c3f4ca6d463c9a78d0dd5f4dd798bdeab9fe/ima_8b34567.jpeg >
[06:22:06] <muaddib[m]> Hash: So, I had some really worthwhile INDOOR projects to work on tonight but seeing your victory pushed me to put on my jacket and head outside to do an IQ capture of my smart meter (which I’ve been meaning to do since we got this house 2 months ago!). 
[06:22:06] <muaddib[m]> Thanks for the inspiration, now I can’t feel my fingers! 
[06:34:04] *** Quits: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:d8fb:653:7302:119b) (Quit: Leaving)
[06:34:51] <Hash[m]> Lol!! Nice!
[06:35:36] <Hash[m]> This transmitter is going to allow some awesome tests on the meters I have in my faraday cage combined with the Sandia FHSS receiver
[06:37:42] <muaddib[m]> Yea dude. “one message to fuzz them all”
[06:46:25] <Hash[m]> I'm going to tie these together soon, receive messages the meter is broadcasting, send to a python program i'm writing that parses the packet, then constructs a response and blasts out on all channels complete with checksum it's expecting and everything... See how resilient that mesh network really is
[06:50:35] *** Joins: BrianG61UK (~BrianG61U@2a02:8010:66b7:dddd:90ba:8af0:98ae:6d14)
[06:51:15] *** Joins: BrianG61UK_ (~BrianG61U@2a02:8010:66b7:dddd:d8fb:653:7302:119b)
[07:01:43] *** Quits: monowar (~Thunderbi@FL1-118-109-45-169.fko.mesh.ad.jp) (Quit: monowar)
[08:03:36] *** Joins: Guest13 (~Guest13@117.221.70.189)
[08:09:40] <Guest13> Hi, I am learning the code of GNU Radio. In the grc folder there is main.py which has code for gtk GUI .Can you tell me where the run() from app.run() function is defined?(85th line in main.py).
[08:10:13] <Guest13> I tried searching the project files but couldnt find a definition for run() function.
[08:52:55] *** Joins: schwach3 (~schwach@191.96.170.117)
[08:55:27] *** Quits: schwach (~schwach@191.96.170.32) (Ping timeout: 268 seconds)
[08:55:27] *** schwach3 is now known as schwach
[09:06:33] *** Quits: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be) (Ping timeout: 268 seconds)
[09:07:10] *** Joins: betelgeuse (~betelgeus@94-225-47-8.access.telenet.be)
[09:54:07] <Guest13> sorry for the silly question.It was part of Gtk API
[09:57:09] *** Quits: spithash (~spithash@user/spithash) (Remote host closed the connection)
[10:01:52] *** Joins: spithash (~spithash@user/spithash)
[10:11:50] *** Quits: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net) (Remote host closed the connection)
[10:12:29] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[10:42:18] *** Quits: yesno (~yesno@109.98.151.179) (Remote host closed the connection)
[10:42:38] *** Joins: yesno (~yesno@109.98.151.179)
[11:06:48] *** Quits: yesno (~yesno@109.98.151.179) (Ping timeout: 268 seconds)
[11:07:21] *** Joins: massi (~massi@host-188-15-128-106.business.telecomitalia.it)
[11:16:46] <funkylab[m]> Guest13: you're always more than welcome to learn about the code structure, so it was hardly a silly question.
[11:20:08] <funkylab[m]> but maybe you want to tell us what part of GNU Radio you're especially interested in, and maybe for what motiviation you're trying to learn about GNU Radio's code base – it's large, and of varying age, quality, and usefulness to someone new, so maybe we can help you 
[11:32:33] *** Joins: uros (~Thunderbi@2001:8a0:6074:ad00:90c7:972b:4aae:d73a)
[12:30:10] *** Quits: thanveer_rpm[m] (~thanveerr@2001:470:69fc:105::1:c61) (Quit: You have been kicked for being idle)
[12:30:10] *** Quits: DanBryant[m] (~dictamatr@2001:470:69fc:105::1:37f) (Quit: You have been kicked for being idle)
[12:30:11] *** Quits: eamon_g[m] (~eamongree@2001:470:69fc:105::fd0d) (Quit: You have been kicked for being idle)
[12:43:31] <drmpeg> Just some context. kd8oxt is leading an effort to use the WWV and WWVH transmitter to do ionospheric science. They'll be transmitting a new audio sequence at minute 8 on WWV and minute 44 of WWVH.
[12:44:09] <drmpeg> Here's the audio. https://zenodo.org/record/5602094
[12:44:47] <drmpeg> And Youtube video https://www.youtube.com/watch?v=O3Q7L0TNGtk
[12:47:14] <drmpeg> Those 100% modulation chirps should wake up some listeners.
[12:51:18] *** Quits: uros (~Thunderbi@2001:8a0:6074:ad00:90c7:972b:4aae:d73a) (Quit: uros)
[13:10:45] *** Quits: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net) (Ping timeout: 268 seconds)
[13:15:28] <Guest13> Hi funkylab[m] ,I like embedded field. I was trying of build a custom SDR support to GNU radio through soapy.
[13:16:42] <willcode4[m]> drmpeg: Thanks for the link. I was wondering if that was the interest in Doppler. Didn't see too useful for navigation.
[13:18:07] <funkylab[m]> Guest13: then GRC's code is not relevant to you! 
[13:18:41] <funkylab[m]> GRC is "just" a GUI that allows you to design flow graphs, and knows nothing about how GNU Radio processes samples, or how Soapy works.
[13:19:28] <funkylab[m]> in fact, to support an SDR through soapy, you don't have to know anything about GNU Radio; you'll want to read how to write a driver plugin for soapysdr.
[13:20:25] <funkylab[m]> GNU Radio has no idea about the things that soapysdr supports, all it does (in gr-soapy) is use the soapy API. If you want to add a driver for an SDR, your driver interfaces with Soapy, not with GNU Radio.
[13:23:55] <Guest13> Ok thanks funkylab[m]
[13:30:22] <Guest13> There are different files for hackrf , limesdr.Likewise I like to add an SDR also. Isn't soapy a library for USB virtual com communication?
[13:34:07] <willcode4[m]> SoapySDR is an abstraction for SDRs in general. There is no assumption about how a device is connected, or even whether it's a real device.
[13:35:43] *** Joins: willcode4 (~willcode4@pool-71-248-165-239.bstnma.fios.verizon.net)
[13:35:43] *** Quits: willcode4 (~willcode4@pool-71-248-165-239.bstnma.fios.verizon.net) (Changing host)
[13:35:43] *** Joins: willcode4 (~willcode4@user/willcode4)
[13:37:27] <Yamakaja[m]> muaddib: Is that a B205 mini mounted to the back of your laptop? I like it! 
[13:40:15] *** Joins: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt)
[13:56:31] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[14:03:29] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[14:13:44] *** Quits: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt) (Read error: Connection reset by peer)
[14:17:13] <funkylab[m]> Guest13: what willcode4 said is 100% on point. The hackrf and limesdr things are some graphical convenience wrappers; you don't need them to test your own Soapy plugin and you can add one trivially after you've written a soapy plugin, but that comes first. So, go read soapy's nice code and documentation on how to write a Soapy plugin; you're still quite a bit of soapy code away from actually needing to think about GNU Radio. The whole
[14:17:13] <funkylab[m]> point of SoapySDR is that you write one soapy driver, and don't have to write any code for the consumers of the Soapy API (there's GNU Radio, but also a lot of other software, whcih can instantly use your Soapy driver as soon as it works).
[14:31:31] <Guest13> Understood funkylab[m] ,thanks
[14:44:08] *** Joins: yesno (~yesno@109.98.151.179)
[14:58:20] *** Joins: lfilipeazevedo[m (~lfilipeaz@2001:470:69fc:105::1:2b4e)
[15:00:42] <lfilipeazevedo[m> Hello all,... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/08bbfbe18a5c4aef52e0660c10afefaafd77351e)
[15:01:06] <lfilipeazevedo[m> s/could/couldn't/, s/concrete/clear/
[15:13:20] *** lfilipeazevedo[m is now known as lfa[m]
[15:25:37] *** Quits: Guest13 (~Guest13@117.221.70.189) (Quit: Client closed)
[15:40:35] *** Joins: jemius (~jemius@wifi-guests.rohde-schwarz.com)
[15:50:45] <jemius> When I use a wav-file-source in my flowgraph, how does that work with the sample rate... do I need to set the flowgraphs samprate at the wav-files rate, i.e. 44100?
[15:51:02] <jemius> or does GR automatically take care of taking samples from the file at the appropriate speed?
[15:52:38] <willcode4[m]> jemius: If you need the flowgraph to run at a certain rate, one block needs to control the rate. That can be a source (SDR), sink (audio) or throttle somewhere in the middle. There should only be one block that tries to control the rate.
[15:53:18] <jemius> willcode4[m], I mean the meta-block you have in the upper left of every flowgraph, titled "samprate"
[15:53:47] <willcode4[m]> That's a variable. It doesn't affect anything by itself, and it is manually set.
[15:54:54] <jemius> ok, check. So if I just want to "play music" I have to set the sink to the appropriate rate
[15:55:17] <willcode4[m]> Right.
[15:55:47] <willcode4[m]> That rate can be `sample_rate`, in which case it will pick up the rate from a variable named `sample_rate`.
[16:06:04] <linge93[m]> hi, how is the amplitude recovery in ofdm_rx.grc? Because I found the "multiply const" block in ofdm_tx.grc, it is used to control the amplitude of the input USRP to be less than 1, but there seems to be no reverse process at the receiving end. Does anyone know what's going on?
[16:26:20] *** Quits: jemius (~jemius@wifi-guests.rohde-schwarz.com) (Quit: Leaving)
[16:27:20] <helinox[m]> How would i create and call a C++ gnuradio block's General Work Function within an OOT? e.g. i want to fractionally resample a gr_complex vector and return the output that general work would normally. This would totally be bypassing the scheduler. Here's kinda the pseudo code i have so far. Is this dumb? Is there a better way? 
[16:27:26] <helinox[m]>         //Input Output Wrapper... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/40513da8993cfdba90de3a0d071e0aece05ceb1e)
[16:28:04] <helinox[m]> mostly it's the const void types that are confusing me, seems like a static cast may work, but i havent tried compiling yet 
[16:28:26] <Yamakaja[m]> reinterpret_cast your void pointer to the appropriate type
[16:29:16] <helinox[m]> do you know of any examples of people doing this that i could reference?
[16:29:30] <willcode4[m]> general_work is called by the framework. You override it in a block. If you do not override general_work, the default one is used, and it calls work.
[16:29:55] <Yamakaja[m]> https://github.com/analogdevicesinc/gr-ofdmradar/blob/master/lib/array_corr_impl.cc#L86-L87
[16:30:57] <helinox[m]> willcode4:  so i am doing that, this is just a special case where i'm making a mini c++ heir block within my OOT where i am acting as the scheduler 
[16:31:41] <helinox[m]> another use case would be adapting blocks to use PMT inputs/outputs instead of the scheduler 
[16:33:52] <willcode4[m]> As long as your general_work is re-entrant/thread-safe and has no side effect you can do that.
[16:34:19] <willcode4[m]> That includes work, and any functions general_work and work may call.
[16:51:37] *** Joins: Macuser (~Macuser@216.30.159.201)
[17:26:51] *** Joins: goldrak (~goldrak@bl16-27-108.dsl.telepac.pt)
[18:19:44] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:23:31] *** Joins: Macuser (~Macuser@216.30.159.201)
[18:32:00] *** Quits: schwach (~schwach@191.96.170.117) (Quit: The Lounge - https://thelounge.chat)
[18:32:23] *** Joins: schwach (~schwach@191.96.170.117)
[18:39:09] *** Joins: shibboleth (~shibbolet@user/shibboleth)
[19:31:07] *** Joins: viktorivan (~viktoriva@189.254.226.83)
[19:31:57] *** Quits: viktorivan (~viktoriva@189.254.226.83) (Client Quit)
[19:32:55] *** Joins: viktorivan (~viktoriva@189.254.226.83)
[19:39:07] *** Quits: stkrdknmibalz (~test@rrcs-75-87-43-226.sw.biz.rr.com) (Quit: WeeChat 3.0.1)
[19:40:37] <Crofton> dID MATRIX CRASH?
[19:40:41] <Crofton> urg
[19:42:08] <willcode4> Yah, the old Connectivity has been lost message.
[19:59:30] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[20:03:16] *** Joins: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de)
[20:05:51] <drmpeg> Must be the geomagnetic storm. :)
[20:06:36] <drmpeg> It is a whopper. HF blackout. https://www.ngdc.noaa.gov/stp/IONO/rt-iono/realtime/BC840_foF2.png
[20:06:45] <willcode4> I was just messing with some magnets from a hard drive. That might have done it.
[20:08:51] *** Quits: Macuser (~Macuser@216.30.159.201) (Quit: Textual IRC Client: www.textualapp.com)
[20:10:47] <willcode4> drmpeg: how do you read that graph?
[20:11:38] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:11:43] <drmpeg> It's the highest frequency that's being returned from directly overhead.
[20:11:51] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[20:12:54] <willcode4> So the fact that higher freqs are not propagating today is the indicator?
[20:13:15] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:13:37] <drmpeg> It's pretty much an indicator of the density of the ionosphere.
[20:13:41] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[20:13:47] <bpadalino> https://www.sws.bom.gov.au/HF_Systems/6/5 - you can load some neat animations there
[20:13:58] <willcode4> The Lowell Digisonde looks weird today too.
[20:15:10] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[20:19:38] <drmpeg> Millstone Hill/Boston. https://www.ngdc.noaa.gov/stp/IONO/rt-iono/realtime/MHJ45_foF2.png
[20:21:41] <bpadalino> drmpeg: hows the ATSC 3.0 stuff? do you like all the weird modulation constellations ?
[20:22:39] <drmpeg> Heh, I caused a commotion on Twitter the other day when I posted some weird constellations.
[20:22:50] <bpadalino> oh yeah? let me check your twitter
[20:24:18] <bpadalino> hrm .. srsRAN has an AVX optimized LDPC decoder for their 5G stuff .. i wonder if that is fast enough to keep up with ATSC 3.0
[20:24:50] <willcode4> Bonus points for making a version of gr-paint that can be view as a constellation.
[20:25:10] <bpadalino> neat 256 qam constellation .. it's so weird tho .. do you know the design decision as to why ?
[20:26:39] <drmpeg> It was on one of Dani's threads. https://twitter.com/ea4gpz/status/1454487227833200646
[20:27:40] <drmpeg> Although it's difficult to find branches on Twitter now.
[20:28:17] <drmpeg> https://twitter.com/dEnergy_dTime/status/1455250446520668164
[20:29:42] *** Keshl_ is now known as Keshl
[20:30:42] <bpadalino> so is it just relying more on the erasure codes and LLR calculations with the FEC to try to skew the BER results ?
[20:31:12] <drmpeg> I'm not sure how it's supposed to work.
[20:31:53] <drmpeg> There's some 2 dimensional thing mentioned.
[20:32:05] <bpadalino> huh
[20:32:07] <bpadalino> interesting
[20:32:47] *** Quits: arch3r (~ben@185.66.194.79) (Ping timeout: 264 seconds)
[20:33:28] *** Joins: arch3r (~ben@185.66.194.78)
[20:33:30] <drmpeg> Here's the progress on the code. https://www.w6rz.net/atsc3flow.png
[20:34:25] <drmpeg> All 61 tests verify.
[20:36:55] <bpadalino> you're a coding machine .. goddamn'
[20:37:27] <drmpeg> In this doc, they talk about LLR de-mapping. https://muygs2x2vhb2pjk6g160f1s8-wpengine.netdna-ssl.com/wp-content/uploads/2021/03/A327-2021-Physical-Layer-RP.pdf
[20:37:57] <drmpeg> Section 6.5
[20:38:42] <drmpeg> A lot of code is being reused from DVB-T2.
[20:38:52] <drmpeg> Tons.
[20:39:36] <bpadalino> oh gotcha .. so ATSC 3.0 was more of a crib ob T2 .. with some modifications ..
[20:39:41] <bpadalino> versus a full reimplementation
[20:39:58] <drmpeg> Super similar.
[20:40:15] <bpadalino> neat
[20:41:03] <drmpeg> Although I did get stuck on some new stuff. ClaytonargiloVE3 came in and saved the day.
[20:41:09] <bpadalino> smart guy
[20:41:40] <bpadalino> .. and here i am and i can't even get my dma to work right
[20:42:42] <drmpeg> He's awesome. I'd be 99% of the way there and he'd find the bug that I wasn't seeing.
[20:42:55] <drmpeg> Saved me days.
[20:43:05] <bpadalino> having the other set of eyes is always good
[20:43:14] <drmpeg> For sure.
[20:43:25] <bpadalino> here's the ldpc encoder and decoder with srsRAN - https://github.com/srsran/srsRAN/tree/5275f33360f1b3f1ee8d1c4d9ae951ac7c4ecd4e/lib/src/phy/fec/ldpc
[20:43:38] <bpadalino> it seems somewhat separated out in their library
[20:43:47] <drmpeg> I'll have to check that out.
[20:44:10] <bpadalino> also not sure how optimized it is for 5G-NR versus generic
[20:46:09] <drmpeg> Code lengths are probably a lot shorter.
[20:46:27] <drmpeg> than DVB.
[20:52:15] <bpadalino> makes sense
[20:54:20] <drmpeg> I collaborated with another guy on an AVX LDPC decoder. https://github.com/drmpeg/gr-dvbs2rx
[20:54:53] <bpadalino> the phase4 guy ?
[20:55:08] <drmpeg> Yeah.
[20:55:17] <bpadalino> nice .. they seem super smart too
[20:55:32] <drmpeg> I took his stuff and ported it to GNU Radio.
[20:55:59] <bpadalino> cool
[20:56:05] <drmpeg> It had pretty good performance, but not quite enough.
[20:56:30] <drmpeg> It's was like 10 Mbps I think.
[20:56:55] <drmpeg> At 25 iterations.
[20:56:59] <bpadalino> ah, 25 iterations ..
[20:57:05] <bpadalino> did it have early stopping criteria ?
[20:57:46] <drmpeg> Yes, for less error rate, it exits early.
[20:58:18] <drmpeg> So performance is BER dependent.
[20:59:21] <drmpeg> The target for DVB-T2 is 50 Mbps.
[21:00:06] <drmpeg> But in a receiver, you can't use all your cycles just on LDPC, so the actual target is higher.
[21:00:45] <drmpeg> I wonder what the constraints are for the SRS folks.
[21:01:33] <bpadalino> great question
[21:01:41] <bpadalino> i am surprised it can't hit 50 Mbps
[21:02:39] <bpadalino> is it 10Mbps single threaded ?
[21:03:02] <drmpeg> I guess for 4g/5g, the LDPC is only used for the signalling?
[21:03:16] <bpadalino> oh i thought polar codes were used for signalling in 5G-NR ..
[21:03:17] <drmpeg> Yeah, single threaded.
[21:03:39] <drmpeg> I may have that backwards.
[21:03:42] <bpadalino> ah
[21:04:05] <jholtom> ldpc is channel traffic, polar signalling
[21:04:17] <jholtom> at least in 5G-NR
[21:04:25] <bpadalino> jholtom: so for data is it still turbo ?
[21:04:49] <jholtom> no, 5G has pretty much dropped turbo codes
[21:05:13] <jholtom> LDPC is used in 5G everywhere turbo was in 4g (more or less)
[21:06:27] <bpadalino> ah ok .. so ldpc is the main fec .. got it
[21:06:45] <jholtom> yep
[21:07:09] <drmpeg> Then it will be interesting to see how fast the SRS folks can go on 5g.
[21:07:48] <drmpeg> 100's of Mbps seems difficult.
[21:08:05] *** Joins: jemius (~imperator@2001:16b8:2d45:2900:34c7:dec2:95ba:123b)
[21:08:38] <jholtom> I should really buy a USIM and experiment more
[21:08:52] <jholtom> I finally have a 5G phone in hand with dual sim options
[21:09:11] <bpadalino> oh nice
[21:09:41] <jholtom> I have a srs 4G network in the lab for stuff, but I've been doing some 5G 'garbage' recently and it probably is worth it to bring it up and see what I can do
[21:12:29] <jholtom> drmpeg: looks like srs current 5G stuff clocks in around a little under 10 Mbps
[21:15:08] <bpadalino> ah bummer .. still a bit low then
[21:16:15] <drmpeg> It's a tough nut to crack.
[21:16:46] <drmpeg> On a general purpose CPU.
[21:16:59] <bpadalino> agreed
[21:17:50] <jholtom> its even been quite the challenge on specialized hardware.  lots and lots of optimization still left on the table
[21:17:58] <bpadalino> might be interesting if there were an LDPC rfnoc block .. and if it could help out that much
[21:19:59] <jholtom> if you're feeling dangerous you could probably modify this a little bit and get it into an RFNoC block: https://github.com/cea-wind/hls_ldpc_dec
[21:20:08] <jholtom> theres also one hanging out on opencores.org
[21:21:05] <muaddib[m]> Barry Duggan: Do your packet communications tutorials depend on GNURadio 3.9 or gr-control?
[21:21:05] <muaddib[m]> I downloaded the flowgraph for the baseband example and it’s not outputting anything past the message debug’s initial print statement? It also hangs when I close the GUI. 
[21:21:05] <muaddib[m]> Any ideas?
[21:21:13] <jholtom> bpadalino: https://eprints.soton.ac.uk/374857/1/LDPCFPGASurvey.pdf this is kinda cool too (if a bit old)
[21:28:04] <bpadalino> jholtom: interesting about the HLS .. i'll read the paper ..
[21:30:59] *** Joins: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net)
[21:32:23] *** Quits: massi (~massi@host-188-15-128-106.business.telecomitalia.it) (Remote host closed the connection)
[21:34:36] *** Quits: shibboleth (~shibbolet@user/shibboleth) (Quit: shibboleth)
[21:35:48] *** Quits: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net) (Ping timeout: 268 seconds)
[21:37:06] *** Joins: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net)
[21:57:01] <muaddib[m]> It seems to be an issue in the protocol formatter block.
[21:58:03] <muaddib[m]> s/It seems to be an issue in the protocol formatter block./If i disable all the blocks and start one by one, The hang up It seems to be an issue with the hdr_format object being used by the protocol formatter block. /
[22:02:16] *** Quits: webmariner (~james@cpc95914-rdng25-2-0-cust148.15-3.cable.virginm.net) (Quit: Konversation terminated!)
[22:05:56] *** Quits: viktorivan (~viktoriva@189.254.226.83) (Quit: Leaving)
[22:14:23] <muaddib[m]> Ok, I fixed this by changing the “QT GUI” option to “No GUI”. Seems like QT is hanging it up somewhere.
[22:48:35] *** Quits: LOWWer (~LOWWer@80-109-32-19.cable.dynamic.surfer.at) (Quit: There's nothing dirtier than a giant ball of oil)
[22:52:54] *** Joins: ve7it (~LawrenceG@S0106f0f249afdb93.pk.shawcable.net)
[23:06:08] *** Quits: Alexer- (~alexer@alexer.net) (Ping timeout: 260 seconds)
[23:27:27] *** Joins: Alexer (~alexer@alexer.net)
[23:40:09] *** Joins: monkwitdafunk (uid238811@fsf/member/monkwitdafunk)
