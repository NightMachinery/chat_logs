[02:42:36] *** Quits: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374) (Ping timeout: 265 seconds)
[02:48:58] *** Joins: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374)
[02:55:17] *** Quits: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374) (Ping timeout: 268 seconds)
[04:13:45] <sm> I'll mention this here too, it's sweet: https://www.jaspervdj.be/beeraffe/ (purescript)
[04:15:55] <f-a> oh a game
[04:18:56] <sm> he talks about in the recent haskell interlude podcast
[04:19:17] <f-a> he takes good pics too
[04:20:43] <f-a> btw I have released yet another version with some of your suggestions (removing simplegame, adding blankPlaneFull and centerFull)
[04:21:06] <f-a> will reread «parse, not verify» again to decide how to handle empty stings/lists
[04:21:33] <sm> oh, nice 
[04:22:35] <f-a> yes, thanks for good usability tips
[04:23:03] <sm> I did some vty/brick hacking the last two days. I am wishing for a fast stats overlay like I did with a-t-g. I haven't thought hard, but it seems more complicated. In a-t-g things are very simple and direct
[04:23:25] <f-a> that was the goal
[04:23:28] <sm> I guess it's the difference between a declarative ui and a more close to the hardware one
[04:23:37] <f-a> «fungen, for the terminal»
[04:23:46] <sm> sweet
[04:26:29] <f-a> ohh you can combine cards!
[04:29:24] <sm> yeah. Did you not listen to the sorceress lady :)
[04:29:44] <sm> it's a sort of katmari damacy in 2d
[04:30:01] <sm> using emojis is a very clever shortcut!
[04:31:56] <sm> I don't even know what I'm doing but it's strangely satisfying
[04:33:54] <f-a> yeah in a `robotfindskitten` kind of way
[04:34:31] <alexfmpe[m]> robotwantsicecream
[04:34:46] <alexfmpe[m]> robotwantsreproduciblebuilds
[05:14:05] <EvanR> so uh I got a minimum viable demo together which uses gl to display stuff from this sprite sheet https://i.imgur.com/JVtwRrH.png
[05:14:47] <EvanR> that I ripped from open game art
[05:15:50] <EvanR> since windows and linux didn't cooperate I had to use a macbook air whose keys are falling off
[05:15:54] <sm> ooh! pretty
[05:16:24] <sm> EvanR: can you please make a plugin opengl renderer for ansi-terminal-games :)
[05:16:59] <EvanR> yeah I want to splat some character glyphs at some point
[05:17:12] <f-a> very good EvanR 
[05:17:18] <f-a> have you settled on what you want to make?
[05:17:22] <EvanR> nah
[05:17:30] <f-a> tiles suggests a roguelite
[05:17:36] <f-a> heed ’em tiles
[05:17:59] <EvanR> the open game art post where it came from has a lot more tiles
[05:18:16] <EvanR> https://opengameart.org/content/dungeon-crawl-32x32-tiles-supplemental
[05:19:30] <EvanR> ansi-terminal-game has itself as a dependency?
[05:20:38] <f-a> ouch
[05:21:05] <f-a> a dependency on *ansi-terminal* (which is different from ansi-terminal-game)
[05:21:11] <f-a> oh no
[05:21:12] <f-a> wait
[05:21:13] <EvanR> I saw that
[05:21:15] <f-a> mhhh
[05:21:36] <f-a> EvanR: ok sorry I should have checked better before parroting my answer
[05:21:43] <f-a> it is for *executables*
[05:21:50] <f-a> they are buildable with -f examples
[05:22:02] <f-a> and they depend on ansi-terminal-game themselves
[05:22:13] <EvanR> I see the Plane has a width and height, which makes sense. But now I'm inspired to implement an infinite plane of glyphs for my own purposes xD
[05:22:13] <f-a> I think hackage lumps all the dependencies in one list
[05:22:38] <EvanR> oh ok
[05:22:45] <f-a> plane being «what is displayed», would make little sense making it infinite
[05:22:58] <f-a> but I had an idea for a game based on the Library of Babel
[05:22:58] <f-a> and
[05:22:58] <f-a> well
[05:23:02] <f-a> that means infinite hexes
[05:23:16] <f-a> I tried a Map
[05:23:19] <EvanR> as a funny example, a document could extend farther than you can view at once,
[05:23:34] <EvanR> and your viewing area scrolls down
[05:23:42] <f-a> yeah that is a viewport
[05:23:56] <f-a> doable with subPlane
[05:24:00] <EvanR> or the game world is literally spread across the plane, and your view moves
[05:24:38] <f-a> but keep in mind that logic is handled by the `s -> Event -> s` function, so you most likely will have tailor made types in `s`
[05:25:13] <f-a> the drawing function being `s -> Plane`
[05:25:42] <EvanR> infinite objects simplify some things while perhaps making other things more challenging
[05:26:28] <f-a> ok let us enquire
[05:26:55] <f-a> say `Plane` is a 2d, finite grid, what would be the good data type choice?
[05:27:09] <f-a> and how would that change in case of a 2d, infinite (or ever-growable) grid?
[05:27:11] <EvanR> Vector I guess
[05:27:18] <f-a> I used Data.Array
[05:27:35] <f-a> (b/c it allows me to use tuples as indeces)
[05:27:42] <EvanR> right
[05:27:51] <f-a> now then, infinite is another pair of shoes
[05:28:27] <f-a> `Map (Integer, Integer) Cell` with center of coordinates in (0,0)?
[05:28:37] <EvanR> implementation details xD
[05:29:32] <EvanR> game of life engines use maps of cell chunks rather than 1 entry for each cell
[05:30:23] <f-a> chinks expressed in `Word`s and similar?
[05:30:36] <f-a> *chunks
[05:30:43] <f-a> chess engines do that
[05:31:08] <EvanR> sure, packed array of binary
[05:41:56] <f-a> now that you make me think about it, I could turn Cell (which is nothing but a Char plus some bools) into a Word and so obtain an unboxed array 
[05:46:13] <sm> another way: a program could observe the output streaming from a-t-g and render it as graphics
[05:46:14] <sm> some roguelike must have tried that
[05:48:19] <f-a> a-t-g is based on a very simple interface re: 3 layers of haskell cake
[05:48:34] <f-a> so plugging in — say — SDL or similar should be quite easy
[06:15:32] <EvanR> oh, I thought sm was saying a gl backend just to get more performance for text xD
[06:15:42] <EvanR> rather than actual graphics
[06:16:05] <f-a> performance ain’t that bad, check `cabal run -f balls`
[06:16:45] <sm> either, both, would be fun, though I couldn't really handle more performance right now :)
[06:17:40] <sm> I guess it would be good for the future haskell rewrite of dwarf fortress, played on a wall-size screen
[06:18:56] * sm imagines TUI games in "retina mode"
[06:19:18] <EvanR> the balrog appears rendered as a cloud of minor enemies
[06:19:37] <sm> 1024x768 chars, the new standard
[06:19:48] <EvanR> "swarm of bees" is literally a swarm of individual bees
[06:19:56] <EvanR> b's
[06:28:27] <f-a> I thought about your words about text rendering Evan
[06:28:36] <f-a> it is a really sad state of affairs
[06:29:43] <EvanR> well there are many options
[06:30:15] <EvanR> one of which is to use a browser front end with glue javascript or the whole thing in javascript or ghcjs xD
[06:30:30] <EvanR> another is native desktop app APIs for each platform or phone
[06:30:48] <EvanR> another is fixed width bitmap fonts
[06:31:43] <EvanR> so text is kind of a hard but heavily worked on subproblem of vector graphics more generally, which does seem pretty sad by comparison
[06:31:55] <sm> I think Man of Letters went with "all of them"
[06:32:54] <EvanR> after I get straight sprites working properly I will look into vector graphics
[06:33:24] <EvanR> and "framebuffer mode" graphics that has basically been forgotten
[06:33:43] <f-a> I like raster but let’s admit it, not good for large quantities of text
[06:34:50] <EvanR> like a document? yeah...
[06:38:53] <f-a> even a text adventure
[06:39:02] <f-a> I wonder what does gargoyle-free use
[09:53:06] *** Joins: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374)
[09:56:10] *** Quits: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374) (Remote host closed the connection)
[10:04:08] *** Joins: chomwitt (~chomwitt@2a02:587:dc12:3f00:12c3:7bff:fe6d:d374)
[11:07:20] *** Quits: tzh (~tzh@c-24-21-73-154.hsd1.wa.comcast.net) (Quit: zzz)
[12:30:06] *** Quits: thekyriarchy (~thekyriar@2001:470:69fc:105::493) (Quit: You have been kicked for being idle)
[13:17:57] *** Joins: fatc[m] (~fatcmatri@2001:470:69fc:105::1:389a)
[15:43:59] *** Joins: Guest17 (~Guest17@wificampus-098247.grenet.fr)
[15:45:56] *** Joins: __monty__ (~toonn@user/toonn)
[15:53:46] *** Quits: Guest17 (~Guest17@wificampus-098247.grenet.fr) (Ping timeout: 256 seconds)
[17:51:19] *** Joins: joes (~joes@2a02:8109:1b3f:b214:fc5c:a83c:7052:2a9a)
[19:37:39] <f-a> how do you keep your commits so clean ManofLetters[m]…
[19:37:39] *** Joins: thekyriarchy (~thekyriar@2001:470:69fc:105::493)
[19:38:01] <f-a> f@mkiii:~/francesco/progetti/progr/ansi-terminal-game$ darcs whatsnew | wc --line
[19:38:04] <f-a> 607
[19:38:55] <sm> g'day f-a
[19:39:04] <sm> nice work
[19:39:13] <sm> when did you start it
[19:41:06] <f-a> yesterday, according to darcs log
[19:44:14] <sm> lol
[19:44:34] <sm> dang you're fast.. and have an excellent time machine
[19:44:49] <f-a> naaa those are deletions too
[19:45:23] <f-a> http://www.ariis.it/link/t/paste1254941-0 more honest report
[19:45:30] <f-a> still messy
[19:45:40] <sm> oops I was reading that as "log" (607 commits)
[19:46:21] <sm> good stuff. I look forward to exploring this record/playback thing
[19:47:19] <f-a> let me fix it first, *but* if I can manage to do what I plan to do, you will have your «hot reload» feature
[19:49:00] <sm> oooooooh!
[19:57:25] *** Quits: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1) (Quit: The Lounge - https://thelounge.chat)
[19:59:10] *** Joins: terrorjack (~terrorjac@2a01:4f8:1c1e:509a::1)
[20:35:00] *** Joins: tzh (~tzh@c-24-21-73-154.hsd1.or.comcast.net)
[21:07:48] <EvanR> hot reload you say
[22:50:24] *** Quits: joes (~joes@2a02:8109:1b3f:b214:fc5c:a83c:7052:2a9a) (Ping timeout: 268 seconds)
