[00:02:14] *** Quits: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au) (Ping timeout: 250 seconds)
[00:07:48] *** Quits: Amadiro (~Amadiro@31.11.55.179) (Remote host closed the connection)
[00:09:46] *** Joins: Amadiro (~Amadiro@31.11.55.179)
[00:22:06] *** Joins: rawgreaze (~rawgreaze@c-24-91-94-184.hsd1.nh.comcast.net)
[00:22:06] *** Quits: rawgreaze (~rawgreaze@c-24-91-94-184.hsd1.nh.comcast.net) (Changing host)
[00:22:06] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[00:32:37] *** Quits: Warped (~Warped@user/warped) (Quit: We Gone! Bye Bye)
[00:34:08] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 268 seconds)
[01:03:32] *** Quits: zer0bitz (~zer0bitz@2001:2003:f444:a000:25:3430:6d5f:c01) (Ping timeout: 240 seconds)
[01:08:58] *** Quits: Gallomimia (~Gallomimi@node-1w7jra2a2gqpwaupb8ren0he5.ipv6.telus.net) (Quit: Leaving)
[01:14:15] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Ping timeout: 276 seconds)
[01:15:12] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Quit: Going offline, see ya! (www.adiirc.com))
[01:16:06] <Hash> Alipha: no I have all th etime.
[01:16:16] <Hash> I'll go for 4 hours a day.
[01:16:27] <Hash> If I can do an  hour or two extra here and there, good. Otherwise no big deal.
[01:16:35] <Hash> Yes! Study group.
[01:16:40] <Hash> I'll ahve to find one. Thank you
[01:24:45] *** Joins: tanis (~tanis@user/tanis)
[01:24:59] *** Parts: tanis (~tanis@user/tanis) ()
[01:25:37] *** Joins: tanis (~tanis@user/tanis)
[01:30:24] *** Quits: maroon (tinycrypt@user/maroon) (Quit: I do not trust anyone who talks of themselves in the third person - Bob Dole)
[01:35:16] *** Quits: _z3r0_ (~Z3R0@2a02:2f0f:920b:b800:89ed:4f7c:9680:bd77) (Quit: WeeChat 3.4)
[01:38:31] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[01:47:39] *** Quits: Colty (Miramar-FL@user/host-pond) (Excess Flood)
[01:47:40] *** Parts: _mikey (~mikey@user/mikey/x-4335048) (WeeChat 3.4)
[01:49:43] *** Joins: Colti (Miramar-FL@user/host-pond)
[02:08:06] *** Quits: son0p (~ff@181.136.122.143) (Remote host closed the connection)
[02:21:33] *** Quits: eneeigriega (~eneeigrie@189.163.73.132) (Ping timeout: 256 seconds)
[02:29:10] *** Joins: eneeigriega (~eneeigrie@189.163.73.132)
[02:36:17] *** Quits: chomwitt (~chomwitt@2a02:587:dc06:be00:12c3:7bff:fe6d:d374) (Ping timeout: 240 seconds)
[02:37:57] *** Quits: eneeigriega (~eneeigrie@189.163.73.132) (Ping timeout: 240 seconds)
[02:41:37] <Alipha> Hash: or even just a friend to hold yourself accountable. tell your friend your schedule and have them check in on if you stick to your schedule
[02:43:55] *** Quits: supalada (supalada@gateway/vpn/protonvpn/supalada) (Quit: Leaving)
[02:45:35] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[02:49:23] *** Quits: inlight (~inlight@user/inlight) (Remote host closed the connection)
[03:05:01] *** Joins: eneeigriega (~eneeigrie@189.163.73.132)
[03:06:37] *** Quits: xenoterracide (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Ping timeout: 240 seconds)
[03:27:05] *** Quits: eneeigriega (~eneeigrie@189.163.73.132) (Ping timeout: 256 seconds)
[03:29:17] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[03:32:09] *** Quits: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (Read error: Connection reset by peer)
[03:34:00] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[03:34:32] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 240 seconds)
[03:35:17] *** Joins: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca)
[03:38:58] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (K-Lined)
[03:42:01] *** Quits: Trazi (~trazi@user/trazi) (Ping timeout: 256 seconds)
[03:45:59] *** Quits: tanis (~tanis@user/tanis) (Ping timeout: 256 seconds)
[03:46:38] *** Joins: karstensrage (~karstensr@nibbler.warped.com)
[03:47:04] *** Quits: karstensrage (~karstensr@nibbler.warped.com) (Changing host)
[03:47:04] *** Joins: karstensrage (~karstensr@user/karstensrage)
[03:49:59] *** Joins: jarthur (~jarthur@2603-8080-1540-002d-b8c4-ca89-654d-bf74.res6.spectrum.com)
[03:54:00] *** Joins: eneeigriega (~eneeigrie@189.163.73.132)
[03:54:51] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[03:58:37] *** Quits: eneeigriega (~eneeigrie@189.163.73.132) (Ping timeout: 240 seconds)
[04:00:31] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Ping timeout: 256 seconds)
[04:03:29] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[04:05:03] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (K-Lined)
[04:05:20] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[04:07:31] <caveman> how to forward messages over hops/relays, such that the relays cannot delete relays before them?  e.g. i send a message, and that message is forwarded by 5 relays, until it reaches the destination.  what are my options to design a system such that a relay cannot delete the relays before it?  
[04:08:56] *** Joins: dgjhdgj2 (~sdfgsdfg@user/sdfgsdfg)
[04:09:05] <caveman> one way that i thought about is to have the relays add their meta data, then form an encrypted ball, then relay the encrypted ball, all the way until it reaches the destination.  but this requires to encrypt the balls to the destination's key (or public key).
[04:09:34] <caveman> my specific problem is that i don't know the destination beforehand.
[04:10:37] *** Quits: Wulf (~Wulf@user/wulf) (Ping timeout: 240 seconds)
[04:10:51] *** Joins: Soni (~quassel@autistic.space)
[04:10:59] <TimMc> I'm not sure what "before" means here.
[04:11:05] *** Quits: dgjhdgj2 (~sdfgsdfg@user/sdfgsdfg) (K-Lined)
[04:11:11] <TimMc> or "delete", possibly
[04:11:20] <TimMc> You're familiar with how Tor's onion routing works?
[04:11:30] <caveman> yes.
[04:12:07] <caveman> the source chooses all the hops, makes the onion ball, and throws it.  the path is determined by the source.  because the source knows everything:  the destination and hops in the middle.
[04:12:46] *** Joins: Wulf (~Wulf@user/wulf)
[04:13:10] <caveman> but in my case:  i don't know the destination, and i don't know the hops in the path.  yet, i want the destination to know all hops in the middle.
[04:13:34] <TimMc> Building up signatures, perhaps.
[04:13:57] <caveman> what would prevent subsequent hops to delete signatures of the previous hops?
[04:14:32] <caveman> e.g. hop 2 got message forwarded to it from hop 1.  what prevents hop 2 from deleting the signature from hop 1, in order for hop 2 to claim that it's the 1st hop?
[04:14:34] <TimMc> I'm missing one of the design criteria here.
[04:15:28] <TimMc> Message goes from sender to receiver, via some list of relays. Sender does not necessarily know anything except the first relay.
[04:15:36] <TimMc> What properties are you trying to ensure will hold?
[04:16:25] *** Joins: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg)
[04:17:49] *** Quits: sdfgsdfg (~sdfgsdfg@user/sdfgsdfg) (Client Quit)
[04:18:00] <caveman> when the message reaches the destination, i want the destination to know all hops that were ever used to relay this message to him.
[04:18:24] <caveman> yet, no one knows the destination except the last hop.
[04:23:02] <caveman> sender only knows hop 1.
[04:23:04] <caveman> hop 1 only knows sender and hop 2.
[04:23:07] <caveman> hop 2 only knows hop 1 and hop 3.
[04:23:09] <caveman> hop 3 only knows hop 2 and hop 4.
[04:23:11] <caveman> ...
[04:23:13] <caveman> hop n only knows hop n-1 and destination.
[04:23:14] <caveman> destination only knows hop n.
[04:23:52] <caveman> is it possible for destination to know hops 1, 2, ..., n-1?
[04:24:05] <caveman> err, let me rephrase.
[04:24:36] <caveman> is it possible for destination to guarantee to know hops 1, 2, ..., n-1?  e.g. hop n cannot lie to destination that it's the only hop in the middle.
[04:24:58] *** Joins: frost (~frost@user/frost)
[04:25:16] *** Joins: eneeigriega (~eneeigrie@189.163.73.132)
[04:28:53] <TimMc> It sounds like this is just like onion routing, except in reverse order.
[04:30:02] *** Quits: eneeigriega (~eneeigrie@189.163.73.132) (Ping timeout: 250 seconds)
[04:30:36] *** Quits: mmlj4 (~mmlj4@ip174-69-109-162.no.no.cox.net) (Remote host closed the connection)
[04:31:55] <TimMc> Have you looked into how onion services (aka hidden services) work?
[04:32:12] <caveman> no.  
[04:32:58] <TimMc> If I recall correctly, the client builds a path to a rendezvous server, and so does the onion service.
[04:34:12] <TimMc> When a message goes from client to onion service, the first half of the journey is a "request" (unwrapping the onion), and the second half of the journey is a "response" (rewrapping).
[04:34:27] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Quit: exiting 3.3)
[04:34:59] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:35:51] <caveman> the reason i'm thinking about this problem is to see if there is a way for cryptocurrencies to reward forwarders that relay transactions to other peers (because they stored the transactions in their mempool).
[04:38:30] <TimMc> So the path isn't supposed to be a *secret*, but isn't generally predictable?
[04:38:46] <caveman> right
[04:38:59] <TimMc> and you want to keep relays from taking credit away from earlier relays
[04:39:06] <caveman> yeah.
[04:39:15] <TimMc> Ah, very different shape to that problem.
[04:40:45] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 256 seconds)
[04:41:49] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Remote host closed the connection)
[04:47:30] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[04:53:00] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 250 seconds)
[04:57:04] *** Joins: dademurphy (~dademurph@45.63.16.83)
[04:59:17] <Alipha> caveman: do the source and destination share some secret?
[04:59:36] <caveman> no.
[04:59:52] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:00:25] *** Quits: blyat-73 (~hjgkjhgkj@46.235.96.249) (Quit: Leaving)
[05:01:41] *** Quits: dademurphy (~dademurph@45.63.16.83) (Quit: ZNC 1.8.2 - https://znc.in)
[05:02:11] *** Joins: dademurphy (~dademurph@45.63.16.83)
[05:03:11] <Alipha> caveman: does the destination know who the original sender was? or is there proof-of-work involved in the original sender creating the original message?
[05:03:55] <int-e> Hmm, but maybe one can replace the shared secret by a time shift. To wit: When preparing a messages, sender generates a seed for a CSPRNG, and adds random data for each intended hop to the message.  Each hop takes their chunk of data and replaces it by a signatrue of that data with their own key. After a while, sender publishes the generator and everyone can verify that the signatures are okay?
[05:04:46] <int-e> This is all flawed though because nothing is preventing a single actor from posing as several hops... this is intrinsic in the setup and no amount of crypto will fix it.
[05:05:09] <int-e> (I think)
[05:05:44] *** Joins: elguaposghost (elguaposgh@gateway/vpn/protonvpn/elguaposghost)
[05:06:12] <caveman> Alipha: the original sender signs the message with his private key.  the message has a special format (e.g. says how much money he is sending to another address).  if anyone wants to delete the signature from this original message, then the message is invalid.  if someone puts his own signature instead, then he will be sending the money instead, which is very nice of him (lel).
[05:06:34] <caveman> Alipha: so yes, the destination will know the public key of the sender.
[05:07:15] <Alipha> caveman: okay, so sender can s=sign(message || hop_1_pk). hop_1 can append s1=sign(s || hop_2_pk). hop_2 can append s2=sign(s1 || hop_3_pk). etc.
[05:08:11] <int-e> but then hop_42 can just drop all the appended data and pretend to be the first hop.
[05:08:20] <caveman> true.  but hop2 may delete hop1's signature and lie.  e.g. s1_lie = sign(s || hop_3_pk)
[05:08:36] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 250 seconds)
[05:08:42] <caveman> ^ as int-e said (i lagged)
[05:08:43] <Alipha> caveman: the sender signs who the first hop is
[05:08:46] <int-e> so you need to destroy some of the original sender's message on each hop
[05:09:12] <int-e> oh.
[05:09:12] <caveman> oh /me re-thinks
[05:09:20] <Alipha> and hop 1 signs who hop 2 is
[05:09:25] <Alipha> and appends that
[05:09:27] <int-e> Alipha: thanks, that's clever
[05:09:32] <caveman> :D
[05:10:19] <Alipha> ... this is really just our CA public key infrastructure ;-)
[05:10:36] <caveman> wow.  so neat.  i guess this way bitcoin can reward forwarders that maintain a mempool and host transactions.
[05:12:56] <int-e> For some reason I wanted to send the same message to every "downstream" hop.
[05:14:18] * caveman wonders if any cryptocurrency does Alipha's clever trick to reward forwarders.
[05:14:42] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:15:49] <int-e> the game theory is still non-trivial; hops who receive the same message through different paths can pick favorites
[05:16:04] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[05:17:28] *** Quits: elguaposghost (elguaposgh@gateway/vpn/protonvpn/elguaposghost) (Quit: Leaving)
[05:18:54] <caveman> Alipha: how many signatures will hop2 see?
[05:19:14] <Alipha> caveman: two
[05:19:37] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 240 seconds)
[05:19:55] <caveman> lel.  so sneaky.  makes me laugh :D
[05:19:59] *** Quits: learner36 (~learner36@2607:fea8:129f:c220:9db8:7181:4885:4fc7) (Remote host closed the connection)
[05:20:44] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[05:21:08] <Alipha> Hop 2 will receive `message || hop_1_pk || s || hop_2_pk || s1` where s and s1 are signatures I specified above
[05:22:18] <caveman> int-e: as for the game theory side, i think the rewards should be such that each subsequent forward splits the reward of the previous forwarder in half.  e.g. if forwarding fee is 10 coins, and we got 5 forwarders, then they get:  5, 2.5, 1.25, 0.625 and 0.625, respectively.  this way forwarders will have the incentive to pick the shortest path, which will help making the block chain database
[05:22:19] <caveman> smaller.
[05:24:18] <caveman> Alipha: yeah, got it.  neat trick.  perfect.
[05:24:23] <caveman> thanks a lot.
[05:24:55] <Alipha> If hops are in kahoots with each other, then they could rewrite the chain. eg, if hop5 received a message, he could ask hop1 to re-sign the message so that hop1 is specifying hop5 is the destination instead of hop2. Though then I'm not sure why hop1 wouldn't just send the message to hop5 in the first place
[05:26:15] <caveman> if hop1 meets hop5, he will.  the scenario is that in this p2p network (like bitcoin), i think the average path from sender until the miner is about 8 or 9 forwarders/peers?
[05:27:17] <int-e> really? wouldn't everyone know the big mining pools and forward there directly?
[05:27:48] <caveman> not sure.  i could be wrong.  
[05:27:56] <int-e> (I don't know, but it seems too high to me for that reason.)
[05:36:43] <caveman> Alipha: basically, hop5 is racing against time.  if he wastes time to talk to hop1, in order to shorten the path (which is a nice optimisation imo as it will reduce the blockchain's size), his block may not make it in the longest chain as another path of forwarders may deliver it 1st to a block maker (miner/staker)
[05:37:23] <caveman> i personally wish if hop5 succeeds in shortening it.  but probably he won't as he is racing against possibly other hops in other paths.
[05:38:03] <Alipha> caveman: or hop5 and hop1 could have traded private keys
[05:39:26] <caveman> interesting.  game theoretically, they have the incentive to do this.
[05:42:37] *** Quits: jarthur (~jarthur@2603-8080-1540-002d-b8c4-ca89-654d-bf74.res6.spectrum.com) (Ping timeout: 240 seconds)
[05:43:24] *** Joins: jarthur_ (~jarthur@2603-8080-1540-002d-40a9-cbd8-8be9-e1d1.res6.spectrum.com)
[05:45:51] <caveman> any solution to this?  i'm thinking if the solution is to require a forwarding hop to lock/freeze some money by the same private key.  this way, if he shares the private key, he will risk the other person stealing his locked money.
[05:52:57] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[05:54:15] <caveman> basically, block makers will have a list of private keys of 1st hops to delete hops in the middle, in order to maximise their gain.
[06:00:37] *** Joins: eneeigriega (~eneeigrie@189.163.73.132)
[06:04:57] *** Quits: eneeigriega (~eneeigrie@189.163.73.132) (Ping timeout: 240 seconds)
[06:09:01] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[06:13:19] <int-e> caveman: well all those people have to trust one another, since they can otherwise "steal" each other's benefits. so... effectively this would be a mining pool
[06:15:05] <int-e> the fix is for other actors to learn who pools with whom and not forward messages from hop1 to hop5 since there's never a reward for that :P
[06:15:08] <int-e> sadly
[06:15:48] *** Joins: Authenticity (~integrity@194.5.49.34)
[06:17:29] <caveman> yeah.  i like this fix, as it is simpler implementation wise.  just let the mess happen, and allow hops to retaliate in their own ways (in the same way some hops cooperated to lie in their own ways).
[06:40:21] *** Joins: eneeigriega (~eneeigrie@189.163.73.132)
[06:43:16] <TimMc> Hah, so it does end up being a signature chain. Called it!
[06:53:14] <ms7821> i
[06:53:25] <ms7821> oops
[06:58:27] *** Quits: Authenticity (~integrity@194.5.49.34) (Changing host)
[06:58:27] *** Joins: Authenticity (~integrity@user/sdfgsdfg)
[07:05:01] *** Quits: Authenticity (~integrity@user/sdfgsdfg) (Quit: You attract the wrong things if you have no sense of who you are)
[07:06:03] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[07:16:35] *** Quits: eneeigriega (~eneeigrie@189.163.73.132) (Ping timeout: 256 seconds)
[07:18:04] *** Joins: eneeigriega (~eneeigrie@189.163.73.132)
[07:23:57] *** Quits: jarthur_ (~jarthur@2603-8080-1540-002d-40a9-cbd8-8be9-e1d1.res6.spectrum.com) (Ping timeout: 240 seconds)
[07:27:18] *** Joins: jarthur (~jarthur@cpe-70-114-198-37.austin.res.rr.com)
[07:34:41] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[07:35:03] *** Joins: Trazi (~trazi@user/trazi)
[07:46:12] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[07:50:17] *** Quits: Trazi (~trazi@user/trazi) (Ping timeout: 240 seconds)
[08:01:49] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: You attract the wrong things if you have no sense of who you are)
[08:04:45] *** Joins: _z3r0_ (~Z3R0@2a02:2f0f:920b:b800:89ed:4f7c:9680:bd77)
[08:11:45] *** Joins: euidzero (~euidzero@158.101.10.150)
[08:23:06] *** Joins: Neutron7 (~stillnoob@96.73.191.185)
[08:28:54] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[08:31:25] <Alipha> Nodes would perhaps just learn which connections aren't as profitable and choose either not to send messages to those nodes, or to prioritize sending messages to other nodes first before the less profitable nodes.
[08:32:08] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[09:38:02] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[09:41:32] *** Quits: rawgreaze (~rawgreaze@user/rawgreaze) (Ping timeout: 240 seconds)
[09:52:07] *** Joins: rawgreaze (~rawgreaze@c-24-91-94-184.hsd1.nh.comcast.net)
[09:52:07] *** Quits: rawgreaze (~rawgreaze@c-24-91-94-184.hsd1.nh.comcast.net) (Changing host)
[09:52:07] *** Joins: rawgreaze (~rawgreaze@user/rawgreaze)
[09:53:24] *** Joins: Trazi (~trazi@user/trazi)
[10:10:33] *** Quits: Trazi (~trazi@user/trazi) (Ping timeout: 256 seconds)
[10:20:37] *** Joins: chomwitt (~chomwitt@2a02:587:dc06:be00:12c3:7bff:fe6d:d374)
[10:36:23] *** Joins: Nimrodel (~Nimrodel@athedsl-59422.home.otenet.gr)
[11:10:37] *** Parts: _mikey (~mikey@user/mikey/x-4335048) (WeeChat 3.4)
[11:11:24] *** Quits: Deknos (~someone@user/menace) (Quit: Deknos)
[11:14:42] *** Joins: zulutango (~zulutango@static-n58-105-160-58.mas4.nsw.optusnet.com.au)
[11:39:02] *** Joins: andreasbuhr (~quassel@p549db13b.dip0.t-ipconnect.de)
[11:39:14] *** Quits: andreasbuhr (~quassel@p549db13b.dip0.t-ipconnect.de) (Remote host closed the connection)
[11:40:12] *** Joins: andreasbuhr (~quassel@p549db13b.dip0.t-ipconnect.de)
[11:40:12] *** Quits: andreasbuhr (~quassel@p549db13b.dip0.t-ipconnect.de) (Client Quit)
[11:54:27] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[11:58:05] *** Quits: _z3r0_ (~Z3R0@2a02:2f0f:920b:b800:89ed:4f7c:9680:bd77) (Quit: WeeChat 3.4)
[11:59:04] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: You attract the wrong things if you have no sense of who you are)
[12:01:20] *** Joins: funabashi (~funabashi@2a00:d880:5:7d4::dc26)
[12:11:07] *** Joins: Guyver2 (~Guyver@guyver2.xs4all.nl)
[12:12:28] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[12:20:30] *** Joins: machinedgod (~machinedg@24.105.81.50)
[12:34:34] *** Joins: Trazi (~trazi@user/trazi)
[12:39:32] *** Joins: Haohmaru (~Haohmaru@195.24.53.110)
[12:41:37] *** Quits: Trazi (~trazi@user/trazi) (Ping timeout: 240 seconds)
[12:45:11] *** Quits: Nimrodel (~Nimrodel@athedsl-59422.home.otenet.gr) (Quit: Leaving)
[12:45:36] <br1ck> https://crypto.stackexchange.com/questions/98101/are-there-any-schemes-for-support-time-limited-decryption-that-are-not-based-on
[12:48:26] *** Quits: AEtherC0r3 (~quassel@snf-734901.vm.okeanos.grnet.gr) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[12:49:26] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[12:50:02] *** Joins: pagios (~pagios@life.is-a.beauty)
[12:50:07] *** Joins: AEtherC0r3 (~quassel@snf-734901.vm.okeanos.grnet.gr)
[12:53:45] *** Quits: t0x0sh (~tosh@176.158.137.106) (Ping timeout: 256 seconds)
[12:57:36] *** Joins: maroon (tinycrypt@user/maroon)
[13:23:36] *** Quits: kish` (~aqua@user/aqua) (Quit: Leaving)
[13:26:34] *** Joins: MajorBiscuit (~MajorBisc@c-001-025-008.client.tudelft.eduvpn.nl)
[13:31:55] *** Joins: kish` (~aqua@user/aqua)
[13:34:31] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:36:08] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[13:48:43] *** Quits: lithiumpt (~lithiumpt@195.216.219.150) (Ping timeout: 256 seconds)
[13:49:02] *** Joins: lithiumpt (~lithiumpt@195.216.219.150)
[14:07:29] *** Joins: BOKALDO (~BOKALDO@user/bokaldo)
[14:08:18] *** Joins: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com)
[14:16:02] *** Quits: Lord_of_Life (~Lord@user/lord-of-life/x-2819915) (Ping timeout: 240 seconds)
[14:18:01] *** Joins: Lord_of_Life (~Lord@user/lord-of-life/x-2819915)
[14:18:31] *** Joins: tanis (~tanis@user/tanis)
[14:27:12] *** Joins: Trazi (~trazi@user/trazi)
[14:31:33] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Quit: You attract the wrong things if you have no sense of who you are)
[14:33:57] *** Quits: Trazi (~trazi@user/trazi) (Ping timeout: 240 seconds)
[14:35:42] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Ping timeout: 276 seconds)
[14:47:28] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[14:52:16] *** Joins: sdfgsdfg (~dfghsfgs@user/sdfgsdfg)
[15:09:17] *** Quits: HumanG33k (~HumanG33k@2a01:e0a:95:5d90:215:c5ff:fe68:fb04) (Ping timeout: 240 seconds)
[15:11:39] *** Quits: sdfgsdfg (~dfghsfgs@user/sdfgsdfg) (Ping timeout: 268 seconds)
[15:40:50] *** Joins: frost (~frost@user/frost)
[16:13:37] *** Quits: br1ck (~br1ck@150.140.193.82) (Remote host closed the connection)
[16:15:11] *** Joins: br1ck (~br1ck@150.140.193.82)
[16:20:47] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[16:24:00] *** Joins: freeyao (~freeyao@36.61.142.221)
[16:26:00] *** Joins: freeyao_ (~freeyao@li1894-170.members.linode.com)
[16:28:09] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Ping timeout: 276 seconds)
[16:28:57] *** Quits: freeyao (~freeyao@36.61.142.221) (Ping timeout: 240 seconds)
[16:29:46] *** Joins: freeyao (~freeyao@36.61.142.221)
[16:33:07] *** Joins: frost (~frost@user/frost)
[16:33:17] *** Quits: freeyao_ (~freeyao@li1894-170.members.linode.com) (Ping timeout: 240 seconds)
[16:36:54] *** Joins: dez (uid92154@user/dez)
[16:40:00] *** Joins: Guest6266 (~Guest62@82-65-196-143.subs.proxad.net)
[16:40:22] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[16:40:44] *** Quits: freeyao (~freeyao@36.61.142.221) (Read error: Connection reset by peer)
[16:41:07] *** Joins: freeyao (~freeyao@36.61.142.221)
[16:46:05] *** Joins: _z3r0_ (~Z3R0@2a02:2f0f:920b:b800:89ed:4f7c:9680:bd77)
[16:46:21] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Ping timeout: 276 seconds)
[16:49:18] *** Joins: Trazi (~trazi@user/trazi)
[16:50:41] *** Quits: Guest6266 (~Guest62@82-65-196-143.subs.proxad.net) (Quit: Client closed)
[16:55:09] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Quit: Lost terminal)
[16:59:27] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[17:01:02] *** Quits: Trazi (~trazi@user/trazi) (Ping timeout: 240 seconds)
[17:02:39] *** Joins: freeyao_ (~freeyao@36.61.142.221)
[17:04:13] *** Quits: freeyao (~freeyao@36.61.142.221) (Ping timeout: 256 seconds)
[17:09:06] *** Quits: Sofia (~sofia@gateway/tor-sasl/sofia) (Ping timeout: 276 seconds)
[17:10:24] *** Joins: freeyao (~freeyao@li1894-170.members.linode.com)
[17:11:47] *** Quits: freeyao (~freeyao@li1894-170.members.linode.com) (Client Quit)
[17:12:57] *** Quits: freeyao_ (~freeyao@36.61.142.221) (Ping timeout: 240 seconds)
[17:15:27] *** Joins: mikrosis (~mikrosis@dynamic-046-114-175-184.46.114.pool.telefonica.de)
[17:22:13] *** Joins: pergaminho (~pergaminh@user/pergaminho)
[17:25:17] *** Quits: mikrosis (~mikrosis@dynamic-046-114-175-184.46.114.pool.telefonica.de) (Ping timeout: 240 seconds)
[17:25:29] *** Quits: baakeydow (~baake@2001:41d0:203:b12c::) (Quit: baakeydow)
[17:26:02] *** Joins: mikrosis (~mikrosis@dynamic-046-114-172-042.46.114.pool.telefonica.de)
[17:26:26] *** Joins: unmanbearpig (~unmanbear@user/unmanbearpig)
[17:35:48] *** Joins: baakeydow (~baake@2001:41d0:203:b12c::)
[17:38:16] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[17:38:57] *** Joins: d1cor (~diego@179.63.242.120)
[17:39:55] *** Quits: frost (~frost@user/frost) (Ping timeout: 256 seconds)
[17:41:28] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:e5df:5139:b50:d780)
[17:42:07] *** Joins: frost (~frost@user/frost)
[17:46:09] *** Joins: gamja (~gamja@i5E861FBC.versanet.de)
[17:47:47] *** Quits: CryptoDavid (uid14990@id-14990.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[17:48:22] <gamja> checking for certificate transparency does depend on the individual application, correct? like you need some library calls to openssl for checking the SCTs?
[17:53:41] <yawkat> sure, but i dont know if openssl supports it at all
[17:53:54] <gamja> it does
[17:56:01] <gamja> so considering an application which does not check SCTs it will simply ignore any send SCTs ?
[17:56:34] <yawkat> yes
[18:15:03] <gamja> webservers with tls should support SCTs nowadays by default? i think this is strictly only required for browsers so some tls server which does not cater to browsers could theoretically not send SCTs ?
[18:17:37] <yawkat> i think it's usually just embedded in the cert
[18:20:50] <yawkat> hm cant find statistics on this.
[18:22:24] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[18:22:33] <woggle> If it's not in the cert (which I think is almost always true), it can be delivered via a stapled OCSP response, which a webserver would probably support for other reasons.
[18:30:44] *** Joins: Trazi (~trazi@user/trazi)
[18:37:43] *** Quits: Trazi (~trazi@user/trazi) (Ping timeout: 256 seconds)
[18:41:56] *** Quits: llorllale (~llorllale@2607:9880:3a18:69:e5df:5139:b50:d780) (Ping timeout: 268 seconds)
[18:43:37] *** Joins: llorllale (~llorllale@198.98.119.85)
[18:44:22] *** Joins: dude12312414 (~test@gateway/tor-sasl/dude12312414)
[18:47:34] *** Joins: Trazi (~trazi@user/trazi)
[18:49:31] *** Quits: gamja (~gamja@i5E861FBC.versanet.de) (Quit: Client closed)
[18:53:41] *** Joins: Warped (~Warped@user/warped)
[18:54:53] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 268 seconds)
[18:57:32] *** Quits: Trazi (~trazi@user/trazi) (Ping timeout: 240 seconds)
[19:00:17] *** Joins: xenoterracide (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net)
[19:02:20] *** Quits: frost (~frost@user/frost) (Ping timeout: 250 seconds)
[19:12:22] <caveman> i think i found a bug in bitcoin.
[19:13:48] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
[19:13:52] <riv> wrong channel
[19:16:06] <caveman> bitcoin's difficulty is based on the timestamp in mined blocks, which is constrained with past blocks' timestamps, and must not be ahead of the consensus (all nodes) timestamp by 2 hours.
[19:16:08] <caveman> the vulnerability goes like this:  miners agree on an acceleration rate for the clock to tick faster and faster for every 2016 blocks, and use smart contracts to incentivise other nodes that, if the block makes it into the longest chain, then they will get some percentage of the mining reward.
[19:16:10] <caveman> result:  bitcoin algorithm will be fooled to reduce the difficulty (as it thinks the time is moving faster), and miners will mine crazy number of blocks per actual time.
[19:16:13] <riv> caveman: wrong channel
[19:16:27] *** Quits: xenoterracide (~xenoterra@99-124-139-34.lightspeed.iplsin.sbcglobal.net) (Ping timeout: 256 seconds)
[19:17:10] <halosghost> sounds like an attack (moreso than a bug) for a system that's reasonably off-topic here ☺
[19:18:19] <yawkat> consensus attack broken by 51% attack, more at 11
[19:18:59] <caveman> imo such aspects of cryptocurrency should be on topic, similar to how other applications of cryptography are on-topic, like pki, web of trust, etc.
[19:19:00] <halosghost> totally unrelated: I'm not a hard-line fan of docker (usually a bit of the opposite), but `act` is just absolutely incredible
[19:19:43] <riv> caveman: you're wrong, stop
[19:19:53] <caveman> riv: imo topic has a bug.  there should be a clear distinction about which part of cryptocurrency is off-topic to cryptography.
[19:19:56] <halosghost> caveman: but those aspects affect cryptography more generally; if that attack is more interesting than a 51% attack on a BFT consensus system, then you could/should phrase it as-such and that might be of-interest
[19:20:06] <riv> this isnt bitcoin chat
[19:20:16] <caveman> ^ strawman.
[19:20:30] <riv> just sop it
[19:20:33] <riv> just stop it*
[19:20:47] <caveman> ^ straight medieval dictatorship.
[19:21:01] <halosghost> …
[19:21:11] <riv> just go somewhere else to talk about bitcoins
[19:21:28] <riv> if there's a specific person you want to talk about it with, PM them
[19:21:34] <riv> don't use this channel for it
[19:21:57] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 240 seconds)
[19:22:04] <caveman> same goes to web of trust?  go t gpg channel?
[19:22:32] <yawkat> i dont see gpg in the topic
[19:22:43] <halosghost> Joy of Cryptography is incredibly refreshing; I've found it the most engaging crypto textbook so far and feel like a few of the concepts I've worked through have been things I've been told numerous times but never quite grasped (and finally do)
[19:24:00] <halosghost> kind of, in-parallel, working through ^, Boneh and Shoup's A Graduate Course in Applied Cryptography; supplementing both with cryptopals and cryptohack for more hands-on experience building
[19:24:10] <yawkat> i'm just happy i dont have to download katz&lindell from libgen every time i want to cite something
[19:24:26] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[19:24:33] <aczid> holgersson: cool, looks useful
[19:24:47] <aczid> oop sorry
[19:24:50] <aczid> meant to hilight halosghost 
[19:25:05] <TimMc> riv: Eh, I think it's fine to talk about cryptocurrency *cryptography* (and security from a technical level) -- as long as it doesn't suck all the oxygen out of the room.
[19:25:09] <halosghost> aczid: I hope it is indeed helpful
[19:25:19] <halosghost> aczid: all four of those resources I mentioned certainly have been fo rme
[19:25:22] <halosghost> s/o r/or /
[19:25:33] <riv> TimMc: :/
[19:26:01] <caveman> riv: by bitcoin, i mean its algorithm.  by your interpretation of /topic, i think it would imply that we shouldn't discuss web of trust algorithms.  imo we'll end up limited to discussing basic cryptographic premises like symmetric/asymmetric enc/dec, hashing, etc.
[19:26:25] <halosghost> TimMc: I think that's a tough slope to not slip down. It's much easier if the concepts-under-discussion are applicable/phraseable in such a way that they're of-interest outside cryptocurrencies
[19:26:39] <halosghost> if only to help deliniate what makes sense where
[19:26:52] <halosghost> (or, easier still, just go to cryptocurrency channels to discuss them; that's what I do)
[19:26:57] <TimMc> caveman: In this case, "more than half of miners conspire" is already considered out-of-scope in Bitcoin's security model, as yawkat noted.
[19:28:09] <TimMc> riv: Think of it like off-topic chat -- it should never be so voluminous or disruptive that it pushes out on-topic chat.
[19:28:17] <TimMc> but is otherwise generally acceptable
[19:28:45] *** Quits: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net) (Quit: WeeChat 3.3)
[19:28:53] <TimMc> So cryptocurrency talk in general? *Always* is a problem. Cryptocurrency tech? Eh... consider it the same as off-topic.
[19:29:11] <TimMc> I'm not an op here, though. vOv
[19:29:21] <caveman> TimMc: maybe with addition:  ``... and to not make important people /part'' (so that whatever is off-topic has to be interesting.
[19:29:33] <caveman> )
[19:29:37] <TimMc> heh
[19:29:57] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[19:30:16] <MacGyver> It doesn't help that all caveman ever talks about is cryptocurrencies as a general concept, but yes, attacks on consensus algorithms aren't necessarily so off-topic as to warrant ##C++-style enforcement.
[19:30:38] <MacGyver> That being said, "proof of work consensus algorithm breaks when 51% of participants conspire" is also tremendously uninteresting.
[19:30:45] <MacGyver> *Duh*.
[19:30:59] <caveman> lel.  months ago, i was ``ever'' talking about key derivation functions.
[19:31:52] <caveman> MacGyver: about the 51% consensus thing, the catch is:  can we design rules so that the is an incentive to play nice?
[19:32:10] <MacGyver> *That* is a social issue which *is* off-topic enough to want to shut it down.
[19:32:20] <MacGyver> Technically there's nothing you can do there.
[19:32:29] <caveman> so, web-of-trust is off-topic?
[19:33:01] * caveman goes afk
[19:33:03] <MacGyver> I don't see web-of-trust discussions routinely spiral into libertarian wankfests.
[19:33:20] <MacGyver> But if they do: yeah.
[19:33:27] <riv> There is no reason we should platform bitcoin discussion here
[19:34:24] <TimMc> MacGyver++
[19:34:35] <halosghost> there are, to riv's point, lots of bitcoin channels on libera
[19:35:13] <halosghost> 38 by my very slapdash count
[19:35:21] <halosghost> so… you know… many options besides this channel
[19:35:59] *** Joins: AllMyNames (~AllMyName@user/allmynames)
[19:36:14] <halosghost> riv: the only reason I mull on my slightly softer stance is that, if the discussion is applicable to other things in cryptography, it might lead to valuable discussion. But that's a lot of conditionals and cavetas
[19:36:25] <halosghost> s/caveta/caveat/
[19:36:46] <caveman> <MacGyver> I don't see web-of-trust discussions routinely spiral into libertarian wankfests.   <--   strawman.
[19:37:12] <caveman> ironically, right now, the truly off-topic discussion is this meta discussion.
[19:37:30] <TimMc> >_>
[19:37:35] <MacGyver> caveman: I think you should read up on what a strawman argument is.
[19:37:38] <halosghost> ^
[19:37:50] <riv> im not really worried about missing out on some wonderful cryptography discussion that branches off some bitcoin chat 
[19:37:53] *** Joins: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[19:38:00] <halosghost> riv: seems fair ☺
[19:38:34] <caveman> you made a strawman (someone talking about libeterian wankfests), then you beat that strawman, then you implied to claim victory over my discussion about some aspect of cryptocurrency.  very strawman.
[19:39:00] <wasamasa> there doesn't seem to be that much intersection between cryptographers willing to touch cryptocurrencies and cryptocurrency enthusiasts willing to touch cryptography
[19:39:12] <wasamasa> which is kind of funny
[19:39:31] <wasamasa> this place heavily skews towards the former
[19:40:29] <MacGyver> caveman: I did no such thing. If you really want to call fallacies, how about you making a "so every social aspect of cryptography is off-topic"-strawman from *my* "that is a social issue which is off-topic enough to want to shut it down".
[19:41:12] <MacGyver> caveman: The social bitcoin discussions in the past have often reached the point of libertarian daydreaming for hours on end. That's reality, that's why we dislike them here.
[19:41:29] <MacGyver> caveman: General web-of-trust doesn't do that, usually, so that's fine.
[19:41:33] <halosghost> MacGyver: probably only one of a few reasons, had I to hazard a guess ☺
[19:41:41] <MacGyver> caveman: Now you may disagree with that reasoning, but it's *not* fallacious.
[19:42:36] <caveman> it's very fallacious, and collides against most application of cryptography.  libertarian stuff are very close to cryptography.
[19:42:42] <wasamasa> lol
[19:42:50] <halosghost> MacGyver: I'm under the impression you have access to a cinnamon roll
[19:43:03] *** Parts: riv (river@tilde.team/user/river) (WeeChat 3.4)
[19:43:05] <halosghost> MacGyver: do you prefer a lighter touch for cinnamon-roll usage?
[19:43:11] <MacGyver> halosghost: I do.
[19:43:14] <wasamasa> "Let's not trust the government. Unless they specify cryptographical standards, then let's totally trust them!"
[19:43:46] <MacGyver> halosghost: Heavy-handed cinnamon-roll usage tends to just foster animosity and, importantly, results in a lot of work.
[19:43:54] <halosghost> MacGyver: both points are true
[19:44:06] <halosghost> MacGyver: I defer to you, O' holder of the cinnamon roll box ☺
[19:44:44] <MacGyver> That said, there's several other people with cinnamon rolls who're welcome to use them.
[19:44:49] <sonOfRa> Sometimes, you just need to go all out on cinammon rolls though, they're *so tasty*!
[19:45:08] <halosghost> so, I get why cryptographers like to talk about Alice sending Bob messages, but wouldn't the Sun shine just a little brighter if we instead talked about Alice sending Bob a giftcard for tasty foods?
[19:45:24] <kashire> halosghost: Hide the message inside of the giftcard.
[19:45:45] <halosghost> kashire: I suppose I'm thinking more of the giftcard's redemption code as being the message
[19:46:03] <halosghost> kashire: which offers significant material for footnote-asides, which are (I think, objectively), the best asides
[19:47:05] <halosghost> yawkat: can you explain more what you meant about not needed to grab a copy of Katz & Lindell (presumably referring to https://www.cs.umd.edu/~jkatz/imc.html)? Was that your go-to before Joy of Cryptography / A Graduate Course on Applied Cryptography (or something else)?
[19:48:11] <yawkat> it was the one we used at uni, so it's the one i used for sourcing
[19:48:40] <halosghost> gotcha
[19:49:06] <halosghost> I wish I had taken more math/cryptography classes during my undergrad
[19:50:10] <yawkat> still one of the best courses i took.
[19:50:57] *** Quits: Amadiro (~Amadiro@31.11.55.179) (Quit: Leaving)
[19:51:15] *** Joins: Amadiro (~Amadiro@31.11.55.179)
[19:51:15] <halosghost> yawkat: would you recommend that textbook in addition to the resources I've mentioned?
[19:51:39] <yawkat> i dont think you will need it when you have joy of cryptography.
[19:52:40] <Alipha> So, I just wanted to note that caveman's time acceleration attack works with less than 51% participation. It's just that the amount of acceleration is proportional to what percentage of nodes are participating. However, I'm unsure of what the advantage of reducing the hash rate is. Just simply that all the miners will be able to get % more rewards based upon the % decrease in hash rate?
[19:52:51] <halosghost> yawkat: cool; thank you!
[19:53:33] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[19:55:03] <caveman> Alipha: my thought is that the algorithm will think that the rate of mined blocks has dropped less than 1 per 10 minutes, and will reduce the difficulty (require less zeros), then for the same hardware miners will mine more blocks.  
[19:55:25] *** Quits: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net) (Ping timeout: 240 seconds)
[19:55:56] <caveman> same hardware and electricity.
[19:56:12] <MacGyver> Alipha: I'm don't think it does, because the non-conspiring participants will correct for that by seemingly being "faster" again. This algorithm works both ways.
[19:57:28] *** Joins: Maxattax (~max@50-195-160-193-static.hfc.comcastbusiness.net)
[19:57:38] <caveman> i wonder if smart contracts can be used to automatically pay all wallets a percentage of bitcoins earned should the skewed blocks made it into the master block chain.
[19:58:23] <caveman> then i wonder if that will incentivise the rest to join the skewers. 
[19:58:33] <halosghost> I wonder if there's money to be made in changing what you call a program
[19:58:45] <halosghost> for a while there, we called them apps
[19:58:50] <halosghost> now we call them smart contracts
[19:58:54] <TimMc> lol
[19:59:43] <halosghost> I'm sure a part of me was joking…
[19:59:48] <halosghost> :)
[20:00:03] <Alipha> Wouldn't it cause an accordion effect? So, the malicious miners slow the hash rate down, profit, then the legit miners make the hash rate appear to go super fast. In which case, the malicious miners don't bother mining during this period. Then once the hash rate goes back to normal, the malicious miners repeat their attack?
[20:01:27] <MacGyver> Alipha: But the legit miners profit the same way from the lowering of the difficulty.
[20:01:43] <MacGyver> Alipha: All it does is speed up block generation *for everyone* for a short period of time.
[20:02:11] <MacGyver> Alipha: I don't think on average this turns into a system-breaking issue until 51% is in on it.
[20:02:51] <MacGyver> And when it does, I'm not sure if it still is a system-breaking issue beyond "blocks are generated way faster than they should be".
[20:04:38] *** Joins: instantp10neer_ (~instantp1@user/instantp10neer)
[20:04:56] <Alipha> Yeah, I don't think there's more than a marginal increase in profit. But my point was that the malicious miners could realize when the hash rate is artificially high and save some electricity by choosing not to mine during that period
[20:05:21] <caveman> Alipha: interesting.  maybe if repeated long enough, legit nodes will eventually go out of business as they will be surprised that, for the same hardware, they can't make enough zeros.
[20:07:13] <caveman> i think this would not have been an issue if the mining-reward-halving was done based on the block times as well.  but currently, the halving happens every 210,000 blocks, which makes this attack feasible.
[20:07:15] <Alipha> caveman: that wouldn't happen because, on average, the hash rate would still stay the same (or even lower, if the malicious miners choose not to mine during high periods).
[20:07:20] *** Quits: instantp10neer (~instantp1@user/instantp10neer) (Ping timeout: 250 seconds)
[20:07:51] <Alipha> It's just you're manipulating the hash rate to have peaks and valleys
[20:08:51] <MacGyver> And once you've got 51% in on your attack, it's still *everyone* that is subject to the much lower difficulty. I.e. the payouts happen more often, *for everyone*. So at that point you break the system but it's still "fair" in that sense.
[20:09:27] *** Joins: System_Error (~SystemErr@user/systemerror)
[20:10:43] *** Quits: Amadiro (~Amadiro@31.11.55.179) (Quit: Leaving)
[20:10:59] *** Joins: Amadiro (~Amadiro@31.11.55.179)
[20:11:50] <caveman> Alipha: was your point the opposite?  e.g. malicious nodes ruining the difficulty in the next 2016 blocks (about 2 weeks) by lying in the current 2016 blocks that they mined faster (slowing their clock)?  so that in the next 2016 blocks the malicious ones stop (save power) and let the honest ones suffer it alone until they go out of business?
[20:12:06] <halosghost> is anyone actually working on proving/disproving the existence of one-way functions, or is that considered hard/difficult enough to be seen as similar to working on the 3x+1 problem?
[20:12:19] <caveman> Alipha: err, silly me.  ignore it.
[20:12:57] <MacGyver> halosghost: Considering the proof of that is equivalent to P=NP, iirc, yes, there's people working on that.
[20:13:12] <MacGyver> halosghost: But most of them are considered crackpots though.
[20:13:44] <MacGyver> Oh wait, not equivalent.
[20:13:45] <halosghost> MacGyver: well, proving the existence of one-way functions proves P≠NP, but disproving the existence of one-way functions (though disasterous for cryptography) doesn't necessarily prove P=NP, iiuc
[20:13:56] <MacGyver> Proving there existence would prove P!=NP.
[20:14:01] <MacGyver> their*
[20:14:03] <MacGyver> Yeah.
[20:14:15] <MacGyver> Then I'm not sure.
[20:14:46] <halosghost> though, just to double-check my understanding, if we were to prove P=NP, that would preclude the existence of one-way functions, yes?
[20:14:53] <halosghost> (just not vice versa?)
[20:14:59] <MacGyver> I was just about to type that.
[20:15:12] <halosghost> MacGyver: and are there actually people actively working on P=NP?
[20:15:39] <halosghost> (in either direction?)
[20:16:17] <MacGyver> Yes, and once every few years a paper appears from a respectable author claiming to have (dis)proven it which then fails to pass muster in the end.
[20:16:25] <halosghost> ouch
[20:16:45] <MacGyver> Well not really right.
[20:16:50] <MacGyver> That's what peer review is about.
[20:16:56] <halosghost> I mean, I suppose you should publish your results when you're ready; but I feel like you'd want a lot of peers to look over something before publishing
[20:17:13] <halosghost> (when it's something so potentially impactful)
[20:17:30] <MacGyver> It usually fails in the arxiv-phase.
[20:17:50] <MacGyver> Publication in a "real" journal only has 3 people look over it.
[20:17:54] <caveman> arxiv has review built in?  or do people review it outside?
[20:18:10] <MacGyver> Something like P=NP always generates lots of interest.
[20:18:57] <MacGyver> Similarly the whole "This destroyes the RSA cryptosystem" thing from Schnorr.
[20:19:06] <halosghost> MacGyver: gotcha
[20:19:56] <MacGyver> And because in crypto/compsci people tend to put stuff on arxiv when they submit to a journal at the latest, by the time the journal decision is made it's had a whole bunch of holes shot into it.
[20:20:08] <halosghost> hmm, I wonder if anyone's mulled over programming an arduboy as an entropy source / hardware-security-token
[20:20:13] <halosghost> it'd probably be terrible, but it'd be fun
[20:20:37] <halosghost> MacGyver: mmm, makes sense
[20:21:50] <MacGyver> halosghost: https://www.win.tue.nl/~gwoegi/P-versus-NP.htm
[20:22:20] <MacGyver> halosghost: Stopped revising in 2016 but still something to start you out.
[20:22:28] <halosghost> lol
[20:22:44] *** Joins: gproto23 (~gproto23@user/gproto23)
[20:22:44] <MacGyver> halosghost: Especially the last citation, 116, specifically went into weak one-way functions to prove inequality.
[20:22:48] <halosghost> MacGyver: so, as a tl;dr: no one's particularly interested in it and very few folk have ever really tried to find an answer
[20:23:11] <halosghost> </sarcasm> if it wasn't obvious
[20:23:21] <halosghost> MacGyver: ooh, that's interesting
[20:23:39] <MacGyver> And 114 apparently tried the same approach.
[20:24:50] <halosghost> before I really started diving into crypto this last year, it hadn't really ever occurred to me that people would have strongly-held beliefs about P=NP (one way or the other)
[20:25:03] <halosghost> now, though I don't have strongly-held beliefs, I really hope P≠NP
[20:25:19] <MacGyver> halosghost: So w.r.t. the sarcasm, my point was that lots of people put their papers about P=NP on arxiv, but not a lot of them are by authors known to be experts in this fields.
[20:25:20] <halosghost> it'd be a real downer if one-way functions don't exist
[20:25:21] <MacGyver> field*
[20:25:31] <halosghost> MacGyver: sure, makes sense
[20:28:04] *** Quits: mikrosis (~mikrosis@dynamic-046-114-172-042.46.114.pool.telefonica.de) (Quit: Connection closed)
[20:28:33] *** Joins: Trazi (~trazi@user/trazi)
[20:30:57] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Ping timeout: 240 seconds)
[20:32:34] *** Joins: TheCoffeMaker (~TheCoffeM@user/thecoffemaker)
[20:33:25] *** Quits: eneeigriega (~eneeigrie@189.163.73.132) (Quit: leaving)
[20:35:02] *** Quits: Trazi (~trazi@user/trazi) (Ping timeout: 240 seconds)
[20:35:53] *** Quits: d34dh0r53 (~d34dh0r53@104.191.10.248) (Remote host closed the connection)
[20:38:02] *** Quits: TheCoffeMaker (~TheCoffeM@user/thecoffemaker) (Ping timeout: 240 seconds)
[20:39:17] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
[20:42:42] *** Joins: cwebber (~user@user/cwebber)
[20:43:02] *** Joins: d34dh0r53 (~d34dh0r53@2600:1700:10e0:ecf:5054:ff:fe7c:35f9)
[20:43:21] *** Joins: Sofia (~sofia@gateway/tor-sasl/sofia)
[20:43:57] *** Joins: cvmn (~caveman@gateway/tor-sasl/caveman)
[20:53:16] *** Joins: d1cor (~diego@179.63.242.120)
[20:56:21] *** Joins: Trazi (~trazi@user/trazi)
[20:56:37] *** Quits: machinedgod (~machinedg@24.105.81.50) (Ping timeout: 240 seconds)
[21:00:41] *** Quits: byteskeptical (~amnesia@user/byteskeptical) (Ping timeout: 268 seconds)
[21:01:13] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:02:42] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:02:55] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:03:57] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Remote host closed the connection)
[21:04:30] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:05:08] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
[21:09:37] *** Quits: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b) (Ping timeout: 240 seconds)
[21:10:38] *** Quits: poopster (poopster@shell.xshellz.com) (Changing host)
[21:10:38] *** Joins: poopster (poopster@user/poopster)
[21:11:08] *** Joins: t0x0sh (~tosh@176.158.137.106)
[21:15:20] *** Joins: Guyver2_ (Guyver@guyver2.xs4all.nl)
[21:18:34] *** Quits: Guyver2 (~Guyver@guyver2.xs4all.nl) (Ping timeout: 268 seconds)
[21:18:41] *** Guyver2_ is now known as Guyver2
[21:21:37] *** Quits: MajorBiscuit (~MajorBisc@c-001-025-008.client.tudelft.eduvpn.nl) (Ping timeout: 240 seconds)
[21:24:04] *** Joins: Gallomimia (~Gallomimi@node-1w7jra2a2gqpw06f24svyesg9.ipv6.telus.net)
[21:25:01] *** Quits: System_Error (~SystemErr@user/systemerror) (Remote host closed the connection)
[21:25:38] *** Joins: System_Error (~SystemErr@user/systemerror)
[21:30:05] *** Joins: drathir_tor (~drathir@wireguard/tunneler/drathir)
[21:35:24] *** Joins: prussianblue (~ghostpant@101.128.64.26)
[21:35:43] *** Joins: byteskeptical (~amnesia@user/byteskeptical)
[21:44:16] *** Parts: prussianblue (~ghostpant@101.128.64.26) ()
[21:49:36] *** Quits: Guyver2 (Guyver@guyver2.xs4all.nl) (Ping timeout: 250 seconds)
[21:50:17] *** Joins: Guyver2 (~Guyver@guyver2.xs4all.nl)
[21:52:45] *** Quits: Haohmaru (~Haohmaru@195.24.53.110) ()
[22:00:28] *** Joins: machinedgod (~machinedg@24.105.81.50)
[22:00:38] *** Parts: tanis (~tanis@user/tanis) ()
[22:06:43] *** Quits: dude12312414 (~test@gateway/tor-sasl/dude12312414) (Quit: THE RAM IS TOO DAMN HIGH)
[22:20:13] *** Quits: eruditass (uid248673@id-248673.uxbridge.irccloud.com) (Quit: Connection closed for inactivity)
[22:26:18] *** Quits: drathir_tor (~drathir@wireguard/tunneler/drathir) (Ping timeout: 276 seconds)
[22:28:04] *** Quits: kish` (~aqua@user/aqua) (Remote host closed the connection)
[22:28:29] *** Joins: kish` (~aqua@user/aqua)
[22:32:22] *** Quits: _z3r0_ (~Z3R0@2a02:2f0f:920b:b800:89ed:4f7c:9680:bd77) (Quit: WeeChat 3.4)
[22:41:57] *** Quits: d1cor (~diego@179.63.242.120) (Ping timeout: 256 seconds)
[22:42:32] *** Joins: chasmo77 (~chas77@c-71-193-246-4.hsd1.or.comcast.net)
[22:45:20] *** Quits: cvmn (~caveman@gateway/tor-sasl/caveman) (Quit: bbl)
[22:49:22] *** Joins: Ivii (~Ivyy@2001:a62:4c3:8e01:c2b8:b157:be3f:ced2)
[23:00:22] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[23:08:39] *** Joins: gabriel1_ (~gabriel1@mail.virebent.art)
[23:11:03] *** Quits: gabriel1 (~gabriel1@user/gabriel1) (Ping timeout: 256 seconds)
[23:12:47] *** Quits: Malvolio (~Malvolio@user/malvolio) (Quit:  etoainshrldumcygwfpbkv')
[23:15:32] *** Joins: _z3r0_ (~Z3R0@2a02:2f0f:920b:b800:89ed:4f7c:9680:bd77)
[23:18:11] *** Joins: Malvolio (~Malvolio@user/malvolio)
[23:21:41] *** Joins: blyat-73 (~hjgkjhgkj@46.235.96.249)
[23:32:04] *** Joins: gabriel1 (~gabriel1@user/gabriel1)
[23:33:17] *** Quits: gabriel1_ (~gabriel1@mail.virebent.art) (Ping timeout: 240 seconds)
[23:44:44] *** Quits: BOKALDO (~BOKALDO@user/bokaldo) (Quit: Leaving)
[23:49:48] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[23:52:01] *** Joins: xenoterracide_ (~xenoterra@2600:1700:71d4:810:101f:cf82:e73c:f52b)
