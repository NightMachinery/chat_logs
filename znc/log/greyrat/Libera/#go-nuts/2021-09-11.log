[00:01:12] *** Quits: mickey (~user@user/mickey) (Quit: Ping timeout (120 seconds))
[00:01:22] *** Joins: mickey0 (~user@user/mickey)
[00:06:24] *** Joins: bleloch_ (~bleloch@cpc96810-rdng27-2-0-cust409.15-3.cable.virginm.net)
[00:08:26] *** Joins: bleloch (bleloch@gateway/vpn/protonvpn/bleloch)
[00:11:08] *** Quits: bleloch_ (~bleloch@cpc96810-rdng27-2-0-cust409.15-3.cable.virginm.net) (Ping timeout: 265 seconds)
[00:14:39] *** Quits: caubert (~caubert@136.244.111.235) (Quit: WeeChat 3.2)
[00:15:57] *** Joins: caubert (~caubert@136.244.111.235)
[00:24:48] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[00:28:27] *** Joins: arcatech (~arcatech@user/arcatech)
[00:29:01] *** Joins: ekathva (~ekathva@88-114-118-108.elisa-laajakaista.fi)
[00:31:55] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[00:33:38] *** Joins: fikran (~fikran@user/fikran)
[00:38:07] *** Quits: burningserenity_ (~burningse@2603-9001-0f01-ad99-0000-0000-0000-1007.inf6.spectrum.com) (Remote host closed the connection)
[00:38:07] *** Quits: burningserenity (~burningse@142-196-178-216.res.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[00:48:31] *** Quits: zwr (~zwr@2804:d45:b966:fb00:bb8c:e17c:e407:c0e) (Remote host closed the connection)
[00:48:49] *** Quits: shka (~herr@109.231.62.239) (Ping timeout: 265 seconds)
[00:57:47] *** Quits: ekathva (~ekathva@88-114-118-108.elisa-laajakaista.fi) (Quit: Leaving)
[00:57:56] *** Quits: jcajka (~jcajka@ip-86-49-242-38.net.upcbroadband.cz) (Quit: Leaving)
[01:00:07] *** Joins: sgc (~Guest64@88.130.156.20)
[01:01:05] *** Quits: sgc (~Guest64@88.130.156.20) (Client Quit)
[01:04:09] *** Quits: lauraaah (uid156848@id-156848.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[01:14:18] *** Joins: christophergray (~christoph@190.148.53.200)
[01:15:57] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[01:23:21] *** Joins: src (~src@user/src)
[01:31:27] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[01:33:11] *** Joins: independent56 (~independe@51.158.144.32)
[01:35:40] *** Quits: independent_ (~independe@95.144.68.39) (Ping timeout: 260 seconds)
[01:40:01] *** Quits: virtualroot (~virtualro@user/virtualroot) ()
[01:41:35] *** Joins: independent_ (~independe@95.144.68.39)
[01:44:11] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[01:44:24] *** Quits: independent56 (~independe@51.158.144.32) (Ping timeout: 265 seconds)
[01:44:31] *** Joins: wook (~wook@ip68-101-78-226.ga.at.cox.net)
[01:44:34] *** Joins: independent_ (~independe@95.144.68.39)
[01:46:33] *** Quits: tealecloud (~tealeclou@cpc1-farn9-2-0-cust495.6-2.cable.virginm.net) (Quit: WeeChat 3.2)
[01:47:16] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[01:47:34] *** Joins: independent_ (~independe@95.144.68.39)
[01:53:46] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[01:54:04] *** Joins: independent_ (~independe@95.144.68.39)
[01:54:09] *** Joins: lauraaah (uid156848@id-156848.ilkley.irccloud.com)
[01:54:38] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[01:55:17] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[01:55:21] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Ping timeout: 276 seconds)
[01:56:01] *** Joins: kayprish_ (~kayprish@cable-188-2-153-140.dynamic.sbb.rs)
[01:56:24] *** Quits: kayprish (~kayprish@cable-188-2-153-140.dynamic.sbb.rs) (Read error: Connection reset by peer)
[01:58:01] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[01:58:10] *** Quits: wook (~wook@ip68-101-78-226.ga.at.cox.net) (Ping timeout: 260 seconds)
[01:59:40] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[02:00:02] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[02:04:00] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:04:13] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[02:05:02] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Client Quit)
[02:05:15] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[02:07:15] *** Quits: mrig (~mrig@user/mrig) (Quit: WeeChat 3.2)
[02:07:36] *** Quits: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net) (Ping timeout: 265 seconds)
[02:12:43] *** Quits: christophergray (~christoph@190.148.53.200) (Quit: WeeChat 3.2)
[02:14:11] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[02:19:23] *** Quits: arcatech (~arcatech@user/arcatech) (Quit: Bye.)
[02:23:23] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[02:33:54] *** Joins: Snyp (~Snyp@49.207.220.4)
[02:37:45] *** Joins: mikoto-chan (~mikoto-ch@83.137.2.248)
[02:37:49] <mikoto-chan> http://ix.io/3yuf
[02:39:16] <mikoto-chan> I'm trying to build a scheduling web application but I'm having troubles hooking it up to an sql databases since sqlite doesn't allow me to create structs and nest them, what would be a possible workaround?
[02:39:47] <mikoto-chan> I mean. tables are structs in a way but I don't think you can nest them.
[02:41:26] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[02:42:57] <mikoto-chan> https://stackoverflow.com/questions/11285305/how-to-create-nested-tables-in-sqlite-database-android
[02:43:01] *** Joins: fikran (~fikran@user/fikran)
[02:43:09] <mikoto-chan> is this good practice?
[02:44:36] <fizzie> That's maybe more of a general SQL question. But that's approximately how you'd use a relational database, yes. Normally you'd declare the fact that a column is a reference to another table, though; see https://www.sqlite.org/foreignkeys.html
[02:44:59] <Sam> Yes, using a foreign key constraint (disabled in sqlite by default IIRC, but you can still make them) is the standard SQL way of showing relations between data
[02:45:17] *** Quits: sord937 (~sord937@gateway/tor-sasl/sord937) (Quit: sord937)
[02:45:39] <Sam> It may be worth learning a bit of SQL before thinking about how to model your data there; you'll find that it works differently than structs.
[02:45:59] <fizzie> And for small amounts of structured data that you'll always want to fetch at once, sometimes people stuff JSON or other similar things inside a database. SQLite has recently-ish evolved a JSON extension as well.
[02:54:41] *** Joins: salem (~salem@pool-98-111-206-141.pitbpa.fios.verizon.net)
[03:03:30] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 260 seconds)
[03:07:46] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[03:08:04] *** Joins: independent_ (~independe@95.144.68.39)
[03:08:37] *** Quits: blinux (~blinux@pool-108-48-11-122.washdc.fios.verizon.net) (Quit: WeeChat 3.2)
[03:09:47] *** Quits: Snyp (~Snyp@49.207.220.4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[03:10:44] *** Joins: lalitmee__ (~lalitmee@180.94.32.128)
[03:13:21] *** Quits: lalitmee_ (~lalitmee@180.94.32.150) (Ping timeout: 265 seconds)
[03:15:39] *** Quits: kayprish_ (~kayprish@cable-188-2-153-140.dynamic.sbb.rs) (Remote host closed the connection)
[03:16:46] *** Quits: solar_sea_ (~solar_sea@user/solar-sea/x-3088627) (Quit: Leaving)
[03:19:50] *** Quits: lalitmee__ (~lalitmee@180.94.32.128) (Ping timeout: 260 seconds)
[03:24:05] *** Joins: k0ta (~k0ta@151.210.175.83)
[03:28:47] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 245 seconds)
[03:31:02] *** Quits: k0ta (~k0ta@151.210.175.83) (Ping timeout: 260 seconds)
[03:31:55] *** Quits: jsrnop (~mark@user/jsrnop) (Quit: The Lounge - https://thelounge.chat)
[03:32:18] *** Joins: jsrnop (~mark@user/jsrnop)
[03:33:38] *** Quits: acidsys (~LSD@2.lsd.systems) (Quit: I love you.)
[03:33:53] *** Joins: LSD (~LSD@2.lsd.systems)
[03:34:54] *** Quits: LSD (~LSD@2.lsd.systems) (Client Quit)
[03:35:09] *** Joins: acidsys (~LSD@2.lsd.systems)
[03:36:24] * b0nn is currently fighting with a json blob in a postgres DB
[03:36:43] <b0nn> it's not fun (mostly because I don't know what I'm doing)
[03:45:05] *** Quits: sudoforge (~sudoforge@wireguard/tunneler/sudoforge) (Quit: 404)
[03:50:14] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[03:54:40] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[03:54:56] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[04:05:35] *** Quits: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb) (Ping timeout: 260 seconds)
[04:12:07] *** Quits: toretto (~ryan@user/toretto) (Quit: brb)
[04:12:29] *** Joins: elastic_dog (~elastic_d@2a01:118f:822:9c00:f583:aa51:9ad4:d4fb)
[04:14:22] *** Joins: burningserenity (~burningse@2603:9001:f01:ad99::1001)
[04:19:00] *** Quits: burningserenity (~burningse@2603:9001:f01:ad99::1001) (Ping timeout: 260 seconds)
[04:35:54] *** Quits: independent_ (~independe@95.144.68.39) (Ping timeout: 260 seconds)
[04:46:02] *** Quits: predmijat (~predmijat@mail.strogopro.com) (Quit: bye)
[04:47:38] *** Joins: predmijat (~predmijat@mail.strogopro.com)
[04:50:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[04:52:23] *** Joins: fikran (~fikran@user/fikran)
[04:52:48] *** Joins: ninjin (~ninjin@user/ninjin)
[04:53:48] *** Quits: lauraaah (uid156848@id-156848.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[04:54:06] *** Quits: ninjin- (~ninjin@user/ninjin) (Ping timeout: 276 seconds)
[05:02:47] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 252 seconds)
[05:06:29] <Sam> 99% of the time I avoid any of the special stuff. I will admit to using postgres's jsonb on occasion, but most of the time normalized SQL works best and keeps things simple and concerns separated.
[05:10:55] *** Joins: neurocyte (~neurocyte@195.80.55.123)
[05:10:55] *** Quits: neurocyte (~neurocyte@195.80.55.123) (Changing host)
[05:10:55] *** Joins: neurocyte (~neurocyte@user/neurocyte)
[05:12:46] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 260 seconds)
[05:18:05] *** Joins: burningserenity (~burningse@102.129.152.135)
[05:18:36] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[05:31:05] *** Quits: dehl^ (~dehl@68.101.54.227) (Ping timeout: 265 seconds)
[05:31:10] <b0nn> Yeah, it's not my idea™ but I wasn't able to convince the person whose it was to rethink their life choices
[05:37:49] *** Quits: NCS_One (~NCS_One@2001:8a0:7fcc:7100:1da7:7b3c:1b17:c1af) (Quit: Lost terminal)
[05:38:26] *** Joins: dehl^ (~dehl@68.101.54.227)
[05:40:52] *** Quits: tg (~tg@rockylinux/infra/tg) (Quit: tg)
[05:54:17] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[05:54:39] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[05:55:05] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[06:02:01] *** Joins: neurocyte1 (~neurocyte@94.46.86.84)
[06:02:01] *** Quits: neurocyte1 (~neurocyte@94.46.86.84) (Changing host)
[06:02:01] *** Joins: neurocyte1 (~neurocyte@user/neurocyte)
[06:04:34] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Ping timeout: 260 seconds)
[06:04:34] *** neurocyte1 is now known as neurocyte
[06:11:48] *** Joins: Snyp (~Snyp@49.207.220.4)
[06:12:39] *** Quits: bleloch (bleloch@gateway/vpn/protonvpn/bleloch) (Ping timeout: 265 seconds)
[06:22:36] *** Joins: kodah (~kodah@user/kodah)
[06:31:15] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[06:33:12] *** Joins: tg_ (~tg@rockylinux/infra/tg)
[06:38:56] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[06:46:23] *** Joins: burningserenity_ (~burningse@2603-9001-0f01-ad99-0000-0000-0000-1001.inf6.spectrum.com)
[06:47:56] *** Quits: burningserenity (~burningse@102.129.152.135) (Ping timeout: 265 seconds)
[06:49:53] *** Quits: Snyp (~Snyp@49.207.220.4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:50:17] *** Quits: tg_ (~tg@rockylinux/infra/tg) (Quit: tg_)
[06:59:38] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[06:59:56] *** Quits: Torr (~Torr@user/torr) (Ping timeout: 252 seconds)
[07:01:45] *** Joins: fikran (~fikran@user/fikran)
[07:10:12] *** Joins: cskr (~cskr@49.207.223.82)
[07:11:08] *** Quits: cskr (~cskr@49.207.223.82) (Client Quit)
[07:14:06] *** Quits: KekSi (~KekSi@x4dbe4156.dyn.telefonica.de) (Ping timeout: 260 seconds)
[07:15:32] *** Quits: burningserenity_ (~burningse@2603-9001-0f01-ad99-0000-0000-0000-1001.inf6.spectrum.com) (Quit: ZNC 1.8.2 - https://znc.in)
[07:19:49] *** Joins: KekSi (~KekSi@x4db480f6.dyn.telefonica.de)
[07:29:36] *** Joins: yoonkn (~user@175.197.208.79)
[07:38:59] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[07:49:40] *** Joins: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651)
[07:54:48] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[07:55:11] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[08:06:49] *** Joins: k0ta (~k0ta@151.210.172.18)
[08:17:45] *** Quits: thing (~thing@user/thing) (Remote host closed the connection)
[08:18:04] *** Joins: thing (~thing@user/thing)
[08:27:05] *** Quits: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net) (Quit: Textual IRC Client: www.textualapp.com)
[08:39:08] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:d98:43e6:93b2:ad9)
[08:41:43] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:d98:43e6:93b2:ad9) (Ping timeout: 252 seconds)
[09:07:08] *** Quits: yoonkn (~user@175.197.208.79) (Remote host closed the connection)
[09:07:50] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[09:09:13] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[09:11:07] *** Joins: fikran (~fikran@user/fikran)
[09:27:16] *** Quits: n1000 (~n1000@user/n1000) (Quit: WeeChat 3.1)
[09:29:21] *** Joins: n1000 (~n1000@user/n1000)
[09:29:54] *** Quits: normen (~normen@p54b3452e.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[09:37:04] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[09:37:22] *** Quits: mikoto-chan (~mikoto-ch@83.137.2.248) (Quit: mikoto-chan)
[09:51:17] *** Joins: neocron (~NeoCron@p200300c4cf3ba70012c3036b63257be6.dip0.t-ipconnect.de)
[09:52:31] *** Joins: oxum (~oxum@106.203.195.217)
[09:53:46] *** Quits: Doraemon (~NeoCron@p200300c4cf1c7e009d03f50373ebe753.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[09:54:38] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[09:55:18] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[09:57:37] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 252 seconds)
[09:57:39] *** Joins: normen (~normen@p200300d7173dc90068b436d47588f31f.dip0.t-ipconnect.de)
[10:05:18] *** Quits: amigan (dramoray@dtvax.dynatron.me) (Remote host closed the connection)
[10:05:28] *** Joins: amigan (dramoray@dtvax.dynatron.me)
[10:06:18] *** Quits: normen (~normen@p200300d7173dc90068b436d47588f31f.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[10:11:09] *** Joins: jpw (~jpw@user/jpw)
[10:31:58] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 260 seconds)
[10:32:15] *** Joins: oxum (~oxum@106.203.195.217)
[10:37:13] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 252 seconds)
[10:37:15] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[10:52:34] *** Joins: independent_ (~independe@95.144.68.39)
[10:54:40] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[11:04:25] *** Quits: kn10003 (~kn100@wireguard/tunneler/kn100) (Ping timeout: 260 seconds)
[11:04:58] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[11:18:28] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[11:20:06] *** Joins: gggp (~textual@60.10.194.45)
[11:20:29] *** Joins: fikran (~fikran@user/fikran)
[11:25:22] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Remote host closed the connection)
[11:25:38] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[11:30:18] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[11:30:52] *** Quits: clarjon1 (~clarjon1@user/clarjon1) (Read error: Connection reset by peer)
[11:36:05] *** Joins: shka (~herr@109.231.62.239)
[11:42:49] *** Joins: mrig (~mrig@user/mrig)
[11:54:40] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[11:54:40] *** Joins: frost (~frost@59.71.242.61)
[11:54:54] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[12:07:29] *** Joins: normen (~normen@p200300d7173dc90068b436d47588f31f.dip0.t-ipconnect.de)
[12:09:58] *** Quits: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net) (Ping timeout: 260 seconds)
[12:14:10] *** Quits: jpw (~jpw@user/jpw) (Ping timeout: 260 seconds)
[12:15:50] *** Joins: jpw (~jpw@user/jpw)
[12:17:10] *** Quits: gggp (~textual@60.10.194.45) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:20:14] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 260 seconds)
[12:21:14] *** Joins: gggp (~textual@123.113.181.55)
[12:21:16] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[12:21:35] *** Joins: independent_ (~independe@95.144.68.39)
[12:24:21] *** Quits: tuxmartin (~tuxmartin@93.89.149.106) (Quit: Leaving)
[12:32:08] *** Joins: theoceaniscool (~theoceani@119.12.232.133)
[12:32:54] <iivvoo> does anyone happen to know how to get a job posting on the "golang weekly" mailinglist? They don't reply (at all) to my emails
[12:33:14] <iivvoo> which by itself is rather unprofessional. But sure, please don't take my money
[12:36:01] *** Quits: ninjin (~ninjin@user/ninjin) (Remote host closed the connection)
[12:36:14] *** Joins: ninjin (~ninjin@user/ninjin)
[12:37:08] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[12:39:11] <b0nn> iivvoo: Try calling them out on reddit or some such?
[12:39:30] <b0nn> Their whois is masked as well :\
[12:42:10] *** Quits: normen (~normen@p200300d7173dc90068b436d47588f31f.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[12:42:22] *** Quits: Asgaroth (~Asgaroth@93.107.191.92) (Remote host closed the connection)
[12:45:25] *** Quits: gggp (~textual@123.113.181.55) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:47:24] *** Quits: thiccdaddy (~OwO@thiccdaddy.sexy) (Quit: upgrading)
[12:48:31] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Ping timeout: 252 seconds)
[12:52:55] *** Joins: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au)
[12:53:06] *** Quits: rcernin (~rcernin@188.146.148.122.sta.wbroadband.net.au) (Client Quit)
[12:55:34] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[13:00:48] *** Joins: normen (~normen@p200300d7173dc90068b436d47588f31f.dip0.t-ipconnect.de)
[13:07:23] *** Joins: gggp (~textual@123.113.181.55)
[13:10:13] *** Joins: moto (~moto@user/moto)
[13:18:17] *** Quits: gggp (~textual@123.113.181.55) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:19:25] *** Quits: frost (~frost@59.71.242.61) (Quit: Connection closed)
[13:20:30] *** Quits: k0ta (~k0ta@151.210.172.18) (Quit: Lost terminal)
[13:22:30] *** Joins: frost (~frost@59.71.242.61)
[13:25:09] *** Joins: Snyp (~Snyp@49.207.220.4)
[13:25:44] *** Quits: Snyp (~Snyp@49.207.220.4) (Client Quit)
[13:26:31] *** Joins: Snyp (~Snyp@49.207.220.4)
[13:27:06] *** Quits: Snyp (~Snyp@49.207.220.4) (Client Quit)
[13:28:08] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 265 seconds)
[13:29:52] *** Joins: fikran (~fikran@user/fikran)
[13:33:16] *** Joins: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net)
[13:47:17] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:50:00] *** acidsys is now known as berry
[13:50:08] *** Joins: k0ta (~k0ta@151.210.172.18)
[13:50:31] *** berry is now known as strawberry
[13:50:34] *** strawberry is now known as raspberry
[13:50:43] *** raspberry is now known as blueberry
[13:50:48] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[13:52:27] *** blueberry is now known as xberry
[13:53:13] *** Joins: oxum (~oxum@106.203.195.217)
[13:54:38] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[13:55:02] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[14:06:54] *** Quits: oxum (~oxum@106.203.195.217) (Remote host closed the connection)
[14:10:48] *** Joins: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net)
[14:13:13] *** Joins: absc (~absc@dynamic-adsl-94-34-168-109.clienti.tiscali.it)
[14:15:26] *** Quits: AndyH (~andyh@cpc160881-lutn15-2-0-cust237.9-3.cable.virginm.net) (Client Quit)
[14:22:01] *** Joins: freakazoid343 (~matt@2603-9000-cf0f-80e3-0d98-43e6-93b2-0ad9.inf6.spectrum.com)
[14:23:36] *** Quits: absc (~absc@dynamic-adsl-94-34-168-109.clienti.tiscali.it) (Quit: Leaving.)
[14:24:55] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:d98:43e6:93b2:ad9) (Ping timeout: 252 seconds)
[14:26:06] *** Quits: thing (~thing@user/thing) (Ping timeout: 276 seconds)
[14:28:56] *** Joins: thing (~thing@user/thing)
[14:34:42] *** Quits: gl (~x@pwn.lu) (Quit: leaving)
[14:51:33] *** Quits: wolfshappen (~waff@irc.furworks.de) (Quit: later)
[14:59:46] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[15:10:11] *** Joins: zwr (~zwr@2804:d45:b966:fb00:8be1:9b8c:b277:a3d0)
[15:29:31] *** Joins: lauraaah (uid156848@id-156848.ilkley.irccloud.com)
[15:35:16] <novns> iivvoo, try their twitter
[15:35:29] <novns> https://twitter.com/golangweekly
[15:37:10] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[15:39:14] *** Joins: fikran (~fikran@user/fikran)
[15:41:09] *** Joins: llorllale (~llorllale@2607:9880:3a18:69:d535:196b:a57:3722)
[15:54:44] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[15:55:09] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[15:59:12] *** Joins: Atque (~Atque@user/atque)
[16:00:27] *** Joins: yoonkn (~user@175.197.208.79)
[16:03:04] *** Joins: NCS_One (~NCS_One@bl11-90-133.dsl.telepac.pt)
[16:04:02] *** Joins: freakazoid12345 (~matt@2603:9000:cf0f:80e3:d98:43e6:93b2:ad9)
[16:07:07] *** Quits: freakazoid343 (~matt@2603-9000-cf0f-80e3-0d98-43e6-93b2-0ad9.inf6.spectrum.com) (Ping timeout: 245 seconds)
[16:12:49] *** Joins: mosen (~mosen@159-196-125-15.9fc47d.syd.static.aussiebb.net)
[16:13:01] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[16:15:31] *** Quits: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de) (Remote host closed the connection)
[16:23:24] *** Joins: timkofu (~timkofu@105.160.85.84)
[16:23:24] *** Quits: timkofu (~timkofu@105.160.85.84) (Changing host)
[16:23:24] *** Joins: timkofu (~timkofu@user/timkofu)
[16:26:43] *** Quits: timkofu (~timkofu@user/timkofu) (Client Quit)
[16:26:47] *** Quits: dehl^ (~dehl@68.101.54.227) (Remote host closed the connection)
[16:28:23] <iivvoo> thanks for the tips, will try
[16:32:31] *** Joins: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com)
[16:34:49] *** Joins: vs^ (~vsl@68.101.54.227)
[16:41:22] *** Joins: LiftLeft (~LiftLeft@216-26-118-34.dynamic.nelson.airstreamcomm.net)
[16:45:31] *** Joins: freakazoid343 (~matt@2603:9000:cf0f:80e3:d98:43e6:93b2:ad9)
[16:47:15] *** Joins: menace (~someone@ppp-93-104-186-17.dynamic.mnet-online.de)
[16:47:30] *** Quits: menace (~someone@ppp-93-104-186-17.dynamic.mnet-online.de) (Changing host)
[16:47:30] *** Joins: menace (~someone@user/menace)
[16:48:28] *** Quits: freakazoid12345 (~matt@2603:9000:cf0f:80e3:d98:43e6:93b2:ad9) (Ping timeout: 252 seconds)
[16:51:31] *** Joins: wolfshappen (~waff@irc.furworks.de)
[16:56:33] *** Joins: sheldon (~sheldon@user/sheldon)
[16:57:07] *** Quits: wolfshappen (~waff@irc.furworks.de) (Ping timeout: 252 seconds)
[16:57:41] *** Joins: wolfshappen (~waff@irc.furworks.de)
[16:57:49] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[17:03:10] *** Quits: sheldon (~sheldon@user/sheldon) (Ping timeout: 252 seconds)
[17:04:32] *** Joins: freakazoid12345 (~matt@2603-9000-cf0f-80e3-0d98-43e6-93b2-0ad9.inf6.spectrum.com)
[17:07:10] *** Quits: freakazoid343 (~matt@2603:9000:cf0f:80e3:d98:43e6:93b2:ad9) (Ping timeout: 252 seconds)
[17:12:49] *** Joins: sheldon (~sheldon@user/sheldon)
[17:28:49] *** Joins: Snyp (~Snyp@49.207.220.4)
[17:31:55] *** Quits: k0ta (~k0ta@151.210.172.18) (Ping timeout: 252 seconds)
[17:34:22] *** Quits: saml (~saml@cpe-74-73-80-162.nyc.res.rr.com) (Quit: Leaving)
[17:35:05] *** Joins: burningserenity (~burningse@142-196-178-216.res.spectrum.com)
[17:39:28] *** Quits: yoonkn (~user@175.197.208.79) (Ping timeout: 265 seconds)
[17:46:37] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[17:48:36] *** Joins: fikran (~fikran@user/fikran)
[17:49:37] *** Quits: sheldon (~sheldon@user/sheldon) (Ping timeout: 265 seconds)
[17:50:05] *** Joins: sheldon (~sheldon@user/sheldon)
[17:54:48] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[17:55:15] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[18:01:57] *** Joins: goldfish (~goldfish@user/goldfish)
[18:02:40] *** Joins: yoonkn (~user@175.197.208.79)
[18:03:16] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Ping timeout: 252 seconds)
[18:05:27] *** Quits: neurocyte (~neurocyte@user/neurocyte) (Quit: The Lounge - https://thelounge.chat)
[18:22:22] *** Quits: yoonkn (~user@175.197.208.79) (Ping timeout: 260 seconds)
[18:22:52] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Read error: No route to host)
[18:26:33] *** Quits: frost (~frost@59.71.242.61) (Quit: Connection closed)
[18:26:50] *** Joins: paulgrmn (~paulgrmn@user/paulgrmn)
[18:32:07] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[18:34:10] *** Quits: gggpkm (~gggpkm@111-251-126-187.dynamic-ip.hinet.net) (Ping timeout: 260 seconds)
[18:42:48] *** Quits: sheldon (~sheldon@user/sheldon) (Ping timeout: 265 seconds)
[18:45:18] *** Joins: sheldon (~sheldon@user/sheldon)
[18:46:34] *** Quits: paulgrmn (~paulgrmn@user/paulgrmn) (Ping timeout: 252 seconds)
[18:50:02] *** Quits: sheldon (~sheldon@user/sheldon) (Ping timeout: 265 seconds)
[18:57:01] *** Joins: yoonkn (~user@175.197.208.79)
[18:57:59] *** Quits: yoonkn (~user@175.197.208.79) (Remote host closed the connection)
[19:04:05] *** Quits: iamzero (~iamzero@2a02:2f0f:9109:8d00:8f91:35ee:c1b:9651) (Quit: WeeChat 3.2)
[19:06:26] *** Joins: sheldon (~sheldon@user/sheldon)
[19:07:48] *** Joins: wolfdale (~wolfdale@ec2-3-1-90-26.ap-southeast-1.compute.amazonaws.com)
[19:23:32] *** Quits: __alex (~alex@ip5f5afef3.dynamic.kabel-deutschland.de) (Ping timeout: 252 seconds)
[19:27:19] *** Quits: meinside (uid24933@id-24933.helmsley.irccloud.com) (Quit: Connection closed for inactivity)
[19:29:11] *** Quits: sheldon (~sheldon@user/sheldon) (Ping timeout: 265 seconds)
[19:45:16] *** Joins: sheldon (~sheldon@user/sheldon)
[19:49:17] *** Quits: lauraaah (uid156848@id-156848.ilkley.irccloud.com) (Quit: Connection closed for inactivity)
[19:56:25] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 260 seconds)
[19:57:59] *** Joins: fikran (~fikran@user/fikran)
[20:03:06] *** Joins: anotheruser (~user@41.46.233.181)
[20:05:06] *** Parts: anotheruser (~user@41.46.233.181) ()
[20:05:16] *** Joins: someuser (~user@41.46.233.181)
[20:05:34] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Quit: leaving)
[20:05:50] <someuser> hello, whats the best way to open a file for writing and keep writing strings to it from os.Stdin until an empty line is entered
[20:05:52] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[20:09:08] <A_Dragon> writing TO os.stdin?
[20:13:20] <albertito> someuser: r := bufio.NewReader(io.Stdin); for { line, err := r.ReadString("\n"); if line == "\n" { break }; w.WriteString(line) }
[20:13:23] <albertito> someuser: something like that
[20:17:42] <someuser> ty, i might not be very familiar with w or writers
[20:17:59] *** Joins: sizeof_void34 (~Thunderbi@109.252.124.86)
[20:18:00] <someuser> writing to an opened file whatever is being written to os.stdin
[20:18:25] <someuser> i wrote this but not sure if its any good
[20:18:32] <someuser> https://play.golang.org/p/4H6doaKa_YO
[20:20:13] <someuser> w.WriteString(line) <-- is this same as what i did ?
[20:20:34] <someuser> and is using bufio.NewReader preferred over Scanner ?
[20:26:30] *** Quits: khrbt_ (~znc@user/khrbt) (Ping timeout: 260 seconds)
[20:29:16] <fizzie> I wouldn't say that, but Scanner's a more flexible interface. Strictly speaking your use of bufio.ScanLines will for example transparently handle both "\n" and "\r\n" line terminators, which you might or might not want to do, depending.
[20:29:45] *** Joins: khrbt (~znc@user/khrbt)
[20:30:27] <fizzie> As regards to your `checkIfFileExists` function, it's usually a mistake to explicitly check whether a file exists and then decide whether to do something with it, because it's an inherently racy operation (what if the file gets created between the check and the use?).
[20:31:50] <fizzie> (OpenFile can be used to atomically do "create if doesn't exist, open if does" anyway.)
[20:41:35] <fizzie> Also, normally you'd use the return value of Scan() to decide whether to terminate the loop. I don't think Text() is strictly defined if Scan() returned false. And your code would seem to write an empty line at the end of the file.
[20:46:17] *** Joins: Kyros (~kyros@user/kyros)
[20:50:44] *** Joins: lauraaah (uid156848@id-156848.ilkley.irccloud.com)
[20:50:49] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Read error: Connection reset by peer)
[20:51:02] *** Joins: anotheruser (~user@102.43.169.224)
[20:54:37] *** Quits: someuser (~user@41.46.233.181) (Ping timeout: 245 seconds)
[20:56:24] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[21:02:54] *** Parts: anotheruser (~user@102.43.169.224) ()
[21:03:02] *** Joins: someuser (~user@102.43.169.224)
[21:03:44] <someuser> ty fizzie, do you mind showing me what you meant by "you'd use the return value of Scan() to decide whether to terminate the loop"
[21:04:12] *** Quits: someuser (~user@102.43.169.224) (Remote host closed the connection)
[21:04:36] *** Joins: someuser (~user@102.43.169.224)
[21:06:00] *** Joins: oxum (~oxum@106.203.195.217)
[21:06:38] *** Quits: normen (~normen@p200300d7173dc90068b436d47588f31f.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[21:09:40] <fizzie> Something like `for s.Scan() { doSomethingWith(s.Text()) }`, usually. Or if you want that per-line prompt, `for { prompt(); if !s.Scan() { break } doSomethingWith(s.Text()) }` instead.
[21:09:50] <fizzie> Dinner's too close to write an actual example, but something along those lines.
[21:10:40] *** Quits: oxum (~oxum@106.203.195.217) (Ping timeout: 252 seconds)
[21:10:49] *** Quits: sheldon (~sheldon@user/sheldon) (Ping timeout: 252 seconds)
[21:12:01] *** Joins: anotheruser (~user@41.35.148.27)
[21:12:11] *** Parts: anotheruser (~user@41.35.148.27) ()
[21:13:31] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Quit: leaving)
[21:14:33] *** Quits: someuser (~user@102.43.169.224) (Ping timeout: 265 seconds)
[21:15:23] *** Joins: someuser (~user@41.35.148.27)
[21:15:23] *** Quits: someuser (~user@41.35.148.27) (Client Quit)
[21:16:47] *** Joins: someuser (~user@41.35.148.27)
[21:16:49] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[21:16:55] <someuser> does that look ok fizzie https://play.golang.org/p/rFrsbZxzl42
[21:17:31] *** Quits: farmstatejake (~farmstate@user/farmstatejake) (Client Quit)
[21:19:11] *** Quits: Snyp (~Snyp@49.207.220.4) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:19:22] *** Joins: anotheruser (~user@102.43.165.18)
[21:21:16] *** Quits: Seirdy (~Seirdy@sourcehut/user/seirdy) (Ping timeout: 252 seconds)
[21:22:02] *** Quits: someuser (~user@41.35.148.27) (Ping timeout: 260 seconds)
[21:27:14] *** Joins: farmstatejake (~farmstate@user/farmstatejake)
[21:27:21] *** Joins: Seirdy (~Seirdy@sourcehut/user/seirdy)
[21:30:09] *** Joins: someuser (~user@41.46.224.53)
[21:33:14] *** Quits: anotheruser (~user@102.43.165.18) (Ping timeout: 260 seconds)
[21:35:52] <jpw> someuser: personally i'd invert the logic on that test like so. https://play.golang.org/p/0TuQnz_gCvT
[21:36:38] *** Quits: holgersson (~quassel@user/holgersson) (Ping timeout: 252 seconds)
[21:38:43] <seebs> I am pretty sure you want to test the result of `scanner.Scan`.
[21:38:45] <fizzie> Personally I'd still do what I said I'd do, and use the return value of Scan(). At least in *addition* to the text being empty.
[21:39:37] <seebs> I wouldn't use Scanner for copying "whatever's coming in on stdin"
[21:39:52] <seebs> because there's no reason to expect stdin to be line-oriented
[21:40:05] <fizzie> There's a per-line prompt, I imagine that was for a reason.
[21:40:24] <seebs> I guess, yeah.
[21:41:45] <seebs> I also actually have no idea whether Scanner even works-as-intended for a case like this, because for all I know it will wait until a buffer fills up or something. Also, the docs suggest that bufio.Reader might be better. But it also might not...
[21:42:05] <seebs> "Programs that need more control over error handling or large tokens, or must run sequential scans on a reader, should use bufio.Reader instead."
[21:42:43] <seebs> Also, it would *probably* make more sense to use fmt.Fprintln() instead of f.WriteString?
[21:43:21] *** Joins: normen (~normen@p54b3452e.dip0.t-ipconnect.de)
[21:50:50] *** Joins: cskr (~cskr@49.207.218.133)
[21:51:08] *** Quits: cskr (~cskr@49.207.218.133) (Client Quit)
[21:54:40] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[21:54:55] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[21:57:23] <someuser> ty guys, that helped indeed
[21:58:13] *** Joins: Snyp (~Snyp@49.207.220.4)
[21:58:15] <someuser> i have another question, if i am doing an http request and i am retrieving some json from a response. What is the best way to write the response as json to a file?
[21:58:30] <someuser> i googled but i always get confused with the amount of options i see lol
[21:58:48] *** Quits: Snyp (~Snyp@49.207.220.4) (Client Quit)
[22:00:42] *** Joins: Snyp (~Snyp@49.207.220.4)
[22:00:43] <fizzie> `_, err := io.Copy(f, resp.Body)` is definitely the *simplest* way, at least. (Remember to close the Body too, usually done by a defer.)
[22:05:07] *** Quits: fikran (~fikran@user/fikran) (Ping timeout: 252 seconds)
[22:06:18] <fizzie> https://play.golang.org/p/Zv3LPcPgzJp and so on. (Won't run on the playground, though, I imagine it won't do arbitrary network stuff from the sandbox for the obvious reasons.)
[22:07:21] *** Joins: fikran (~fikran@user/fikran)
[22:12:50] <someuser> lovely, i never ever used io.copy, ty fizzie
[22:13:10] <someuser> i was trying this : xxx but currently have an issue with the request itself, working on python not on go lol
[22:13:15] <someuser> i bet i am doing something wrong
[22:14:20] <someuser> got it a typo
[22:19:21] <someuser> i wonder why using io.Copy and ioutil.ReadAll works but not this one : https://play.golang.org/p/yLo8zIZd_02
[22:19:26] <someuser> i get an empty .json file
[22:20:11] <someuser> sorry : https://play.golang.org/p/TG3eqOBSkdK
[22:22:25] <fizzie> You can only read the Body once.
[22:22:39] <fizzie> It's a reader, not a chunk of data.
[22:22:59] <A_Dragon> yeah, Body is the actual conn to the other server
[22:23:40] <fizzie> That's re the earlier link, which did first `ioutil.ReadAll(res.Body)` but then also tried to use it later on.
[22:24:01] <someuser> ya, but ever if i removed that line
[22:24:12] <someuser> i still get an empty json somehow, i think i fixed it in :
[22:24:15] <fizzie> As for the latter piece of code, didn't you say the result is already in JSON?
[22:24:22] <someuser> indeed it is
[22:24:35] <fizzie> So there's no need to try to use json.NewEncoder for anything.
[22:24:45] *** Joins: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263)
[22:24:51] <fizzie> You just need to copy the data into the file. I mean, if that's all you need.
[22:25:04] <someuser> yup, thats all i need
[22:25:38] <someuser> is it preferred to use os.Create or os.CreateFile ?, the latter has more options like flags, but I get confused on when to choose which of those
[22:26:15] <someuser> sorrys
[22:26:20] <someuser> OpenFile not CreatFile
[22:26:39] <someuser> since OpenFile also creates it if it's not existing with the correct flags given to it
[22:26:50] <fizzie> If the defaults of os.Create work for you (O_RDWR | O_CREATE, mode 0666), then I think it makes sense to use os.Create, just because it "looks simpler".
[22:27:06] <fizzie> That's what they say in the os.OpenFile docs: "OpenFile is the generalized open call; most users will use Open or Create instead."
[22:28:44] <dostoyevsky2> I've found this example for how to create a zip file in memory: https://play.golang.org/p/IVCWDbUVTtK  -- any ideas how to do `ff, _ := os.Create("test.zip"); io.Copy(ff, f); ff.Close()' and still be able to use `zr := zipstream.NewReader(f)' in the next line?  Could I just rewind f somehow?
[22:30:09] <bookworm> seek to 0
[22:30:10] <fizzie> Yes, you can rewind a *bytes.Reader, it implements io.Seeker.
[22:30:37] <someuser> got it thanks again, but maybe i am missing something isnt 0666 already grants read and write permission, why the O_RDWR flags too?
[22:30:43] <someuser> sorry not very technical
[22:30:51] <Tv_> that github.com/krolaw/zipstream doesn't look like it'd actually work with all pkzip files, no way
[22:30:53] <fizzie> someuser: It's not the permission, it's the mode your program has it open.
[22:31:03] <Tv_> there can be content in the .zip that isn't part of the index
[22:31:23] <Tv_> zip is fundamentally not meant to be a stream-read format
[22:32:21] <Tv_> dostoyevsky2: https://pkg.go.dev/bytes#Reader.Seek
[22:32:48] <Tv_> dostoyevsky2: or, even simpler, just return the []byte
[22:32:55] <someuser> ty fizzie i always get them both confused, like in linux if i set 0666 i can read and write and that's about it right?
[22:32:56] <dostoyevsky2> Tv_: yeah... I am not sure if I really need it... I just would like to send a payload that contains multiple files via a rest api... so I thought: why not try to create a zip file in memory
[22:33:11] <Tv_> dostoyevsky2: but why on earth are you bothering with a "streaming zip reader" when you're holding all the data in memory
[22:34:15] <Tv_> dostoyevsky2: also, HTTP form file upload submit thing can send multiple files just fine, with none of these complications
[22:35:46] *** Quits: Jigsy (~Jigsy@user/jigsy) (Ping timeout: 260 seconds)
[22:36:25] <fizzie> someuser: Yes. But if you open a file that has those permissions in O_RDONLY mode, then that file handle can only be used to read from it. And opening a file in O_RDONLY mode only requires you to have read permissions on the file. (Also, the mode provided to os.OpenFile is modified by umask, so typically the created file ends up having permissions like 0644, or something more restrictive.)
[22:37:21] <someuser> okay that also makes sense, appreciate it
[22:38:00] *** Quits: goldfish (~goldfish@user/goldfish) (Ping timeout: 260 seconds)
[22:38:36] <dostoyevsky2> Tv_: I am using r.Body directly atm in my uploadHandler
[22:38:44] *** Joins: Jigsy (~Jigsy@user/jigsy)
[22:39:03] *** Quits: batdog (batdog@lnsq.elkins.co) (Quit: Bye)
[22:39:16] <Tv_> dostoyevsky2: in the code you didn't share? okay. please be aware that i can construct a zip file that behaves differently when unzipping with something else vs that zipstream library
[22:39:38] <Tv_> dostoyevsky2: i still don't see why bother with zip, you can receive multiple file uploads in a single POST just fine
[22:40:33] <Tv_> dostoyevsky2: https://pkg.go.dev/net/http#Request.FormFile (it'll spill the content into temp files as necessary, to provide that functionality)
[22:41:03] *** Joins: batdog (~batdog@lnsq.elkins.co)
[22:41:10] <Tv_> (https://pkg.go.dev/net/http#Request.MultipartReader to truly stream the content, without temp files, but it's more complex)
[22:42:07] *** Quits: nattiestnate (~nate@2001:448a:20a0:4134:25e:715f:d637:5263) (Ping timeout: 245 seconds)
[22:42:52] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:6c2e:992:b9a3:7ffa)
[22:43:27] <dostoyevsky2> Tv_: without temp file sounds promising!
[22:48:48] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 265 seconds)
[22:51:04] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[22:57:30] *** Quits: nevivurn (~nevivurn@user/nevivurn) (Quit: Goodbye~)
[22:58:23] *** Quits: be3uykpy_ (~be3uykpy@2a00:a040:19a:b060:c45a:fba8:c175:9860) (Quit: Leaving)
[23:04:46] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[23:05:05] *** Joins: independent_ (~independe@95.144.68.39)
[23:06:20] *** Joins: anotheruser (~user@50.228.255.19)
[23:07:05] *** Quits: anotheruser (~user@50.228.255.19) (Remote host closed the connection)
[23:09:35] *** Quits: someuser (~user@41.46.224.53) (Ping timeout: 265 seconds)
[23:10:46] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[23:11:04] *** Joins: independent_ (~independe@95.144.68.39)
[23:12:57] *** Joins: jjonah (~jjonah@p200300d5d71aad00dea632fffeb3342f.dip0.t-ipconnect.de)
[23:16:43] *** Joins: anotheruser (~user@50.228.255.19)
[23:32:50] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 260 seconds)
[23:34:22] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[23:43:25] *** Quits: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be) (Ping timeout: 265 seconds)
[23:43:46] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[23:44:03] *** Joins: independent_ (~independe@95.144.68.39)
[23:44:56] *** Joins: mikoto-chan (~mikoto-ch@ip-83-134-2-136.dsl.scarlet.be)
[23:45:38] *** Quits: anotheruser (~user@50.228.255.19) (Remote host closed the connection)
[23:46:02] *** Joins: anotheruser (~user@50.228.255.19)
[23:46:16] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[23:46:33] *** Joins: independent_ (~independe@95.144.68.39)
[23:51:16] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[23:51:35] *** Joins: independent_ (~independe@95.144.68.39)
[23:52:22] *** Quits: jpw (~jpw@user/jpw) (Remote host closed the connection)
[23:54:39] *** Quits: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net) (Remote host closed the connection)
[23:55:01] *** Joins: oldgalileo (~oldgalile@host-212-18-2-82.customer.m-online.net)
[23:57:16] *** Quits: independent_ (~independe@95.144.68.39) (Remote host closed the connection)
[23:57:35] *** Joins: independent_ (~independe@95.144.68.39)
[23:58:52] *** Joins: blinux (~blinux@pool-108-48-11-122.washdc.fios.verizon.net)
