[00:00:17] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[00:00:27] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Remote host closed the connection)
[00:02:56] *** Quits: Comb (~Comb@83-233-130-113.cust.bredband2.com) (Remote host closed the connection)
[00:03:57] <CarloWood> Is it possible to use a bit field for a struct containing one int?  Say:
[00:03:59] <CarloWood> { B b{}; } struct A { uint16_t mask; }; struct B { uint16_t:7 k; A:9 a; };
[00:03:59] <geordi> error: expected ';' at end of member declaration (fix known)
[00:04:05] <CarloWood> Or how would I do this?
[00:04:20] <zz> but why
[00:04:44] <CarloWood> I only need 9 bits of A::mask.
[00:05:15] <CarloWood> but I want to be able to use it as an 'A'.  Aka,   A my_a = b.a;
[00:05:41] <Eelis> can't be done. structs have sizes measured in bytes, not bits
[00:06:01] <CarloWood> Oh well.
[00:12:56] <CarloWood> Guess I'll do it like this then :) https://gyazo.com/04fba6bc5487db494d26012e91225a15
[00:14:18] *** Joins: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar)
[00:14:39] <AliceMeows> That look brittle
[00:15:28] <CarloWood> There is no such thing in code. It either works or it doesn't.
[00:16:54] <PJBoy> or it works some of the time
[00:16:58] <PJBoy> non deterministically
[00:17:27] <CarloWood> Quantum computing!
[00:18:24] <PJBoy> seems fine to me though?
[00:18:28] *** Quits: cytokine_storm (~user@user/cytokine-storm/x-1083107) (Ping timeout: 250 seconds)
[00:19:11] <CarloWood> Plus, my code evolves - already it looks like this now: https://gyazo.com/63255f9067c2bc14df51935ac1bd35aa
[00:20:13] <kalven> just slap a comment on the enum that says to not add values over X
[00:20:34] <PJBoy> could add a "size" member and static_assert it
[00:20:35] <CarloWood> Not sure why, but I am surprised that this is std::is_trivially_copyable_v with a custom constructor and stuff.
[00:20:48] <PJBoy> s/member/enumerator
[00:21:43] <PJBoy> I see your code evolved to be widescreen
[00:22:02] <CarloWood> Not sure how to enforce that the EventType enum has exactly 8 members... Do we have something in C++20 that can tell me this? I can use magic_enum but hmm.
[00:22:20] <CarloWood> I use all of my screen yes.
[00:22:51] <PJBoy> my idea is `enum E { a, b, c, d, size; }; static_assert(int(E::size) < 16, "booo");`
[00:23:07] <Eelis> bit-optimizing anything that has to do with mouse pressing is misguided, because no human can press the mouse fast enough for it to be remotely performance sensitive
[00:24:05] <CarloWood> I'm going for the comment I think ;)
[00:24:20] <kalven> this is for a cluster system that will process billions of clicks
[00:24:20] *** Joins: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com)
[00:25:50] <CarloWood> This is slower than using two separate int's. I don't do it for the speed, but for the size.
[00:26:04] *** Joins: Null_A (~null_a@2601:645:8700:2290:c416:44d3:5d02:2aca)
[00:27:29] *** Quits: Null_A (~null_a@2601:645:8700:2290:c416:44d3:5d02:2aca) (Remote host closed the connection)
[00:30:31] *** Joins: Null_A (~null_a@2601:645:8700:2290:5c09:f5f1:57b7:d1d5)
[00:30:42] *** Joins: ivii (~ivan@user/ivii)
[00:31:09] *** Quits: Null_A (~null_a@2601:645:8700:2290:5c09:f5f1:57b7:d1d5) (Read error: Connection reset by peer)
[00:33:25] *** Joins: Null_A (~null_a@2601:645:8700:2290:5c09:f5f1:57b7:d1d5)
[00:33:41] *** Quits: zer0bitz (~zer0bitz@2001:2003:f74d:b800:50b5:b57f:7251:ce23) (Ping timeout: 245 seconds)
[00:33:56] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[00:34:06] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Ping timeout: 245 seconds)
[00:34:10] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[00:34:30] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[00:35:52] *** Joins: Markow (~Markow@176.122.215.103)
[00:36:39] <AliceMeows> https://godbolt.org/z/3Gn7nj335 this is pretty cool, I wasn't sure it it'll be possible to check enums like that too
[00:40:39] *** Joins: Dizidentu (~aresg@modemcable151.154-19-135.mc.videotron.ca)
[00:40:40] <PJBoy> pretty cool indeed :)
[00:46:07] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[00:47:22] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[00:48:17] *** Quits: bzyx (~quassel@89-69-20-238.dynamic.chello.pl) (Ping timeout: 240 seconds)
[00:48:30] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 260 seconds)
[00:50:20] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Quit: Konversation terminated!)
[00:54:26] *** Quits: davros (~davros@host86-185-61-1.range86-185.btcentralplus.com) (Ping timeout: 250 seconds)
[00:55:21] *** Quits: crankslider (~slidercra@user/slidercrank) (Ping timeout: 245 seconds)
[00:56:07] *** Quits: MarcoFe (~marcofe@93-36-164-204.ip61.fastwebnet.it) (Quit: Konversation terminated!)
[00:57:22] *** Joins: c4017w_ (~c4017@209.52.68.8)
[00:57:53] *** Joins: temp_user_2022 (~amit@2601:445:447f:a2f6:acb3:81db:281b:e516)
[00:59:47] *** Quits: Null_A (~null_a@2601:645:8700:2290:5c09:f5f1:57b7:d1d5) (Remote host closed the connection)
[01:00:16] *** Joins: dangrenier83 (~pi@user/dangrenier83)
[01:00:41] *** Joins: bzyx (~quassel@89-69-20-238.dynamic.chello.pl)
[01:00:58] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[01:06:39] *** Quits: pulse (~pulse@user/pulse) (Read error: Connection reset by peer)
[01:09:34] *** Joins: pulse (~pulse@user/pulse)
[01:11:05] *** Quits: proller (~p@80.240.216.69) (Ping timeout: 250 seconds)
[01:17:38] *** Quits: joilerv (~joilerv@host86-191-93-41.range86-191.btcentralplus.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:22:08] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Remote host closed the connection)
[01:22:37] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[01:23:21] *** Joins: proller (~p@2a02:6b8:b081:8809::1:25)
[01:26:28] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[01:27:23] *** Joins: sigma_ (~sigma@86.57.79.161)
[01:28:39] *** Quits: magla (~gelignite@55d4f325.access.ecotel.net) (Quit: Stay safe!)
[01:31:05] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b145:6efe:44b7:516c) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:32:04] *** Quits: sigma_ (~sigma@86.57.79.161) (Client Quit)
[01:32:08] *** Joins: ouestbillie (~gallup@192.222.211.58)
[01:33:49] *** Quits: RoKenn (~RoKenn@user/rokenn) (Quit: NSA proxy service interrupted)
[01:34:24] <AliceMeows> https://godbolt.org/z/v5qrPhcvP that works too
[01:37:05] *** Quits: rendar (~rendar@user/rendar) (Quit: Leaving)
[01:37:48] *** Quits: ouestbillie (~gallup@192.222.211.58) (Ping timeout: 256 seconds)
[01:38:59] *** Quits: duckpot (~duckpot@77.61.23.95.dynamic.jazztel.es) (Quit: Client closed)
[01:39:19] *** Joins: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net)
[01:39:46] *** Quits: elkalamar (elkalamar@gateway/vpn/airvpn/elkalamar) (Quit: Leaving)
[01:41:34] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[01:41:37] *** Quits: Nitrousoxide (~msdos@user/nitrousoxide) (Ping timeout: 240 seconds)
[01:41:46] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[01:41:53] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[01:41:53] *** ChanServ sets mode: +v npaperbot
[01:42:30] *** Joins: Nitrousoxide (~msdos@user/nitrousoxide)
[01:45:02] *** Quits: Tangent-Man (~Tang3nt-M@cpc145602-basl14-2-0-cust33.20-1.cable.virginm.net) (Quit: Leaving)
[01:45:07] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[01:49:44] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[01:51:32] *** Quits: tct (~tct@user/tct) (Read error: Connection reset by peer)
[01:51:54] *** Joins: tct (~tct@user/tct)
[01:54:19] *** Quits: Tokamak (~Tokamak@172.58.191.35) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[01:58:12] *** Joins: c4017w (~c4017@209.52.68.8)
[01:58:30] *** Quits: Fleck (~fleck@user/fleck) (Remote host closed the connection)
[01:58:43] *** Joins: ouestbillie (~gallup@192.222.211.58)
[02:00:05] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Quit: ERC (IRC client for Emacs 27.1))
[02:00:36] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Ping timeout: 276 seconds)
[02:01:17] *** Joins: Fleck (~fleck@user/fleck)
[02:01:46] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 260 seconds)
[02:03:22] *** Joins: jkaye (~jkaye@2601:281:8300:7530:d551:c5d6:10bb:b867)
[02:06:22] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[02:08:30] *** Quits: bingulo (~carlos@2804:431:e7c8:1e13:6aa5:f04b:2b75:a55b) (Remote host closed the connection)
[02:08:31] *** Quits: ouestbillie (~gallup@192.222.211.58) (Ping timeout: 250 seconds)
[02:10:27] *** Joins: ouestbillie (~gallup@192.222.211.58)
[02:13:55] *** Quits: Betal (~Betal@user/betal) (Ping timeout: 250 seconds)
[02:13:58] *** Quits: sbrothy (~sbrothy@192038130232.mbb.telenor.dk) (Read error: Connection reset by peer)
[02:14:09] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 250 seconds)
[02:14:43] *** Quits: ouestbillie (~gallup@192.222.211.58) (Remote host closed the connection)
[02:15:10] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[02:16:54] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[02:19:33] *** Joins: chozorho (~chozorho@2601:146:300:c30::eb69)
[02:19:43] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[02:20:07] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[02:23:20] *** Joins: ouestbillie (~gallup@192.222.211.58)
[02:23:59] *** Joins: jokoon (~eio@2a01:e0a:542:e160:f1aa:93ea:6649:41de)
[02:26:09] *** Quits: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz) (Remote host closed the connection)
[02:30:37] *** Quits: highrate (~presonic@user/highrate) (Ping timeout: 240 seconds)
[02:30:42] *** Joins: presonic (~presonic@111-22-237-24.gci.net)
[02:32:48] *** Quits: pizdets (~pizdets@183.182.115.245) (Ping timeout: 250 seconds)
[02:33:57] *** Joins: pizdets (~pizdets@183.182.111.130)
[02:38:01] *** kevr` is now known as kevr
[02:44:10] *** Joins: badone (~badone@209.132.189.152)
[02:44:28] *** Quits: Null_A (~null_a@c-98-210-133-39.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[02:45:29] *** Quits: jkaye (~jkaye@2601:281:8300:7530:d551:c5d6:10bb:b867) (Quit: Leaving)
[02:47:02] *** Quits: jokoon (~eio@2a01:e0a:542:e160:f1aa:93ea:6649:41de) (Quit: Leaving)
[02:57:41] *** Quits: Burgundy (~NA@86.121.143.206) (Ping timeout: 250 seconds)
[02:58:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[03:01:17] *** Quits: LucaTM (~LucaTM@user/lucatm) (Quit: Textual IRC Client: www.textualapp.com)
[03:02:15] *** Quits: c4017w (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[03:03:19] *** Quits: segnior (segnior@user/segnior) (Quit: Leaving)
[03:07:42] *** Quits: karakedi (~eAC53C340@user/karakedi) (Read error: Connection reset by peer)
[03:07:59] *** Joins: karakedi (~eAC53C340@user/karakedi)
[03:13:01] *** Joins: rgrinberg (~textual@187.223.115.137)
[03:16:55] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[03:22:39] *** Quits: vdamewood (~vdamewood@fedora/vdamewood) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[03:25:07] *** Joins: TonyStone31 (~TonyStone@2603-7080-8607-c36a-cdff-5348-04ff-b4e2.res6.spectrum.com)
[03:25:08] *** Quits: TonyStone (~TonyStone@cpe-74-76-51-197.nycap.res.rr.com) (Quit: Leaving)
[03:25:11] *** Quits: TonyStone31 (~TonyStone@2603-7080-8607-c36a-cdff-5348-04ff-b4e2.res6.spectrum.com) (Remote host closed the connection)
[03:25:37] *** Joins: TonyStone (~TonyStone@2603-7080-8607-c36a-cdff-5348-04ff-b4e2.res6.spectrum.com)
[03:26:46] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[03:28:51] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Linux 5.16.0-Pogorze-Karpackie-CUSTOM-KERNEL)
[03:29:15] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[03:30:48] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[03:30:53] *** Joins: segnior (segnior@user/segnior)
[03:32:28] *** Quits: segnior (segnior@user/segnior) (Max SendQ exceeded)
[03:33:23] *** Joins: segnior (segnior@user/segnior)
[03:33:50] *** Quits: plastico (~plastico@neomutt/plastico) (Quit: WeeChat 3.4)
[03:33:54] *** Quits: Soni (~quassel@autistic.space) (Ping timeout: 250 seconds)
[03:34:13] *** Quits: N4buc0 (~N4buc0@191.250.117.129) (Quit: Leaving)
[03:35:36] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[03:36:00] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[03:38:39] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Remote host closed the connection)
[03:40:33] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[03:44:33] *** Quits: ivii (~ivan@user/ivii) (Quit: Konversation terminated!)
[03:45:27] *** Quits: clime (~clime@37-48-57-231.nat.epc.tmcz.cz) (Quit: WeeChat 3.3)
[03:47:58] *** Quits: Leo_V (~Leo@216.154.23.229) (Read error: Connection reset by peer)
[03:48:13] *** Joins: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469)
[03:50:45] *** Quits: segnior (segnior@user/segnior) (Ping timeout: 256 seconds)
[03:53:29] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[03:53:48] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[03:57:23] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 252 seconds)
[03:59:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[04:00:13] *** Quits: MatSharrow (~matthew@117.20.9.51.dyn.plus.net) (Ping timeout: 240 seconds)
[04:01:02] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[04:03:13] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[04:03:20] *** Joins: Soni (~quassel@autistic.space)
[04:03:59] *** Quits: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca) (Ping timeout: 252 seconds)
[04:10:21] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 245 seconds)
[04:11:26] *** Quits: vqueiroz (uid340368@id-340368.hampstead.irccloud.com) (Quit: Connection closed for inactivity)
[04:18:10] *** Quits: AmR (~AmREiSa@156.207.146.251) (Ping timeout: 256 seconds)
[04:19:42] *** Quits: ouestbillie (~gallup@192.222.211.58) (Quit: leaving)
[04:20:11] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[04:22:01] *** Quits: AbleBacon (~AbleBacon@user/AbleBacon) (Read error: Connection reset by peer)
[04:22:51] *** Joins: ouestbillie (~gallup@192.222.211.58)
[04:25:19] *** Quits: ouestbillie (~gallup@192.222.211.58) (Client Quit)
[04:25:41] *** Joins: ouestbillie (~gallup@192.222.211.58)
[04:32:09] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:a5a7:9716:6392:26bc) (Ping timeout: 250 seconds)
[04:32:37] *** Joins: Null_A (~null_a@2601:645:8700:2290:9dfb:d74f:b509:d274)
[04:37:11] *** Quits: chris64 (~chris@user/chris64) (Quit: leaving)
[04:37:38] *** Joins: bebyx (~Thunderbi@user/bebyx)
[04:40:09] *** Joins: Lazenca (Lazenca@user/lazenca)
[04:42:53] *** Joins: DrMax_ (~DrMax@132.215.96.30)
[04:46:17] *** Quits: DrMax__ (~DrMax@132.215.96.30) (Ping timeout: 256 seconds)
[04:49:55] *** Quits: ouestbillie (~gallup@192.222.211.58) (Ping timeout: 250 seconds)
[04:51:38] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[04:57:24] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[04:58:45] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[04:58:59] *** Joins: daswf8522 (~daswf852@user/daswf852)
[04:59:01] <AliceMeows> Are there any proposals for concept_map or something equivalent?
[04:59:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[05:00:03] *** Quits: daswf852 (~daswf852@user/daswf852) (Read error: Connection reset by peer)
[05:00:03] *** daswf8522 is now known as daswf852
[05:00:13] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[05:01:25] *** Quits: bebyx (~Thunderbi@user/bebyx) (Ping timeout: 250 seconds)
[05:03:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[05:06:07] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[05:22:27] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[05:25:02] *** Quits: Tobbi (~Tobbi@2a02:8108:1240:48ec:64b2:4d59:ced9:7c72) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[05:27:08] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[05:27:13] <norias> hi
[05:27:18] <kalven> I think it died ~10 years ago
[05:27:33] <norias> ?
[05:27:51] <norias> oh, i see, you are refering to concept_map
[05:28:13] *** Joins: arch-angel (~arch-ange@2001:e68:5400:3444:f67f:24ed:5c4c:c6be)
[05:30:50] *** Joins: vicfred (~vicfred@user/vicfred)
[05:32:25] <AliceMeows> It did die but I'm asking if there are any new proposals to bring something like this to the language
[05:34:47] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Read error: Connection reset by peer)
[05:36:37] *** Quits: PJBoy (~PJBoy@user/pjboy) (Ping timeout: 240 seconds)
[05:41:46] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[05:41:54] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[05:41:54] *** ChanServ sets mode: +v npaperbot
[05:43:31] *** Quits: rgrinberg (~textual@187.223.115.137) (Read error: Connection reset by peer)
[05:44:26] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b)
[05:51:21] *** Quits: _mikey (~mikey@user/mikey/x-4335048) (Ping timeout: 276 seconds)
[05:53:29] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[05:56:29] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[05:56:57] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 240 seconds)
[05:58:09] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[06:00:22] *** Joins: c4017w__ (~c4017@209.52.68.8)
[06:00:39] *** Quits: svm_invictvs (~svm_invic@user/svm-invictvs/x-6696469) (Remote host closed the connection)
[06:02:51] *** Quits: Null_A (~null_a@2601:645:8700:2290:9dfb:d74f:b509:d274) (Read error: Connection reset by peer)
[06:03:06] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[06:03:37] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[06:03:43] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Read error: Connection reset by peer)
[06:04:01] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[06:06:03] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:06:11] *** Quits: proller (~p@2a02:6b8:b081:8809::1:25) (Ping timeout: 245 seconds)
[06:07:32] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[06:09:24] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[06:09:46] *** Joins: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au)
[06:10:51] *** Joins: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net)
[06:16:59] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b)
[06:31:18] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[06:33:35] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Quit: Lost terminal)
[06:34:10] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[06:41:14] *** presonic is now known as highrate
[06:41:18] *** Quits: highrate (~presonic@111-22-237-24.gci.net) (Changing host)
[06:41:18] *** Joins: highrate (~presonic@user/highrate)
[06:49:02] *** Quits: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655) (Quit: WeeChat 3.4)
[06:58:52] *** Quits: Dizidentu (~aresg@modemcable151.154-19-135.mc.videotron.ca) (Quit: WeeChat 2.8)
[06:59:56] *** Quits: chozorho (~chozorho@2601:146:300:c30::eb69) (Ping timeout: 245 seconds)
[07:00:49] *** Joins: chozorho (~chozorho@2601:146:300:c30::6737)
[07:00:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[07:02:47] *** Joins: lainon (~lainon@2601:7c0:c500:4d20::3385)
[07:04:17] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[07:04:48] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[07:07:42] *** Quits: lainon (~lainon@2601:7c0:c500:4d20::3385) (Quit: lainon)
[07:10:01] *** Quits: caramel (~caramel@user/caramel) (Read error: Connection reset by peer)
[07:12:08] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 256 seconds)
[07:13:43] <fluter> hi, i have a lot of POD structs, is there a good and fast way to define the equaulity operator for each of them so that I can do == compare?
[07:14:03] <fluter> and without create a new function for each struct and compare each of its field?
[07:14:09] <fluter> that will be a lot of code :(
[07:15:51] *** Quits: pulse (~pulse@user/pulse) (Quit: pulse)
[07:17:42] *** Quits: mad_enz (~mad_enz@lnsm3-torontoxn-142-116-106-108.internet.virginmobile.ca) (Ping timeout: 260 seconds)
[07:18:33] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[07:19:23] <kalven> put this in the struct: bool operator==(const nameofstruct&) const = default;
[07:21:33] <fluter> kalven: i cannot add code into the structs, it's not my code :(
[07:21:51] <fluter> can i do this: bool operator==(const nameofstruct& l, const nameofstruct& r) = default; ?
[07:25:39] <kalven> I don't think you can do it without modifying the struct
[07:25:44] <kalven> https://en.cppreference.com/w/cpp/language/default_comparisons
[07:27:11] <fluter> okk
[07:29:31] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 245 seconds)
[07:29:38] *** Quits: emerent (~quassel@p200300cd57044358ba27ebfffed28a59.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[07:30:01] *** Joins: mad_enz (~mad_enz@lnsm1-torontoxn-142-120-17-169.internet.virginmobile.ca)
[07:30:17] *** Joins: emerent (~quassel@p200300cd57044321ba27ebfffed28a59.dip0.t-ipconnect.de)
[07:31:57] *** Quits: constxd (~brad@142.167.170.88) (Ping timeout: 240 seconds)
[07:33:21] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[07:33:38] *** Joins: euphrates[m] (~euphrates@2001:470:69fc:105::fbb5)
[07:39:57] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[07:41:11] <Alipha> fluter: if a struct has members x, y, and z, then you can define your operator== as `return std::tie(l.x, l.y, l.z) == std::tie(r.x, r.y, r.z);` Probably not terribly useful for ==, but it makes defining <, etc a lot easier
[07:41:39] *** Joins: Atque (~Atque@user/atque)
[07:46:40] *** Joins: ironman (~ironman@49.36.48.247)
[07:46:42] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Ping timeout: 256 seconds)
[07:57:23] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[07:58:25] *** Joins: ic3blx_ (~ic3blx___@87.116.177.49)
[07:58:25] *** Quits: ic3blx_ (~ic3blx___@87.116.177.49) (Changing host)
[07:58:25] *** Joins: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740)
[07:58:57] <fluter> ah , ok, looks much better than 3 indivual ==,
[07:58:59] <fluter> thanks
[08:00:09] *** Quits: KAHR-Alpha_ (~Alpha@2a01cb0d024a6600657f3d461387e150.ipv6.abo.wanadoo.fr) (Ping timeout: 250 seconds)
[08:00:15] *** Joins: hinata (~hinata@2409:4042:2e90:d98d:995a:7c5b:6c9d:f676)
[08:01:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[08:04:44] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[08:08:22] *** Quits: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp) (Quit: jdavfsxd)
[08:12:13] <ville> AliceMeows: no
[08:12:17] *** Quits: foul_owl (~kerry@174-21-143-101.tukw.qwest.net) (Ping timeout: 250 seconds)
[08:13:20] <AliceMeows> Darn
[08:14:13] <AliceMeows> Guess I'll wait for c++50
[08:14:32] <ville> you should be waiting to get off the language
[08:15:11] <AliceMeows> What are you suggesting exactly? that I look for another language?
[08:16:38] <ville> yes
[08:16:59] <AliceMeows> I've looked already and was mostly disappointed
[08:17:08] *** Quits: ville (~ville@user/ville) (Quit: kernel)
[08:18:31] *** Joins: ville (~ville@user/ville)
[08:19:20] <ville> of course you will be. the space for possible language designs is rather huge, so chances of someone hitting that tiny part you like is rather minimal
[08:20:01] <AliceMeows> The majority of languages are hot garbage
[08:20:12] <ville> see above
[08:20:33] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:21:19] <AliceMeows> I suppose I could always develop a plugin for gcc/clang to add the missing features since the committee doesn't seem to care enough
[08:21:29] <ville> the point being right now it doesn't look like the committee has particularly ambituous plans as far as fixing anything that exists. they'll tack on things to best of their ability but will maintain backwards compatibility. so anything that is broken will remain so
[08:21:46] <ville> i am sure they care. there's just nothing to do under the current mandate
[08:22:14] <AliceMeows> Maybe its about time to change it
[08:23:56] <ville> not too long ago they affirmed that it won't in the most bland way possible, by not taking an explicit stance either way
[08:24:16] <ville> the whole: "make an explicit statement about abi paper"
[08:25:07] *** Joins: foul_owl (~kerry@94.140.8.108)
[08:27:14] *** Quits: jsbach_ (~jsbach@2a01:c23:6421:f700:6d73:7db3:c97a:9054) (Ping timeout: 260 seconds)
[08:30:02] *** Quits: emerent (~quassel@p200300cd57044321ba27ebfffed28a59.dip0.t-ipconnect.de) (Remote host closed the connection)
[08:30:37] *** Quits: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net) (Quit: Ex-Chat)
[08:31:43] <AliceMeows> Does that happen to have anything to do with concept_map?
[08:31:48] *** Joins: emerent (~quassel@p200300cd57044321ba27ebfffed28a59.dip0.t-ipconnect.de)
[08:31:56] *** Quits: Kerr (~quassel@2601:602:ce01:1f0:f230:d70f:f8db:83c0) (Remote host closed the connection)
[08:32:02] *** Quits: foul_owl (~kerry@94.140.8.108) (Ping timeout: 256 seconds)
[08:33:03] <AliceMeows> Did concept_map affect abi in any way?
[08:33:04] <ville> concept maps specifically wouldn't be breaking change, but then again would be limited in what they can do because can't* break anything
[08:34:05] <kalven> what do you want concept maps for?
[08:34:29] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:34:55] <AliceMeows> concept maps solve the problem of missing functionality in a struct or class that you should not or cannot touch without wrapping it or inheriting from it to add anything to it
[08:35:34] <kalven> yeah, but do you have a concrete usecase for it?
[08:35:37] <ville> AliceMeows: that's also solved: forget access specifiers exist. don't write member functions. well except when the language forces you to
[08:36:40] <AliceMeows> Yes and no
[08:37:09] *** Quits: vicfred (~vicfred@user/vicfred) (Quit: Leaving)
[08:37:23] <AliceMeows> The thing I'd like to avoid is specifying manually the type itself for the 'this' pointer
[08:37:38] <AliceMeows> UFCS could also solve that but it never made it into the language either
[08:38:43] *** Joins: dongcarl1 (~dongcarl@pool-96-232-179-212.nycmny.fios.verizon.net)
[08:38:52] <ville> where do you have to manually specify the type for the this pointer?
[08:39:22] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b)
[08:39:26] <AliceMeows> How would you suggest to simulate member functions without passing the type itself?
[08:39:27] *** Joins: jsbach_ (~jsbach@2a01:c22:a8a7:a100:4d10:414a:ca48:6842)
[08:40:13] *** Quits: dongcarl (~dongcarl@70.107.207.192) (Ping timeout: 240 seconds)
[08:40:13] *** dongcarl1 is now known as dongcarl
[08:40:44] *** Quits: badone (~badone@209.132.189.152) (Quit: ZNC 1.7.5 - https://znc.in)
[08:41:39] <ville> err... i've lost you
[08:41:51] <AliceMeows> https://godbolt.org/z/YrT3c16h4
[08:42:04] <ville> you are objecting to that you would have to write an additional parameter if you chose to use non-member?
[08:42:21] <AliceMeows> Yes because it quickly turns into a mess
[08:42:27] <ville> heh
[08:43:20] <ville> i can't say i've observed it to be particularly more so than what goes on otherwise
[08:44:10] <AliceMeows> You never wanted or needed to add some function to std::vector which you cannot/should not modify?
[08:45:02] <ville> sure. not sure i get the point
[08:45:08] *** Joins: foul_owl (~kerry@94.140.8.107)
[08:45:31] <ville> (i don't really use std::vector, but i suppose i may substitute other type in its place)
[08:45:46] <AliceMeows> Any type would do, I'm sure std::string would fit even better
[08:45:54] <ville> don't use that either
[08:47:07] <ville> so like i said types are closed so your only option is to write non-member functions. the ability to write such things is of course hindered by use of access specifiers
[08:47:57] <ville> but i still don't get your reference to "mess"
[08:48:37] <AliceMeows> I'll write you a small example
[08:51:51] *** Quits: hinata (~hinata@2409:4042:2e90:d98d:995a:7c5b:6c9d:f676) (Quit: Leaving)
[08:52:30] <AliceMeows> https://godbolt.org/z/Gd3b7WqY5
[08:53:25] <AliceMeows> What I want is to be able to coerce it to compile and the only way currently would be to wrap 'S' or derive from it
[08:56:15] <kalven> or overload f
[08:56:52] <AliceMeows> That wont allow me to generalize the code
[08:56:58] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[08:57:17] <AliceMeows> I could write various template hacks to get around it but its hardly a solution
[08:57:57] *** Quits: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net) (Client Quit)
[08:58:05] <ville> boilerplate is the name of the game in c++
[08:58:21] <AliceMeows> Unfortunately so
[08:58:39] <AliceMeows> What I mostly want is to avoid any additional overhead with any kind of solution I could come up with
[08:58:45] <kalven> you're dealing with a finite amount of types that you can't touch
[08:59:03] <ville> you write some sort of non-member call_fun() and that does internally either fun(x) or x.fun()
[08:59:33] <ville> well it can be just fun(), that dispatches to member fun if it exists in the type being used
[09:00:20] <AliceMeows> Yes there are workarounds but what I wish is that the language provided a proper way to solve this instead of endlessly writing boilerplate and come up with various workarounds
[09:01:20] *** Joins: fengdaolong (~fengdaolo@58.48.87.4)
[09:01:43] <kalven> it's not endless though
[09:01:47] <AliceMeows> The other problem is the additional overhead you get from those and the compiler can't always optimize it out so I'd rather have the language help with it instead
[09:01:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[09:02:37] *** Joins: _mikey (~mikey@user/mikey/x-4335048)
[09:04:33] <ville> you would still write concept maps equally endlessly. for whatever value of endlessly seems appropriate
[09:04:50] <AliceMeows> I'm fine with that, I just want the runtime overhead gone
[09:05:15] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[09:07:21] <kalven> in your godbolt example you can just add an overload and it solves the issue without runtime overhead
[09:08:37] *** Quits: Garbanzo_ (~Garbanzo@2602:304:6eac:dc10::46) (Ping timeout: 240 seconds)
[09:09:01] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:09:43] *** Joins: Viewday118 (~Viewday@user/viewday)
[09:09:59] <AliceMeows> It does  but its not the point and as I've stated it wont allow me to generalize my code
[09:10:43] <AliceMeows> It'd be wrapping this and wrapping that to allow x function to operate as required but it'll have runtime cost due to it
[09:12:05] *** Quits: jkl1337 (~jkl@user/jkl) (Quit: Gone.)
[09:13:24] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[09:13:24] *** Viewday118 is now known as Viewday11
[09:13:28] *** Joins: jkl (~jkl@user/jkl)
[09:14:15] <kalven> ok.. what do you need the wrapping for (concrete example), and how would concept map obviate that need
[09:14:32] *** Quits: fengdaolong (~fengdaolo@58.48.87.4) (Ping timeout: 256 seconds)
[09:15:42] *** Joins: fengdaolong (~fengdaolo@58.48.87.4)
[09:17:02] <AliceMeows> Assuming that f() function should always accept types that have member function func() to do something, think logging or serializing
[09:17:38] *** Quits: sh00p (~z@h-213-164-223-180.A498.priv.bahnhof.se) (Ping timeout: 260 seconds)
[09:20:07] <kalven> or turn it around and just require that there's a free function
[09:20:21] <AliceMeows> That works too I suppose
[09:21:27] <AliceMeows> Sadly it still doesn't solve the access problem
[09:23:06] <kalven> there are always tradeoffs
[09:23:34] <AliceMeows> Some of them could be avoided though
[09:24:09] <AliceMeows> Sometimes you can have your cake and eat it too
[09:25:40] *** Quits: great_taste (~great_tas@user/great-taste/x-5798414) (Quit: Client closed)
[09:26:37] *** Quits: fengdaolong (~fengdaolo@58.48.87.4) (Ping timeout: 240 seconds)
[09:26:46] <kalven> I don't put too much weight on arguments like "doesn't generalize".. worry about the problem in front of you, not the imaginary ones down the road.
[09:27:18] *** Joins: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de)
[09:27:34] <AliceMeows> I had it happening to me in the past which is why I wish to have it solve so it wont happen in the future
[09:28:00] *** Joins: fengdaolong (~fengdaolo@58.48.87.4)
[09:30:39] <Alipha> AliceMeows: what's this runtime overhead you're referring to? The function calls that will most certainly be inlined?
[09:30:49] <ville> AliceMeows: don't use access specifiers goes along with the write non-members
[09:31:37] <ville> (and it sometimes means rejecting libraries that don't follow this)
[09:31:58] <AliceMeows> Alipha: it doesn't always inline and its not very reliable to to begin with
[09:31:58] <AliceMeows> ville: I get that
[09:32:00] *** Joins: caramel (~caramel@user/caramel)
[09:32:06] *** Quits: Tobbi (~Tobbi@ip1f115d4d.dynamic.kabel-deutschland.de) (Ping timeout: 256 seconds)
[09:33:26] *** Joins: millido (~millido@84.210.150.128)
[09:41:47] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[09:41:54] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[09:41:54] *** ChanServ sets mode: +v npaperbot
[09:41:54] *** Quits: temp_user_2022 (~amit@2601:445:447f:a2f6:acb3:81db:281b:e516) (Ping timeout: 260 seconds)
[09:47:51] *** Joins: hinata (~hinata@2409:4042:2e90:d98d:cd49:3adf:ae59:90e0)
[09:49:37] *** Joins: hiovoltage (~hiovoltag@78.186.68.182)
[09:50:40] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[09:54:08] *** Joins: the_lanetly_052 (~the_lanet@194.135.155.67)
[09:57:20] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[09:59:18] *** Quits: artok (~azo@mobile-access-b04849-185.dhcp.inet.fi) (Ping timeout: 256 seconds)
[10:02:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[10:04:05] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 250 seconds)
[10:05:23] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 250 seconds)
[10:05:53] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[10:07:15] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[10:08:35] *** Joins: artok (~azo@mobile-access-b04849-185.dhcp.inet.fi)
[10:08:44] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[10:14:21] *** Joins: zeenk (~zeenk@2a02:2f04:a204:7c00:d1e7:19c4:1020:b94b)
[10:23:49] *** Joins: zeenk2 (~zeenk@2a02:2f04:a104:3700:5a8:957d:2155:a792)
[10:24:01] *** Quits: zeenk (~zeenk@2a02:2f04:a204:7c00:d1e7:19c4:1020:b94b) (Ping timeout: 250 seconds)
[10:31:00] *** Joins: leduyquang753 (~leduyquan@user/leduyquang753)
[10:31:48] *** Quits: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon) (Remote host closed the connection)
[10:32:23] *** Joins: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse)
[10:32:51] *** Joins: GNUmoon (~GNUmoon@gateway/tor-sasl/gnumoon)
[10:34:13] *** Quits: fengdaolong (~fengdaolo@58.48.87.4) (Ping timeout: 256 seconds)
[10:35:25] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[10:35:31] *** Quits: Zogatribe (Zogatribe@user/zogatribe) (Read error: Connection reset by peer)
[10:45:15] *** Quits: zeenk2 (~zeenk@2a02:2f04:a104:3700:5a8:957d:2155:a792) (Ping timeout: 250 seconds)
[10:47:01] *** Joins: zeenk2 (~zeenk@82-77-96-125.cable-modem.hdsnet.hu)
[10:47:51] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:47:52] *** Joins: fengdaolong (~fengdaolo@58.48.84.75)
[10:47:56] *** Quits: zeenk2 (~zeenk@82-77-96-125.cable-modem.hdsnet.hu) (Client Quit)
[10:50:06] *** Joins: Atque (~Atque@user/atque)
[10:52:00] *** Joins: ElectronApps (~ElectronA@user/electronapps)
[10:52:22] *** Quits: jsbach_ (~jsbach@2a01:c22:a8a7:a100:4d10:414a:ca48:6842) (Remote host closed the connection)
[10:57:15] *** Joins: jsbach (~jsbach@2a01:c22:a8a7:a100:c869:d0f9:35d2:8283)
[10:58:47] *** Joins: sord937 (~sord937@gateway/tor-sasl/sord937)
[10:59:17] *** Quits: the_lanetly_052 (~the_lanet@194.135.155.67) (Ping timeout: 240 seconds)
[10:59:57] *** Quits: zmt01 (~zmt00@user/zmt00) (Ping timeout: 240 seconds)
[11:00:03] *** Joins: clime (~clime@37-48-57-231.nat.epc.tmcz.cz)
[11:02:17] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[11:02:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[11:04:06] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[11:06:44] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[11:06:45] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[11:08:57] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 240 seconds)
[11:09:25] *** Quits: ic3blx_ (~ic3blx___@user/ic3blx/x-0942740) (Quit: Leaving)
[11:10:29] *** Quits: fengdaolong (~fengdaolo@58.48.84.75) (Ping timeout: 256 seconds)
[11:12:13] *** Joins: fengdaolong (~fengdaolo@58.48.84.75)
[11:16:53] *** Joins: Tobbi (~Tobbi@2a02:8108:1240:48ec:4bc:bc38:6fcd:3dae)
[11:23:03] *** Joins: Atque (~Atque@user/atque)
[11:23:37] *** Quits: ironman (~ironman@49.36.48.247) (Ping timeout: 240 seconds)
[11:28:47] *** Quits: teepee (~teepee@openscad/teepee) (Remote host closed the connection)
[11:29:06] *** Joins: teepee (~teepee@openscad/teepee)
[11:30:38] *** Joins: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl)
[11:33:56] *** Quits: fengdaolong (~fengdaolo@58.48.84.75) (Ping timeout: 256 seconds)
[11:34:47] *** Joins: Uswald (~leandre@37.35.6.200)
[11:34:47] *** Quits: Uswald (~leandre@37.35.6.200) (Changing host)
[11:34:47] *** Joins: Uswald (~leandre@user/Uswald)
[11:35:47] *** Joins: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl)
[11:35:52] *** Quits: Donno (~donno@58.84.206.182) (Quit: ZNC 1.7.2+deb3 - https://znc.in)
[11:38:00] *** Joins: Donno (~donno@58.84.206.182)
[11:42:16] *** Joins: ivii (~ivan@user/ivii)
[11:47:35] *** Joins: fengdaolong (~fengdaolo@58.48.84.75)
[11:48:50] *** Joins: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61)
[11:49:28] *** Joins: MatSharrow (~matthew@117.20.9.51.dyn.plus.net)
[11:51:16] *** Quits: Fairy (~Fairy@ti0004a400-0210.bb.online.no) (Ping timeout: 268 seconds)
[11:54:31] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 245 seconds)
[11:55:25] *** Quits: fengdaolong (~fengdaolo@58.48.84.75) (Read error: Connection reset by peer)
[11:56:19] *** Joins: chenqisu1 (~chenqisu1@183.217.200.249)
[11:56:20] *** Quits: paulo (paulo@user/paulo/x-9032687) (Quit: ZNC 1.8.2 - https://znc.in)
[11:56:39] *** Joins: paulo (paulo@user/paulo/x-9032687)
[11:59:55] *** Joins: fengdaolong (~fengdaolo@58.48.84.75)
[12:00:02] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[12:01:54] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[12:03:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[12:04:13] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Ping timeout: 268 seconds)
[12:04:13] *** Quits: blueminder_ (sid143388@id-143388.tinside.irccloud.com) (Ping timeout: 268 seconds)
[12:04:13] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (Ping timeout: 268 seconds)
[12:04:21] *** Joins: blueminder_ (sid143388@id-143388.tinside.irccloud.com)
[12:04:35] *** Joins: heiner1 (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2)
[12:04:43] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[12:04:50] *** Quits: heiner (~Thunderbi@2a00:6020:b006:a900:d250:99ff:fe34:8fd2) (Ping timeout: 268 seconds)
[12:05:10] *** Joins: VShell (~shell@user/shell)
[12:05:10] *** Quits: AliceMeows (~AliceMeow@user/alicemeows) (Read error: Connection reset by peer)
[12:05:28] *** Quits: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73) (Ping timeout: 268 seconds)
[12:05:28] *** Quits: kristjansson (sid126207@id-126207.tinside.irccloud.com) (Ping timeout: 268 seconds)
[12:05:44] *** Quits: MatSharrow (~matthew@117.20.9.51.dyn.plus.net) (Quit: Konversation terminated!)
[12:06:02] *** Joins: Nixx (~quassel@bulbasaur.sjorsgielen.nl)
[12:06:04] *** Quits: Rayke (rayke@user/rayke) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: oj_ (oj@user/oj) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: Nixx_ (~quassel@bulbasaur.sjorsgielen.nl) (Ping timeout: 268 seconds)
[12:06:04] *** Quits: Shell (~shell@user/shell) (Ping timeout: 268 seconds)
[12:06:05] *** Joins: oj (oj@user/oj)
[12:06:08] *** Joins: greyblue9 (sid500829@id-500829.ilkley.irccloud.com)
[12:06:15] *** Joins: Forsaken87 (~quassel@2a02:908:1866:e360:88b0:2032:220f:3f73)
[12:06:36] *** VShell is now known as Shell
[12:06:37] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 240 seconds)
[12:06:55] *** heiner1 is now known as heiner
[12:07:46] *** Joins: Rayke (rayke@user/rayke)
[12:07:59] *** Joins: kristjansson (sid126207@id-126207.tinside.irccloud.com)
[12:09:20] *** Joins: BtbN_ (btbn@ffmpeg/developer/btbn)
[12:09:25] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Ping timeout: 256 seconds)
[12:09:28] *** Joins: Fairy (~Fairy@2a02:2121:620:c8cb:bdca:3834:e3a2:8cd8)
[12:09:34] *** Joins: paulf (~paulf@lfbn-lyo-1-263-154.w2-7.abo.wanadoo.fr)
[12:09:59] *** Quits: ville (~ville@user/ville) (Ping timeout: 256 seconds)
[12:10:33] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Ping timeout: 256 seconds)
[12:10:33] *** BtbN_ is now known as BtbN
[12:11:03] *** Joins: ville (~ville@user/ville)
[12:12:58] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[12:14:19] *** Quits: lh_ideapad (~lh_mouse@mingw-w64/developer/lhmouse) (Remote host closed the connection)
[12:15:29] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[12:16:53] *** Quits: tk (~tk@ircpuzzles/staff/tk) (Quit: Well, this is unexpected.)
[12:17:17] *** Quits: Hobbyboy (Hobbyboy@hobbyboy.co.uk) (Quit: The BNC has broken!)
[12:18:29] *** Quits: fengdaolong (~fengdaolo@58.48.84.75) (Ping timeout: 256 seconds)
[12:19:10] *** Quits: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20) (Ping timeout: 260 seconds)
[12:20:15] *** Joins: fengdaolong (~fengdaolo@58.48.84.75)
[12:20:25] *** Joins: Starfoxxes (~Starfoxxe@2a02:8070:5390:d00:12bf:48ff:feb8:38c8)
[12:20:28] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[12:22:05] *** Joins: andreasbuhr (~quassel@p549db9a5.dip0.t-ipconnect.de)
[12:22:12] *** Quits: andreasbuhr (~quassel@p549db9a5.dip0.t-ipconnect.de) (Remote host closed the connection)
[12:23:05] *** Joins: andreasbuhr (~quassel@p549db9a5.dip0.t-ipconnect.de)
[12:23:07] *** Joins: AliceMeows (~AliceMeow@user/alicemeows)
[12:26:09] *** Joins: AmR (~AmREiSa@156.199.44.128)
[12:27:25] *** Joins: tk (~tk@ircpuzzles/staff/tk)
[12:29:29] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Ping timeout: 250 seconds)
[12:29:53] *** Joins: coc0nut (~coc0nut@user/coc0nut)
[12:36:56] *** Joins: neure (~TimoSuora@dzpyrwpkyyyyyyyyyyyyt-3.rev.dnainternet.fi)
[12:40:27] *** Joins: lxsameer (~lxsameer@user/lxsameer)
[12:44:25] *** Joins: Viewday115 (~Viewday@user/viewday)
[12:45:54] *** Quits: Viewday11 (~Viewday@user/viewday) (Ping timeout: 256 seconds)
[12:45:54] *** Viewday115 is now known as Viewday11
[12:46:53] *** Quits: fengdaolong (~fengdaolo@58.48.84.75) (Read error: Connection reset by peer)
[12:48:44] *** Quits: hinata (~hinata@2409:4042:2e90:d98d:cd49:3adf:ae59:90e0) (Remote host closed the connection)
[12:49:01] *** Joins: hinata (~hinata@2409:4042:2e90:d98d:8072:3287:a9cc:19fe)
[12:49:55] *** Joins: Markow (~Markow@176.122.215.103)
[12:51:42] *** Joins: fengdaolong (~fengdaolo@58.48.84.75)
[12:52:30] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:3992:cb3b:a718:c754)
[12:56:06] *** Quits: smallville7123 (~smallvill@cpe-172-193-72-46.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[12:56:48] *** Joins: Hobbyboy (Hobbyboy@hobbyboy.co.uk)
[12:57:39] *** Joins: rendar (~rendar@user/rendar)
[13:01:23] *** Quits: hinata (~hinata@2409:4042:2e90:d98d:8072:3287:a9cc:19fe) (Quit: Leaving)
[13:03:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[13:05:13] *** Quits: sa (sid1055@id-1055.tinside.irccloud.com) (Ping timeout: 250 seconds)
[13:06:14] *** Joins: sa (sid1055@id-1055.tinside.irccloud.com)
[13:07:11] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 250 seconds)
[13:07:23] *** Quits: amiti (sid373138@id-373138.lymington.irccloud.com) (Ping timeout: 252 seconds)
[13:07:56] *** Quits: greyblue9 (sid500829@id-500829.ilkley.irccloud.com) (Ping timeout: 252 seconds)
[13:08:10] *** Quits: celphi (sid97751@user/celphi) (Ping timeout: 260 seconds)
[13:08:30] *** Quits: ski (~ski@remote12.chalmers.se) (Ping timeout: 250 seconds)
[13:09:08] *** Joins: celphi (sid97751@user/celphi)
[13:09:19] *** Joins: ski (~ski@remote12.chalmers.se)
[13:09:31] *** Quits: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com) (Ping timeout: 245 seconds)
[13:09:54] *** Joins: greyblue9 (sid500829@id-500829.ilkley.irccloud.com)
[13:10:04] *** Joins: amiti (sid373138@id-373138.lymington.irccloud.com)
[13:10:16] *** Joins: LucaTM (~LucaTM@user/lucatm)
[13:11:36] *** Quits: buhman (sid411355@user/buhman) (Ping timeout: 245 seconds)
[13:12:02] *** Joins: Bodger1234_ (sid503511@id-503511.uxbridge.irccloud.com)
[13:13:32] *** Joins: buhman (sid411355@user/buhman)
[13:14:26] *** Joins: limubs (~limubs@cgn-89-0-49-98.nc.de)
[13:14:49] *** Quits: neure (~TimoSuora@dzpyrwpkyyyyyyyyyyyyt-3.rev.dnainternet.fi) (Quit: Leaving)
[13:15:49] *** Quits: Lazenca (Lazenca@user/lazenca) (Remote host closed the connection)
[13:16:03] *** Quits: Pent (sid313808@id-313808.lymington.irccloud.com) (Ping timeout: 250 seconds)
[13:16:11] *** Joins: plastico (~plastico@neomutt/plastico)
[13:17:01] *** Quits: drmeister (sid45147@id-45147.ilkley.irccloud.com) (Ping timeout: 245 seconds)
[13:17:10] *** Joins: drmeister (sid45147@id-45147.ilkley.irccloud.com)
[13:17:21] *** Quits: IUSR (sid348938@id-348938.hampstead.irccloud.com) (Ping timeout: 250 seconds)
[13:17:28] *** Joins: Nnnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com)
[13:18:10] *** Quits: Nnavd (~Nnavd@ec2-34-220-224-214.us-west-2.compute.amazonaws.com) (Read error: Connection reset by peer)
[13:18:43] *** Joins: IUSR (sid348938@id-348938.hampstead.irccloud.com)
[13:19:20] *** Joins: Pent (sid313808@id-313808.lymington.irccloud.com)
[13:21:23] *** Quits: fengdaolong (~fengdaolo@58.48.84.75) (Ping timeout: 256 seconds)
[13:23:02] *** Joins: fengdaolong (~fengdaolo@58.48.84.75)
[13:24:13] *** Joins: neure (~TimoSuora@dzpyrwpkyyyyyyyyyyyyt-3.rev.dnainternet.fi)
[13:24:42] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[13:24:46] *** Joins: pretty_dumm_guy (trottel@gateway/vpn/protonvpn/prettydummguy/x-88029655)
[13:33:14] *** Joins: millido (~millido@84.210.150.128)
[13:34:40] *** Joins: PJBoy (~PJBoy@user/pjboy)
[13:36:54] *** Quits: xkuru (~xkuru@user/xkuru) (Read error: Connection reset by peer)
[13:41:56] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[13:41:56] *** ChanServ sets mode: +v npaperbot
[13:45:58] *** Quits: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[13:58:50] *** Joins: hinata (~hinata@2409:4042:2e90:d98d:8072:3287:a9cc:19fe)
[14:04:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[14:05:03] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[14:06:52] *** Joins: marlboro (~i.am@user/marlboro)
[14:07:51] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[14:10:10] *** Joins: jdavfsxd (~rvgzuuqp@gateway/tor-sasl/rvgzuuqp)
[14:15:13] *** Quits: AmR (~AmREiSa@156.199.44.128) (Ping timeout: 256 seconds)
[14:15:18] *** Joins: the_lanetly_052 (~the_lanet@194.135.155.135)
[14:19:10] *** Joins: sh00p (~z@h-213-164-223-180.A498.priv.bahnhof.se)
[14:23:14] *** Quits: Atque (~Atque@user/atque) (Quit: ...)
[14:24:54] *** Joins: weltio (~weltio@80.90.153.177)
[14:28:18] *** Quits: galik (galik@gateway/vpn/airvpn/galik) (Quit: Leaving)
[14:28:28] *** Joins: crankslider (~slidercra@user/slidercrank)
[14:28:34] *** Joins: AmR (~AmREiSa@156.199.24.233)
[14:30:18] *** Quits: cation (cation@user/cation) (Quit: Leaving)
[14:32:42] *** Quits: cursey (~cursey@user/cursey) (Quit: bye)
[14:33:14] *** Quits: Markow (~Markow@176.122.215.103) (Quit: Linux 5.16.0-Pogorze-Karpackie-CUSTOM-KERNEL)
[14:34:42] *** Quits: fengdaolong (~fengdaolo@58.48.84.75) (Ping timeout: 256 seconds)
[14:35:11] *** Quits: AmR (~AmREiSa@156.199.24.233) (Remote host closed the connection)
[14:35:41] *** Joins: AmR (~AmREiSa@156.199.24.233)
[14:37:29] *** Joins: fengdaolong (~fengdaolo@58.48.84.75)
[14:39:41] *** Quits: AmR (~AmREiSa@156.199.24.233) (Remote host closed the connection)
[14:40:12] *** Joins: AmR (~AmREiSa@156.199.24.233)
[14:40:44] *** Quits: arch-angel (~arch-ange@2001:e68:5400:3444:f67f:24ed:5c4c:c6be) (Remote host closed the connection)
[14:45:42] *** Joins: cursey (~cursey@user/cursey)
[14:45:51] *** Joins: xrj (~av@2a01:4f8:c17:7cba::1)
[14:48:52] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[14:49:57] *** Joins: bobb_ (~bobb_@dslb-092-075-159-253.092.075.pools.vodafone-ip.de)
[14:52:08] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[14:54:56] *** Joins: sbrothy (~sbrothy@192038130232.mbb.telenor.dk)
[14:55:07] *** Joins: seninha (~seninha@user/seninha)
[15:04:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[15:08:29] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[15:09:48] *** Joins: frost (~frost@user/frost)
[15:10:06] *** Quits: AmR (~AmREiSa@156.199.24.233) (Remote host closed the connection)
[15:10:33] *** Joins: AmR (~AmREiSa@156.199.24.233)
[15:11:28] *** Joins: jerv (~jerv@2620:10d:c092:400::4:2748)
[15:15:59] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[15:16:50] *** Joins: rajkosto (~rajkosto@93-86-127-103.dynamic.isp.telekom.rs)
[15:21:46] *** Quits: AmR (~AmREiSa@156.199.24.233) (Remote host closed the connection)
[15:22:35] *** Joins: AmR (~AmREiSa@156.199.24.233)
[15:26:35] *** Quits: AmR (~AmREiSa@156.199.24.233) (Remote host closed the connection)
[15:27:08] *** Joins: AmR (~AmREiSa@156.199.24.233)
[15:30:35] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[15:31:41] *** Joins: kaph (~kaph@net-2-47-208-144.cust.vodafonedsl.it)
[15:37:02] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Ping timeout: 256 seconds)
[15:38:36] *** Joins: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[15:40:51] *** Joins: Zogatribe (Zogatribe@user/zogatribe)
[15:44:36] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[15:45:44] *** Quits: ironman (~ironman@2405:201:1010:b033:bad0:8910:44c9:da61) (Quit: Leaving)
[15:46:47] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[15:54:47] *** Quits: Carbonflux (~Carbonflu@c-66-235-54-179.sea.wa.customer.broadstripe.net) (Quit: When all you have are solutions, everything is a problem.)
[15:58:47] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[15:59:01] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[16:01:54] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[16:03:26] *** Joins: jplejacq (~jplejacq@24.224.90.176)
[16:03:37] *** Quits: Linux77 (~LinuMage@186.233.182.173) (Ping timeout: 240 seconds)
[16:04:40] *** Parts: AliceMeows (~AliceMeow@user/alicemeows) ()
[16:05:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[16:06:42] *** Joins: Linux77 (~LinuMage@186.233.182.173)
[16:07:29] *** Quits: samuelbernardo (~samuelber@nata01.lip.pt) (Quit: ZNC 1.8.2 - https://znc.in)
[16:08:29] *** Joins: pulse (~pulse@user/pulse)
[16:09:02] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[16:13:37] *** Joins: samuelbernardo (~samuelber@nata01.lip.pt)
[16:14:20] *** Joins: constxd (~brad@142.167.170.88)
[16:16:47] *** Quits: jerv (~jerv@2620:10d:c092:400::4:2748) (Quit: Client closed)
[16:19:52] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[16:21:44] *** Joins: proller (~p@2a02:6b8:0:40c:6dd8:f7e8:3ff6:e4db)
[16:26:15] *** Quits: millido (~millido@84.210.150.128) (Quit: ZNC 1.8.2 - https://znc.in)
[16:29:23] *** Quits: proller (~p@2a02:6b8:0:40c:6dd8:f7e8:3ff6:e4db) (Ping timeout: 268 seconds)
[16:30:56] *** Joins: proller (~p@2a02:6b8:0:40c:f97f:f38:fba3:4a05)
[16:32:34] *** Quits: JohnMS_WORK (~kvirc@89-64-70-205.dynamic.chello.pl) (Ping timeout: 256 seconds)
[16:34:39] *** Joins: Leone (~Leo@216.154.23.229)
[16:38:45] *** Joins: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au)
[16:39:36] *** Joins: millido (~millido@84.210.150.128)
[16:39:46] <CarloWood> Seriously?
[16:39:48] <CarloWood>  {}  struct MouseButtons { static constexpr int WheelUp = 3; static constexpr int WheelDown  = 4; static constexpr uint16_t as_mask(uint8_t button) { return uint16_t{1} << button; } static constexpr uint16_t wheelbits = as_mask(WheelUp) | as_mask(WheelDown); };
[16:39:49] <geordi> error: 'static constexpr uint16_t MouseButtons::as_mask(uint8_t)' called in a constant expression before its definition is complete
[16:40:17] *** Quits: smallville7123 (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Ping timeout: 256 seconds)
[16:40:32] *** Joins: JohnMS_WORK (~kvirc@185.73.229.242)
[16:40:42] *** Joins: bitmask (~bitmask@c-73-215-237-27.hsd1.nj.comcast.net)
[16:40:46] <PJBoy> yeah
[16:41:03] <PJBoy> structs aren't complete until the closing brace
[16:41:28] <CarloWood> Yeah, but even for a static constexpr function is just sad.
[16:41:34] <CarloWood> Makes no sense.
[16:43:38] <CarloWood> I suppose the reason to allow single-pass compilers and overloading.
[16:50:14] *** Joins: beagles1 (~beagles@142.162.188.116)
[16:50:22] *** Quits: beagles (~beagles@142.162.188.116) (Quit: Leaving...)
[16:50:25] *** Joins: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net)
[16:50:41] *** Quits: AmR (~AmREiSa@156.199.24.233) (Remote host closed the connection)
[16:51:06] *** beagles1 is now known as beagles
[16:51:07] *** Joins: AmR (~AmREiSa@156.199.24.233)
[16:52:10] *** Quits: beagles (~beagles@142.162.188.116) (Client Quit)
[16:52:32] *** Joins: beagles (~beagles@142.162.188.116)
[16:58:03] *** Joins: gentooclimax (~gentoocli@2a02-8440-6441-09f8-f134-3215-f19d-90b8.rev.sfr.net)
[17:02:04] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 268 seconds)
[17:04:06] *** Quits: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[17:05:19] *** Joins: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl)
[17:05:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[17:07:03] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[17:08:25] *** Quits: Dave_R (~Dave_R@home.amunra.co.uk) (Remote host closed the connection)
[17:08:30] *** Quits: chozorho (~chozorho@2601:146:300:c30::6737) (Ping timeout: 260 seconds)
[17:08:53] *** Joins: chozorho (~chozorho@2601:146:300:c30::6737)
[17:09:45] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[17:10:03] *** Joins: Dave_R (~Dave_R@home.amunra.co.uk)
[17:11:38] *** Quits: hinata (~hinata@2409:4042:2e90:d98d:8072:3287:a9cc:19fe) (Quit: Leaving)
[17:12:35] *** Quits: weltio (~weltio@80.90.153.177) (Ping timeout: 256 seconds)
[17:15:45] *** Quits: CatCow (~wtf_over@c-73-96-109-206.hsd1.or.comcast.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[17:16:35] *** Quits: sbrothy (~sbrothy@192038130232.mbb.telenor.dk) (Quit: leaving)
[17:18:57] *** Quits: chozorho (~chozorho@2601:146:300:c30::6737) (Ping timeout: 240 seconds)
[17:18:59] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[17:19:25] *** Joins: seninha (~seninha@user/seninha)
[17:20:09] *** Joins: chozorho (~chozorho@c-69-250-72-103.hsd1.md.comcast.net)
[17:25:39] *** Joins: temp_user_2022 (~amit@2601:445:447f:a2f6:bf9f:4c9f:d685:ef4c)
[17:26:44] *** Quits: gentooclimax (~gentoocli@2a02-8440-6441-09f8-f134-3215-f19d-90b8.rev.sfr.net) (Ping timeout: 268 seconds)
[17:26:51] *** Joins: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl)
[17:26:59] *** Quits: ElectronApps (~ElectronA@user/electronapps) (Remote host closed the connection)
[17:27:14] *** Joins: gentooclimax (~gentoocli@2a02-8440-6341-2749-cc31-9167-8944-7430.rev.sfr.net)
[17:28:16] *** Quits: Argorok (sid195487@id-195487.hampstead.irccloud.com) (Ping timeout: 245 seconds)
[17:30:27] *** Joins: Argorok (sid195487@id-195487.hampstead.irccloud.com)
[17:32:17] *** Quits: gentooclimax (~gentoocli@2a02-8440-6341-2749-cc31-9167-8944-7430.rev.sfr.net) (Ping timeout: 268 seconds)
[17:35:35] *** Joins: gentooclimax (~gentoocli@89.207.171.57)
[17:41:48] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[17:41:56] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[17:41:56] *** ChanServ sets mode: +v npaperbot
[17:42:18] *** Joins: TheSchaf (~TheSchaf@pd95f17ef.dip0.t-ipconnect.de)
[17:43:11] *** Quits: fengdaolong (~fengdaolo@58.48.84.75) (Ping timeout: 256 seconds)
[17:44:19] *** Joins: fengdaolong (~fengdaolo@58.48.84.75)
[17:45:27] *** Quits: gentooclimax (~gentoocli@89.207.171.57) (Ping timeout: 256 seconds)
[17:45:44] *** Quits: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[17:46:00] *** Joins: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl)
[17:47:56] *** Quits: chenqisu1 (~chenqisu1@183.217.200.249) (Ping timeout: 256 seconds)
[17:49:39] *** Joins: eelstrebor (~eelstrebo@198-178-29-136.scb.ne.static.allophone.net)
[17:52:38] *** Quits: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl) (Quit: WeeChat 3.4)
[17:52:49] *** Quits: bobb_ (~bobb_@dslb-092-075-159-253.092.075.pools.vodafone-ip.de) (Ping timeout: 256 seconds)
[17:52:54] *** Joins: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl)
[17:55:18] *** Quits: JohnMS_WORK (~kvirc@185.73.229.242) (Ping timeout: 256 seconds)
[17:58:46] *** Joins: cation (cation@user/cation)
[17:59:35] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[18:00:57] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[18:01:16] *** Joins: interop_madness (~interop_m@user/interop-madness/x-0950004)
[18:04:55] *** Joins: Tokamak (~Tokamak@172.58.191.35)
[18:05:00] *** Quits: leduyquang753 (~leduyquan@user/leduyquang753) (Quit: Lost terminal)
[18:06:04] *** Quits: fengdaolong (~fengdaolo@58.48.84.75) (Ping timeout: 256 seconds)
[18:06:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[18:07:43] *** Joins: fengdaolong (~fengdaolo@58.48.84.75)
[18:10:31] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 268 seconds)
[18:10:55] *** Quits: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net) (Remote host closed the connection)
[18:12:46] *** Quits: FreEm1nD (~FreEm1nD@mail.guarapari.store) (Quit: Leaving)
[18:13:26] *** Quits: fengdaolong (~fengdaolo@58.48.84.75) (Ping timeout: 256 seconds)
[18:20:08] *** Joins: RangerBobVA (~bmaddox@user/rangerbobva)
[18:20:42] *** Joins: gh34 (~textual@cpe-184-58-181-106.wi.res.rr.com)
[18:21:22] *** Quits: smallvil_ (~smallvill@cpe-172-193-200-97.qld.foxtel.net.au) (Remote host closed the connection)
[18:24:25] *** Joins: BobTheTomato (~paul@107-190-110-80.cpe.teksavvy.com)
[18:27:30] *** Quits: TheSchaf (~TheSchaf@pd95f17ef.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:27:41] *** Joins: TheSchaf3 (~TheSchaf@pd95f17ef.dip0.t-ipconnect.de)
[18:27:41] *** TheSchaf3 is now known as TheSchaf
[18:27:55] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:30:19] *** Quits: hiovoltage (~hiovoltag@78.186.68.182) (Quit: Client closed)
[18:33:54] *** Joins: great_taste (~great_tas@user/great-taste/x-5798414)
[18:33:57] *** Quits: limubs (~limubs@cgn-89-0-49-98.nc.de) (Ping timeout: 268 seconds)
[18:34:32] *** Quits: rvalue (~rvalue@user/rvalue) (Quit: ZNC - https://znc.in)
[18:35:50] *** Joins: rvalue (~rvalue@user/rvalue)
[18:36:31] *** Joins: weltio (~weltio@80.90.153.177)
[18:38:18] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:bcaa:50e0:8519:fbfe)
[18:38:18] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:bcaa:50e0:8519:fbfe) (Changing host)
[18:38:18] *** Joins: skapata (~Skapata@user/skapata)
[18:40:50] *** Quits: Dave_R (~Dave_R@home.amunra.co.uk) (Remote host closed the connection)
[18:40:57] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[18:41:15] *** Joins: Dave_R (~Dave_R@home.amunra.co.uk)
[18:41:37] *** Joins: CodeMouse92 (~CodeMouse@user/codemouse92)
[18:42:33] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[18:43:53] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Ping timeout: 250 seconds)
[18:46:41] *** Joins: vdamewood (~vdamewood@fedora/vdamewood)
[18:55:25] *** Joins: Hokedli (~lasliedv@gateway/tor-sasl/hokedli)
[18:57:19] *** Joins: dyeplexer (~dyeplexer@user/dyeplexer)
[19:06:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[19:10:13] *** Joins: Moosadee (~Moosadee@136.32.155.193)
[19:10:27] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[19:15:11] *** Joins: RabidToaster (~Thunderbi@bras-base-otwaon234vw-grc-12-50-100-212-202.dsl.bell.ca)
[19:16:30] *** Joins: myusername (~myusernam@user/myusername)
[19:17:06] *** Joins: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net)
[19:19:04] *** Joins: bebyx (~Thunderbi@user/bebyx)
[19:21:21] *** Joins: sa02irc (~mbax@155-079-043-212.ip-addr.inexio.net)
[19:21:46] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[19:28:24] *** Joins: leib (~leib@2405:201:900a:f03d:a871:2feb:e12d:4340)
[19:29:09] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[19:30:32] *** Quits: dld (~davidlowr@2601:197:600:1210:5064:96c:65f6:1d79) (Ping timeout: 240 seconds)
[19:30:48] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[19:31:37] *** Joins: dld (~davidlowr@2601:197:600:1210:9050:7c1d:b33c:2fa8)
[19:32:32] *** Quits: proller (~p@2a02:6b8:0:40c:f97f:f38:fba3:4a05) (Ping timeout: 268 seconds)
[19:33:26] *** Joins: teut (~teut@2401:4900:1c68:97ee:703c:16bf:ce4f:a96d)
[19:37:39] *** Quits: Enitin (Enitin@gateway/vpn/protonvpn/enitin) (Ping timeout: 256 seconds)
[19:42:24] *** Quits: sh00p (~z@h-213-164-223-180.A498.priv.bahnhof.se) (Ping timeout: 268 seconds)
[19:52:26] *** Quits: leib (~leib@2405:201:900a:f03d:a871:2feb:e12d:4340) (Quit: Leaving)
[19:54:32] *** Joins: gentooclimax (~gentoocli@81-64-65-213.rev.numericable.fr)
[19:58:29] *** Joins: sbrothy (~sbrothy@192038130232.mbb.telenor.dk)
[20:01:33] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Ping timeout: 276 seconds)
[20:02:47] *** Joins: coolchris (sid536654@id-536654.lymington.irccloud.com)
[20:02:47] <weltio> to get std::u32string byte size it is inteded to use str.size()*sizeof(str[0])?
[20:07:18] *** Joins: orthoplex64 (~crm@70.120.0.94)
[20:07:23] *** Joins: c4017w__ (~c4017@209.52.68.8)
[20:08:27] <Oxyd> Well that requires that str is not empty, otherwise str[0] is invalid. Why not just str.size() * sizeof(char32_t)?
[20:09:32] *** Quits: crm (~crm@70.120.0.94) (Ping timeout: 268 seconds)
[20:10:09] <CarloWood> I think it would work anyway.
[20:10:17] <T`aZ> sizeof won't trigger actual call to str[0] , so it's not UB iirc
[20:10:28] <CarloWood> sizeof() is compile time and will just return 4.
[20:10:45] <Oxyd> Oh yeah, I suppose the inside of sizeof is unevaluated context.
[20:11:05] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[20:13:25] <CarloWood> << std::u32string(U"Δx").size()
[20:13:26] <geordi> 2
[20:13:29] <CarloWood> hmm
[20:14:36] <CarloWood> I suppose that is correct, even though the Δ uses more than one byte - this stores each character as 32-bit values, so it just fits :P.
[20:15:17] <Oxyd> Yes, every char32_t uses more than one byte.
[20:15:19] <Alipha> is `str[0]` allowed to be a proxy object? because then sizeof(str[0]) would be bad
[20:15:48] <Alipha> << sizeof(v[0]); std::vector<bool> v{true};
[20:15:49] <geordi> 16
[20:16:13] <Alipha> << TYPE(v[0]); std::vector<bool> v{true};
[20:16:14] <geordi> prvalue _Bit_reference
[20:17:00] *** Joins: zmt00 (~zmt00@user/zmt00)
[20:20:05] *** Quits: JakeSays (~jake@c-67-182-197-230.hsd1.ut.comcast.net) (Ping timeout: 250 seconds)
[20:20:09] *** Joins: JakeSays_ (~jake@c-67-182-197-230.hsd1.ut.comcast.net)
[20:25:31] <PJBoy> if C++20, span can help you out
[20:26:10] <PJBoy> << span(s).size_bytes(); u32string s(U"Δx");
[20:26:11] <geordi> 8
[20:26:53] <PJBoy> and it correctly doesn't work on vector<bool>
[20:26:57] <PJBoy> because fuck vector<bool>
[20:28:10] *** Quits: marlboro (~i.am@user/marlboro) (Remote host closed the connection)
[20:28:23] *** Joins: marlboro (~i.am@177.96.143.233)
[20:28:23] *** Quits: marlboro (~i.am@177.96.143.233) (Changing host)
[20:28:23] *** Joins: marlboro (~i.am@user/marlboro)
[20:29:40] <Zogatribe> was vector<bool> a stroustrup brainfart?
[20:30:04] <PJBoy> stepanov maybe
[20:32:27] *** Joins: varioust (~varioust@gateway/tor-sasl/varioust)
[20:36:57] *** Joins: Enitin (Enitin@gateway/vpn/protonvpn/enitin)
[20:38:37] <kalven> yes, whoever it was
[20:40:12] *** Quits: Uswald (~leandre@user/Uswald) (Ping timeout: 256 seconds)
[20:41:36] *** Quits: weltio (~weltio@80.90.153.177) (Ping timeout: 268 seconds)
[20:42:28] *** Quits: the_lanetly_052 (~the_lanet@194.135.155.135) (Ping timeout: 256 seconds)
[20:46:14] *** Quits: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net) (Remote host closed the connection)
[20:47:45] *** Joins: mattallmill (~mattallmi@ip68-103-130-85.ks.ok.cox.net)
[20:57:20] *** Joins: drei (~drei@pool-72-89-86-28.nycmny.fios.verizon.net)
[21:00:53] *** Joins: varioust_ (~varioust@gateway/tor-sasl/varioust)
[21:02:16] *** Quits: russruss (~russruss@my.russellmcc.com) (Quit: The Lounge - https://thelounge.chat)
[21:02:27] *** Quits: varioust (~varioust@gateway/tor-sasl/varioust) (Remote host closed the connection)
[21:02:53] <Eelis> { string s = "lol"; s + "bla"; } // it's 2022, isn't it time we can have compilers warn about this?
[21:02:54] <geordi>  
[21:03:11] <Eelis> (the warning should be: warning: statement has no effect)
[21:03:31] <kalven> I guess that operator+ should get a nodiscard
[21:03:39] *** Quits: interop_madness (~interop_m@user/interop-madness/x-0950004) (Quit: Leaving)
[21:03:59] <Eelis> yeah makes sense
[21:04:06] *** Joins: russruss (~russruss@my.russellmcc.com)
[21:04:26] *** Joins: shailangsa (~shailangs@host86-185-98-37.range86-185.btcentralplus.com)
[21:04:48] <Alipha> seems that any function/operator which takes only const/value parameters and returns a value should warn if you discard the return value
[21:05:08] *** Quits: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net) (Ping timeout: 256 seconds)
[21:07:06] *** Joins: ouestbillie (~gallup@192-222-138-215.qc.cable.ebox.net)
[21:07:21] *** Joins: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b)
[21:07:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[21:09:05] *** Joins: robert_ (~robert_@47.203.169.95)
[21:09:47] <ville> side effects
[21:11:03] <Alipha> yeah. i'm wondering how many false positives that would produce. though, in general, _anytime_ a function returns a value, you should be checking it.
[21:11:43] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[21:12:02] <Eelis> unless it returns an error code and you don't care whether it succeeded
[21:12:51] *** Quits: robert_ (~robert_@47.203.169.95) (Read error: Connection reset by peer)
[21:13:28] <Eelis> for example, technically, std::close can indicate an I/O error, but in practice, programs treat closing files as "best effort" and don't try re-closing files in case of I/O errors
[21:14:19] <Alipha> c++ is once again victim of the wrong default. we should have [[discard]] instead of [[nodiscard]]
[21:14:55] <PJBoy> man even clang-tidy doesn't warn on that unused result
[21:16:30] <zen_coder> when I create an object like this: "MyObj foo;" does it mean it will be created on the stack?
[21:16:43] <Eelis> zen_coder: depends on where you put that declaration
[21:17:05] <Alipha> zen_coder: inside a function, yes, it will have automatic storage duration ("be put on the stack")
[21:17:36] *** Quits: ckdCreations (~ckdCreati@c-73-140-151-116.hsd1.wa.comcast.net) (Ping timeout: 256 seconds)
[21:18:30] *** Joins: ckdCreations (~ckdCreati@147.55.133.140)
[21:18:54] <zen_coder> you mean a free function?
[21:19:00] <Eelis> any function
[21:19:11] <zen_coder> what about a ctor of another object which was created via "new"?
[21:19:19] <Eelis> still automatic storage duration
[21:19:41] <Alipha> at global or namespace scope, it will have static storage duration and exist for the lifetime of the program. if it's a member variable, then it will have the same storage duration as the object which contains it
[21:19:54] <zen_coder> so automatic storage creation means it will be created on the stack, with its limitation regarding stack size, right?
[21:20:04] <Eelis> right
[21:23:41] *** Quits: RangerBobVA (~bmaddox@user/rangerbobva) (Quit: Leaving)
[21:24:35] <Alipha> zen_coder: https://wandbox.org/permlink/XXTvBX9BDiknILTB
[21:27:54] *** Joins: Nick89 (~Good666@120.229.65.173)
[21:27:55] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:34:18] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[21:35:50] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:36:14] *** Quits: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net) (Client Quit)
[21:36:55] *** Joins: Xardas (~Xardas@149.233.51.127)
[21:37:43] *** Quits: MajorBiscuit (~MajorBisc@c-001-028-049.client.tudelft.eduvpn.nl) (Ping timeout: 268 seconds)
[21:37:44] *** Quits: rajkosto (~rajkosto@93-86-127-103.dynamic.isp.telekom.rs) (Read error: Connection reset by peer)
[21:37:45] *** Quits: Nick89 (~Good666@120.229.65.173) (Remote host closed the connection)
[21:37:49] *** Joins: ___nick___ (~quassel@cpc68286-cdif17-2-0-cust533.5-1.cable.virginm.net)
[21:38:04] <Xardas> Since we cannot change a reference, once it's initialized to an object. That means a reference by itself has a top-level const.
[21:38:07] <Xardas> Am I wrong ?
[21:39:29] <Alipha> Xardas: effectively, yes. note that `int & const x = foo;` is not valid.
[21:39:46] *** Joins: weltio (~weltio@80.90.153.177)
[21:39:50] *** Quits: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070) (Ping timeout: 250 seconds)
[21:39:54] <Alipha> { int foo = 3; int & const x = foo; }
[21:39:55] <geordi> error: 'const' qualifiers cannot be applied to 'int&'
[21:40:21] <Xardas> So const in a reference can only be low level
[21:40:36] <Xardas> and by implication is also top level
[21:41:11] <Xardas> I mean If I do this
[21:41:12] <Xardas> int i = 0;
[21:41:18] <Xardas> const int &ref = i;
[21:41:31] <Xardas> that mean I have a top-level and low-level const here
[21:41:45] *** Quits: lxsameer (~lxsameer@user/lxsameer) (Ping timeout: 256 seconds)
[21:41:47] <Xardas> but the top-level once is implicit
[21:41:48] *** Quits: npaperbot (~npaperbot@dodecahedron.m-ou.se) (Remote host closed the connection)
[21:41:56] *** Joins: npaperbot (~npaperbot@dodecahedron.m-ou.se)
[21:41:56] *** ChanServ sets mode: +v npaperbot
[21:42:20] <Xardas> Am I wrong ?
[21:42:41] *** Quits: txtsd (~txtsd@user/txtsd) (Quit: WeeChat 3.4)
[21:42:51] <Xardas> Alipha thanks for your answer
[21:43:45] <Alipha> Xardas: i think you'll confuse many people by saying a reference is "top-level const" because the const keyword does not appear.
[21:44:47] <Xardas> Well, it's not an object. So yeah you're right. I'm confusing people a bit
[21:45:07] <Xardas> But that's how I like to remember it
[21:45:22] <Xardas> so I won't forget it later on
[21:45:26] <Alipha> the term "top-level const" just doesn't really make sense with references, and so should probably just be avoided. since a reference cannot be const, someone might think you mean "const int &ref = i;" is "top-level const" because it's the highest level that the const keyword can be applied to
[21:46:23] <Xardas> Yes, absolutly.
[21:46:27] <Xardas> sorry for that.
[21:46:31] *** Joins: magla (~gelignite@55d4be51.access.ecotel.net)
[21:46:57] <Xardas> I'm just new to cpp, trying to learn stuff
[21:48:44] <Alipha> << std::is_const_v<const int &>;
[21:48:45] <geordi> false
[21:51:23] *** Quits: teut (~teut@2401:4900:1c68:97ee:703c:16bf:ce4f:a96d) (Quit: Client closed)
[21:53:32] *** Joins: cosimone (~user@2001:b07:ae5:db26:c24a:d20:4d91:1e20)
[21:54:21] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:8181:21e:c7e4:e748)
[21:54:21] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:8181:21e:c7e4:e748) (Changing host)
[21:54:21] *** Joins: skapata (~Skapata@user/skapata)
[21:56:31] <renopt> << std::is_const_v<const int> ;
[21:56:31] <geordi> true
[21:56:37] *** Quits: zen_coder (~zen_coder@2a02:8109:a280:2d8d:3992:cb3b:a718:c754) (Ping timeout: 240 seconds)
[21:58:39] *** Quits: dyeplexer (~dyeplexer@user/dyeplexer) (Remote host closed the connection)
[22:00:15] *** Joins: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it)
[22:01:01] *** Quits: Moosadee (~Moosadee@136.32.155.193) (Ping timeout: 256 seconds)
[22:03:22] *** Joins: sigma_ (~sigma@86.57.79.161)
[22:03:54] *** Quits: myusername (~myusernam@user/myusername) (Quit: Leaving)
[22:07:47] *** Quits: Xardas (~Xardas@149.233.51.127) (Quit: Client closed)
[22:08:24] *** Joins: c4017w__ (~c4017@209.52.68.8)
[22:09:16] *** Quits: AmR (~AmREiSa@156.199.24.233) (Remote host closed the connection)
[22:09:42] *** Joins: AmR (~AmREiSa@156.199.24.233)
[22:11:22] <ville> Eelis: which is always fun when you don't necessarily get an error from an earlier write() until you call close()
[22:11:47] *** Quits: c4017w_ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[22:13:43] *** Quits: andreasbuhr (~quassel@p549db9a5.dip0.t-ipconnect.de) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[22:19:05] *** Joins: phrosty (~phrosty@c-73-225-175-19.hsd1.wa.comcast.net)
[22:19:19] *** Joins: FreEm1nD (~FreEm1nD@mail.guarapari.store)
[22:19:44] *** Joins: Atque (~Atque@user/atque)
[22:21:14] *** Joins: xkuru (~xkuru@user/xkuru)
[22:21:14] *** Quits: adder`` (~adder@user/adder) (Read error: Connection reset by peer)
[22:21:36] <Eelis> that's because you have to interpret a successful write as just "the data was added to the outgoing buffer". if you want actual flushes, you need fsync
[22:21:51] *** Joins: adder`` (~adder@user/adder)
[22:22:09] <Eelis> this will become more obvious when we get a proper async file I/O api
[22:24:15] *** Quits: crankslider (~slidercra@user/slidercrank) (Ping timeout: 256 seconds)
[22:29:43] *** Quits: bebyx (~Thunderbi@user/bebyx) (Quit: bebyx)
[22:31:35] *** Joins: bebyx (~Thunderbi@user/bebyx)
[22:31:38] *** Quits: varioust_ (~varioust@gateway/tor-sasl/varioust) (Remote host closed the connection)
[22:32:08] *** Joins: varioust_ (~varioust@gateway/tor-sasl/varioust)
[22:37:39] <imMute> Eelis: do you think it's going to be io_uring?  Or something like AIO?
[22:39:40] *** Joins: peoliye (~peoliye@54-240-198-32.amazon.com)
[22:39:49] *** Joins: AbleBacon (~AbleBacon@user/AbleBacon)
[22:40:38] *** Quits: neure (~TimoSuora@dzpyrwpkyyyyyyyyyyyyt-3.rev.dnainternet.fi) (Quit: Leaving)
[22:41:32] *** Quits: TheSchaf (~TheSchaf@pd95f17ef.dip0.t-ipconnect.de) ()
[22:44:04] *** Quits: GreenResponse (~tomek@r-45-155-148-237.gpon.bialnet.pl) (Quit: Leaving)
[22:44:45] *** Quits: Telvana (~capo@user/telvana) (Quit: ZNC 1.9.x-git-170-9be0cae1 - https://znc.in)
[22:49:36] *** Joins: proller (~p@2a02:6b8:0:40c:268:47cd:66a6:ce88)
[22:50:32] *** Quits: JakeSays_ (~jake@c-67-182-197-230.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[22:52:01] *** Quits: clime (~clime@37-48-57-231.nat.epc.tmcz.cz) (Ping timeout: 256 seconds)
[22:53:56] *** Joins: Syroth (~Syroth@pool-96-244-212-50.bltmmd.fios.verizon.net)
[22:54:46] *** Joins: zen_coder (~zen_coder@2a02:8109:a280:2d8d:246f:2937:1ec0:9b42)
[23:02:54] *** Joins: Dizidentu (~aresg@modemcable151.154-19-135.mc.videotron.ca)
[23:03:49] *** Joins: JakeSays (~jake@c-67-182-197-230.hsd1.ut.comcast.net)
[23:05:29] <ville> it's not going to be any platform specific thing
[23:05:30] *** Bitflux is now known as Byteflux
[23:08:29] *** Quits: AmR (~AmREiSa@156.199.24.233) (Remote host closed the connection)
[23:08:52] *** Joins: c4017w_ (~c4017@209.52.68.8)
[23:08:56] *** Joins: AmR (~AmREiSa@156.199.24.233)
[23:09:24] <ville> riht now there is a consideration between the asio and sender/receiver models in the committee. perhaps when one wins out it'll be used for file async as well
[23:11:15] *** Joins: neshpion (~neshpion@gateway/tor-sasl/neshpion)
[23:12:38] *** Quits: c4017w__ (~c4017@209.52.68.8) (Ping timeout: 256 seconds)
[23:12:43] *** Quits: rgrinberg (~textual@2806:101e:7:6bed:b45f:204a:668d:262b) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:14:04] *** Joins: spaceangel (~spaceange@ip-78-102-216-202.net.upcbroadband.cz)
[23:16:55] *** Joins: KAHR-Alpha_ (~Alpha@2a01cb0d024a6600fd9034974568f5e8.ipv6.abo.wanadoo.fr)
[23:17:44] <imMute> ville: ah good point.
[23:18:13] <imMute> I like ASIO, at least as an execution engine.  I feel like async/await would pair with it nicely
[23:19:10] <kalven> https://www.boost.org/doc/libs/1_78_0/doc/html/boost_asio/overview/core/cpp20_coroutines.html
[23:20:58] *** Quits: AmR (~AmREiSa@156.199.24.233) (Remote host closed the connection)
[23:21:27] *** Joins: AmR (~AmREiSa@156.199.24.233)
[23:22:03] <imMute> awww yeah.
[23:22:30] <Eelis> chris kohlhoff already has a branch with preliminary io_uring support for asio https://github.com/chriskohlhoff/asio/issues/401#issuecomment-902613423
[23:25:27] *** Quits: AmR (~AmREiSa@156.199.24.233) (Remote host closed the connection)
[23:25:56] *** Joins: AmR (~AmREiSa@156.199.24.233)
[23:27:27] *** Quits: varioust_ (~varioust@gateway/tor-sasl/varioust) (Remote host closed the connection)
[23:27:58] *** Joins: varioust_ (~varioust@gateway/tor-sasl/varioust)
[23:29:59] *** Quits: AmR (~AmREiSa@156.199.24.233) (Remote host closed the connection)
[23:30:30] *** Joins: AmR (~AmREiSa@156.199.24.233)
[23:33:12] *** Quits: AmR (~AmREiSa@156.199.24.233) (Client Quit)
[23:33:36] *** Quits: Hokedli (~lasliedv@gateway/tor-sasl/hokedli) (Quit: Konversation terminated!)
[23:35:25] *** Quits: marlboro (~i.am@user/marlboro) (Quit: a pentium 100 "running" windows 11 trying to play Last of Us II at ps4emu... that's my brain trying understand 0->R->R->R/2R->0)
[23:38:55] *** Joins: vicfred (~vicfred@user/vicfred)
[23:41:01] *** Joins: clime (~clime@37-48-57-231.nat.epc.tmcz.cz)
[23:42:32] *** Quits: blackout69 (~blackout6@net-109-117-245-237.cust.vodafonedsl.it) (Quit: Leaving.)
[23:42:56] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[23:43:36] *** Joins: MatSharrow (~matthew@117.20.9.51.dyn.plus.net)
[23:43:56] *** Joins: Telvana (~capo@user/telvana)
[23:49:05] *** Joins: jehelset (~jeh@2001:4644:4144:0:e2d4:e8ff:fedf:f070)
[23:53:12] *** Joins: Markow (~Markow@176.122.215.103)
[23:54:00] *** Quits: proller (~p@2a02:6b8:0:40c:268:47cd:66a6:ce88) (Ping timeout: 268 seconds)
