[00:07:23] *** Joins: karlosz (~karlosz@47.151.136.69)
[00:08:38] *** Quits: biog (~user1@static.39.160.132.142.clients.your-server.de) (Quit: ZZZzzz…)
[00:21:55] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 256 seconds)
[00:24:07] <Spawns> amazigh: not right now. i didn't know there were existing test suites
[00:24:12] <Spawns> but that would be super helpful
[00:24:19] *** Joins: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt)
[00:25:41] <amazigh> There is not official test suite. Most implementations scrape chibi scheme tests.
[00:26:36] <amazigh> I guess I will do the same
[00:27:06] <amazigh> Maybe we can share the test suite this time, the problem with chibi test suite as-is
[00:27:36] <amazigh> wait a sec.
[00:28:19] <amazigh> see https://github.com/ashinn/chibi-scheme/tree/master/tests r5rs.scm and r7rs.scm
[00:28:25] <amazigh> both requires macro to be able to run
[00:28:39] <amazigh> I mean r5rs-tests.scm and r7rs-tests.scm
[00:29:43] <amazigh> what I need a test suite made a small programs, with expected error code, and expected output
[00:29:48] <Spawns> right now I have an "assert" function that calls rust's panic! macro when its argument is nil
[00:29:49] <Oxyd> You will have to comment out everything you haven't implemented, which can be a bit annoying.
[00:31:42] <Spawns> I am still not sure whether I should try to implement a scheme or just a totally custom lisp dialect 
[00:32:16] <Spawns> a little custom lisp would be cool, but then you don't get to run code from libs
[00:32:43] <amazigh> libs? what libs?
[00:32:55] <Spawns> any scheme libraries for various purposes
[00:33:28] <Spawns> like if there is a portable scheme library for, regex I guess
[00:33:42] <Oxyd> A lot of Scheme code is implementation-specific anyway. Or full of cond-expand to make it implementation-specific for several implementations.
[00:35:13] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[00:39:44] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 250 seconds)
[00:49:26] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[00:51:41] *** Joins: rgherdt (~rgherdt@2a02:8109:86c0:d8d:64a1:44d0:686a:3280)
[00:54:01] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[01:02:02] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[01:03:10] *** Joins: karlosz (~karlosz@47.151.136.69)
[01:04:35] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[01:05:51] <Spawns> what happens when you do something like (set! (car list) 1)
[01:06:00] <Spawns> it doesn't seem to mutate the list
[01:06:19] <Spawns> is that unspecified behaviour?
[01:06:55] <Spawns> oh nevermind, it does mutate it
[01:10:01] <Oxyd> That's not valid code at all. At least not R7RS.
[01:17:23] <Spawns> (set! (cadr x) 2) isn't valid?
[01:17:42] <Oxyd> No.
[01:17:49] <Oxyd> (cadr x) is not an identifier.
[01:17:57] <Spawns> it runs fine in chicken scheme for some reason
[01:18:20] <Spawns> maybe because chicken scheme is not r7rs?
[01:18:32] *** Quits: livoreno (~livoreno@user/notzmv) (Ping timeout: 240 seconds)
[01:18:38] <Oxyd> It is an error, so implementations are allowed to do whatever they want. Including giving it their own semantics.
[01:19:09] <Spawns> so the argument to set! always need to be an identifier 
[01:19:21] <Spawns> which is normally like "x" or "var"
[01:19:47] <Oxyd> Yes. If you want to set the car of a pair, use set-car!.
[01:21:11] <gwatt> dpk: RE: valid returns from syntax transformers. I think it's best left unspecified, outside of specific data. Numeric, string, and boolean literals should probably be explicitly allowed. Anything else should be an implementation detail.
[01:23:27] <dpk> i think the semantics for any value you can actually type as a Scheme expression are obvious. less obvious are what the compiler does when there are values in the syntax tree which are outside that
[01:23:44] <dpk> records are an important example
[01:23:49] <Spawns> how do you set the nth car of a list?
[01:23:59] <dpk> list-set!
[01:24:28] <Spawns> i am confusing common lisp and scheme a little bit since i'm not super familiar with the differences 
[01:25:14] <Spawns> thats actually great news though. that simplifies my interpreter quite a lot
[01:25:35] <dpk> note Guile doesn’t let you put records in the output of a macro even if they’re inside a (quote …)
[01:25:50] <dpk> which is a significant limitation on the power of macros
[01:25:50] *** Joins: livoreno (~livoreno@user/notzmv)
[01:26:23] <tokie> amazigh: i do not yet
[01:26:51] <Spawns> how do you set the nth cdr of a list?
[01:27:48] <tokie> amazigh: i write these as i go, but i'll write external tests eventually: https://github.com/strtok/marwood/blob/master/marwood/src/lib.rs#L277
[01:28:12] <tokie> also, i'm implementing r5rs, so presumably that's a very small subset of what the chibi tests would do :p 
[01:28:14] <dpk> Spawns: *crickets*
[01:28:40] <Spawns> i guess set-cdr! (list-tail list n)?
[01:28:45] <Spawns> or is that invalid
[01:29:34] <gwatt> dpk: I'm just saying that nothing should be mandated. I know chez for example uses several record-types for syntax-transformers (identifier-syntax, constants) as well as for syntax-objects themselves.
[01:29:38] *** Joins: gproto23 (~gproto23@user/gproto23)
[01:29:45] <gwatt> I suspect others do as well
[01:29:57] <tokie> oh, i see. there's r5rs.scm
[01:29:58] <tokie> that sounds useful
[01:30:03] <dpk> SRFI 1 drop plus set-cdr! maybe
[01:43:46] <Spawns> tokie: how do you store your objects in your VM? I am curious if you ran into borrowck issues or lifetime issues
[01:44:39] <Spawns> i ended up putting all of my objects into a slotmap data struct. so my stack and other object storage areas store keys instead of the actual object. the key acts as a "weak reference
[01:45:09] <amazigh> do you think this is correct: (test 'a (append '() 'a))
[01:45:11] <amazigh> ?
[01:45:35] <amazigh> chez says yes
[01:46:25] <Oxyd> That's one of the examples R7RS has for append.
[01:46:55] <amazigh> ok
[01:58:41] <tokie> Spawns: yeah, i do similar for the stack/heap
[01:58:46] <tokie> and environments
[01:59:06] <tokie> and then i wrote a garbage collector
[02:03:22] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 250 seconds)
[02:07:16] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 250 seconds)
[02:16:02] <amazigh> I started a test suite based on chibi r5rs tests at https://github.com/scheme-live/tests-suites
[02:16:15] <amazigh> I will add tomorrow a test runner for chibi to check that i did no mistake
[02:16:25] <amazigh> I left aside everything related to macros
[02:17:51] <tokie> do any of the tests rely on eachother?
[02:17:58] <tokie> i saw some a define before a test
[02:25:49] <amazigh> no the tests are standalone
[02:26:00] <amazigh> tokie: what test looks buggy?
[02:26:30] <tokie> amazigh: not yours, i just thought when i was looking at the chibi ones that there was a test or two that had a top level (define) preceding it
[02:26:40] <amazigh> yes
[02:26:46] <amazigh> I changed or dropped those
[02:26:51] <tokie> ahh okay
[02:29:32] *** Quits: rgherdt (~rgherdt@2a02:8109:86c0:d8d:64a1:44d0:686a:3280) (Ping timeout: 240 seconds)
[02:44:52] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[02:51:28] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 250 seconds)
[03:01:37] *** Quits: klovett (~klovett@166.205.90.163) (Ping timeout: 240 seconds)
[03:07:25] *** Quits: civodul (~user@guix/contributor/civodul) (Remote host closed the connection)
[03:08:02] *** Joins: ZombieChicken (~weechat@user/zombiechicken)
[03:22:40] *** Quits: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt) (Ping timeout: 250 seconds)
[03:27:18] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[03:27:33] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[04:08:35] *** Quits: Everything (~Everythin@37.115.210.35) (Quit: leaving)
[04:20:21] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[04:32:27] *** Joins: szkl (uid110435@id-110435.uxbridge.irccloud.com)
[04:32:32] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[04:33:04] *** Joins: klovett (~klovett@166.205.90.163)
[04:37:35] *** Joins: s-liao (~s-liao@101.86.96.21)
[04:42:59] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[04:44:50] *** Joins: lola (~lola@201.191.74.35)
[04:46:03] *** Joins: s-liao (~s-liao@101.86.96.21)
[04:46:20] *** Quits: lola (~lola@201.191.74.35) (Remote host closed the connection)
[04:53:31] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[04:59:41] <Spawns> tokie: are you going to implement most/all of your primitive functions (add, car, set-car, equal?, etc) as specialized opcodes?
[05:00:33] <tokie> Spawns: that's complicated. right now they're all inlined, but i intend to letting them be shadowable which means they need to all be behind real procedure calls
[05:00:57] <Spawns> thats pretty cool
[05:01:16] <Spawns> i'm going to borrow some ideas from your project if that's okay ;)
[05:01:20] <ZombieChicken> What is this? A custom scheme implementation?
[05:01:23] <tokie> and that's particularly ugh for something like + where it takes a vararg, but you really don't want to put a list on the heap. 
[05:01:34] <tokie> Spawns: sure!
[05:01:46] <tokie> ZombieChicken: Spawns and i are both implementing our own schemes in rust
[05:01:52] <ZombieChicken> Ah, ok
[05:01:58] <tokie> i think amazigh is also implementing a scheme?
[05:02:00] <tokie> so much scheme impl
[05:17:22] <Spawns> i am at the point where I want to implement macros, so I can start using the language in a semi useful way. right now I support define, set, lambda, if and fn calls, which is technically enough to make just about any program, but I want macros so I can have (let) and stuff
[05:18:04] *** Joins: seninha (~seninha@user/seninha)
[05:18:35] <Spawns> do you have any general game plan on how to tackle macros for your scheme tokie ?
[05:26:34] <tokie> nope. 
[05:26:50] <tokie> i also plan on writing an optimizer pass for the generated byte code and i haven't done that yet either
[05:26:58] <tokie> i figure macros is just as pre-compilation transform
[05:27:52] *** Joins: karlosz (~karlosz@47.151.136.69)
[05:28:40] <gwatt> yeah, one of the complications is that macros can expand into other macro definitions. You'll need to handle stuff like that.
[05:29:32] *** Quits: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net) (Ping timeout: 240 seconds)
[05:33:27] <Spawns> my main confusion is that macros can call functions that have been defined before, or access global bindings and stuff, so the compiler will need to be able to access the interpreter to expand macros 
[05:33:39] <Spawns> that shouldn't be that hard though really
[05:34:56] <gwatt> That too, unless you go with a strictly syntax-rules system.
[05:35:13] <tokie> i think a lot of people end up not fully implementing macros, yeah
[05:36:24] <gwatt> You can also ignore hygiene, which will be simpler to do
[05:53:59] *** Quits: seninha (~seninha@user/seninha) (Quit: Leaving)
[05:55:23] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[05:58:43] *** Joins: cchristiansen (~user@n122-106-221-66.sbr1.nsw.optusnet.com.au)
[06:37:16] *** Joins: karlosz (~karlosz@47.151.136.69)
[06:40:16] *** Quits: karlosz (~karlosz@47.151.136.69) (Client Quit)
[06:42:56] *** Quits: klovett (~klovett@166.205.90.163) (Quit: ZZZzzz…)
[06:50:39] *** Joins: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt)
[06:58:37] *** Joins: klovett (~klovett@166.205.90.163)
[07:05:02] *** Quits: skapata (~Skapata@user/skapata) (Ping timeout: 240 seconds)
[07:06:54] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:07:54] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[07:16:50] *** Joins: karlosz (~karlosz@47.151.136.69)
[07:22:24] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[07:24:15] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 256 seconds)
[07:24:24] *** Quits: mzan (~quassel@mail.asterisell.com) (Quit: https://quassel-irc.org - Chat comfortably. Anywhere.)
[07:25:31] *** Joins: mzan (~quassel@mail.asterisell.com)
[07:39:33] *** Quits: karlosz (~karlosz@47.151.136.69) (Quit: karlosz)
[07:46:23] *** Joins: frost (~frost@user/frost)
[07:47:15] *** Joins: s-liao (~s-liao@101.86.96.21)
[07:49:15] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:506e:821:1232:2e80)
[07:49:15] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:506e:821:1232:2e80) (Changing host)
[07:49:15] *** Joins: skapata (~Skapata@user/skapata)
[07:57:02] <Spawns> i planned on ignoring hygiene at first gwatt 
[07:57:28] <Spawns> otherwise it will be a little too difficult
[08:14:32] <Spawns> the idea of set-car! is that it mutates the conses inplace right?
[08:14:47] <Spawns> i'm going to have to rework some stuff in my VM to support that
[08:21:28] *** Quits: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:26:55] *** Quits: frost (~frost@user/frost) (Quit: Connection closed)
[08:40:46] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[08:41:53] *** Quits: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net) (Ping timeout: 256 seconds)
[09:08:17] *** Quits: daviid (~user@179.210.52.91) (Ping timeout: 240 seconds)
[09:17:02] *** Joins: daviid (~user@179.210.52.91)
[09:45:51] <sham1> set-car! and set-cdr! indeed are side-effectful and thus they do change the pair given as an argumentr
[09:59:16] *** Joins: Doraemon (~NeoCron@p200300c4cf146c0091a78f8614b30205.dip0.t-ipconnect.de)
[10:01:46] *** Quits: NeoCron (~NeoCron@p200300c4cf4baa00766f97a7a0c56948.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[10:03:19] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[10:31:34] *** Quits: livoreno (~livoreno@user/notzmv) (Read error: Connection reset by peer)
[10:35:00] *** Joins: s-liao (~s-liao@101.86.96.21)
[11:01:14] <amazigh> tokie: I have a prototype compiler that targets javascript and wasm hosted on top of Chez
[11:07:02] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 240 seconds)
[11:07:06] *** Quits: taylan (~taylan@user/taylan) (Quit: Leaving)
[11:13:29] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[11:18:01] *** Joins: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475)
[11:18:34] <amazigh> I am eyeing on https://wasm4.org/
[11:19:18] <amazigh> I also wonder whether I will not implement a subset of R-1RK
[11:20:02] <amazigh> to explore how "runtime macros" aka. f-expr can replace compilte-time macros
[11:22:52] <amazigh> What do you think about the html output of R7RS-small at https://scheme.rs/specification/ should I proceed with the cleanup, and look for a way to include formal semantic (probably re-typing it using mathml) or give up; \cc Zipheir jcowan 
[11:24:59] <amazigh> regarding styles / graphics, it seems to me the css of the single html output is much better https://scheme.rs/scheme.rs.html
[11:26:52] *** Joins: rgherdt (~rgherdt@ip5f5af1b0.dynamic.kabel-deutschland.de)
[11:28:38] *** Joins: biog (~user1@static.39.160.132.142.clients.your-server.de)
[11:30:23] <Zipheir> amazigh: I like the styles, but the huge page is hard to navigate.
[11:32:02] *** Joins: evdubs_ (~evdubs@user/evdubs)
[11:32:22] <Zipheir> amazigh: I'll happily contribute to the cleanup.
[11:32:54] <sham1> No table of contents
[11:32:55] <sham1> Sad
[11:33:41] <amazigh> Zipheir: they gray style of the homepage or the style of the huge html using a white background
[11:34:12] *** Joins: ManDay (~manday@user/manday)
[11:34:30] *** Quits: evdubs__ (~evdubs@user/evdubs) (Ping timeout: 250 seconds)
[11:34:51] <ManDay> I want to set up a HWDB entry for my keyboard, but where do I get the pattern for match from? https://github.com/systemd/systemd/blob/55dad038b21ab6a91be3aba1c071f0f667844653/hwdb.d/60-keyboard.hwdb
[11:35:12] <ManDay> All these XXXX VVVV <vendor> <product> etc... Can I read them off some command somewhere?
[11:36:13] <ManDay> Ah, damn
[11:36:28] <ManDay> I overlooked the one line that I should have read: /sys/class/input/event/device/id
[11:37:16] <Zipheir> ManDay: ww?
[11:37:18] <ManDay> Still leaves me with ZZZZ and VVVV, though
[11:37:27] <ManDay> Zipheir: Hm?
[11:38:00] <Zipheir> ManDay: Did you mean to ask #scheme?
[11:38:29] <amazigh> I wondered the same ^^'
[11:38:34] *** Quits: rx80 (~quassel@user/rx80) ()
[11:38:36] <amazigh> I am clueless about systemd things
[11:38:37] <ManDay> Urgh
[11:38:44] <Zipheir> amazigh: The code examples look nice.  I appreciate the lack of complex styles.
[11:40:43] *** Joins: rx80 (~quassel@user/rx80)
[11:54:36] *** Joins: lewisje (~lewisje@72.49.207.113)
[11:55:53] *** evdubs_ is now known as evdubs
[11:58:15] *** Quits: ManDay (~manday@user/manday) (Quit: TURBOquit (tm) - the fastest way to get out of an awkward situation)
[12:01:09] *** Joins: ManDay (~manday@user/manday)
[12:01:47] *** Joins: karlosz (~karlosz@47.151.136.69)
[12:02:33] *** Quits: cchristiansen (~user@n122-106-221-66.sbr1.nsw.optusnet.com.au) (Remote host closed the connection)
[12:18:00] *** Quits: ZombieChicken (~weechat@user/zombiechicken) (Quit: WeeChat 3.4)
[12:32:38] *** Joins: klovett_ (~klovett@166.205.90.163)
[12:34:44] *** Quits: klovett (~klovett@166.205.90.163) (Ping timeout: 250 seconds)
[12:39:32] *** Quits: xaltsc (~xaltsc@user/xaltsc) (Remote host closed the connection)
[12:55:23] *** Joins: civodul (~user@guix/contributor/civodul)
[13:05:13] *** Quits: karlosz (~karlosz@47.151.136.69) (Ping timeout: 256 seconds)
[13:10:16] *** Quits: mon_aaraj (~MonAaraj@user/mon-aaraj/x-4416475) (Ping timeout: 250 seconds)
[13:17:51] *** Joins: Avichi (~Avichi@a82-161-111-126.adsl.xs4all.nl)
[13:20:47] *** Joins: s-liao (~s-liao@101.86.96.21)
[14:01:42] *** Joins: seninha (~seninha@user/seninha)
[14:02:32] *** Quits: biog (~user1@static.39.160.132.142.clients.your-server.de) (Ping timeout: 240 seconds)
[14:09:51] *** Joins: gproto23 (~gproto23@user/gproto23)
[14:16:36] *** Joins: tfb (~tfb@88.98.95.237)
[14:17:57] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 276 seconds)
[14:20:56] *** Quits: skeemer (~skeemer@h-158-174-23-219.NA.cust.bahnhof.se) (Quit: Leaving)
[14:25:17] *** Quits: gproto23 (~gproto23@user/gproto23) (Remote host closed the connection)
[14:33:01] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:33:12] *** Joins: tfb (~tfb@88.98.95.237)
[14:33:23] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:33:33] *** Joins: tfb (~tfb@88.98.95.237)
[14:33:44] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:33:54] *** Joins: tfb (~tfb@88.98.95.237)
[14:34:05] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:34:15] *** Joins: tfb (~tfb@88.98.95.237)
[14:34:26] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:34:36] *** Joins: tfb (~tfb@88.98.95.237)
[14:34:48] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:34:58] *** Joins: tfb (~tfb@88.98.95.237)
[14:35:09] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:35:20] *** Joins: tfb (~tfb@88.98.95.237)
[14:35:31] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:35:41] *** Joins: tfb (~tfb@88.98.95.237)
[14:35:52] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:36:02] *** Joins: tfb (~tfb@88.98.95.237)
[14:36:13] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:36:23] *** Joins: tfb (~tfb@88.98.95.237)
[14:36:34] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:36:44] *** Joins: tfb (~tfb@88.98.95.237)
[14:36:55] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:37:07] *** Joins: tfb (~tfb@88.98.95.237)
[14:37:17] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:37:27] *** Joins: tfb (~tfb@88.98.95.237)
[14:37:38] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:37:48] *** Joins: tfb (~tfb@88.98.95.237)
[14:37:59] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:38:10] *** Joins: tfb (~tfb@88.98.95.237)
[14:38:21] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:38:31] *** Joins: tfb (~tfb@88.98.95.237)
[14:38:42] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:38:53] *** Joins: tfb (~tfb@88.98.95.237)
[14:39:04] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:39:14] *** Joins: tfb (~tfb@88.98.95.237)
[14:39:25] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:39:36] *** Joins: tfb (~tfb@88.98.95.237)
[14:39:46] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:39:57] *** Joins: tfb (~tfb@88.98.95.237)
[14:40:09] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:40:19] *** Joins: tfb (~tfb@88.98.95.237)
[14:40:30] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:40:40] *** Joins: tfb (~tfb@88.98.95.237)
[14:40:51] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:41:01] *** Joins: tfb (~tfb@88.98.95.237)
[14:41:13] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:41:23] *** Joins: tfb (~tfb@88.98.95.237)
[14:41:34] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:41:44] *** Joins: tfb (~tfb@88.98.95.237)
[14:41:55] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:42:05] *** Joins: tfb (~tfb@88.98.95.237)
[14:42:16] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:42:26] *** Joins: tfb (~tfb@88.98.95.237)
[14:42:37] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:42:47] *** Joins: tfb (~tfb@88.98.95.237)
[14:42:58] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:43:08] *** Joins: tfb (~tfb@88.98.95.237)
[14:43:20] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:43:30] *** Joins: tfb (~tfb@88.98.95.237)
[14:43:41] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:43:51] *** Joins: tfb (~tfb@88.98.95.237)
[14:44:02] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:44:13] *** Joins: tfb (~tfb@88.98.95.237)
[14:44:24] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:44:34] *** Joins: tfb (~tfb@88.98.95.237)
[14:44:45] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:44:55] *** Joins: tfb (~tfb@88.98.95.237)
[14:45:06] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:45:16] *** Joins: tfb (~tfb@88.98.95.237)
[14:45:27] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:45:38] *** Joins: tfb (~tfb@88.98.95.237)
[14:45:49] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:45:58] *** Joins: tfb (~tfb@88.98.95.237)
[14:46:10] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:46:20] *** Joins: tfb (~tfb@88.98.95.237)
[14:46:31] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:46:42] *** Joins: tfb (~tfb@88.98.95.237)
[14:46:53] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:47:03] *** Joins: tfb (~tfb@88.98.95.237)
[14:47:14] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:47:24] *** Joins: tfb (~tfb@88.98.95.237)
[14:47:35] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:47:45] *** Joins: tfb (~tfb@88.98.95.237)
[14:47:56] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:48:06] *** Joins: tfb (~tfb@88.98.95.237)
[14:48:18] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[14:48:46] *** Joins: tfb (~tfb@88.98.95.237)
[14:53:02] *** Quits: tfb (~tfb@88.98.95.237) (Ping timeout: 240 seconds)
[14:54:13] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[15:26:28] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[15:28:27] *** Joins: Darkcoal (~user@2001:16a2:767e:4500:6775:d936:9968:e932)
[15:29:58] *** Parts: megane_ (~megane@chicken/developer/megane) ()
[15:36:27] *** Joins: tfb (~tfb@88.98.95.237)
[15:37:10] *** Quits: Darkcoal (~user@2001:16a2:767e:4500:6775:d936:9968:e932) (Ping timeout: 250 seconds)
[15:37:33] *** Joins: Darkcoal (~user@130.164.143.112)
[16:07:07] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[16:29:34] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[16:29:58] *** Joins: s-liao (~s-liao@101.86.96.21)
[16:33:52] *** Joins: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net)
[16:57:48] *** Joins: gproto23 (~gproto23@user/gproto23)
[16:58:02] *** Quits: jrincayc (~Thunderbi@38.70.240.202.sumofiber.net) (Ping timeout: 240 seconds)
[16:58:38] *** Parts: pranavats (3fba1d1b34@jabberfr.org) ()
[17:04:04] *** Joins: pranavats (3fba1d1b34@jabberfr.org)
[17:15:41] *** Quits: ManDay (~manday@user/manday) (Quit: TURBOquit (tm) - the fastest way to get out of an awkward situation)
[17:18:06] *** Quits: tfb (~tfb@88.98.95.237) (Remote host closed the connection)
[17:18:15] *** Joins: tfb (~tfb@88.98.95.237)
[17:18:32] *** Quits: tfb (~tfb@88.98.95.237) (Client Quit)
[17:19:29] *** Joins: casmajavi (~casmajavi@user/casmajavi)
[17:20:41] *** Quits: casmajavi (~casmajavi@user/casmajavi) (Client Quit)
[17:20:57] *** Joins: casmajavi (~casmajavi@user/casmajavi)
[17:45:47] *** Joins: ec (~ec@gateway/tor-sasl/ec)
[17:53:06] *** Quits: s-liao (~s-liao@101.86.96.21) (Ping timeout: 256 seconds)
[17:58:09] *** Joins: m455 (~m455@user/m455)
[17:58:18] *** Quits: wyrd (~wyrd@gateway/tor-sasl/wyrd) (Ping timeout: 276 seconds)
[18:03:37] *** Joins: wyrd (~wyrd@gateway/tor-sasl/wyrd)
[18:04:17] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Remote host closed the connection)
[18:04:40] *** Joins: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo)
[18:05:08] *** Quits: casmajavi (~casmajavi@user/casmajavi) (Quit: Leaving)
[18:05:24] *** Joins: casmajavi (~casmajavi@user/casmajavi)
[18:06:59] *** Joins: s-liao (~s-liao@101.86.96.21)
[18:14:16] *** Quits: s-liao (~s-liao@101.86.96.21) (Quit: Client closed)
[18:16:19] *** Quits: X-Scale (~ARM@218.92.108.93.rev.vodafone.pt) (Ping timeout: 256 seconds)
[18:22:25] *** Joins: skapata (~Skapata@2804:14c:87b0:a6f9:9048:56ad:c252:2add)
[18:22:25] *** Quits: skapata (~Skapata@2804:14c:87b0:a6f9:9048:56ad:c252:2add) (Changing host)
[18:22:26] *** Joins: skapata (~Skapata@user/skapata)
[18:23:59] *** Quits: Menchers (Menchers@user/menchers) (Ping timeout: 250 seconds)
[18:28:59] *** Joins: biog (~user1@159.224.42.85)
[18:32:14] *** Quits: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt) (Ping timeout: 250 seconds)
[18:37:03] *** Quits: tokie (~strtok@thales.strtok.net) (Quit: WeeChat 1.9.1)
[18:43:32] *** Joins: tokie (~tokie@thales.strtok.net)
[18:52:45] *** Quits: light (~light@user/light) (Ping timeout: 256 seconds)
[19:01:54] *** Joins: light (~light@user/light)
[19:08:37] *** Quits: light (~light@user/light) (Ping timeout: 256 seconds)
[19:10:21] *** Joins: ManDay (~manday@user/manday)
[19:11:49] *** Quits: casmajavi (~casmajavi@user/casmajavi) (Quit: Leaving)
[19:12:06] *** Joins: casmajavi (~casmajavi@user/casmajavi)
[19:21:59] *** Joins: jao (~jao@cpc103048-sgyl39-2-0-cust502.18-2.cable.virginm.net)
[19:24:02] *** Joins: ahlk (~user@2600:1700:31c0:3a10::43)
[19:59:38] *** Joins: wheeler (~josh@useirc.net)
[20:03:01] *** Quits: gproto23 (~gproto23@user/gproto23) (Ping timeout: 256 seconds)
[20:03:59] *** Joins: grettke (~grettke@cpe-65-29-228-30.wi.res.rr.com)
[20:29:30] *** Quits: Avichi (~Avichi@a82-161-111-126.adsl.xs4all.nl) (Quit: Client closed)
[20:56:18] *** Joins: Menchers (Menchers@user/menchers)
[21:07:08] *** Joins: ouestbillie (~gallup@54.29.90.149.rev.vodafone.pt)
[21:13:18] *** Joins: light (~light@user/light)
[21:13:30] *** Quits: seninha (~seninha@user/seninha) (Remote host closed the connection)
[21:19:08] *** Joins: evdubs_ (~evdubs@user/evdubs)
[21:21:02] *** Quits: evdubs (~evdubs@user/evdubs) (Ping timeout: 240 seconds)
[21:55:26] *** Joins: kjak (~kjak@pool-108-45-56-21.washdc.fios.verizon.net)
[21:59:14] *** Joins: gproto23 (~gproto23@user/gproto23)
[22:04:07] *** Joins: untrusted (~user@dslb-088-065-145-150.088.065.pools.vodafone-ip.de)
[22:04:39] *** Joins: seninha (~seninha@user/seninha)
[22:15:57] *** Quits: Darkcoal (~user@130.164.143.112) (Quit: Darkcoal)
[22:36:48] *** Quits: ManDay (~manday@user/manday) (Quit: TURBOquit (tm) - the fastest way to get out of an awkward situation)
[22:54:41] *** Quits: untrusted (~user@dslb-088-065-145-150.088.065.pools.vodafone-ip.de) (Remote host closed the connection)
[23:00:26] *** Quits: rgherdt (~rgherdt@ip5f5af1b0.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[23:02:29] *** Quits: casmajavi (~casmajavi@user/casmajavi) (Quit: Leaving)
[23:02:48] *** Joins: casmajavi (~casmajavi@user/casmajavi)
[23:03:15] *** Joins: livoreno (~livoreno@user/notzmv)
[23:25:54] *** Quits: alMalsamo (~alMalsamo@gateway/tor-sasl/almalsamo) (Ping timeout: 276 seconds)
[23:27:57] <amazigh> Zipheir: I think I will do the thing, then I will be glad if you proof read.
[23:28:06] <amazigh> re R7RS-small in html
[23:28:27] <amazigh> I am starting the better understand my coding - thinking rhythm
[23:29:29] <amazigh> I used to think I will to need full-time coding with Scheme... where in reality balancing coding, with thinking and other activities among other stuff unrelated to computing is a very good source of energy
[23:30:01] <amazigh> today I did merely 15 minutes of physical exercices, I never seen that much energy flow through my body
[23:30:13] <amazigh> I took me one month to reach 15 minutes!
[23:30:25] <amazigh> I started with 5min, then 10, then 15
[23:31:58] <amazigh> I used to think that it was waste of time, but it fact... the flow of time seems to have slowed down, and my thinking is more positive and clear.
[23:33:25] <amazigh> Also my side experiment with python, which remains the language I most proefficient with, doubled with the fact that there is ton of libraries (possibly half backed) but still it helps to gain motivation to actually see results
[23:33:52] <amazigh> so I am not a traitor :p
[23:34:09] <amazigh> nobody said that, kind of a bad joke
[23:36:24] <amazigh> Re the search engine hardware setup, I tried to do some math
[23:36:51] <amazigh> I found an amd threadripper from a local vendor, that is ~15 000 euros
[23:37:27] <amazigh> to have the same setup in cloud hosting, I need 250euro per months
[23:37:57] <amazigh> 250 per month seems like a lot
[23:39:01] <amazigh> Anyone know how much it would cost to build rack server and host it in a datacenter?
[23:40:41] <amazigh> re sport exercices, 5 minutes seems like a lacherlich joke :o)
[23:40:52] <amazigh> but I already started to feel more positive
[23:51:11] *** evdubs_ is now known as evdubs
[23:52:21] *** Quits: xsperry (~xs@user/xsperry) (Ping timeout: 256 seconds)
