[00:06:56] *** Quits: Doc_Holliwood (~holli@dslb-092-076-011-007.092.076.pools.vodafone-ip.de) (Ping timeout: 252 seconds)
[00:10:48] *** Quits: monkey_ (~user@190.104.116.134) (Ping timeout: 250 seconds)
[00:48:34] *** Joins: monkey_ (~user@190.104.116.134)
[00:50:31] <discord-raku-bot> <klebs#2209> hi folks! am wondering about whether there is a way to (within a grammar rule) match a token and some suffix, without having the suffix appear when expanding the rule itself
[00:50:45] <discord-raku-bot> <klebs#2209> specifically, I have some rule for "numeric" values
[00:51:09] <discord-raku-bot> <klebs#2209> actually, it is a token
[00:51:53] <discord-raku-bot> <klebs#2209> ```raku
[00:51:53] <discord-raku-bot> <klebs#2209> token numeric-value {
[00:51:53] <discord-raku-bot> <klebs#2209>         [ '+' | '-' | '~' ]? <[ 0..9 ]>+ [ '.' <[ 0..9 ]>+ ]? [ 'e' <.numeric> ]?
[00:51:53] <discord-raku-bot> <klebs#2209>     }
[00:51:53] <discord-raku-bot> <klebs#2209>     token numeric-suffix {
[00:51:53] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Excess Flood)
[00:52:06] <perryprog> pfft
[00:52:15] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[00:52:44] <discord-raku-bot> <klebs#2209> but then, as can be seen in "array-dimension" and "expression", my grammar currently uses <.numeric> to gobble numerics without regard for what is inside them
[00:52:44] <moon-child> @klebs, part of your message got cut off here, but I expect you want lookahead
[00:53:41] <discord-raku-bot> <klebs#2209> thanks @moon-child -- i think I *almost* want lookahead, but I want the parsing to gobble the lookahead somehow so it goes away later in the parsing
[00:54:42] *** Quits: xinming (~xinming@115.219.32.56) (Ping timeout: 245 seconds)
[00:54:58] <moon-child> oh.  In that case, just nest the token in another, and only look at the inner token
[00:54:59] <discord-raku-bot> <klebs#2209> in other words, i want numerics, when they are used as <.numeric> to always just return their <numeric-value> with *no* suffix
[00:55:04] *** Joins: Xliff (~Cliff@pool-71-255-227-73.washdc.east.verizon.net)
[00:55:11] <Xliff> \o
[00:55:22] * Xliff just purchased the parts for a new rig.
[00:55:31] <Xliff> Threadripper arrives in 10 days! :q
[00:55:55] *** Joins: xinming (~xinming@115.219.32.56)
[00:55:57] <moon-child> threadrippers are nice!
[00:56:14] <Xliff> moon-child: Have one?
[00:56:22] <Xliff> Will be my first AMD build...
[00:56:35] <discord-raku-bot> <klebs#2209> the trouble is,  I have a quite large codebase which unfortunately assumes everywhere that it can directly use numerics naked as they are
[00:56:48] <moon-child> Xliff: yea.  Work-provided, so I didn't have to foot the bill, too
[00:57:08] <Xliff> https://www.newegg.com/amd-ryzen-9-5950x/p/N82E16819113663?Item=N82E16819113663
[00:57:13] <discord-raku-bot> <klebs#2209> so doing that nesting would be a breaking change in perhaps many locations
[00:57:39] <discord-raku-bot> <klebs#2209> im looking for some way of hooking it somewhere so i can specify in one single place what i want to happen
[00:58:28] <discord-raku-bot> <klebs#2209> which is for something like "18.05f" to parse successfully as "numeric", but come back as "18.05" when we ask for <.numeric> within another rule
[00:58:36] <discord-raku-bot> <klebs#2209> is that possible?
[00:58:48] <Xliff> moon-child: Hah! Nice. Unfortunately, I have to take matters into my own hands.
[00:59:12] <discord-raku-bot> <klebs#2209> perhaps i could edit the match object somehow? unfamiliar with the nuances of this
[01:04:19] <discord-raku-bot> <klebs#2209> what about something like this? ```raku
[01:04:19] <discord-raku-bot> <klebs#2209> #!/usr/bin/env raku
[01:04:19] <discord-raku-bot> <klebs#2209> use v6;
[01:04:19] <discord-raku-bot> <klebs#2209> grammar Numerics {
[01:04:19] <discord-raku-bot> <klebs#2209>     rule TOP {
[01:04:19] <discord-raku-bot> <klebs#2209>         <.ws> <array-dimension>
[01:04:19] <discord-raku-bot> <klebs#2209>     }
[01:04:20] <discord-raku-bot> <klebs#2209>     token numeric-value {
[01:04:20] <discord-raku-bot> <klebs#2209>         [ '+' | '-' | '~' ]? <[ 0..9 ]>+ [ '.' <[ 0..9 ]>+ ]? [ 'e' <.numeric> ]?
[01:04:21] <discord-raku-bot> <klebs#2209>     }
[01:04:21] <discord-raku-bot> <klebs#2209>     token numeric-suffix {
[01:04:22] <discord-raku-bot> <klebs#2209>         | 'f'
[01:04:27] *** Joins: RandalSchwartz (~Adium@2601:1c0:6200:1082:cc6f:1f0d:7ae0:3390)
[01:04:28] *** Parts: RandalSchwartz (~Adium@2601:1c0:6200:1082:cc6f:1f0d:7ae0:3390) ()
[01:04:48] <moritz_> please use a pastebin for code
[01:06:21] <discord-raku-bot> <klebs#2209> https://pastebin.com/raw/PZKtLesP
[01:08:15] <discord-raku-bot> <klebs#2209> oh, moritz!! I bought and read your book! thank you so much! I will remember to write you an amazon review üôÇ
[01:08:21] <discord-raku-bot> <klebs#2209> it was great!
[01:08:24] <Xliff> m: my token numeric { <numeric-value> <numeric-suffix>? { $/ = $/<numeric-value>; say "edited: $/" }; }
[01:08:24] <camelia> rakudo-moar b451f89b6: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unrecognized regex metacharacter ; (must be quoted to match literally)‚ê§at <tmp>:1‚ê§------> 3 = $/<numeric-value>; say "edited: $/" }7‚èè5; }‚ê§    expecting any of:‚ê§        horizontal whitespac‚Ä¶¬ª
[01:08:29] <discord-raku-bot> <klebs#2209> super helpful to me
[01:08:35] <Xliff> m: my token numeric { <numeric-value> <numeric-suffix>? { $/ = $/<numeric-value>; say "edited: $/" } }
[01:08:35] <camelia> rakudo-moar b451f89b6: ( no output )
[01:08:54] <Xliff> m: my token numeric { <numeric-value> <numeric-suffix>? { $/ = $/<numeric-value>; say "edited: $/" } }; say "18.04" ~~ &numeric
[01:08:54] <camelia> rakudo-moar b451f89b6: OUTPUT: ¬´No such method 'numeric-value' for invocant of type 'Match'‚ê§  in regex numeric at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª
[01:09:10] <moritz_> assigning to $/ doesn't make much sense; using make() is better for extracting values and storing them in match objects
[01:09:29] *** Quits: neither (~neither@5.177.237.246) (Quit: Connection closed)
[01:09:51] <Xliff> moritz: Would that code block be better served as <{ ... }>
[01:09:57] <Xliff> Or does it matter?
[01:10:33] <moritz_> <{ ... }> is when you want to change the regex behaviour; { ... } is for pure side effects
[01:10:51] <Xliff> Ah, thanks!
[01:11:11] <moritz_> to be precise, the regex engine interprets the result of <{ ... }> as a regex, and matches that
[01:11:11] <Xliff> Why am I getting "Messages Failed to Load" on Discord every time I try to use it?
[01:11:11] <discord-raku-bot> <klebs#2209> i basically want to insert some sort of shim, because I unfortunately use <.numeric> all over the place in the grammar (which is quite large by now)
[01:11:37] <discord-raku-bot> <klebs#2209> i want to gobble any numeric-suffix without ever passing it upstream
[01:11:51] <moritz_> maybe try to use )> then to limit the match object?
[01:12:03] <moritz_> m: say 'abc' ~~ /a )> ../
[01:12:03] <camelia> rakudo-moar b451f89b6: OUTPUT: ¬´ÔΩ¢aÔΩ£‚ê§¬ª
[01:12:27] <moritz_> it matches the whole string, but only includes the a in the match object
[01:14:40] <discord-raku-bot> <klebs#2209> oh, that does seem to be what i am looking for -- however it doesn't seem to be working when I try it within the grammar
[01:15:06] <discord-raku-bot> <klebs#2209> in that same pastebin, when i insert it in between numeric-value and numeric-suffix
[01:15:30] <discord-raku-bot> <klebs#2209> token numeric { <numeric-value> )> <numeric-suffix>? }
[01:15:58] <moritz_> then I really recommend going with { make +$<numeric-value> } and using $/<numeric>.made
[01:16:15] <moritz_> shouldn't be too hard to find the usages with your editor's search function
[01:16:58] <Xliff> Can I get an invite for the raku discord, please?
[01:18:03] <discord-raku-bot> <klebs#2209> <@742445366489645080> it is here:  https://www.raku.org/community/
[01:18:42] <discord-raku-bot> <klebs#2209> @moritz_ I am wondering why )> works for the example you gave but not within the grammar I have
[01:19:46] <discord-raku-bot> <klebs#2209> ie, https://pastebin.com/raw/2Ni0f5qR
[01:20:45] <moritz_> probably because the rest of the regex engine also thinks that the regex has only consumed the numeric part, not the letter after it
[01:21:56] <discord-raku-bot> <klebs#2209> i see
[01:22:13] <discord-raku-bot> <klebs#2209> is that a bug? that seems the same as lookahead, no?
[01:27:53] <moritz_> I don't know if it's a bug or a feature. Could go either way.
[01:28:12] <discord-raku-bot> <klebs#2209> fair enough üôÇ
[01:28:38] <discord-raku-bot> <klebs#2209> that is a useful trick i didn't know though (at least for individual matches)
[01:28:41] <discord-raku-bot> <klebs#2209> thanks!
[01:28:48] <moritz_> you're welcome
[01:28:50] <discord-raku-bot> <klebs#2209> your book was great üôÇ
[01:29:01] <moritz_> thanks :D
[01:29:13] <moritz_> always happy about ratings on amazon... (hint, hint) :-)
[01:29:33] <discord-raku-bot> <klebs#2209> i will write you a glowing review for sure!
[01:30:42] <moritz_> thanks :D
[01:31:02] <discord-raku-bot> <klebs#2209> what i liked about it the most was that it was basically 100% useful information, with an extraordinarily high ratio of information which was not obvious and unlocked higher usages of the skill itself
[01:33:21] <discord-raku-bot> <klebs#2209> in fact, i i might use that sentence in my review üôÇ
[01:34:03] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4d09:4215:a798:93d6) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[01:39:46] <discord-raku-bot> <klebs#2209> is there a way to edit the global match tree from within a { } block inside a token?
[01:54:26] <Xliff> m: %h = ( a => 1, b => 2, c => 3 ); my $a = 'a'; %h{$a}:exists.say
[01:54:26] <camelia> rakudo-moar b451f89b6: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '%h' is not declared‚ê§at <tmp>:1‚ê§------> 3<BOL>7‚èè5%h = ( a => 1, b => 2, c => 3 ); my $a =‚ê§¬ª
[01:54:31] <Xliff> m: my %h = ( a => 1, b => 2, c => 3 ); my $a = 'a'; %h{$a}:exists.say
[01:54:31] <camelia> rakudo-moar b451f89b6: OUTPUT: ¬´True‚ê§¬ª
[02:34:04] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[02:34:04] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[02:35:44] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[03:25:01] *** Joins: jast (jast@zoidberg.org)
[03:27:59] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[03:29:16] *** Quits: xinming (~xinming@115.219.32.56) (Ping timeout: 256 seconds)
[03:29:38] *** Joins: xinming (~xinming@115.219.32.56)
[03:36:09] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[03:40:20] *** Quits: lichtkind (~lichtkind@p200300d0a7115d13b0e40a09bada4fc7.dip0.t-ipconnect.de) (Ping timeout: 252 seconds)
[04:33:01] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[04:34:42] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[05:34:42] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[05:34:42] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[05:34:42] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[05:34:42] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[05:34:42] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[05:34:42] *** Quits: unicodable6 (uni-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[05:34:42] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[05:34:42] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[05:34:42] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[05:34:42] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[05:34:42] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[05:34:42] *** Quits: notable6 (not-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[05:34:42] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[05:34:42] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[05:34:42] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[05:34:42] *** Quits: coverable6 (cov-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[05:34:42] *** Quits: bisectable6 (bis-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[05:34:43] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[05:34:43] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Write error: Connection reset by peer)
[05:35:15] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[05:35:29] *** Joins: unicodable6 (uni-able@2001:41d0:2:5eb5::)
[05:35:53] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[05:36:15] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[05:36:38] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[05:37:04] *** Joins: bisectable6 (bis-able@2001:41d0:2:5eb5::)
[05:37:33] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[05:37:50] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[06:35:36] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[06:36:08] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[06:36:27] *** Joins: notable6 (not-able@2001:41d0:2:5eb5::)
[07:28:58] *** Quits: xinming (~xinming@115.219.32.56) (Ping timeout: 256 seconds)
[07:29:20] *** Joins: xinming (~xinming@115.219.32.56)
[07:35:28] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[07:36:35] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[07:36:45] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[07:37:24] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[07:37:56] *** Quits: xinming (~xinming@115.219.32.56) (Ping timeout: 252 seconds)
[07:38:18] *** Joins: xinming (~xinming@115.219.32.56)
[07:58:53] *** Quits: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi) (Quit: C-x C-c)
[08:03:08] *** Joins: swaggboi (~swaggboi@slackware.uk/supporter/swaggboi)
[08:17:07] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[08:21:35] *** Joins: Sgeo_ (~Sgeo@user/sgeo)
[08:24:04] *** Quits: Sgeo (~Sgeo@user/sgeo) (Ping timeout: 252 seconds)
[08:37:21] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[08:43:17] *** Joins: keutoi (~keutoi@157.48.222.181)
[08:43:27] *** Quits: xinming (~xinming@115.219.32.56) (Ping timeout: 245 seconds)
[08:43:49] *** Joins: xinming (~xinming@115.219.32.56)
[09:04:13] *** Quits: xinming (~xinming@115.219.32.56) (Ping timeout: 252 seconds)
[09:04:36] *** Joins: xinming (~xinming@115.219.32.56)
[09:36:07] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[10:32:22] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[10:32:37] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[10:33:56] *** Quits: xinming (~xinming@115.219.32.56) (Ping timeout: 252 seconds)
[10:34:18] *** Joins: xinming (~xinming@115.219.32.56)
[11:13:32] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:4d09:4215:a798:93d6)
[11:36:07] *** Joins: coverable6 (cov-able@2001:41d0:2:5eb5::)
[12:10:20] *** Quits: eseyman (~manu@lfbn-idf1-1-2267-180.w92-151.abo.wanadoo.fr) (Quit: leaving)
[12:30:04] *** Joins: lichtkind (~lichtkind@p200300d0a7115d01b0e40a09bada4fc7.dip0.t-ipconnect.de)
[13:01:04] *** Joins: eseyman (~manu@lfbn-idf1-1-2267-180.w92-151.abo.wanadoo.fr)
[13:14:56] *** Quits: eseyman (~manu@lfbn-idf1-1-2267-180.w92-151.abo.wanadoo.fr) (Quit: leaving)
[13:19:12] *** Quits: Sgeo_ (~Sgeo@user/sgeo) (Read error: Connection reset by peer)
[13:23:42] *** Quits: b2gills (~brad@64.191.7.0) (Ping timeout: 256 seconds)
[13:57:11] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:4d09:4215:a798:93d6) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[14:22:54] <spacekookie> So I'm looking at RAKULIB as a search path and I'm wondering if there's a way to make rakudo look for module more recursively. i.e. I point it at something like lib/perl6/site_perl (similarly to perl5) in which are then different raku distributions
[14:23:09] <spacekookie> Not 100% sure how this is supposed to work from the raku modules docs
[14:26:01] <spacekookie> Or should I just set RAKULIB manually to include all paths to modules that a package requires?
[14:32:16] *** Quits: keutoi (~keutoi@157.48.222.181) (Ping timeout: 256 seconds)
[14:34:12] *** Joins: keutoi (~keutoi@223.228.99.30)
[15:10:07] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1)
[15:16:24] <lizmat> spacekookie: feels like you want to create your own REPO logic?
[15:18:49] <spacekookie> Is a REPO in Raku something special?
[15:19:27] <gfldex> m: say $*REPO;
[15:19:27] <camelia> rakudo-moar b451f89b6: OUTPUT: ¬´inst#/home/camelia/.raku‚ê§¬ª
[15:19:44] <lizmat> when you want to load a module in Raku, it's basically asking whatever is in $*REPO if it knows about a given module
[15:19:55] <lizmat> if it does, then you'll be able to load it
[15:20:00] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[15:20:03] <lizmat> through the $*REPO logic
[15:20:24] <lizmat> in fact $*REPO is a chain of repo's
[15:20:41] <lizmat> if the first doesn't know about it, it can ask the second, etc.
[15:20:56] <lizmat> Raku comes standard with the "Installed modules" repo
[15:21:10] <lizmat> and the  "filesystem modules" repo
[15:21:27] <lizmat> (and a few other ones, but that's not important right now)
[15:21:55] <lizmat> the "installed modules" only knows about modules that you have installed with e.g. "zef install Foo::Bar"
[15:22:15] <lizmat> the "filesystem" one only knows about modules as files in a directory
[15:22:28] <lizmat> (which is much like Perl treats modules)
[15:22:55] <lizmat> when you say "use lib 'foo/bar'"
[15:23:21] <lizmat> you are in fact inserting a REPO at the front of the chain, that will look for modules in the "foo/bar" directory
[15:23:39] <lizmat> spacekookie: are you still with me?
[15:24:03] <spacekookie> Yea, that makes sense
[15:25:22] <spacekookie> The background to what I'm trying to build is that on NixOS there's no such thing as an "installed module". Each program has access to the modules it needs, but they are install at some path in /nix/store
[15:26:00] <spacekookie> So for any given program we wrap it in a script that sets RAKULIB to a path on where to find its dependencies
[15:26:11] <lizmat> and "use lib" is not cutting it for you?
[15:26:17] <spacekookie> But thinking about this for a bit longer, actually it makes total sense to have RAKULIB be a comma separated path for each of the dependencies
[15:26:42] <spacekookie> "use lib" has to look for the module somewhere though, right? Which is determined by the search path?
[15:26:55] <spacekookie> Or is it the filesystem one?
[15:27:04] <lizmat> use lib is the filesystem one
[15:27:10] <spacekookie> Ah
[15:27:21] <lizmat> it has the disadvantage that it does **NOT** know about versions
[15:27:38] <spacekookie> That works fine for includes _inside_ a module but to bundle an program together it's a bit inconvenient
[15:28:19] <lizmat> so if you do "use foo:auth<lizmat>:ver<0.0.2>" and the use lib repo finds a "foo.rakumod", it will use that *without* checking version or auth matching
[15:30:05] <spacekookie> Interesting
[15:30:24] <spacekookie> Anyway, I think I have a decent solution for this now (if you're interested: https://dev.spacekookie.de/kookie/nomicon/src/commit/4c47d49bdb160bb654573591a439076cb826284f/infra/libkookie/nixpkgs/unstable/pkgs/build-support/raku/default.nix#L17 -- currently in my own fork, but it'll be upstreamed soon(tm))
[15:32:00] <lizmat> ugexe tonyo El_Che might be better suited to judge that
[15:32:17] <lizmat> they're more into packaging / module installations than I am
[15:32:22] <spacekookie> So the general structure of a raku package is then $out/{bin,/lib/perl6/site_perl} with the latter containing the code shipped by the module. And the RAKULIB path is a set of $out/lib/perl6/site_perl and links to every other dependency that's required (and packaged at their own /nix/store/whatever/ paths
[15:32:32] <spacekookie> Well, thanks for your help anyway :)
[15:32:42] <lizmat> yw
[15:33:14] <spacekookie> fwiw it's also the first build support system I try to build for nixpkgs x)
[15:36:21] <lizmat> ah, an opportunity for double learning :-)
[16:20:00] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[16:20:00] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[16:27:12] *** Quits: keutoi (~keutoi@223.228.99.30) (Ping timeout: 245 seconds)
[16:32:32] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1)
[16:32:53] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[16:56:52] <ugexe> use lib will know about versions if it points to a repo that knows about versions
[16:58:39] <ugexe> something like `use lib "lib"` might not similarly to `-I lib`, but thats why people should be using `use lib "."` or `-I .` (i.e. pointing at the base directory of the distribution where the META6.json resides, not its lib/ subdir)
[16:59:04] <lizmat> spacekookie ^^
[17:00:00] <lizmat> ugexe++  # reminding me about META6.json being used if found by use "lib"
[17:04:09] <ugexe> i wrote https://github.com/ugexe/Perl6-CompUnit--Repository--Lib years ago to do a recursive lib/ type structure like https://github.com/ugexe/Perl6-CompUnit--Repository--Lib/tree/master/t/test-libs
[17:04:30] <ugexe> but thats a prototype 
[17:20:30] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[17:22:29] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[18:22:29] *** Quits: bloatable6 (blo-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[18:22:29] *** Quits: linkable6 (lin-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[18:22:29] *** Quits: evalable6 (eva-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[18:22:29] *** Quits: quotable6 (quo-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[18:22:29] *** Quits: sourceable6 (sou-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[18:22:29] *** Quits: statisfiable6 (sta-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[18:22:29] *** Quits: squashable6 (squ-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[18:22:29] *** Quits: shareable6 (sha-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[18:22:29] *** Quits: releasable6 (rel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[18:22:29] *** Quits: nativecallable6 (nat-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[18:22:29] *** Quits: committable6 (com-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[18:22:29] *** Quits: greppable6 (gre-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[18:22:29] *** Quits: benchable6 (ben-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[18:22:29] *** Quits: tellable6 (tel-able@2001:41d0:2:5eb5::) (Read error: Connection reset by peer)
[18:23:54] *** Joins: committable6 (com-able@2001:41d0:2:5eb5::)
[18:24:32] *** Joins: shareable6 (sha-able@2001:41d0:2:5eb5::)
[18:24:47] *** Joins: releasable6 (rel-able@2001:41d0:2:5eb5::)
[18:25:10] *** Joins: quotable6 (quo-able@2001:41d0:2:5eb5::)
[18:25:34] *** Joins: benchable6 (ben-able@2001:41d0:2:5eb5::)
[18:33:42] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[18:42:40] *** Joins: monkey_ (~user@190.104.116.134)
[18:49:10] *** Quits: dg (~dgl@dg.wtf) (Ping timeout: 240 seconds)
[19:05:52] *** Joins: squashable6 (squ-able@2001:41d0:2:5eb5::)
[19:20:11] *** Quits: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1) (Quit: My MacBook Air has gone to sleep. ZZZzzz‚Ä¶)
[19:23:09] *** Joins: nativecallable6 (nat-able@2001:41d0:2:5eb5::)
[19:23:09] *** Joins: greppable6 (gre-able@2001:41d0:2:5eb5::)
[19:23:42] *** Joins: tellable6 (tel-able@2001:41d0:2:5eb5::)
[19:48:10] *** Quits: sftp (~sftp@79.174.36.182) (Ping timeout: 240 seconds)
[19:58:02] *** Joins: TheAthlete (~TheAthlet@176.96.230.116)
[20:04:34] <spacekookie> Hmm, why are there two separate keys in the p6c.json to get the repository url (support.source and source-url)? Are there semantic differences between them?
[20:06:26] *** Quits: jess (~jess@libera/staff/jess) ()
[20:08:21] *** Joins: sftp (~sftp@79.174.36.182)
[20:13:58] <moritz_> I think one is new style, one is old style, and we never finished the transition, or something
[20:15:38] <spacekookie> Okay so I guess I'll start sending out some PRs x) 
[20:23:56] *** Joins: sourceable6 (sou-able@2001:41d0:2:5eb5::)
[20:25:35] *** Joins: evalable6 (eva-able@2001:41d0:2:5eb5::)
[20:37:42] <raydiak> I'm not entirely sure that one is meant to be deprecated. META6, which we link to from the docs on META files, uses both. zef uses only support.source in its META6.json but happily works with either one afaik. fez uses only source-url in it's META, not sure what it looks at when running. our docs have no mention of "support". S22 has no mention of "source-url".
[20:38:40] <raydiak> since we have no spec for meta files and don't consider either the docs or syns or anything else authoratative, it's just "whatever the prevailing tooling wants"
[20:42:09] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[20:42:22] <ugexe> source-url is more something defined by ecosystems. id say support.source is for humans to enter and source-url is more something that should be generated (even though that isnt the case for p6c)
[20:47:09] <ugexe> if zef was uploaded to cpan then its source-url would be a url to its cpan .tar.gz regardless of what its value was when it was uploaded, but the support.source would still point to whatever its value was (in this case the git repository)
[20:54:31] *** Joins: monkey_ (~user@190.104.116.134)
[21:07:41] <spacekookie> Hmm, okay. Is there a reason to actually have this be two fields? i.e. why not just use the "human" value for everything?
[21:08:07] *** Quits: a3r0 (~aero@61.100.184.210) (Remote host closed the connection)
[21:16:09] <ugexe> who says you know what the value is before uploading?
[21:17:46] <ugexe> something like our cpan usage is going to overwrite source-url with the appropriate .tar.gz url which is generated. if we only use one of these values then there is no longer an linkage to the source
[21:18:45] <spacekookie> Hm, fair enough. I guess some modules are also just hosted on modules.raku.org and don't have a repo of their own somewhere?
[21:24:30] *** Joins: bloatable6 (blo-able@2001:41d0:2:5eb5::)
[21:24:39] *** Joins: statisfiable6 (sta-able@2001:41d0:2:5eb5::)
[21:29:00] <ugexe> they dont have to have a repo, no
[21:32:45] *** Joins: RandalSchwartz (~Adium@2601:1c0:6200:1082:e0bf:493:6292:e054)
[21:32:55] *** Parts: RandalSchwartz (~Adium@2601:1c0:6200:1082:e0bf:493:6292:e054) ()
[21:45:27] *** Quits: monkey_ (~user@190.104.116.134) (Remote host closed the connection)
[22:23:13] *** Joins: jjido (~Denis@2a02:c7f:5c91:e700:f1cc:d5ea:e86d:e5c1)
[22:32:34] *** Quits: reportable6 (rep-able@2001:41d0:2:5eb5::) (Remote host closed the connection)
[22:33:11] *** Joins: reportable6 (rep-able@2001:41d0:2:5eb5::)
[22:42:07] *** Joins: Sgeo (~Sgeo@user/sgeo)
[23:25:16] *** Joins: linkable6 (lin-able@2001:41d0:2:5eb5::)
[23:28:07] *** Quits: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de) (Remote host closed the connection)
[23:28:23] *** Joins: discord-raku-bot (~RakuIRC@ip5f5ab722.dynamic.kabel-deutschland.de)
[23:30:27] *** Quits: TheAthlete (~TheAthlet@176.96.230.116) (Quit: Connection closed)
