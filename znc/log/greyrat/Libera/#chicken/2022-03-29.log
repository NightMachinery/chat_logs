[00:09:32] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[00:16:22] <amazigh> no magic â„¢
[00:20:05] *** Quits: clacke (88d96f2df3@knopi.disroot.org) (Read error: Connection reset by peer)
[00:26:03] <siiky> (I wasn't advocating the use of either rebase or squash, though I do use rebase on my own WIP branches)
[00:28:26] <siiky> Zipheir: re commits that can disappear: if you don't GC they don't disappear, I think; I used to come across "commits that don't belong to any branch" often
[00:29:16] <siiky> and I never even cam close to saying Git is perfect (though that may not have been directed at me specifically)
[00:54:45] *** Joins: alexshendi (~alexshend@2a02:8070:8796:7600:b4e5:6142:f83c:c159)
[00:56:26] <Zipheir> siiky: Sorry if it seemed like an anti-git dogpile. :-/
[00:57:22] <Zipheir> In fairness, I seem to remember Linus saying git was never intended to be a traditional version control system, and instead something more like a filesystem.
[00:59:15] *** Quits: alexshendi (~alexshend@2a02:8070:8796:7600:b4e5:6142:f83c:c159) (Client Quit)
[01:24:13] <wasamasa> it really is
[01:45:39] *** Joins: klovett (~klovett@107.116.92.147)
[01:45:46] *** Quits: klovett (~klovett@107.116.92.147) (Client Quit)
[02:27:18] *** Quits: rgherdt (~rgherdt@port-92-195-125-72.dynamic.as20676.net) (Remote host closed the connection)
[02:47:38] <amazigh> my rant is we should not try to make everything look "perfect" keeping track of mistakes is the purpose of git, getting some edges less rought is a good things tho. But making it appear like: it all happened in one night... meh.
[02:47:53] <amazigh> ok the one night thing is extreme case.
[02:48:11] <amazigh> the purpose of vcs
[02:49:20] <Zipheir> amazigh: Absolutely.  I really, really dislike the "cleaning up my git log with history rewriting, because it's on my public GitHub page" attitude.
[02:51:28] <Zipheir> amazigh: Even when people rewrite history to make things clearer (as opposed to trying to make themselves look smarter), it usually backfires by breaking someone else's repo.
[02:53:07] <Zipheir> But the cosmetic rewriting just seems unethical to me.
[02:53:37] <Zipheir> http://paul.stadig.name/2010/12/thou-shalt-not-lie-git-rebase-ammend.html
[03:05:03] <vandusen> "prose" pasted "prose" http://paste.call-cc.org/paste?id=3fdb7726af017790bf0538d1ec70d812234825c1
[03:06:56] <Corbin> Zipheir: An example of rewriting history usefully might be using git-filter-branch (or, I guess, now git-filter-repo) to split a subdirectory into its own repository without losing any history.
[03:13:40] <siiky> rewriting/cleaning up on a "stable" branch, or a branch that's potentially used by many people (such as main/dev/w.e.), is one thing; rewriting/cleaning up a branch that's WIP is another. I think a clean log with commits that make sense is much more useful than one full of "fix", "fix 2", "fix for real", "oops", etc, but the "cleanliness" needn't come from rewriting the main log itself
[03:16:19] <siiky> I say this but I don't have a hard rule and do sometimes ammend+force-push commits on main, only because I don't believe anyone follows my public repos
[03:17:41] <Zipheir> Corbin: That's a good point.
[03:18:33] *** Joins: johnjaye (~pi@173.209.64.74)
[03:19:07] <Zipheir> siiky: I can understand that, but I'd prefer writing informative commits in the first place.
[03:20:10] <Zipheir> e.g. if there are going to be 5 different "fixes" (but not) in a row, it's nice when each one at least has a message saying what it did.
[03:23:00] <Zipheir> There are way too many one-word commit messages out there for my taste...
[03:23:34] <Zipheir> https://xkcd.com/1296/ is barely satire.
[03:40:20] <Bunny351> bah... one can either code or become an accountant. I prefer the former.
[03:43:20] <Bunny351> subtle issues should always be clearly described, but most things are often more descriptively explained through the code changes than by meaningless prose
[03:43:35] <Bunny351> (that might not even be complete or correct)
[03:43:48] <Zipheir> Well, meaningless prose is by definition unhelpful. :)
[03:44:30] <Zipheir> I'm not saying long messages are better, just descriptive ones.
[03:44:48] <Bunny351> sure.
[03:45:09] <Zipheir> So that other people don't have to scroll through pages and pages of "fix", "tidy", etc.
[03:45:31] <Bunny351> yet, sometimes we all tend to cover up boredness, lack of inspiration and procrastination by becoming overly "administrative".
[03:46:29] <Zipheir> Hah, but the implication does not go both ways.  Not everyone who doesn't want to be in a garage punk band is an accountant.
[03:46:33] <Bunny351> but commit messages are a great location for putting jokes.
[03:47:38] <Zipheir> Didn't Stallman get in trouble for one of those?
[03:47:54] <Zipheir> Something about an abort() call, ISTR...
[04:24:37] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:f1cd:472c:942a:3925)
[04:24:37] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:f1cd:472c:942a:3925) (Changing host)
[04:24:37] *** Joins: skapata (~Skapata@user/skapata)
[04:50:08] *** Quits: rnlf_ (~rnlf@static-ip-217-172-172-73.inaddr.ip-pool.com) (Ping timeout: 240 seconds)
[04:50:08] *** Joins: rnlf (~rnlf@static-ip-217-172-172-73.inaddr.ip-pool.com)
[05:41:19] *** Quits: root1 (root@2a01:7e01::f03c:91ff:fe3f:a1d6) (Ping timeout: 250 seconds)
[05:41:36] *** Joins: root1 (root@2a01:7e01::f03c:91ff:fe3f:a1d6)
[06:53:41] *** Joins: irontom (~user@69.174.103.168)
[07:00:16] *** Quits: irontom (~user@69.174.103.168) (Remote host closed the connection)
[08:33:47] *** Quits: ublx (~ublx@user/ublx) (Quit: ublx)
[09:32:37] *** Quits: ecloud (~quassel@192.89.120.58) (Ping timeout: 240 seconds)
[09:45:57] *** Joins: ecloud (~quassel@192.89.120.58)
[10:06:48] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[12:22:16] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:6532:e8e0:dc5d:410)
[12:22:16] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:6532:e8e0:dc5d:410) (Changing host)
[12:22:16] *** Joins: skapata (~Skapata@user/skapata)
[12:57:22] *** Joins: crumpo (~crumpo@user/crumpo)
[13:02:53] *** Quits: crumpo (~crumpo@user/crumpo) (Ping timeout: 250 seconds)
[13:08:56] *** Joins: crumpo (~crumpo@user/crumpo)
[13:18:41] <vandusen> SPAM! SPAM! SPAM! by freee
[13:29:18] <megane> Zipheir: my tldr for the post: publishing commits that don't build and pass tests is lying
[13:32:43] *** Quits: ecloud (~quassel@192.89.120.58) (Ping timeout: 260 seconds)
[13:36:46] *** Quits: skapata (~Skapata@user/skapata) (Remote host closed the connection)
[13:45:10] *** Joins: ecloud (~quassel@192.89.120.58)
[13:52:19] *** Quits: crumpo (~crumpo@user/crumpo) (Quit: Buh bye)
[13:52:36] *** Joins: crumpo (~crumpo@user/crumpo)
[14:06:40] <vandusen> SPAM! SPAM! SPAM! by freee
[15:12:16] <vandusen> [eggs] Error fetching CHICKEN 5 .release-info file for the following eggs: edn
[15:17:31] <siiky> Zipheir: sometimes you just don't know what to say about some commit... at least it happens to me! Other times, I just want to keep working and worry about commit messages later, lest I lose momemtum
[15:19:42] <siiky> I didn't read the post, but judging from what megane said, it's always the best practice either; sometimes commits come in sets, together they make something work, but not on their own. You could always make them one huge commit, but pls... try to understand one "Fix <feature>" instead of a few "Fix <this>", "Fix <that>"
[15:20:25] <siiky> if they're "self-contained", I'd go for the latter any day of the week
[15:22:57] <siiky> on my previous job it was often useful to dig into a project's Git/Hg repository to find the commit(s) that fixed some bug; it was very common on Java projects (and some PHP too) to have one 500+ changed files commit saying "Version bump" or something else stupid
[16:25:22] *** Joins: s-liao (~s-liao@101.86.164.158)
[16:39:18] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 250 seconds)
[17:35:07] *** Joins: s-liao (~s-liao@101.86.164.158)
[17:53:51] *** Joins: s-liao3 (~s-liao@101.86.164.158)
[17:56:26] *** Quits: s-liao (~s-liao@101.86.164.158) (Ping timeout: 250 seconds)
[18:27:12] *** Quits: m455 (~m455@user/m455) (Ping timeout: 260 seconds)
[18:35:17] *** Joins: m455 (~m455@user/m455)
[18:44:56] *** Quits: ecloud (~quassel@192.89.120.58) (Ping timeout: 252 seconds)
[18:58:43] *** Joins: ecloud (~quassel@192.89.120.58)
[18:59:16] <C-Keen> I am reviving my chicken setup, and want to port doodle to chicken 5. any recommendations on changing styles?
[18:59:21] <C-Keen> Bunny351: also ProxyCommand /usr/bin/corkscrew proxy 3128 %h %p
[18:59:26] <C-Keen> oops
[18:59:35] <C-Keen> Bunny351: https://mwl.io/archives/15414 that's what I meant
[19:09:27] <C-Keen> Kooda: I do have a port of parley here, didn't you port that also?
[19:26:11] *** Quits: s-liao3 (~s-liao@101.86.164.158) (Quit: Client closed)
[19:38:32] *** Quits: amazigh (~amazigh@user/amirouche) (Quit: WeeChat 2.8)
[19:40:43] *** Joins: amazigh (~amazigh@user/amirouche)
[19:53:09] <Zipheir> megane: Well, if you're maintaining executable source code, possibly.  But repos hold lots of things, at least in my use cases.  I can't always test my English files...
[19:58:32] *** Quits: pie__ (~pie_bnc@user/pie/x-2818909) (Quit: pie__)
[19:59:28] *** Joins: pie_ (~pie_bnc@user/pie/x-2818909)
[20:01:11] <Zipheir> I take the "lying" that (http://paul.stadig.name/2010/12/thou-shalt-not-lie-git-rebase-ammend.html) referred to to be all of the ways git offers to rewrite history.  Commits that didn't happen suddenly appearing in the log 3 weeks ago, etc.
[20:02:14] <Zipheir> siiky: Good point.  And it's probably a good practice to commit often, even if you don't have a brilliant description of what you did.
[20:04:57] *** Quits: pie_ (~pie_bnc@user/pie/x-2818909) (Quit: pie_)
[20:07:07] *** Joins: pie_ (~pie_bnc@user/pie/x-2818909)
[20:14:48] <megane> Zipheir: do you make edits to your english files in a sequence that's important or useful to maintain?
[20:15:28] <Zipheir> Not really, but then, they're mostly private repos.
[20:16:29] <Zipheir> I think of history consistency as an important "contract" between users of a public repo.
[20:17:02] <Zipheir> If you want to create nonlinear Dr. Who timelines in your private repos, go right ahead. :)
[20:17:07] <megane> are you talking about rewriting published history?
[20:17:43] <Zipheir> Yes.
[20:18:42] <Zipheir> But in these days of "public from birth" web repos, I think that covers a lot.
[20:18:43] * megane shivers
[20:22:08] <megane> rewriting published history is just asking for trouble.
[20:23:34] <Zipheir> (That includes things like squashing which, IME, happen all the time with public repos. :-/)
[20:34:17] *** Joins: skapata (~Skapata@2804:14c:87b0:9d2e:9c17:a673:394c:f38d)
[20:34:17] *** Quits: skapata (~Skapata@2804:14c:87b0:9d2e:9c17:a673:394c:f38d) (Changing host)
[20:34:17] *** Joins: skapata (~Skapata@user/skapata)
[20:39:21] *** Joins: jobol (~jobol@2a01:e34:ee5c:ee50:d6be:d9ff:fea3:db03)
[20:53:12] *** Quits: fantazo (~fantazo@192-164-154-92.hdsl.highway.telekom.at) (Ping timeout: 260 seconds)
[20:53:17] *** Quits: pie_ (~pie_bnc@user/pie/x-2818909) (Quit: pie_)
[21:09:37] *** Joins: pie_ (~pie_bnc@user/pie/x-2818909)
[21:51:37] <johnjaye> what is "squashing"? like collapsing several commits?
[21:52:09] <johnjaye> imo the only point of having a versioning system is to manipulate your source code. so if you want to go full dr. who and start changing things around go for it.
[21:53:35] <Zipheir> johnjaye: Yeah, it replaces a collection of commits with a single one.
[21:54:04] <johnjaye> does git have a way to support such things without rewriting
[21:54:10] <johnjaye> like labeling a block of time with a label?
[21:54:24] <Zipheir> I recall a project which squashed 100+ commits (a full program rewrite and over a year of work)...  I didn't continue to contribute to that one.
[21:55:43] <Zipheir> johnjaye: Branches provide that kind of commit segregation, I think.
[21:56:03] <johnjaye> so like. could you create a branch in the past which rewrites history 
[21:56:11] <Zipheir> johnjaye: I mean, the central (hah) idea of the DVCS model is that branches and merges are all you need to do most things.
[21:56:17] <Zipheir> johnjaye: No.
[21:56:36] <johnjaye> it would be less disruptive than squashing though
[21:57:13] <Zipheir> It's actually an interesting idea.
[21:57:18] <johnjaye> i'm guessing the motivation is large numbers of small commits which change maybe a line at most.
[21:57:38] <johnjaye> having to consider all of them with tracking a bug might grow too difficult without some way to group them
[21:58:27] <Zipheir> Some VCSs absolutely would not allow a bunch of commits to be inserted out of (time) order, but you can probably do that with Git.  So an "alternate history branch" isn't too weird.
[21:58:55] <johnjaye> again i'm assuming it's just a lack of good tooling which makes it hard to find blame when there's too many commits
[21:58:58] <Zipheir> johnjaye: Yes.  But that's why git provides a very powerful log tool which can ignore merges.
[21:59:01] <johnjaye> but that's just an idea i had
[21:59:27] <Zipheir> git log is awesome tooling.  Most VCSs don't have anything nearly that good.
[21:59:33] <johnjaye> like if 100 people make a one line commit to file A,  you might want to treat file A as having received one commit instead
[21:59:44] <Zipheir> So, don't throw out the information with squashing.  Hide it with the tools.
[21:59:56] <Zipheir> No, you want that information.
[22:00:01] <Zipheir> Just don't look at it.
[22:00:08] <johnjaye> well. ok. that's what i'm saying
[22:00:29] <johnjaye> retain the information but create a view or format where you can use it
[22:00:38] <Zipheir> git log --no-merges
[22:00:42] <johnjaye> even if that means creating a dr who timeline where a bunch of merges happened out of order
[22:00:44] <Zipheir> Yeah, exactly.
[22:01:04] <johnjaye> as long as you can restore the original timeline it's fine
[22:01:17] <johnjaye> maybe that's why they always have such anxiety about it
[22:01:37] <johnjaye> they never stop to ask is the new timeline better. usually it's just oh no the timeline has been altered, we have to restore it.
[22:02:58] <Zipheir> I don't understand...
[22:03:27] <johnjaye> maybe this is more of a star trek thing
[22:03:34] <Zipheir> A lot of the monkeying with history is because people want a "better" timeline.
[22:03:47] <Zipheir> Hah. :)  I see.
[22:03:52] <johnjaye> star trek voyager had this weird conceit that restoring the timeline to it's natural form took priority over everything, even entire planets of people.
[22:04:28] <Zipheir> Ah, I remember that episode.  One of the better Voyager ones, IMO.
[22:04:33] <johnjaye> yes really. bizarrely subverted when a time traveler showed up to destroy the ship on the basis that it caused an explosion 1000 years later
[22:06:01] <johnjaye> if they really believe that they should just let the ship be destroyed for great history
[22:06:53] <Zipheir> Well, if you're going to rewrite repo history, at least play the part and write your commits like a time-traveller.
[22:07:22] <johnjaye> heh. like make references to what a later commit is going to do?
[22:07:39] <Corbin> Reminds me of a recent popular series where time-travelers preferred to keep a timeline pruned for similar reasons, removing fresh branches before they could diverge too much.
[22:13:35] <johnjaye> sounds like timelord tyranny to me
[23:13:35] *** Quits: johnjaye (~pi@173.209.64.74) (Quit: WeeChat 3.3)
[23:19:08] *** Joins: johnjaye (~pi@173.209.64.74)
[23:57:02] *** Joins: ublx (~ublx@user/ublx)
