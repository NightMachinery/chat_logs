[00:14:43] <FromGitter> <lebensterben> @alsoijw I think you need to use `sit-for` here..
[00:49:09] <FromGitter> <alsoijw> Maybe there is something like popen? https://ruby-doc.org/core-2.7.0/IO.html#method-c-popen
[00:53:13] <FromGitter> <lebensterben> there is
[00:53:58] <FromGitter> <lebensterben> but for what you have done, you are directly graping the content to of a buffer, not accessing the stdout of the subprocess. So that's not relevant.
[00:56:35] <FromGitter> <alsoijw> It will be enough for me to read the output to a variable, I will output it to the buffer separately.
[00:58:09] <FromGitter> <lebensterben> https://www.gnu.org/software/emacs/manual/html_node/elisp/Output-from-Processes.html
[01:00:03] <FromGitter> <lebensterben> If you only care about stdout you don't need to start the python interactively
[01:00:46] <FromGitter> <lebensterben> Just  use `python -c "1+1"` for example. That's much quicker.
[01:02:53] <FromGitter> <alsoijw> No, I use utop. I need this to print the module signature.
[01:04:47] <FromGitter> <lebensterben> what is utop
[02:45:11] <FromGitter> <lebensterben> I'm going to work on a really old feature request from 2016. https://github.com/syl20bnr/spacemacs/issues/5965
[02:45:47] <FromGitter> <lebensterben> Bascally the home buffer would have a new section showing a random quote.
[02:46:35] <FromGitter> <lebensterben> I would make my "Nothing is difficult as long as you give up." as default.
[02:46:56] <FromGitter> <lebensterben> I'm open to more ideas.
[04:06:56] *** Quits: baldlizard (~Thunderbi@p57985adc.dip0.t-ipconnect.de) (Ping timeout: 250 seconds)
[06:33:34] *** Quits: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net) (Remote host closed the connection)
[08:25:46] *** Quits: ur5us (~ur5us@203.86.198.200) (Ping timeout: 260 seconds)
[10:46:13] *** Joins: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::e3bb)
[11:01:42] *** Joins: baldlizard (~Thunderbi@p579858c5.dip0.t-ipconnect.de)
[11:10:53] *** Joins: ur5us (~ur5us@203.86.198.200)
[11:36:49] <FromGitter> <lebensterben> Teaser: https://imgur.com/erjVxwq
[11:37:21] <FromGitter> <lebensterben> I did not add the quote but I spent some time adding icons to the spacemacs buffer.
[11:55:53] <FromGitter> <alsoijw> > what is utop ‚èé Something like repl for ocaml.
[11:57:59] *** Quits: ur5us (~ur5us@203.86.198.200) (Ping timeout: 256 seconds)
[12:07:34] <FromGitter> <lebensterben> just sent the PR https://github.com/syl20bnr/spacemacs/pull/15332
[12:07:44] <FromGitter> <lebensterben> now I'm going to sleep
[12:08:47] <FromGitter> <alsoijw> Strangely, there is a difference between python and utop. In the first case, I can transfer everything at one time, dividing by new line, and in the second - no, as if some line is lost. At the same time, redirection from the file works fine. ‚èé  ‚èé ```(process-send-string Py "1+1\n2+3\n")``` ‚èé  ‚èé `utop < file` [https://gitter.im/syl20bnr/spacemacs?at=6204cf1751bd8b580c978506]
[12:14:31] <FromGitter> <lebensterben> what do you mean by first case and second case
[12:14:58] <FromGitter> <lebensterben> when you use start-process you're starting an "async" subprocess
[12:15:52] <FromGitter> <alsoijw> First case is python, second case is utop.
[12:15:58] <FromGitter> <lebensterben> it's possible that Emacs evaluated its expression so fast that the Python subprocess doesn't  have enough time to finish the calculation and shows the result
[12:16:49] <FromGitter> <alsoijw> ```code paste, see link``` [https://gitter.im/syl20bnr/spacemacs?at=6204d0f9a41d896a208afab4]
[12:19:00] <FromGitter> <lebensterben> wait longer?
[12:31:17] *** Joins: swodig112 (~swodig112@gateway/tor-sasl/swodig112)
[14:06:05] *** Joins: vancz_ (~vancz@user/vancz)
[14:11:02] *** Quits: vancz (~vancz@user/vancz) (*.net *.split)
[14:11:03] *** Quits: asdflkj_sh (asdflkj@user/asdflkj-sh/x-6013523) (*.net *.split)
[14:16:13] *** Joins: asdflkj_sh (asdflkj@user/asdflkj-sh/x-6013523)
[15:13:20] *** Joins: Unicorn_Princess (~Unicorn_P@93-103-228-248.dynamic.t-2.net)
[16:43:10] *** Quits: henry40408 (~henry4040@175.181.155.165) (Read error: Connection reset by peer)
[16:45:06] *** Joins: henry40408 (~henry4040@123-204-141-191.adsl.dynamic.seed.net.tw)
[17:00:06] <FromGitter> <Paraquat_gitlab> Hi, been using spacemacs daily for some time, but I'm having a problem with `projectile-find-other-file`: it used to be bound to `space m g a`, but this is now bound to `xref-find-apropos`. Is this  a developer-side change? If not, how can I change it back?
[18:13:08] <FromGitter> <lebensterben> this is the binding for c-c++-mode
[18:13:43] <FromGitter> <lebensterben> you're not the first one reporting this though
[18:14:28] <FromGitter> <lebensterben> https://github.com/syl20bnr/spacemacs/blob/4ebd512d140f5743ec731ab5147330ccf0e626c4/layers/%2Blang/c-c%2B%2B/packages.el#L101 ‚èé  ‚èé I don't know ow why it stopped working.
[18:17:11] <FromGitter> <lebensterben> if you're willing to help, you can use "git bisect" to find out which commit breaks it
[19:14:03] <FromGitter> <Paraquat_gitlab> Will do, thanks
[19:24:17] <FromGitter> <Paraquat_gitlab> Looks like the first bad commit is 1d45278a71275cc3e22d136389b6f030d69f50b4 - I took a look at the diff but have no idea what the problem could be
[19:30:37] *** Quits: fahrradToken (~fahrradTo@2a02:810b:149f:f0f4::e3bb) (Ping timeout: 240 seconds)
[20:19:11] <FromGitter> <lebensterben> what if you set lsp-use-upstream-bindings to nil?
[20:19:42] <FromGitter> <lebensterben> if this commit breaks the key-binding, this setting should avoid it
[20:29:23] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
[21:55:57] *** Quits: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed) (Ping timeout: 250 seconds)
[22:53:17] *** Joins: osfe (~lemaire@37.165.123.29)
[23:35:47] *** Quits: osfe (~lemaire@37.165.123.29) (Ping timeout: 256 seconds)
[23:53:00] *** Joins: ur5us (~ur5us@2406:e002:6d58:d101:23b2:b738:8a21:f7ed)
